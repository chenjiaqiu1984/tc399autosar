	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\BswM\\Implementation\\.BswM.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\BswM\\Implementation\\BswM.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\BswM\\Implementation\\BswM.src ..\\component\\BswM\\Implementation\\BswM.c"
	.compiler_name		"ctc"
	;source	'..\\component\\BswM\\Implementation\\BswM.c'

	
$TC162
	
	.sdecl	'.text.BswM.BswM_ProcessQueuedRequests',code,cluster('BswM_ProcessQueuedRequests')
	.sect	'.text.BswM.BswM_ProcessQueuedRequests'
	.align	2
	

; ..\component\BswM\Implementation\BswM.c	     1  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	     2   *  COPYRIGHT
; ..\component\BswM\Implementation\BswM.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\BswM\Implementation\BswM.c	     4   *  \verbatim
; ..\component\BswM\Implementation\BswM.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\BswM\Implementation\BswM.c	     6   * 
; ..\component\BswM\Implementation\BswM.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\BswM\Implementation\BswM.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\BswM\Implementation\BswM.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\BswM\Implementation\BswM.c	    10   *  \endverbatim
; ..\component\BswM\Implementation\BswM.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\BswM\Implementation\BswM.c	    12   *  FILE DESCRIPTION
; ..\component\BswM\Implementation\BswM.c	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\BswM\Implementation\BswM.c	    14  /**        \file  BswM.c
; ..\component\BswM\Implementation\BswM.c	    15   *        \brief  MICROSAR Basic Software Mode Manager
; ..\component\BswM\Implementation\BswM.c	    16   *
; ..\component\BswM\Implementation\BswM.c	    17   *      \details  Implements AUTOSAR BswM.
; ..\component\BswM\Implementation\BswM.c	    18   *
; ..\component\BswM\Implementation\BswM.c	    19   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	    20  
; ..\component\BswM\Implementation\BswM.c	    21  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	    22   *  REVISION HISTORY
; ..\component\BswM\Implementation\BswM.c	    23   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\BswM\Implementation\BswM.c	    24   *  Refer to the module's header file.
; ..\component\BswM\Implementation\BswM.c	    25   * 
; ..\component\BswM\Implementation\BswM.c	    26   *  FILE VERSION
; ..\component\BswM\Implementation\BswM.c	    27   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\BswM\Implementation\BswM.c	    28   *  Refer to the VERSION CHECK below.
; ..\component\BswM\Implementation\BswM.c	    29   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	    30  
; ..\component\BswM\Implementation\BswM.c	    31  #define BSWM_SOURCE
; ..\component\BswM\Implementation\BswM.c	    32  
; ..\component\BswM\Implementation\BswM.c	    33  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	    34   *  INCLUDES
; ..\component\BswM\Implementation\BswM.c	    35   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	    36  #include "BswM.h"
; ..\component\BswM\Implementation\BswM.c	    37  #include "BswM_Private_Cfg.h"
; ..\component\BswM\Implementation\BswM.c	    38  #if ( BSWM_DEV_ERROR_REPORT == STD_ON )
; ..\component\BswM\Implementation\BswM.c	    39  # include "Det.h"
; ..\component\BswM\Implementation\BswM.c	    40  #endif
; ..\component\BswM\Implementation\BswM.c	    41  
; ..\component\BswM\Implementation\BswM.c	    42  #include "SchM_BswM.h"
; ..\component\BswM\Implementation\BswM.c	    43  
; ..\component\BswM\Implementation\BswM.c	    44  #if ( BSWM_ENABLE_WDGM == STD_ON )
; ..\component\BswM\Implementation\BswM.c	    45  /* BswM_WdgM.h is included here instead of BswM_Private_Cfg.h because it includes Os.h */
; ..\component\BswM\Implementation\BswM.c	    46  # include "BswM_WdgM.h"
; ..\component\BswM\Implementation\BswM.c	    47  #endif
; ..\component\BswM\Implementation\BswM.c	    48  
; ..\component\BswM\Implementation\BswM.c	    49  #if (BSWM_USE_ECUM_BSW_ERROR_HOOK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	    50  # include "EcuM_Error.h"
; ..\component\BswM\Implementation\BswM.c	    51  #endif
; ..\component\BswM\Implementation\BswM.c	    52  
; ..\component\BswM\Implementation\BswM.c	    53  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	    54   *  VERSION CHECK
; ..\component\BswM\Implementation\BswM.c	    55   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	    56  /* vendor specific version information is BCD coded */
; ..\component\BswM\Implementation\BswM.c	    57  #if((BSWM_SW_MAJOR_VERSION != (0x14)) || \ 
; ..\component\BswM\Implementation\BswM.c	    58      (BSWM_SW_MINOR_VERSION != (0x00)) || \ 
; ..\component\BswM\Implementation\BswM.c	    59      (BSWM_SW_PATCH_VERSION != (0x00)) )
; ..\component\BswM\Implementation\BswM.c	    60  # error "Vendor specific version numbers of BswM.c and BswM.h are inconsistent"
; ..\component\BswM\Implementation\BswM.c	    61  #endif
; ..\component\BswM\Implementation\BswM.c	    62  
; ..\component\BswM\Implementation\BswM.c	    63  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	    64   *  LOCAL CONSTANT MACROS
; ..\component\BswM\Implementation\BswM.c	    65   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	    66  #define BSWM_REQUEST_SEMAPHORE_UNLOCKED   (0u)
; ..\component\BswM\Implementation\BswM.c	    67  #define BSWM_REQUEST_SEMAPHORE_LOCKED     (1u)
; ..\component\BswM\Implementation\BswM.c	    68  
; ..\component\BswM\Implementation\BswM.c	    69  #if(BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	    70  # define BSWM_REQUEST_IDLE                (0x00u)
; ..\component\BswM\Implementation\BswM.c	    71  # define BSWM_REQUEST_QUEUED              (0x01u)
; ..\component\BswM\Implementation\BswM.c	    72  # define BSWM_REQUEST_PROCESSED           (0x02u)
; ..\component\BswM\Implementation\BswM.c	    73  # define BSWM_REQUEST_PENDING             (0x03u)
; ..\component\BswM\Implementation\BswM.c	    74  # define BSWM_REQUEST_QUEUE_RELEASE       (0x04u)
; ..\component\BswM\Implementation\BswM.c	    75  #endif
; ..\component\BswM\Implementation\BswM.c	    76  
; ..\component\BswM\Implementation\BswM.c	    77  #define BSWM_ACTIONLIST_IDLE              (0x00u)
; ..\component\BswM\Implementation\BswM.c	    78  #define BSWM_ACTIONLIST_PENDING           (0x01u)
; ..\component\BswM\Implementation\BswM.c	    79  #define BSWM_ACTIONLIST_BLOCKED           (0xFFu)
; ..\component\BswM\Implementation\BswM.c	    80  
; ..\component\BswM\Implementation\BswM.c	    81  #define BSWM_INVALID_PARTITION            (0xFFu)
; ..\component\BswM\Implementation\BswM.c	    82  
; ..\component\BswM\Implementation\BswM.c	    83  #define BSWM_SYNC_LEVEL_ONE               (0x01u)
; ..\component\BswM\Implementation\BswM.c	    84  #define BSWM_SYNC_LEVEL_TWO               (0x02u)
; ..\component\BswM\Implementation\BswM.c	    85  
; ..\component\BswM\Implementation\BswM.c	    86  
; ..\component\BswM\Implementation\BswM.c	    87  #if !defined (BSWM_LOCAL) /* COV_BSWM_LOCAL TX */
; ..\component\BswM\Implementation\BswM.c	    88  # define BSWM_LOCAL static
; ..\component\BswM\Implementation\BswM.c	    89  #endif
; ..\component\BswM\Implementation\BswM.c	    90  
; ..\component\BswM\Implementation\BswM.c	    91  #if !defined (BSWM_LOCAL_INLINE) /* COV_BSWM_LOCAL_INLINE TX */
; ..\component\BswM\Implementation\BswM.c	    92  # define BSWM_LOCAL_INLINE LOCAL_INLINE
; ..\component\BswM\Implementation\BswM.c	    93  #endif
; ..\component\BswM\Implementation\BswM.c	    94  
; ..\component\BswM\Implementation\BswM.c	    95  #if defined ECUM_WKSTATUS_ENABLED /* COV_BSWM_ECUM_COMPATIBILITY */
; ..\component\BswM\Implementation\BswM.c	    96  # define BSWM_ECUM_MAX_WKSTATUS ECUM_WKSTATUS_ENABLED
; ..\component\BswM\Implementation\BswM.c	    97  #elif defined ECUM_WKSTATUS_CHECKWAKEUP /* COV_BSWM_ECUM_COMPATIBILITY */
; ..\component\BswM\Implementation\BswM.c	    98  # define BSWM_ECUM_MAX_WKSTATUS ECUM_WKSTATUS_CHECKWAKEUP
; ..\component\BswM\Implementation\BswM.c	    99  #else /* COV_BSWM_ECUM_COMPATIBILITY */
; ..\component\BswM\Implementation\BswM.c	   100  # define BSWM_ECUM_MAX_WKSTATUS ECUM_WKSTATUS_DISABLED
; ..\component\BswM\Implementation\BswM.c	   101  #endif
; ..\component\BswM\Implementation\BswM.c	   102  
; ..\component\BswM\Implementation\BswM.c	   103  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   104   *  LOCAL FUNCTION MACROS
; ..\component\BswM\Implementation\BswM.c	   105   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   106  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   107  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   108  /* PRQA S 3453 1 */ /* MD_MSR_FctLikeMacro */
; ..\component\BswM\Implementation\BswM.c	   109  #  define BSWM_CALL_IMMEDIATE(start, end, sid, partitionIdx) BswM_ImmediateModeRequest((BswM_SizeOfImmediateUserType)(start), (BswM_SizeOfImmediateUserType)(end), (sid), (partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   110  # else
; ..\component\BswM\Implementation\BswM.c	   111  /* PRQA S 3453 1 */ /* MD_MSR_FctLikeMacro */
; ..\component\BswM\Implementation\BswM.c	   112  #  define BSWM_CALL_IMMEDIATE(start, end, sid, partitionIdx) BswM_ImmediateModeRequest((BswM_SizeOfImmediateUserType)(start), (BswM_SizeOfImmediateUserType)(end), (partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   113  # endif
; ..\component\BswM\Implementation\BswM.c	   114  #endif
; ..\component\BswM\Implementation\BswM.c	   115  
; ..\component\BswM\Implementation\BswM.c	   116  /* Dummy Statements */
; ..\component\BswM\Implementation\BswM.c	   117  #if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   118  # define BSWM_DUMMY_STATEMENT_DET_OFF(statement) /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   119  #else
; ..\component\BswM\Implementation\BswM.c	   120  # define BSWM_DUMMY_STATEMENT_DET_OFF(statement) BSWM_DUMMY_STATEMENT((statement)) /* PRQA S 1338, 2983, 3112, 3453 */ /* MD_MSR_DummyStmt, MD_MSR_DummyStmt, MD_MSR_DummyStmt, MD_MSR_FctLikeMacro */
; ..\component\BswM\Implementation\BswM.c	   121  #endif
; ..\component\BswM\Implementation\BswM.c	   122  
; ..\component\BswM\Implementation\BswM.c	   123  #if (BSWM_DEV_ERROR_DETECT == STD_ON) && (BSWM_MODE_CHECK == STD_ON) /* COV_BSWM_DEV_ERROR_DETECT TF tx tf */
; ..\component\BswM\Implementation\BswM.c	   124  # define BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(statement) /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   125  #else
; ..\component\BswM\Implementation\BswM.c	   126  # define BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(statement) BSWM_DUMMY_STATEMENT((statement)) /* PRQA S 1338, 2983, 3112, 3453 */ /* MD_MSR_DummyStmt, MD_MSR_DummyStmt, MD_MSR_DummyStmt, MD_MSR_FctLikeMacro */
; ..\component\BswM\Implementation\BswM.c	   127  #endif
; ..\component\BswM\Implementation\BswM.c	   128  
; ..\component\BswM\Implementation\BswM.c	   129  #if (BSWM_MULTIPARTITION == STD_OFF)
; ..\component\BswM\Implementation\BswM.c	   130  # define BswM_GetPartitionIdx() 0u
; ..\component\BswM\Implementation\BswM.c	   131  #endif
; ..\component\BswM\Implementation\BswM.c	   132  
; ..\component\BswM\Implementation\BswM.c	   133  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   134   * Development Error Detection                                                                                       
; ..\component\BswM\Implementation\BswM.c	   135   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   136  #define BswM_EnterCriticalArea_0()      SchM_Enter_BswM_BSWM_EXCLUSIVE_AREA_0()
; ..\component\BswM\Implementation\BswM.c	   137  #define BswM_LeaveCriticalArea_0()      SchM_Exit_BswM_BSWM_EXCLUSIVE_AREA_0()
; ..\component\BswM\Implementation\BswM.c	   138  
; ..\component\BswM\Implementation\BswM.c	   139  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   140   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\BswM\Implementation\BswM.c	   141   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   142  
; ..\component\BswM\Implementation\BswM.c	   143  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   144   *  LOCAL DATA PROTOTYPES
; ..\component\BswM\Implementation\BswM.c	   145   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   146  
; ..\component\BswM\Implementation\BswM.c	   147  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   148   *  LOCAL DATA
; ..\component\BswM\Implementation\BswM.c	   149   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   150  
; ..\component\BswM\Implementation\BswM.c	   151  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   152   *  GLOBAL DATA
; ..\component\BswM\Implementation\BswM.c	   153   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   154  #define BSWM_START_SEC_VAR_NOINIT_UNSPECIFIED
; ..\component\BswM\Implementation\BswM.c	   155  /* PRQA S 5087 1 */ /* MD_MSR_MemMap */
; ..\component\BswM\Implementation\BswM.c	   156  #include "BswM_vMemMap.h"
; ..\component\BswM\Implementation\BswM.c	   157  
; ..\component\BswM\Implementation\BswM.c	   158  #if (BSWM_USE_INIT_POINTER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   159  P2CONST(BswM_ConfigType, AUTOMATIC, BSWM_PBCFG) BswM_ConfigPtr;
; ..\component\BswM\Implementation\BswM.c	   160  #endif
; ..\component\BswM\Implementation\BswM.c	   161  
; ..\component\BswM\Implementation\BswM.c	   162  #define BSWM_STOP_SEC_VAR_NOINIT_UNSPECIFIED
; ..\component\BswM\Implementation\BswM.c	   163  /* PRQA S 5087 1 */ /* MD_MSR_MemMap */
; ..\component\BswM\Implementation\BswM.c	   164  #include "BswM_vMemMap.h"
; ..\component\BswM\Implementation\BswM.c	   165  
; ..\component\BswM\Implementation\BswM.c	   166  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   167   *  LOCAL FUNCTION PROTOTYPES
; ..\component\BswM\Implementation\BswM.c	   168   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   169  #define BSWM_START_SEC_CODE
; ..\component\BswM\Implementation\BswM.c	   170  /* PRQA S 5087 1 */ /* MD_MSR_MemMap */
; ..\component\BswM\Implementation\BswM.c	   171  #include "BswM_vMemMap.h"
; ..\component\BswM\Implementation\BswM.c	   172  
; ..\component\BswM\Implementation\BswM.c	   173  #if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   174  /***********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   175   *  BswM_CreatePartitionLookUpTable()
; ..\component\BswM\Implementation\BswM.c	   176   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   177  /*! \brief      Creates the lookup table of external OsApplications to the internal BswM index
; ..\component\BswM\Implementation\BswM.c	   178   * \details     -
; ..\component\BswM\Implementation\BswM.c	   179   * \pre         -
; ..\component\BswM\Implementation\BswM.c	   180   * \context     TASK
; ..\component\BswM\Implementation\BswM.c	   181   * \reentrant   TRUE
; ..\component\BswM\Implementation\BswM.c	   182   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   183   * \note        Called by BswM_PreInit function
; ..\component\BswM\Implementation\BswM.c	   184   */
; ..\component\BswM\Implementation\BswM.c	   185  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_CreatePartitionLookUpTable(void);
; ..\component\BswM\Implementation\BswM.c	   186  #endif
; ..\component\BswM\Implementation\BswM.c	   187  
; ..\component\BswM\Implementation\BswM.c	   188  #if(BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   189  /***********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   190   *  BswM_ProcessQueuedRequests()
; ..\component\BswM\Implementation\BswM.c	   191   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   192  /*! \brief      Called by mode request functions in order to process other pending immediate requests.
; ..\component\BswM\Implementation\BswM.c	   193   * \details     Arbitrate rules and execute action lists of queued immediate requests.
; ..\component\BswM\Implementation\BswM.c	   194   * \pre         Global queue semaphore is locked.
; ..\component\BswM\Implementation\BswM.c	   195   * \param[in]   partitionIdx: Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   196   * \context     TASK|ISR1|ISR2
; ..\component\BswM\Implementation\BswM.c	   197   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   198   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   199   * \note        Called by BswM mode request functions.
; ..\component\BswM\Implementation\BswM.c	   200   */
; ..\component\BswM\Implementation\BswM.c	   201  BSWM_LOCAL FUNC(void, BSWM_CODE) BswM_ProcessQueuedRequests(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   202  
; ..\component\BswM\Implementation\BswM.c	   203  /***********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   204   *  BswM_ReleaseQueue()
; ..\component\BswM\Implementation\BswM.c	   205   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   206  /*! \brief      Releases processed requests from the queue.
; ..\component\BswM\Implementation\BswM.c	   207   * \details     Iterates over the queue and set processed requests to idle and pending requests to queued.
; ..\component\BswM\Implementation\BswM.c	   208   * \pre         -
; ..\component\BswM\Implementation\BswM.c	   209   * \param[in]   partitionIdx: Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   210   * \context     TASK|ISR1|ISR2
; ..\component\BswM\Implementation\BswM.c	   211   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   212   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   213   * \note        Only called by BswM_ProcessQueuedRequests.
; ..\component\BswM\Implementation\BswM.c	   214   */
; ..\component\BswM\Implementation\BswM.c	   215  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ReleaseQueue(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   216  #endif
; ..\component\BswM\Implementation\BswM.c	   217  
; ..\component\BswM\Implementation\BswM.c	   218  #if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   219  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   220   *  BswM_PushIntoActionListQueue()
; ..\component\BswM\Implementation\BswM.c	   221   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   222  /*! \brief      Insert new action list to be executed into the Action List queue.
; ..\component\BswM\Implementation\BswM.c	   223   * \details     Inserts action list index into the priority queue.
; ..\component\BswM\Implementation\BswM.c	   224   * \param[in]   actionListIndex The index of the Action List to execute
; ..\component\BswM\Implementation\BswM.c	   225   * \param[in]   partitionIdx: Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   226   * \pre         actionListIndex is not already queued and BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   227   * \context     TASK|ISR1|ISR2
; ..\component\BswM\Implementation\BswM.c	   228   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   229   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   230   * \trace       DSGN-BswM24022
; ..\component\BswM\Implementation\BswM.c	   231   * \note        Called by BswM_ProcessQueuedRequests, BswM_ExecuteDeferredRules, BswM_ExecuteForcedImmediateUser
; ..\component\BswM\Implementation\BswM.c	   232   */
; ..\component\BswM\Implementation\BswM.c	   233  BSWM_LOCAL FUNC(void, BSWM_CODE) BswM_PushIntoActionListQueue(BswM_SizeOfActionListQueueType actionListIndex, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   234  
; ..\component\BswM\Implementation\BswM.c	   235  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   236   *  BswM_PopFromActionListQueue()
; ..\component\BswM\Implementation\BswM.c	   237   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   238  /*! \brief      Gets the next minimum action list index from the action list queue with the given executionLevel
; ..\component\BswM\Implementation\BswM.c	   239   * \details     Determines the minimum action list index from the priority queue with the given executionLevel and deletes
; ..\component\BswM\Implementation\BswM.c	   240   *              the element from the priority queue.
; ..\component\BswM\Implementation\BswM.c	   241   *              If no element can be found, BswM_GetSizeOfActionListQueue() is returned.
; ..\component\BswM\Implementation\BswM.c	   242   * \param[in]   executionLevel The executionLevel of the current action list execution context
; ..\component\BswM\Implementation\BswM.c	   243   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   244   * \return      The action list index or BswM_GetSizeOfActionListQueue() if not found
; ..\component\BswM\Implementation\BswM.c	   245   * \pre         BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   246   * \context     TASK|ISR1|ISR2
; ..\component\BswM\Implementation\BswM.c	   247   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   248   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   249   * \trace       DSGN-BswM24022
; ..\component\BswM\Implementation\BswM.c	   250   * \note        Called by BswM_ProcessQueuedRequests, BswM_ExecuteDeferredRules, BswM_ExecuteForcedImmediateUser
; ..\component\BswM\Implementation\BswM.c	   251   */
; ..\component\BswM\Implementation\BswM.c	   252  BSWM_LOCAL FUNC(BswM_SizeOfActionListQueueType, BSWM_CODE) BswM_PopFromActionListQueue(uint8 executionLevel, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   253  
; ..\component\BswM\Implementation\BswM.c	   254  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   255   *  BswM_DetermineMinimalQueueIdx()
; ..\component\BswM\Implementation\BswM.c	   256   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   257  /*! \brief      Gets the next minimum action list queue index with the given executionLevel.
; ..\component\BswM\Implementation\BswM.c	   258   * \details     If no element can be found, BswM_GetSizeOfActionListPriorityQueue() is returned.
; ..\component\BswM\Implementation\BswM.c	   259   * \param[in]   executionLevel The executionLevel of the current action list execution context.
; ..\component\BswM\Implementation\BswM.c	   260   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   261   * \return      The action list index or BswM_GetSizeOfActionListQueue() if not found
; ..\component\BswM\Implementation\BswM.c	   262   * \pre         BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   263   * \context     TASK|ISR1|ISR2
; ..\component\BswM\Implementation\BswM.c	   264   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   265   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   266   * \trace       DSGN-BswM24022
; ..\component\BswM\Implementation\BswM.c	   267   * \note        Called by BswM_PopFromActionListQueue
; ..\component\BswM\Implementation\BswM.c	   268   */
; ..\component\BswM\Implementation\BswM.c	   269  BSWM_LOCAL_INLINE FUNC(BswM_SizeOfActionListPriorityQueueType, BSWM_CODE) BswM_DetermineMinimalQueueIdx(uint8 executionLevel, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   270  
; ..\component\BswM\Implementation\BswM.c	   271  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   272   *  BswM_RemoveIdxFromQueue()
; ..\component\BswM\Implementation\BswM.c	   273   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   274  /*! \brief      Removes the given index from the priority queue.
; ..\component\BswM\Implementation\BswM.c	   275   * \details     The index with the given id is removed from the priority queue and the property of the minimal heap
; ..\component\BswM\Implementation\BswM.c	   276                  is restored.
; ..\component\BswM\Implementation\BswM.c	   277   * \param[in]   executionLevel The executionLevel of the current action list execution context.
; ..\component\BswM\Implementation\BswM.c	   278   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   279   * \pre         BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   280   * \context     TASK|ISR1|ISR2
; ..\component\BswM\Implementation\BswM.c	   281   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   282   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   283   * \trace       DSGN-BswM24022
; ..\component\BswM\Implementation\BswM.c	   284   * \note        Called by BswM_PopFromActionListQueue
; ..\component\BswM\Implementation\BswM.c	   285   */
; ..\component\BswM\Implementation\BswM.c	   286  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_RemoveIdxFromQueue(BswM_SizeOfActionListPriorityQueueType index, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   287  #endif
; ..\component\BswM\Implementation\BswM.c	   288  
; ..\component\BswM\Implementation\BswM.c	   289  #if (BSWM_TIMERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   290  /***********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   291   *  BswM_DecreaseTimer()
; ..\component\BswM\Implementation\BswM.c	   292   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   293  /*! \brief      Decreases the running timer of BswM.
; ..\component\BswM\Implementation\BswM.c	   294   * \details     Iterates over all timers and decrease running ones. If a timer reaches zero, state of the timer is set
; ..\component\BswM\Implementation\BswM.c	   295   *              to expired.
; ..\component\BswM\Implementation\BswM.c	   296   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   297   * \pre         Interrupts must be blocked.
; ..\component\BswM\Implementation\BswM.c	   298   * \context     TASK
; ..\component\BswM\Implementation\BswM.c	   299   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   300   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   301   * \note        May only be called by BswM_MainFunction.
; ..\component\BswM\Implementation\BswM.c	   302   */
; ..\component\BswM\Implementation\BswM.c	   303  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_DecreaseTimer(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   304  #endif
; ..\component\BswM\Implementation\BswM.c	   305  
; ..\component\BswM\Implementation\BswM.c	   306  #if (BSWM_ACTIONLISTS == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   307  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   308   *  BswM_ExecuteActionLists()
; ..\component\BswM\Implementation\BswM.c	   309   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   310  /*! \brief      Executes queued action lists.
; ..\component\BswM\Implementation\BswM.c	   311   * \details     Iterates over all action lists and executes the action if it is queued with the given executionLevel.
; ..\component\BswM\Implementation\BswM.c	   312   * \param[in]   executionLevel         executionLevel of action list which shall be executed.
; ..\component\BswM\Implementation\BswM.c	   313   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   314   * \pre         BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   315   * \context     ANY
; ..\component\BswM\Implementation\BswM.c	   316   * \reentrant   TRUE
; ..\component\BswM\Implementation\BswM.c	   317   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   318   */
; ..\component\BswM\Implementation\BswM.c	   319  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ExecuteActionLists(uint8 executionLevel, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   320  #endif
; ..\component\BswM\Implementation\BswM.c	   321  
; ..\component\BswM\Implementation\BswM.c	   322  #if (BSWM_DEFERREDRULES == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   323  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   324   *  BswM_ExecuteDeferredRules()
; ..\component\BswM\Implementation\BswM.c	   325   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   326  /*! \brief      Executes deferred rules.
; ..\component\BswM\Implementation\BswM.c	   327   * \details     Arbitrates all deferred rules and executes the corresponding action lists.
; ..\component\BswM\Implementation\BswM.c	   328   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   329   * \pre         BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   330   * \context     TASK
; ..\component\BswM\Implementation\BswM.c	   331   * \reentrant   FALSE
; ..\component\BswM\Implementation\BswM.c	   332   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   333   */
; ..\component\BswM\Implementation\BswM.c	   334  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ExecuteDeferredRules(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   335  #endif
; ..\component\BswM\Implementation\BswM.c	   336  
; ..\component\BswM\Implementation\BswM.c	   337  #if (BSWM_FORCEDOFIMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   338  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   339   *  BswM_ExecuteForcedImmediateUser()
; ..\component\BswM\Implementation\BswM.c	   340   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   341  /*! \brief      Executes a forced immediate user.
; ..\component\BswM\Implementation\BswM.c	   342   * \details     Arbitrates corresponding rules of a forced immediate user and executes the corresponding action lists.
; ..\component\BswM\Implementation\BswM.c	   343   * \param[in]   immediateUserIndex   Index of an immediate user.
; ..\component\BswM\Implementation\BswM.c	   344   * \param[in]   partitionIdx Index of current partition Context
; ..\component\BswM\Implementation\BswM.c	   345   * \pre         BSWM_EXCLUSIVE_AREA_0 must be entered.
; ..\component\BswM\Implementation\BswM.c	   346   * \context     ANY
; ..\component\BswM\Implementation\BswM.c	   347   * \reentrant   TRUE
; ..\component\BswM\Implementation\BswM.c	   348   * \synchronous TRUE
; ..\component\BswM\Implementation\BswM.c	   349   * \note        Only called by BswM_ImmediateModeRequest.
; ..\component\BswM\Implementation\BswM.c	   350   */
; ..\component\BswM\Implementation\BswM.c	   351  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ExecuteForcedImmediateUser(BswM_SizeOfImmediateUserType immediateUserIndex, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   352  #endif
; ..\component\BswM\Implementation\BswM.c	   353  
; ..\component\BswM\Implementation\BswM.c	   354  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   355   *  LOCAL FUNCTIONS
; ..\component\BswM\Implementation\BswM.c	   356   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   357  # if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   358  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   359   *  BswM_CreatePartitionLookUpTable()
; ..\component\BswM\Implementation\BswM.c	   360   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   361  /*!
; ..\component\BswM\Implementation\BswM.c	   362   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   363   *
; ..\component\BswM\Implementation\BswM.c	   364   *
; ..\component\BswM\Implementation\BswM.c	   365   *
; ..\component\BswM\Implementation\BswM.c	   366   *
; ..\component\BswM\Implementation\BswM.c	   367   *
; ..\component\BswM\Implementation\BswM.c	   368   */
; ..\component\BswM\Implementation\BswM.c	   369  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_CreatePartitionLookUpTable(void)
; ..\component\BswM\Implementation\BswM.c	   370  {
; ..\component\BswM\Implementation\BswM.c	   371    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   372    BswM_PartitionIdentifiersIterType partitionIdIterator;
; ..\component\BswM\Implementation\BswM.c	   373    uint16 arrayIndexCount;
; ..\component\BswM\Implementation\BswM.c	   374  
; ..\component\BswM\Implementation\BswM.c	   375    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   376    
; ..\component\BswM\Implementation\BswM.c	   377    /* #10 Iterate over all entries in the OsApplication LookUp Table
; ..\component\BswM\Implementation\BswM.c	   378     *      Initialize the variable with 0xFF
; ..\component\BswM\Implementation\BswM.c	   379     *      Iterate over all entries of the partition identifiers
; ..\component\BswM\Implementation\BswM.c	   380     *       Enter the internal BswM index at the correct OsApplication index
; ..\component\BswM\Implementation\BswM.c	   381     */
; ..\component\BswM\Implementation\BswM.c	   382    for (arrayIndexCount = 0u; arrayIndexCount < BswM_GetSizeOfOsApplicationToBswM(); arrayIndexCount++) /* COV_BSWM_PART_ARRAY TX */
; ..\component\BswM\Implementation\BswM.c	   383    {
; ..\component\BswM\Implementation\BswM.c	   384      BswM_SetOsApplicationToBswM(0xFFu, arrayIndexCount); /* SBSW_BSWM_OSAPPLICATIONTOBSWM */
; ..\component\BswM\Implementation\BswM.c	   385  
; ..\component\BswM\Implementation\BswM.c	   386      for (partitionIdIterator = 0u; partitionIdIterator < BswM_GetSizeOfPartitionIdentifiers(); partitionIdIterator++)
; ..\component\BswM\Implementation\BswM.c	   387      {
; ..\component\BswM\Implementation\BswM.c	   388        if ( (uint16)BswM_GetPartitionSNVOfPartitionIdentifiers(partitionIdIterator) == arrayIndexCount )
; ..\component\BswM\Implementation\BswM.c	   389        {
; ..\component\BswM\Implementation\BswM.c	   390          BswM_SetOsApplicationToBswM(BswM_GetPCPartitionConfigIdxOfPartitionIdentifiers(partitionIdIterator), arrayIndexCount); /* SBSW_BSWM_OSAPPLICATIONTOBSWM */
; ..\component\BswM\Implementation\BswM.c	   391          break;
; ..\component\BswM\Implementation\BswM.c	   392        }
; ..\component\BswM\Implementation\BswM.c	   393      }
; ..\component\BswM\Implementation\BswM.c	   394    }
; ..\component\BswM\Implementation\BswM.c	   395  }
; ..\component\BswM\Implementation\BswM.c	   396  
; ..\component\BswM\Implementation\BswM.c	   397  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   398   *  BswM_GetInternalPartitionIdx()
; ..\component\BswM\Implementation\BswM.c	   399   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   400  /*!
; ..\component\BswM\Implementation\BswM.c	   401   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   402   *
; ..\component\BswM\Implementation\BswM.c	   403   *
; ..\component\BswM\Implementation\BswM.c	   404   *
; ..\component\BswM\Implementation\BswM.c	   405   *
; ..\component\BswM\Implementation\BswM.c	   406   */
; ..\component\BswM\Implementation\BswM.c	   407  FUNC(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType, BSWM_CODE) BswM_GetInternalPartitionIdx(ApplicationType osApplication)
; ..\component\BswM\Implementation\BswM.c	   408  {
; ..\component\BswM\Implementation\BswM.c	   409    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   410    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType retVal = 0xFFu;
; ..\component\BswM\Implementation\BswM.c	   411  
; ..\component\BswM\Implementation\BswM.c	   412    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   413    /* #10 Check if passed osApplication is in range
; ..\component\BswM\Implementation\BswM.c	   414     *      Return internal index
; ..\component\BswM\Implementation\BswM.c	   415     *      Return 0xFF if osApplication is not in range
; ..\component\BswM\Implementation\BswM.c	   416     */
; ..\component\BswM\Implementation\BswM.c	   417    if ((uint16)osApplication < BswM_GetSizeOfOsApplicationToBswM())
; ..\component\BswM\Implementation\BswM.c	   418    {
; ..\component\BswM\Implementation\BswM.c	   419      retVal = BswM_GetOsApplicationToBswM(osApplication);
; ..\component\BswM\Implementation\BswM.c	   420    }
; ..\component\BswM\Implementation\BswM.c	   421  
; ..\component\BswM\Implementation\BswM.c	   422    return retVal;
; ..\component\BswM\Implementation\BswM.c	   423  }
; ..\component\BswM\Implementation\BswM.c	   424  #else
; ..\component\BswM\Implementation\BswM.c	   425  # define BswM_GetInternalPartitionIdx(index) 0u
; ..\component\BswM\Implementation\BswM.c	   426  #endif
; ..\component\BswM\Implementation\BswM.c	   427  
; ..\component\BswM\Implementation\BswM.c	   428  #if((BSWM_RULES == STD_ON) && (BSWM_FUNCTION_BASED == STD_OFF))
; ..\component\BswM\Implementation\BswM.c	   429  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   430   *  BswM_ArbitrateRule()
; ..\component\BswM\Implementation\BswM.c	   431   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   432  /*!
; ..\component\BswM\Implementation\BswM.c	   433   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   434   *
; ..\component\BswM\Implementation\BswM.c	   435   *
; ..\component\BswM\Implementation\BswM.c	   436   *
; ..\component\BswM\Implementation\BswM.c	   437   *
; ..\component\BswM\Implementation\BswM.c	   438   *
; ..\component\BswM\Implementation\BswM.c	   439   *
; ..\component\BswM\Implementation\BswM.c	   440   */
; ..\component\BswM\Implementation\BswM.c	   441  FUNC(BswM_SizeOfActionListsType, BSWM_CODE) BswM_ArbitrateRule(BswM_HandleType ruleId, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   442  {
; ..\component\BswM\Implementation\BswM.c	   443    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   444    uint8 state;
; ..\component\BswM\Implementation\BswM.c	   445    BswM_SizeOfActionListsType actionList = BSWM_NO_ACTIONLIST(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   446  
; ..\component\BswM\Implementation\BswM.c	   447    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   448    if ((ruleId < BswM_GetSizeOfRules(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   449  # if ( BSWM_ENABLE_RULE_CONTROL == STD_ON )
; ..\component\BswM\Implementation\BswM.c	   450        && (BswM_GetRuleStates(BswM_GetRuleStatesIdxOfRules(ruleId, partitionIdx), partitionIdx) != BSWM_DEACTIVATED)
; ..\component\BswM\Implementation\BswM.c	   451  # endif
; ..\component\BswM\Implementation\BswM.c	   452        )
; ..\component\BswM\Implementation\BswM.c	   453    {
; ..\component\BswM\Implementation\BswM.c	   454      if (BswM_GetExpressions(BswM_GetExpressionsIdxOfRules(ruleId, partitionIdx), partitionIdx)(partitionIdx) != 0u) /* SBSW_BSWM_EXPRESSIONFCTPTR */
; ..\component\BswM\Implementation\BswM.c	   455      {
; ..\component\BswM\Implementation\BswM.c	   456  # if ( BSWM_ACTIONLISTSTRUEIDXOFRULES == STD_ON )
; ..\component\BswM\Implementation\BswM.c	   457        actionList = BswM_GetActionListsTrueIdxOfRules(ruleId, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   458  # endif
; ..\component\BswM\Implementation\BswM.c	   459        state = BSWM_TRUE;
; ..\component\BswM\Implementation\BswM.c	   460      }
; ..\component\BswM\Implementation\BswM.c	   461      else
; ..\component\BswM\Implementation\BswM.c	   462      {
; ..\component\BswM\Implementation\BswM.c	   463  # if ( BSWM_ACTIONLISTSFALSEIDXOFRULES == STD_ON )
; ..\component\BswM\Implementation\BswM.c	   464        actionList = BswM_GetActionListsFalseIdxOfRules(ruleId, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   465  # endif
; ..\component\BswM\Implementation\BswM.c	   466        state = BSWM_FALSE;
; ..\component\BswM\Implementation\BswM.c	   467      }
; ..\component\BswM\Implementation\BswM.c	   468  
; ..\component\BswM\Implementation\BswM.c	   469  # if (BSWM_CONDITIONALOFACTIONLISTS == STD_OFF || (BSWM_CONDITIONALOFACTIONLISTS == STD_ON && BSWM_ISDEF_CONDITIONALOFACTIONLISTS == STD_OFF))
; ..\component\BswM\Implementation\BswM.c	   470      if ((actionList != BSWM_NO_ACTIONLIST(partitionIdx)) && (BswM_GetRuleStates(BswM_GetRuleStatesIdxOfRules(ruleId, partitionIdx), partitionIdx) == state)
; ..\component\BswM\Implementation\BswM.c	   471  #  if (BSWM_CONDITIONALOFACTIONLISTS == STD_ON )
; ..\component\BswM\Implementation\BswM.c	   472      && (!BswM_IsConditionalOfActionLists(actionList, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   473  #  endif
; ..\component\BswM\Implementation\BswM.c	   474      )
; ..\component\BswM\Implementation\BswM.c	   475      {
; ..\component\BswM\Implementation\BswM.c	   476        /* Action list shall only be executed on trigger but result of expression has not changed */
; ..\component\BswM\Implementation\BswM.c	   477        actionList = BSWM_NO_ACTIONLIST(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   478      }
; ..\component\BswM\Implementation\BswM.c	   479  # endif
; ..\component\BswM\Implementation\BswM.c	   480      BswM_SetRuleStates(BswM_GetRuleStatesIdxOfRules(ruleId, partitionIdx), state, partitionIdx); /* SBSW_BSWM_SETRULESTATE */
; ..\component\BswM\Implementation\BswM.c	   481    }
; ..\component\BswM\Implementation\BswM.c	   482    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   483  
; ..\component\BswM\Implementation\BswM.c	   484    return actionList;
; ..\component\BswM\Implementation\BswM.c	   485  }
; ..\component\BswM\Implementation\BswM.c	   486  #endif
; ..\component\BswM\Implementation\BswM.c	   487  
; ..\component\BswM\Implementation\BswM.c	   488  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   489  
; ..\component\BswM\Implementation\BswM.c	   490  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   491   *  BswM_ReleaseQueue()
; ..\component\BswM\Implementation\BswM.c	   492   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   493  /*!
; ..\component\BswM\Implementation\BswM.c	   494   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   495   *
; ..\component\BswM\Implementation\BswM.c	   496   *
; ..\component\BswM\Implementation\BswM.c	   497   */
; ..\component\BswM\Implementation\BswM.c	   498  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ReleaseQueue(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   499  {
; ..\component\BswM\Implementation\BswM.c	   500    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   501    BswM_ModeRequestQueueIterType queueIndex;
; ..\component\BswM\Implementation\BswM.c	   502  
; ..\component\BswM\Implementation\BswM.c	   503    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   504    BswM_EnterCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   505    for(queueIndex = 0u; queueIndex < BswM_GetSizeOfModeRequestQueue(partitionIdx); queueIndex++)
; ..\component\BswM\Implementation\BswM.c	   506    {
; ..\component\BswM\Implementation\BswM.c	   507      if(BSWM_REQUEST_PROCESSED == BswM_GetModeRequestQueue(queueIndex, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   508      {
; ..\component\BswM\Implementation\BswM.c	   509        BswM_SetModeRequestQueue(queueIndex, BSWM_REQUEST_IDLE, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
; ..\component\BswM\Implementation\BswM.c	   510      }
; ..\component\BswM\Implementation\BswM.c	   511      else if(BSWM_REQUEST_PENDING == BswM_GetModeRequestQueue(queueIndex, partitionIdx)) /* COV_BSWM_MODEREQUESTPENDING */
; ..\component\BswM\Implementation\BswM.c	   512      {
; ..\component\BswM\Implementation\BswM.c	   513        BswM_SetQueueWritten(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   514        BswM_SetModeRequestQueue(queueIndex, BSWM_REQUEST_QUEUED, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
; ..\component\BswM\Implementation\BswM.c	   515      }
; ..\component\BswM\Implementation\BswM.c	   516      else
; ..\component\BswM\Implementation\BswM.c	   517      {
; ..\component\BswM\Implementation\BswM.c	   518        /* nothing to do */
; ..\component\BswM\Implementation\BswM.c	   519      }
; ..\component\BswM\Implementation\BswM.c	   520    }
; ..\component\BswM\Implementation\BswM.c	   521    BswM_LeaveCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   522    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   523  }
; ..\component\BswM\Implementation\BswM.c	   524  
; ..\component\BswM\Implementation\BswM.c	   525  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   526   *  BswM_ProcessQueuedRequests()
; ..\component\BswM\Implementation\BswM.c	   527   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   528  /*!
; ..\component\BswM\Implementation\BswM.c	   529   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   530   *
; ..\component\BswM\Implementation\BswM.c	   531   *
; ..\component\BswM\Implementation\BswM.c	   532   *
; ..\component\BswM\Implementation\BswM.c	   533   *
; ..\component\BswM\Implementation\BswM.c	   534   *
; ..\component\BswM\Implementation\BswM.c	   535   *
; ..\component\BswM\Implementation\BswM.c	   536   *
; ..\component\BswM\Implementation\BswM.c	   537   *
; ..\component\BswM\Implementation\BswM.c	   538   *
; ..\component\BswM\Implementation\BswM.c	   539   */
; ..\component\BswM\Implementation\BswM.c	   540  BSWM_LOCAL FUNC(void, BSWM_CODE) BswM_ProcessQueuedRequests(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; Function BswM_ProcessQueuedRequests
.L101:
BswM_ProcessQueuedRequests:	.type	func
	mov	d8,d4
.L291:

; ..\component\BswM\Implementation\BswM.c	   541  {
; ..\component\BswM\Implementation\BswM.c	   542    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   543    BswM_ModeRequestQueueIterType immediateUserIndex;
; ..\component\BswM\Implementation\BswM.c	   544    BswM_RulesIndIterType ruleIndex;
; ..\component\BswM\Implementation\BswM.c	   545    BswM_SizeOfActionListsType actionListIndex;
; ..\component\BswM\Implementation\BswM.c	   546    boolean executeActionLists = TRUE;
	mov	d9,#1
.L541:
	mov	d10,d9
.L292:

; ..\component\BswM\Implementation\BswM.c	   547    uint8 queueState = BSWM_REQUEST_IDLE;
	mov	d11,#0
.L542:

; ..\component\BswM\Implementation\BswM.c	   548  
; ..\component\BswM\Implementation\BswM.c	   549    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   550  
; ..\component\BswM\Implementation\BswM.c	   551    BswM_EnterCriticalArea_0();
	mov	d12,d11
	call	SuspendAllInterrupts
.L279:

; ..\component\BswM\Implementation\BswM.c	   552    while((executeActionLists == TRUE) && (BswM_IsQueueWritten(partitionIdx)))
; ..\component\BswM\Implementation\BswM.c	   553    {
; ..\component\BswM\Implementation\BswM.c	   554      BswM_SetQueueWritten(FALSE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   555      executeActionLists = FALSE;
; ..\component\BswM\Implementation\BswM.c	   556      for(immediateUserIndex = 0u; immediateUserIndex < BswM_GetSizeOfModeRequestQueue(partitionIdx); immediateUserIndex++)
; ..\component\BswM\Implementation\BswM.c	   557      {
; ..\component\BswM\Implementation\BswM.c	   558        if(BSWM_REQUEST_QUEUED == BswM_GetModeRequestQueue(immediateUserIndex, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   559        { 
; ..\component\BswM\Implementation\BswM.c	   560          for(ruleIndex = BswM_GetRulesIndStartIdxOfImmediateUser(immediateUserIndex, partitionIdx); ruleIndex < BswM_GetRulesIndEndIdxOfImmediateUser(immediateUserIndex, partitionIdx); ruleIndex++)
; ..\component\BswM\Implementation\BswM.c	   561          {
; ..\component\BswM\Implementation\BswM.c	   562            {
; ..\component\BswM\Implementation\BswM.c	   563  # if (BSWM_FUNCTION_BASED == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   564              actionListIndex = BswM_GetFctPtrOfRules(BswM_GetRulesInd(ruleIndex, partitionIdx), partitionIdx)(partitionIdx); /* SBSW_BSWM_RULEFCTPTR */
; ..\component\BswM\Implementation\BswM.c	   565  # else
; ..\component\BswM\Implementation\BswM.c	   566              actionListIndex = BswM_ArbitrateRule((BswM_HandleType)BswM_GetRulesInd(ruleIndex, partitionIdx), partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   567  # endif
; ..\component\BswM\Implementation\BswM.c	   568              if((actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx)) && (BswM_GetActionListQueue(actionListIndex, partitionIdx) == BSWM_ACTIONLIST_IDLE)) /* COV_BSWM_ACTIONLISTIDLE */
; ..\component\BswM\Implementation\BswM.c	   569              {
; ..\component\BswM\Implementation\BswM.c	   570                queueState = BSWM_REQUEST_PROCESSED;
; ..\component\BswM\Implementation\BswM.c	   571                BswM_SetActionListQueue(actionListIndex, BSWM_ACTIONLIST_PENDING, partitionIdx); /* SBSW_BSWM_SETACTIONLISTQUEUE */
; ..\component\BswM\Implementation\BswM.c	   572  # if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   573                BswM_PushIntoActionListQueue(actionListIndex, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   574  # endif
; ..\component\BswM\Implementation\BswM.c	   575              }
; ..\component\BswM\Implementation\BswM.c	   576            }
; ..\component\BswM\Implementation\BswM.c	   577          }
; ..\component\BswM\Implementation\BswM.c	   578          if(queueState == BSWM_REQUEST_PROCESSED)
; ..\component\BswM\Implementation\BswM.c	   579          {
; ..\component\BswM\Implementation\BswM.c	   580            BswM_SetModeRequestQueue(immediateUserIndex, BSWM_REQUEST_PROCESSED, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
; ..\component\BswM\Implementation\BswM.c	   581            queueState = BSWM_REQUEST_QUEUE_RELEASE;
; ..\component\BswM\Implementation\BswM.c	   582            executeActionLists = TRUE;
; ..\component\BswM\Implementation\BswM.c	   583          } else
; ..\component\BswM\Implementation\BswM.c	   584          {
; ..\component\BswM\Implementation\BswM.c	   585            BswM_SetModeRequestQueue(immediateUserIndex, BSWM_REQUEST_IDLE, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
; ..\component\BswM\Implementation\BswM.c	   586          }
; ..\component\BswM\Implementation\BswM.c	   587        }
; ..\component\BswM\Implementation\BswM.c	   588      }
; ..\component\BswM\Implementation\BswM.c	   589      if(executeActionLists == TRUE)
; ..\component\BswM\Implementation\BswM.c	   590      {
; ..\component\BswM\Implementation\BswM.c	   591        /* BSWM_EXCLUSIVE_AREA_0 must be entered before calling BswM_ExecuteActionLists.
; ..\component\BswM\Implementation\BswM.c	   592         * Area is left and reentered during execution so blocked time should be acceptable. */
; ..\component\BswM\Implementation\BswM.c	   593        BswM_ExecuteActionLists(BSWM_ACTIONLIST_PENDING, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   594      }
; ..\component\BswM\Implementation\BswM.c	   595    }
; ..\component\BswM\Implementation\BswM.c	   596    BswM_LeaveCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   597  
; ..\component\BswM\Implementation\BswM.c	   598    if(queueState == BSWM_REQUEST_QUEUE_RELEASE)
; ..\component\BswM\Implementation\BswM.c	   599    {
; ..\component\BswM\Implementation\BswM.c	   600      BswM_ReleaseQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   601    }
; ..\component\BswM\Implementation\BswM.c	   602  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	   603  
; ..\component\BswM\Implementation\BswM.c	   604  
; ..\component\BswM\Implementation\BswM.c	   605  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   606   *  BswM_ImmediateModeRequest()
; ..\component\BswM\Implementation\BswM.c	   607   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   608  /*!
; ..\component\BswM\Implementation\BswM.c	   609   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   610   *
; ..\component\BswM\Implementation\BswM.c	   611   *
; ..\component\BswM\Implementation\BswM.c	   612   *
; ..\component\BswM\Implementation\BswM.c	   613   *
; ..\component\BswM\Implementation\BswM.c	   614   *
; ..\component\BswM\Implementation\BswM.c	   615   *
; ..\component\BswM\Implementation\BswM.c	   616   *
; ..\component\BswM\Implementation\BswM.c	   617   *
; ..\component\BswM\Implementation\BswM.c	   618   *
; ..\component\BswM\Implementation\BswM.c	   619   *
; ..\component\BswM\Implementation\BswM.c	   620   */
; ..\component\BswM\Implementation\BswM.c	   621  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   622  FUNC(void, BSWM_CODE) BswM_ImmediateModeRequest(BswM_SizeOfImmediateUserType start, BswM_SizeOfImmediateUserType end, uint8 sid, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   623  # else
; ..\component\BswM\Implementation\BswM.c	   624  FUNC(void, BSWM_CODE) BswM_ImmediateModeRequest(BswM_SizeOfImmediateUserType start, BswM_SizeOfImmediateUserType end, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   625  # endif
; ..\component\BswM\Implementation\BswM.c	   626  {
; ..\component\BswM\Implementation\BswM.c	   627    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   628    uint8 localSemaphore;
; ..\component\BswM\Implementation\BswM.c	   629    BswM_SizeOfImmediateUserType immediateUserIndex;
; ..\component\BswM\Implementation\BswM.c	   630  
; ..\component\BswM\Implementation\BswM.c	   631    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   632    if((end <= BswM_GetSizeOfImmediateUser(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   633  # if ( BSWM_DEV_ERROR_DETECT == STD_OFF )
; ..\component\BswM\Implementation\BswM.c	   634        /* #30 Verify that BswM is initialized - (This prevents queuing of new mode request if BswM_DeInit was called). ( \trace SPEC-7833 ) */
; ..\component\BswM\Implementation\BswM.c	   635        && BswM_IsInitialized(partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   636  # endif
; ..\component\BswM\Implementation\BswM.c	   637        )
; ..\component\BswM\Implementation\BswM.c	   638    {
; ..\component\BswM\Implementation\BswM.c	   639      BswM_EnterCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   640  
; ..\component\BswM\Implementation\BswM.c	   641      localSemaphore = BswM_GetQueueSemaphore(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   642      if (BswM_GetQueueSemaphore(partitionIdx) == BSWM_REQUEST_SEMAPHORE_UNLOCKED)
; ..\component\BswM\Implementation\BswM.c	   643      {
; ..\component\BswM\Implementation\BswM.c	   644        BswM_SetQueueSemaphore(BSWM_REQUEST_SEMAPHORE_LOCKED, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   645      }
; ..\component\BswM\Implementation\BswM.c	   646  
; ..\component\BswM\Implementation\BswM.c	   647      for (immediateUserIndex = start; immediateUserIndex < end; immediateUserIndex++)
; ..\component\BswM\Implementation\BswM.c	   648      {
; ..\component\BswM\Implementation\BswM.c	   649  # if ( BSWM_FORCEDOFIMMEDIATEUSER == STD_ON )
; ..\component\BswM\Implementation\BswM.c	   650        if (BswM_IsForcedOfImmediateUser(immediateUserIndex, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   651        {
; ..\component\BswM\Implementation\BswM.c	   652          BswM_ExecuteForcedImmediateUser(immediateUserIndex, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   653        }
; ..\component\BswM\Implementation\BswM.c	   654        else
; ..\component\BswM\Implementation\BswM.c	   655  # endif /* ( BSWM_FORCEDOFIMMEDIATEUSER == STD_ON )*/
; ..\component\BswM\Implementation\BswM.c	   656        {
; ..\component\BswM\Implementation\BswM.c	   657          if (BswM_GetModeRequestQueue(immediateUserIndex, partitionIdx) == BSWM_REQUEST_IDLE)
; ..\component\BswM\Implementation\BswM.c	   658          {
; ..\component\BswM\Implementation\BswM.c	   659            BswM_SetQueueWritten(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   660            BswM_SetModeRequestQueue(immediateUserIndex, BSWM_REQUEST_QUEUED, partitionIdx); /* SBSW_BSWM_IMMEDIATEMODEREQUEST */
; ..\component\BswM\Implementation\BswM.c	   661          }
; ..\component\BswM\Implementation\BswM.c	   662          else if(BswM_GetModeRequestQueue(immediateUserIndex, partitionIdx) == BSWM_REQUEST_PROCESSED) /* COV_BSWM_MODEREQUESTPENDING */
; ..\component\BswM\Implementation\BswM.c	   663          {
; ..\component\BswM\Implementation\BswM.c	   664            BswM_SetModeRequestQueue(immediateUserIndex, BSWM_REQUEST_PENDING, partitionIdx); /* SBSW_BSWM_IMMEDIATEMODEREQUEST */
; ..\component\BswM\Implementation\BswM.c	   665          }
; ..\component\BswM\Implementation\BswM.c	   666          else
; ..\component\BswM\Implementation\BswM.c	   667          {
; ..\component\BswM\Implementation\BswM.c	   668            /* Mode is already queued. That means that there is a former mode change on this mode port which has not been processed yet. */
; ..\component\BswM\Implementation\BswM.c	   669  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   670            BswM_LeaveCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   671            (void)Det_ReportError(BSWM_MODULE_ID, 0, sid, BSWM_E_ALREADY_QUEUED);
; ..\component\BswM\Implementation\BswM.c	   672            BswM_EnterCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   673  # endif
; ..\component\BswM\Implementation\BswM.c	   674          }
; ..\component\BswM\Implementation\BswM.c	   675        }
; ..\component\BswM\Implementation\BswM.c	   676      }
; ..\component\BswM\Implementation\BswM.c	   677      BswM_LeaveCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	   678  
; ..\component\BswM\Implementation\BswM.c	   679      if (BSWM_REQUEST_SEMAPHORE_UNLOCKED == localSemaphore)
; ..\component\BswM\Implementation\BswM.c	   680      {
; ..\component\BswM\Implementation\BswM.c	   681        /* Immediately process other pending immediate requests. */
; ..\component\BswM\Implementation\BswM.c	   682        BswM_ProcessQueuedRequests(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   683        /* Unlock semaphore after processing of the queue. */
; ..\component\BswM\Implementation\BswM.c	   684        BswM_SetQueueSemaphore(BSWM_REQUEST_SEMAPHORE_UNLOCKED, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   685  # if(BSWM_IPDU_GROUP_CONTROL == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   686        BswM_ExecuteIpduGroupControl();
; ..\component\BswM\Implementation\BswM.c	   687  # endif
; ..\component\BswM\Implementation\BswM.c	   688      }
; ..\component\BswM\Implementation\BswM.c	   689    }
; ..\component\BswM\Implementation\BswM.c	   690  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	   691  #endif
; ..\component\BswM\Implementation\BswM.c	   692  
; ..\component\BswM\Implementation\BswM.c	   693  #if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   694  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   695   *  BswM_PushIntoActionListQueue()
; ..\component\BswM\Implementation\BswM.c	   696   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   697  /*!
; ..\component\BswM\Implementation\BswM.c	   698   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   699   *
; ..\component\BswM\Implementation\BswM.c	   700   *
; ..\component\BswM\Implementation\BswM.c	   701   *
; ..\component\BswM\Implementation\BswM.c	   702   *
; ..\component\BswM\Implementation\BswM.c	   703   *
; ..\component\BswM\Implementation\BswM.c	   704   *
; ..\component\BswM\Implementation\BswM.c	   705   */
; ..\component\BswM\Implementation\BswM.c	   706  BSWM_LOCAL FUNC(void, BSWM_CODE) BswM_PushIntoActionListQueue(BswM_SizeOfActionListQueueType actionListIndex, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   707  {
; ..\component\BswM\Implementation\BswM.c	   708    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   709    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	   710    /* Insert the new child element to the bottom level of the heap (last element of the array) */
; ..\component\BswM\Implementation\BswM.c	   711    BswM_ActionListQueueIterType child = BswM_GetLengthOfActionListPriorityQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   712    /* Determine the parents array index */
; ..\component\BswM\Implementation\BswM.c	   713    BswM_ActionListQueueIterType parent = (BswM_ActionListQueueIterType)((child - 1u) >> 1u);
; ..\component\BswM\Implementation\BswM.c	   714  
; ..\component\BswM\Implementation\BswM.c	   715  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   716    /* #10 Check that the priority queue is not full. */
; ..\component\BswM\Implementation\BswM.c	   717    if (child >= BswM_GetSizeOfActionListPriorityQueue(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   718    {
; ..\component\BswM\Implementation\BswM.c	   719      errorId = BSWM_E_ACTION_LIST_QUEUE_ERROR;
; ..\component\BswM\Implementation\BswM.c	   720    }
; ..\component\BswM\Implementation\BswM.c	   721    else
; ..\component\BswM\Implementation\BswM.c	   722  # endif
; ..\component\BswM\Implementation\BswM.c	   723    {
; ..\component\BswM\Implementation\BswM.c	   724      /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   725      /* #20 Locate parent of the new child element and check if priority of the parent is smaller, if not 
; ..\component\BswM\Implementation\BswM.c	   726       *     swap the child node and the parent until the parent has the lower priority (Min-Heap property).
; ..\component\BswM\Implementation\BswM.c	   727       */
; ..\component\BswM\Implementation\BswM.c	   728      
; ..\component\BswM\Implementation\BswM.c	   729      /*                        +--------+
; ..\component\BswM\Implementation\BswM.c	   730       *                        | PARENT |
; ..\component\BswM\Implementation\BswM.c	   731       *                        +--------+
; ..\component\BswM\Implementation\BswM.c	   732       *                      /            \ 
; ..\component\BswM\Implementation\BswM.c	   733       *            +--------+              +--------+
; ..\component\BswM\Implementation\BswM.c	   734       *            | CHILD1 |              | CHILD2 |
; ..\component\BswM\Implementation\BswM.c	   735       *            +--------+              +--------+
; ..\component\BswM\Implementation\BswM.c	   736       */
; ..\component\BswM\Implementation\BswM.c	   737      while ((child > 0u) && (BswM_GetActionListPriorityQueue(parent, partitionIdx) > actionListIndex))
; ..\component\BswM\Implementation\BswM.c	   738      {
; ..\component\BswM\Implementation\BswM.c	   739        /* Min-Heap property violated -> Swap child and parent */
; ..\component\BswM\Implementation\BswM.c	   740        BswM_SetActionListPriorityQueue(child, BswM_GetActionListPriorityQueue(parent, partitionIdx), partitionIdx); /* SBSW_BSWM_PUSHINTOACTIONLISTPRIORITYQUEUE */
; ..\component\BswM\Implementation\BswM.c	   741        child = parent;
; ..\component\BswM\Implementation\BswM.c	   742        parent = (BswM_ActionListQueueIterType)((parent - 1u) >> 1u);
; ..\component\BswM\Implementation\BswM.c	   743      }
; ..\component\BswM\Implementation\BswM.c	   744  
; ..\component\BswM\Implementation\BswM.c	   745      /* #30 Store the inserted actionListIndex at the correct position in the heap */
; ..\component\BswM\Implementation\BswM.c	   746      BswM_SetActionListPriorityQueue(child, actionListIndex, partitionIdx); /* SBSW_BSWM_PUSHINTOACTIONLISTPRIORITYQUEUE */
; ..\component\BswM\Implementation\BswM.c	   747  
; ..\component\BswM\Implementation\BswM.c	   748      /* #40 Increment size of Action List Queue Indexes */
; ..\component\BswM\Implementation\BswM.c	   749      BswM_IncLengthOfActionListPriorityQueue(partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   750    }
; ..\component\BswM\Implementation\BswM.c	   751    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   752    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   753  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   754    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	   755    {
; ..\component\BswM\Implementation\BswM.c	   756      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PUSH_INTO_ACTION_LIST_QUEUE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	   757    }
; ..\component\BswM\Implementation\BswM.c	   758  # else
; ..\component\BswM\Implementation\BswM.c	   759    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   760  # endif
; ..\component\BswM\Implementation\BswM.c	   761  }
; ..\component\BswM\Implementation\BswM.c	   762  
; ..\component\BswM\Implementation\BswM.c	   763  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   764   *  BswM_PopFromActionListQueue()
; ..\component\BswM\Implementation\BswM.c	   765   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   766  /*!
; ..\component\BswM\Implementation\BswM.c	   767   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   768   *
; ..\component\BswM\Implementation\BswM.c	   769   *
; ..\component\BswM\Implementation\BswM.c	   770   *
; ..\component\BswM\Implementation\BswM.c	   771   *
; ..\component\BswM\Implementation\BswM.c	   772   *
; ..\component\BswM\Implementation\BswM.c	   773   */
; ..\component\BswM\Implementation\BswM.c	   774  BSWM_LOCAL FUNC(BswM_SizeOfActionListQueueType, BSWM_CODE) BswM_PopFromActionListQueue(uint8 executionLevel, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   775  {
; ..\component\BswM\Implementation\BswM.c	   776    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   777    BswM_SizeOfActionListPriorityQueueType priorityQueueIdx;
; ..\component\BswM\Implementation\BswM.c	   778    BswM_SizeOfActionListQueueType minActionListIdx = BswM_GetSizeOfActionListQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   779  
; ..\component\BswM\Implementation\BswM.c	   780    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   781    /* #10 Determine if the Action List Queue contains any element. If not, return the size of the Action List Queue */
; ..\component\BswM\Implementation\BswM.c	   782    if (BswM_GetLengthOfActionListPriorityQueue(partitionIdx) > 0u)
; ..\component\BswM\Implementation\BswM.c	   783    {
; ..\component\BswM\Implementation\BswM.c	   784      /* #20 If there are elements in the queue, determine the minimum Action List Queue item that matches the provided executionLevel */
; ..\component\BswM\Implementation\BswM.c	   785  
; ..\component\BswM\Implementation\BswM.c	   786      /* In case of executionLevel BSWM_ACTIONLIST_PENDING the element on position 0 of the queue has the minimal action list index */
; ..\component\BswM\Implementation\BswM.c	   787      if (executionLevel == BSWM_ACTIONLIST_PENDING)
; ..\component\BswM\Implementation\BswM.c	   788      {
; ..\component\BswM\Implementation\BswM.c	   789        priorityQueueIdx = 0u;
; ..\component\BswM\Implementation\BswM.c	   790      }
; ..\component\BswM\Implementation\BswM.c	   791      else
; ..\component\BswM\Implementation\BswM.c	   792      {
; ..\component\BswM\Implementation\BswM.c	   793        priorityQueueIdx = BswM_DetermineMinimalQueueIdx(executionLevel, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   794      }
; ..\component\BswM\Implementation\BswM.c	   795  
; ..\component\BswM\Implementation\BswM.c	   796      /* #30 If there was no minimum Action List Queue item for the given executionLevel, return the size of Action List Queue */
; ..\component\BswM\Implementation\BswM.c	   797      if (priorityQueueIdx < BswM_GetSizeOfActionListPriorityQueue(partitionIdx)) /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   798      {
; ..\component\BswM\Implementation\BswM.c	   799        /* #40 Otherwise, return the found Action List Queue item and remove it from the queue */
; ..\component\BswM\Implementation\BswM.c	   800        minActionListIdx = (BswM_SizeOfActionListQueueType)BswM_GetActionListPriorityQueue(priorityQueueIdx, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   801  
; ..\component\BswM\Implementation\BswM.c	   802        BswM_RemoveIdxFromQueue(priorityQueueIdx, partitionIdx); /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   803      }
; ..\component\BswM\Implementation\BswM.c	   804    }
; ..\component\BswM\Implementation\BswM.c	   805  
; ..\component\BswM\Implementation\BswM.c	   806    return minActionListIdx;
; ..\component\BswM\Implementation\BswM.c	   807  }
; ..\component\BswM\Implementation\BswM.c	   808  
; ..\component\BswM\Implementation\BswM.c	   809  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   810   *  BswM_DetermineMinimalQueueIdx
; ..\component\BswM\Implementation\BswM.c	   811   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   812  /*!
; ..\component\BswM\Implementation\BswM.c	   813   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   814   *
; ..\component\BswM\Implementation\BswM.c	   815   *
; ..\component\BswM\Implementation\BswM.c	   816   *
; ..\component\BswM\Implementation\BswM.c	   817   *
; ..\component\BswM\Implementation\BswM.c	   818   *
; ..\component\BswM\Implementation\BswM.c	   819   *
; ..\component\BswM\Implementation\BswM.c	   820   *
; ..\component\BswM\Implementation\BswM.c	   821   */
; ..\component\BswM\Implementation\BswM.c	   822  BSWM_LOCAL_INLINE FUNC(BswM_SizeOfActionListPriorityQueueType, BSWM_CODE) BswM_DetermineMinimalQueueIdx(uint8 executionLevel, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   823  {
; ..\component\BswM\Implementation\BswM.c	   824    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   825    BswM_SizeOfActionListPriorityQueueType tempPriorityQueueIdx, priorityQueueIdx, lastIdxInLevel;
; ..\component\BswM\Implementation\BswM.c	   826    BswM_SizeOfActionListQueueType minActionListIdx = BswM_GetSizeOfActionListQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   827    BswM_SizeOfActionListQueueType minActionListIdxInLevel = BswM_GetSizeOfActionListQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   828  
; ..\component\BswM\Implementation\BswM.c	   829    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   830    lastIdxInLevel = 0u;
; ..\component\BswM\Implementation\BswM.c	   831    priorityQueueIdx = BswM_GetSizeOfActionListPriorityQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   832  
; ..\component\BswM\Implementation\BswM.c	   833    for( tempPriorityQueueIdx = 0u; tempPriorityQueueIdx < BswM_GetLengthOfActionListPriorityQueue(partitionIdx); tempPriorityQueueIdx++ )
; ..\component\BswM\Implementation\BswM.c	   834    {
; ..\component\BswM\Implementation\BswM.c	   835      BswM_SizeOfActionListQueueType currentActionListIndex = BswM_GetActionListPriorityQueue(tempPriorityQueueIdx, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   836        /* #10 Iterate over the ActionListPriorityQueue elements of the same level (all children) and search for 
; ..\component\BswM\Implementation\BswM.c	   837               an action with the minimal action list index and the passed executionLevel. */
; ..\component\BswM\Implementation\BswM.c	   838      if ( (currentActionListIndex < minActionListIdx) &&
; ..\component\BswM\Implementation\BswM.c	   839            (BswM_GetActionListQueue(currentActionListIndex, partitionIdx) == executionLevel))
; ..\component\BswM\Implementation\BswM.c	   840      {
; ..\component\BswM\Implementation\BswM.c	   841        priorityQueueIdx = tempPriorityQueueIdx;
; ..\component\BswM\Implementation\BswM.c	   842        minActionListIdx = currentActionListIndex;
; ..\component\BswM\Implementation\BswM.c	   843      }
; ..\component\BswM\Implementation\BswM.c	   844      else if(currentActionListIndex < minActionListIdxInLevel)
; ..\component\BswM\Implementation\BswM.c	   845      {
; ..\component\BswM\Implementation\BswM.c	   846        minActionListIdxInLevel = currentActionListIndex;
; ..\component\BswM\Implementation\BswM.c	   847      }
; ..\component\BswM\Implementation\BswM.c	   848      else
; ..\component\BswM\Implementation\BswM.c	   849      {
; ..\component\BswM\Implementation\BswM.c	   850        /* Element has not the smallest index on level. */
; ..\component\BswM\Implementation\BswM.c	   851      }
; ..\component\BswM\Implementation\BswM.c	   852  
; ..\component\BswM\Implementation\BswM.c	   853      /* #20 In case that an element was found on a level and this element has the minimal index on this level, 
; ..\component\BswM\Implementation\BswM.c	   854             the search is over. Other elements on deeper levels can not have a smaller index because of the min heap 
; ..\component\BswM\Implementation\BswM.c	   855             property that parents have always the higher priority compared to the children. */
; ..\component\BswM\Implementation\BswM.c	   856      if( tempPriorityQueueIdx == lastIdxInLevel )
; ..\component\BswM\Implementation\BswM.c	   857      {
; ..\component\BswM\Implementation\BswM.c	   858        if(minActionListIdx < minActionListIdxInLevel)
; ..\component\BswM\Implementation\BswM.c	   859        {
; ..\component\BswM\Implementation\BswM.c	   860          break;
; ..\component\BswM\Implementation\BswM.c	   861        }
; ..\component\BswM\Implementation\BswM.c	   862        /* #30 Otherwise the search has to be continued on a deeper level. */
; ..\component\BswM\Implementation\BswM.c	   863        minActionListIdxInLevel = BswM_GetSizeOfActionListQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   864        lastIdxInLevel = (BswM_SizeOfActionListPriorityQueueType)((lastIdxInLevel << 1) + 2u);
; ..\component\BswM\Implementation\BswM.c	   865      }
; ..\component\BswM\Implementation\BswM.c	   866    }
; ..\component\BswM\Implementation\BswM.c	   867  
; ..\component\BswM\Implementation\BswM.c	   868    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   869    return priorityQueueIdx;
; ..\component\BswM\Implementation\BswM.c	   870  }
; ..\component\BswM\Implementation\BswM.c	   871  
; ..\component\BswM\Implementation\BswM.c	   872  
; ..\component\BswM\Implementation\BswM.c	   873  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   874   *  BswM_RemoveIdxFromQueue
; ..\component\BswM\Implementation\BswM.c	   875   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   876  /*!
; ..\component\BswM\Implementation\BswM.c	   877   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   878   *
; ..\component\BswM\Implementation\BswM.c	   879   *
; ..\component\BswM\Implementation\BswM.c	   880   *
; ..\component\BswM\Implementation\BswM.c	   881   *
; ..\component\BswM\Implementation\BswM.c	   882   *
; ..\component\BswM\Implementation\BswM.c	   883   */
; ..\component\BswM\Implementation\BswM.c	   884  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_RemoveIdxFromQueue(BswM_SizeOfActionListPriorityQueueType index, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   885  {
; ..\component\BswM\Implementation\BswM.c	   886      /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   887    BswM_SizeOfActionListPriorityQueueType priorityQueueIdx = index; /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   888  
; ..\component\BswM\Implementation\BswM.c	   889    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   890  
; ..\component\BswM\Implementation\BswM.c	   891    /* #10 Set the last element of the priority queue to the position of the found index and reduce the list length. */
; ..\component\BswM\Implementation\BswM.c	   892    BswM_DecLengthOfActionListPriorityQueue(partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	   893  
; ..\component\BswM\Implementation\BswM.c	   894    BswM_SetActionListPriorityQueue(priorityQueueIdx, BswM_GetActionListPriorityQueue(BswM_GetLengthOfActionListPriorityQueue(partitionIdx), partitionIdx), partitionIdx); /* SBSW_BSWM_POPFROMACTIONLISTPRIORITYQUEUE */
; ..\component\BswM\Implementation\BswM.c	   895  
; ..\component\BswM\Implementation\BswM.c	   896    /* #20 If one of the children of the element on the new position has a smaller index compared to the parent, the
; ..\component\BswM\Implementation\BswM.c	   897           children with the smallest index has to be swaped with the parent to restore the heap property. This has to be 
; ..\component\BswM\Implementation\BswM.c	   898           repeated as long as the heap property is not fulfilled. */
; ..\component\BswM\Implementation\BswM.c	   899    while (1) /* COV_BSWM_WHILE_1 TX */
; ..\component\BswM\Implementation\BswM.c	   900    {
; ..\component\BswM\Implementation\BswM.c	   901      BswM_SizeOfActionListPriorityQueueType temp, leftChild;
; ..\component\BswM\Implementation\BswM.c	   902      leftChild = (BswM_SizeOfActionListPriorityQueueType)((priorityQueueIdx << 1u) + 1u); /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   903  
; ..\component\BswM\Implementation\BswM.c	   904      /* Check if the right child (leftChild + 1) has minimum priority */
; ..\component\BswM\Implementation\BswM.c	   905      if ((((BswM_ActionListQueueIterType)leftChild + 1u) < BswM_GetLengthOfActionListPriorityQueue(partitionIdx)) && 
; ..\component\BswM\Implementation\BswM.c	   906          (BswM_GetActionListPriorityQueue((leftChild + 1u), partitionIdx) < BswM_GetActionListPriorityQueue(priorityQueueIdx, partitionIdx)) && /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   907          (BswM_GetActionListPriorityQueue((leftChild + 1u), partitionIdx) < BswM_GetActionListPriorityQueue(leftChild, partitionIdx)) ) /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   908      {
; ..\component\BswM\Implementation\BswM.c	   909        leftChild++; /*lint -e{661, 662} */ /* Minimum is right child */
; ..\component\BswM\Implementation\BswM.c	   910      }
; ..\component\BswM\Implementation\BswM.c	   911      /* Check if the left child has minimum priority */
; ..\component\BswM\Implementation\BswM.c	   912      else if ((leftChild < BswM_GetLengthOfActionListPriorityQueue(partitionIdx)) &&
; ..\component\BswM\Implementation\BswM.c	   913          (BswM_GetActionListPriorityQueue(leftChild, partitionIdx) < BswM_GetActionListPriorityQueue(priorityQueueIdx, partitionIdx))) /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   914      {
; ..\component\BswM\Implementation\BswM.c	   915        /* Minimum is left child (index already set) */
; ..\component\BswM\Implementation\BswM.c	   916      }
; ..\component\BswM\Implementation\BswM.c	   917      /* break if the children have the minimum priority or the end of the list is reached */
; ..\component\BswM\Implementation\BswM.c	   918      else
; ..\component\BswM\Implementation\BswM.c	   919      {
; ..\component\BswM\Implementation\BswM.c	   920        break; /* Minimum is parent */
; ..\component\BswM\Implementation\BswM.c	   921      }
; ..\component\BswM\Implementation\BswM.c	   922  
; ..\component\BswM\Implementation\BswM.c	   923      /* Swap parent with minimum child */
; ..\component\BswM\Implementation\BswM.c	   924      temp = BswM_GetActionListPriorityQueue(leftChild, partitionIdx); /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   925      BswM_SetActionListPriorityQueue(leftChild, BswM_GetActionListPriorityQueue(priorityQueueIdx, partitionIdx), partitionIdx); /*lint -e{661, 662} */ /* SBSW_BSWM_POPFROMACTIONLISTPRIORITYQUEUE */
; ..\component\BswM\Implementation\BswM.c	   926      BswM_SetActionListPriorityQueue(priorityQueueIdx, temp, partitionIdx); /* SBSW_BSWM_POPFROMACTIONLISTPRIORITYQUEUE */
; ..\component\BswM\Implementation\BswM.c	   927  
; ..\component\BswM\Implementation\BswM.c	   928      /* Child becomes parent */
; ..\component\BswM\Implementation\BswM.c	   929      priorityQueueIdx = leftChild; /*lint -e{661, 662} */
; ..\component\BswM\Implementation\BswM.c	   930    }
; ..\component\BswM\Implementation\BswM.c	   931    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	   932  }
; ..\component\BswM\Implementation\BswM.c	   933  #endif
; ..\component\BswM\Implementation\BswM.c	   934  
; ..\component\BswM\Implementation\BswM.c	   935  
; ..\component\BswM\Implementation\BswM.c	   936  #if ((BSWM_FUNCTION_BASED == STD_OFF) && (BSWM_ACTIONLISTS == STD_ON))
; ..\component\BswM\Implementation\BswM.c	   937  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   938   *  BswM_Action_ActionListHandler()
; ..\component\BswM\Implementation\BswM.c	   939   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   940  /*!
; ..\component\BswM\Implementation\BswM.c	   941   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   942   *
; ..\component\BswM\Implementation\BswM.c	   943   *
; ..\component\BswM\Implementation\BswM.c	   944   *
; ..\component\BswM\Implementation\BswM.c	   945   *
; ..\component\BswM\Implementation\BswM.c	   946   *
; ..\component\BswM\Implementation\BswM.c	   947   *
; ..\component\BswM\Implementation\BswM.c	   948   *
; ..\component\BswM\Implementation\BswM.c	   949   */
; ..\component\BswM\Implementation\BswM.c	   950  FUNC(Std_ReturnType, BSWM_CODE) BswM_Action_ActionListHandler(BswM_HandleType handleId, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	   951  {
; ..\component\BswM\Implementation\BswM.c	   952    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   953    Std_ReturnType retVal = E_OK;
; ..\component\BswM\Implementation\BswM.c	   954    BswM_ActionItemsIterType itemId;
; ..\component\BswM\Implementation\BswM.c	   955    BswM_HandleType parameterIdx;
; ..\component\BswM\Implementation\BswM.c	   956  
; ..\component\BswM\Implementation\BswM.c	   957    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	   958    for(itemId = BswM_GetActionItemsStartIdxOfActionLists(handleId, partitionIdx); itemId < BswM_GetActionItemsEndIdxOfActionLists(handleId, partitionIdx); itemId++)
; ..\component\BswM\Implementation\BswM.c	   959    {
; ..\component\BswM\Implementation\BswM.c	   960  # if (BSWM_PARAMETERIDXOFACTIONITEMS == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   961      parameterIdx = BswM_GetParameterIdxOfActionItems(itemId, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	   962  # else
; ..\component\BswM\Implementation\BswM.c	   963      parameterIdx = 0u;
; ..\component\BswM\Implementation\BswM.c	   964  # endif
; ..\component\BswM\Implementation\BswM.c	   965  
; ..\component\BswM\Implementation\BswM.c	   966  
; ..\component\BswM\Implementation\BswM.c	   967  # if (BSWM_ABORTOFACTIONITEMS == STD_ON || BSWM_REPORTOFACTIONITEMS == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   968      if(BswM_GetActions(BswM_GetActionsIdxOfActionItems(itemId, partitionIdx), partitionIdx)(parameterIdx, partitionIdx) != E_OK) /* SBSW_BSWM_ACTIONFCTPTR */
; ..\component\BswM\Implementation\BswM.c	   969      {
; ..\component\BswM\Implementation\BswM.c	   970  #  if (BSWM_REPORTOFACTIONITEMS == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   971        if(BswM_GetReportOfActionItems(itemId, partitionIdx) != 0u)
; ..\component\BswM\Implementation\BswM.c	   972        {
; ..\component\BswM\Implementation\BswM.c	   973          Dem_ReportErrorStatus(BswM_GetReportOfActionItems(itemId, partitionIdx), DEM_EVENT_STATUS_FAILED);
; ..\component\BswM\Implementation\BswM.c	   974        }
; ..\component\BswM\Implementation\BswM.c	   975  #  endif
; ..\component\BswM\Implementation\BswM.c	   976  #  if (BSWM_ABORTOFACTIONITEMS == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   977        if(BswM_IsAbortOfActionItems(itemId, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	   978        {
; ..\component\BswM\Implementation\BswM.c	   979          retVal = E_NOT_OK;
; ..\component\BswM\Implementation\BswM.c	   980          break;
; ..\component\BswM\Implementation\BswM.c	   981        }
; ..\component\BswM\Implementation\BswM.c	   982  #  endif
; ..\component\BswM\Implementation\BswM.c	   983      }
; ..\component\BswM\Implementation\BswM.c	   984  # else
; ..\component\BswM\Implementation\BswM.c	   985      (void)BswM_GetActions(BswM_GetActionsIdxOfActionItems(itemId, partitionIdx), partitionIdx)(parameterIdx, partitionIdx); /* SBSW_BSWM_ACTIONFCTPTR */
; ..\component\BswM\Implementation\BswM.c	   986  # endif
; ..\component\BswM\Implementation\BswM.c	   987    }
; ..\component\BswM\Implementation\BswM.c	   988  
; ..\component\BswM\Implementation\BswM.c	   989    return retVal;
; ..\component\BswM\Implementation\BswM.c	   990  }
; ..\component\BswM\Implementation\BswM.c	   991  #endif
; ..\component\BswM\Implementation\BswM.c	   992  
; ..\component\BswM\Implementation\BswM.c	   993  #if (BSWM_TIMERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	   994  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	   995   *  BswM_DecreaseTimer()
; ..\component\BswM\Implementation\BswM.c	   996   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	   997  /*!
; ..\component\BswM\Implementation\BswM.c	   998   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	   999   *
; ..\component\BswM\Implementation\BswM.c	  1000   *
; ..\component\BswM\Implementation\BswM.c	  1001   *
; ..\component\BswM\Implementation\BswM.c	  1002   *
; ..\component\BswM\Implementation\BswM.c	  1003   */
; ..\component\BswM\Implementation\BswM.c	  1004  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_DecreaseTimer(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	  1005  {
; ..\component\BswM\Implementation\BswM.c	  1006    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1007    BswM_TimerStateIterType timerIndex;
; ..\component\BswM\Implementation\BswM.c	  1008  
; ..\component\BswM\Implementation\BswM.c	  1009    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1010    for(timerIndex = 0u; timerIndex < BswM_GetSizeOfTimerValue(partitionIdx); timerIndex++)
; ..\component\BswM\Implementation\BswM.c	  1011    {
; ..\component\BswM\Implementation\BswM.c	  1012      if(BswM_GetTimerValue(timerIndex, partitionIdx) > 0u)
; ..\component\BswM\Implementation\BswM.c	  1013      {
; ..\component\BswM\Implementation\BswM.c	  1014        BswM_DecTimerValue(timerIndex, partitionIdx); /* SBSW_BSWM_SETTIMER */
; ..\component\BswM\Implementation\BswM.c	  1015        if(BswM_GetTimerValue(timerIndex, partitionIdx) == 0u)
; ..\component\BswM\Implementation\BswM.c	  1016        {
; ..\component\BswM\Implementation\BswM.c	  1017          BswM_SetTimerState(timerIndex, BSWM_TIMER_EXPIRED, partitionIdx); /* SBSW_BSWM_SETTIMER */
; ..\component\BswM\Implementation\BswM.c	  1018        }
; ..\component\BswM\Implementation\BswM.c	  1019      }
; ..\component\BswM\Implementation\BswM.c	  1020    }
; ..\component\BswM\Implementation\BswM.c	  1021    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1022  }
; ..\component\BswM\Implementation\BswM.c	  1023  #endif /* BSWM_TIMERSTATE == STD_ON */
; ..\component\BswM\Implementation\BswM.c	  1024  
; ..\component\BswM\Implementation\BswM.c	  1025  #if (BSWM_ACTIONLISTS == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1026  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1027   *  BswM_ExecuteActionLists()
; ..\component\BswM\Implementation\BswM.c	  1028   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1029  /*!
; ..\component\BswM\Implementation\BswM.c	  1030   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1031   *
; ..\component\BswM\Implementation\BswM.c	  1032   *
; ..\component\BswM\Implementation\BswM.c	  1033   *
; ..\component\BswM\Implementation\BswM.c	  1034   *
; ..\component\BswM\Implementation\BswM.c	  1035   *
; ..\component\BswM\Implementation\BswM.c	  1036   *
; ..\component\BswM\Implementation\BswM.c	  1037   *
; ..\component\BswM\Implementation\BswM.c	  1038   */
; ..\component\BswM\Implementation\BswM.c	  1039  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ExecuteActionLists(uint8 executionLevel, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	  1040  {
; ..\component\BswM\Implementation\BswM.c	  1041    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1042    BswM_SizeOfActionListQueueType actionListIndex;
; ..\component\BswM\Implementation\BswM.c	  1043  
; ..\component\BswM\Implementation\BswM.c	  1044    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1045  # if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1046    for (actionListIndex = BswM_PopFromActionListQueue(executionLevel, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1047         actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1048         actionListIndex = BswM_PopFromActionListQueue(executionLevel, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  1049  # else
; ..\component\BswM\Implementation\BswM.c	  1050    for (actionListIndex = 0u; actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx); actionListIndex++)
; ..\component\BswM\Implementation\BswM.c	  1051  # endif
; ..\component\BswM\Implementation\BswM.c	  1052    {
; ..\component\BswM\Implementation\BswM.c	  1053  # if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_OFF)
; ..\component\BswM\Implementation\BswM.c	  1054      if (BswM_GetActionListQueue(actionListIndex, partitionIdx) == executionLevel)
; ..\component\BswM\Implementation\BswM.c	  1055  # endif
; ..\component\BswM\Implementation\BswM.c	  1056      {
; ..\component\BswM\Implementation\BswM.c	  1057        BswM_SetActionListQueue(actionListIndex, BSWM_ACTIONLIST_BLOCKED, partitionIdx); /* SBSW_BSWM_SETACTIONLISTQUEUE */
	mov	d13,#255
	j	.L2
.L3:
	st.b	[a15],d11
.L543:
	movh.a	a12,#@his(BswM_ModeRequestQueue)
	lea	a12,[a12]@los(BswM_ModeRequestQueue)
	ld.bu	d0,[a12]
.L544:
	mov	d10,#0
.L545:
	jne	d0,#1,.L4
.L546:
	movh.a	a13,#@his(BswM_RulesInd)
	lea	a13,[a13]@los(BswM_RulesInd)
	movh.a	a14,#@his(BswM_Rules)
	lea	a14,[a14]@los(BswM_Rules)
.L547:
	mov.a	a15,#7
.L5:
	ld.bu	d15,[a13+]
.L548:
	mov	d4,d8
.L293:
	addsc.a	a2,a14,d15,#3
	ld.a	a2,[a2]4
.L549:
	calli	a2
.L294:
	jge.u	d2,#12,.L6
.L550:
	movh.a	a2,#@his(BswM_ActionListQueue)
	lea	a2,[a2]@los(BswM_ActionListQueue)
	addsc.a	a2,a2,d2,#0
	ld.bu	d15,[a2]
.L551:
	jne	d15,#0,.L7
.L552:
	mov	d12,#2
	st.b	[a2],d9
.L7:
.L6:
	loop	a15,.L5
.L553:
	jne	d12,#2,.L8
.L554:
	mov	d15,#2
.L555:
	mov	d12,#4
.L556:
	mov	d10,#1
	j	.L9
.L8:
	mov	d15,#0
.L9:
	st.b	[a12],d15
.L4:
	jeq	d10,#0,.L10
.L283:
	movh.a	a15,#@his(BswM_ActionListQueue)
	lea	a15,[a15]@los(BswM_ActionListQueue)
.L557:

; ..\component\BswM\Implementation\BswM.c	  1058        BswM_LeaveCriticalArea_0();
; ..\component\BswM\Implementation\BswM.c	  1059  # if (BSWM_FUNCTION_BASED == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1060        (void)BswM_GetFctPtrOfActionLists(actionListIndex, partitionIdx)(partitionIdx); /* SBSW_BSWM_ACTIONLISTFCTPTR */
	movh.a	a12,#@his(BswM_ActionLists)
	lea	a12,[a12]@los(BswM_ActionLists)
.L558:

; ..\component\BswM\Implementation\BswM.c	  1050    for (actionListIndex = 0u; actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx); actionListIndex++)      (inlined)
	mov.a	a13,#11
.L11:
	ld.bu	d15,[a15]
.L559:

; ..\component\BswM\Implementation\BswM.c	  1054      if (BswM_GetActionListQueue(actionListIndex, partitionIdx) == executionLevel)      (inlined)
	jne	d15,#1,.L12
.L560:
	st.b	[a15],d13
.L561:
	call	ResumeAllInterrupts
.L562:
	ld.a	a2,[a12]
.L563:
	mov	d4,d8
	calli	a2
.L564:

; ..\component\BswM\Implementation\BswM.c	  1061  # else
; ..\component\BswM\Implementation\BswM.c	  1062        (void)BswM_Action_ActionListHandler((BswM_HandleType)actionListIndex, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1063  # endif
; ..\component\BswM\Implementation\BswM.c	  1064        BswM_EnterCriticalArea_0();
	call	SuspendAllInterrupts
.L565:

; ..\component\BswM\Implementation\BswM.c	  1065        BswM_SetActionListQueue(actionListIndex, BSWM_ACTIONLIST_IDLE, partitionIdx); /* SBSW_BSWM_SETACTIONLISTQUEUE */
	st.b	[a15],d11

; ..\component\BswM\Implementation\BswM.c	  1054      if (BswM_GetActionListQueue(actionListIndex, partitionIdx) == executionLevel)      (inlined)
.L12:
	add.a	a15,#1
.L566:
	add.a	a12,#4

; ..\component\BswM\Implementation\BswM.c	  1050    for (actionListIndex = 0u; actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx); actionListIndex++)      (inlined)
	loop	a13,.L11
.L10:
.L2:
	jeq	d10,#0,.L13
.L567:
	movh.a	a15,#@his(BswM_QueueWritten)
	lea	a15,[a15]@los(BswM_QueueWritten)
	ld.bu	d15,[a15]
	jne	d15,#0,.L3
.L13:
	call	ResumeAllInterrupts
.L568:
	jne	d12,#4,.L14
.L286:
	call	SuspendAllInterrupts
.L569:
	movh.a	a15,#@his(BswM_ModeRequestQueue)
	lea	a15,[a15]@los(BswM_ModeRequestQueue)
	ld.bu	d15,[a15]
.L570:
	movh.a	a2,#@his(BswM_QueueWritten)
	lea	a2,[a2]@los(BswM_QueueWritten)
	ld.bu	d0,[a2]
.L571:

; ..\component\BswM\Implementation\BswM.c	   507      if(BSWM_REQUEST_PROCESSED == BswM_GetModeRequestQueue(queueIndex, partitionIdx))      (inlined)
	jne	d15,#2,.L15
.L572:
	mov	d15,#0

; ..\component\BswM\Implementation\BswM.c	   509        BswM_SetModeRequestQueue(queueIndex, BSWM_REQUEST_IDLE, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */      (inlined)
	j	.L16
.L14:
	ret

; ..\component\BswM\Implementation\BswM.c	   507      if(BSWM_REQUEST_PROCESSED == BswM_GetModeRequestQueue(queueIndex, partitionIdx))      (inlined)
.L15:

; ..\component\BswM\Implementation\BswM.c	   511      else if(BSWM_REQUEST_PENDING == BswM_GetModeRequestQueue(queueIndex, partitionIdx)) /* COV_BSWM_MODEREQUESTPENDING */      (inlined)
	jne	d15,#3,.L17
.L573:
	mov	d0,#1
.L574:
	mov	d15,d0

; ..\component\BswM\Implementation\BswM.c	   511      else if(BSWM_REQUEST_PENDING == BswM_GetModeRequestQueue(queueIndex, partitionIdx)) /* COV_BSWM_MODEREQUESTPENDING */      (inlined)
.L17:
.L16:
	st.b	[a2],d0
	st.b	[a15],d15
.L575:
	j	ResumeAllInterrupts
.L273:
	
__BswM_ProcessQueuedRequests_function_end:
	.size	BswM_ProcessQueuedRequests,__BswM_ProcessQueuedRequests_function_end-BswM_ProcessQueuedRequests
.L198:
	; End of function
	
	.sdecl	'.text.BswM.BswM_ImmediateModeRequest',code,cluster('BswM_ImmediateModeRequest')
	.sect	'.text.BswM.BswM_ImmediateModeRequest'
	.align	2
	
	.global	BswM_ImmediateModeRequest
; Function BswM_ImmediateModeRequest
.L103:
BswM_ImmediateModeRequest:	.type	func
	mov	d15,d4
.L296:
	mov	e8,d6,d5
	mov	d10,d7
.L297:
	mov	d11,#1
.L298:
	jge.u	d8,#2,.L18
.L299:
	call	SuspendAllInterrupts
.L295:
	movh.a	a13,#@his(BswM_QueueSemaphore)
	lea	a13,[a13]@los(BswM_QueueSemaphore)
	ld.bu	d12,[a13]
.L519:
	jne	d12,#0,.L19
.L520:
	st.b	[a13],d11
.L19:
	sub	d8,d15
	movh.a	a15,#@his(BswM_ModeRequestQueue)
	lea	a15,[a15]@los(BswM_ModeRequestQueue)
	addsc.a	a15,a15,d15,#0
.L521:
	jlt	d8,#1,.L26
.L522:
	mov.a	a12,d8
.L523:
	mov	d8,#3
	movh.a	a14,#@his(BswM_QueueWritten)
.L524:
	add.a	a12,#-1
.L21:
	ld.bu	d15,[a15]
.L525:
	jne	d15,#0,.L22
.L526:
	st.b	[a14]@los(BswM_QueueWritten),d11
.L527:
	st.b	[a15],d11
.L528:
	j	.L23
.L22:
	jne	d15,#2,.L24
.L529:
	st.b	[a15],d8
.L530:
	j	.L25
.L24:
	call	ResumeAllInterrupts
.L531:
	mov	d4,#42
.L532:
	mov	d5,#0
.L533:
	mov	d7,#160
.L300:
	mov	d6,d9
	call	Det_ReportError
.L301:
	call	SuspendAllInterrupts
.L25:
.L23:
	add.a	a15,#1
	loop	a12,.L21
.L26:
	call	ResumeAllInterrupts
.L534:
	jne	d12,#0,.L27
.L535:
	mov	d4,d10
	call	BswM_ProcessQueuedRequests
.L536:
	mov	d15,#0
	st.b	[a13],d15
.L27:
.L18:
	ret
.L267:
	
__BswM_ImmediateModeRequest_function_end:
	.size	BswM_ImmediateModeRequest,__BswM_ImmediateModeRequest_function_end-BswM_ImmediateModeRequest
.L193:
	; End of function
	
	.sdecl	'.text.BswM.BswM_InitMemory',code,cluster('BswM_InitMemory')
	.sect	'.text.BswM.BswM_InitMemory'
	.align	2
	
	.global	BswM_InitMemory

; ..\component\BswM\Implementation\BswM.c	  1066      }
; ..\component\BswM\Implementation\BswM.c	  1067    }
; ..\component\BswM\Implementation\BswM.c	  1068  }
; ..\component\BswM\Implementation\BswM.c	  1069  #endif
; ..\component\BswM\Implementation\BswM.c	  1070  
; ..\component\BswM\Implementation\BswM.c	  1071  #if (BSWM_DEFERREDRULES == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1072  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1073   *  BswM_ExecuteDeferredRules()
; ..\component\BswM\Implementation\BswM.c	  1074   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1075  /*!
; ..\component\BswM\Implementation\BswM.c	  1076   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1077   *
; ..\component\BswM\Implementation\BswM.c	  1078   *
; ..\component\BswM\Implementation\BswM.c	  1079   *
; ..\component\BswM\Implementation\BswM.c	  1080   *
; ..\component\BswM\Implementation\BswM.c	  1081   *
; ..\component\BswM\Implementation\BswM.c	  1082   *
; ..\component\BswM\Implementation\BswM.c	  1083   */
; ..\component\BswM\Implementation\BswM.c	  1084  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ExecuteDeferredRules(BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	  1085  {
; ..\component\BswM\Implementation\BswM.c	  1086    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1087    BswM_DeferredRulesIterType ruleIndex;
; ..\component\BswM\Implementation\BswM.c	  1088    BswM_SizeOfActionListsType actionListIndex;
; ..\component\BswM\Implementation\BswM.c	  1089    boolean executeActionLists = FALSE;
; ..\component\BswM\Implementation\BswM.c	  1090    
; ..\component\BswM\Implementation\BswM.c	  1091    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1092    for (ruleIndex = 0u; ruleIndex < BswM_GetSizeOfDeferredRules(partitionIdx); ruleIndex++)
; ..\component\BswM\Implementation\BswM.c	  1093    {
; ..\component\BswM\Implementation\BswM.c	  1094  # if (BSWM_FUNCTION_BASED == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1095      actionListIndex = BswM_GetFctPtrOfRules(BswM_GetRulesIdxOfDeferredRules(ruleIndex, partitionIdx), partitionIdx)(partitionIdx); /* SBSW_BSWM_RULEFCTPTR */
; ..\component\BswM\Implementation\BswM.c	  1096  # else
; ..\component\BswM\Implementation\BswM.c	  1097      actionListIndex = BswM_ArbitrateRule((BswM_HandleType)BswM_GetRulesIdxOfDeferredRules(ruleIndex, partitionIdx), partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1098  # endif
; ..\component\BswM\Implementation\BswM.c	  1099      if ((actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx)) && (BswM_GetActionListQueue(actionListIndex, partitionIdx) == BSWM_ACTIONLIST_IDLE)) /* COV_BSWM_ACTIONLISTIDLE */
; ..\component\BswM\Implementation\BswM.c	  1100      {
; ..\component\BswM\Implementation\BswM.c	  1101        executeActionLists = TRUE;
; ..\component\BswM\Implementation\BswM.c	  1102        BswM_SetActionListQueue(actionListIndex, BSWM_ACTIONLIST_PENDING, partitionIdx); /* SBSW_BSWM_SETACTIONLISTQUEUE */
; ..\component\BswM\Implementation\BswM.c	  1103  #  if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1104        BswM_PushIntoActionListQueue(actionListIndex, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1105  #  endif
; ..\component\BswM\Implementation\BswM.c	  1106      }
; ..\component\BswM\Implementation\BswM.c	  1107    }
; ..\component\BswM\Implementation\BswM.c	  1108    if(executeActionLists == TRUE)
; ..\component\BswM\Implementation\BswM.c	  1109    {
; ..\component\BswM\Implementation\BswM.c	  1110      BswM_ExecuteActionLists(BSWM_ACTIONLIST_PENDING, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1111    }
; ..\component\BswM\Implementation\BswM.c	  1112  }
; ..\component\BswM\Implementation\BswM.c	  1113  #endif
; ..\component\BswM\Implementation\BswM.c	  1114  
; ..\component\BswM\Implementation\BswM.c	  1115  #if (BSWM_FORCEDOFIMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1116  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1117   *  BswM_ExecuteForcedImmediateUser()
; ..\component\BswM\Implementation\BswM.c	  1118   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1119  /*!
; ..\component\BswM\Implementation\BswM.c	  1120   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1121   *
; ..\component\BswM\Implementation\BswM.c	  1122   *
; ..\component\BswM\Implementation\BswM.c	  1123   *
; ..\component\BswM\Implementation\BswM.c	  1124   *
; ..\component\BswM\Implementation\BswM.c	  1125   *
; ..\component\BswM\Implementation\BswM.c	  1126   *
; ..\component\BswM\Implementation\BswM.c	  1127   */
; ..\component\BswM\Implementation\BswM.c	  1128  BSWM_LOCAL_INLINE FUNC(void, BSWM_CODE) BswM_ExecuteForcedImmediateUser(BswM_SizeOfImmediateUserType immediateUserIndex, BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx)
; ..\component\BswM\Implementation\BswM.c	  1129  {
; ..\component\BswM\Implementation\BswM.c	  1130    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1131    BswM_RulesIndIterType ruleIndex;
; ..\component\BswM\Implementation\BswM.c	  1132    BswM_SizeOfActionListsType actionListIndex;
; ..\component\BswM\Implementation\BswM.c	  1133    boolean executeActionLists = FALSE;
; ..\component\BswM\Implementation\BswM.c	  1134  
; ..\component\BswM\Implementation\BswM.c	  1135    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1136    BswM_IncForcedActionListPriority(partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1137  
; ..\component\BswM\Implementation\BswM.c	  1138    for(ruleIndex = BswM_GetRulesIndStartIdxOfImmediateUser(immediateUserIndex, partitionIdx); ruleIndex < BswM_GetRulesIndEndIdxOfImmediateUser(immediateUserIndex, partitionIdx); ruleIndex++)
; ..\component\BswM\Implementation\BswM.c	  1139    {
; ..\component\BswM\Implementation\BswM.c	  1140      {
; ..\component\BswM\Implementation\BswM.c	  1141  # if (BSWM_FUNCTION_BASED == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1142        actionListIndex = BswM_GetFctPtrOfRules(BswM_GetRulesInd(ruleIndex, partitionIdx), partitionIdx)(partitionIdx); /* SBSW_BSWM_RULEFCTPTR */
; ..\component\BswM\Implementation\BswM.c	  1143  # else
; ..\component\BswM\Implementation\BswM.c	  1144        actionListIndex = BswM_ArbitrateRule((BswM_HandleType)BswM_GetRulesInd(ruleIndex, partitionIdx), partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1145  # endif
; ..\component\BswM\Implementation\BswM.c	  1146        if((actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx)) && (BswM_GetActionListQueue(actionListIndex, partitionIdx) != BSWM_ACTIONLIST_BLOCKED)) /* COV_BSWM_ACTIONLISTBLOCKED */
; ..\component\BswM\Implementation\BswM.c	  1147        {
; ..\component\BswM\Implementation\BswM.c	  1148          executeActionLists = TRUE;
; ..\component\BswM\Implementation\BswM.c	  1149  # if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1150          if (BswM_GetActionListQueue(actionListIndex, partitionIdx) == BSWM_ACTIONLIST_IDLE)
; ..\component\BswM\Implementation\BswM.c	  1151          {
; ..\component\BswM\Implementation\BswM.c	  1152            BswM_PushIntoActionListQueue(actionListIndex, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1153          }
; ..\component\BswM\Implementation\BswM.c	  1154  # endif
; ..\component\BswM\Implementation\BswM.c	  1155  
; ..\component\BswM\Implementation\BswM.c	  1156          BswM_SetActionListQueue(actionListIndex, BswM_GetForcedActionListPriority(partitionIdx), partitionIdx); /* SBSW_BSWM_SETACTIONLISTQUEUE */
; ..\component\BswM\Implementation\BswM.c	  1157        }
; ..\component\BswM\Implementation\BswM.c	  1158      }
; ..\component\BswM\Implementation\BswM.c	  1159    }
; ..\component\BswM\Implementation\BswM.c	  1160  
; ..\component\BswM\Implementation\BswM.c	  1161    if(executeActionLists == TRUE)
; ..\component\BswM\Implementation\BswM.c	  1162    {
; ..\component\BswM\Implementation\BswM.c	  1163      BswM_ExecuteActionLists(BswM_GetForcedActionListPriority(partitionIdx), partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1164    }
; ..\component\BswM\Implementation\BswM.c	  1165    BswM_DecForcedActionListPriority(partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1166  }
; ..\component\BswM\Implementation\BswM.c	  1167  #endif
; ..\component\BswM\Implementation\BswM.c	  1168  
; ..\component\BswM\Implementation\BswM.c	  1169  /*********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1170   *  GLOBAL FUNCTIONS
; ..\component\BswM\Implementation\BswM.c	  1171   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1172  
; ..\component\BswM\Implementation\BswM.c	  1173  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1174   *  BswM_InitMemory()
; ..\component\BswM\Implementation\BswM.c	  1175   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1176  /*!
; ..\component\BswM\Implementation\BswM.c	  1177   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1178   *
; ..\component\BswM\Implementation\BswM.c	  1179   *
; ..\component\BswM\Implementation\BswM.c	  1180   */
; ..\component\BswM\Implementation\BswM.c	  1181  FUNC(void, BSWM_CODE) BswM_InitMemory(void)
; Function BswM_InitMemory
.L105:
BswM_InitMemory:	.type	func

; ..\component\BswM\Implementation\BswM.c	  1182  {
; ..\component\BswM\Implementation\BswM.c	  1183    /* #10 Set variable PreInitialized to FALSE. */
; ..\component\BswM\Implementation\BswM.c	  1184    BswM_SetPreInitialized(FALSE);
	movh.a	a15,#@his(BswM_PreInitialized)
	mov	d15,#0
	st.b	[a15]@los(BswM_PreInitialized),d15
.L413:

; ..\component\BswM\Implementation\BswM.c	  1185  }
	ret
.L230:
	
__BswM_InitMemory_function_end:
	.size	BswM_InitMemory,__BswM_InitMemory_function_end-BswM_InitMemory
.L163:
	; End of function
	
	.sdecl	'.text.BswM.BswM_PreInit',code,cluster('BswM_PreInit')
	.sect	'.text.BswM.BswM_PreInit'
	.align	2
	
	.global	BswM_PreInit

; ..\component\BswM\Implementation\BswM.c	  1186  
; ..\component\BswM\Implementation\BswM.c	  1187  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1188   *  BswM_PreInit()
; ..\component\BswM\Implementation\BswM.c	  1189   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1190  /*!
; ..\component\BswM\Implementation\BswM.c	  1191   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1192   *
; ..\component\BswM\Implementation\BswM.c	  1193   *
; ..\component\BswM\Implementation\BswM.c	  1194   *
; ..\component\BswM\Implementation\BswM.c	  1195   *
; ..\component\BswM\Implementation\BswM.c	  1196   *
; ..\component\BswM\Implementation\BswM.c	  1197   *
; ..\component\BswM\Implementation\BswM.c	  1198   *
; ..\component\BswM\Implementation\BswM.c	  1199   */
; ..\component\BswM\Implementation\BswM.c	  1200  FUNC(void, BSWM_CODE) BswM_PreInit(P2CONST(BswM_ConfigType, AUTOMATIC, BSWM_INIT_DATA) ConfigPtr)
; Function BswM_PreInit
.L107:
BswM_PreInit:	.type	func

; ..\component\BswM\Implementation\BswM.c	  1201  {
; ..\component\BswM\Implementation\BswM.c	  1202    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1203    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  1204    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionCounter;
; ..\component\BswM\Implementation\BswM.c	  1205  
; ..\component\BswM\Implementation\BswM.c	  1206  #if (BSWM_USE_INIT_POINTER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1207    /* #10 Set BswM_ConfigPtr */
; ..\component\BswM\Implementation\BswM.c	  1208    BswM_ConfigPtr = ConfigPtr;
; ..\component\BswM\Implementation\BswM.c	  1209  
; ..\component\BswM\Implementation\BswM.c	  1210    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1211    /* Check if the config pointer is a null pointer. */
; ..\component\BswM\Implementation\BswM.c	  1212    if(ConfigPtr == NULL_PTR)
; ..\component\BswM\Implementation\BswM.c	  1213    {
; ..\component\BswM\Implementation\BswM.c	  1214  # if (BSWM_USE_ECUM_BSW_ERROR_HOOK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1215      EcuM_BswErrorHook((uint16) BSWM_MODULE_ID, (uint8) ECUM_BSWERROR_NULLPTR);
; ..\component\BswM\Implementation\BswM.c	  1216  # elif (BSWM_DEV_ERROR_DETECT == STD_ON) /* COV_BSWM_DEV_ERROR_DETECT TX */
; ..\component\BswM\Implementation\BswM.c	  1217      errorId = BSWM_E_NULL_POINTER;
; ..\component\BswM\Implementation\BswM.c	  1218  # endif
; ..\component\BswM\Implementation\BswM.c	  1219    }
; ..\component\BswM\Implementation\BswM.c	  1220  # if (BSWM_FINALMAGICNUMBER == STD_ON && BSWM_USE_ECUM_BSW_ERROR_HOOK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1221    else if(BswM_GetFinalMagicNumber() != BSWM_FINAL_MAGIC_NUMBER)
; ..\component\BswM\Implementation\BswM.c	  1222    {
; ..\component\BswM\Implementation\BswM.c	  1223      EcuM_BswErrorHook((uint16) BSWM_MODULE_ID, (uint8) ECUM_BSWERROR_MAGICNUMBER);
; ..\component\BswM\Implementation\BswM.c	  1224    }
; ..\component\BswM\Implementation\BswM.c	  1225  # endif
; ..\component\BswM\Implementation\BswM.c	  1226    else
; ..\component\BswM\Implementation\BswM.c	  1227  #else
; ..\component\BswM\Implementation\BswM.c	  1228    BSWM_DUMMY_STATEMENT_CONST(ConfigPtr);
; ..\component\BswM\Implementation\BswM.c	  1229  #endif
; ..\component\BswM\Implementation\BswM.c	  1230    {
; ..\component\BswM\Implementation\BswM.c	  1231      /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1232      /* #20 If all Det checks passed
; ..\component\BswM\Implementation\BswM.c	  1233       *      Create Internal Partition Idx Lookup Table
; ..\component\BswM\Implementation\BswM.c	  1234       *      Set all partition init flags to uninitialized
; ..\component\BswM\Implementation\BswM.c	  1235       *      Set CoreSync Value
; ..\component\BswM\Implementation\BswM.c	  1236       *      Set PreInitialized variable to TRUE
; ..\component\BswM\Implementation\BswM.c	  1237       */
; ..\component\BswM\Implementation\BswM.c	  1238  #if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1239      BswM_CreatePartitionLookUpTable();
; ..\component\BswM\Implementation\BswM.c	  1240  #endif
; ..\component\BswM\Implementation\BswM.c	  1241  
; ..\component\BswM\Implementation\BswM.c	  1242      for (partitionCounter = 0u; partitionCounter < BswM_GetSizeOfPartitionIdentifiers(); partitionCounter++)
; ..\component\BswM\Implementation\BswM.c	  1243      {
; ..\component\BswM\Implementation\BswM.c	  1244        BswM_SetInitialized(FALSE, partitionCounter); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	movh.a	a15,#@his(BswM_Initialized)
.L459:

; ..\component\BswM\Implementation\BswM.c	  1245  #if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1246        BswM_SetCoreSyncValue(BswM_GetSyncValue(partitionCounter), partitionCounter); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1247  #endif
; ..\component\BswM\Implementation\BswM.c	  1248      }
; ..\component\BswM\Implementation\BswM.c	  1249    }
; ..\component\BswM\Implementation\BswM.c	  1250    
; ..\component\BswM\Implementation\BswM.c	  1251    BswM_SetPreInitialized(TRUE);
	mov	d15,#0
	st.b	[a15]@los(BswM_Initialized),d15
.L460:
	movh.a	a15,#@his(BswM_PreInitialized)
	mov	d15,#1
	st.b	[a15]@los(BswM_PreInitialized),d15
.L461:

; ..\component\BswM\Implementation\BswM.c	  1252  
; ..\component\BswM\Implementation\BswM.c	  1253    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1254  #if (BSWM_DEV_ERROR_REPORT == STD_ON) && (BSWM_USE_INIT_POINTER == STD_ON) && (BSWM_USE_ECUM_BSW_ERROR_HOOK == STD_OFF)
; ..\component\BswM\Implementation\BswM.c	  1255    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  1256    {
; ..\component\BswM\Implementation\BswM.c	  1257      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PREINIT_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  1258    }
; ..\component\BswM\Implementation\BswM.c	  1259  #else
; ..\component\BswM\Implementation\BswM.c	  1260    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1261  #endif
; ..\component\BswM\Implementation\BswM.c	  1262  }
	ret
.L237:
	
__BswM_PreInit_function_end:
	.size	BswM_PreInit,__BswM_PreInit_function_end-BswM_PreInit
.L178:
	; End of function
	
	.sdecl	'.text.BswM.BswM_Init',code,cluster('BswM_Init')
	.sect	'.text.BswM.BswM_Init'
	.align	2
	
	.global	BswM_Init

; ..\component\BswM\Implementation\BswM.c	  1263  
; ..\component\BswM\Implementation\BswM.c	  1264  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1265   *  BswM_Init()
; ..\component\BswM\Implementation\BswM.c	  1266   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1267  /*!
; ..\component\BswM\Implementation\BswM.c	  1268   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1269   *
; ..\component\BswM\Implementation\BswM.c	  1270   *
; ..\component\BswM\Implementation\BswM.c	  1271   *
; ..\component\BswM\Implementation\BswM.c	  1272   *
; ..\component\BswM\Implementation\BswM.c	  1273   *
; ..\component\BswM\Implementation\BswM.c	  1274   *
; ..\component\BswM\Implementation\BswM.c	  1275   *
; ..\component\BswM\Implementation\BswM.c	  1276   *
; ..\component\BswM\Implementation\BswM.c	  1277   *
; ..\component\BswM\Implementation\BswM.c	  1278   *
; ..\component\BswM\Implementation\BswM.c	  1279   */
; ..\component\BswM\Implementation\BswM.c	  1280  FUNC(void, BSWM_CODE) BswM_Init(P2CONST(BswM_ConfigType, AUTOMATIC, BSWM_INIT_DATA) ConfigPtr)
; Function BswM_Init
.L109:
BswM_Init:	.type	func

; ..\component\BswM\Implementation\BswM.c	  1281  {
; ..\component\BswM\Implementation\BswM.c	  1282    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1283    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  1284  #if ((BSWM_ACTIONLISTQUEUE == STD_ON) || (BSWM_RULES == STD_ON) || (BSWM_IMMEDIATEUSER == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  1285    BswM_HandleType idx;
; ..\component\BswM\Implementation\BswM.c	  1286  #endif
; ..\component\BswM\Implementation\BswM.c	  1287  
; ..\component\BswM\Implementation\BswM.c	  1288    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetPartitionContext();
; ..\component\BswM\Implementation\BswM.c	  1289  
; ..\component\BswM\Implementation\BswM.c	  1290    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1291  #if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1292  # if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1293    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  1294    {
; ..\component\BswM\Implementation\BswM.c	  1295      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  1296    }
; ..\component\BswM\Implementation\BswM.c	  1297    else
; ..\component\BswM\Implementation\BswM.c	  1298  # endif
; ..\component\BswM\Implementation\BswM.c	  1299    if (BswM_IsPreInitialized() == FALSE)
	mov	d8,#0
	movh.a	a15,#@his(BswM_PreInitialized)
.L418:
	mov	d9,d8
	ld.bu	d15,[a15]@los(BswM_PreInitialized)
.L302:
	jne	d15,#0,.L28
.L419:

; ..\component\BswM\Implementation\BswM.c	  1300    {
; ..\component\BswM\Implementation\BswM.c	  1301      errorId = BSWM_E_NO_PREINIT;
	mov	d9,#129
	j	.L29
.L28:

; ..\component\BswM\Implementation\BswM.c	  1302    }
; ..\component\BswM\Implementation\BswM.c	  1303    else if (BswM_IsInitialized(partitionIdx))
	movh.a	a6,#@his(BswM_Initialized)
	lea	a6,[a6]@los(BswM_Initialized)
	ld.bu	d15,[a6]
.L420:
	jeq	d15,#0,.L30
.L421:

; ..\component\BswM\Implementation\BswM.c	  1304    {
; ..\component\BswM\Implementation\BswM.c	  1305      errorId = BSWM_E_ALREADY_INITIALIZED;
	mov	d9,#128
	j	.L31
.L30:

; ..\component\BswM\Implementation\BswM.c	  1306    }
; ..\component\BswM\Implementation\BswM.c	  1307    else
; ..\component\BswM\Implementation\BswM.c	  1308  #endif
; ..\component\BswM\Implementation\BswM.c	  1309      /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1310    {
; ..\component\BswM\Implementation\BswM.c	  1311      /* #30 Initialize all static module variables. */
; ..\component\BswM\Implementation\BswM.c	  1312      
; ..\component\BswM\Implementation\BswM.c	  1313      /* Lock semaphore during initialization to queue incoming mode requests */
; ..\component\BswM\Implementation\BswM.c	  1314      BswM_SetQueueSemaphore(BSWM_REQUEST_SEMAPHORE_LOCKED, partitionIdx); /* PRQA S 2982 */ /* MD_BSWM_2982 */ /* SBSW_BSWM_PARTITIONINDEXACCESS */
	movh.a	a12,#@his(BswM_QueueSemaphore)
	lea	a12,[a12]@los(BswM_QueueSemaphore)
	mov	d0,#1
	st.b	[a12],d0
.L422:

; ..\component\BswM\Implementation\BswM.c	  1315  
; ..\component\BswM\Implementation\BswM.c	  1316  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1317      BswM_SetQueueWritten(FALSE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	movh.a	a13,#@his(BswM_QueueWritten)
	lea	a13,[a13]@los(BswM_QueueWritten)
	st.b	[a13],d8
.L423:

; ..\component\BswM\Implementation\BswM.c	  1318  #endif
; ..\component\BswM\Implementation\BswM.c	  1319  
; ..\component\BswM\Implementation\BswM.c	  1320  #if ( BSWM_FORCEDOFIMMEDIATEUSER == STD_ON )
; ..\component\BswM\Implementation\BswM.c	  1321      BswM_SetForcedActionListPriority(BSWM_ACTIONLIST_PENDING, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1322  #endif
; ..\component\BswM\Implementation\BswM.c	  1323  
; ..\component\BswM\Implementation\BswM.c	  1324  #if ( BSWM_ACTIONLISTQUEUE == STD_ON )
; ..\component\BswM\Implementation\BswM.c	  1325      for (idx = 0u; idx < BswM_GetSizeOfActionListQueue(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1326      {
; ..\component\BswM\Implementation\BswM.c	  1327        BswM_SetActionListQueue(idx, BSWM_ACTIONLIST_IDLE, partitionIdx); /* SBSW_BSWM_SETACTIONLISTQUEUE */
	movh.a	a15,#@his(BswM_ActionListQueue)
	lea	a15,[a15]@los(BswM_ActionListQueue)
.L424:
	mov.a	a2,#11
.L32:
	st.b	[a15+],d8
	loop	a2,.L32
.L425:

; ..\component\BswM\Implementation\BswM.c	  1328      }
; ..\component\BswM\Implementation\BswM.c	  1329  # if (BSWM_ACTIONLISTPRIORITYQUEUE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1330      BswM_SetLengthOfActionListPriorityQueue(0u, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1331  # endif
; ..\component\BswM\Implementation\BswM.c	  1332  #endif
; ..\component\BswM\Implementation\BswM.c	  1333  
; ..\component\BswM\Implementation\BswM.c	  1334  #if (BSWM_RULES == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1335      for (idx = 0u; idx < BswM_GetSizeOfRules(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1336      {
; ..\component\BswM\Implementation\BswM.c	  1337        BswM_SetRuleStates(BswM_GetRuleStatesIdxOfRules(idx, partitionIdx), BswM_GetInitOfRules(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_SETRULESTATE */
	movh.a	a15,#@his(BswM_Rules)
	lea	a15,[a15]@los(BswM_Rules)
	movh.a	a2,#@his(BswM_RuleStates)
	lea	a2,[a2]@los(BswM_RuleStates)
.L426:
	mov.a	a4,#9
.L33:
	ld.bu	d15,[a15]1
.L427:
	lea	a15,[a15]8
.L428:
	addsc.a	a5,a2,d15,#0
.L429:
	st.b	[a5],d8
	loop	a4,.L33
.L430:

; ..\component\BswM\Implementation\BswM.c	  1338      }
; ..\component\BswM\Implementation\BswM.c	  1339  #endif
; ..\component\BswM\Implementation\BswM.c	  1340  
; ..\component\BswM\Implementation\BswM.c	  1341  #if (BSWM_CANSMCHANNELSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1342      for (idx = 0u; idx < BswM_GetSizeOfCanSMChannelState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1343      {
; ..\component\BswM\Implementation\BswM.c	  1344        BswM_SetCanSMChannelState(idx, BswM_GetInitValueOfCanSMChannelMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_CANSMCHANNELSTATE */
; ..\component\BswM\Implementation\BswM.c	  1345      }
; ..\component\BswM\Implementation\BswM.c	  1346  #endif
; ..\component\BswM\Implementation\BswM.c	  1347  
; ..\component\BswM\Implementation\BswM.c	  1348  #if (BSWM_COMMCHANNELSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1349      for (idx = 0u; idx < BswM_GetSizeOfComMChannelState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1350      {
; ..\component\BswM\Implementation\BswM.c	  1351        BswM_SetComMChannelState(idx, BswM_GetInitValueOfComMChannelMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_COMMCHANNELSTATE */
; ..\component\BswM\Implementation\BswM.c	  1352      }
; ..\component\BswM\Implementation\BswM.c	  1353  #endif
; ..\component\BswM\Implementation\BswM.c	  1354  
; ..\component\BswM\Implementation\BswM.c	  1355  #if (BSWM_COMMINITIATERESETSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1356  # if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  1357      for (idx = 0u; idx < BswM_GetSizeOfComMInitiateResetMapping(partitionIdx); idx++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  1358  # endif
; ..\component\BswM\Implementation\BswM.c	  1359      {
; ..\component\BswM\Implementation\BswM.c	  1360        BswM_SetComMInitiateResetState(BswM_GetInitValueOfComMInitiateResetMapping(0u, partitionIdx), partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1361      }
; ..\component\BswM\Implementation\BswM.c	  1362  #endif
; ..\component\BswM\Implementation\BswM.c	  1363  
; ..\component\BswM\Implementation\BswM.c	  1364  #if (BSWM_COMMPNCSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1365      for (idx = 0u; idx < BswM_GetSizeOfComMPncState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1366      {
; ..\component\BswM\Implementation\BswM.c	  1367        BswM_SetComMPncState(idx, BswM_GetInitValueOfComMPncMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_COMMPNCSTATE */
; ..\component\BswM\Implementation\BswM.c	  1368      }
; ..\component\BswM\Implementation\BswM.c	  1369  #endif
; ..\component\BswM\Implementation\BswM.c	  1370  
; ..\component\BswM\Implementation\BswM.c	  1371  #if (BSWM_DCMAPPLUPDATESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1372  # if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  1373      for (idx = 0u; idx < BswM_GetSizeOfDcmApplUpdateMapping(partitionIdx); idx++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  1374  # endif
; ..\component\BswM\Implementation\BswM.c	  1375      {
; ..\component\BswM\Implementation\BswM.c	  1376        BswM_SetDcmApplUpdateState(BswM_GetInitValueOfDcmApplUpdateMapping(0u, partitionIdx), partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1377      }
; ..\component\BswM\Implementation\BswM.c	  1378  #endif
; ..\component\BswM\Implementation\BswM.c	  1379  
; ..\component\BswM\Implementation\BswM.c	  1380  #if (BSWM_DCMCOMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1381      for (idx = 0u; idx < BswM_GetSizeOfDcmComState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1382      {
; ..\component\BswM\Implementation\BswM.c	  1383        BswM_SetDcmComState(idx, BswM_GetInitValueOfDcmComMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_DCMCOMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1384      }
; ..\component\BswM\Implementation\BswM.c	  1385  #endif
; ..\component\BswM\Implementation\BswM.c	  1386  
; ..\component\BswM\Implementation\BswM.c	  1387  #if (BSWM_ECUMMODESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1388  # if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  1389      for (idx = 0u; idx < BswM_GetSizeOfEcuMModeMapping(partitionIdx); idx++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  1390  # endif
; ..\component\BswM\Implementation\BswM.c	  1391      {
; ..\component\BswM\Implementation\BswM.c	  1392        BswM_SetEcuMModeState(BswM_GetInitValueOfEcuMModeMapping(0u, partitionIdx), partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1393      }
; ..\component\BswM\Implementation\BswM.c	  1394  #endif
; ..\component\BswM\Implementation\BswM.c	  1395  
; ..\component\BswM\Implementation\BswM.c	  1396  #if (BSWM_ECUMRUNREQUESTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1397      for (idx = 0u; idx < BswM_GetSizeOfEcuMRunRequestState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1398      {
; ..\component\BswM\Implementation\BswM.c	  1399        BswM_SetEcuMRunRequestState(idx, BswM_GetInitValueOfEcuMRunRequestMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_ECUMRUNREQUESTSTATE */
; ..\component\BswM\Implementation\BswM.c	  1400      }
; ..\component\BswM\Implementation\BswM.c	  1401  #endif
; ..\component\BswM\Implementation\BswM.c	  1402  
; ..\component\BswM\Implementation\BswM.c	  1403  #if (BSWM_ECUMWAKEUPSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1404      for (idx = 0u; idx < BswM_GetSizeOfEcuMWakeupState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1405      {
; ..\component\BswM\Implementation\BswM.c	  1406        BswM_SetEcuMWakeupState(idx, BswM_GetInitValueOfEcuMWakeupMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_ECUMWAKEUPSTATE */
; ..\component\BswM\Implementation\BswM.c	  1407      }
; ..\component\BswM\Implementation\BswM.c	  1408  #endif
; ..\component\BswM\Implementation\BswM.c	  1409  
; ..\component\BswM\Implementation\BswM.c	  1410  #if (BSWM_ETHIFPORTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1411      for (idx = 0u; idx < BswM_GetSizeOfEthIfPortState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1412      {
; ..\component\BswM\Implementation\BswM.c	  1413        BswM_SetEthIfPortState(idx, BswM_GetInitValueOfEthIfPortMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_ETHIFPORTSTATE */
; ..\component\BswM\Implementation\BswM.c	  1414      }
; ..\component\BswM\Implementation\BswM.c	  1415  #endif
; ..\component\BswM\Implementation\BswM.c	  1416  
; ..\component\BswM\Implementation\BswM.c	  1417  #if (BSWM_ETHSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1418      for (idx = 0u; idx < BswM_GetSizeOfEthSMState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1419      {
; ..\component\BswM\Implementation\BswM.c	  1420        BswM_SetEthSMState(idx, BswM_GetInitValueOfEthSMMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_ETHSMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1421      }
; ..\component\BswM\Implementation\BswM.c	  1422  #endif
; ..\component\BswM\Implementation\BswM.c	  1423  
; ..\component\BswM\Implementation\BswM.c	  1424  #if (BSWM_FRSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1425      for (idx = 0u; idx < BswM_GetSizeOfFrSMState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1426      {
; ..\component\BswM\Implementation\BswM.c	  1427        BswM_SetFrSMState(idx, BswM_GetInitValueOfFrSMMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_FRSMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1428      }
; ..\component\BswM\Implementation\BswM.c	  1429  #endif
; ..\component\BswM\Implementation\BswM.c	  1430  
; ..\component\BswM\Implementation\BswM.c	  1431  #if (BSWM_GENERICSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1432      for (idx = 0u; idx < BswM_GetSizeOfGenericState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1433      {
; ..\component\BswM\Implementation\BswM.c	  1434        BswM_SetGenericState(idx, BswM_GetInitValueOfGenericMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_GENERICSTATE */
	movh.a	a15,#@his(BswM_GenericState)
.L431:

; ..\component\BswM\Implementation\BswM.c	  1435      }
; ..\component\BswM\Implementation\BswM.c	  1436  #endif
; ..\component\BswM\Implementation\BswM.c	  1437  
; ..\component\BswM\Implementation\BswM.c	  1438  #if (BSWM_J1939DCMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1439  # if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  1440      for (idx = 0u; idx < BswM_GetSizeOfJ1939DcmMapping(partitionIdx); idx++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  1441  # endif
; ..\component\BswM\Implementation\BswM.c	  1442      {
; ..\component\BswM\Implementation\BswM.c	  1443        BswM_SetJ1939DcmState(BswM_GetInitValueOfJ1939DcmMapping(0, partitionIdx), partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1444      }
; ..\component\BswM\Implementation\BswM.c	  1445  #endif
; ..\component\BswM\Implementation\BswM.c	  1446  
; ..\component\BswM\Implementation\BswM.c	  1447  #if (BSWM_J1939NMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1448      for (idx = 0u; idx < BswM_GetSizeOfJ1939NmState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1449      {
; ..\component\BswM\Implementation\BswM.c	  1450        BswM_SetJ1939NmState(idx, BswM_GetInitValueOfJ1939NmMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_J1939NMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1451      }
; ..\component\BswM\Implementation\BswM.c	  1452  #endif
; ..\component\BswM\Implementation\BswM.c	  1453  
; ..\component\BswM\Implementation\BswM.c	  1454  #if (BSWM_LINSCHEDULESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1455      for (idx = 0u; idx < BswM_GetSizeOfLinScheduleState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1456      {
; ..\component\BswM\Implementation\BswM.c	  1457        BswM_SetLinScheduleState(idx, BswM_GetInitValueOfLinScheduleMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_LINSCHEDULESTATE */
; ..\component\BswM\Implementation\BswM.c	  1458      }
; ..\component\BswM\Implementation\BswM.c	  1459  #endif
; ..\component\BswM\Implementation\BswM.c	  1460  
; ..\component\BswM\Implementation\BswM.c	  1461  #if (BSWM_LINSCHEDULEENDSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1462      for (idx = 0u; idx < BswM_GetSizeOfLinScheduleEndState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1463      {
; ..\component\BswM\Implementation\BswM.c	  1464        BswM_SetLinScheduleEndState(idx, BswM_GetInitValueOfLinScheduleEndMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_LINSCHEDULEENDSTATE */
; ..\component\BswM\Implementation\BswM.c	  1465      }
; ..\component\BswM\Implementation\BswM.c	  1466  #endif
; ..\component\BswM\Implementation\BswM.c	  1467  
; ..\component\BswM\Implementation\BswM.c	  1468  #if (BSWM_LINSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1469      for (idx = 0u; idx < BswM_GetSizeOfLinSMState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1470      {
; ..\component\BswM\Implementation\BswM.c	  1471        BswM_SetLinSMState(idx, BswM_GetInitValueOfLinSMMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_LINSMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1472      }
; ..\component\BswM\Implementation\BswM.c	  1473  #endif
; ..\component\BswM\Implementation\BswM.c	  1474  
; ..\component\BswM\Implementation\BswM.c	  1475  #if (BSWM_LINTPSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1476      for (idx = 0u; idx < BswM_GetSizeOfLinTPState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1477      {
; ..\component\BswM\Implementation\BswM.c	  1478        BswM_SetLinTPState(idx, BswM_GetInitValueOfLinTPMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_LINTPSTATE */
; ..\component\BswM\Implementation\BswM.c	  1479      }
; ..\component\BswM\Implementation\BswM.c	  1480  #endif
; ..\component\BswM\Implementation\BswM.c	  1481  
; ..\component\BswM\Implementation\BswM.c	  1482  #if (BSWM_NMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1483      for (idx = 0u; idx < BswM_GetSizeOfNmState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1484      {
; ..\component\BswM\Implementation\BswM.c	  1485        BswM_SetNmState(idx, BswM_GetInitValueOfNmMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_NMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1486      }
; ..\component\BswM\Implementation\BswM.c	  1487  #endif
; ..\component\BswM\Implementation\BswM.c	  1488  
; ..\component\BswM\Implementation\BswM.c	  1489  #if (BSWM_NVMJOBSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1490      for (idx = 0u; idx < BswM_GetSizeOfNvMJobState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1491      {
; ..\component\BswM\Implementation\BswM.c	  1492        BswM_SetNvMJobState(idx, BswM_GetInitValueOfNvMJobMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_NVMJOBSTATE */
; ..\component\BswM\Implementation\BswM.c	  1493      }
; ..\component\BswM\Implementation\BswM.c	  1494  #endif
; ..\component\BswM\Implementation\BswM.c	  1495  
; ..\component\BswM\Implementation\BswM.c	  1496  #if (BSWM_NVMBLOCKSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1497      for (idx = 0u; idx < BswM_GetSizeOfNvMBlockState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1498      {
; ..\component\BswM\Implementation\BswM.c	  1499        BswM_SetNvMBlockState(idx, BswM_GetInitValueOfNvMBlockMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_NVMBLOCKSTATE */
; ..\component\BswM\Implementation\BswM.c	  1500      }
; ..\component\BswM\Implementation\BswM.c	  1501  #endif
; ..\component\BswM\Implementation\BswM.c	  1502  
; ..\component\BswM\Implementation\BswM.c	  1503  #if (BSWM_PDURPRETRANSMITSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1504      for (idx = 0u; idx < BswM_GetSizeOfPduRPreTransmitState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1505      {
; ..\component\BswM\Implementation\BswM.c	  1506        BswM_SetPduRPreTransmitState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURPRETRANSMITSTATE */
; ..\component\BswM\Implementation\BswM.c	  1507      }
; ..\component\BswM\Implementation\BswM.c	  1508  #endif
; ..\component\BswM\Implementation\BswM.c	  1509  
; ..\component\BswM\Implementation\BswM.c	  1510  #if (BSWM_PDURRXINDICATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1511      for (idx = 0u; idx < BswM_GetSizeOfPduRRxIndicationState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1512      {
; ..\component\BswM\Implementation\BswM.c	  1513        BswM_SetPduRRxIndicationState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURRXINDICATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  1514      }
; ..\component\BswM\Implementation\BswM.c	  1515  #endif
; ..\component\BswM\Implementation\BswM.c	  1516  
; ..\component\BswM\Implementation\BswM.c	  1517  #if (BSWM_PDURTPRXINDICATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1518      for (idx = 0u; idx < BswM_GetSizeOfPduRTpRxIndicationState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1519      {
; ..\component\BswM\Implementation\BswM.c	  1520        BswM_SetPduRTpRxIndicationState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPRXINDICATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  1521      }
; ..\component\BswM\Implementation\BswM.c	  1522  #endif
; ..\component\BswM\Implementation\BswM.c	  1523  
; ..\component\BswM\Implementation\BswM.c	  1524  #if (BSWM_PDURTPSTARTOFRECEPTIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1525      for (idx = 0u; idx < BswM_GetSizeOfPduRTpStartOfReceptionState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1526      {
; ..\component\BswM\Implementation\BswM.c	  1527        BswM_SetPduRTpStartOfReceptionState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  1528      }
; ..\component\BswM\Implementation\BswM.c	  1529  #endif
; ..\component\BswM\Implementation\BswM.c	  1530  
; ..\component\BswM\Implementation\BswM.c	  1531  #if (BSWM_PDURTPTXCONFIRMATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1532      for (idx = 0u; idx < BswM_GetSizeOfPduRTpTxConfirmationState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1533      {
; ..\component\BswM\Implementation\BswM.c	  1534        BswM_SetPduRTpTxConfirmationState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPTXCONFIRMATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  1535      }
; ..\component\BswM\Implementation\BswM.c	  1536  #endif
; ..\component\BswM\Implementation\BswM.c	  1537  
; ..\component\BswM\Implementation\BswM.c	  1538  #if (BSWM_PDURTRANSMITSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1539      for (idx = 0u; idx < BswM_GetSizeOfPduRTransmitState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1540      {
; ..\component\BswM\Implementation\BswM.c	  1541        BswM_SetPduRTransmitState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURTRANSMITSTATE */
; ..\component\BswM\Implementation\BswM.c	  1542      }
; ..\component\BswM\Implementation\BswM.c	  1543  #endif
; ..\component\BswM\Implementation\BswM.c	  1544  
; ..\component\BswM\Implementation\BswM.c	  1545  #if (BSWM_PDURTXCONFIRMATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1546      for (idx = 0u; idx < BswM_GetSizeOfPduRTxConfirmationState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1547      {
; ..\component\BswM\Implementation\BswM.c	  1548        BswM_SetPduRTxConfirmationState(idx, FALSE, partitionIdx); /* SBSW_BSWM_PDURTXCONFIRMATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  1549      }
; ..\component\BswM\Implementation\BswM.c	  1550  #endif
; ..\component\BswM\Implementation\BswM.c	  1551  
; ..\component\BswM\Implementation\BswM.c	  1552  #if (BSWM_SDCLIENTSERVICESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1553      for (idx = 0u; idx < BswM_GetSizeOfSdClientServiceState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1554      {
; ..\component\BswM\Implementation\BswM.c	  1555        BswM_SetSdClientServiceState(idx, BswM_GetInitValueOfSdClientServiceMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_SDCLIENTSERVICESTATE */
; ..\component\BswM\Implementation\BswM.c	  1556      }
; ..\component\BswM\Implementation\BswM.c	  1557  #endif
; ..\component\BswM\Implementation\BswM.c	  1558  
; ..\component\BswM\Implementation\BswM.c	  1559  #if (BSWM_SDCONSUMEDEVENTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1560      for (idx = 0u; idx < BswM_GetSizeOfSdConsumedEventState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1561      {
; ..\component\BswM\Implementation\BswM.c	  1562        BswM_SetSdConsumedEventState(idx, BswM_GetInitValueOfSdConsumedEventMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_SDCONSUMEDEVENTSTATE */
; ..\component\BswM\Implementation\BswM.c	  1563      }
; ..\component\BswM\Implementation\BswM.c	  1564  #endif
; ..\component\BswM\Implementation\BswM.c	  1565  
; ..\component\BswM\Implementation\BswM.c	  1566  #if (BSWM_SDEVENTHANDLERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1567      for (idx = 0u; idx < BswM_GetSizeOfSdEventHandlerState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1568      {
; ..\component\BswM\Implementation\BswM.c	  1569        BswM_SetSdEventHandlerState(idx, BswM_GetInitValueOfSdEventHandlerMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_SDEVENTHANDLERSTATE */
; ..\component\BswM\Implementation\BswM.c	  1570      }
; ..\component\BswM\Implementation\BswM.c	  1571  #endif
; ..\component\BswM\Implementation\BswM.c	  1572  
; ..\component\BswM\Implementation\BswM.c	  1573  #if (BSWM_TIMERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1574      for (idx = 0u; idx < BswM_GetSizeOfTimerState(partitionIdx); idx++)
	mov	d0,d8
	st.h	[a15]@los(BswM_GenericState),d0
.L432:

; ..\component\BswM\Implementation\BswM.c	  1575      {
; ..\component\BswM\Implementation\BswM.c	  1576        BswM_SetTimerState(idx, BSWM_TIMER_STOPPED, partitionIdx); /* SBSW_BSWM_SETTIMER */
; ..\component\BswM\Implementation\BswM.c	  1577        BswM_SetTimerValue(idx, 0u, partitionIdx); /* SBSW_BSWM_SETTIMER */
	movh.a	a15,#@his(BswM_TimerValue)
.L433:

; ..\component\BswM\Implementation\BswM.c	  1578      }
; ..\component\BswM\Implementation\BswM.c	  1579  #endif
; ..\component\BswM\Implementation\BswM.c	  1580  
; ..\component\BswM\Implementation\BswM.c	  1581  #if (BSWM_WDGMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1582      for (idx = 0u; idx < BswM_GetSizeOfWdgMState(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1583      {
; ..\component\BswM\Implementation\BswM.c	  1584        BswM_SetWdgMState(idx, BswM_GetInitValueOfWdgMMapping(idx, partitionIdx), partitionIdx); /* SBSW_BSWM_WDGMSTATE */
; ..\component\BswM\Implementation\BswM.c	  1585      }
; ..\component\BswM\Implementation\BswM.c	  1586  #endif
; ..\component\BswM\Implementation\BswM.c	  1587  
; ..\component\BswM\Implementation\BswM.c	  1588  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1589      for(idx = 0u; idx < BswM_GetSizeOfModeRequestQueue(partitionIdx); idx++)
	st.w	[a15]@los(BswM_TimerValue),d0
.L434:
	movh.a	a15,#@his(BswM_TimerState)
.L435:
	st.b	[a15]@los(BswM_TimerState),d8
.L436:

; ..\component\BswM\Implementation\BswM.c	  1590      {
; ..\component\BswM\Implementation\BswM.c	  1591  # if (BSWM_ONINITOFIMMEDIATEUSER == STD_ON && BSWM_INITGENVARANDINITAL == STD_OFF)
; ..\component\BswM\Implementation\BswM.c	  1592        if(BswM_IsOnInitOfImmediateUser(idx, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  1593        {
; ..\component\BswM\Implementation\BswM.c	  1594          BswM_SetQueueWritten(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1595          BswM_SetModeRequestQueue(idx, BSWM_REQUEST_QUEUED, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
; ..\component\BswM\Implementation\BswM.c	  1596        }
; ..\component\BswM\Implementation\BswM.c	  1597        else
; ..\component\BswM\Implementation\BswM.c	  1598  # endif
; ..\component\BswM\Implementation\BswM.c	  1599        {
; ..\component\BswM\Implementation\BswM.c	  1600          BswM_SetModeRequestQueue(idx, BSWM_REQUEST_IDLE, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
	movh.a	a15,#@his(BswM_ModeRequestQueue)
.L437:

; ..\component\BswM\Implementation\BswM.c	  1601        }
; ..\component\BswM\Implementation\BswM.c	  1602      }
; ..\component\BswM\Implementation\BswM.c	  1603  #endif
; ..\component\BswM\Implementation\BswM.c	  1604  
; ..\component\BswM\Implementation\BswM.c	  1605      BswM_SetInitialized(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	st.b	[a15]@los(BswM_ModeRequestQueue),d8
.L438:
	mov	d0,#1
	st.b	[a6],d0
.L439:

; ..\component\BswM\Implementation\BswM.c	  1606      
; ..\component\BswM\Implementation\BswM.c	  1607  #if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1608      /* #31 In case of Multi Partition, synchronize all partitions and cores */
; ..\component\BswM\Implementation\BswM.c	  1609      BswM_GetInitSyncCallout(0u, partitionIdx)(partitionIdx, BSWM_SYNC_LEVEL_ONE); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1610  #endif
; ..\component\BswM\Implementation\BswM.c	  1611  
; ..\component\BswM\Implementation\BswM.c	  1612  #if (BSWM_INITGENVARANDINITAL == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1613  # if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1614      if (BswM_HasInitGenVarAndInitAL(partitionIdx)) /* PRQA S 2741 */ /* MD_BSWM_2741 */ /* COV_BSWM_ALL_TRUE TX */
; ..\component\BswM\Implementation\BswM.c	  1615  # endif
; ..\component\BswM\Implementation\BswM.c	  1616      {
; ..\component\BswM\Implementation\BswM.c	  1617        /* #32 Initialize dynamic variables and initiating action lists. */
; ..\component\BswM\Implementation\BswM.c	  1618        (void)BswM_GetInitGenVarAndInitAL(0u, partitionIdx)(partitionIdx); /* SBSW_BSWM_ACTIONLISTFCTPTR */
	movh.a	a2,#@his(BswM_InitGenVarAndInitAL)
	ld.a	a2,[a2]@los(BswM_InitGenVarAndInitAL)
.L440:
	mov	d4,d8
	calli	a2
.L441:

; ..\component\BswM\Implementation\BswM.c	  1619      }
; ..\component\BswM\Implementation\BswM.c	  1620  # if(BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1621      /* #33 In case of Multi Partition, synchronize all partitions and cores */
; ..\component\BswM\Implementation\BswM.c	  1622      BswM_GetInitSyncCallout(0u, partitionIdx)(partitionIdx, BSWM_SYNC_LEVEL_TWO); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1623  # endif
; ..\component\BswM\Implementation\BswM.c	  1624  # if (BSWM_ONINITOFIMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1625      /* #34 Queue mode request which shall be arbitrated on initialization (this must be done after executing the
; ..\component\BswM\Implementation\BswM.c	  1626       *       initiating action lists to avoid development errors due to already queued mode requests). */
; ..\component\BswM\Implementation\BswM.c	  1627      for(idx = 0u; idx < BswM_GetSizeOfModeRequestQueue(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1628      {
; ..\component\BswM\Implementation\BswM.c	  1629        if (BswM_IsOnInitOfImmediateUser(idx, partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  1630        {
; ..\component\BswM\Implementation\BswM.c	  1631          BswM_SetQueueWritten(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  1632          BswM_SetModeRequestQueue(idx, BSWM_REQUEST_QUEUED, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
; ..\component\BswM\Implementation\BswM.c	  1633        }
; ..\component\BswM\Implementation\BswM.c	  1634      }
; ..\component\BswM\Implementation\BswM.c	  1635  # endif
; ..\component\BswM\Implementation\BswM.c	  1636  #endif
; ..\component\BswM\Implementation\BswM.c	  1637  
; ..\component\BswM\Implementation\BswM.c	  1638  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1639      /* #35 Arbitrate mode requests which shall be arbitrated on initialization or occurred during the execution of the
; ..\component\BswM\Implementation\BswM.c	  1640       *     initiating action lists. */
; ..\component\BswM\Implementation\BswM.c	  1641      BswM_ProcessQueuedRequests(partitionIdx);
	mov	d15,#1
	st.b	[a15]@los(BswM_ModeRequestQueue),d15
	st.b	[a13],d15
.L442:
	mov	d4,d8
	call	BswM_ProcessQueuedRequests
.L443:

; ..\component\BswM\Implementation\BswM.c	  1642  #endif
; ..\component\BswM\Implementation\BswM.c	  1643      
; ..\component\BswM\Implementation\BswM.c	  1644      BswM_SetQueueSemaphore(BSWM_REQUEST_SEMAPHORE_UNLOCKED, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	st.b	[a12],d8
.L31:
.L29:

; ..\component\BswM\Implementation\BswM.c	  1645    }
; ..\component\BswM\Implementation\BswM.c	  1646  # if(BSWM_MULTIPARTITION == STD_OFF)
; ..\component\BswM\Implementation\BswM.c	  1647    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1648  # endif
; ..\component\BswM\Implementation\BswM.c	  1649  
; ..\component\BswM\Implementation\BswM.c	  1650    BSWM_DUMMY_STATEMENT_CONST(ConfigPtr); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1651  
; ..\component\BswM\Implementation\BswM.c	  1652    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1653  #if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1654    if (errorId != BSWM_E_NO_ERROR)
	jeq	d9,#0,.L34
.L444:

; ..\component\BswM\Implementation\BswM.c	  1655    {
; ..\component\BswM\Implementation\BswM.c	  1656      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_INIT_ID, errorId);
	mov	e6,d9,d8
	mov	d5,d8
.L445:
	mov	d4,#42
.L446:
	j	Det_ReportError
.L34:

; ..\component\BswM\Implementation\BswM.c	  1657    }
; ..\component\BswM\Implementation\BswM.c	  1658  #else
; ..\component\BswM\Implementation\BswM.c	  1659    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1660  #endif
; ..\component\BswM\Implementation\BswM.c	  1661  } /* PRQA S 6010, 6030, 6080 */ /* MD_MSR_STPTH, MD_MSR_STCYC, MD_MSR_STMIF */
	ret
.L231:
	
__BswM_Init_function_end:
	.size	BswM_Init,__BswM_Init_function_end-BswM_Init
.L168:
	; End of function
	
	.sdecl	'.text.BswM.BswM_Deinit',code,cluster('BswM_Deinit')
	.sect	'.text.BswM.BswM_Deinit'
	.align	2
	
	.global	BswM_Deinit

; ..\component\BswM\Implementation\BswM.c	  1662  
; ..\component\BswM\Implementation\BswM.c	  1663  
; ..\component\BswM\Implementation\BswM.c	  1664  
; ..\component\BswM\Implementation\BswM.c	  1665  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1666   *  BswM_Deinit()
; ..\component\BswM\Implementation\BswM.c	  1667   **********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1668  /*!
; ..\component\BswM\Implementation\BswM.c	  1669   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1670   *
; ..\component\BswM\Implementation\BswM.c	  1671   *
; ..\component\BswM\Implementation\BswM.c	  1672   *
; ..\component\BswM\Implementation\BswM.c	  1673   */
; ..\component\BswM\Implementation\BswM.c	  1674  FUNC(void, BSWM_CODE) BswM_Deinit(void)
; Function BswM_Deinit
.L111:
BswM_Deinit:	.type	func

; ..\component\BswM\Implementation\BswM.c	  1675  {
; ..\component\BswM\Implementation\BswM.c	  1676    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1677  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1678    BswM_ModeRequestQueueIterType queueIndex;
; ..\component\BswM\Implementation\BswM.c	  1679  #endif
; ..\component\BswM\Implementation\BswM.c	  1680  
; ..\component\BswM\Implementation\BswM.c	  1681    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetPartitionContext();
; ..\component\BswM\Implementation\BswM.c	  1682  
; ..\component\BswM\Implementation\BswM.c	  1683    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1684    /* #30 Set state of BswM to not initialized. */
; ..\component\BswM\Implementation\BswM.c	  1685    BswM_SetInitialized(FALSE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	movh.a	a15,#@his(BswM_Initialized)
	mov	d15,#0
	st.b	[a15]@los(BswM_Initialized),d15
.L451:

; ..\component\BswM\Implementation\BswM.c	  1686  
; ..\component\BswM\Implementation\BswM.c	  1687  #if (BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1688    BswM_EnterCriticalArea_0();
	call	SuspendAllInterrupts
.L452:

; ..\component\BswM\Implementation\BswM.c	  1689  
; ..\component\BswM\Implementation\BswM.c	  1690    /* #31 Remove queued mode requests. */
; ..\component\BswM\Implementation\BswM.c	  1691    for(queueIndex = 0u; queueIndex < BswM_GetSizeOfModeRequestQueue(partitionIdx); queueIndex++)
; ..\component\BswM\Implementation\BswM.c	  1692    {
; ..\component\BswM\Implementation\BswM.c	  1693      BswM_SetModeRequestQueue(queueIndex, BSWM_REQUEST_IDLE, partitionIdx); /* SBSW_BSWM_SETMODEREQUESTQUEUE */
	movh.a	a15,#@his(BswM_ModeRequestQueue)
.L453:

; ..\component\BswM\Implementation\BswM.c	  1694    }
; ..\component\BswM\Implementation\BswM.c	  1695  
; ..\component\BswM\Implementation\BswM.c	  1696    BswM_LeaveCriticalArea_0();
	st.b	[a15]@los(BswM_ModeRequestQueue),d15
.L454:
	j	ResumeAllInterrupts
.L236:
	
__BswM_Deinit_function_end:
	.size	BswM_Deinit,__BswM_Deinit_function_end-BswM_Deinit
.L173:
	; End of function
	
	.sdecl	'.text.BswM.BswM_RequestMode',code,cluster('BswM_RequestMode')
	.sect	'.text.BswM.BswM_RequestMode'
	.align	2
	
	.global	BswM_RequestMode

; ..\component\BswM\Implementation\BswM.c	  1697  #endif
; ..\component\BswM\Implementation\BswM.c	  1698  
; ..\component\BswM\Implementation\BswM.c	  1699    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1700  }
; ..\component\BswM\Implementation\BswM.c	  1701  
; ..\component\BswM\Implementation\BswM.c	  1702  #if(BSWM_VERSION_INFO_API == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1703  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1704   *  BswM_GetVersionInfo()
; ..\component\BswM\Implementation\BswM.c	  1705   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1706  /*!
; ..\component\BswM\Implementation\BswM.c	  1707   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1708   *
; ..\component\BswM\Implementation\BswM.c	  1709   *
; ..\component\BswM\Implementation\BswM.c	  1710   *
; ..\component\BswM\Implementation\BswM.c	  1711   */
; ..\component\BswM\Implementation\BswM.c	  1712  FUNC(void, BSWM_CODE) BswM_GetVersionInfo(P2VAR(Std_VersionInfoType, AUTOMATIC, BSWM_APPL_DATA) VersionInfo)
; ..\component\BswM\Implementation\BswM.c	  1713  {
; ..\component\BswM\Implementation\BswM.c	  1714    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1715    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  1716  
; ..\component\BswM\Implementation\BswM.c	  1717    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1718  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1719    /* #20 Check if the passed parameter is not a null pointer. */
; ..\component\BswM\Implementation\BswM.c	  1720    if (VersionInfo == NULL_PTR)
; ..\component\BswM\Implementation\BswM.c	  1721    {
; ..\component\BswM\Implementation\BswM.c	  1722      errorId = BSWM_E_PARAM_INVALID;
; ..\component\BswM\Implementation\BswM.c	  1723    }
; ..\component\BswM\Implementation\BswM.c	  1724    else
; ..\component\BswM\Implementation\BswM.c	  1725  # endif
; ..\component\BswM\Implementation\BswM.c	  1726    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1727    {
; ..\component\BswM\Implementation\BswM.c	  1728      /* #30 Pass the version information to the Std_VersionInfoType pointer. */
; ..\component\BswM\Implementation\BswM.c	  1729      VersionInfo -> vendorID         = BSWM_VENDOR_ID; /* SBSW_BSWM_GETVERSIONINFO */
; ..\component\BswM\Implementation\BswM.c	  1730      VersionInfo -> moduleID         = BSWM_MODULE_ID; /* SBSW_BSWM_GETVERSIONINFO */
; ..\component\BswM\Implementation\BswM.c	  1731      VersionInfo -> sw_major_version = (uint8)BSWM_SW_MAJOR_VERSION; /* SBSW_BSWM_GETVERSIONINFO */
; ..\component\BswM\Implementation\BswM.c	  1732      VersionInfo -> sw_minor_version = BSWM_SW_MINOR_VERSION; /* SBSW_BSWM_GETVERSIONINFO */
; ..\component\BswM\Implementation\BswM.c	  1733      VersionInfo -> sw_patch_version = BSWM_SW_PATCH_VERSION; /* SBSW_BSWM_GETVERSIONINFO */
; ..\component\BswM\Implementation\BswM.c	  1734    }
; ..\component\BswM\Implementation\BswM.c	  1735    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1736  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1737    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  1738    {
; ..\component\BswM\Implementation\BswM.c	  1739      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_GETVERSIONINFO_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  1740    }
; ..\component\BswM\Implementation\BswM.c	  1741  # else
; ..\component\BswM\Implementation\BswM.c	  1742    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1743  # endif
; ..\component\BswM\Implementation\BswM.c	  1744  }
; ..\component\BswM\Implementation\BswM.c	  1745  #endif
; ..\component\BswM\Implementation\BswM.c	  1746  
; ..\component\BswM\Implementation\BswM.c	  1747  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1748   *  BswM_RequestMode()
; ..\component\BswM\Implementation\BswM.c	  1749   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1750  /*!
; ..\component\BswM\Implementation\BswM.c	  1751   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1752   *
; ..\component\BswM\Implementation\BswM.c	  1753   *
; ..\component\BswM\Implementation\BswM.c	  1754   *
; ..\component\BswM\Implementation\BswM.c	  1755   *
; ..\component\BswM\Implementation\BswM.c	  1756   *
; ..\component\BswM\Implementation\BswM.c	  1757   */
; ..\component\BswM\Implementation\BswM.c	  1758  FUNC(void, BSWM_CODE) BswM_RequestMode(BswM_UserType requesting_user, BswM_ModeType requested_mode)
; Function BswM_RequestMode
.L113:
BswM_RequestMode:	.type	func

; ..\component\BswM\Implementation\BswM.c	  1759  {
; ..\component\BswM\Implementation\BswM.c	  1760    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1761    uint8 errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  1762  #if(BSWM_GENERICSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1763    BswM_GenericStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  1764  #endif
; ..\component\BswM\Implementation\BswM.c	  1765    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  1766  
; ..\component\BswM\Implementation\BswM.c	  1767    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1768  #if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1769  # if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1770    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  1771    {
; ..\component\BswM\Implementation\BswM.c	  1772      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  1773    }
; ..\component\BswM\Implementation\BswM.c	  1774    else
; ..\component\BswM\Implementation\BswM.c	  1775  # endif
; ..\component\BswM\Implementation\BswM.c	  1776    if (!BswM_IsInitialized(partitionIdx))
	mov	d7,#4
	fcall	.cocofun_1
	jne	d15,#0,.L35
.L466:

; ..\component\BswM\Implementation\BswM.c	  1777    {
; ..\component\BswM\Implementation\BswM.c	  1778      errorId = BSWM_E_NO_INIT;
	mov	d7,#1
	j	.L36
.L35:

; ..\component\BswM\Implementation\BswM.c	  1779    }
; ..\component\BswM\Implementation\BswM.c	  1780    else
; ..\component\BswM\Implementation\BswM.c	  1781  #endif
; ..\component\BswM\Implementation\BswM.c	  1782    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1783    {
; ..\component\BswM\Implementation\BswM.c	  1784  #if(BSWM_GENERICSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1785      for(userHandle = 0u; userHandle < BswM_GetSizeOfGenericState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  1786      {
; ..\component\BswM\Implementation\BswM.c	  1787        if (BswM_GetExternalIdOfGenericMapping(userHandle, partitionIdx) == requesting_user)
	mov	d15,#230
.L467:
	jne	d15,d4,.L37
.L468:

; ..\component\BswM\Implementation\BswM.c	  1788        {
; ..\component\BswM\Implementation\BswM.c	  1789          BswM_SetGenericState(userHandle, requested_mode, partitionIdx); /* SBSW_BSWM_GENERICSTATE */
; ..\component\BswM\Implementation\BswM.c	  1790  # if(BSWM_IMMEDIATEUSERUSEDOFGENERICMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1791          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfGenericMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfGenericMapping(userHandle, partitionIdx), BSWM_REQUESTMODE_ID, partitionIdx);
	mov	d4,#0
	movh.a	a15,#@his(BswM_GenericState)
.L306:
	mov	d6,#2
	st.h	[a15]@los(BswM_GenericState),d5
.L469:
	mov	d5,#1
.L305:
	mov	d7,d4
	call	BswM_ImmediateModeRequest
.L304:

; ..\component\BswM\Implementation\BswM.c	  1792  # endif
; ..\component\BswM\Implementation\BswM.c	  1793          /* errorId is initialized with BSWM_E_REQ_USER_OUT_OF_RANGE but user exists - set errorId to BSWM_E_NO_ERROR */
; ..\component\BswM\Implementation\BswM.c	  1794          errorId = BSWM_E_NO_ERROR;
	mov	d7,#0
.L37:
.L36:

; ..\component\BswM\Implementation\BswM.c	  1795          break;
; ..\component\BswM\Implementation\BswM.c	  1796        }
; ..\component\BswM\Implementation\BswM.c	  1797      }
; ..\component\BswM\Implementation\BswM.c	  1798  #else
; ..\component\BswM\Implementation\BswM.c	  1799      BSWM_DUMMY_STATEMENT(requesting_user); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1800      BSWM_DUMMY_STATEMENT(requested_mode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1801  #endif
; ..\component\BswM\Implementation\BswM.c	  1802    }
; ..\component\BswM\Implementation\BswM.c	  1803    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1804    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1805  #if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1806  # if(BSWM_GENERICSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1807    if (errorId != BSWM_E_NO_ERROR)
	jeq	d7,#0,.L38
.L470:

; ..\component\BswM\Implementation\BswM.c	  1808  # endif
; ..\component\BswM\Implementation\BswM.c	  1809    {
; ..\component\BswM\Implementation\BswM.c	  1810      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_REQUESTMODE_ID, errorId);
	fcall	.cocofun_2
.L307:
	mov	d6,#2
.L308:
	j	Det_ReportError
.L38:

; ..\component\BswM\Implementation\BswM.c	  1811    }
; ..\component\BswM\Implementation\BswM.c	  1812  #else
; ..\component\BswM\Implementation\BswM.c	  1813    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1814  #endif
; ..\component\BswM\Implementation\BswM.c	  1815  } /* BswM_RequestMode() */
	ret
.L239:
	
__BswM_RequestMode_function_end:
	.size	BswM_RequestMode,__BswM_RequestMode_function_end-BswM_RequestMode
.L183:
	; End of function
	
	.sdecl	'.text.BswM..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.BswM..cocofun_2'
	.align	2
; Function .cocofun_2
.L115:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	mov	d4,#42
.L310:
	mov	d5,#0
	fret
.L208:
	; End of function
	.sdecl	'.text.BswM..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.BswM..cocofun_1'
	.align	2
; Function .cocofun_1
.L117:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	movh.a	a15,#@his(BswM_Initialized)
.L303:
	ld.bu	d15,[a15]@los(BswM_Initialized)
.L580:
	fret
.L203:
	; End of function
	.sdecl	'.text.BswM.BswM_ComM_CurrentMode',code,cluster('BswM_ComM_CurrentMode')
	.sect	'.text.BswM.BswM_ComM_CurrentMode'
	.align	2
	
	.global	BswM_ComM_CurrentMode

; ..\component\BswM\Implementation\BswM.c	  1816  
; ..\component\BswM\Implementation\BswM.c	  1817  #if (BSWM_ENABLE_RULE_CONTROL == STD_ON) && (BSWM_RULES == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1818  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1819   *  BswM_RuleControl()
; ..\component\BswM\Implementation\BswM.c	  1820   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1821  /*!
; ..\component\BswM\Implementation\BswM.c	  1822   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1823   *
; ..\component\BswM\Implementation\BswM.c	  1824   *
; ..\component\BswM\Implementation\BswM.c	  1825   *
; ..\component\BswM\Implementation\BswM.c	  1826   *
; ..\component\BswM\Implementation\BswM.c	  1827   */
; ..\component\BswM\Implementation\BswM.c	  1828  FUNC(void, BSWM_CODE) BswM_RuleControl(BswM_IdOfRulesType ruleId, uint8 state)
; ..\component\BswM\Implementation\BswM.c	  1829  {
; ..\component\BswM\Implementation\BswM.c	  1830    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1831    uint8 errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  1832    BswM_HandleType idx;
; ..\component\BswM\Implementation\BswM.c	  1833    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  1834  
; ..\component\BswM\Implementation\BswM.c	  1835    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1836  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1837  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1838    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  1839    {
; ..\component\BswM\Implementation\BswM.c	  1840      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  1841    }
; ..\component\BswM\Implementation\BswM.c	  1842    else
; ..\component\BswM\Implementation\BswM.c	  1843  #  endif
; ..\component\BswM\Implementation\BswM.c	  1844    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  1845    {
; ..\component\BswM\Implementation\BswM.c	  1846      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  1847    }
; ..\component\BswM\Implementation\BswM.c	  1848    else if (state > BSWM_DEACTIVATED)
; ..\component\BswM\Implementation\BswM.c	  1849    {
; ..\component\BswM\Implementation\BswM.c	  1850      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  1851    }
; ..\component\BswM\Implementation\BswM.c	  1852    else
; ..\component\BswM\Implementation\BswM.c	  1853  # endif
; ..\component\BswM\Implementation\BswM.c	  1854    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1855    {
; ..\component\BswM\Implementation\BswM.c	  1856      for(idx = 0u; idx < BswM_GetSizeOfRules(partitionIdx); idx++)
; ..\component\BswM\Implementation\BswM.c	  1857      {
; ..\component\BswM\Implementation\BswM.c	  1858        if(BswM_GetIdOfRules(idx, partitionIdx) == ruleId)
; ..\component\BswM\Implementation\BswM.c	  1859        {
; ..\component\BswM\Implementation\BswM.c	  1860          BswM_SetRuleStates(BswM_GetRuleStatesIdxOfRules(idx, partitionIdx), state, partitionIdx); /* SBSW_BSWM_SETRULESTATE */
; ..\component\BswM\Implementation\BswM.c	  1861          /* errorId is initialized with BSWM_E_REQ_USER_OUT_OF_RANGE but user exists - set errorId to BSWM_E_NO_ERROR */
; ..\component\BswM\Implementation\BswM.c	  1862          errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  1863          break;
; ..\component\BswM\Implementation\BswM.c	  1864        }
; ..\component\BswM\Implementation\BswM.c	  1865      }
; ..\component\BswM\Implementation\BswM.c	  1866    }
; ..\component\BswM\Implementation\BswM.c	  1867  
; ..\component\BswM\Implementation\BswM.c	  1868    BSWM_DUMMY_STATEMENT(ruleId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1869    BSWM_DUMMY_STATEMENT_DET_OFF(state); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1870    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1871  
; ..\component\BswM\Implementation\BswM.c	  1872    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1873  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1874    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  1875    {
; ..\component\BswM\Implementation\BswM.c	  1876      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_RULECONTROL_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  1877    }
; ..\component\BswM\Implementation\BswM.c	  1878  # else
; ..\component\BswM\Implementation\BswM.c	  1879    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1880  # endif
; ..\component\BswM\Implementation\BswM.c	  1881  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  1882  #endif
; ..\component\BswM\Implementation\BswM.c	  1883  
; ..\component\BswM\Implementation\BswM.c	  1884  #if( BSWM_ENABLE_COMM == STD_ON )
; ..\component\BswM\Implementation\BswM.c	  1885  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1886   *  BswM_ComM_CurrentMode()
; ..\component\BswM\Implementation\BswM.c	  1887   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1888  /*!
; ..\component\BswM\Implementation\BswM.c	  1889   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1890   *
; ..\component\BswM\Implementation\BswM.c	  1891   *
; ..\component\BswM\Implementation\BswM.c	  1892   *
; ..\component\BswM\Implementation\BswM.c	  1893   *
; ..\component\BswM\Implementation\BswM.c	  1894   *
; ..\component\BswM\Implementation\BswM.c	  1895   */
; ..\component\BswM\Implementation\BswM.c	  1896  FUNC(void, BSWM_CODE) BswM_ComM_CurrentMode(NetworkHandleType Network, ComM_ModeType RequestedMode)
; Function BswM_ComM_CurrentMode
.L119:
BswM_ComM_CurrentMode:	.type	func

; ..\component\BswM\Implementation\BswM.c	  1897  {
; ..\component\BswM\Implementation\BswM.c	  1898    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1899    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  1900  # if (BSWM_COMMCHANNELSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1901    BswM_ComMChannelStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  1902  # endif
; ..\component\BswM\Implementation\BswM.c	  1903  
; ..\component\BswM\Implementation\BswM.c	  1904    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  1905  
; ..\component\BswM\Implementation\BswM.c	  1906    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1907  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1908    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7924, SPEC-7863, SPEC-7903 ) */
; ..\component\BswM\Implementation\BswM.c	  1909  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1910    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  1911    {
; ..\component\BswM\Implementation\BswM.c	  1912      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  1913    }
; ..\component\BswM\Implementation\BswM.c	  1914    else
; ..\component\BswM\Implementation\BswM.c	  1915  #  endif
; ..\component\BswM\Implementation\BswM.c	  1916    if (!BswM_IsInitialized(partitionIdx))
	mov	d7,#0
	fcall	.cocofun_1
	jne	d15,#0,.L39
.L327:

; ..\component\BswM\Implementation\BswM.c	  1917    {
; ..\component\BswM\Implementation\BswM.c	  1918      errorId = BSWM_E_NO_INIT;
	mov	d7,#1
	j	.L40
.L39:

; ..\component\BswM\Implementation\BswM.c	  1919    }
; ..\component\BswM\Implementation\BswM.c	  1920    else if (Network >= BSWM_CHANNEL_COUNT)
	jeq	d4,#0,.L41
.L328:

; ..\component\BswM\Implementation\BswM.c	  1921    {
; ..\component\BswM\Implementation\BswM.c	  1922      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
	mov	d7,#4
	j	.L42
.L41:

; ..\component\BswM\Implementation\BswM.c	  1923    }
; ..\component\BswM\Implementation\BswM.c	  1924  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1925    else if (RequestedMode > COMM_FULL_COMMUNICATION)
	lt.u	d15,d5,#3
.L329:

; ..\component\BswM\Implementation\BswM.c	  1926    {
; ..\component\BswM\Implementation\BswM.c	  1927      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
	cmovn	d7,d15,#5
.L42:
.L40:

; ..\component\BswM\Implementation\BswM.c	  1928    }
; ..\component\BswM\Implementation\BswM.c	  1929  #  endif
; ..\component\BswM\Implementation\BswM.c	  1930    else
; ..\component\BswM\Implementation\BswM.c	  1931  # endif
; ..\component\BswM\Implementation\BswM.c	  1932    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1933    {
; ..\component\BswM\Implementation\BswM.c	  1934  # if (BSWM_COMMCHANNELSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1935      for (userHandle = 0u; userHandle < BswM_GetSizeOfComMChannelState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  1936      {
; ..\component\BswM\Implementation\BswM.c	  1937        if (BswM_GetExternalIdOfComMChannelMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  1938        {
; ..\component\BswM\Implementation\BswM.c	  1939          BswM_SetComMChannelState(userHandle, RequestedMode, partitionIdx); /* SBSW_BSWM_COMMCHANNELSTATE */
; ..\component\BswM\Implementation\BswM.c	  1940  #  if (BSWM_IMMEDIATEUSERUSEDOFCOMMCHANNELMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1941          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfComMChannelMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfComMChannelMapping(userHandle, partitionIdx), BSWM_COMM_CURRENTMODE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  1942  #  endif
; ..\component\BswM\Implementation\BswM.c	  1943          break;
; ..\component\BswM\Implementation\BswM.c	  1944        }
; ..\component\BswM\Implementation\BswM.c	  1945      }
; ..\component\BswM\Implementation\BswM.c	  1946  # else
; ..\component\BswM\Implementation\BswM.c	  1947      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1948      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(RequestedMode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1949  # endif
; ..\component\BswM\Implementation\BswM.c	  1950    }
; ..\component\BswM\Implementation\BswM.c	  1951    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1952    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1953  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1954    if (errorId != BSWM_E_NO_ERROR)
	jeq	d7,#0,.L44
.L330:

; ..\component\BswM\Implementation\BswM.c	  1955    {
; ..\component\BswM\Implementation\BswM.c	  1956      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_COMM_CURRENTMODE_ID, errorId);
	fcall	.cocofun_2
.L309:
	mov	d6,#14
.L331:
	j	Det_ReportError
.L44:

; ..\component\BswM\Implementation\BswM.c	  1957    }
; ..\component\BswM\Implementation\BswM.c	  1958  # else
; ..\component\BswM\Implementation\BswM.c	  1959    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  1960  # endif
; ..\component\BswM\Implementation\BswM.c	  1961  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
	ret
.L209:
	
__BswM_ComM_CurrentMode_function_end:
	.size	BswM_ComM_CurrentMode,__BswM_ComM_CurrentMode_function_end-BswM_ComM_CurrentMode
.L138:
	; End of function
	
	.sdecl	'.text.BswM.BswM_CanSM_CurrentState',code,cluster('BswM_CanSM_CurrentState')
	.sect	'.text.BswM.BswM_CanSM_CurrentState'
	.align	2
	
	.global	BswM_CanSM_CurrentState

; ..\component\BswM\Implementation\BswM.c	  1962  #endif
; ..\component\BswM\Implementation\BswM.c	  1963  
; ..\component\BswM\Implementation\BswM.c	  1964  #if (BSWM_COMM_INITIATE_RESET == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1965  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  1966   *  BswM_ComM_InitiateReset()
; ..\component\BswM\Implementation\BswM.c	  1967   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  1968  /*!
; ..\component\BswM\Implementation\BswM.c	  1969   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  1970   *
; ..\component\BswM\Implementation\BswM.c	  1971   *
; ..\component\BswM\Implementation\BswM.c	  1972   *
; ..\component\BswM\Implementation\BswM.c	  1973   *
; ..\component\BswM\Implementation\BswM.c	  1974   *
; ..\component\BswM\Implementation\BswM.c	  1975   */
; ..\component\BswM\Implementation\BswM.c	  1976  FUNC(void, BSWM_CODE) BswM_ComM_InitiateReset(void)
; ..\component\BswM\Implementation\BswM.c	  1977  {
; ..\component\BswM\Implementation\BswM.c	  1978    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1979    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  1980  # if (BSWM_IMMEDIATEUSERUSEDOFCOMMINITIATERESETMAPPING == STD_ON) && ((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1981    BswM_ComMInitiateResetMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  1982  # endif
; ..\component\BswM\Implementation\BswM.c	  1983    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  1984  
; ..\component\BswM\Implementation\BswM.c	  1985    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  1986  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1987    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  1988  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  1989    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  1990    {
; ..\component\BswM\Implementation\BswM.c	  1991      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  1992    }
; ..\component\BswM\Implementation\BswM.c	  1993    else
; ..\component\BswM\Implementation\BswM.c	  1994  #  endif
; ..\component\BswM\Implementation\BswM.c	  1995    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  1996    {
; ..\component\BswM\Implementation\BswM.c	  1997      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  1998    }
; ..\component\BswM\Implementation\BswM.c	  1999    else
; ..\component\BswM\Implementation\BswM.c	  2000  # endif
; ..\component\BswM\Implementation\BswM.c	  2001    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2002    {
; ..\component\BswM\Implementation\BswM.c	  2003  
; ..\component\BswM\Implementation\BswM.c	  2004  # if(BSWM_IMMEDIATEUSERUSEDOFCOMMINITIATERESETMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2005  #  if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  2006      for (userHandle = 0u; userHandle < BswM_GetSizeOfComMInitiateResetMapping(partitionIdx); userHandle++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  2007  #  endif
; ..\component\BswM\Implementation\BswM.c	  2008      {
; ..\component\BswM\Implementation\BswM.c	  2009        BswM_SetComMInitiateResetState(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  2010        BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfComMInitiateResetMapping(0u, partitionIdx), BswM_GetImmediateUserEndIdxOfComMInitiateResetMapping(0u, partitionIdx), BSWM_COMM_INITIATERESET_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2011        BswM_SetComMInitiateResetState(FALSE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  2012      }
; ..\component\BswM\Implementation\BswM.c	  2013  # endif
; ..\component\BswM\Implementation\BswM.c	  2014    }
; ..\component\BswM\Implementation\BswM.c	  2015    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2016    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2017  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2018    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2019    {
; ..\component\BswM\Implementation\BswM.c	  2020      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_COMM_INITIATERESET_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2021    }
; ..\component\BswM\Implementation\BswM.c	  2022  # else
; ..\component\BswM\Implementation\BswM.c	  2023    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2024  # endif
; ..\component\BswM\Implementation\BswM.c	  2025  }
; ..\component\BswM\Implementation\BswM.c	  2026  #endif
; ..\component\BswM\Implementation\BswM.c	  2027  
; ..\component\BswM\Implementation\BswM.c	  2028  #if (BSWM_COMM_PNC_SUPPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2029  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2030   *  BswM_ComM_CurrentPNCMode()
; ..\component\BswM\Implementation\BswM.c	  2031   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2032  /*!
; ..\component\BswM\Implementation\BswM.c	  2033   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2034   *
; ..\component\BswM\Implementation\BswM.c	  2035   *
; ..\component\BswM\Implementation\BswM.c	  2036   *
; ..\component\BswM\Implementation\BswM.c	  2037   *
; ..\component\BswM\Implementation\BswM.c	  2038   *
; ..\component\BswM\Implementation\BswM.c	  2039   */
; ..\component\BswM\Implementation\BswM.c	  2040  FUNC(void, BSWM_CODE) BswM_ComM_CurrentPNCMode(PNCHandleType PNC, ComM_PncModeType RequestedMode)
; ..\component\BswM\Implementation\BswM.c	  2041  {
; ..\component\BswM\Implementation\BswM.c	  2042    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2043    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2044  # if (BSWM_COMMPNCSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2045    BswM_ComMPncStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2046  # endif
; ..\component\BswM\Implementation\BswM.c	  2047    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2048  
; ..\component\BswM\Implementation\BswM.c	  2049    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2050  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2051    /* #20 Check if partition is valid and BswM is initialized and passed mode is in range.  ( \trace SPEC-16710, SPEC-16754 ) */
; ..\component\BswM\Implementation\BswM.c	  2052  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2053    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2054    {
; ..\component\BswM\Implementation\BswM.c	  2055      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2056    }
; ..\component\BswM\Implementation\BswM.c	  2057    else
; ..\component\BswM\Implementation\BswM.c	  2058  #  endif
; ..\component\BswM\Implementation\BswM.c	  2059    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2060    {
; ..\component\BswM\Implementation\BswM.c	  2061      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2062    }
; ..\component\BswM\Implementation\BswM.c	  2063  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2064    else if (RequestedMode > COMM_PNC_REQUESTED)
; ..\component\BswM\Implementation\BswM.c	  2065    {
; ..\component\BswM\Implementation\BswM.c	  2066      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2067    }
; ..\component\BswM\Implementation\BswM.c	  2068  #  endif
; ..\component\BswM\Implementation\BswM.c	  2069    else
; ..\component\BswM\Implementation\BswM.c	  2070  # endif
; ..\component\BswM\Implementation\BswM.c	  2071    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2072    {
; ..\component\BswM\Implementation\BswM.c	  2073  # if (BSWM_COMMPNCSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2074      for (userHandle = 0u; userHandle < BswM_GetSizeOfComMPncState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2075      {
; ..\component\BswM\Implementation\BswM.c	  2076        if (BswM_GetExternalIdOfComMPncMapping(userHandle, partitionIdx) == PNC)
; ..\component\BswM\Implementation\BswM.c	  2077        {
; ..\component\BswM\Implementation\BswM.c	  2078          BswM_SetComMPncState(userHandle, RequestedMode, partitionIdx); /* SBSW_BSWM_COMMPNCSTATE */
; ..\component\BswM\Implementation\BswM.c	  2079  #  if (BSWM_IMMEDIATEUSERUSEDOFCOMMPNCMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2080          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfComMPncMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfComMPncMapping(userHandle, partitionIdx), BSWM_COMM_PNC_CURRENTMODE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2081  #  endif
; ..\component\BswM\Implementation\BswM.c	  2082          break;
; ..\component\BswM\Implementation\BswM.c	  2083        }
; ..\component\BswM\Implementation\BswM.c	  2084      }
; ..\component\BswM\Implementation\BswM.c	  2085  # else
; ..\component\BswM\Implementation\BswM.c	  2086      BSWM_DUMMY_STATEMENT(PNC); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2087      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(RequestedMode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2088  # endif
; ..\component\BswM\Implementation\BswM.c	  2089    }
; ..\component\BswM\Implementation\BswM.c	  2090    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2091    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2092  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2093    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2094    {
; ..\component\BswM\Implementation\BswM.c	  2095      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_COMM_PNC_CURRENTMODE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2096    }
; ..\component\BswM\Implementation\BswM.c	  2097  # else
; ..\component\BswM\Implementation\BswM.c	  2098    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2099  # endif
; ..\component\BswM\Implementation\BswM.c	  2100  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2101  #endif
; ..\component\BswM\Implementation\BswM.c	  2102  
; ..\component\BswM\Implementation\BswM.c	  2103  #if (BSWM_ENABLE_DCM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2104  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2105   *  BswM_Dcm_ApplicationUpdated()
; ..\component\BswM\Implementation\BswM.c	  2106   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2107  /*!
; ..\component\BswM\Implementation\BswM.c	  2108   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2109   *
; ..\component\BswM\Implementation\BswM.c	  2110   *
; ..\component\BswM\Implementation\BswM.c	  2111   *
; ..\component\BswM\Implementation\BswM.c	  2112   *
; ..\component\BswM\Implementation\BswM.c	  2113   *
; ..\component\BswM\Implementation\BswM.c	  2114   */
; ..\component\BswM\Implementation\BswM.c	  2115  FUNC(void, BSWM_CODE) BswM_Dcm_ApplicationUpdated(void) 
; ..\component\BswM\Implementation\BswM.c	  2116  {
; ..\component\BswM\Implementation\BswM.c	  2117    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2118    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2119  # if (BSWM_IMMEDIATEUSERUSEDOFDCMAPPLUPDATEMAPPING == STD_ON) && ((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2120    BswM_DcmApplUpdateMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2121  # endif
; ..\component\BswM\Implementation\BswM.c	  2122    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2123  
; ..\component\BswM\Implementation\BswM.c	  2124    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2125  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2126    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  2127  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2128    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2129    {
; ..\component\BswM\Implementation\BswM.c	  2130      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2131    }
; ..\component\BswM\Implementation\BswM.c	  2132    else
; ..\component\BswM\Implementation\BswM.c	  2133  #  endif
; ..\component\BswM\Implementation\BswM.c	  2134    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2135    {
; ..\component\BswM\Implementation\BswM.c	  2136      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2137    }
; ..\component\BswM\Implementation\BswM.c	  2138    else
; ..\component\BswM\Implementation\BswM.c	  2139  # endif
; ..\component\BswM\Implementation\BswM.c	  2140    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2141    {
; ..\component\BswM\Implementation\BswM.c	  2142  # if(BSWM_IMMEDIATEUSERUSEDOFDCMAPPLUPDATEMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2143  #  if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  2144      for (userHandle = 0u; userHandle < BswM_GetSizeOfDcmApplUpdateMapping(partitionIdx); userHandle++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  2145  #  endif
; ..\component\BswM\Implementation\BswM.c	  2146      {
; ..\component\BswM\Implementation\BswM.c	  2147        BswM_SetDcmApplUpdateState(TRUE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  2148        BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfDcmApplUpdateMapping(0u, partitionIdx), BswM_GetImmediateUserEndIdxOfDcmApplUpdateMapping(0u, partitionIdx), BSWM_DCM_APPLICATION_UPDATED_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2149        BswM_SetDcmApplUpdateState(FALSE, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  2150      }
; ..\component\BswM\Implementation\BswM.c	  2151  # endif
; ..\component\BswM\Implementation\BswM.c	  2152    }
; ..\component\BswM\Implementation\BswM.c	  2153    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2154    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2155  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2156    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2157    {
; ..\component\BswM\Implementation\BswM.c	  2158      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_DCM_APPLICATION_UPDATED_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2159    }
; ..\component\BswM\Implementation\BswM.c	  2160  # else
; ..\component\BswM\Implementation\BswM.c	  2161    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2162  # endif
; ..\component\BswM\Implementation\BswM.c	  2163  }
; ..\component\BswM\Implementation\BswM.c	  2164  #endif
; ..\component\BswM\Implementation\BswM.c	  2165  
; ..\component\BswM\Implementation\BswM.c	  2166  #if(BSWM_ENABLE_DCM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2167  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2168   *  BswM_Dcm_CommunicationMode_CurrentState()
; ..\component\BswM\Implementation\BswM.c	  2169   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2170  /*!
; ..\component\BswM\Implementation\BswM.c	  2171   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2172   *
; ..\component\BswM\Implementation\BswM.c	  2173   *
; ..\component\BswM\Implementation\BswM.c	  2174   *
; ..\component\BswM\Implementation\BswM.c	  2175   *
; ..\component\BswM\Implementation\BswM.c	  2176   *
; ..\component\BswM\Implementation\BswM.c	  2177   */
; ..\component\BswM\Implementation\BswM.c	  2178  FUNC(void, BSWM_CODE) BswM_Dcm_CommunicationMode_CurrentState(NetworkHandleType Network, Dcm_CommunicationModeType RequestedMode)
; ..\component\BswM\Implementation\BswM.c	  2179  {
; ..\component\BswM\Implementation\BswM.c	  2180    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2181    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2182  # if (BSWM_DCMCOMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2183    BswM_DcmComStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2184  # endif
; ..\component\BswM\Implementation\BswM.c	  2185    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2186  
; ..\component\BswM\Implementation\BswM.c	  2187    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2188  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2189    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7844, SPEC-7923, SPEC-7946 ) */
; ..\component\BswM\Implementation\BswM.c	  2190  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2191    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2192    {
; ..\component\BswM\Implementation\BswM.c	  2193      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2194    }
; ..\component\BswM\Implementation\BswM.c	  2195    else
; ..\component\BswM\Implementation\BswM.c	  2196  #  endif
; ..\component\BswM\Implementation\BswM.c	  2197    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2198    {
; ..\component\BswM\Implementation\BswM.c	  2199      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2200    }
; ..\component\BswM\Implementation\BswM.c	  2201    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2202    {
; ..\component\BswM\Implementation\BswM.c	  2203      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2204    }
; ..\component\BswM\Implementation\BswM.c	  2205  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2206    else if (RequestedMode > DCM_DISABLE_RX_TX_NORM_NM)
; ..\component\BswM\Implementation\BswM.c	  2207    {
; ..\component\BswM\Implementation\BswM.c	  2208      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2209    }
; ..\component\BswM\Implementation\BswM.c	  2210  #  endif
; ..\component\BswM\Implementation\BswM.c	  2211    else
; ..\component\BswM\Implementation\BswM.c	  2212  # endif
; ..\component\BswM\Implementation\BswM.c	  2213    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2214    {
; ..\component\BswM\Implementation\BswM.c	  2215  # if (BSWM_DCMCOMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2216      for (userHandle = 0u; userHandle < BswM_GetSizeOfDcmComState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2217      {
; ..\component\BswM\Implementation\BswM.c	  2218        if (BswM_GetExternalIdOfDcmComMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2219        {
; ..\component\BswM\Implementation\BswM.c	  2220          BswM_SetDcmComState(userHandle, RequestedMode, partitionIdx); /* SBSW_BSWM_DCMCOMSTATE */
; ..\component\BswM\Implementation\BswM.c	  2221  #  if (BSWM_IMMEDIATEUSERUSEDOFDCMCOMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2222          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfDcmComMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfDcmComMapping(userHandle, partitionIdx), BSWM_DCM_COMMUNICATION_STATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2223  #  endif
; ..\component\BswM\Implementation\BswM.c	  2224          break;
; ..\component\BswM\Implementation\BswM.c	  2225        }
; ..\component\BswM\Implementation\BswM.c	  2226      }
; ..\component\BswM\Implementation\BswM.c	  2227  # else
; ..\component\BswM\Implementation\BswM.c	  2228      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2229      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(RequestedMode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2230  # endif
; ..\component\BswM\Implementation\BswM.c	  2231    }
; ..\component\BswM\Implementation\BswM.c	  2232    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2233    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2234  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2235    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2236    {
; ..\component\BswM\Implementation\BswM.c	  2237      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_DCM_COMMUNICATION_STATE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2238    }
; ..\component\BswM\Implementation\BswM.c	  2239  # else
; ..\component\BswM\Implementation\BswM.c	  2240    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2241  # endif
; ..\component\BswM\Implementation\BswM.c	  2242  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2243  #endif
; ..\component\BswM\Implementation\BswM.c	  2244  
; ..\component\BswM\Implementation\BswM.c	  2245  #if (BSWM_ENABLE_CANSM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2246  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2247   *  BswM_CanSM_CurrentState()
; ..\component\BswM\Implementation\BswM.c	  2248   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2249  /*!
; ..\component\BswM\Implementation\BswM.c	  2250   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2251   *
; ..\component\BswM\Implementation\BswM.c	  2252   *
; ..\component\BswM\Implementation\BswM.c	  2253   *
; ..\component\BswM\Implementation\BswM.c	  2254   *
; ..\component\BswM\Implementation\BswM.c	  2255   *
; ..\component\BswM\Implementation\BswM.c	  2256   */
; ..\component\BswM\Implementation\BswM.c	  2257  FUNC(void, BSWM_CODE) BswM_CanSM_CurrentState(NetworkHandleType Network, CanSM_BswMCurrentStateType CurrentState)
; Function BswM_CanSM_CurrentState
.L121:
BswM_CanSM_CurrentState:	.type	func

; ..\component\BswM\Implementation\BswM.c	  2258  {
; ..\component\BswM\Implementation\BswM.c	  2259    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2260    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2261  # if (BSWM_CANSMCHANNELSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2262    BswM_CanSMChannelStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2263  # endif
; ..\component\BswM\Implementation\BswM.c	  2264    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2265  
; ..\component\BswM\Implementation\BswM.c	  2266    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2267  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2268    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7737, SPEC-7915, SPEC-7908 ) */
; ..\component\BswM\Implementation\BswM.c	  2269  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2270    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2271    {
; ..\component\BswM\Implementation\BswM.c	  2272      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2273    }
; ..\component\BswM\Implementation\BswM.c	  2274    else
; ..\component\BswM\Implementation\BswM.c	  2275  #  endif
; ..\component\BswM\Implementation\BswM.c	  2276    if (!BswM_IsInitialized(partitionIdx))
	mov	d7,#0
	fcall	.cocofun_1
	jne	d15,#0,.L45
.L336:

; ..\component\BswM\Implementation\BswM.c	  2277    {
; ..\component\BswM\Implementation\BswM.c	  2278      errorId = BSWM_E_NO_INIT;
	mov	d7,#1
	j	.L46
.L45:

; ..\component\BswM\Implementation\BswM.c	  2279    }
; ..\component\BswM\Implementation\BswM.c	  2280    else if (Network >= BSWM_CHANNEL_COUNT)
	jeq	d4,#0,.L47
.L337:

; ..\component\BswM\Implementation\BswM.c	  2281    {
; ..\component\BswM\Implementation\BswM.c	  2282      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
	mov	d7,#4
	j	.L48
.L47:

; ..\component\BswM\Implementation\BswM.c	  2283    }
; ..\component\BswM\Implementation\BswM.c	  2284  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2285    else if (CurrentState > CANSM_BSWM_CHANGE_BAUDRATE)
	lt.u	d15,d5,#5
.L338:

; ..\component\BswM\Implementation\BswM.c	  2286    {
; ..\component\BswM\Implementation\BswM.c	  2287      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
	cmovn	d7,d15,#5
.L48:
.L46:

; ..\component\BswM\Implementation\BswM.c	  2288    }
; ..\component\BswM\Implementation\BswM.c	  2289  #  endif
; ..\component\BswM\Implementation\BswM.c	  2290    else
; ..\component\BswM\Implementation\BswM.c	  2291  # endif
; ..\component\BswM\Implementation\BswM.c	  2292    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2293    {
; ..\component\BswM\Implementation\BswM.c	  2294  # if (BSWM_CANSMCHANNELSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2295      for (userHandle = 0u; userHandle < BswM_GetSizeOfCanSMChannelState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2296      {
; ..\component\BswM\Implementation\BswM.c	  2297        if (BswM_GetExternalIdOfCanSMChannelMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2298        {
; ..\component\BswM\Implementation\BswM.c	  2299          BswM_SetCanSMChannelState(userHandle, CurrentState, partitionIdx); /* SBSW_BSWM_CANSMCHANNELSTATE */
; ..\component\BswM\Implementation\BswM.c	  2300  #  if (BSWM_IMMEDIATEUSERUSEDOFCANSMCHANNELMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2301          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfCanSMChannelMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfCanSMChannelMapping(userHandle, partitionIdx), BSWM_CANSM_CURRENTSTATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2302  #  endif
; ..\component\BswM\Implementation\BswM.c	  2303          break;
; ..\component\BswM\Implementation\BswM.c	  2304        }
; ..\component\BswM\Implementation\BswM.c	  2305      }
; ..\component\BswM\Implementation\BswM.c	  2306  # else
; ..\component\BswM\Implementation\BswM.c	  2307      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2308      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2309  # endif
; ..\component\BswM\Implementation\BswM.c	  2310    }
; ..\component\BswM\Implementation\BswM.c	  2311    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2312    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2313  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2314    if (errorId != BSWM_E_NO_ERROR)
	jeq	d7,#0,.L50
.L339:

; ..\component\BswM\Implementation\BswM.c	  2315    {
; ..\component\BswM\Implementation\BswM.c	  2316      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_CANSM_CURRENTSTATE_ID, errorId);
	fcall	.cocofun_2
.L311:
	mov	d6,#5
.L340:
	j	Det_ReportError
.L50:

; ..\component\BswM\Implementation\BswM.c	  2317    }
; ..\component\BswM\Implementation\BswM.c	  2318  # else
; ..\component\BswM\Implementation\BswM.c	  2319    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2320  # endif
; ..\component\BswM\Implementation\BswM.c	  2321  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
	ret
.L214:
	
__BswM_CanSM_CurrentState_function_end:
	.size	BswM_CanSM_CurrentState,__BswM_CanSM_CurrentState_function_end-BswM_CanSM_CurrentState
.L143:
	; End of function
	
	.sdecl	'.text.BswM.BswM_EcuM_CurrentState',code,cluster('BswM_EcuM_CurrentState')
	.sect	'.text.BswM.BswM_EcuM_CurrentState'
	.align	2
	
	.global	BswM_EcuM_CurrentState

; ..\component\BswM\Implementation\BswM.c	  2322  #endif
; ..\component\BswM\Implementation\BswM.c	  2323  
; ..\component\BswM\Implementation\BswM.c	  2324  #if (BSWM_ENABLE_ETHIF == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2325  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2326   *  BswM_EthIf_PortGroupLinkStateChg()
; ..\component\BswM\Implementation\BswM.c	  2327   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2328  /*!
; ..\component\BswM\Implementation\BswM.c	  2329   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2330   *
; ..\component\BswM\Implementation\BswM.c	  2331   *
; ..\component\BswM\Implementation\BswM.c	  2332   *
; ..\component\BswM\Implementation\BswM.c	  2333   *
; ..\component\BswM\Implementation\BswM.c	  2334   *
; ..\component\BswM\Implementation\BswM.c	  2335   */
; ..\component\BswM\Implementation\BswM.c	  2336  FUNC(void, BSWM_CODE) BswM_EthIf_PortGroupLinkStateChg(EthIf_SwitchPortGroupIdxType PortGroupIdx, EthTrcv_LinkStateType PortGroupState)
; ..\component\BswM\Implementation\BswM.c	  2337  {
; ..\component\BswM\Implementation\BswM.c	  2338    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2339    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2340  # if (BSWM_ETHIFPORTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2341    BswM_EthIfPortStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2342  # endif
; ..\component\BswM\Implementation\BswM.c	  2343    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2344  
; ..\component\BswM\Implementation\BswM.c	  2345    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2346  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2347    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  2348  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2349    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2350    {
; ..\component\BswM\Implementation\BswM.c	  2351      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2352    }
; ..\component\BswM\Implementation\BswM.c	  2353    else
; ..\component\BswM\Implementation\BswM.c	  2354  #  endif
; ..\component\BswM\Implementation\BswM.c	  2355    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2356    {
; ..\component\BswM\Implementation\BswM.c	  2357      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2358    }
; ..\component\BswM\Implementation\BswM.c	  2359  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2360    else if (PortGroupState > ETHTRCV_LINK_STATE_ACTIVE)
; ..\component\BswM\Implementation\BswM.c	  2361    {
; ..\component\BswM\Implementation\BswM.c	  2362      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2363    }
; ..\component\BswM\Implementation\BswM.c	  2364  #  endif
; ..\component\BswM\Implementation\BswM.c	  2365    else
; ..\component\BswM\Implementation\BswM.c	  2366  # endif
; ..\component\BswM\Implementation\BswM.c	  2367    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2368    {
; ..\component\BswM\Implementation\BswM.c	  2369  # if (BSWM_ETHIFPORTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2370      for (userHandle = 0u; userHandle < BswM_GetSizeOfEthIfPortState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  2371      {
; ..\component\BswM\Implementation\BswM.c	  2372        if (BswM_GetExternalIdOfEthIfPortMapping(userHandle, partitionIdx) == PortGroupIdx)
; ..\component\BswM\Implementation\BswM.c	  2373        {
; ..\component\BswM\Implementation\BswM.c	  2374          BswM_SetEthIfPortState(userHandle, PortGroupState, partitionIdx); /* SBSW_BSWM_ETHIFPORTSTATE */
; ..\component\BswM\Implementation\BswM.c	  2375  #  if (BSWM_IMMEDIATEUSERUSEDOFETHIFPORTMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2376          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfEthIfPortMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfEthIfPortMapping(userHandle, partitionIdx), BSWM_ETHIF_PORTGROUPLINKSTATECHANGE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2377  #  endif
; ..\component\BswM\Implementation\BswM.c	  2378          break;
; ..\component\BswM\Implementation\BswM.c	  2379        }
; ..\component\BswM\Implementation\BswM.c	  2380      }
; ..\component\BswM\Implementation\BswM.c	  2381  # else
; ..\component\BswM\Implementation\BswM.c	  2382      BSWM_DUMMY_STATEMENT(PortGroupIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2383      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(PortGroupState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2384  # endif
; ..\component\BswM\Implementation\BswM.c	  2385    }
; ..\component\BswM\Implementation\BswM.c	  2386    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2387    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2388  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2389    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2390    {
; ..\component\BswM\Implementation\BswM.c	  2391      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_ETHIF_PORTGROUPLINKSTATECHANGE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2392    }
; ..\component\BswM\Implementation\BswM.c	  2393  # else
; ..\component\BswM\Implementation\BswM.c	  2394    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2395  # endif
; ..\component\BswM\Implementation\BswM.c	  2396  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2397  #endif
; ..\component\BswM\Implementation\BswM.c	  2398  
; ..\component\BswM\Implementation\BswM.c	  2399  #if (BSWM_ENABLE_ETHSM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2400  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2401   *  BswM_EthSM_CurrentState()
; ..\component\BswM\Implementation\BswM.c	  2402   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2403  /*!
; ..\component\BswM\Implementation\BswM.c	  2404   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2405   *
; ..\component\BswM\Implementation\BswM.c	  2406   *
; ..\component\BswM\Implementation\BswM.c	  2407   *
; ..\component\BswM\Implementation\BswM.c	  2408   *
; ..\component\BswM\Implementation\BswM.c	  2409   *
; ..\component\BswM\Implementation\BswM.c	  2410   */
; ..\component\BswM\Implementation\BswM.c	  2411  FUNC(void, BSWM_CODE) BswM_EthSM_CurrentState(NetworkHandleType Network, EthSM_NetworkModeStateType CurrentState)
; ..\component\BswM\Implementation\BswM.c	  2412  {
; ..\component\BswM\Implementation\BswM.c	  2413    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2414    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2415  # if (BSWM_ETHSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2416    BswM_EthSMStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2417  # endif
; ..\component\BswM\Implementation\BswM.c	  2418    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2419  
; ..\component\BswM\Implementation\BswM.c	  2420    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2421  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2422    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7782, SPEC-7875, SPEC-7881 ) */
; ..\component\BswM\Implementation\BswM.c	  2423  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2424    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2425    {
; ..\component\BswM\Implementation\BswM.c	  2426      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2427    }
; ..\component\BswM\Implementation\BswM.c	  2428    else
; ..\component\BswM\Implementation\BswM.c	  2429  #  endif
; ..\component\BswM\Implementation\BswM.c	  2430    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2431    {
; ..\component\BswM\Implementation\BswM.c	  2432      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2433    }
; ..\component\BswM\Implementation\BswM.c	  2434    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2435    {
; ..\component\BswM\Implementation\BswM.c	  2436      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2437    }
; ..\component\BswM\Implementation\BswM.c	  2438  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2439    else if (CurrentState > ETHSM_BSWM_WAIT_OFFLINE)
; ..\component\BswM\Implementation\BswM.c	  2440    {
; ..\component\BswM\Implementation\BswM.c	  2441      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2442    }
; ..\component\BswM\Implementation\BswM.c	  2443  #  endif
; ..\component\BswM\Implementation\BswM.c	  2444    else
; ..\component\BswM\Implementation\BswM.c	  2445  # endif
; ..\component\BswM\Implementation\BswM.c	  2446    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2447    {
; ..\component\BswM\Implementation\BswM.c	  2448  # if (BSWM_ETHSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2449      for (userHandle = 0u; userHandle < BswM_GetSizeOfEthSMState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2450      {
; ..\component\BswM\Implementation\BswM.c	  2451        if (BswM_GetExternalIdOfEthSMMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2452        {
; ..\component\BswM\Implementation\BswM.c	  2453          BswM_SetEthSMState(userHandle, CurrentState, partitionIdx); /* SBSW_BSWM_ETHSMSTATE */
; ..\component\BswM\Implementation\BswM.c	  2454  #  if (BSWM_IMMEDIATEUSERUSEDOFETHSMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2455          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfEthSMMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfEthSMMapping(userHandle, partitionIdx), BSWM_ETHSM_CURRENTMODE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2456  #  endif
; ..\component\BswM\Implementation\BswM.c	  2457          break;
; ..\component\BswM\Implementation\BswM.c	  2458        }
; ..\component\BswM\Implementation\BswM.c	  2459      }
; ..\component\BswM\Implementation\BswM.c	  2460  # else
; ..\component\BswM\Implementation\BswM.c	  2461      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2462      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2463  # endif
; ..\component\BswM\Implementation\BswM.c	  2464    }
; ..\component\BswM\Implementation\BswM.c	  2465    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2466    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2467  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2468    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2469    {
; ..\component\BswM\Implementation\BswM.c	  2470      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_ETHSM_CURRENTMODE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2471    }
; ..\component\BswM\Implementation\BswM.c	  2472  # else
; ..\component\BswM\Implementation\BswM.c	  2473    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2474  # endif
; ..\component\BswM\Implementation\BswM.c	  2475  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2476  #endif
; ..\component\BswM\Implementation\BswM.c	  2477  
; ..\component\BswM\Implementation\BswM.c	  2478  #if (BSWM_ENABLE_FRSM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2479  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2480   *  BswM_FrSM_CurrentState()
; ..\component\BswM\Implementation\BswM.c	  2481   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2482  /*!
; ..\component\BswM\Implementation\BswM.c	  2483   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2484   *
; ..\component\BswM\Implementation\BswM.c	  2485   *
; ..\component\BswM\Implementation\BswM.c	  2486   *
; ..\component\BswM\Implementation\BswM.c	  2487   *
; ..\component\BswM\Implementation\BswM.c	  2488   *
; ..\component\BswM\Implementation\BswM.c	  2489   */
; ..\component\BswM\Implementation\BswM.c	  2490  FUNC(void, BSWM_CODE) BswM_FrSM_CurrentState(NetworkHandleType Network, FrSM_BswM_StateType CurrentState)
; ..\component\BswM\Implementation\BswM.c	  2491  {
; ..\component\BswM\Implementation\BswM.c	  2492    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2493    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2494  # if (BSWM_FRSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2495    BswM_FrSMStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2496  # endif
; ..\component\BswM\Implementation\BswM.c	  2497    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2498  
; ..\component\BswM\Implementation\BswM.c	  2499    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2500  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2501    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7886, SPEC-7890, SPEC-7955 ) */
; ..\component\BswM\Implementation\BswM.c	  2502  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2503    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2504    {
; ..\component\BswM\Implementation\BswM.c	  2505      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2506    }
; ..\component\BswM\Implementation\BswM.c	  2507    else
; ..\component\BswM\Implementation\BswM.c	  2508  #  endif
; ..\component\BswM\Implementation\BswM.c	  2509    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2510    {
; ..\component\BswM\Implementation\BswM.c	  2511      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2512    }
; ..\component\BswM\Implementation\BswM.c	  2513    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2514    {
; ..\component\BswM\Implementation\BswM.c	  2515      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2516    }
; ..\component\BswM\Implementation\BswM.c	  2517  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2518    else if (CurrentState > FRSM_BSWM_ONLINE_PASSIVE_ECU_PASSIVE)
; ..\component\BswM\Implementation\BswM.c	  2519    {
; ..\component\BswM\Implementation\BswM.c	  2520      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2521    }
; ..\component\BswM\Implementation\BswM.c	  2522  #  endif
; ..\component\BswM\Implementation\BswM.c	  2523    else
; ..\component\BswM\Implementation\BswM.c	  2524  # endif
; ..\component\BswM\Implementation\BswM.c	  2525    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2526    {
; ..\component\BswM\Implementation\BswM.c	  2527  # if (BSWM_FRSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2528      for (userHandle = 0u; userHandle < BswM_GetSizeOfFrSMState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2529      {
; ..\component\BswM\Implementation\BswM.c	  2530        if (BswM_GetExternalIdOfFrSMMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2531        {
; ..\component\BswM\Implementation\BswM.c	  2532          BswM_SetFrSMState(userHandle, CurrentState, partitionIdx); /* SBSW_BSWM_FRSMSTATE */
; ..\component\BswM\Implementation\BswM.c	  2533  #  if (BSWM_IMMEDIATEUSERUSEDOFFRSMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2534          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfFrSMMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfFrSMMapping(userHandle, partitionIdx), BSWM_FRSM_CURRENTSTATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2535  #  endif
; ..\component\BswM\Implementation\BswM.c	  2536          break;
; ..\component\BswM\Implementation\BswM.c	  2537        }
; ..\component\BswM\Implementation\BswM.c	  2538      }
; ..\component\BswM\Implementation\BswM.c	  2539  # else
; ..\component\BswM\Implementation\BswM.c	  2540      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2541      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2542  # endif
; ..\component\BswM\Implementation\BswM.c	  2543    }
; ..\component\BswM\Implementation\BswM.c	  2544    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2545    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2546  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2547    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2548    {
; ..\component\BswM\Implementation\BswM.c	  2549      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_FRSM_CURRENTSTATE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2550    }
; ..\component\BswM\Implementation\BswM.c	  2551  # else
; ..\component\BswM\Implementation\BswM.c	  2552    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2553  # endif
; ..\component\BswM\Implementation\BswM.c	  2554  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2555  #endif
; ..\component\BswM\Implementation\BswM.c	  2556  
; ..\component\BswM\Implementation\BswM.c	  2557  #if (BSWM_ENABLE_J1939DCM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2558  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2559   *  BswM_J1939DcmBroadcastStatus()
; ..\component\BswM\Implementation\BswM.c	  2560   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2561  /*!
; ..\component\BswM\Implementation\BswM.c	  2562   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2563   *
; ..\component\BswM\Implementation\BswM.c	  2564   *
; ..\component\BswM\Implementation\BswM.c	  2565   *
; ..\component\BswM\Implementation\BswM.c	  2566   *
; ..\component\BswM\Implementation\BswM.c	  2567   */
; ..\component\BswM\Implementation\BswM.c	  2568  FUNC(void, BSWM_CODE) BswM_J1939DcmBroadcastStatus(uint16 NetworkMask)
; ..\component\BswM\Implementation\BswM.c	  2569  {
; ..\component\BswM\Implementation\BswM.c	  2570    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2571    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2572  # if (BSWM_IMMEDIATEUSERUSEDOFJ1939DCMMAPPING == STD_ON) && ((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2573    BswM_J1939DcmMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2574  # endif
; ..\component\BswM\Implementation\BswM.c	  2575    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2576  
; ..\component\BswM\Implementation\BswM.c	  2577    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2578  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2579    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  2580  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2581    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2582    {
; ..\component\BswM\Implementation\BswM.c	  2583      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2584    }
; ..\component\BswM\Implementation\BswM.c	  2585    else
; ..\component\BswM\Implementation\BswM.c	  2586  #  endif
; ..\component\BswM\Implementation\BswM.c	  2587    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2588    {
; ..\component\BswM\Implementation\BswM.c	  2589      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2590    }
; ..\component\BswM\Implementation\BswM.c	  2591    else
; ..\component\BswM\Implementation\BswM.c	  2592  # endif
; ..\component\BswM\Implementation\BswM.c	  2593    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2594    {
; ..\component\BswM\Implementation\BswM.c	  2595  # if (BSWM_J1939DCMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2596      BswM_SetJ1939DcmState(NetworkMask, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  2597  #  if(BSWM_IMMEDIATEUSERUSEDOFJ1939DCMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2598  #   if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  2599      for (userHandle = 0u; userHandle < BswM_GetSizeOfJ1939DcmMapping(partitionIdx); userHandle++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  2600  #   endif
; ..\component\BswM\Implementation\BswM.c	  2601      {
; ..\component\BswM\Implementation\BswM.c	  2602        BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfJ1939DcmMapping(0u, partitionIdx), BswM_GetImmediateUserEndIdxOfJ1939DcmMapping(0u, partitionIdx), BSWM_J1939DCM_BROADCASTSTATUS_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2603      }
; ..\component\BswM\Implementation\BswM.c	  2604  #  endif
; ..\component\BswM\Implementation\BswM.c	  2605  # else
; ..\component\BswM\Implementation\BswM.c	  2606      BSWM_DUMMY_STATEMENT(NetworkMask); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2607  # endif
; ..\component\BswM\Implementation\BswM.c	  2608    }
; ..\component\BswM\Implementation\BswM.c	  2609    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2610    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2611  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2612    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2613    {
; ..\component\BswM\Implementation\BswM.c	  2614      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_J1939DCM_BROADCASTSTATUS_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2615    }
; ..\component\BswM\Implementation\BswM.c	  2616  # else
; ..\component\BswM\Implementation\BswM.c	  2617    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2618  # endif
; ..\component\BswM\Implementation\BswM.c	  2619  }
; ..\component\BswM\Implementation\BswM.c	  2620  #endif
; ..\component\BswM\Implementation\BswM.c	  2621  
; ..\component\BswM\Implementation\BswM.c	  2622  #if (BSWM_ENABLE_J1939NM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2623  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2624   *  BswM_J1939Nm_StateChangeNotification()
; ..\component\BswM\Implementation\BswM.c	  2625   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2626  /*!
; ..\component\BswM\Implementation\BswM.c	  2627   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2628   *
; ..\component\BswM\Implementation\BswM.c	  2629   *
; ..\component\BswM\Implementation\BswM.c	  2630   *
; ..\component\BswM\Implementation\BswM.c	  2631   *
; ..\component\BswM\Implementation\BswM.c	  2632   *
; ..\component\BswM\Implementation\BswM.c	  2633   */
; ..\component\BswM\Implementation\BswM.c	  2634  FUNC(void, BSWM_CODE) BswM_J1939Nm_StateChangeNotification(NetworkHandleType Network, uint8 Node, Nm_StateType NmState)
; ..\component\BswM\Implementation\BswM.c	  2635  {
; ..\component\BswM\Implementation\BswM.c	  2636    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2637    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2638  # if(BSWM_J1939NMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2639    uint16 index = (uint16)((((uint16) Node) << 8) | Network);
; ..\component\BswM\Implementation\BswM.c	  2640    BswM_J1939NmStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2641  # endif
; ..\component\BswM\Implementation\BswM.c	  2642    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2643  
; ..\component\BswM\Implementation\BswM.c	  2644    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2645  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2646    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  2647  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2648    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2649    {
; ..\component\BswM\Implementation\BswM.c	  2650      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2651    }
; ..\component\BswM\Implementation\BswM.c	  2652    else
; ..\component\BswM\Implementation\BswM.c	  2653  #  endif
; ..\component\BswM\Implementation\BswM.c	  2654    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2655    {
; ..\component\BswM\Implementation\BswM.c	  2656      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2657    }
; ..\component\BswM\Implementation\BswM.c	  2658    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2659    {
; ..\component\BswM\Implementation\BswM.c	  2660      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2661    }
; ..\component\BswM\Implementation\BswM.c	  2662  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2663    else if (!((NmState == NM_STATE_OFFLINE) || (NmState == NM_STATE_NORMAL_OPERATION) || (NmState == NM_STATE_BUS_SLEEP)))
; ..\component\BswM\Implementation\BswM.c	  2664    {
; ..\component\BswM\Implementation\BswM.c	  2665      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2666    }
; ..\component\BswM\Implementation\BswM.c	  2667  #  endif
; ..\component\BswM\Implementation\BswM.c	  2668    else
; ..\component\BswM\Implementation\BswM.c	  2669  # endif
; ..\component\BswM\Implementation\BswM.c	  2670    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2671    {
; ..\component\BswM\Implementation\BswM.c	  2672  # if (BSWM_J1939NMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2673      for (userHandle = 0u; userHandle < BswM_GetSizeOfJ1939NmState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2674      {
; ..\component\BswM\Implementation\BswM.c	  2675        if (BswM_GetExternalIdOfJ1939NmMapping(userHandle, partitionIdx) == index)
; ..\component\BswM\Implementation\BswM.c	  2676        {
; ..\component\BswM\Implementation\BswM.c	  2677          BswM_SetJ1939NmState(userHandle, NmState, partitionIdx); /* SBSW_BSWM_J1939NMSTATE */
; ..\component\BswM\Implementation\BswM.c	  2678  #  if (BSWM_IMMEDIATEUSERUSEDOFJ1939NMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2679          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfJ1939NmMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfJ1939NmMapping(userHandle, partitionIdx), BSWM_J1939NM_STATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2680  #  endif
; ..\component\BswM\Implementation\BswM.c	  2681          break;
; ..\component\BswM\Implementation\BswM.c	  2682        }
; ..\component\BswM\Implementation\BswM.c	  2683      }
; ..\component\BswM\Implementation\BswM.c	  2684  # else
; ..\component\BswM\Implementation\BswM.c	  2685      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2686      BSWM_DUMMY_STATEMENT(Node); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2687      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(NmState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2688  # endif
; ..\component\BswM\Implementation\BswM.c	  2689    }
; ..\component\BswM\Implementation\BswM.c	  2690    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2691    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2692  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2693    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2694    {
; ..\component\BswM\Implementation\BswM.c	  2695      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_J1939NM_STATE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2696    }
; ..\component\BswM\Implementation\BswM.c	  2697  # else
; ..\component\BswM\Implementation\BswM.c	  2698    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2699  # endif
; ..\component\BswM\Implementation\BswM.c	  2700  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2701  #endif
; ..\component\BswM\Implementation\BswM.c	  2702  
; ..\component\BswM\Implementation\BswM.c	  2703  #if (BSWM_ENABLE_LINSM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2704  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2705   *  BswM_LinSM_CurrentSchedule()
; ..\component\BswM\Implementation\BswM.c	  2706   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2707  /*!
; ..\component\BswM\Implementation\BswM.c	  2708   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2709   *
; ..\component\BswM\Implementation\BswM.c	  2710   *
; ..\component\BswM\Implementation\BswM.c	  2711   *
; ..\component\BswM\Implementation\BswM.c	  2712   *
; ..\component\BswM\Implementation\BswM.c	  2713   *
; ..\component\BswM\Implementation\BswM.c	  2714   */
; ..\component\BswM\Implementation\BswM.c	  2715  FUNC(void, BSWM_CODE) BswM_LinSM_CurrentSchedule(NetworkHandleType Network, LinIf_SchHandleType CurrentSchedule)
; ..\component\BswM\Implementation\BswM.c	  2716  {
; ..\component\BswM\Implementation\BswM.c	  2717    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2718    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2719  # if (BSWM_LINSCHEDULESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2720    BswM_LinScheduleStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2721  # endif
; ..\component\BswM\Implementation\BswM.c	  2722    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2723  
; ..\component\BswM\Implementation\BswM.c	  2724    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2725  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2726    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7856, SPEC-7753 ) */
; ..\component\BswM\Implementation\BswM.c	  2727  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2728    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2729    {
; ..\component\BswM\Implementation\BswM.c	  2730      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2731    }
; ..\component\BswM\Implementation\BswM.c	  2732    else
; ..\component\BswM\Implementation\BswM.c	  2733  #  endif
; ..\component\BswM\Implementation\BswM.c	  2734    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2735    {
; ..\component\BswM\Implementation\BswM.c	  2736      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2737    }
; ..\component\BswM\Implementation\BswM.c	  2738    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2739    {
; ..\component\BswM\Implementation\BswM.c	  2740      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2741    }
; ..\component\BswM\Implementation\BswM.c	  2742    else
; ..\component\BswM\Implementation\BswM.c	  2743  # endif
; ..\component\BswM\Implementation\BswM.c	  2744    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2745    {
; ..\component\BswM\Implementation\BswM.c	  2746  # if (BSWM_LINSCHEDULESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2747      for (userHandle = 0u; userHandle < BswM_GetSizeOfLinScheduleState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2748      {
; ..\component\BswM\Implementation\BswM.c	  2749        if (BswM_GetExternalIdOfLinScheduleMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2750        {
; ..\component\BswM\Implementation\BswM.c	  2751          BswM_SetLinScheduleState(userHandle, CurrentSchedule, partitionIdx); /* SBSW_BSWM_LINSCHEDULESTATE */
; ..\component\BswM\Implementation\BswM.c	  2752  #  if (BSWM_IMMEDIATEUSERUSEDOFLINSCHEDULEMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2753          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfLinScheduleMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfLinScheduleMapping(userHandle, partitionIdx), BSWM_LINSM_CURRENTSCHEDULE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2754  #  endif
; ..\component\BswM\Implementation\BswM.c	  2755          break;
; ..\component\BswM\Implementation\BswM.c	  2756        }
; ..\component\BswM\Implementation\BswM.c	  2757      }
; ..\component\BswM\Implementation\BswM.c	  2758  # else
; ..\component\BswM\Implementation\BswM.c	  2759      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2760      BSWM_DUMMY_STATEMENT(CurrentSchedule); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2761  # endif
; ..\component\BswM\Implementation\BswM.c	  2762    }
; ..\component\BswM\Implementation\BswM.c	  2763    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2764    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2765  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2766    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2767    {
; ..\component\BswM\Implementation\BswM.c	  2768      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_LINSM_CURRENTSCHEDULE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2769    }
; ..\component\BswM\Implementation\BswM.c	  2770  # else
; ..\component\BswM\Implementation\BswM.c	  2771    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2772  # endif
; ..\component\BswM\Implementation\BswM.c	  2773  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2774  
; ..\component\BswM\Implementation\BswM.c	  2775  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2776   *  BswM_LinSM_CurrentState()
; ..\component\BswM\Implementation\BswM.c	  2777   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2778  /*!
; ..\component\BswM\Implementation\BswM.c	  2779   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2780   *
; ..\component\BswM\Implementation\BswM.c	  2781   *
; ..\component\BswM\Implementation\BswM.c	  2782   *
; ..\component\BswM\Implementation\BswM.c	  2783   *
; ..\component\BswM\Implementation\BswM.c	  2784   *
; ..\component\BswM\Implementation\BswM.c	  2785   */
; ..\component\BswM\Implementation\BswM.c	  2786  FUNC(void, BSWM_CODE) BswM_LinSM_CurrentState(NetworkHandleType Network, LinSM_ModeType CurrentState)
; ..\component\BswM\Implementation\BswM.c	  2787  {
; ..\component\BswM\Implementation\BswM.c	  2788    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2789    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2790  # if (BSWM_LINSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2791    BswM_LinSMStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2792  # endif
; ..\component\BswM\Implementation\BswM.c	  2793    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2794  
; ..\component\BswM\Implementation\BswM.c	  2795    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2796  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2797    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7943, SPEC-7911, SPEC-7883 ) */
; ..\component\BswM\Implementation\BswM.c	  2798  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2799    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2800    {
; ..\component\BswM\Implementation\BswM.c	  2801      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2802    }
; ..\component\BswM\Implementation\BswM.c	  2803    else
; ..\component\BswM\Implementation\BswM.c	  2804  #  endif
; ..\component\BswM\Implementation\BswM.c	  2805    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2806    {
; ..\component\BswM\Implementation\BswM.c	  2807      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2808    }
; ..\component\BswM\Implementation\BswM.c	  2809    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2810    {
; ..\component\BswM\Implementation\BswM.c	  2811      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2812    }
; ..\component\BswM\Implementation\BswM.c	  2813  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2814    else if (!((CurrentState == LINSM_BSWM_FULL_COM) || (CurrentState == LINSM_BSWM_NO_COM)))
; ..\component\BswM\Implementation\BswM.c	  2815    {
; ..\component\BswM\Implementation\BswM.c	  2816      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2817    }
; ..\component\BswM\Implementation\BswM.c	  2818  #  endif
; ..\component\BswM\Implementation\BswM.c	  2819    else
; ..\component\BswM\Implementation\BswM.c	  2820  # endif
; ..\component\BswM\Implementation\BswM.c	  2821    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2822    {
; ..\component\BswM\Implementation\BswM.c	  2823  # if (BSWM_LINSMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2824      for (userHandle = 0u; userHandle < BswM_GetSizeOfLinSMState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2825      {
; ..\component\BswM\Implementation\BswM.c	  2826        if (BswM_GetExternalIdOfLinSMMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2827        {
; ..\component\BswM\Implementation\BswM.c	  2828          BswM_SetLinSMState(userHandle, CurrentState, partitionIdx); /* SBSW_BSWM_LINSMSTATE */
; ..\component\BswM\Implementation\BswM.c	  2829  #  if (BSWM_IMMEDIATEUSERUSEDOFLINSMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2830          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfLinSMMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfLinSMMapping(userHandle, partitionIdx), BSWM_LINSM_CURRENTSTATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2831  #  endif
; ..\component\BswM\Implementation\BswM.c	  2832          break;
; ..\component\BswM\Implementation\BswM.c	  2833        }
; ..\component\BswM\Implementation\BswM.c	  2834      }
; ..\component\BswM\Implementation\BswM.c	  2835  # else
; ..\component\BswM\Implementation\BswM.c	  2836      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2837      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2838  # endif
; ..\component\BswM\Implementation\BswM.c	  2839    }
; ..\component\BswM\Implementation\BswM.c	  2840    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2841    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2842  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2843    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2844    {
; ..\component\BswM\Implementation\BswM.c	  2845      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_LINSM_CURRENTSTATE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2846    }
; ..\component\BswM\Implementation\BswM.c	  2847  # else
; ..\component\BswM\Implementation\BswM.c	  2848    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2849  # endif
; ..\component\BswM\Implementation\BswM.c	  2850  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2851  
; ..\component\BswM\Implementation\BswM.c	  2852  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2853   *  BswM_LinSM_ScheduleEndNotification()
; ..\component\BswM\Implementation\BswM.c	  2854   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2855  /*!
; ..\component\BswM\Implementation\BswM.c	  2856   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2857   *
; ..\component\BswM\Implementation\BswM.c	  2858   *
; ..\component\BswM\Implementation\BswM.c	  2859   *
; ..\component\BswM\Implementation\BswM.c	  2860   *
; ..\component\BswM\Implementation\BswM.c	  2861   *
; ..\component\BswM\Implementation\BswM.c	  2862   */
; ..\component\BswM\Implementation\BswM.c	  2863  FUNC(void, BSWM_CODE) BswM_LinSM_ScheduleEndNotification(NetworkHandleType Network, LinIf_SchHandleType Schedule)
; ..\component\BswM\Implementation\BswM.c	  2864  {
; ..\component\BswM\Implementation\BswM.c	  2865    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2866    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2867  # if (BSWM_LINSCHEDULEENDSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2868    BswM_LinScheduleEndStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2869  # endif
; ..\component\BswM\Implementation\BswM.c	  2870    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2871  
; ..\component\BswM\Implementation\BswM.c	  2872    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2873  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2874    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  2875  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2876    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2877    {
; ..\component\BswM\Implementation\BswM.c	  2878      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2879    }
; ..\component\BswM\Implementation\BswM.c	  2880    else
; ..\component\BswM\Implementation\BswM.c	  2881  #  endif
; ..\component\BswM\Implementation\BswM.c	  2882    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2883    {
; ..\component\BswM\Implementation\BswM.c	  2884      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2885    }
; ..\component\BswM\Implementation\BswM.c	  2886    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2887    {
; ..\component\BswM\Implementation\BswM.c	  2888      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2889    }
; ..\component\BswM\Implementation\BswM.c	  2890    else
; ..\component\BswM\Implementation\BswM.c	  2891  # endif
; ..\component\BswM\Implementation\BswM.c	  2892    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2893    {
; ..\component\BswM\Implementation\BswM.c	  2894  # if (BSWM_LINSCHEDULEENDSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2895      for (userHandle = 0u; userHandle < BswM_GetSizeOfLinScheduleEndState(partitionIdx); userHandle++) /* COV_BSWM_ALLNETWORKPORTS */
; ..\component\BswM\Implementation\BswM.c	  2896      {
; ..\component\BswM\Implementation\BswM.c	  2897        if (BswM_GetExternalIdOfLinScheduleEndMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2898        {
; ..\component\BswM\Implementation\BswM.c	  2899          BswM_SetLinScheduleEndState(userHandle, Schedule, partitionIdx); /* SBSW_BSWM_LINSCHEDULEENDSTATE */
; ..\component\BswM\Implementation\BswM.c	  2900  #  if (BSWM_IMMEDIATEUSERUSEDOFLINSCHEDULEENDMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2901          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfLinScheduleEndMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfLinScheduleEndMapping(userHandle, partitionIdx), BSWM_LINSM_SCHEDULEENDNOTIFICATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2902  #  endif
; ..\component\BswM\Implementation\BswM.c	  2903          break;
; ..\component\BswM\Implementation\BswM.c	  2904        }
; ..\component\BswM\Implementation\BswM.c	  2905      }
; ..\component\BswM\Implementation\BswM.c	  2906  # else
; ..\component\BswM\Implementation\BswM.c	  2907      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2908      BSWM_DUMMY_STATEMENT(Schedule); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2909  # endif
; ..\component\BswM\Implementation\BswM.c	  2910    }
; ..\component\BswM\Implementation\BswM.c	  2911    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2912    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2913  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2914    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2915    {
; ..\component\BswM\Implementation\BswM.c	  2916      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_LINSM_SCHEDULEENDNOTIFICATION_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2917    }
; ..\component\BswM\Implementation\BswM.c	  2918  # else
; ..\component\BswM\Implementation\BswM.c	  2919    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2920  # endif
; ..\component\BswM\Implementation\BswM.c	  2921  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  2922  #endif /* BSWM_ENABLE_LINSM == STD_ON */
; ..\component\BswM\Implementation\BswM.c	  2923  
; ..\component\BswM\Implementation\BswM.c	  2924  #if (BSWM_ENABLE_LINTP == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2925  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  2926   *  BswM_LinTp_RequestMode()
; ..\component\BswM\Implementation\BswM.c	  2927   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  2928  /*!
; ..\component\BswM\Implementation\BswM.c	  2929   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  2930   *
; ..\component\BswM\Implementation\BswM.c	  2931   *
; ..\component\BswM\Implementation\BswM.c	  2932   *
; ..\component\BswM\Implementation\BswM.c	  2933   *
; ..\component\BswM\Implementation\BswM.c	  2934   *
; ..\component\BswM\Implementation\BswM.c	  2935   */
; ..\component\BswM\Implementation\BswM.c	  2936  FUNC(void, BSWM_CODE) BswM_LinTp_RequestMode(NetworkHandleType Network, LinTp_Mode LinTpRequestedMode)
; ..\component\BswM\Implementation\BswM.c	  2937  {
; ..\component\BswM\Implementation\BswM.c	  2938    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2939    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  2940  # if (BSWM_LINTPSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2941    BswM_LinTPStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  2942  # endif
; ..\component\BswM\Implementation\BswM.c	  2943    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  2944  
; ..\component\BswM\Implementation\BswM.c	  2945    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2946  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2947    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7873, SPEC-7891, SPEC-16660 ) */
; ..\component\BswM\Implementation\BswM.c	  2948  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2949    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  2950    {
; ..\component\BswM\Implementation\BswM.c	  2951      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  2952    }
; ..\component\BswM\Implementation\BswM.c	  2953    else
; ..\component\BswM\Implementation\BswM.c	  2954  #  endif
; ..\component\BswM\Implementation\BswM.c	  2955    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  2956    {
; ..\component\BswM\Implementation\BswM.c	  2957      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  2958    }
; ..\component\BswM\Implementation\BswM.c	  2959    else if (Network >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  2960    {
; ..\component\BswM\Implementation\BswM.c	  2961      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2962    }
; ..\component\BswM\Implementation\BswM.c	  2963  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2964    else if (LinTpRequestedMode > LINTP_DIAG_RESPONSE)
; ..\component\BswM\Implementation\BswM.c	  2965    {
; ..\component\BswM\Implementation\BswM.c	  2966      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  2967    }
; ..\component\BswM\Implementation\BswM.c	  2968  #  endif
; ..\component\BswM\Implementation\BswM.c	  2969    else
; ..\component\BswM\Implementation\BswM.c	  2970  # endif
; ..\component\BswM\Implementation\BswM.c	  2971    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2972    {
; ..\component\BswM\Implementation\BswM.c	  2973  # if (BSWM_LINTPSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2974      for (userHandle = 0u; userHandle < BswM_GetSizeOfLinTPState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  2975      {
; ..\component\BswM\Implementation\BswM.c	  2976        if (BswM_GetExternalIdOfLinTPMapping(userHandle, partitionIdx) == Network)
; ..\component\BswM\Implementation\BswM.c	  2977        {
; ..\component\BswM\Implementation\BswM.c	  2978          BswM_SetLinTPState(userHandle, LinTpRequestedMode, partitionIdx); /* SBSW_BSWM_LINTPSTATE */
; ..\component\BswM\Implementation\BswM.c	  2979  #  if (BSWM_IMMEDIATEUSERUSEDOFLINTPMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2980          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfLinTPMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfLinTPMapping(userHandle, partitionIdx), BSWM_LINTP_REQUESTMODE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  2981  #  endif
; ..\component\BswM\Implementation\BswM.c	  2982          break;
; ..\component\BswM\Implementation\BswM.c	  2983        }
; ..\component\BswM\Implementation\BswM.c	  2984      }
; ..\component\BswM\Implementation\BswM.c	  2985  # else
; ..\component\BswM\Implementation\BswM.c	  2986      BSWM_DUMMY_STATEMENT_DET_OFF(Network); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2987      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(LinTpRequestedMode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2988  # endif
; ..\component\BswM\Implementation\BswM.c	  2989    }
; ..\component\BswM\Implementation\BswM.c	  2990    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2991    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  2992  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  2993    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  2994    {
; ..\component\BswM\Implementation\BswM.c	  2995      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_LINTP_REQUESTMODE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  2996    }
; ..\component\BswM\Implementation\BswM.c	  2997  # else
; ..\component\BswM\Implementation\BswM.c	  2998    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  2999  # endif
; ..\component\BswM\Implementation\BswM.c	  3000  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  3001  #endif
; ..\component\BswM\Implementation\BswM.c	  3002  
; ..\component\BswM\Implementation\BswM.c	  3003  #if (BSWM_ENABLE_ECUM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3004  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3005   *  BswM_EcuM_CurrentState()
; ..\component\BswM\Implementation\BswM.c	  3006   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3007  /*!
; ..\component\BswM\Implementation\BswM.c	  3008   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3009   *
; ..\component\BswM\Implementation\BswM.c	  3010   *
; ..\component\BswM\Implementation\BswM.c	  3011   *
; ..\component\BswM\Implementation\BswM.c	  3012   *
; ..\component\BswM\Implementation\BswM.c	  3013   */
; ..\component\BswM\Implementation\BswM.c	  3014  FUNC(void, BSWM_CODE) BswM_EcuM_CurrentState(EcuM_StateType CurrentState)
; Function BswM_EcuM_CurrentState
.L123:
BswM_EcuM_CurrentState:	.type	func

; ..\component\BswM\Implementation\BswM.c	  3015  {
; ..\component\BswM\Implementation\BswM.c	  3016    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3017    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3018  # if (BSWM_IMMEDIATEUSERUSEDOFECUMMODEMAPPING == STD_ON) && (((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON) && (BSWM_USE_INIT_POINTER == STD_ON)) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  3019    BswM_EcuMModeMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3020  # endif
; ..\component\BswM\Implementation\BswM.c	  3021    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3022  
; ..\component\BswM\Implementation\BswM.c	  3023    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3024  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3025    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  3026  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3027    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3028    {
; ..\component\BswM\Implementation\BswM.c	  3029      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3030    }
; ..\component\BswM\Implementation\BswM.c	  3031    else
; ..\component\BswM\Implementation\BswM.c	  3032  #  endif
; ..\component\BswM\Implementation\BswM.c	  3033    if (!BswM_IsInitialized(partitionIdx))
	mov	d7,#0
	fcall	.cocofun_1
	jne	d15,#0,.L51
.L345:

; ..\component\BswM\Implementation\BswM.c	  3034    {
; ..\component\BswM\Implementation\BswM.c	  3035      errorId = BSWM_E_NO_INIT;
	mov	d7,#1
	j	.L52
.L51:

; ..\component\BswM\Implementation\BswM.c	  3036    }
; ..\component\BswM\Implementation\BswM.c	  3037  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3038    else if (!(
; ..\component\BswM\Implementation\BswM.c	  3039        /* Most used states are located at the top to improve runtime */
; ..\component\BswM\Implementation\BswM.c	  3040        (CurrentState == ECUM_STATE_APP_RUN)           ||
	mov	d15,#50
.L346:
	jeq	d15,d4,.L53
.L347:

; ..\component\BswM\Implementation\BswM.c	  3041        (CurrentState == ECUM_STATE_APP_POST_RUN)      ||
	mov	d15,#51
.L348:
	jeq	d15,d4,.L54
.L349:

; ..\component\BswM\Implementation\BswM.c	  3042        (CurrentState == ECUM_STATE_SLEEP)             ||
	mov	d15,#80
.L350:
	jeq	d15,d4,.L55
.L351:

; ..\component\BswM\Implementation\BswM.c	  3043        (CurrentState == ECUM_STATE_SHUTDOWN)          ||
	mov	d15,#64
.L352:
	jeq	d15,d4,.L56
.L353:

; ..\component\BswM\Implementation\BswM.c	  3044        (CurrentState == ECUM_STATE_PREP_SHUTDOWN)     ||
	mov	d15,#68
.L354:
	jeq	d15,d4,.L57
.L355:

; ..\component\BswM\Implementation\BswM.c	  3045        (CurrentState == ECUM_STATE_STARTUP)           ||
	mov	d15,#16
.L356:
	jeq	d15,d4,.L58
.L357:

; ..\component\BswM\Implementation\BswM.c	  3046        (CurrentState == ECUM_STATE_STARTUP_ONE)       ||
	mov	d15,#17
.L358:
	jeq	d15,d4,.L59
.L359:

; ..\component\BswM\Implementation\BswM.c	  3047        (CurrentState == ECUM_STATE_STARTUP_TWO)       ||
	mov	d15,#18
.L360:
	jeq	d15,d4,.L60
.L361:

; ..\component\BswM\Implementation\BswM.c	  3048        (CurrentState == ECUM_STATE_WAKEUP)            ||
	mov	d15,#32
.L362:
	jeq	d15,d4,.L61
.L363:

; ..\component\BswM\Implementation\BswM.c	  3049        (CurrentState == ECUM_STATE_RUN)               ||
	mov	d15,#48
.L364:
	jeq	d15,d4,.L62
.L365:

; ..\component\BswM\Implementation\BswM.c	  3050        (CurrentState == ECUM_STATE_WAKEUP_ONE)        ||
	mov	d15,#33
.L366:
	jeq	d15,d4,.L63
.L367:

; ..\component\BswM\Implementation\BswM.c	  3051        (CurrentState == ECUM_STATE_WAKEUP_VALIDATION) ||
	mov	d15,#34
.L368:
	jeq	d15,d4,.L64
.L369:

; ..\component\BswM\Implementation\BswM.c	  3052        (CurrentState == ECUM_STATE_WAKEUP_REACTION)   ||
	mov	d15,#35
.L370:
	jeq	d15,d4,.L65
.L371:

; ..\component\BswM\Implementation\BswM.c	  3053        (CurrentState == ECUM_STATE_WAKEUP_TWO)        ||
	mov	d15,#36
.L372:
	jeq	d15,d4,.L66
.L373:

; ..\component\BswM\Implementation\BswM.c	  3054        (CurrentState == ECUM_STATE_WAKEUP_WAKESLEEP)  ||
	mov	d15,#37
.L374:
	jeq	d15,d4,.L67
.L375:

; ..\component\BswM\Implementation\BswM.c	  3055        (CurrentState == ECUM_STATE_WAKEUP_TTII)       ||
	mov	d15,#38
.L376:
	jeq	d15,d4,.L68
.L377:

; ..\component\BswM\Implementation\BswM.c	  3056        (CurrentState == ECUM_STATE_GO_SLEEP)          ||
	mov	d15,#73
.L378:
	jeq	d15,d4,.L69
.L379:

; ..\component\BswM\Implementation\BswM.c	  3057        (CurrentState == ECUM_STATE_GO_OFF_ONE)        ||
	mov	d15,#77
.L380:
	jeq	d15,d4,.L70
.L381:

; ..\component\BswM\Implementation\BswM.c	  3058        (CurrentState == ECUM_STATE_GO_OFF_TWO)        ||
	mov	d15,#78
.L382:
	jeq	d15,d4,.L71
.L383:

; ..\component\BswM\Implementation\BswM.c	  3059        (CurrentState == ECUM_STATE_RESET)             ||
	mov	d15,#144
.L384:
	jeq	d15,d4,.L72
.L385:

; ..\component\BswM\Implementation\BswM.c	  3060        (CurrentState == ECUM_STATE_OFF)
	eq	d15,d4,#128
.L386:

; ..\component\BswM\Implementation\BswM.c	  3061       ))
; ..\component\BswM\Implementation\BswM.c	  3062    {
; ..\component\BswM\Implementation\BswM.c	  3063      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
	cmovn	d7,d15,#5
.L72:
.L71:
.L70:
.L69:
.L68:
.L67:
.L66:
.L65:
.L64:
.L63:
.L62:
.L61:
.L60:
.L59:
.L58:
.L57:
.L56:
.L55:
.L54:
.L53:
.L52:

; ..\component\BswM\Implementation\BswM.c	  3064    }
; ..\component\BswM\Implementation\BswM.c	  3065  #  endif
; ..\component\BswM\Implementation\BswM.c	  3066    else
; ..\component\BswM\Implementation\BswM.c	  3067  # endif
; ..\component\BswM\Implementation\BswM.c	  3068    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3069    {
; ..\component\BswM\Implementation\BswM.c	  3070  # if (BSWM_ECUMMODESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3071      BswM_SetEcuMModeState(CurrentState, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
; ..\component\BswM\Implementation\BswM.c	  3072  #  if(BSWM_IMMEDIATEUSERUSEDOFECUMMODEMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3073  #   if((BSWM_POSTBUILD_VARIANT_SUPPORT == STD_ON && BSWM_USE_INIT_POINTER == STD_ON) || (BSWM_MULTIPARTITION == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  3074      for (userHandle = 0u; userHandle < BswM_GetSizeOfEcuMModeMapping(partitionIdx); userHandle++) /* Size can only be 0 or 1. */
; ..\component\BswM\Implementation\BswM.c	  3075  #   endif
; ..\component\BswM\Implementation\BswM.c	  3076      {
; ..\component\BswM\Implementation\BswM.c	  3077        BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfEcuMModeMapping(0u, partitionIdx), BswM_GetImmediateUserEndIdxOfEcuMModeMapping(0u, partitionIdx), BSWM_ECUM_CURRENTSTATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3078      }
; ..\component\BswM\Implementation\BswM.c	  3079  #  endif
; ..\component\BswM\Implementation\BswM.c	  3080  # else
; ..\component\BswM\Implementation\BswM.c	  3081      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3082  # endif
; ..\component\BswM\Implementation\BswM.c	  3083    }
; ..\component\BswM\Implementation\BswM.c	  3084    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3085    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3086  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3087    if (errorId != BSWM_E_NO_ERROR)
	jeq	d7,#0,.L74
.L387:

; ..\component\BswM\Implementation\BswM.c	  3088    {
; ..\component\BswM\Implementation\BswM.c	  3089      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_ECUM_CURRENTSTATE_ID, errorId);
	fcall	.cocofun_2
.L312:
	mov	d6,#15
.L388:
	j	Det_ReportError
.L74:

; ..\component\BswM\Implementation\BswM.c	  3090    }
; ..\component\BswM\Implementation\BswM.c	  3091  # else
; ..\component\BswM\Implementation\BswM.c	  3092    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3093  # endif
; ..\component\BswM\Implementation\BswM.c	  3094  }
	ret
.L218:
	
__BswM_EcuM_CurrentState_function_end:
	.size	BswM_EcuM_CurrentState,__BswM_EcuM_CurrentState_function_end-BswM_EcuM_CurrentState
.L148:
	; End of function
	
	.sdecl	'.text.BswM.BswM_EcuM_CurrentWakeup',code,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.text.BswM.BswM_EcuM_CurrentWakeup'
	.align	2
	
	.global	BswM_EcuM_CurrentWakeup

; ..\component\BswM\Implementation\BswM.c	  3095  #endif
; ..\component\BswM\Implementation\BswM.c	  3096  
; ..\component\BswM\Implementation\BswM.c	  3097  #if (BSWM_ENABLE_ECUM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3098  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3099   *  BswM_EcuM_CurrentWakeup()
; ..\component\BswM\Implementation\BswM.c	  3100   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3101  /*!
; ..\component\BswM\Implementation\BswM.c	  3102   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3103   *
; ..\component\BswM\Implementation\BswM.c	  3104   *
; ..\component\BswM\Implementation\BswM.c	  3105   *
; ..\component\BswM\Implementation\BswM.c	  3106   *
; ..\component\BswM\Implementation\BswM.c	  3107   *
; ..\component\BswM\Implementation\BswM.c	  3108   */
; ..\component\BswM\Implementation\BswM.c	  3109  FUNC(void, BSWM_CODE) BswM_EcuM_CurrentWakeup(EcuM_WakeupSourceType source, EcuM_WakeupStateType state)
; Function BswM_EcuM_CurrentWakeup
.L125:
BswM_EcuM_CurrentWakeup:	.type	func

; ..\component\BswM\Implementation\BswM.c	  3110  {
; ..\component\BswM\Implementation\BswM.c	  3111    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3112    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3113  # if(BSWM_ECUMWAKEUPSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3114    BswM_EcuMWakeupStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3115  # endif
; ..\component\BswM\Implementation\BswM.c	  3116    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3117  
; ..\component\BswM\Implementation\BswM.c	  3118    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3119  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3120    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. ( \trace SPEC-7850, SPEC-7921 ) */
; ..\component\BswM\Implementation\BswM.c	  3121  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3122    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3123    {
; ..\component\BswM\Implementation\BswM.c	  3124      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3125    }
; ..\component\BswM\Implementation\BswM.c	  3126    else
; ..\component\BswM\Implementation\BswM.c	  3127  #  endif
; ..\component\BswM\Implementation\BswM.c	  3128    if (!BswM_IsInitialized(partitionIdx))
	mov	d7,#0
	fcall	.cocofun_1
	jne	d15,#0,.L75
.L393:

; ..\component\BswM\Implementation\BswM.c	  3129    {
; ..\component\BswM\Implementation\BswM.c	  3130      errorId = BSWM_E_NO_INIT;
	mov	d7,#1
	j	.L76
.L75:

; ..\component\BswM\Implementation\BswM.c	  3131    }
; ..\component\BswM\Implementation\BswM.c	  3132  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3133    else if (state > BSWM_ECUM_MAX_WKSTATUS)
	lt.u	d15,d5,#7
.L394:

; ..\component\BswM\Implementation\BswM.c	  3134    {
; ..\component\BswM\Implementation\BswM.c	  3135      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
	cmovn	d7,d15,#5
.L76:

; ..\component\BswM\Implementation\BswM.c	  3136    }
; ..\component\BswM\Implementation\BswM.c	  3137  #  endif
; ..\component\BswM\Implementation\BswM.c	  3138    else
; ..\component\BswM\Implementation\BswM.c	  3139  # endif
; ..\component\BswM\Implementation\BswM.c	  3140    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3141    {
; ..\component\BswM\Implementation\BswM.c	  3142  # if(BSWM_ECUMWAKEUPSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3143      for (userHandle = 0u; userHandle < BswM_GetSizeOfEcuMWakeupState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3144      {
; ..\component\BswM\Implementation\BswM.c	  3145        if ((((EcuM_WakeupSourceType)BswM_GetExternalIdOfEcuMWakeupMapping(userHandle, partitionIdx)) & source) != 0u)
; ..\component\BswM\Implementation\BswM.c	  3146        {
; ..\component\BswM\Implementation\BswM.c	  3147          BswM_SetEcuMWakeupState(userHandle, state, partitionIdx); /* SBSW_BSWM_ECUMWAKEUPSTATE */
; ..\component\BswM\Implementation\BswM.c	  3148  #  if(BSWM_IMMEDIATEUSERUSEDOFECUMWAKEUPMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3149          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfEcuMWakeupMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfEcuMWakeupMapping(userHandle, partitionIdx), BSWM_ECUM_CURRENTWAKEUP_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3150  #  endif
; ..\component\BswM\Implementation\BswM.c	  3151        }
; ..\component\BswM\Implementation\BswM.c	  3152      }
; ..\component\BswM\Implementation\BswM.c	  3153  # else
; ..\component\BswM\Implementation\BswM.c	  3154      BSWM_DUMMY_STATEMENT(source); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3155      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(state); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3156  # endif
; ..\component\BswM\Implementation\BswM.c	  3157    }
; ..\component\BswM\Implementation\BswM.c	  3158    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3159    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3160  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3161    if (errorId != BSWM_E_NO_ERROR)
	jeq	d7,#0,.L78
.L395:

; ..\component\BswM\Implementation\BswM.c	  3162    {
; ..\component\BswM\Implementation\BswM.c	  3163      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_ECUM_CURRENTWAKEUP_ID, errorId);
	fcall	.cocofun_2
.L313:
	mov	d6,#16
.L396:
	j	Det_ReportError
.L78:

; ..\component\BswM\Implementation\BswM.c	  3164    }
; ..\component\BswM\Implementation\BswM.c	  3165  # else
; ..\component\BswM\Implementation\BswM.c	  3166    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3167  # endif
; ..\component\BswM\Implementation\BswM.c	  3168  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
	ret
.L221:
	
__BswM_EcuM_CurrentWakeup_function_end:
	.size	BswM_EcuM_CurrentWakeup,__BswM_EcuM_CurrentWakeup_function_end-BswM_EcuM_CurrentWakeup
.L153:
	; End of function
	
	.sdecl	'.text.BswM.BswM_EcuM_RequestedState',code,cluster('BswM_EcuM_RequestedState')
	.sect	'.text.BswM.BswM_EcuM_RequestedState'
	.align	2
	
	.global	BswM_EcuM_RequestedState

; ..\component\BswM\Implementation\BswM.c	  3169  
; ..\component\BswM\Implementation\BswM.c	  3170  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3171   *  BswM_EcuM_RequestedState()
; ..\component\BswM\Implementation\BswM.c	  3172   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3173  /*!
; ..\component\BswM\Implementation\BswM.c	  3174   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3175   *
; ..\component\BswM\Implementation\BswM.c	  3176   *
; ..\component\BswM\Implementation\BswM.c	  3177   *
; ..\component\BswM\Implementation\BswM.c	  3178   *
; ..\component\BswM\Implementation\BswM.c	  3179   *
; ..\component\BswM\Implementation\BswM.c	  3180   */
; ..\component\BswM\Implementation\BswM.c	  3181  FUNC(void, BSWM_CODE) BswM_EcuM_RequestedState(EcuM_StateType State, EcuM_RunStatusType CurrentStatus)
; Function BswM_EcuM_RequestedState
.L127:
BswM_EcuM_RequestedState:	.type	func

; ..\component\BswM\Implementation\BswM.c	  3182  {
; ..\component\BswM\Implementation\BswM.c	  3183    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3184    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3185  # if (BSWM_ECUMRUNREQUESTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3186    BswM_EcuMRunRequestStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3187  # endif
; ..\component\BswM\Implementation\BswM.c	  3188    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3189  
; ..\component\BswM\Implementation\BswM.c	  3190    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3191  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3192    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  3193  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3194    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3195    {
; ..\component\BswM\Implementation\BswM.c	  3196      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3197    }
; ..\component\BswM\Implementation\BswM.c	  3198    else
; ..\component\BswM\Implementation\BswM.c	  3199  #  endif
; ..\component\BswM\Implementation\BswM.c	  3200    if (!BswM_IsInitialized(partitionIdx))
	mov	d7,#0
	fcall	.cocofun_1
	jne	d15,#0,.L79
.L401:

; ..\component\BswM\Implementation\BswM.c	  3201    {
; ..\component\BswM\Implementation\BswM.c	  3202      errorId = BSWM_E_NO_INIT;
	mov	d7,#1
	j	.L80
.L79:

; ..\component\BswM\Implementation\BswM.c	  3203    }
; ..\component\BswM\Implementation\BswM.c	  3204    else if (!((State == ECUM_STATE_APP_RUN) || (State == ECUM_STATE_APP_POST_RUN)))
	mov	d15,#50
.L402:
	jeq	d15,d4,.L81
.L403:
	mov	d15,#51
.L404:
	jeq	d15,d4,.L82
.L405:

; ..\component\BswM\Implementation\BswM.c	  3205    {
; ..\component\BswM\Implementation\BswM.c	  3206      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
	mov	d7,#4
	j	.L83
.L82:
.L81:

; ..\component\BswM\Implementation\BswM.c	  3207    }
; ..\component\BswM\Implementation\BswM.c	  3208  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3209    else if (CurrentStatus > ECUM_RUNSTATUS_RELEASED)
	lt.u	d15,d5,#3
.L406:

; ..\component\BswM\Implementation\BswM.c	  3210    {
; ..\component\BswM\Implementation\BswM.c	  3211      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
	cmovn	d7,d15,#5
.L83:
.L80:

; ..\component\BswM\Implementation\BswM.c	  3212    }
; ..\component\BswM\Implementation\BswM.c	  3213  #  endif
; ..\component\BswM\Implementation\BswM.c	  3214    else
; ..\component\BswM\Implementation\BswM.c	  3215  # endif
; ..\component\BswM\Implementation\BswM.c	  3216    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3217    {
; ..\component\BswM\Implementation\BswM.c	  3218  # if (BSWM_ECUMRUNREQUESTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3219      for (userHandle = 0u; userHandle < BswM_GetSizeOfEcuMRunRequestState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3220      {
; ..\component\BswM\Implementation\BswM.c	  3221        if (BswM_GetExternalIdOfEcuMRunRequestMapping(userHandle, partitionIdx) == State)
; ..\component\BswM\Implementation\BswM.c	  3222        {
; ..\component\BswM\Implementation\BswM.c	  3223          BswM_SetEcuMRunRequestState(userHandle, CurrentStatus, partitionIdx); /* SBSW_BSWM_ECUMRUNREQUESTSTATE */
; ..\component\BswM\Implementation\BswM.c	  3224  #  if (BSWM_IMMEDIATEUSERUSEDOFECUMRUNREQUESTMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3225          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfEcuMRunRequestMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfEcuMRunRequestMapping(userHandle, partitionIdx), BSWM_ECUM_REQUESTEDSTATE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3226  #  endif
; ..\component\BswM\Implementation\BswM.c	  3227          break;
; ..\component\BswM\Implementation\BswM.c	  3228        }
; ..\component\BswM\Implementation\BswM.c	  3229      }
; ..\component\BswM\Implementation\BswM.c	  3230  # else
; ..\component\BswM\Implementation\BswM.c	  3231      BSWM_DUMMY_STATEMENT_DET_OFF(State); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3232      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentStatus); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3233  # endif
; ..\component\BswM\Implementation\BswM.c	  3234    }
; ..\component\BswM\Implementation\BswM.c	  3235    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3236    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3237  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3238    if (errorId != BSWM_E_NO_ERROR)
	jeq	d7,#0,.L85
.L407:

; ..\component\BswM\Implementation\BswM.c	  3239    {
; ..\component\BswM\Implementation\BswM.c	  3240      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_ECUM_REQUESTEDSTATE_ID, errorId);
	fcall	.cocofun_2
.L314:
	mov	d6,#35
.L408:
	j	Det_ReportError
.L85:

; ..\component\BswM\Implementation\BswM.c	  3241    }
; ..\component\BswM\Implementation\BswM.c	  3242  # else
; ..\component\BswM\Implementation\BswM.c	  3243    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3244  # endif
; ..\component\BswM\Implementation\BswM.c	  3245  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
	ret
.L226:
	
__BswM_EcuM_RequestedState_function_end:
	.size	BswM_EcuM_RequestedState,__BswM_EcuM_RequestedState_function_end-BswM_EcuM_RequestedState
.L158:
	; End of function
	
	.sdecl	'.text.BswM.BswM_MainFunction',code,cluster('BswM_MainFunction')
	.sect	'.text.BswM.BswM_MainFunction'
	.align	2
	
	.global	BswM_MainFunction

; ..\component\BswM\Implementation\BswM.c	  3246  #endif /* BSWM_ENABLE_ECUM == STD_ON */
; ..\component\BswM\Implementation\BswM.c	  3247  
; ..\component\BswM\Implementation\BswM.c	  3248  #if (BSWM_ENABLE_NM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3249  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3250   *  BswM_Nm_StateChangeNotification()
; ..\component\BswM\Implementation\BswM.c	  3251   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3252  /*!
; ..\component\BswM\Implementation\BswM.c	  3253   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3254   *
; ..\component\BswM\Implementation\BswM.c	  3255   *
; ..\component\BswM\Implementation\BswM.c	  3256   *
; ..\component\BswM\Implementation\BswM.c	  3257   *
; ..\component\BswM\Implementation\BswM.c	  3258   *
; ..\component\BswM\Implementation\BswM.c	  3259   */
; ..\component\BswM\Implementation\BswM.c	  3260  FUNC( void, BSWM_CODE ) BswM_Nm_StateChangeNotification( CONST( NetworkHandleType, AUTOMATIC ) nmNetworkHandle,
; ..\component\BswM\Implementation\BswM.c	  3261                                                           CONST( Nm_StateType, AUTOMATIC) nmPreviousState,
; ..\component\BswM\Implementation\BswM.c	  3262                                                           CONST( Nm_StateType, AUTOMATIC ) nmCurrentState )
; ..\component\BswM\Implementation\BswM.c	  3263  {
; ..\component\BswM\Implementation\BswM.c	  3264    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3265    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3266  # if (BSWM_NMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3267    BswM_NmStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3268  # endif
; ..\component\BswM\Implementation\BswM.c	  3269    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3270  
; ..\component\BswM\Implementation\BswM.c	  3271    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3272  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3273    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  3274    /* nmPreviousState is not relevant */
; ..\component\BswM\Implementation\BswM.c	  3275  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3276    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3277    {
; ..\component\BswM\Implementation\BswM.c	  3278      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3279    }
; ..\component\BswM\Implementation\BswM.c	  3280    else
; ..\component\BswM\Implementation\BswM.c	  3281  #  endif
; ..\component\BswM\Implementation\BswM.c	  3282    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3283    {
; ..\component\BswM\Implementation\BswM.c	  3284      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3285    }
; ..\component\BswM\Implementation\BswM.c	  3286    else if (nmNetworkHandle >= BSWM_CHANNEL_COUNT)
; ..\component\BswM\Implementation\BswM.c	  3287    {
; ..\component\BswM\Implementation\BswM.c	  3288      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  3289    }
; ..\component\BswM\Implementation\BswM.c	  3290  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3291  #   if defined NM_STATE_NUMBER_OF_STATES /* COV_BSWM_NM_COMPATIBILITY */
; ..\component\BswM\Implementation\BswM.c	  3292    else if (nmCurrentState >= NM_STATE_NUMBER_OF_STATES)
; ..\component\BswM\Implementation\BswM.c	  3293  #   else
; ..\component\BswM\Implementation\BswM.c	  3294    else if (nmCurrentState > NM_STATE_OFFLINE)
; ..\component\BswM\Implementation\BswM.c	  3295  #   endif
; ..\component\BswM\Implementation\BswM.c	  3296    {
; ..\component\BswM\Implementation\BswM.c	  3297      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  3298    }
; ..\component\BswM\Implementation\BswM.c	  3299  #  endif
; ..\component\BswM\Implementation\BswM.c	  3300    else
; ..\component\BswM\Implementation\BswM.c	  3301  # endif
; ..\component\BswM\Implementation\BswM.c	  3302    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3303    {
; ..\component\BswM\Implementation\BswM.c	  3304  # if (BSWM_NMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3305      for (userHandle = 0u; userHandle < BswM_GetSizeOfNmState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3306      {
; ..\component\BswM\Implementation\BswM.c	  3307        if (BswM_GetExternalIdOfNmMapping(userHandle, partitionIdx) == nmNetworkHandle)
; ..\component\BswM\Implementation\BswM.c	  3308        {
; ..\component\BswM\Implementation\BswM.c	  3309          BswM_SetNmState(userHandle, nmCurrentState, partitionIdx); /* SBSW_BSWM_NMSTATE */
; ..\component\BswM\Implementation\BswM.c	  3310  #  if (BSWM_IMMEDIATEUSERUSEDOFNMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3311          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfNmMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfNmMapping(userHandle, partitionIdx), BSWM_NM_STATE_CHANGE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3312  #  endif
; ..\component\BswM\Implementation\BswM.c	  3313          break;
; ..\component\BswM\Implementation\BswM.c	  3314        }
; ..\component\BswM\Implementation\BswM.c	  3315      }
; ..\component\BswM\Implementation\BswM.c	  3316  # else
; ..\component\BswM\Implementation\BswM.c	  3317  #  if (BSWM_DEV_ERROR_DETECT == STD_OFF)
; ..\component\BswM\Implementation\BswM.c	  3318      BSWM_DUMMY_STATEMENT_CONST(nmNetworkHandle); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3319  #  endif
; ..\component\BswM\Implementation\BswM.c	  3320  #  if (BSWM_DEV_ERROR_DETECT == STD_OFF) || (BSWM_MODE_CHECK == STD_OFF) /* COV_BSWM_DEV_ERROR_DETECT TF xf tf */
; ..\component\BswM\Implementation\BswM.c	  3321      BSWM_DUMMY_STATEMENT_CONST(nmCurrentState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3322  #  endif
; ..\component\BswM\Implementation\BswM.c	  3323  # endif
; ..\component\BswM\Implementation\BswM.c	  3324      BSWM_DUMMY_STATEMENT_CONST(nmPreviousState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3325    }
; ..\component\BswM\Implementation\BswM.c	  3326    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3327    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3328  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3329    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3330    {
; ..\component\BswM\Implementation\BswM.c	  3331      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_NM_STATE_CHANGE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3332    }
; ..\component\BswM\Implementation\BswM.c	  3333  # else
; ..\component\BswM\Implementation\BswM.c	  3334    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3335  # endif
; ..\component\BswM\Implementation\BswM.c	  3336  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  3337  #endif
; ..\component\BswM\Implementation\BswM.c	  3338  
; ..\component\BswM\Implementation\BswM.c	  3339  #if (BSWM_ENABLE_NVM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3340  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3341   *  BswM_NvM_CurrentBlockMode()
; ..\component\BswM\Implementation\BswM.c	  3342   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3343  /*!
; ..\component\BswM\Implementation\BswM.c	  3344   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3345   *
; ..\component\BswM\Implementation\BswM.c	  3346   *
; ..\component\BswM\Implementation\BswM.c	  3347   *
; ..\component\BswM\Implementation\BswM.c	  3348   *
; ..\component\BswM\Implementation\BswM.c	  3349   *
; ..\component\BswM\Implementation\BswM.c	  3350   */
; ..\component\BswM\Implementation\BswM.c	  3351  FUNC (void, BSWM_CODE) BswM_NvM_CurrentBlockMode(NvM_BlockIdType Block, NvM_RequestResultType CurrentBlockMode)
; ..\component\BswM\Implementation\BswM.c	  3352  {
; ..\component\BswM\Implementation\BswM.c	  3353    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3354    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3355  # if (BSWM_NVMBLOCKSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3356    BswM_NvMBlockStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3357  # endif
; ..\component\BswM\Implementation\BswM.c	  3358    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3359  
; ..\component\BswM\Implementation\BswM.c	  3360    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3361  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3362    /* #20 Check if partition is valid and BswM is initialized and passed mode is in range. ( \trace SPEC-7795, SPEC-7945 ) */
; ..\component\BswM\Implementation\BswM.c	  3363  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3364    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3365    {
; ..\component\BswM\Implementation\BswM.c	  3366      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3367    }
; ..\component\BswM\Implementation\BswM.c	  3368    else
; ..\component\BswM\Implementation\BswM.c	  3369  #  endif
; ..\component\BswM\Implementation\BswM.c	  3370    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3371    {
; ..\component\BswM\Implementation\BswM.c	  3372      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3373    }
; ..\component\BswM\Implementation\BswM.c	  3374  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3375    else if (CurrentBlockMode > NVM_REQ_RESTORED_FROM_ROM)
; ..\component\BswM\Implementation\BswM.c	  3376    {
; ..\component\BswM\Implementation\BswM.c	  3377      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  3378    }
; ..\component\BswM\Implementation\BswM.c	  3379  #  endif
; ..\component\BswM\Implementation\BswM.c	  3380    else
; ..\component\BswM\Implementation\BswM.c	  3381  # endif
; ..\component\BswM\Implementation\BswM.c	  3382    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3383    {
; ..\component\BswM\Implementation\BswM.c	  3384  # if (BSWM_NVMBLOCKSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3385      for (userHandle = 0u; userHandle < BswM_GetSizeOfNvMBlockState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3386      {
; ..\component\BswM\Implementation\BswM.c	  3387        if (BswM_GetExternalIdOfNvMBlockMapping(userHandle, partitionIdx) == Block)
; ..\component\BswM\Implementation\BswM.c	  3388        {
; ..\component\BswM\Implementation\BswM.c	  3389          BswM_SetNvMBlockState(userHandle, CurrentBlockMode, partitionIdx); /* SBSW_BSWM_NVMBLOCKSTATE */
; ..\component\BswM\Implementation\BswM.c	  3390  #  if (BSWM_IMMEDIATEUSERUSEDOFNVMBLOCKMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3391          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfNvMBlockMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfNvMBlockMapping(userHandle, partitionIdx), BSWM_NVM_CURRENTBLOCKMODE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3392  #  endif
; ..\component\BswM\Implementation\BswM.c	  3393          break;
; ..\component\BswM\Implementation\BswM.c	  3394        }
; ..\component\BswM\Implementation\BswM.c	  3395      }
; ..\component\BswM\Implementation\BswM.c	  3396  # else
; ..\component\BswM\Implementation\BswM.c	  3397      BSWM_DUMMY_STATEMENT(Block); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3398      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentBlockMode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3399  # endif
; ..\component\BswM\Implementation\BswM.c	  3400    }
; ..\component\BswM\Implementation\BswM.c	  3401    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3402    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3403  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3404    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3405    {
; ..\component\BswM\Implementation\BswM.c	  3406      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_NVM_CURRENTBLOCKMODE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3407    }
; ..\component\BswM\Implementation\BswM.c	  3408  # else
; ..\component\BswM\Implementation\BswM.c	  3409    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3410  # endif
; ..\component\BswM\Implementation\BswM.c	  3411  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  3412  #endif
; ..\component\BswM\Implementation\BswM.c	  3413  
; ..\component\BswM\Implementation\BswM.c	  3414  #if (BSWM_ENABLE_NVM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3415  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3416   *  BswM_NvM_CurrentJobMode()
; ..\component\BswM\Implementation\BswM.c	  3417   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3418  /*!
; ..\component\BswM\Implementation\BswM.c	  3419   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3420   *
; ..\component\BswM\Implementation\BswM.c	  3421   *
; ..\component\BswM\Implementation\BswM.c	  3422   *
; ..\component\BswM\Implementation\BswM.c	  3423   *
; ..\component\BswM\Implementation\BswM.c	  3424   *
; ..\component\BswM\Implementation\BswM.c	  3425   */
; ..\component\BswM\Implementation\BswM.c	  3426  FUNC (void, BSWM_CODE) BswM_NvM_CurrentJobMode(uint8 ServiceId, NvM_RequestResultType CurrentJobMode)
; ..\component\BswM\Implementation\BswM.c	  3427  {
; ..\component\BswM\Implementation\BswM.c	  3428    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3429    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3430  # if (BSWM_NVMJOBSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3431    BswM_NvMJobStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3432  # endif
; ..\component\BswM\Implementation\BswM.c	  3433    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3434  
; ..\component\BswM\Implementation\BswM.c	  3435    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3436  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3437    /* #20 Check if partition is valid and BswM is initialized and passed mode is in range. ( \trace SPEC-16676, SPEC-16673, SPEC-16749 ) */
; ..\component\BswM\Implementation\BswM.c	  3438  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3439    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3440    {
; ..\component\BswM\Implementation\BswM.c	  3441      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3442    }
; ..\component\BswM\Implementation\BswM.c	  3443    else
; ..\component\BswM\Implementation\BswM.c	  3444  #  endif
; ..\component\BswM\Implementation\BswM.c	  3445    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3446    {
; ..\component\BswM\Implementation\BswM.c	  3447      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3448    }
; ..\component\BswM\Implementation\BswM.c	  3449    else if (!((ServiceId == 0x0Cu) || (ServiceId == 0x0Du)))
; ..\component\BswM\Implementation\BswM.c	  3450    {
; ..\component\BswM\Implementation\BswM.c	  3451      errorId = BSWM_E_REQ_USER_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  3452    }
; ..\component\BswM\Implementation\BswM.c	  3453  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3454    else if (!((CurrentJobMode == NVM_REQ_OK) || (CurrentJobMode == NVM_REQ_PENDING) || (CurrentJobMode == NVM_REQ_NOT_OK)
; ..\component\BswM\Implementation\BswM.c	  3455        || (CurrentJobMode == NVM_REQ_CANCELED)))
; ..\component\BswM\Implementation\BswM.c	  3456    {
; ..\component\BswM\Implementation\BswM.c	  3457      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  3458    }
; ..\component\BswM\Implementation\BswM.c	  3459  #  endif
; ..\component\BswM\Implementation\BswM.c	  3460    else
; ..\component\BswM\Implementation\BswM.c	  3461  # endif
; ..\component\BswM\Implementation\BswM.c	  3462    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3463    {
; ..\component\BswM\Implementation\BswM.c	  3464  # if (BSWM_NVMJOBSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3465      for (userHandle = 0u; userHandle < BswM_GetSizeOfNvMJobState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3466      {
; ..\component\BswM\Implementation\BswM.c	  3467        if (BswM_GetExternalIdOfNvMJobMapping(userHandle, partitionIdx) == ServiceId)
; ..\component\BswM\Implementation\BswM.c	  3468        {
; ..\component\BswM\Implementation\BswM.c	  3469          BswM_SetNvMJobState(userHandle, CurrentJobMode, partitionIdx); /* SBSW_BSWM_NVMJOBSTATE */
; ..\component\BswM\Implementation\BswM.c	  3470  #  if (BSWM_IMMEDIATEUSERUSEDOFNVMJOBMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3471          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfNvMJobMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfNvMJobMapping(userHandle, partitionIdx), BSWM_NVM_CURRENTJOBMODE_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3472  #  endif
; ..\component\BswM\Implementation\BswM.c	  3473          break;
; ..\component\BswM\Implementation\BswM.c	  3474        }
; ..\component\BswM\Implementation\BswM.c	  3475      }
; ..\component\BswM\Implementation\BswM.c	  3476  # else
; ..\component\BswM\Implementation\BswM.c	  3477      BSWM_DUMMY_STATEMENT_DET_OFF(ServiceId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3478      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentJobMode); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3479  # endif
; ..\component\BswM\Implementation\BswM.c	  3480    }
; ..\component\BswM\Implementation\BswM.c	  3481    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3482    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3483  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3484    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3485    {
; ..\component\BswM\Implementation\BswM.c	  3486      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_NVM_CURRENTJOBMODE_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3487    }
; ..\component\BswM\Implementation\BswM.c	  3488  # else
; ..\component\BswM\Implementation\BswM.c	  3489    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3490  # endif
; ..\component\BswM\Implementation\BswM.c	  3491  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  3492  #endif
; ..\component\BswM\Implementation\BswM.c	  3493  
; ..\component\BswM\Implementation\BswM.c	  3494  #if (BSWM_ENABLE_PDUR == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3495  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3496  *  BswM_PduR_PreTransmit()
; ..\component\BswM\Implementation\BswM.c	  3497  *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3498  /*!
; ..\component\BswM\Implementation\BswM.c	  3499  * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3500   *
; ..\component\BswM\Implementation\BswM.c	  3501   *
; ..\component\BswM\Implementation\BswM.c	  3502   *
; ..\component\BswM\Implementation\BswM.c	  3503   *
; ..\component\BswM\Implementation\BswM.c	  3504   *
; ..\component\BswM\Implementation\BswM.c	  3505   *
; ..\component\BswM\Implementation\BswM.c	  3506  */
; ..\component\BswM\Implementation\BswM.c	  3507  FUNC(void, BSWM_CODE) BswM_PduR_PreTransmit(PduIdType TxPduId, P2CONST(PduInfoType, AUTOMATIC, BSWM_APPL_DATA) PduInfoPtr)
; ..\component\BswM\Implementation\BswM.c	  3508  {
; ..\component\BswM\Implementation\BswM.c	  3509    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3510    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3511  # if (BSWM_PDURPRETRANSMITSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3512    BswM_PduRPreTransmitMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3513  #  if (BSWM_PDURPRETRANSMITSTATEIDXOFPDURPRETRANSMITMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3514    BswM_PduRPreTransmitStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3515  #  endif
; ..\component\BswM\Implementation\BswM.c	  3516  # endif
; ..\component\BswM\Implementation\BswM.c	  3517  
; ..\component\BswM\Implementation\BswM.c	  3518    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3519  
; ..\component\BswM\Implementation\BswM.c	  3520    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3521  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3522    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3523  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3524    if (partitionIdx == BSWM_INVALID_PARTITION)
; ..\component\BswM\Implementation\BswM.c	  3525    {
; ..\component\BswM\Implementation\BswM.c	  3526      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3527    }
; ..\component\BswM\Implementation\BswM.c	  3528    else
; ..\component\BswM\Implementation\BswM.c	  3529  #  endif
; ..\component\BswM\Implementation\BswM.c	  3530    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3531    {
; ..\component\BswM\Implementation\BswM.c	  3532      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3533    }
; ..\component\BswM\Implementation\BswM.c	  3534    else
; ..\component\BswM\Implementation\BswM.c	  3535  # endif
; ..\component\BswM\Implementation\BswM.c	  3536      /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3537    {
; ..\component\BswM\Implementation\BswM.c	  3538  # if (BSWM_IMMEDIATEUSERUSEDOFPDURPRETRANSMITMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3539      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRPreTransmitMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3540      {
; ..\component\BswM\Implementation\BswM.c	  3541        if (BswM_GetExternalIdOfPduRPreTransmitMapping(userHandle, partitionIdx) == TxPduId)
; ..\component\BswM\Implementation\BswM.c	  3542        {
; ..\component\BswM\Implementation\BswM.c	  3543  #  if (BSWM_PDURPRETRANSMITSTATEIDXOFPDURPRETRANSMITMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3544          internalId = BswM_GetPduRPreTransmitStateIdxOfPduRPreTransmitMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3545          BswM_SetPduRPreTransmitState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURPRETRANSMITSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3546          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRPreTransmitMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRPreTransmitMapping(userHandle, partitionIdx), BSWM_PDUR_PRETRANSMIT_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3547          BswM_SetPduRPreTransmitState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURPRETRANSMITSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3548          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  3549  #  else
; ..\component\BswM\Implementation\BswM.c	  3550          BswM_SetPduRPreTransmitState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURPRETRANSMITSTATE */
; ..\component\BswM\Implementation\BswM.c	  3551          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRPreTransmitMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRPreTransmitMapping(userHandle, partitionIdx), BSWM_PDUR_PRETRANSMIT_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3552          BswM_SetPduRPreTransmitState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURPRETRANSMITSTATE */
; ..\component\BswM\Implementation\BswM.c	  3553          break;
; ..\component\BswM\Implementation\BswM.c	  3554  #  endif
; ..\component\BswM\Implementation\BswM.c	  3555        }
; ..\component\BswM\Implementation\BswM.c	  3556      }
; ..\component\BswM\Implementation\BswM.c	  3557  # else
; ..\component\BswM\Implementation\BswM.c	  3558      BSWM_DUMMY_STATEMENT(TxPduId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3559  # endif
; ..\component\BswM\Implementation\BswM.c	  3560    }
; ..\component\BswM\Implementation\BswM.c	  3561    BSWM_DUMMY_STATEMENT_CONST(PduInfoPtr); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3562    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3563    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3564  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3565    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3566    {
; ..\component\BswM\Implementation\BswM.c	  3567      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_PRETRANSMIT_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3568    }
; ..\component\BswM\Implementation\BswM.c	  3569  # else
; ..\component\BswM\Implementation\BswM.c	  3570    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3571  # endif
; ..\component\BswM\Implementation\BswM.c	  3572  }
; ..\component\BswM\Implementation\BswM.c	  3573  
; ..\component\BswM\Implementation\BswM.c	  3574  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3575   *  BswM_PduR_RxIndication()
; ..\component\BswM\Implementation\BswM.c	  3576   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3577  /*!
; ..\component\BswM\Implementation\BswM.c	  3578   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3579   *
; ..\component\BswM\Implementation\BswM.c	  3580   *
; ..\component\BswM\Implementation\BswM.c	  3581   *
; ..\component\BswM\Implementation\BswM.c	  3582   *
; ..\component\BswM\Implementation\BswM.c	  3583   *
; ..\component\BswM\Implementation\BswM.c	  3584   *
; ..\component\BswM\Implementation\BswM.c	  3585   */
; ..\component\BswM\Implementation\BswM.c	  3586  FUNC(void, BSWM_CODE) BswM_PduR_RxIndication(PduIdType RxPduId, P2CONST(PduInfoType, AUTOMATIC, BSWM_APPL_DATA) PduInfoPtr)
; ..\component\BswM\Implementation\BswM.c	  3587  {
; ..\component\BswM\Implementation\BswM.c	  3588    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3589    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3590  # if (BSWM_PDURRXINDICATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3591    BswM_PduRRxIndicationMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3592  #  if (BSWM_PDURRXINDICATIONSTATEIDXOFPDURRXINDICATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3593    BswM_PduRRxIndicationStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3594  #  endif
; ..\component\BswM\Implementation\BswM.c	  3595  # endif
; ..\component\BswM\Implementation\BswM.c	  3596  
; ..\component\BswM\Implementation\BswM.c	  3597    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3598  
; ..\component\BswM\Implementation\BswM.c	  3599    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3600  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3601    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3602  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3603    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3604    {
; ..\component\BswM\Implementation\BswM.c	  3605      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3606    }
; ..\component\BswM\Implementation\BswM.c	  3607    else
; ..\component\BswM\Implementation\BswM.c	  3608  #  endif
; ..\component\BswM\Implementation\BswM.c	  3609    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3610    {
; ..\component\BswM\Implementation\BswM.c	  3611      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3612    }
; ..\component\BswM\Implementation\BswM.c	  3613    else
; ..\component\BswM\Implementation\BswM.c	  3614  # endif
; ..\component\BswM\Implementation\BswM.c	  3615    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3616    {
; ..\component\BswM\Implementation\BswM.c	  3617  # if (BSWM_IMMEDIATEUSERUSEDOFPDURRXINDICATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3618      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRRxIndicationMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3619      {
; ..\component\BswM\Implementation\BswM.c	  3620        if (BswM_GetExternalIdOfPduRRxIndicationMapping(userHandle, partitionIdx) == RxPduId)
; ..\component\BswM\Implementation\BswM.c	  3621        {
; ..\component\BswM\Implementation\BswM.c	  3622  #  if (BSWM_PDURRXINDICATIONSTATEIDXOFPDURRXINDICATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3623          internalId = BswM_GetPduRRxIndicationStateIdxOfPduRRxIndicationMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3624          BswM_SetPduRRxIndicationState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURRXINDICATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3625          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRRxIndicationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRRxIndicationMapping(userHandle, partitionIdx), BSWM_PDUR_RXINDICATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3626          BswM_SetPduRRxIndicationState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURRXINDICATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3627          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  3628  #  else
; ..\component\BswM\Implementation\BswM.c	  3629          BswM_SetPduRRxIndicationState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURRXINDICATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3630          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRRxIndicationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRRxIndicationMapping(userHandle, partitionIdx), BSWM_PDUR_RXINDICATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3631          BswM_SetPduRRxIndicationState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURRXINDICATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3632          break;
; ..\component\BswM\Implementation\BswM.c	  3633  #  endif
; ..\component\BswM\Implementation\BswM.c	  3634        }
; ..\component\BswM\Implementation\BswM.c	  3635      }
; ..\component\BswM\Implementation\BswM.c	  3636  # else
; ..\component\BswM\Implementation\BswM.c	  3637      BSWM_DUMMY_STATEMENT(RxPduId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3638  # endif
; ..\component\BswM\Implementation\BswM.c	  3639      BSWM_DUMMY_STATEMENT_CONST(PduInfoPtr); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3640    }
; ..\component\BswM\Implementation\BswM.c	  3641  
; ..\component\BswM\Implementation\BswM.c	  3642    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3643    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3644  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3645    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3646    {
; ..\component\BswM\Implementation\BswM.c	  3647      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_RXINDICATION_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3648    }
; ..\component\BswM\Implementation\BswM.c	  3649  # else
; ..\component\BswM\Implementation\BswM.c	  3650    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3651  # endif
; ..\component\BswM\Implementation\BswM.c	  3652  }
; ..\component\BswM\Implementation\BswM.c	  3653  
; ..\component\BswM\Implementation\BswM.c	  3654  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3655   *  BswM_PduR_TpRxIndication()
; ..\component\BswM\Implementation\BswM.c	  3656   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3657  /*!
; ..\component\BswM\Implementation\BswM.c	  3658   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3659   *
; ..\component\BswM\Implementation\BswM.c	  3660   *
; ..\component\BswM\Implementation\BswM.c	  3661   *
; ..\component\BswM\Implementation\BswM.c	  3662   *
; ..\component\BswM\Implementation\BswM.c	  3663   *
; ..\component\BswM\Implementation\BswM.c	  3664   *
; ..\component\BswM\Implementation\BswM.c	  3665   */
; ..\component\BswM\Implementation\BswM.c	  3666  FUNC(void, BSWM_CODE) BswM_PduR_TpRxIndication(PduIdType id, Std_ReturnType result)
; ..\component\BswM\Implementation\BswM.c	  3667  {
; ..\component\BswM\Implementation\BswM.c	  3668    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3669    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3670  # if (BSWM_PDURTPRXINDICATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3671    BswM_PduRTpRxIndicationMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3672  #  if (BSWM_PDURTPRXINDICATIONSTATEIDXOFPDURTPRXINDICATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3673    BswM_PduRTpRxIndicationStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3674  #  endif
; ..\component\BswM\Implementation\BswM.c	  3675  # endif
; ..\component\BswM\Implementation\BswM.c	  3676    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3677  
; ..\component\BswM\Implementation\BswM.c	  3678    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3679  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3680    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3681  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3682    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3683    {
; ..\component\BswM\Implementation\BswM.c	  3684      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3685    }
; ..\component\BswM\Implementation\BswM.c	  3686    else
; ..\component\BswM\Implementation\BswM.c	  3687  #  endif
; ..\component\BswM\Implementation\BswM.c	  3688    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3689    {
; ..\component\BswM\Implementation\BswM.c	  3690      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3691    }
; ..\component\BswM\Implementation\BswM.c	  3692    else
; ..\component\BswM\Implementation\BswM.c	  3693  # endif
; ..\component\BswM\Implementation\BswM.c	  3694    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3695    {
; ..\component\BswM\Implementation\BswM.c	  3696  # if (BSWM_IMMEDIATEUSERUSEDOFPDURTPRXINDICATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3697      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRTpRxIndicationMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3698      {
; ..\component\BswM\Implementation\BswM.c	  3699        if (BswM_GetExternalIdOfPduRTpRxIndicationMapping(userHandle, partitionIdx) == id)
; ..\component\BswM\Implementation\BswM.c	  3700        {
; ..\component\BswM\Implementation\BswM.c	  3701  #  if (BSWM_PDURTPRXINDICATIONSTATEIDXOFPDURTPRXINDICATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3702          internalId = BswM_GetPduRTpRxIndicationStateIdxOfPduRTpRxIndicationMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3703          BswM_SetPduRTpRxIndicationState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURTPRXINDICATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3704          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTpRxIndicationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTpRxIndicationMapping(userHandle, partitionIdx), BSWM_PDUR_TPRXINDICATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3705          BswM_SetPduRTpRxIndicationState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPRXINDICATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3706          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  3707  #  else
; ..\component\BswM\Implementation\BswM.c	  3708          BswM_SetPduRTpRxIndicationState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURTPRXINDICATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3709          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTpRxIndicationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTpRxIndicationMapping(userHandle, partitionIdx), BSWM_PDUR_TPRXINDICATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3710          BswM_SetPduRTpRxIndicationState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPRXINDICATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3711          break;
; ..\component\BswM\Implementation\BswM.c	  3712  #  endif
; ..\component\BswM\Implementation\BswM.c	  3713        }
; ..\component\BswM\Implementation\BswM.c	  3714      }
; ..\component\BswM\Implementation\BswM.c	  3715  # else
; ..\component\BswM\Implementation\BswM.c	  3716      BSWM_DUMMY_STATEMENT(id); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3717  # endif
; ..\component\BswM\Implementation\BswM.c	  3718      BSWM_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3719    }
; ..\component\BswM\Implementation\BswM.c	  3720    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3721    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3722  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3723    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3724    {
; ..\component\BswM\Implementation\BswM.c	  3725      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_TPRXINDICATION_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3726    }
; ..\component\BswM\Implementation\BswM.c	  3727  # else
; ..\component\BswM\Implementation\BswM.c	  3728    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3729  # endif
; ..\component\BswM\Implementation\BswM.c	  3730  }
; ..\component\BswM\Implementation\BswM.c	  3731  
; ..\component\BswM\Implementation\BswM.c	  3732  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3733   *  BswM_PduR_TpStartOfReception()
; ..\component\BswM\Implementation\BswM.c	  3734   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3735  /*!
; ..\component\BswM\Implementation\BswM.c	  3736   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3737   *
; ..\component\BswM\Implementation\BswM.c	  3738   *
; ..\component\BswM\Implementation\BswM.c	  3739   *
; ..\component\BswM\Implementation\BswM.c	  3740   *
; ..\component\BswM\Implementation\BswM.c	  3741   *
; ..\component\BswM\Implementation\BswM.c	  3742   *
; ..\component\BswM\Implementation\BswM.c	  3743   */
; ..\component\BswM\Implementation\BswM.c	  3744  /* PRQA S 3673 3 */ /* MD_BSWM_3673 */
; ..\component\BswM\Implementation\BswM.c	  3745  FUNC(void, BSWM_CODE) BswM_PduR_TpStartOfReception(PduIdType id, P2VAR(PduInfoType, AUTOMATIC, BSWM_APPL_DATA) info,
; ..\component\BswM\Implementation\BswM.c	  3746                                                     PduLengthType TpSduLength,
; ..\component\BswM\Implementation\BswM.c	  3747                                                     P2VAR(PduLengthType, AUTOMATIC, BSWM_APPL_DATA) bufferSizePtr)
; ..\component\BswM\Implementation\BswM.c	  3748  {
; ..\component\BswM\Implementation\BswM.c	  3749    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3750    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3751  # if (BSWM_PDURTPSTARTOFRECEPTIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3752    BswM_PduRTpStartOfReceptionMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3753  #  if (BSWM_PDURTPSTARTOFRECEPTIONSTATEIDXOFPDURTPSTARTOFRECEPTIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3754    BswM_PduRTpStartOfReceptionStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3755  #  endif
; ..\component\BswM\Implementation\BswM.c	  3756  # endif
; ..\component\BswM\Implementation\BswM.c	  3757    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3758  
; ..\component\BswM\Implementation\BswM.c	  3759    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3760  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3761    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3762  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3763    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3764    {
; ..\component\BswM\Implementation\BswM.c	  3765      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3766    }
; ..\component\BswM\Implementation\BswM.c	  3767    else
; ..\component\BswM\Implementation\BswM.c	  3768  #  endif
; ..\component\BswM\Implementation\BswM.c	  3769    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3770    {
; ..\component\BswM\Implementation\BswM.c	  3771      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3772    }
; ..\component\BswM\Implementation\BswM.c	  3773    else
; ..\component\BswM\Implementation\BswM.c	  3774  # endif
; ..\component\BswM\Implementation\BswM.c	  3775    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3776    {
; ..\component\BswM\Implementation\BswM.c	  3777  # if (BSWM_IMMEDIATEUSERUSEDOFPDURTPSTARTOFRECEPTIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3778      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRTpStartOfReceptionMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3779      {
; ..\component\BswM\Implementation\BswM.c	  3780        if (BswM_GetExternalIdOfPduRTpStartOfReceptionMapping(userHandle, partitionIdx) == id)
; ..\component\BswM\Implementation\BswM.c	  3781        {
; ..\component\BswM\Implementation\BswM.c	  3782  #  if (BSWM_PDURTPSTARTOFRECEPTIONSTATEIDXOFPDURTPSTARTOFRECEPTIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3783          internalId = BswM_GetPduRTpStartOfReceptionStateIdxOfPduRTpStartOfReceptionMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3784          BswM_SetPduRTpStartOfReceptionState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3785          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTpStartOfReceptionMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTpStartOfReceptionMapping(userHandle, partitionIdx), BSWM_PDUR_TPSTARTOFRECEPTION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3786          BswM_SetPduRTpStartOfReceptionState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3787          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  3788  #  else
; ..\component\BswM\Implementation\BswM.c	  3789          BswM_SetPduRTpStartOfReceptionState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3790          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTpStartOfReceptionMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTpStartOfReceptionMapping(userHandle, partitionIdx), BSWM_PDUR_TPSTARTOFRECEPTION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3791          BswM_SetPduRTpStartOfReceptionState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3792          break;
; ..\component\BswM\Implementation\BswM.c	  3793  #  endif
; ..\component\BswM\Implementation\BswM.c	  3794        }
; ..\component\BswM\Implementation\BswM.c	  3795      }
; ..\component\BswM\Implementation\BswM.c	  3796  # else
; ..\component\BswM\Implementation\BswM.c	  3797      BSWM_DUMMY_STATEMENT(id); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3798  # endif
; ..\component\BswM\Implementation\BswM.c	  3799      BSWM_DUMMY_STATEMENT(info); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3800      BSWM_DUMMY_STATEMENT(TpSduLength); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3801      BSWM_DUMMY_STATEMENT(bufferSizePtr); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3802    }
; ..\component\BswM\Implementation\BswM.c	  3803    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3804    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3805  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3806    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3807    {
; ..\component\BswM\Implementation\BswM.c	  3808      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_TPSTARTOFRECEPTION_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3809    }
; ..\component\BswM\Implementation\BswM.c	  3810  # else
; ..\component\BswM\Implementation\BswM.c	  3811    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3812  # endif
; ..\component\BswM\Implementation\BswM.c	  3813  }
; ..\component\BswM\Implementation\BswM.c	  3814  
; ..\component\BswM\Implementation\BswM.c	  3815  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3816   *  BswM_PduR_TpTxConfirmation()
; ..\component\BswM\Implementation\BswM.c	  3817   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3818  /*!
; ..\component\BswM\Implementation\BswM.c	  3819   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3820   *
; ..\component\BswM\Implementation\BswM.c	  3821   *
; ..\component\BswM\Implementation\BswM.c	  3822   *
; ..\component\BswM\Implementation\BswM.c	  3823   *
; ..\component\BswM\Implementation\BswM.c	  3824   *
; ..\component\BswM\Implementation\BswM.c	  3825   *
; ..\component\BswM\Implementation\BswM.c	  3826   */
; ..\component\BswM\Implementation\BswM.c	  3827  FUNC(void, BSWM_CODE) BswM_PduR_TpTxConfirmation(PduIdType id, Std_ReturnType result)
; ..\component\BswM\Implementation\BswM.c	  3828  {
; ..\component\BswM\Implementation\BswM.c	  3829    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3830    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3831  # if (BSWM_PDURTPTXCONFIRMATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3832    BswM_PduRTpTxConfirmationMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3833  #  if (BSWM_PDURTPTXCONFIRMATIONSTATEIDXOFPDURTPTXCONFIRMATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3834    BswM_PduRTpTxConfirmationStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3835  #  endif
; ..\component\BswM\Implementation\BswM.c	  3836  # endif
; ..\component\BswM\Implementation\BswM.c	  3837    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3838  
; ..\component\BswM\Implementation\BswM.c	  3839    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3840  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3841    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3842  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3843    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3844    {
; ..\component\BswM\Implementation\BswM.c	  3845      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3846    }
; ..\component\BswM\Implementation\BswM.c	  3847    else
; ..\component\BswM\Implementation\BswM.c	  3848  #  endif
; ..\component\BswM\Implementation\BswM.c	  3849    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3850    {
; ..\component\BswM\Implementation\BswM.c	  3851      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3852    }
; ..\component\BswM\Implementation\BswM.c	  3853    else
; ..\component\BswM\Implementation\BswM.c	  3854  # endif
; ..\component\BswM\Implementation\BswM.c	  3855    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3856    {
; ..\component\BswM\Implementation\BswM.c	  3857  # if (BSWM_IMMEDIATEUSERUSEDOFPDURTPTXCONFIRMATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3858      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRTpTxConfirmationMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3859      {
; ..\component\BswM\Implementation\BswM.c	  3860        if (BswM_GetExternalIdOfPduRTpTxConfirmationMapping(userHandle, partitionIdx) == id)
; ..\component\BswM\Implementation\BswM.c	  3861        {
; ..\component\BswM\Implementation\BswM.c	  3862  #  if (BSWM_PDURTPTXCONFIRMATIONSTATEIDXOFPDURTPTXCONFIRMATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3863          internalId = BswM_GetPduRTpTxConfirmationStateIdxOfPduRTpTxConfirmationMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3864          BswM_SetPduRTpTxConfirmationState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURTPTXCONFIRMATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3865          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTpTxConfirmationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTpTxConfirmationMapping(userHandle, partitionIdx), BSWM_PDUR_TPTXCONFIRMATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3866          BswM_SetPduRTpTxConfirmationState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPTXCONFIRMATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3867          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  3868  #  else
; ..\component\BswM\Implementation\BswM.c	  3869          BswM_SetPduRTpTxConfirmationState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURTPTXCONFIRMATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3870          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTpTxConfirmationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTpTxConfirmationMapping(userHandle, partitionIdx), BSWM_PDUR_TPTXCONFIRMATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3871          BswM_SetPduRTpTxConfirmationState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURTPTXCONFIRMATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  3872          break;
; ..\component\BswM\Implementation\BswM.c	  3873  #  endif
; ..\component\BswM\Implementation\BswM.c	  3874        }
; ..\component\BswM\Implementation\BswM.c	  3875      }
; ..\component\BswM\Implementation\BswM.c	  3876  # else
; ..\component\BswM\Implementation\BswM.c	  3877      BSWM_DUMMY_STATEMENT(id); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3878  # endif
; ..\component\BswM\Implementation\BswM.c	  3879      BSWM_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3880    }
; ..\component\BswM\Implementation\BswM.c	  3881    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3882    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3883  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3884    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3885    {
; ..\component\BswM\Implementation\BswM.c	  3886      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_TPTXCONFIRMATION_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3887    }
; ..\component\BswM\Implementation\BswM.c	  3888  # else
; ..\component\BswM\Implementation\BswM.c	  3889    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3890  # endif
; ..\component\BswM\Implementation\BswM.c	  3891  }
; ..\component\BswM\Implementation\BswM.c	  3892  
; ..\component\BswM\Implementation\BswM.c	  3893  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3894   *  BswM_PduR_Transmit()
; ..\component\BswM\Implementation\BswM.c	  3895   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3896  /*!
; ..\component\BswM\Implementation\BswM.c	  3897   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3898   *
; ..\component\BswM\Implementation\BswM.c	  3899   *
; ..\component\BswM\Implementation\BswM.c	  3900   *
; ..\component\BswM\Implementation\BswM.c	  3901   *
; ..\component\BswM\Implementation\BswM.c	  3902   *
; ..\component\BswM\Implementation\BswM.c	  3903   *
; ..\component\BswM\Implementation\BswM.c	  3904   */
; ..\component\BswM\Implementation\BswM.c	  3905  FUNC(void, BSWM_CODE) BswM_PduR_Transmit(PduIdType id, P2CONST(PduInfoType, AUTOMATIC, BSWM_APPL_DATA) PduInfoPtr)
; ..\component\BswM\Implementation\BswM.c	  3906  {
; ..\component\BswM\Implementation\BswM.c	  3907    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3908    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3909  # if (BSWM_PDURTRANSMITSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3910    BswM_PduRTransmitMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3911  #  if (BSWM_PDURTRANSMITSTATEIDXOFPDURTRANSMITMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3912    BswM_PduRTransmitStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3913  #  endif
; ..\component\BswM\Implementation\BswM.c	  3914  # endif
; ..\component\BswM\Implementation\BswM.c	  3915    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3916  
; ..\component\BswM\Implementation\BswM.c	  3917    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3918  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3919    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3920  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3921    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  3922    {
; ..\component\BswM\Implementation\BswM.c	  3923      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  3924    }
; ..\component\BswM\Implementation\BswM.c	  3925    else
; ..\component\BswM\Implementation\BswM.c	  3926  #  endif
; ..\component\BswM\Implementation\BswM.c	  3927    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  3928    {
; ..\component\BswM\Implementation\BswM.c	  3929      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  3930    }
; ..\component\BswM\Implementation\BswM.c	  3931    else
; ..\component\BswM\Implementation\BswM.c	  3932  # endif
; ..\component\BswM\Implementation\BswM.c	  3933    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3934    {
; ..\component\BswM\Implementation\BswM.c	  3935  # if (BSWM_IMMEDIATEUSERUSEDOFPDURTRANSMITMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3936      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRTransmitMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  3937      {
; ..\component\BswM\Implementation\BswM.c	  3938        if (BswM_GetExternalIdOfPduRTransmitMapping(userHandle, partitionIdx) == id)
; ..\component\BswM\Implementation\BswM.c	  3939        {
; ..\component\BswM\Implementation\BswM.c	  3940  #  if (BSWM_PDURTRANSMITSTATEIDXOFPDURTRANSMITMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3941          internalId = BswM_GetPduRTransmitStateIdxOfPduRTransmitMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3942          BswM_SetPduRTransmitState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURTRANSMITSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3943          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTransmitMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTransmitMapping(userHandle, partitionIdx), BSWM_PDUR_TRANSMIT_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3944          BswM_SetPduRTransmitState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURTRANSMITSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  3945          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  3946  #  else
; ..\component\BswM\Implementation\BswM.c	  3947          BswM_SetPduRTransmitState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURTRANSMITSTATE */
; ..\component\BswM\Implementation\BswM.c	  3948          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTransmitMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTransmitMapping(userHandle, partitionIdx), BSWM_PDUR_TRANSMIT_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  3949          BswM_SetPduRTransmitState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURTRANSMITSTATE */
; ..\component\BswM\Implementation\BswM.c	  3950          break;
; ..\component\BswM\Implementation\BswM.c	  3951  #  endif
; ..\component\BswM\Implementation\BswM.c	  3952        }
; ..\component\BswM\Implementation\BswM.c	  3953      }
; ..\component\BswM\Implementation\BswM.c	  3954  # else
; ..\component\BswM\Implementation\BswM.c	  3955      BSWM_DUMMY_STATEMENT(id); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3956  # endif
; ..\component\BswM\Implementation\BswM.c	  3957      BSWM_DUMMY_STATEMENT_CONST(PduInfoPtr); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3958    }
; ..\component\BswM\Implementation\BswM.c	  3959    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3960    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3961  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3962    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  3963    {
; ..\component\BswM\Implementation\BswM.c	  3964      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_TRANSMIT_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  3965    }
; ..\component\BswM\Implementation\BswM.c	  3966  # else
; ..\component\BswM\Implementation\BswM.c	  3967    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  3968  # endif
; ..\component\BswM\Implementation\BswM.c	  3969  }
; ..\component\BswM\Implementation\BswM.c	  3970  
; ..\component\BswM\Implementation\BswM.c	  3971  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  3972   *  BswM_PduR_TxConfirmation()
; ..\component\BswM\Implementation\BswM.c	  3973   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  3974  /*!
; ..\component\BswM\Implementation\BswM.c	  3975   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  3976   *
; ..\component\BswM\Implementation\BswM.c	  3977   *
; ..\component\BswM\Implementation\BswM.c	  3978   *
; ..\component\BswM\Implementation\BswM.c	  3979   *
; ..\component\BswM\Implementation\BswM.c	  3980   *
; ..\component\BswM\Implementation\BswM.c	  3981   *
; ..\component\BswM\Implementation\BswM.c	  3982   */
; ..\component\BswM\Implementation\BswM.c	  3983  FUNC(void, BSWM_CODE) BswM_PduR_TxConfirmation(PduIdType TxPduId)
; ..\component\BswM\Implementation\BswM.c	  3984  {
; ..\component\BswM\Implementation\BswM.c	  3985    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3986    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  3987  # if (BSWM_PDURTXCONFIRMATIONSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3988    BswM_PduRTxConfirmationMappingIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  3989  #  if (BSWM_PDURTXCONFIRMATIONSTATEIDXOFPDURTXCONFIRMATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3990    BswM_PduRTxConfirmationStateIterType internalId;
; ..\component\BswM\Implementation\BswM.c	  3991  #  endif
; ..\component\BswM\Implementation\BswM.c	  3992  # endif
; ..\component\BswM\Implementation\BswM.c	  3993    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  3994  
; ..\component\BswM\Implementation\BswM.c	  3995    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  3996  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3997    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  3998  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  3999    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  4000    {
; ..\component\BswM\Implementation\BswM.c	  4001      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  4002    }
; ..\component\BswM\Implementation\BswM.c	  4003    else
; ..\component\BswM\Implementation\BswM.c	  4004  #  endif
; ..\component\BswM\Implementation\BswM.c	  4005    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  4006    {
; ..\component\BswM\Implementation\BswM.c	  4007      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  4008    }
; ..\component\BswM\Implementation\BswM.c	  4009    else
; ..\component\BswM\Implementation\BswM.c	  4010  # endif
; ..\component\BswM\Implementation\BswM.c	  4011    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4012    {
; ..\component\BswM\Implementation\BswM.c	  4013  # if (BSWM_IMMEDIATEUSERUSEDOFPDURTXCONFIRMATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4014      for (userHandle = 0u; userHandle < BswM_GetSizeOfPduRTxConfirmationMapping(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  4015      {
; ..\component\BswM\Implementation\BswM.c	  4016        if (BswM_GetExternalIdOfPduRTxConfirmationMapping(userHandle, partitionIdx) == TxPduId)
; ..\component\BswM\Implementation\BswM.c	  4017        {
; ..\component\BswM\Implementation\BswM.c	  4018  #  if (BSWM_PDURTXCONFIRMATIONSTATEIDXOFPDURTXCONFIRMATIONMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4019          internalId = BswM_GetPduRTxConfirmationStateIdxOfPduRTxConfirmationMapping(userHandle, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4020          BswM_SetPduRTxConfirmationState(internalId, TRUE, partitionIdx); /* SBSW_BSWM_PDURTXCONFIRMATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  4021          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTxConfirmationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTxConfirmationMapping(userHandle, partitionIdx), BSWM_PDUR_TXCONFIRMATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4022          BswM_SetPduRTxConfirmationState(internalId, FALSE, partitionIdx); /* SBSW_BSWM_PDURTXCONFIRMATIONSTATEIND */
; ..\component\BswM\Implementation\BswM.c	  4023          /* Do not break, PduId could be used in multiple ports */
; ..\component\BswM\Implementation\BswM.c	  4024  #  else
; ..\component\BswM\Implementation\BswM.c	  4025          BswM_SetPduRTxConfirmationState(userHandle, TRUE, partitionIdx); /* SBSW_BSWM_PDURTXCONFIRMATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  4026          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfPduRTxConfirmationMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfPduRTxConfirmationMapping(userHandle, partitionIdx), BSWM_PDUR_TXCONFIRMATION_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4027          BswM_SetPduRTxConfirmationState(userHandle, FALSE, partitionIdx); /* SBSW_BSWM_PDURTXCONFIRMATIONSTATE */
; ..\component\BswM\Implementation\BswM.c	  4028          break;
; ..\component\BswM\Implementation\BswM.c	  4029  #  endif
; ..\component\BswM\Implementation\BswM.c	  4030        }
; ..\component\BswM\Implementation\BswM.c	  4031      }
; ..\component\BswM\Implementation\BswM.c	  4032  # else
; ..\component\BswM\Implementation\BswM.c	  4033      BSWM_DUMMY_STATEMENT(TxPduId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4034  # endif
; ..\component\BswM\Implementation\BswM.c	  4035    }
; ..\component\BswM\Implementation\BswM.c	  4036    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4037    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4038  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4039    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  4040    {
; ..\component\BswM\Implementation\BswM.c	  4041      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_PDUR_TXCONFIRMATION_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  4042    }
; ..\component\BswM\Implementation\BswM.c	  4043  # else
; ..\component\BswM\Implementation\BswM.c	  4044    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4045  # endif
; ..\component\BswM\Implementation\BswM.c	  4046  }
; ..\component\BswM\Implementation\BswM.c	  4047  #endif
; ..\component\BswM\Implementation\BswM.c	  4048  
; ..\component\BswM\Implementation\BswM.c	  4049  #if (BSWM_ENABLE_SD == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4050  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  4051   *  BswM_Sd_ClientServiceCurrentState()
; ..\component\BswM\Implementation\BswM.c	  4052   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  4053  /*!
; ..\component\BswM\Implementation\BswM.c	  4054   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  4055   *
; ..\component\BswM\Implementation\BswM.c	  4056   *
; ..\component\BswM\Implementation\BswM.c	  4057   *
; ..\component\BswM\Implementation\BswM.c	  4058   *
; ..\component\BswM\Implementation\BswM.c	  4059   *
; ..\component\BswM\Implementation\BswM.c	  4060   */
; ..\component\BswM\Implementation\BswM.c	  4061  FUNC(void, BSWM_CODE) BswM_Sd_ClientServiceCurrentState(uint16 SdClientServiceHandleId, Sd_ClientServiceCurrentStateType CurrentClientState)
; ..\component\BswM\Implementation\BswM.c	  4062  {
; ..\component\BswM\Implementation\BswM.c	  4063    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4064    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  4065  # if (BSWM_SDCLIENTSERVICESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4066    BswM_SdClientServiceStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  4067  # endif
; ..\component\BswM\Implementation\BswM.c	  4068    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  4069  
; ..\component\BswM\Implementation\BswM.c	  4070    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4071  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4072    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  4073  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4074    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  4075    {
; ..\component\BswM\Implementation\BswM.c	  4076      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  4077    }
; ..\component\BswM\Implementation\BswM.c	  4078    else
; ..\component\BswM\Implementation\BswM.c	  4079  #  endif
; ..\component\BswM\Implementation\BswM.c	  4080    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  4081    {
; ..\component\BswM\Implementation\BswM.c	  4082      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  4083    }
; ..\component\BswM\Implementation\BswM.c	  4084  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4085    /* If type is an enumeration the following code will cause MISRA violations because the conditions will always be
; ..\component\BswM\Implementation\BswM.c	  4086     * true, the expression always be false and so the statement is unreachable */
; ..\component\BswM\Implementation\BswM.c	  4087    else if (!((CurrentClientState == SD_CLIENT_SERVICE_DOWN) || (CurrentClientState == SD_CLIENT_SERVICE_AVAILABLE)))
; ..\component\BswM\Implementation\BswM.c	  4088    {
; ..\component\BswM\Implementation\BswM.c	  4089      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  4090    }
; ..\component\BswM\Implementation\BswM.c	  4091  #  endif
; ..\component\BswM\Implementation\BswM.c	  4092    else
; ..\component\BswM\Implementation\BswM.c	  4093  # endif
; ..\component\BswM\Implementation\BswM.c	  4094    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4095    {
; ..\component\BswM\Implementation\BswM.c	  4096  # if (BSWM_SDCLIENTSERVICESTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4097      for (userHandle = 0u; userHandle < BswM_GetSizeOfSdClientServiceState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  4098      {
; ..\component\BswM\Implementation\BswM.c	  4099        if (BswM_GetExternalIdOfSdClientServiceMapping(userHandle, partitionIdx) == SdClientServiceHandleId)
; ..\component\BswM\Implementation\BswM.c	  4100        {
; ..\component\BswM\Implementation\BswM.c	  4101          BswM_SetSdClientServiceState(userHandle, CurrentClientState, partitionIdx); /* SBSW_BSWM_SDCLIENTSERVICESTATE */
; ..\component\BswM\Implementation\BswM.c	  4102  #  if (BSWM_IMMEDIATEUSERUSEDOFSDCLIENTSERVICEMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4103          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfSdClientServiceMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfSdClientServiceMapping(userHandle, partitionIdx), BSWM_SD_CLIENTSERVICE_CURRENT_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4104  #  endif
; ..\component\BswM\Implementation\BswM.c	  4105          break;
; ..\component\BswM\Implementation\BswM.c	  4106        }
; ..\component\BswM\Implementation\BswM.c	  4107      }
; ..\component\BswM\Implementation\BswM.c	  4108  # else
; ..\component\BswM\Implementation\BswM.c	  4109      BSWM_DUMMY_STATEMENT(SdClientServiceHandleId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4110      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(CurrentClientState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4111  # endif
; ..\component\BswM\Implementation\BswM.c	  4112    }
; ..\component\BswM\Implementation\BswM.c	  4113    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4114    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4115  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4116    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  4117    {
; ..\component\BswM\Implementation\BswM.c	  4118      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_SD_CLIENTSERVICE_CURRENT_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  4119    }
; ..\component\BswM\Implementation\BswM.c	  4120  # else
; ..\component\BswM\Implementation\BswM.c	  4121    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4122  # endif
; ..\component\BswM\Implementation\BswM.c	  4123  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  4124  #endif
; ..\component\BswM\Implementation\BswM.c	  4125  
; ..\component\BswM\Implementation\BswM.c	  4126  #if (BSWM_ENABLE_SD == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4127  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  4128   *  BswM_Sd_ConsumedEventGroupCurrentState()
; ..\component\BswM\Implementation\BswM.c	  4129   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  4130  /*!
; ..\component\BswM\Implementation\BswM.c	  4131   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  4132   *
; ..\component\BswM\Implementation\BswM.c	  4133   *
; ..\component\BswM\Implementation\BswM.c	  4134   *
; ..\component\BswM\Implementation\BswM.c	  4135   *
; ..\component\BswM\Implementation\BswM.c	  4136   *
; ..\component\BswM\Implementation\BswM.c	  4137   */
; ..\component\BswM\Implementation\BswM.c	  4138  FUNC(void, BSWM_CODE) BswM_Sd_ConsumedEventGroupCurrentState(uint16 SdConsumedEventGroupHandleId, Sd_ConsumedEventGroupCurrentStateType ConsumedEventGroupState)
; ..\component\BswM\Implementation\BswM.c	  4139  {
; ..\component\BswM\Implementation\BswM.c	  4140    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4141    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  4142  # if (BSWM_SDCONSUMEDEVENTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4143    BswM_SdConsumedEventStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  4144  # endif
; ..\component\BswM\Implementation\BswM.c	  4145    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  4146  
; ..\component\BswM\Implementation\BswM.c	  4147    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4148  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4149    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  4150  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4151    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  4152    {
; ..\component\BswM\Implementation\BswM.c	  4153      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  4154    }
; ..\component\BswM\Implementation\BswM.c	  4155    else
; ..\component\BswM\Implementation\BswM.c	  4156  #  endif
; ..\component\BswM\Implementation\BswM.c	  4157    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  4158    {
; ..\component\BswM\Implementation\BswM.c	  4159      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  4160    }
; ..\component\BswM\Implementation\BswM.c	  4161  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4162    /* If type is an enumeration the following code will cause MISRA violations because the conditions will always be
; ..\component\BswM\Implementation\BswM.c	  4163     * true, the expression always be false and so the statement is unreachable */
; ..\component\BswM\Implementation\BswM.c	  4164    else if (!((ConsumedEventGroupState == SD_CONSUMED_EVENTGROUP_DOWN) || (ConsumedEventGroupState == SD_CONSUMED_EVENTGROUP_AVAILABLE)))
; ..\component\BswM\Implementation\BswM.c	  4165    {
; ..\component\BswM\Implementation\BswM.c	  4166      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  4167    }
; ..\component\BswM\Implementation\BswM.c	  4168  #  endif
; ..\component\BswM\Implementation\BswM.c	  4169    else
; ..\component\BswM\Implementation\BswM.c	  4170  # endif
; ..\component\BswM\Implementation\BswM.c	  4171    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4172    {
; ..\component\BswM\Implementation\BswM.c	  4173  # if (BSWM_SDCONSUMEDEVENTSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4174      for (userHandle = 0u; userHandle < BswM_GetSizeOfSdConsumedEventState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  4175      {
; ..\component\BswM\Implementation\BswM.c	  4176        if (BswM_GetExternalIdOfSdConsumedEventMapping(userHandle, partitionIdx) == SdConsumedEventGroupHandleId)
; ..\component\BswM\Implementation\BswM.c	  4177        {
; ..\component\BswM\Implementation\BswM.c	  4178          BswM_SetSdConsumedEventState(userHandle, ConsumedEventGroupState, partitionIdx); /* SBSW_BSWM_SDCONSUMEDEVENTSTATE */
; ..\component\BswM\Implementation\BswM.c	  4179  #  if (BSWM_IMMEDIATEUSERUSEDOFSDCONSUMEDEVENTMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4180          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfSdConsumedEventMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfSdConsumedEventMapping(userHandle, partitionIdx), BSWM_SD_CONSUMEDEVENTGROUP_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4181  #  endif
; ..\component\BswM\Implementation\BswM.c	  4182          break;
; ..\component\BswM\Implementation\BswM.c	  4183        }
; ..\component\BswM\Implementation\BswM.c	  4184      }
; ..\component\BswM\Implementation\BswM.c	  4185  # else
; ..\component\BswM\Implementation\BswM.c	  4186      BSWM_DUMMY_STATEMENT(SdConsumedEventGroupHandleId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4187      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(ConsumedEventGroupState); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4188  # endif
; ..\component\BswM\Implementation\BswM.c	  4189    }
; ..\component\BswM\Implementation\BswM.c	  4190    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4191    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4192  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4193    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  4194    {
; ..\component\BswM\Implementation\BswM.c	  4195      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_SD_CONSUMEDEVENTGROUP_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  4196    }
; ..\component\BswM\Implementation\BswM.c	  4197  # else
; ..\component\BswM\Implementation\BswM.c	  4198    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4199  # endif
; ..\component\BswM\Implementation\BswM.c	  4200  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  4201  #endif
; ..\component\BswM\Implementation\BswM.c	  4202  
; ..\component\BswM\Implementation\BswM.c	  4203  #if (BSWM_ENABLE_SD == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4204  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  4205   *  BswM_Sd_EventHandlerCurrentState()
; ..\component\BswM\Implementation\BswM.c	  4206   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  4207  /*!
; ..\component\BswM\Implementation\BswM.c	  4208   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  4209   *
; ..\component\BswM\Implementation\BswM.c	  4210   *
; ..\component\BswM\Implementation\BswM.c	  4211   *
; ..\component\BswM\Implementation\BswM.c	  4212   *
; ..\component\BswM\Implementation\BswM.c	  4213   *
; ..\component\BswM\Implementation\BswM.c	  4214   */
; ..\component\BswM\Implementation\BswM.c	  4215  FUNC(void, BSWM_CODE) BswM_Sd_EventHandlerCurrentState(uint16 SdEventHandlerHandleId, Sd_EventHandlerCurrentStateType EventHandlerStatus)
; ..\component\BswM\Implementation\BswM.c	  4216  {
; ..\component\BswM\Implementation\BswM.c	  4217    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4218    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  4219  # if (BSWM_SDEVENTHANDLERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4220    BswM_SdEventHandlerStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  4221  # endif
; ..\component\BswM\Implementation\BswM.c	  4222    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  4223  
; ..\component\BswM\Implementation\BswM.c	  4224    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4225  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4226    /* #20 Check if partition is valid and BswM is initialized and passed parameters are in range. */
; ..\component\BswM\Implementation\BswM.c	  4227  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4228    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  4229    {
; ..\component\BswM\Implementation\BswM.c	  4230      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  4231    }
; ..\component\BswM\Implementation\BswM.c	  4232    else
; ..\component\BswM\Implementation\BswM.c	  4233  #  endif
; ..\component\BswM\Implementation\BswM.c	  4234    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  4235    {
; ..\component\BswM\Implementation\BswM.c	  4236      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  4237    }
; ..\component\BswM\Implementation\BswM.c	  4238  #  if (BSWM_MODE_CHECK == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4239    /* If type is an enumeration the following code will cause MISRA violations because the conditions will always be
; ..\component\BswM\Implementation\BswM.c	  4240     * true, the expression always be false and so the statement is unreachable */
; ..\component\BswM\Implementation\BswM.c	  4241    else if (!((EventHandlerStatus == SD_EVENT_HANDLER_RELEASED) || (EventHandlerStatus == SD_EVENT_HANDLER_REQUESTED)))
; ..\component\BswM\Implementation\BswM.c	  4242    {
; ..\component\BswM\Implementation\BswM.c	  4243      errorId = BSWM_E_REQ_MODE_OUT_OF_RANGE;
; ..\component\BswM\Implementation\BswM.c	  4244    }
; ..\component\BswM\Implementation\BswM.c	  4245  #  endif
; ..\component\BswM\Implementation\BswM.c	  4246    else
; ..\component\BswM\Implementation\BswM.c	  4247  # endif
; ..\component\BswM\Implementation\BswM.c	  4248    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4249    {
; ..\component\BswM\Implementation\BswM.c	  4250  # if (BSWM_SDEVENTHANDLERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4251      for (userHandle = 0u; userHandle < BswM_GetSizeOfSdEventHandlerState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  4252      {
; ..\component\BswM\Implementation\BswM.c	  4253        if (BswM_GetExternalIdOfSdEventHandlerMapping(userHandle, partitionIdx) == SdEventHandlerHandleId)
; ..\component\BswM\Implementation\BswM.c	  4254        {
; ..\component\BswM\Implementation\BswM.c	  4255          BswM_SetSdEventHandlerState(userHandle, EventHandlerStatus, partitionIdx); /* SBSW_BSWM_SDEVENTHANDLERSTATE */
; ..\component\BswM\Implementation\BswM.c	  4256  #  if (BSWM_IMMEDIATEUSERUSEDOFSDEVENTHANDLERMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4257          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfSdEventHandlerMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfSdEventHandlerMapping(userHandle, partitionIdx), BSWM_SD_EVENTHANDLER_CURRENT_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4258  #  endif
; ..\component\BswM\Implementation\BswM.c	  4259          break;
; ..\component\BswM\Implementation\BswM.c	  4260        }
; ..\component\BswM\Implementation\BswM.c	  4261      }
; ..\component\BswM\Implementation\BswM.c	  4262  # else
; ..\component\BswM\Implementation\BswM.c	  4263      BSWM_DUMMY_STATEMENT(SdEventHandlerHandleId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4264      BSWM_DUMMY_STATEMENT_MODE_CHECK_OFF(EventHandlerStatus); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4265  # endif
; ..\component\BswM\Implementation\BswM.c	  4266    }
; ..\component\BswM\Implementation\BswM.c	  4267    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4268    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4269  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4270    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  4271    {
; ..\component\BswM\Implementation\BswM.c	  4272      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_SD_EVENTHANDLER_CURRENT_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  4273    }
; ..\component\BswM\Implementation\BswM.c	  4274  # else
; ..\component\BswM\Implementation\BswM.c	  4275    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4276  # endif
; ..\component\BswM\Implementation\BswM.c	  4277  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\BswM\Implementation\BswM.c	  4278  #endif
; ..\component\BswM\Implementation\BswM.c	  4279  
; ..\component\BswM\Implementation\BswM.c	  4280  #if (BSWM_ENABLE_WDGM == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4281  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  4282   *  BswM_WdgM_RequestPartitionReset()
; ..\component\BswM\Implementation\BswM.c	  4283   *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  4284  /*!
; ..\component\BswM\Implementation\BswM.c	  4285   * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  4286   *
; ..\component\BswM\Implementation\BswM.c	  4287   *
; ..\component\BswM\Implementation\BswM.c	  4288   *
; ..\component\BswM\Implementation\BswM.c	  4289   *
; ..\component\BswM\Implementation\BswM.c	  4290   *
; ..\component\BswM\Implementation\BswM.c	  4291   *
; ..\component\BswM\Implementation\BswM.c	  4292   */
; ..\component\BswM\Implementation\BswM.c	  4293  FUNC(void, BSWM_CODE) BswM_WdgM_RequestPartitionReset(ApplicationType Application)
; ..\component\BswM\Implementation\BswM.c	  4294  {
; ..\component\BswM\Implementation\BswM.c	  4295    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4296    uint8 errorId = BSWM_E_NO_ERROR;
; ..\component\BswM\Implementation\BswM.c	  4297  # if (BSWM_WDGMSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4298    BswM_WdgMStateIterType userHandle;
; ..\component\BswM\Implementation\BswM.c	  4299  # endif
; ..\component\BswM\Implementation\BswM.c	  4300    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(GetApplicationID());
; ..\component\BswM\Implementation\BswM.c	  4301  
; ..\component\BswM\Implementation\BswM.c	  4302    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4303  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4304    /* #20 Check if partition is valid and BswM is initialized. */
; ..\component\BswM\Implementation\BswM.c	  4305  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4306    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  4307    {
; ..\component\BswM\Implementation\BswM.c	  4308      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  4309    }
; ..\component\BswM\Implementation\BswM.c	  4310    else
; ..\component\BswM\Implementation\BswM.c	  4311  #  endif
; ..\component\BswM\Implementation\BswM.c	  4312    if (!BswM_IsInitialized(partitionIdx))
; ..\component\BswM\Implementation\BswM.c	  4313    {
; ..\component\BswM\Implementation\BswM.c	  4314      errorId = BSWM_E_NO_INIT;
; ..\component\BswM\Implementation\BswM.c	  4315    }
; ..\component\BswM\Implementation\BswM.c	  4316    else
; ..\component\BswM\Implementation\BswM.c	  4317  # endif
; ..\component\BswM\Implementation\BswM.c	  4318    /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4319    {
; ..\component\BswM\Implementation\BswM.c	  4320  # if (BSWM_IMMEDIATEUSERUSEDOFWDGMMAPPING == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4321      for (userHandle = 0u; userHandle < BswM_GetSizeOfWdgMState(partitionIdx); userHandle++)
; ..\component\BswM\Implementation\BswM.c	  4322      {
; ..\component\BswM\Implementation\BswM.c	  4323        if (BswM_GetExternalIdOfWdgMMapping(userHandle, partitionIdx) == Application)
; ..\component\BswM\Implementation\BswM.c	  4324        {
; ..\component\BswM\Implementation\BswM.c	  4325          BswM_SetWdgMState(userHandle, (BswM_WdgMStateType)TRUE, partitionIdx); /* SBSW_BSWM_WDGMSTATE */
; ..\component\BswM\Implementation\BswM.c	  4326          BSWM_CALL_IMMEDIATE(BswM_GetImmediateUserStartIdxOfWdgMMapping(userHandle, partitionIdx), BswM_GetImmediateUserEndIdxOfWdgMMapping(userHandle, partitionIdx), BSWM_WDGM_REQUESTPARTITIONRESET_ID, partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4327          BswM_SetWdgMState(userHandle, (BswM_WdgMStateType)FALSE, partitionIdx); /* SBSW_BSWM_WDGMSTATE */
; ..\component\BswM\Implementation\BswM.c	  4328          break;
; ..\component\BswM\Implementation\BswM.c	  4329        }
; ..\component\BswM\Implementation\BswM.c	  4330      }
; ..\component\BswM\Implementation\BswM.c	  4331  # else
; ..\component\BswM\Implementation\BswM.c	  4332      BSWM_DUMMY_STATEMENT(Application); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4333  # endif
; ..\component\BswM\Implementation\BswM.c	  4334    }
; ..\component\BswM\Implementation\BswM.c	  4335    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4336    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4337  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4338    if (errorId != BSWM_E_NO_ERROR)
; ..\component\BswM\Implementation\BswM.c	  4339    {
; ..\component\BswM\Implementation\BswM.c	  4340      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_WDGM_REQUESTPARTITIONRESET_ID, errorId);
; ..\component\BswM\Implementation\BswM.c	  4341    }
; ..\component\BswM\Implementation\BswM.c	  4342  # else
; ..\component\BswM\Implementation\BswM.c	  4343    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4344  # endif
; ..\component\BswM\Implementation\BswM.c	  4345  }
; ..\component\BswM\Implementation\BswM.c	  4346  #endif
; ..\component\BswM\Implementation\BswM.c	  4347  
; ..\component\BswM\Implementation\BswM.c	  4348  #define BSWM_STOP_SEC_CODE
; ..\component\BswM\Implementation\BswM.c	  4349  /* PRQA S 5087 1 */ /* MD_MSR_MemMap */
; ..\component\BswM\Implementation\BswM.c	  4350  #include "BswM_vMemMap.h"
; ..\component\BswM\Implementation\BswM.c	  4351  
; ..\component\BswM\Implementation\BswM.c	  4352  #define BSWM_START_SEC_CODE
; ..\component\BswM\Implementation\BswM.c	  4353  /* PRQA S 5087 1 */ /* MD_MSR_MemMap */
; ..\component\BswM\Implementation\BswM.c	  4354  #include "MemMap.h"
; ..\component\BswM\Implementation\BswM.c	  4355  
; ..\component\BswM\Implementation\BswM.c	  4356  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  4357  *  BswM_MainFunction()
; ..\component\BswM\Implementation\BswM.c	  4358  *********************************************************************************************************************/
; ..\component\BswM\Implementation\BswM.c	  4359  /*!
; ..\component\BswM\Implementation\BswM.c	  4360  * Internal comment removed.
; ..\component\BswM\Implementation\BswM.c	  4361   *
; ..\component\BswM\Implementation\BswM.c	  4362   *
; ..\component\BswM\Implementation\BswM.c	  4363   *
; ..\component\BswM\Implementation\BswM.c	  4364   *
; ..\component\BswM\Implementation\BswM.c	  4365   *
; ..\component\BswM\Implementation\BswM.c	  4366   *
; ..\component\BswM\Implementation\BswM.c	  4367   *
; ..\component\BswM\Implementation\BswM.c	  4368   *
; ..\component\BswM\Implementation\BswM.c	  4369   *
; ..\component\BswM\Implementation\BswM.c	  4370   *
; ..\component\BswM\Implementation\BswM.c	  4371  */
; ..\component\BswM\Implementation\BswM.c	  4372  #if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4373  FUNC(void, BSWM_CODE) BswM_MainFunction(ApplicationType applicationId)
; ..\component\BswM\Implementation\BswM.c	  4374  #else
; ..\component\BswM\Implementation\BswM.c	  4375  FUNC(void, BSWM_CODE) BswM_MainFunction(void)
; Function BswM_MainFunction
.L129:
BswM_MainFunction:	.type	func

; ..\component\BswM\Implementation\BswM.c	  4376  #endif
; ..\component\BswM\Implementation\BswM.c	  4377  {
; ..\component\BswM\Implementation\BswM.c	  4378    /* ----- Local Variables ---------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4379    uint8 errorId = BSWM_E_NO_ERROR;
	mov	d9,#0
.L315:

; ..\component\BswM\Implementation\BswM.c	  4380  #if(BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4381    uint8 localSemaphore;
; ..\component\BswM\Implementation\BswM.c	  4382  #endif
; ..\component\BswM\Implementation\BswM.c	  4383  
; ..\component\BswM\Implementation\BswM.c	  4384    BswM_PCPartitionConfigIdxOfPartitionIdentifiersType partitionIdx = BswM_GetInternalPartitionIdx(applicationId);
; ..\component\BswM\Implementation\BswM.c	  4385  
; ..\component\BswM\Implementation\BswM.c	  4386    /* ----- Development Error Checks ------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4387  # if (BSWM_DEV_ERROR_DETECT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4388  #  if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4389    /* #20 Check if partition is valid and BswM is initialized. ( \trace SPEC-7833 ) */
; ..\component\BswM\Implementation\BswM.c	  4390    if ( partitionIdx == BSWM_INVALID_PARTITION )
; ..\component\BswM\Implementation\BswM.c	  4391    {
; ..\component\BswM\Implementation\BswM.c	  4392      errorId = BSWM_E_REQ_USER_INV_PARTITION;
; ..\component\BswM\Implementation\BswM.c	  4393    }
; ..\component\BswM\Implementation\BswM.c	  4394    else
; ..\component\BswM\Implementation\BswM.c	  4395  #  endif
; ..\component\BswM\Implementation\BswM.c	  4396    if (!BswM_IsInitialized(partitionIdx))
	mov	d10,d9
	fcall	.cocofun_1
	jne	d15,#0,.L86
.L475:

; ..\component\BswM\Implementation\BswM.c	  4397    {
; ..\component\BswM\Implementation\BswM.c	  4398      errorId = BSWM_E_NO_INIT;
	mov	d10,#1
	j	.L87
.L86:

; ..\component\BswM\Implementation\BswM.c	  4399    }
; ..\component\BswM\Implementation\BswM.c	  4400    else
; ..\component\BswM\Implementation\BswM.c	  4401  #endif
; ..\component\BswM\Implementation\BswM.c	  4402    {
; ..\component\BswM\Implementation\BswM.c	  4403      /* ----- Implementation ----------------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4404  #if(BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4405      BswM_EnterCriticalArea_0();
	call	SuspendAllInterrupts
.L476:

; ..\component\BswM\Implementation\BswM.c	  4406      localSemaphore = BswM_GetQueueSemaphore(partitionIdx);
	movh.a	a12,#@his(BswM_QueueSemaphore)
	lea	a12,[a12]@los(BswM_QueueSemaphore)
	ld.bu	d11,[a12]
.L477:

; ..\component\BswM\Implementation\BswM.c	  4407      if (BswM_GetQueueSemaphore(partitionIdx) == BSWM_REQUEST_SEMAPHORE_UNLOCKED)
	jne	d11,#0,.L88
.L478:

; ..\component\BswM\Implementation\BswM.c	  4408      {
; ..\component\BswM\Implementation\BswM.c	  4409        BswM_SetQueueSemaphore(BSWM_REQUEST_SEMAPHORE_LOCKED, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	mov	d0,#1
	st.b	[a12],d0
.L88:

; ..\component\BswM\Implementation\BswM.c	  4410      }
; ..\component\BswM\Implementation\BswM.c	  4411      BswM_LeaveCriticalArea_0();
	call	ResumeAllInterrupts
.L479:

; ..\component\BswM\Implementation\BswM.c	  4412  
; ..\component\BswM\Implementation\BswM.c	  4413      /* #31 Process pending immediate requests if semaphore was locked. */
; ..\component\BswM\Implementation\BswM.c	  4414      if (BSWM_REQUEST_SEMAPHORE_UNLOCKED == localSemaphore)
	jne	d11,#0,.L89
.L480:

; ..\component\BswM\Implementation\BswM.c	  4415      {
; ..\component\BswM\Implementation\BswM.c	  4416        BswM_ProcessQueuedRequests(partitionIdx);
	mov	d4,d9
	call	BswM_ProcessQueuedRequests
.L89:

; ..\component\BswM\Implementation\BswM.c	  4417      }
; ..\component\BswM\Implementation\BswM.c	  4418  #endif
; ..\component\BswM\Implementation\BswM.c	  4419  
; ..\component\BswM\Implementation\BswM.c	  4420  #if(BSWM_SWCMODEREQUESTUPDATEFCT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4421  # if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4422      if (BswM_HasSwcModeRequestUpdateFct(partitionIdx)) /* PRQA S 2741 */ /* MD_BSWM_2741 */ /* COV_BSWM_ALL_TRUE TX */
; ..\component\BswM\Implementation\BswM.c	  4423  # endif
; ..\component\BswM\Implementation\BswM.c	  4424      {
; ..\component\BswM\Implementation\BswM.c	  4425        BswM_GetSwcModeRequestUpdateFct(0u, partitionIdx)(); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	movh.a	a15,#@his(BswM_SwcModeRequestUpdateFct)
	ld.a	a15,[a15]@los(BswM_SwcModeRequestUpdateFct)
.L481:
	calli	a15
.L482:

; ..\component\BswM\Implementation\BswM.c	  4426      }
; ..\component\BswM\Implementation\BswM.c	  4427  #endif
; ..\component\BswM\Implementation\BswM.c	  4428  
; ..\component\BswM\Implementation\BswM.c	  4429  #if((BSWM_DEFERREDRULES == STD_ON) || (BSWM_TIMERSTATE == STD_ON))
; ..\component\BswM\Implementation\BswM.c	  4430      BswM_EnterCriticalArea_0();
	call	SuspendAllInterrupts
.L248:
	movh.a	a15,#@his(BswM_TimerValue)
	lea	a15,[a15]@los(BswM_TimerValue)
	ld.w	d15,[a15]
.L483:
	movh.a	a2,#@his(BswM_TimerState)
	lea	a2,[a2]@los(BswM_TimerState)
	ld.bu	d0,[a2]
.L484:

; ..\component\BswM\Implementation\BswM.c	  1012      if(BswM_GetTimerValue(timerIndex, partitionIdx) > 0u)      (inlined)
	jeq	d15,#0,.L90
.L485:
	add	d15,#-1
.L486:
	cmovn	d0,d15,#2

; ..\component\BswM\Implementation\BswM.c	  1012      if(BswM_GetTimerValue(timerIndex, partitionIdx) > 0u)      (inlined)
.L90:
	st.b	[a2],d0
	st.w	[a15],d15
.L487:
	mov	d8,#0
	movh.a	a13,#@his(BswM_DeferredRules)
.L316:
	lea	a13,[a13]@los(BswM_DeferredRules)
	movh.a	a14,#@his(BswM_Rules)
	lea	a14,[a14]@los(BswM_Rules)
.L488:

; ..\component\BswM\Implementation\BswM.c	  1092    for (ruleIndex = 0u; ruleIndex < BswM_GetSizeOfDeferredRules(partitionIdx); ruleIndex++)      (inlined)
	mov.a	a15,#6
.L92:
	ld.bu	d15,[a13+]
.L489:
	mov	d4,d9
.L490:
	addsc.a	a2,a14,d15,#3
	ld.a	a2,[a2]4
.L491:
	calli	a2
.L318:

; ..\component\BswM\Implementation\BswM.c	  1099      if ((actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx)) && (BswM_GetActionListQueue(actionListIndex, partitionIdx) == BSWM_ACTIONLIST_IDLE)) /* COV_BSWM_ACTIONLISTIDLE */      (inlined)
	jge.u	d2,#12,.L93
.L492:
	movh.a	a2,#@his(BswM_ActionListQueue)
	lea	a2,[a2]@los(BswM_ActionListQueue)
	addsc.a	a2,a2,d2,#0
	ld.bu	d15,[a2]
.L493:

; ..\component\BswM\Implementation\BswM.c	  1099      if ((actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx)) && (BswM_GetActionListQueue(actionListIndex, partitionIdx) == BSWM_ACTIONLIST_IDLE)) /* COV_BSWM_ACTIONLISTIDLE */      (inlined)
	jne	d15,#0,.L94
.L494:
	mov	d8,#1
	st.b	[a2],d8

; ..\component\BswM\Implementation\BswM.c	  1099      if ((actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx)) && (BswM_GetActionListQueue(actionListIndex, partitionIdx) == BSWM_ACTIONLIST_IDLE)) /* COV_BSWM_ACTIONLISTIDLE */      (inlined)
.L94:
.L93:

; ..\component\BswM\Implementation\BswM.c	  1092    for (ruleIndex = 0u; ruleIndex < BswM_GetSizeOfDeferredRules(partitionIdx); ruleIndex++)      (inlined)
	loop	a15,.L92
.L495:

; ..\component\BswM\Implementation\BswM.c	  1108    if(executeActionLists == TRUE)      (inlined)
	jeq	d8,#0,.L95
.L260:
	mov	d8,#255
	movh.a	a15,#@his(BswM_ActionListQueue)
.L317:
	movh.a	a13,#@his(BswM_ActionLists)
.L496:
	lea	a15,[a15]@los(BswM_ActionListQueue)
.L497:
	lea	a13,[a13]@los(BswM_ActionLists)
.L498:

; ..\component\BswM\Implementation\BswM.c	  1050    for (actionListIndex = 0u; actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx); actionListIndex++)      (inlined)
	mov.a	a14,#11
.L96:
	ld.bu	d15,[a15]
.L499:

; ..\component\BswM\Implementation\BswM.c	  1054      if (BswM_GetActionListQueue(actionListIndex, partitionIdx) == executionLevel)      (inlined)
	jne	d15,#1,.L97
.L500:
	st.b	[a15],d8
.L501:
	call	ResumeAllInterrupts
.L502:
	ld.a	a2,[a13]
.L503:
	mov	d4,d9
	calli	a2
.L504:
	call	SuspendAllInterrupts
.L505:
	st.b	[a15],d9

; ..\component\BswM\Implementation\BswM.c	  1054      if (BswM_GetActionListQueue(actionListIndex, partitionIdx) == executionLevel)      (inlined)
.L97:
	add.a	a15,#1
.L506:
	add.a	a13,#4

; ..\component\BswM\Implementation\BswM.c	  1050    for (actionListIndex = 0u; actionListIndex < BswM_GetSizeOfActionListQueue(partitionIdx); actionListIndex++)      (inlined)
	loop	a14,.L96

; ..\component\BswM\Implementation\BswM.c	  1108    if(executeActionLists == TRUE)      (inlined)
.L95:

; ..\component\BswM\Implementation\BswM.c	  4431  # if (BSWM_TIMERSTATE == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4432      /* #33 Decrease all configured timers. */
; ..\component\BswM\Implementation\BswM.c	  4433      BswM_DecreaseTimer(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4434  # endif /* (BSWM_TIMERSTATE == STD_ON) */
; ..\component\BswM\Implementation\BswM.c	  4435  
; ..\component\BswM\Implementation\BswM.c	  4436  # if(BSWM_DEFERREDRULES == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4437      /* #34 Arbitrate and execute all rules which have at least one deferred port (BswM_ExecuteDeferredRules). */
; ..\component\BswM\Implementation\BswM.c	  4438      BswM_ExecuteDeferredRules(partitionIdx);
; ..\component\BswM\Implementation\BswM.c	  4439  # endif /* (BSWM_DEFERREDRULES == STD_ON) */
; ..\component\BswM\Implementation\BswM.c	  4440      BswM_LeaveCriticalArea_0();
	call	ResumeAllInterrupts
.L507:

; ..\component\BswM\Implementation\BswM.c	  4441  #endif /* ((BSWM_DEFERREDRULES == STD_ON) || (BSWM_TIMERSTATE == STD_ON)) */
; ..\component\BswM\Implementation\BswM.c	  4442  
; ..\component\BswM\Implementation\BswM.c	  4443  #if(BSWM_IMMEDIATEUSER == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4444      if (BSWM_REQUEST_SEMAPHORE_UNLOCKED == localSemaphore)
	jne	d11,#0,.L98
.L508:

; ..\component\BswM\Implementation\BswM.c	  4445      {
; ..\component\BswM\Implementation\BswM.c	  4446        /* Immediately process other pending immediate requests */
; ..\component\BswM\Implementation\BswM.c	  4447        BswM_ProcessQueuedRequests(partitionIdx);
	mov	d4,d9
	call	BswM_ProcessQueuedRequests
.L509:

; ..\component\BswM\Implementation\BswM.c	  4448        /* Unlock semaphore AFTER processing of the queue */
; ..\component\BswM\Implementation\BswM.c	  4449        BswM_SetQueueSemaphore(BSWM_REQUEST_SEMAPHORE_UNLOCKED, partitionIdx); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	st.b	[a12],d9
.L98:

; ..\component\BswM\Implementation\BswM.c	  4450      }
; ..\component\BswM\Implementation\BswM.c	  4451  #endif
; ..\component\BswM\Implementation\BswM.c	  4452  #if(BSWM_MODENOTIFICATIONFCT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4453  # if (BSWM_MULTIPARTITION == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4454      if (BswM_HasModeNotificationFct(partitionIdx)) /* PRQA S 2741 */ /* MD_BSWM_2741 */
; ..\component\BswM\Implementation\BswM.c	  4455  # endif
; ..\component\BswM\Implementation\BswM.c	  4456      {
; ..\component\BswM\Implementation\BswM.c	  4457        BswM_GetModeNotificationFct(0u, partitionIdx)(); /* SBSW_BSWM_PARTITIONINDEXACCESS */
	movh.a	a15,#@his(BswM_ModeNotificationFct)
	ld.a	a15,[a15]@los(BswM_ModeNotificationFct)
.L510:
	calli	a15
.L87:

; ..\component\BswM\Implementation\BswM.c	  4458      }
; ..\component\BswM\Implementation\BswM.c	  4459  #endif
; ..\component\BswM\Implementation\BswM.c	  4460  
; ..\component\BswM\Implementation\BswM.c	  4461  #if(BSWM_IPDU_GROUP_CONTROL == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4462      BswM_ExecuteIpduGroupControl();
; ..\component\BswM\Implementation\BswM.c	  4463  #endif
; ..\component\BswM\Implementation\BswM.c	  4464    }
; ..\component\BswM\Implementation\BswM.c	  4465  
; ..\component\BswM\Implementation\BswM.c	  4466    /* ----- Development Error Report --------------------------------------- */
; ..\component\BswM\Implementation\BswM.c	  4467  # if (BSWM_DEV_ERROR_REPORT == STD_ON)
; ..\component\BswM\Implementation\BswM.c	  4468    if (errorId != BSWM_E_NO_ERROR)
	jeq	d10,#0,.L99
.L511:

; ..\component\BswM\Implementation\BswM.c	  4469    {
; ..\component\BswM\Implementation\BswM.c	  4470      (void)Det_ReportError(BSWM_MODULE_ID, BSWM_INSTANCE_ID_DET, BSWM_MAINFUNCTION_ID, errorId);
	mov	d7,#1
.L512:
	mov	d4,#42
.L513:
	mov	d6,#3
.L514:
	mov	d5,d9
	j	Det_ReportError
.L99:

; ..\component\BswM\Implementation\BswM.c	  4471    }
; ..\component\BswM\Implementation\BswM.c	  4472  # else
; ..\component\BswM\Implementation\BswM.c	  4473    BSWM_DUMMY_STATEMENT(errorId); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4474  # endif
; ..\component\BswM\Implementation\BswM.c	  4475  
; ..\component\BswM\Implementation\BswM.c	  4476    BSWM_DUMMY_STATEMENT(partitionIdx); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\BswM\Implementation\BswM.c	  4477  }
	ret
.L245:
	
__BswM_MainFunction_function_end:
	.size	BswM_MainFunction,__BswM_MainFunction_function_end-BswM_MainFunction
.L188:
	; End of function
	
	.calls	'BswM_ProcessQueuedRequests','SuspendAllInterrupts'
	.calls	'BswM_ProcessQueuedRequests','__INDIRECT__'
	.calls	'BswM_ProcessQueuedRequests','ResumeAllInterrupts'
	.calls	'BswM_ImmediateModeRequest','SuspendAllInterrupts'
	.calls	'BswM_ImmediateModeRequest','ResumeAllInterrupts'
	.calls	'BswM_ImmediateModeRequest','Det_ReportError'
	.calls	'BswM_ImmediateModeRequest','BswM_ProcessQueuedRequests'
	.calls	'BswM_Init','__INDIRECT__'
	.calls	'BswM_Init','BswM_ProcessQueuedRequests'
	.calls	'BswM_Init','Det_ReportError'
	.calls	'BswM_Deinit','SuspendAllInterrupts'
	.calls	'BswM_Deinit','ResumeAllInterrupts'
	.calls	'BswM_RequestMode','BswM_ImmediateModeRequest'
	.calls	'BswM_RequestMode','Det_ReportError'
	.calls	'BswM_ComM_CurrentMode','Det_ReportError'
	.calls	'BswM_CanSM_CurrentState','Det_ReportError'
	.calls	'BswM_EcuM_CurrentState','Det_ReportError'
	.calls	'BswM_EcuM_CurrentWakeup','Det_ReportError'
	.calls	'BswM_EcuM_RequestedState','Det_ReportError'
	.calls	'BswM_MainFunction','SuspendAllInterrupts'
	.calls	'BswM_MainFunction','ResumeAllInterrupts'
	.calls	'BswM_MainFunction','BswM_ProcessQueuedRequests'
	.calls	'BswM_MainFunction','__INDIRECT__'
	.calls	'BswM_MainFunction','Det_ReportError'
	.calls	'BswM_RequestMode','.cocofun_1'
	.calls	'BswM_RequestMode','.cocofun_2'
	.calls	'BswM_ComM_CurrentMode','.cocofun_1'
	.calls	'BswM_ComM_CurrentMode','.cocofun_2'
	.calls	'BswM_CanSM_CurrentState','.cocofun_1'
	.calls	'BswM_CanSM_CurrentState','.cocofun_2'
	.calls	'BswM_EcuM_CurrentState','.cocofun_1'
	.calls	'BswM_EcuM_CurrentState','.cocofun_2'
	.calls	'BswM_EcuM_CurrentWakeup','.cocofun_1'
	.calls	'BswM_EcuM_CurrentWakeup','.cocofun_2'
	.calls	'BswM_EcuM_RequestedState','.cocofun_1'
	.calls	'BswM_EcuM_RequestedState','.cocofun_2'
	.calls	'BswM_MainFunction','.cocofun_1'
	.calls	'BswM_ProcessQueuedRequests','',0
	.calls	'BswM_ImmediateModeRequest','',0
	.calls	'BswM_InitMemory','',0
	.calls	'BswM_PreInit','',0
	.calls	'BswM_Init','',0
	.calls	'BswM_Deinit','',0
	.calls	'BswM_RequestMode','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.calls	'BswM_ComM_CurrentMode','',0
	.calls	'BswM_CanSM_CurrentState','',0
	.calls	'BswM_EcuM_CurrentState','',0
	.calls	'BswM_EcuM_CurrentWakeup','',0
	.calls	'BswM_EcuM_RequestedState','',0
	.extern	Det_ReportError
	.extern	BswM_PreInitialized
	.extern	SuspendAllInterrupts
	.extern	ResumeAllInterrupts
	.extern	BswM_ActionLists
	.extern	BswM_DeferredRules
	.extern	BswM_InitGenVarAndInitAL
	.extern	BswM_ModeNotificationFct
	.extern	BswM_Rules
	.extern	BswM_RulesInd
	.extern	BswM_SwcModeRequestUpdateFct
	.extern	BswM_ActionListQueue
	.extern	BswM_GenericState
	.extern	BswM_Initialized
	.extern	BswM_ModeRequestQueue
	.extern	BswM_QueueSemaphore
	.extern	BswM_QueueWritten
	.extern	BswM_RuleStates
	.extern	BswM_TimerState
	.extern	BswM_TimerValue
	.extern	__INDIRECT__
	.calls	'BswM_MainFunction','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L131:
	.word	38228
	.half	3
	.word	.L132
	.byte	4
.L130:
	.byte	1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L133
.L210:
	.byte	2
	.byte	'unsigned char',0,1,8
.L285:
	.byte	3
	.byte	'BswM_ReleaseQueue',0,3,1,242,3,41,1,1
.L287:
	.byte	4
	.byte	'partitionIdx',0,1,242,3,111
	.word	133
.L289:
	.byte	5,0
.L247:
	.byte	3
	.byte	'BswM_DecreaseTimer',0,3,1,236,7,41,1,1
.L249:
	.byte	4
	.byte	'partitionIdx',0,1,236,7,112
	.word	133
.L251:
	.byte	5,0
.L259:
	.byte	3
	.byte	'BswM_ExecuteActionLists',0,3,1,143,8,41,1,1
.L261:
	.byte	4
	.byte	'executionLevel',0,1,143,8,71
	.word	133
.L263:
	.byte	4
	.byte	'partitionIdx',0,1,143,8,139,1
	.word	133
.L265:
	.byte	5,0
.L252:
	.byte	3
	.byte	'BswM_ExecuteDeferredRules',0,3,1,188,8,41,1,1
.L253:
	.byte	4
	.byte	'partitionIdx',0,1,188,8,119
	.word	133
.L255:
	.byte	6,5,0,0,2
	.byte	'int',0,4,5,7
	.word	392
	.byte	8
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,9
	.word	399
	.byte	0,2
	.byte	'unsigned int',0,4,7,10
	.word	441
	.byte	11
	.word	441
	.byte	12
	.byte	'__cmpswapw',0
	.word	457
	.byte	1,1,1,1,13
	.byte	'p',0
	.word	462
	.byte	13
	.byte	'value',0
	.word	441
	.byte	13
	.byte	'compare',0
	.word	441
	.byte	0
.L240:
	.byte	2
	.byte	'unsigned short int',0,2,7,14
	.byte	'Det_ReportError',0,2,154,2,32
	.word	133
	.byte	1,1,1,1,4
	.byte	'ModuleId',0,2,154,2,56
	.word	519
	.byte	4
	.byte	'InstanceId',0,2,154,2,72
	.word	133
	.byte	4
	.byte	'ApiId',0,2,154,2,90
	.word	133
	.byte	4
	.byte	'ErrorId',0,2,154,2,103
	.word	133
	.byte	0
.L222:
	.byte	2
	.byte	'unsigned long int',0,4,7,15
	.byte	'sBswM_PCConfigType',0,3,201,9,16,1,16
	.byte	'BswM_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,7
	.word	662
.L232:
	.byte	11
	.word	720
	.byte	17
	.byte	'SuspendAllInterrupts',0,4,222,10,21,1,1,1,1,17
	.byte	'ResumeAllInterrupts',0,4,241,10,21,1,1,1,1,18
	.word	150
	.byte	19
	.word	176
	.byte	5,0,18
	.word	200
	.byte	19
	.word	227
	.byte	5,0,18
	.word	251
	.byte	19
	.word	283
	.byte	19
	.word	307
	.byte	5,0,18
	.word	332
	.byte	19
	.word	366
	.byte	6,20
	.word	251
	.byte	19
	.word	283
	.byte	19
	.word	307
	.byte	21
	.word	330
	.byte	0,5,0,0,22
	.byte	'__INDIRECT__',0,1,1,1,1,1,1,23,1,11
	.word	885
	.byte	24
	.byte	'__codeptr',0,1,1,1
	.word	887
	.byte	24
	.byte	'boolean',0,5,101,31
	.word	133
	.byte	2
	.byte	'char',0,1,6,24
	.byte	'sint8',0,5,103,31
	.word	926
	.byte	24
	.byte	'uint8',0,5,104,31
	.word	133
	.byte	2
	.byte	'short int',0,2,5,24
	.byte	'sint16',0,5,105,31
	.word	962
	.byte	24
	.byte	'uint16',0,5,106,31
	.word	519
	.byte	2
	.byte	'long int',0,4,5,24
	.byte	'sint32',0,5,107,31
	.word	1005
	.byte	24
	.byte	'uint32',0,5,108,31
	.word	641
	.byte	24
	.byte	'uint8_least',0,5,111,31
	.word	133
	.byte	24
	.byte	'uint32_least',0,5,115,31
	.word	641
	.byte	2
	.byte	'unsigned long long int',0,8,7,24
	.byte	'uint64',0,5,121,30
	.word	1088
	.byte	24
	.byte	'StatusType',0,6,127,23
	.word	133
	.byte	24
	.byte	'Std_ReturnType',0,6,132,1,15
	.word	133
	.byte	25,6,134,1,9,8,16
	.byte	'vendorID',0
	.word	519
	.byte	2,2,35,0,16
	.byte	'moduleID',0
	.word	519
	.byte	2,2,35,2,16
	.byte	'sw_major_version',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'sw_minor_version',0
	.word	133
	.byte	1,2,35,5,16
	.byte	'sw_patch_version',0
	.word	133
	.byte	1,2,35,6,0,24
	.byte	'Std_VersionInfoType',0,6,141,1,3
	.word	1172
	.byte	24
	.byte	'PduIdType',0,7,63,15
	.word	133
	.byte	24
	.byte	'PduLengthType',0,7,65,15
	.word	133
	.byte	11
	.word	133
	.byte	24
	.byte	'SduDataPtrType',0,8,196,1,54
	.word	1362
	.byte	25,8,197,1,9,8,16
	.byte	'SduDataPtr',0
	.word	1367
	.byte	4,2,35,0,16
	.byte	'SduLength',0
	.word	133
	.byte	1,2,35,4,0,24
	.byte	'PduInfoType',0,8,201,1,3
	.word	1391
	.byte	11
	.word	133
	.byte	26,8,203,1,9,1,27
	.byte	'BUFREQ_OK',0,0,27
	.byte	'BUFREQ_E_NOT_OK',0,1,27
	.byte	'BUFREQ_E_BUSY',0,2,27
	.byte	'BUFREQ_E_OVFL',0,3,0,24
	.byte	'BufReq_ReturnType',0,8,209,1,3
	.word	1463
	.byte	24
	.byte	'NetworkHandleType',0,8,215,1,22
	.word	133
	.byte	26,8,219,1,9,1,27
	.byte	'TP_DATACONF',0,0,27
	.byte	'TP_DATARETRY',0,1,27
	.byte	'TP_CONFPENDING',0,2,0,24
	.byte	'TpDataStateType',0,8,226,1,3
	.word	1586
	.byte	15
	.byte	'sDet_PCConfigType',0,9,238,1,16,1,16
	.byte	'Det_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Det_PCConfigType',0,9,241,1,3
	.word	1664
	.byte	24
	.byte	'ComM_InhibitionStatusType',0,10,37,15
	.word	133
	.byte	24
	.byte	'BswM_ESH_Mode',0,10,52,15
	.word	133
	.byte	24
	.byte	'BswM_ESH_RunRequest',0,10,55,15
	.word	133
	.byte	24
	.byte	'ComM_ModeType',0,10,58,15
	.word	133
	.byte	24
	.byte	'EcuM_ModeType',0,10,64,15
	.word	133
	.byte	24
	.byte	'EcuM_StateType',0,10,70,15
	.word	133
	.byte	24
	.byte	'ComM_PncUserOfUserType',0,11,136,4,17
	.word	133
	.byte	24
	.byte	'ComM_UserReqFullComType',0,11,160,4,15
	.word	133
	.byte	15
	.byte	'sComM_ChannelType',0,11,176,4,16,1,16
	.byte	'ComM_ChannelNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'ComM_ChannelType',0,11,179,4,3
	.word	1962
	.byte	15
	.byte	'sComM_ChannelPbType',0,11,182,4,16,1,16
	.byte	'ComM_ChannelPbNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'ComM_ChannelPbType',0,11,185,4,3
	.word	2044
	.byte	15
	.byte	'sComM_UserType',0,11,188,4,16,1,16
	.byte	'PncUserOfUser',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'ComM_UserType',0,11,191,4,3
	.word	2132
	.byte	15
	.byte	'sComM_UserByteMaskType',0,11,194,4,16,1,16
	.byte	'ComM_UserByteMaskNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'ComM_UserByteMaskType',0,11,197,4,3
	.word	2200
	.byte	15
	.byte	'sComM_PCConfigType',0,11,233,4,16,1,16
	.byte	'ComM_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'ComM_PCConfigType',0,11,236,4,3
	.word	2297
	.byte	24
	.byte	'CanSM_BswMCurrentStateType',0,12,65,15
	.word	133
	.byte	24
	.byte	'EcuM_WakeupSourceType',0,13,58,17
	.word	641
	.byte	24
	.byte	'EcuM_WakeupStateType',0,13,107,15
	.word	133
	.byte	24
	.byte	'EcuM_RunStatusType',0,13,126,15
	.word	133
	.byte	28,1,1,11
	.word	2503
	.byte	24
	.byte	'EcuM_DriverFuncType',0,14,201,2,9
	.word	2506
	.byte	24
	.byte	'EcuM_DefaultAppModeType',0,14,237,2,16
	.word	641
	.byte	24
	.byte	'EcuM_NormalMcuModeType',0,14,255,2,16
	.word	641
	.byte	24
	.byte	'EcuM_ChannelOfWakeupSourceListType',0,14,136,3,15
	.word	133
	.byte	15
	.byte	'sEcuM_DriverInitOneType',0,14,152,3,16,4,16
	.byte	'FunctionOfDriverInitOne',0
	.word	2511
	.byte	4,2,35,0,0,24
	.byte	'EcuM_DriverInitOneType',0,14,155,3,3
	.word	2649
	.byte	11
	.word	2503
	.byte	15
	.byte	'sEcuM_WakeupSourceListType',0,14,158,3,16,1,16
	.byte	'ChannelOfWakeupSourceList',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'EcuM_WakeupSourceListType',0,14,161,3,3
	.word	2750
	.byte	15
	.byte	'sEcuM_PCConfigType',0,14,200,3,16,1,16
	.byte	'EcuM_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'EcuM_PCConfigType',0,14,203,3,3
	.word	2854
	.byte	24
	.byte	'BswM_ActionListsIterType',0,3,139,6,21
	.word	133
	.byte	24
	.byte	'BswM_ImmediateUserIterType',0,3,151,6,21
	.word	133
	.byte	24
	.byte	'BswM_ActionListQueueType',0,3,208,6,15
	.word	133
	.byte	24
	.byte	'BswM_RulesIdxOfDeferredRulesType',0,3,211,6,15
	.word	133
	.byte	24
	.byte	'BswM_ForcedActionListPriorityType',0,3,214,6,15
	.word	133
	.byte	24
	.byte	'BswM_InitializedType',0,3,244,6,17
	.word	133
	.byte	24
	.byte	'BswM_ModeRequestQueueType',0,3,247,6,15
	.word	133
	.byte	24
	.byte	'BswM_PCPartitionConfigIdxOfPartitionIdentifiersType',0,3,250,6,15
	.word	133
	.byte	24
	.byte	'BswM_PartitionSNVOfPartitionIdentifiersType',0,3,253,6,16
	.word	641
	.byte	24
	.byte	'BswM_QueueSemaphoreType',0,3,128,7,15
	.word	133
	.byte	24
	.byte	'BswM_QueueWrittenType',0,3,131,7,17
	.word	133
	.byte	24
	.byte	'BswM_RuleStatesType',0,3,134,7,15
	.word	133
	.byte	24
	.byte	'BswM_IdOfRulesType',0,3,137,7,15
	.word	133
	.byte	24
	.byte	'BswM_RuleStatesIdxOfRulesType',0,3,143,7,15
	.word	133
	.byte	24
	.byte	'BswM_RulesIndType',0,3,146,7,15
	.word	133
	.byte	24
	.byte	'BswM_SizeOfImmediateUserType',0,3,164,7,15
	.word	133
	.byte	24
	.byte	'BswM_TimerStateType',0,3,197,7,15
	.word	133
	.byte	24
	.byte	'BswM_TimerValueType',0,3,200,7,16
	.word	641
	.byte	24
	.byte	'BswM_UserType',0,3,212,7,16
	.word	519
	.byte	24
	.byte	'BswM_ModeType',0,3,213,7,16
	.word	519
	.byte	24
	.byte	'BswM_HandleType',0,3,214,7,15
	.word	133
	.byte	29,1,1,9
	.word	133
	.byte	0,11
	.word	3661
	.byte	24
	.byte	'BswM_InitGenVarAndInitALType',0,3,215,7,9
	.word	3670
	.byte	30
	.word	133
	.byte	1,1,9
	.word	133
	.byte	0,11
	.word	3713
	.byte	24
	.byte	'BswM_RuleTableFctPtrType',0,3,216,7,9
	.word	3726
	.byte	11
	.word	3713
	.byte	24
	.byte	'BswM_ActionListFuncType',0,3,217,7,9
	.word	3765
	.byte	24
	.byte	'BswM_PartitionFunctionType',0,3,219,7,9
	.word	2506
	.byte	15
	.byte	'sBswM_ActionListsType',0,3,232,7,16,4,16
	.byte	'FctPtrOfActionLists',0
	.word	3770
	.byte	4,2,35,0,0,24
	.byte	'BswM_ActionListsType',0,3,235,7,3
	.word	3839
	.byte	11
	.word	3713
	.byte	15
	.byte	'sBswM_DeferredRulesType',0,3,238,7,16,1,16
	.byte	'RulesIdxOfDeferredRules',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'BswM_DeferredRulesType',0,3,241,7,3
	.word	3932
	.byte	15
	.byte	'sBswM_GenericMappingType',0,3,244,7,16,1,16
	.byte	'BswM_GenericMappingNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'BswM_GenericMappingType',0,3,247,7,3
	.word	4028
	.byte	15
	.byte	'sBswM_ImmediateUserType',0,3,250,7,16,1,16
	.byte	'BswM_ImmediateUserNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'BswM_ImmediateUserType',0,3,253,7,3
	.word	4131
	.byte	15
	.byte	'sBswM_PartitionIdentifiersType',0,3,128,8,16,6,16
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'PCPartitionConfigIdxOfPartitionIdentifiers',0
	.word	133
	.byte	1,2,35,4,0,24
	.byte	'BswM_PartitionIdentifiersType',0,3,132,8,3
	.word	4231
	.byte	15
	.byte	'sBswM_RulesType',0,3,135,8,16,8,16
	.byte	'IdOfRules',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'RuleStatesIdxOfRules',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'FctPtrOfRules',0
	.word	3731
	.byte	4,2,35,4,0,24
	.byte	'BswM_RulesType',0,3,140,8,3
	.word	4404
	.byte	11
	.word	3713
	.byte	15
	.byte	'BswM_ActionListQueueStructSTag',0,3,152,8,16,12,16
	.byte	'AL_ESH_AL_RunToPostRun',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'AL_ESH_AL_WaitForNvMToShutdown',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'AL_ESH_AL_WakeupToPrep',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'AL_ESH_AL_WaitForNvMWakeup',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'AL_ESH_AL_WakeupToRun',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'AL_ESH_AL_InitToWakeup',0
	.word	133
	.byte	1,2,35,5,16
	.byte	'AL_ESH_AL_PostRunToPrepShutdown',0
	.word	133
	.byte	1,2,35,6,16
	.byte	'AL_ESH_AL_ESH_PostRunToPrepCheck',0
	.word	133
	.byte	1,2,35,7,16
	.byte	'AL_ESH_AL_PostRunToRun',0
	.word	133
	.byte	1,2,35,8,16
	.byte	'AL_ESH_AL_ExitPostRun',0
	.word	133
	.byte	1,2,35,9,16
	.byte	'AL_ESH_AL_PrepShutdownToWaitForNvM',0
	.word	133
	.byte	1,2,35,10,16
	.byte	'AL_INIT_AL_Initialize',0
	.word	133
	.byte	1,2,35,11,0,24
	.byte	'BswM_ActionListQueueStructSType',0,3,166,8,3
	.word	4528
	.byte	15
	.byte	'BswM_RuleStatesStructSTag',0,3,169,8,16,12,16
	.byte	'R_ESH_RunToPostRun',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'R_ESH_WaitToShutdown',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'R_ESH_WakeupToPrep',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'R_ESH_WaitToWakeup',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'R_ESH_WakeupToRun',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'R_ESH_InitToWakeup',0
	.word	133
	.byte	1,2,35,5,16
	.byte	'R_ESH_PostRunToPrepNested',0
	.word	133
	.byte	1,2,35,6,16
	.byte	'R_ESH_PostRunNested',0
	.word	133
	.byte	1,2,35,7,16
	.byte	'R_ESH_PostRun',0
	.word	133
	.byte	1,2,35,8,16
	.byte	'R_ESH_PrepToWait',0
	.word	133
	.byte	1,2,35,9,0,24
	.byte	'BswM_RuleStatesStructSType',0,3,181,8,3
	.word	5031
	.byte	15
	.byte	'BswM_TimerStateStructSTag',0,3,184,8,16,1,16
	.byte	'MRP_ESH_SelfRunRequestTimer',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'BswM_TimerStateStructSType',0,3,187,8,3
	.word	5382
	.byte	15
	.byte	'BswM_TimerValueStructSTag',0,3,190,8,16,4,16
	.byte	'MRP_ESH_SelfRunRequestTimer',0
	.word	641
	.byte	4,2,35,0,0,24
	.byte	'BswM_TimerValueStructSType',0,3,193,8,3
	.word	5488
	.byte	31,12
	.word	133
	.byte	32,11,0,33
	.byte	'BswM_ActionListQueueUTag',0,3,205,8,15,12,16
	.byte	'raw',0
	.word	5594
	.byte	12,2,35,0,16
	.byte	'str',0
	.word	4528
	.byte	12,2,35,0,0,24
	.byte	'BswM_ActionListQueueUType',0,3,209,8,3
	.word	5603
	.byte	31,10
	.word	133
	.byte	32,9,0,33
	.byte	'BswM_RuleStatesUTag',0,3,212,8,15,12,16
	.byte	'raw',0
	.word	5696
	.byte	10,2,35,0,16
	.byte	'str',0
	.word	5031
	.byte	12,2,35,0,0,24
	.byte	'BswM_RuleStatesUType',0,3,216,8,3
	.word	5705
	.byte	31,1
	.word	133
	.byte	32,0,0,33
	.byte	'BswM_TimerStateUTag',0,3,219,8,15,1,16
	.byte	'raw',0
	.word	5788
	.byte	1,2,35,0,16
	.byte	'str',0
	.word	5382
	.byte	1,2,35,0,0,24
	.byte	'BswM_TimerStateUType',0,3,223,8,3
	.word	5797
	.byte	31,4
	.word	641
	.byte	32,0,0,33
	.byte	'BswM_TimerValueUTag',0,3,226,8,15,4,16
	.byte	'raw',0
	.word	5880
	.byte	4,2,35,0,16
	.byte	'str',0
	.word	5488
	.byte	4,2,35,0,0,24
	.byte	'BswM_TimerValueUType',0,3,230,8,3
	.word	5889
	.byte	15
	.byte	'sBswM_PCPartitionConfigType',0,3,183,9,16,1,16
	.byte	'BswM_PCPartitionConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'BswM_PCPartitionConfigType',0,3,186,9,3
	.word	5972
	.byte	24
	.byte	'BswM_PCConfigType',0,3,204,9,3
	.word	662
	.byte	24
	.byte	'BswM_ConfigType',0,3,206,9,27
	.word	662
	.byte	34
	.byte	'BswM_PreInitialized',0,3,132,10,38
	.word	133
	.byte	1,1,24
	.byte	'Can_IdType',0,15,52,30
	.word	519
	.byte	24
	.byte	'Can_HwHandleType',0,15,55,29
	.word	133
	.byte	24
	.byte	'Can_SduPtrType',0,15,58,45
	.word	1362
	.byte	15
	.byte	'Can_PduTypeTag',0,15,61,16,12,16
	.byte	'id',0
	.word	519
	.byte	2,2,35,0,16
	.byte	'length',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'sdu',0
	.word	6211
	.byte	4,2,35,4,16
	.byte	'swPduHandle',0
	.word	133
	.byte	1,2,35,8,0,24
	.byte	'Can_PduType',0,15,67,3
	.word	6234
	.byte	11
	.word	133
	.byte	26,15,77,9,1,27
	.byte	'CAN_CS_UNINIT',0,0,27
	.byte	'CAN_CS_STARTED',0,1,27
	.byte	'CAN_CS_STOPPED',0,2,27
	.byte	'CAN_CS_SLEEP',0,3,0,24
	.byte	'Can_ControllerStateType',0,15,82,3
	.word	6342
	.byte	26,15,84,9,1,27
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,27
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,27
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,24
	.byte	'Can_ErrorStateType',0,15,88,3
	.word	6445
	.byte	24
	.byte	'tCanLLCanIntOld',0,16,161,3,37
	.word	641
	.byte	24
	.byte	'Can_OsIsrType',0,16,167,3,15
	.word	133
	.byte	24
	.byte	'Can_ExternalTickType',0,16,180,3,16
	.word	641
	.byte	31,32
	.word	641
	.byte	32,7,0,24
	.byte	'Can_LoopTimeout_dim_type',0,16,183,3,44
	.word	6629
	.byte	24
	.byte	'Can_ControllerConfigIterType',0,16,192,13,21
	.word	133
	.byte	24
	.byte	'Can_PduOfActiveSendObjectType',0,16,148,14,19
	.word	133
	.byte	24
	.byte	'Can_StateOfActiveSendObjectType',0,16,151,14,16
	.word	519
	.byte	24
	.byte	'Can_BTPType',0,16,154,14,16
	.word	641
	.byte	24
	.byte	'Can_RXBCOfBufferConfigType',0,16,160,14,15
	.word	133
	.byte	24
	.byte	'Can_RXF0COfBufferConfigType',0,16,163,14,16
	.word	641
	.byte	24
	.byte	'Can_RXF1COfBufferConfigType',0,16,166,14,15
	.word	133
	.byte	24
	.byte	'Can_TXBCOfBufferConfigType',0,16,169,14,16
	.word	641
	.byte	24
	.byte	'Can_TXEFCOfBufferConfigType',0,16,172,14,15
	.word	133
	.byte	24
	.byte	'Can_CanIfChannelIdType',0,16,190,14,15
	.word	133
	.byte	24
	.byte	'Can_CanSubSystemBaseAdrType',0,16,193,14,16
	.word	641
	.byte	24
	.byte	'Can_BasisAdrOfControllerConfigType',0,16,196,14,16
	.word	641
	.byte	24
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,16,199,14,15
	.word	133
	.byte	24
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,16,202,14,16
	.word	519
	.byte	24
	.byte	'Can_IsTTCanOfControllerConfigType',0,16,205,14,17
	.word	133
	.byte	24
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,16,208,14,15
	.word	133
	.byte	24
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,16,211,14,15
	.word	133
	.byte	24
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,16,214,14,15
	.word	133
	.byte	24
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,16,220,14,15
	.word	133
	.byte	24
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,16,223,14,15
	.word	133
	.byte	24
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,16,226,14,15
	.word	133
	.byte	24
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,16,232,14,15
	.word	133
	.byte	24
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,16,235,14,15
	.word	133
	.byte	24
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,16,238,14,15
	.word	133
	.byte	24
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,16,241,14,15
	.word	133
	.byte	24
	.byte	'Can_RxSelectionOfControllerConfigType',0,16,244,14,15
	.word	133
	.byte	24
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,16,247,14,15
	.word	133
	.byte	24
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,16,250,14,15
	.word	133
	.byte	24
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,16,253,14,15
	.word	133
	.byte	24
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,16,128,15,15
	.word	133
	.byte	24
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,16,131,15,15
	.word	133
	.byte	24
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,16,134,15,15
	.word	133
	.byte	24
	.byte	'Can_BusOffNotificationOfControllerDataType',0,16,137,15,15
	.word	133
	.byte	24
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,16,140,15,15
	.word	133
	.byte	24
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,16,143,15,15
	.word	133
	.byte	24
	.byte	'Can_IntEnableOfControllerDataType',0,16,146,15,16
	.word	641
	.byte	24
	.byte	'Can_IsBusOffOfControllerDataType',0,16,149,15,17
	.word	133
	.byte	24
	.byte	'Can_LastInitObjectOfControllerDataType',0,16,152,15,15
	.word	133
	.byte	24
	.byte	'Can_LastStateOfControllerDataType',0,16,155,15,15
	.word	133
	.byte	24
	.byte	'Can_LogStatusOfControllerDataType',0,16,158,15,15
	.word	133
	.byte	24
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,16,161,15,15
	.word	133
	.byte	24
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,16,164,15,16
	.word	641
	.byte	24
	.byte	'Can_PrevModeOfControllerDataType',0,16,167,15,15
	.word	133
	.byte	24
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,16,170,15,15
	.word	133
	.byte	24
	.byte	'Can_TXBCROfControllerDataType',0,16,173,15,16
	.word	641
	.byte	24
	.byte	'Can_TXBRPOfControllerDataType',0,16,176,15,16
	.word	641
	.byte	24
	.byte	'Can_FBTPType',0,16,179,15,16
	.word	641
	.byte	24
	.byte	'Can_GFCType',0,16,182,15,15
	.word	133
	.byte	24
	.byte	'Can_INT_PriorityType',0,16,185,15,15
	.word	133
	.byte	24
	.byte	'Can_INT_RoutingGroupType',0,16,188,15,15
	.word	133
	.byte	24
	.byte	'Can_InitObjectBaudrateType',0,16,191,15,16
	.word	519
	.byte	24
	.byte	'Can_InitObjectFdBrsConfigType',0,16,194,15,15
	.word	133
	.byte	24
	.byte	'Can_InitObjectStartIndexType',0,16,197,15,15
	.word	133
	.byte	24
	.byte	'Can_ActiveSendObjectOfMailboxType',0,16,200,15,15
	.word	133
	.byte	24
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,16,203,15,15
	.word	133
	.byte	24
	.byte	'Can_FdPaddingOfMailboxType',0,16,206,15,15
	.word	133
	.byte	24
	.byte	'Can_HwHandleOfMailboxType',0,16,209,15,15
	.word	133
	.byte	24
	.byte	'Can_IDValueOfMailboxType',0,16,212,15,15
	.word	133
	.byte	24
	.byte	'Can_MailboxSizeOfMailboxType',0,16,215,15,15
	.word	133
	.byte	24
	.byte	'Can_MailboxTypeOfMailboxType',0,16,218,15,15
	.word	133
	.byte	24
	.byte	'Can_MaxDataLenOfMailboxType',0,16,221,15,15
	.word	133
	.byte	24
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,16,224,15,15
	.word	133
	.byte	24
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,16,227,15,15
	.word	133
	.byte	24
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,16,230,15,15
	.word	133
	.byte	24
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,16,233,15,15
	.word	133
	.byte	24
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,16,236,15,15
	.word	133
	.byte	24
	.byte	'Can_FLSSAOfSIDFCType',0,16,242,15,15
	.word	133
	.byte	24
	.byte	'Can_LSSOfSIDFCType',0,16,245,15,15
	.word	133
	.byte	24
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,16,248,15,15
	.word	133
	.byte	24
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,16,251,15,15
	.word	133
	.byte	24
	.byte	'Can_SIDFEType',0,16,129,16,16
	.word	641
	.byte	24
	.byte	'Can_SRN_AddressType',0,16,132,16,16
	.word	641
	.byte	24
	.byte	'Can_RXBAOfShmAdrType',0,16,135,16,16
	.word	641
	.byte	24
	.byte	'Can_RXF0AOfShmAdrType',0,16,138,16,16
	.word	641
	.byte	24
	.byte	'Can_RXF1AOfShmAdrType',0,16,141,16,16
	.word	641
	.byte	24
	.byte	'Can_SIDFAOfShmAdrType',0,16,144,16,16
	.word	641
	.byte	24
	.byte	'Can_StartAdrOfShmAdrType',0,16,147,16,16
	.word	641
	.byte	24
	.byte	'Can_StopAdrOfShmAdrType',0,16,150,16,16
	.word	641
	.byte	24
	.byte	'Can_TXBAOfShmAdrType',0,16,153,16,16
	.word	641
	.byte	24
	.byte	'Can_TXEFAOfShmAdrType',0,16,156,16,16
	.word	641
	.byte	24
	.byte	'Can_XIDFAOfShmAdrType',0,16,159,16,16
	.word	641
	.byte	24
	.byte	'Can_F0DSOfShmElementSizeType',0,16,162,16,15
	.word	133
	.byte	24
	.byte	'Can_F1DSOfShmElementSizeType',0,16,165,16,15
	.word	133
	.byte	24
	.byte	'Can_RBDSOfShmElementSizeType',0,16,168,16,15
	.word	133
	.byte	24
	.byte	'Can_TBDSOfShmElementSizeType',0,16,171,16,15
	.word	133
	.byte	24
	.byte	'Can_TEFBDSOfShmElementSizeType',0,16,174,16,15
	.word	133
	.byte	24
	.byte	'Can_TDCRType',0,16,130,17,15
	.word	133
	.byte	24
	.byte	'Can_XIDAMType',0,16,133,17,16
	.word	641
	.byte	24
	.byte	'Can_FLESAOfXIDFCType',0,16,136,17,15
	.word	133
	.byte	24
	.byte	'Can_LSEOfXIDFCType',0,16,139,17,15
	.word	133
	.byte	24
	.byte	'Can_EIDFE_0OfXIDFEType',0,16,142,17,15
	.word	133
	.byte	24
	.byte	'Can_EIDFE_1OfXIDFEType',0,16,145,17,15
	.word	133
	.byte	15
	.byte	'sCan_ActiveSendObjectType',0,16,161,17,16,4,16
	.byte	'StateOfActiveSendObject',0
	.word	519
	.byte	2,2,35,0,16
	.byte	'PduOfActiveSendObject',0
	.word	133
	.byte	1,2,35,2,0,24
	.byte	'Can_ActiveSendObjectType',0,16,165,17,3
	.word	10437
	.byte	15
	.byte	'sCan_BufferConfigType',0,16,168,17,16,12,16
	.byte	'RXF0COfBufferConfig',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'TXBCOfBufferConfig',0
	.word	641
	.byte	4,2,35,4,16
	.byte	'RXBCOfBufferConfig',0
	.word	133
	.byte	1,2,35,8,16
	.byte	'RXF1COfBufferConfig',0
	.word	133
	.byte	1,2,35,9,16
	.byte	'TXEFCOfBufferConfig',0
	.word	133
	.byte	1,2,35,10,0,24
	.byte	'Can_BufferConfigType',0,16,175,17,3
	.word	10568
	.byte	15
	.byte	'sCan_ControllerConfigType',0,16,178,17,16,28,16
	.byte	'BasisAdrOfControllerConfig',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	519
	.byte	2,2,35,4,16
	.byte	'IsTTCanOfControllerConfig',0
	.word	133
	.byte	1,2,35,6,16
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,7,16
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,8,16
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	133
	.byte	1,2,35,9,16
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,10,16
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,11,16
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	133
	.byte	1,2,35,12,16
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,13,16
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,14,16
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,15,16
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,16,16
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,17,16
	.byte	'RxSelectionOfControllerConfig',0
	.word	133
	.byte	1,2,35,18,16
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,19,16
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,20,16
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,21,16
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,22,16
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,23,16
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,24,0,24
	.byte	'Can_ControllerConfigType',0,16,201,17,3
	.word	10770
	.byte	15
	.byte	'sCan_ControllerDataType',0,16,204,17,16,64,16
	.byte	'IntEnableOfControllerData',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	641
	.byte	4,2,35,4,16
	.byte	'TXBCROfControllerData',0
	.word	641
	.byte	4,2,35,8,16
	.byte	'TXBRPOfControllerData',0
	.word	641
	.byte	4,2,35,12,16
	.byte	'BusOffNotificationOfControllerData',0
	.word	133
	.byte	1,2,35,16,16
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	133
	.byte	1,2,35,17,16
	.byte	'CanInterruptCounterOfControllerData',0
	.word	133
	.byte	1,2,35,18,16
	.byte	'IsBusOffOfControllerData',0
	.word	133
	.byte	1,2,35,19,16
	.byte	'LastInitObjectOfControllerData',0
	.word	133
	.byte	1,2,35,20,16
	.byte	'LastStateOfControllerData',0
	.word	133
	.byte	1,2,35,21,16
	.byte	'LogStatusOfControllerData',0
	.word	133
	.byte	1,2,35,22,16
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	133
	.byte	1,2,35,23,16
	.byte	'PrevModeOfControllerData',0
	.word	133
	.byte	1,2,35,24,16
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	133
	.byte	1,2,35,25,16
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	641
	.byte	4,2,35,26,16
	.byte	'LoopTimeoutOfControllerData',0
	.word	6638
	.byte	32,2,35,30,0,24
	.byte	'Can_ControllerDataType',0,16,222,17,3
	.word	11763
	.byte	31,32
	.word	641
	.byte	32,7,0,15
	.byte	'sCan_MailboxType',0,16,225,17,16,12,16
	.byte	'ActiveSendObjectOfMailbox',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'FdPaddingOfMailbox',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'HwHandleOfMailbox',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'IDValueOfMailbox',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'MailboxSizeOfMailbox',0
	.word	133
	.byte	1,2,35,5,16
	.byte	'MailboxTypeOfMailbox',0
	.word	133
	.byte	1,2,35,6,16
	.byte	'MaxDataLenOfMailbox',0
	.word	133
	.byte	1,2,35,7,16
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	133
	.byte	1,2,35,8,0,24
	.byte	'Can_MailboxType',0,16,236,17,3
	.word	12479
	.byte	15
	.byte	'sCan_MemorySectionInfoType',0,16,239,17,16,1,16
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Can_MemorySectionInfoType',0,16,242,17,3
	.word	12809
	.byte	15
	.byte	'sCan_MemorySectionObjectsType',0,16,245,17,16,4,16
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	133
	.byte	1,2,35,2,0,24
	.byte	'Can_MemorySectionObjectsType',0,16,250,17,3
	.word	12925
	.byte	15
	.byte	'sCan_SIDFCType',0,16,253,17,16,4,16
	.byte	'FLSSAOfSIDFC',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'LSSOfSIDFC',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	133
	.byte	1,2,35,3,0,24
	.byte	'Can_SIDFCType',0,16,131,18,3
	.word	13131
	.byte	15
	.byte	'sCan_ShmAdrType',0,16,134,18,16,36,16
	.byte	'RXBAOfShmAdr',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'RXF0AOfShmAdr',0
	.word	641
	.byte	4,2,35,4,16
	.byte	'RXF1AOfShmAdr',0
	.word	641
	.byte	4,2,35,8,16
	.byte	'SIDFAOfShmAdr',0
	.word	641
	.byte	4,2,35,12,16
	.byte	'StartAdrOfShmAdr',0
	.word	641
	.byte	4,2,35,16,16
	.byte	'StopAdrOfShmAdr',0
	.word	641
	.byte	4,2,35,20,16
	.byte	'TXBAOfShmAdr',0
	.word	641
	.byte	4,2,35,24,16
	.byte	'TXEFAOfShmAdr',0
	.word	641
	.byte	4,2,35,28,16
	.byte	'XIDFAOfShmAdr',0
	.word	641
	.byte	4,2,35,32,0,24
	.byte	'Can_ShmAdrType',0,16,145,18,3
	.word	13276
	.byte	15
	.byte	'sCan_ShmElementSizeType',0,16,148,18,16,6,16
	.byte	'F0DSOfShmElementSize',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'F1DSOfShmElementSize',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'RBDSOfShmElementSize',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'TBDSOfShmElementSize',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'TEFBDSOfShmElementSize',0
	.word	133
	.byte	1,2,35,4,0,24
	.byte	'Can_ShmElementSizeType',0,16,155,18,3
	.word	13533
	.byte	15
	.byte	'sCan_XIDFCType',0,16,158,18,16,2,16
	.byte	'FLESAOfXIDFC',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'LSEOfXIDFC',0
	.word	133
	.byte	1,2,35,1,0,24
	.byte	'Can_XIDFCType',0,16,162,18,3
	.word	13748
	.byte	15
	.byte	'sCan_XIDFEType',0,16,165,18,16,2,16
	.byte	'EIDFE_0OfXIDFE',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'EIDFE_1OfXIDFE',0
	.word	133
	.byte	1,2,35,1,0,24
	.byte	'Can_XIDFEType',0,16,169,18,3
	.word	13835
	.byte	15
	.byte	'sCan_PCConfigType',0,16,143,19,16,1,16
	.byte	'Can_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Can_PCConfigType',0,16,146,19,3
	.word	13928
	.byte	24
	.byte	'Can_ConfigType',0,16,148,19,26
	.word	13928
	.byte	10
	.word	641
	.byte	10
	.word	641
	.byte	31,64
	.word	641
	.byte	32,15,0,10
	.word	14044
	.byte	15
	.byte	'tElmTypeTag',0,17,145,9,25,72,16
	.byte	'E0',0
	.word	14034
	.byte	4,2,35,0,16
	.byte	'E1',0
	.word	14039
	.byte	4,2,35,4,16
	.byte	'data',0
	.word	14053
	.byte	64,2,35,8,0,10
	.word	14058
	.byte	24
	.byte	'tElmType',0,17,162,9,3
	.word	14115
	.byte	10
	.word	641
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	25,17,224,9,5,4,35
	.byte	'ID',0,4
	.word	14138
	.byte	29,3,2,35,0,35
	.byte	'RTR',0,1
	.word	14143
	.byte	1,2,2,35,3,35
	.byte	'XTD',0,1
	.word	14148
	.byte	1,1,2,35,3,35
	.byte	'ESI',0,1
	.word	14153
	.byte	1,0,2,35,3,0,10
	.word	641
	.byte	36,17,222,9,3,4,16
	.byte	'b0',0
	.word	14158
	.byte	4,2,35,0,16
	.byte	'B0',0
	.word	14224
	.byte	4,2,35,0,0,10
	.word	519
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	25,17,235,9,5,4,35
	.byte	'RXTS',0,2
	.word	14260
	.byte	16,0,2,35,0,35
	.byte	'DLC',0,1
	.word	14265
	.byte	4,4,2,35,2,35
	.byte	'BRS',0,1
	.word	14270
	.byte	1,3,2,35,2,35
	.byte	'FDF',0,1
	.word	14275
	.byte	1,2,2,35,2,35
	.byte	'r0',0,1
	.word	14280
	.byte	2,0,2,35,2,35
	.byte	'FIDX',0,1
	.word	14285
	.byte	7,1,2,35,3,35
	.byte	'ANMF',0,1
	.word	14290
	.byte	1,0,2,35,3,0,10
	.word	519
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	10
	.word	133
	.byte	25,17,245,9,5,4,35
	.byte	'r1',0,2
	.word	14409
	.byte	16,0,2,35,0,35
	.byte	'DLC',0,1
	.word	14414
	.byte	4,4,2,35,2,35
	.byte	'BRS',0,1
	.word	14419
	.byte	1,3,2,35,2,35
	.byte	'FDF',0,1
	.word	14424
	.byte	1,2,2,35,2,35
	.byte	'r0',0,1
	.word	14429
	.byte	1,1,2,35,2,35
	.byte	'EFC',0,1
	.word	14434
	.byte	1,0,2,35,2,35
	.byte	'MM',0,1
	.word	14439
	.byte	8,0,2,35,3,0,36,17,233,9,3,4,16
	.byte	'rb1',0
	.word	14295
	.byte	4,2,35,0,16
	.byte	'tb1',0
	.word	14444
	.byte	4,2,35,0,16
	.byte	'B1',0
	.word	641
	.byte	4,2,35,0,0,10
	.word	14044
	.byte	15
	.byte	'tCanChipMsgPtrTag',0,17,220,9,25,72,16
	.byte	'uB0',0
	.word	14229
	.byte	4,2,35,0,16
	.byte	'uB1',0
	.word	14553
	.byte	4,2,35,4,16
	.byte	'data',0
	.word	14598
	.byte	64,2,35,8,0,10
	.word	14603
	.byte	24
	.byte	'tCanChipMsgPtr',0,17,134,10,3
	.word	14668
	.byte	25,17,141,10,3,4,35
	.byte	'FnFL',0,1
	.word	133
	.byte	7,1,2,35,0,35
	.byte	'r2',0,1
	.word	133
	.byte	1,0,2,35,0,35
	.byte	'FnGI',0,1
	.word	133
	.byte	6,2,2,35,1,35
	.byte	'r1',0,4
	.word	641
	.byte	10,8,2,35,0,35
	.byte	'FnF',0,1
	.word	133
	.byte	1,7,2,35,3,35
	.byte	'RFnL',0,1
	.word	133
	.byte	1,6,2,35,3,35
	.byte	'r0',0,1
	.word	133
	.byte	6,0,2,35,3,0,33
	.byte	'tRXFnSTag',0,17,138,10,15,4,16
	.byte	'R',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	14697
	.byte	4,2,35,0,0,24
	.byte	'tRXFnS',0,17,151,10,3
	.word	14809
	.byte	25,17,156,10,3,4,37,1
	.word	133
	.byte	2,6,2,35,0,35
	.byte	'FOSA',0,2
	.word	519
	.byte	14,0,2,35,0,35
	.byte	'F0S',0,1
	.word	133
	.byte	7,1,2,35,2,37,1
	.word	133
	.byte	1,0,2,35,2,35
	.byte	'F0WM',0,1
	.word	133
	.byte	7,1,2,35,3,37,1
	.word	133
	.byte	1,0,2,35,3,0,33
	.byte	'tRXFnCTag',0,17,153,10,15,4,16
	.byte	'R',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	14864
	.byte	4,2,35,0,0,24
	.byte	'tRXFnC',0,17,165,10,3
	.word	14951
	.byte	25,17,171,10,3,4,35
	.byte	'F0DS',0,1
	.word	133
	.byte	3,5,2,35,0,37,1
	.word	133
	.byte	1,4,2,35,0,35
	.byte	'F1DS',0,1
	.word	133
	.byte	3,1,2,35,0,37,1
	.word	133
	.byte	1,0,2,35,0,35
	.byte	'RBDS',0,1
	.word	133
	.byte	3,5,2,35,1,37,4
	.word	641
	.byte	21,0,2,35,0,0,33
	.byte	'tRXESCTag',0,17,168,10,15,4,16
	.byte	'R',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	15006
	.byte	4,2,35,0,0,24
	.byte	'tRXESC',0,17,180,10,3
	.word	15094
	.byte	25,17,185,10,3,4,35
	.byte	'TFFL',0,1
	.word	133
	.byte	6,2,2,35,0,37,1
	.word	133
	.byte	2,0,2,35,0,35
	.byte	'TFGI',0,1
	.word	133
	.byte	5,3,2,35,1,37,1
	.word	133
	.byte	3,0,2,35,1,35
	.byte	'TFQPI',0,1
	.word	133
	.byte	5,3,2,35,2,35
	.byte	'TFQF',0,1
	.word	133
	.byte	1,2,2,35,2,37,2
	.word	519
	.byte	10,0,2,35,2,0,33
	.byte	'tTXFQSTag',0,17,182,10,15,4,16
	.byte	'R',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	15149
	.byte	4,2,35,0,0,24
	.byte	'tTXFQS',0,17,195,10,3
	.word	15254
	.byte	25,17,200,10,3,4,35
	.byte	'EFFL',0,1
	.word	133
	.byte	6,2,2,35,0,35
	.byte	'r1',0,1
	.word	133
	.byte	2,0,2,35,0,35
	.byte	'EFGI',0,1
	.word	133
	.byte	5,3,2,35,1,37,4
	.word	641
	.byte	11,8,2,35,0,35
	.byte	'EFF',0,1
	.word	133
	.byte	1,7,2,35,3,35
	.byte	'TEFL',0,1
	.word	133
	.byte	1,6,2,35,3,35
	.byte	'r0',0,1
	.word	133
	.byte	6,0,2,35,3,0,33
	.byte	'tTXEFSTag',0,17,197,10,15,4,16
	.byte	'R',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	15309
	.byte	4,2,35,0,0,24
	.byte	'tTXEFS',0,17,210,10,3
	.word	15418
	.byte	24
	.byte	'CanIf_TxBufferSizeType',0,18,184,1,15
	.word	133
	.byte	26,19,189,2,9,1,27
	.byte	'CANIF_CS_UNINIT',0,0,27
	.byte	'CANIF_CS_STOPPED',0,1,27
	.byte	'CANIF_CS_STARTED',0,2,27
	.byte	'CANIF_CS_SLEEP',0,3,0,24
	.byte	'CanIf_ControllerModeType',0,19,195,2,3
	.word	15505
	.byte	26,19,215,2,9,1,27
	.byte	'CANIF_GET_OFFLINE',0,0,27
	.byte	'CANIF_GET_RX_ONLINE',0,1,27
	.byte	'CANIF_GET_TX_ONLINE',0,2,27
	.byte	'CANIF_GET_ONLINE',0,3,27
	.byte	'CANIF_GET_OFFLINE_ACTIVE',0,4,27
	.byte	'CANIF_GET_OFFLINE_ACTIVE_RX_ONLINE',0,5,27
	.byte	'CANIF_NO_MODE_PDU_GET_MODE_TYPE_END',0,6,0,24
	.byte	'CanIf_PduGetModeType',0,19,228,2,3
	.word	15619
	.byte	26,19,231,2,9,1,27
	.byte	'CANIF_RxBasicCANMailbox',0,0,27
	.byte	'CANIF_RxFullCANMailbox',0,1,27
	.byte	'CANIF_TxBasicCANMailbox',0,2,27
	.byte	'CANIF_TxFullCANMailbox',0,3,27
	.byte	'CANIF_UnusedCANMailbox',0,4,0,24
	.byte	'CanIf_MailBoxTypeType',0,19,238,2,3
	.word	15841
	.byte	26,19,241,2,9,1,27
	.byte	'CanIf_SimpleRxIndicationLayout',0,0,27
	.byte	'CanIf_AdvancedRxIndicationLayout',0,1,27
	.byte	'CanIf_NmOsekRxIndicationLayout',0,2,27
	.byte	'CanIf_CddRxIndicationLayout',0,3,0,24
	.byte	'CanIf_RxIndicationLayoutType',0,19,247,2,3
	.word	16006
	.byte	24
	.byte	'CanIf_TxConfirmationFctType',0,19,175,3,9
	.word	3670
	.byte	7
	.word	133
	.byte	11
	.word	16219
	.byte	29,1,1,9
	.word	133
	.byte	9
	.word	16224
	.byte	0,11
	.word	16229
	.byte	24
	.byte	'CanIf_SimpleRxIndicationFctType',0,19,181,3,9
	.word	16243
	.byte	7
	.word	1391
	.byte	11
	.word	16289
	.byte	29,1,1,9
	.word	133
	.byte	9
	.word	16294
	.byte	0,11
	.word	16299
	.byte	24
	.byte	'CanIf_AdvancedRxIndicationFctType',0,19,186,3,9
	.word	16313
	.byte	29,1,1,9
	.word	133
	.byte	9
	.word	16224
	.byte	9
	.word	519
	.byte	0,11
	.word	16361
	.byte	24
	.byte	'CanIf_NmOsekRxIndicationFctType',0,19,190,3,9
	.word	16380
	.byte	29,1,1,9
	.word	133
	.byte	9
	.word	16294
	.byte	9
	.word	519
	.byte	0,11
	.word	16426
	.byte	24
	.byte	'CanIf_CddRxIndicationFctType',0,19,194,3,9
	.word	16445
	.byte	29,1,1,9
	.word	133
	.byte	9
	.word	15505
	.byte	0,11
	.word	16488
	.byte	24
	.byte	'CanIf_CtrlModeIndicationFctType',0,19,198,3,9
	.word	16502
	.byte	24
	.byte	'CanIf_BusOffNotificationFctType',0,19,202,3,9
	.word	3670
	.byte	36,19,203,4,9,4,16
	.byte	'eSimpleRxIndicationType',0
	.word	16248
	.byte	4,2,35,0,16
	.byte	'eAdvancedRxIndicationType',0
	.word	16318
	.byte	4,2,35,0,16
	.byte	'eNmOsekRxIndicationType',0
	.word	16385
	.byte	4,2,35,0,16
	.byte	'eCddRxIndicationType',0
	.word	16450
	.byte	4,2,35,0,0,24
	.byte	'CanIf_RxIndicationFctType',0,19,209,4,3
	.word	16589
	.byte	11
	.word	16229
	.byte	11
	.word	16299
	.byte	11
	.word	16361
	.byte	11
	.word	16426
	.byte	15
	.byte	'sCanIf_TxQueueBaseType',0,19,222,4,16,1,16
	.byte	'eSduLength',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanIf_TxQueueBaseType',0,19,228,4,3
	.word	16782
	.byte	15
	.byte	'sCanIf_TxQueueBaseWithDataType',0,19,231,4,16,1,16
	.byte	'eBaseParams',0
	.word	16782
	.byte	1,2,35,0,0,24
	.byte	'CanIf_TxQueueBaseWithDataType',0,19,237,4,3
	.word	16863
	.byte	15
	.byte	'sCanIf_TxPrioByCanIdByteQueueType',0,19,242,4,16,2,16
	.byte	'eQueueParams',0
	.word	16863
	.byte	1,2,35,0,16
	.byte	'eQueued',0
	.word	133
	.byte	1,2,35,1,0,24
	.byte	'CanIf_TxPrioByCanIdByteQueueType',0,19,246,4,3
	.word	16961
	.byte	15
	.byte	'sCanIf_TxBufferPrioByCanIdBaseType',0,19,128,5,16,1,16
	.byte	'eQueueCounter',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanIf_TxBufferPrioByCanIdBaseType',0,19,131,5,3
	.word	17083
	.byte	24
	.byte	'CanIf_MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,18,138,9,15
	.word	133
	.byte	24
	.byte	'CanIf_MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,18,141,9,15
	.word	133
	.byte	24
	.byte	'CanIf_CtrlStatesIdxOfMailBoxConfigType',0,18,150,9,15
	.word	133
	.byte	24
	.byte	'CanIf_PduIdFirstOfMailBoxConfigType',0,18,153,9,15
	.word	133
	.byte	24
	.byte	'CanIf_PduIdLastOfMailBoxConfigType',0,18,156,9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxBufferCfgIdxOfMailBoxConfigType',0,18,159,9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxBufferHandlingTypeOfMailBoxConfigType',0,18,165,9,15
	.word	133
	.byte	24
	.byte	'CanIf_MailBoxConfigIdxOfMappedTxBuffersConfigType',0,18,168,9,15
	.word	133
	.byte	24
	.byte	'CanIf_RxIndicationFctListIdxOfRxPduConfigType',0,18,171,9,15
	.word	133
	.byte	24
	.byte	'CanIf_RxPduCanIdOfRxPduConfigType',0,18,174,9,15
	.word	133
	.byte	24
	.byte	'CanIf_RxPduDlcOfRxPduConfigType',0,18,177,9,15
	.word	133
	.byte	24
	.byte	'CanIf_RxPduMaskOfRxPduConfigType',0,18,180,9,16
	.word	519
	.byte	24
	.byte	'CanIf_UpperPduIdOfRxPduConfigType',0,18,183,9,19
	.word	133
	.byte	24
	.byte	'CanIf_TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,18,231,9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,18,234
	.byte	9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfigType',0,18,237
	.byte	9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,18
	.byte	240,9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdusType',0,18,243,9,15
	.word	133
	.byte	24
	.byte	'CanIf_CanIdOfTxPduConfigType',0,18,246,9,16
	.word	519
	.byte	24
	.byte	'CanIf_CtrlStatesIdxOfTxPduConfigType',0,18,249,9,15
	.word	133
	.byte	24
	.byte	'CanIf_IsTxPduTruncationOfTxPduConfigType',0,18,252,9,17
	.word	133
	.byte	24
	.byte	'CanIf_MailBoxConfigIdxOfTxPduConfigType',0,18,255,9,15
	.word	133
	.byte	24
	.byte	'CanIf_TxConfirmationFctListIdxOfTxPduConfigType',0,18,130,10,15
	.word	133
	.byte	24
	.byte	'CanIf_TxPduLengthOfTxPduConfigType',0,18,133,10,15
	.word	133
	.byte	24
	.byte	'CanIf_UpperLayerTxPduIdOfTxPduConfigType',0,18,136,10,19
	.word	133
	.byte	24
	.byte	'CanIf_TxQueueIdxOfTxPduQueueIndexType',0,18,139,10,15
	.word	133
	.byte	24
	.byte	'CanIf_TxQueueIndex2DataStartStopIdxOfTxPduQueueIndexType',0,18,142,10,15
	.word	133
	.byte	24
	.byte	'CanIf_TxQueueDataType',0,18,151,10,15
	.word	133
	.byte	24
	.byte	'CanIf_TxQueueDataEndIdxOfTxQueueIndex2DataStartStopType',0,18,154,10,15
	.word	133
	.byte	24
	.byte	'CanIf_TxQueueDataLengthOfTxQueueIndex2DataStartStopType',0,18,157,10,15
	.word	133
	.byte	24
	.byte	'CanIf_TxQueueDataStartIdxOfTxQueueIndex2DataStartStopType',0,18,160,10,15
	.word	133
	.byte	15
	.byte	'sCanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,18,183,10,16,2,16
	.byte	'MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	133
	.byte	1,2,35,1,0,24
	.byte	'CanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,18,187,10,3
	.word	19022
	.byte	15
	.byte	'sCanIf_CtrlStatesType',0,18,190,10,16,2,16
	.byte	'CtrlModeOfCtrlStates',0
	.word	15505
	.byte	1,2,35,0,16
	.byte	'PduModeOfCtrlStates',0
	.word	15619
	.byte	1,2,35,1,0,24
	.byte	'CanIf_CtrlStatesType',0,18,194,10,3
	.word	19273
	.byte	15
	.byte	'sCanIf_MailBoxConfigType',0,18,200,10,16,6,16
	.byte	'CtrlStatesIdxOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'PduIdFirstOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'PduIdLastOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'TxBufferCfgIdxOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'TxBufferHandlingTypeOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'MailBoxTypeOfMailBoxConfig',0
	.word	15841
	.byte	1,2,35,5,0,24
	.byte	'CanIf_MailBoxConfigType',0,18,208,10,3
	.word	19391
	.byte	15
	.byte	'sCanIf_MappedTxBuffersConfigType',0,18,214,10,16,1,16
	.byte	'MailBoxConfigIdxOfMappedTxBuffersConfig',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanIf_MappedTxBuffersConfigType',0,18,217,10,3
	.word	19683
	.byte	15
	.byte	'sCanIf_RxIndicationFctListType',0,18,220,10,16,8,16
	.byte	'RxIndicationFctOfRxIndicationFctList',0
	.word	16589
	.byte	4,2,35,0,16
	.byte	'RxIndicationLayoutOfRxIndicationFctList',0
	.word	16006
	.byte	1,2,35,4,0,24
	.byte	'CanIf_RxIndicationFctListType',0,18,224,10,3
	.word	19813
	.byte	15
	.byte	'sCanIf_RxPduConfigType',0,18,230,10,16,6,16
	.byte	'RxPduMaskOfRxPduConfig',0
	.word	519
	.byte	2,2,35,0,16
	.byte	'UpperPduIdOfRxPduConfig',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'RxIndicationFctListIdxOfRxPduConfig',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'RxPduCanIdOfRxPduConfig',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'RxPduDlcOfRxPduConfig',0
	.word	133
	.byte	1,2,35,5,0,24
	.byte	'CanIf_RxPduConfigType',0,18,237,10,3
	.word	19985
	.byte	15
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueConfigType',0,18,245,10,16,4,16
	.byte	'TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,3,0,24
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueConfigType',0,18,251,10,3
	.word	20220
	.byte	15
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,18,129,11,16,1,16
	.byte	'TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdus',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,18,132,11,3
	.word	20677
	.byte	15
	.byte	'sCanIf_TxPduConfigType',0,18,140,11,16,8,16
	.byte	'CanIdOfTxPduConfig',0
	.word	519
	.byte	2,2,35,0,16
	.byte	'UpperLayerTxPduIdOfTxPduConfig',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'IsTxPduTruncationOfTxPduConfig',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'CtrlStatesIdxOfTxPduConfig',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'MailBoxConfigIdxOfTxPduConfig',0
	.word	133
	.byte	1,2,35,5,16
	.byte	'TxConfirmationFctListIdxOfTxPduConfig',0
	.word	133
	.byte	1,2,35,6,16
	.byte	'TxPduLengthOfTxPduConfig',0
	.word	133
	.byte	1,2,35,7,0,24
	.byte	'CanIf_TxPduConfigType',0,18,149,11,3
	.word	20862
	.byte	15
	.byte	'sCanIf_TxPduQueueIndexType',0,18,155,11,16,2,16
	.byte	'TxQueueIdxOfTxPduQueueIndex',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'TxQueueIndex2DataStartStopIdxOfTxPduQueueIndex',0
	.word	133
	.byte	1,2,35,1,0,24
	.byte	'CanIf_TxPduQueueIndexType',0,18,159,11,3
	.word	21187
	.byte	15
	.byte	'sCanIf_TxQueueIndex2DataStartStopType',0,18,166,11,16,4,16
	.byte	'TxQueueDataEndIdxOfTxQueueIndex2DataStartStop',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'TxQueueDataLengthOfTxQueueIndex2DataStartStop',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'TxQueueDataStartIdxOfTxQueueIndex2DataStartStop',0
	.word	133
	.byte	1,2,35,2,0,24
	.byte	'CanIf_TxQueueIndex2DataStartStopType',0,18,171,11,3
	.word	21349
	.byte	15
	.byte	'CanIf_CtrlStatesStructSTag',0,18,183,11,16,2,16
	.byte	'CT_testCANFDdbc_2c920817',0
	.word	19273
	.byte	2,2,35,0,0,24
	.byte	'CanIf_CtrlStatesStructSType',0,18,186,11,3
	.word	21607
	.byte	15
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSTag',0,18,189,11,16,1,16
	.byte	'CHNL_7a25eeb6',0
	.word	17083
	.byte	1,2,35,0,0,24
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSType',0,18,192,11,3
	.word	21712
	.byte	15
	.byte	'CanIf_TxQueueStructSTag',0,18,195,11,16,6,16
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	16961
	.byte	2,2,35,0,16
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	16961
	.byte	2,2,35,2,16
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	16961
	.byte	2,2,35,4,0,24
	.byte	'CanIf_TxQueueStructSType',0,18,200,11,3
	.word	21832
	.byte	31,32
	.word	133
	.byte	32,31,0,31,8
	.word	133
	.byte	32,7,0,31,64
	.word	133
	.byte	32,63,0,15
	.byte	'CanIf_TxQueueDataStructSTag',0,18,203,11,16,104,16
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	22036
	.byte	32,2,35,0,16
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	22045
	.byte	8,2,35,32,16
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	22054
	.byte	64,2,35,40,0,24
	.byte	'CanIf_TxQueueDataStructSType',0,18,208,11,3
	.word	22063
	.byte	15
	.byte	'sCanIf_PCConfigType',0,18,189,12,16,1,16
	.byte	'CanIf_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanIf_PCConfigType',0,18,192,12,3
	.word	22275
	.byte	24
	.byte	'Com_RxPduInfoIterType',0,20,212,16,21
	.word	133
	.byte	24
	.byte	'Com_TxPduInfoIterType',0,20,236,16,21
	.word	133
	.byte	24
	.byte	'Com_ConstValueSInt8Type',0,20,165,17,15
	.word	926
	.byte	24
	.byte	'Com_CurrentTxModeType',0,20,168,17,17
	.word	133
	.byte	24
	.byte	'Com_CycleTimeCntType',0,20,171,17,15
	.word	133
	.byte	24
	.byte	'Com_CyclicSendRequestType',0,20,174,17,17
	.word	133
	.byte	24
	.byte	'Com_HandleRxPduDeferredType',0,20,177,17,23
	.word	133
	.byte	24
	.byte	'Com_InitializedType',0,20,180,17,17
	.word	133
	.byte	24
	.byte	'Com_PduGrpVectorType',0,20,186,17,15
	.word	133
	.byte	24
	.byte	'Com_BitPositionOfRxAccessInfoType',0,20,195,17,15
	.word	133
	.byte	24
	.byte	'Com_BusAccOfRxAccessInfoType',0,20,204,17,15
	.word	133
	.byte	24
	.byte	'Com_InitValueUsedOfRxAccessInfoType',0,20,216,17,17
	.word	133
	.byte	24
	.byte	'Com_RxPduInfoIdxOfRxAccessInfoType',0,20,219,17,15
	.word	133
	.byte	24
	.byte	'Com_RxAccessInfoIndType',0,20,225,17,15
	.word	133
	.byte	24
	.byte	'Com_RxDefPduBufferType',0,20,228,17,15
	.word	133
	.byte	24
	.byte	'Com_RxDeferredProcessingISRLockCounterType',0,20,231,17,16
	.word	519
	.byte	24
	.byte	'Com_RxIPduGroupISRLockCounterType',0,20,237,17,16
	.word	519
	.byte	24
	.byte	'Com_RxPduGrpActiveType',0,20,243,17,17
	.word	133
	.byte	24
	.byte	'Com_PduGrpVectorUsedOfRxPduInfoType',0,20,130,18,17
	.word	133
	.byte	24
	.byte	'Com_RxSigBufferSInt8Type',0,20,169,18,15
	.word	926
	.byte	24
	.byte	'Com_SignalProcessingOfRxSigInfoType',0,20,175,18,15
	.word	133
	.byte	24
	.byte	'Com_TransmitRequestType',0,20,131,19,17
	.word	133
	.byte	24
	.byte	'Com_TxBufferType',0,20,134,19,15
	.word	133
	.byte	24
	.byte	'Com_TxCycleCounterDivisorCounterType',0,20,140,19,16
	.word	519
	.byte	24
	.byte	'Com_TxPduInfoIdxOfTxCyclicPduType',0,20,143,19,15
	.word	133
	.byte	24
	.byte	'Com_TxCyclicProcessingISRLockCounterType',0,20,146,19,16
	.word	519
	.byte	24
	.byte	'Com_TxIPduGroupISRLockCounterType',0,20,152,19,16
	.word	519
	.byte	24
	.byte	'Com_PeriodicOfTxModeFalseType',0,20,158,19,17
	.word	133
	.byte	24
	.byte	'Com_InitModeOfTxModeInfoType',0,20,164,19,17
	.word	133
	.byte	24
	.byte	'Com_TxModeTrueIdxOfTxModeInfoType',0,20,170,19,15
	.word	133
	.byte	24
	.byte	'Com_PeriodicOfTxModeTrueType',0,20,173,19,17
	.word	133
	.byte	24
	.byte	'Com_TxPduGrpActiveType',0,20,179,19,17
	.word	133
	.byte	24
	.byte	'Com_PduGrpVectorStartIdxOfTxPduInfoType',0,20,191,19,15
	.word	133
	.byte	24
	.byte	'Com_TxBufferLengthOfTxPduInfoType',0,20,203,19,15
	.word	133
	.byte	24
	.byte	'Com_TxBufferUsedOfTxPduInfoType',0,20,209,19,17
	.word	133
	.byte	24
	.byte	'Com_TxPduInitValueEndIdxOfTxPduInfoType',0,20,212,19,15
	.word	133
	.byte	24
	.byte	'Com_TxPduInitValueStartIdxOfTxPduInfoType',0,20,215,19,15
	.word	133
	.byte	24
	.byte	'Com_TxPduInitValueType',0,20,221,19,15
	.word	133
	.byte	24
	.byte	'Com_TxProcessingISRLockCounterType',0,20,224,19,16
	.word	519
	.byte	24
	.byte	'Com_TxSduLengthType',0,20,230,19,23
	.word	133
	.byte	24
	.byte	'Com_BitPositionOfTxSigInfoType',0,20,239,19,15
	.word	133
	.byte	24
	.byte	'Com_BusAccOfTxSigInfoType',0,20,242,19,15
	.word	133
	.byte	24
	.byte	'Com_StartByteInPduPositionOfTxSigInfoType',0,20,251,19,15
	.word	133
	.byte	24
	.byte	'Com_TxBufferStartIdxOfTxSigInfoType',0,20,132,20,15
	.word	133
	.byte	24
	.byte	'Com_TxPduInfoIdxOfTxSigInfoType',0,20,138,20,15
	.word	133
	.byte	15
	.byte	'sCom_ActivatableRxComIPdusType',0,20,154,20,16,1,16
	.byte	'Com_ActivatableRxComIPdusNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_ActivatableRxComIPdusType',0,20,157,20,3
	.word	24117
	.byte	15
	.byte	'sCom_ActivatableTxComIPdusType',0,20,160,20,16,1,16
	.byte	'Com_ActivatableTxComIPdusNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_ActivatableTxComIPdusType',0,20,163,20,3
	.word	24238
	.byte	15
	.byte	'sCom_RxAccessInfoType',0,20,169,20,16,4,16
	.byte	'InitValueUsedOfRxAccessInfo',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'BitPositionOfRxAccessInfo',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'BusAccOfRxAccessInfo',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'RxPduInfoIdxOfRxAccessInfo',0
	.word	133
	.byte	1,2,35,3,0,24
	.byte	'Com_RxAccessInfoType',0,20,175,20,3
	.word	24359
	.byte	15
	.byte	'sCom_RxPduInfoType',0,20,178,20,16,1,16
	.byte	'PduGrpVectorUsedOfRxPduInfo',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_RxPduInfoType',0,20,181,20,3
	.word	24556
	.byte	15
	.byte	'sCom_RxSigInfoType',0,20,184,20,16,1,16
	.byte	'SignalProcessingOfRxSigInfo',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_RxSigInfoType',0,20,187,20,3
	.word	24646
	.byte	15
	.byte	'sCom_TxCyclicPduType',0,20,193,20,16,1,16
	.byte	'TxPduInfoIdxOfTxCyclicPdu',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_TxCyclicPduType',0,20,196,20,3
	.word	24736
	.byte	15
	.byte	'sCom_TxModeFalseType',0,20,199,20,16,1,16
	.byte	'PeriodicOfTxModeFalse',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_TxModeFalseType',0,20,202,20,3
	.word	24828
	.byte	15
	.byte	'sCom_TxModeInfoType',0,20,208,20,16,2,16
	.byte	'InitModeOfTxModeInfo',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'TxModeTrueIdxOfTxModeInfo',0
	.word	133
	.byte	1,2,35,1,0,24
	.byte	'Com_TxModeInfoType',0,20,212,20,3
	.word	24916
	.byte	15
	.byte	'sCom_TxModeTrueType',0,20,215,20,16,1,16
	.byte	'PeriodicOfTxModeTrue',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_TxModeTrueType',0,20,218,20,3
	.word	25036
	.byte	15
	.byte	'sCom_TxPduInfoType',0,20,226,20,16,6,16
	.byte	'TxBufferUsedOfTxPduInfo',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'PduGrpVectorStartIdxOfTxPduInfo',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'TxBufferLengthOfTxPduInfo',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'TxPduInitValueEndIdxOfTxPduInfo',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'TxPduInitValueStartIdxOfTxPduInfo',0
	.word	133
	.byte	1,2,35,4,0,24
	.byte	'Com_TxPduInfoType',0,20,233,20,3
	.word	25121
	.byte	15
	.byte	'sCom_TxSigInfoType',0,20,240,20,16,6,16
	.byte	'BitPositionOfTxSigInfo',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'BusAccOfTxSigInfo',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'StartByteInPduPositionOfTxSigInfo',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'TxBufferStartIdxOfTxSigInfo',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'TxPduInfoIdxOfTxSigInfo',0
	.word	133
	.byte	1,2,35,4,0,24
	.byte	'Com_TxSigInfoType',0,20,247,20,3
	.word	25367
	.byte	15
	.byte	'Com_HandleRxPduDeferredStructSTag',0,20,131,21,16,1,16
	.byte	'RxMessage1_otestCANFDdbc_d2b210c8_Rx',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_HandleRxPduDeferredStructSType',0,20,134,21,3
	.word	25592
	.byte	31,64
	.word	133
	.byte	32,63,0,15
	.byte	'Com_RxDefPduBufferStructSTag',0,20,137,21,16,64,16
	.byte	'RxMessage1_otestCANFDdbc_d2b210c8_Rx',0
	.word	25723
	.byte	64,2,35,0,0,24
	.byte	'Com_RxDefPduBufferStructSType',0,20,140,21,3
	.word	25732
	.byte	15
	.byte	'sCom_PCConfigType',0,20,155,22,16,1,16
	.byte	'Com_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'Com_PCConfigType',0,20,158,22,3
	.word	25853
	.byte	26,21,148,1,9,1,27
	.byte	'Default_Init_Task',0,0,27
	.byte	'Default_Init_Task_Trusted',0,1,27
	.byte	'IdleTask_OsCore0',0,2,27
	.byte	'bsw_task',0,3,27
	.byte	'swc_init',0,4,27
	.byte	'swc_task',0,5,27
	.byte	'INVALID_TASK',0,6,27
	.byte	'OS_TASKID_COUNT',0,6,0,24
	.byte	'TaskType',0,21,158,1,3
	.word	25935
	.byte	24
	.byte	'Os_Hal_AddressType',0,22,61,16
	.word	641
	.byte	15
	.byte	'Os_ExceptionContextType_Tag',0,23,71,8,160,1,16
	.byte	'AddressRegisters',0
	.word	14044
	.byte	64,2,35,0,16
	.byte	'DataRegisters',0
	.word	14044
	.byte	64,2,35,64,16
	.byte	'Ra',0
	.word	641
	.byte	4,3,35,128,1,16
	.byte	'Psw',0
	.word	641
	.byte	4,3,35,132,1,16
	.byte	'ExceptionSource',0
	.word	641
	.byte	4,3,35,136,1,16
	.byte	'Pcpn',0
	.word	641
	.byte	4,3,35,140,1,16
	.byte	'Pie',0
	.word	641
	.byte	4,3,35,144,1,16
	.byte	'MpuRegionForStackLow',0
	.word	641
	.byte	4,3,35,148,1,16
	.byte	'MpuRegionForStackUpper',0
	.word	641
	.byte	4,3,35,152,1,16
	.byte	'RawPCXI',0
	.word	641
	.byte	4,3,35,156,1,0,24
	.byte	'Os_ExceptionContextType',0,22,66,44
	.word	26120
	.byte	24
	.byte	'Os_InterruptSourceIdType',0,24,238,1,16
	.word	641
	.byte	24
	.byte	'Os_ExceptionSourceIdType',0,24,246,1,16
	.word	641
	.byte	26,24,161,2,9,1,27
	.byte	'RUNNING',0,0,27
	.byte	'READY',0,1,27
	.byte	'WAITING',0,2,27
	.byte	'SUSPENDED',0,3,0,24
	.byte	'TaskStateType',0,24,175,2,3
	.word	26468
	.byte	24
	.byte	'EventMaskType',0,24,182,2,16
	.word	1088
	.byte	24
	.byte	'Os_TickType',0,24,200,2,19
	.word	641
	.byte	24
	.byte	'TickType',0,24,206,2,21
	.word	641
	.byte	25,24,220,2,9,12,16
	.byte	'maxallowedvalue',0
	.word	641
	.byte	4,2,35,0,16
	.byte	'ticksperbase',0
	.word	641
	.byte	4,2,35,4,16
	.byte	'mincycle',0
	.word	641
	.byte	4,2,35,8,0,24
	.byte	'AlarmBaseType',0,24,228,2,2
	.word	26600
	.byte	26,24,128,3,9,1,27
	.byte	'APPLICATION_TERMINATED',0,0,27
	.byte	'APPLICATION_RESTARTING',0,1,27
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,24
	.byte	'ApplicationStateType',0,24,133,3,3
	.word	26695
	.byte	26,24,177,3,9,1,27
	.byte	'OSServiceId_GetApplicationID',0,0,27
	.byte	'OSServiceId_GetISRID',0,1,27
	.byte	'OSServiceId_CallTrustedFunction',0,2,27
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,27
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,27
	.byte	'OSServiceId_CheckObjectAccess',0,5,27
	.byte	'OSServiceId_CheckObjectOwnership',0,6,27
	.byte	'OSServiceId_StartScheduleTableRel',0,7,27
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,27
	.byte	'OSServiceId_StopScheduleTable',0,9,27
	.byte	'OSServiceId_NextScheduleTable',0,10,27
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,27
	.byte	'OSServiceId_SyncScheduleTable',0,12,27
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,27
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,27
	.byte	'OSServiceId_IncrementCounter',0,15,27
	.byte	'OSServiceId_GetCounterValue',0,16,27
	.byte	'OSServiceId_GetElapsedValue',0,17,27
	.byte	'OSServiceId_TerminateApplication',0,18,27
	.byte	'OSServiceId_AllowAccess',0,19,27
	.byte	'OSServiceId_GetApplicationState',0,20,27
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,27
	.byte	'OSServiceId_GetCoreID',0,22,27
	.byte	'OSServiceId_StartCore',0,23,27
	.byte	'OSServiceId_StartNonAutosarCore',0,24,27
	.byte	'OSServiceId_GetSpinlock',0,25,27
	.byte	'OSServiceId_ReleaseSpinlock',0,26,27
	.byte	'OSServiceId_TryToGetSpinlock',0,27,27
	.byte	'OSServiceId_ShutdownAllCores',0,28,27
	.byte	'OSServiceId_ControlIdle',0,29,27
	.byte	'OSServiceId_IocSend',0,30,27
	.byte	'OSServiceId_IocWrite',0,31,27
	.byte	'OSServiceId_IocSendGroup',0,32,27
	.byte	'OSServiceId_IocWriteGroup',0,33,27
	.byte	'OSServiceId_IocReceive',0,34,27
	.byte	'OSServiceId_IocRead',0,35,27
	.byte	'OSServiceId_IocReceiveGroup',0,36,27
	.byte	'OSServiceId_IocReadGroup',0,37,27
	.byte	'OSServiceId_IocEmptyQueue',0,38,27
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,27
	.byte	'OSServiceId_GetExceptionContext',0,160,1,27
	.byte	'OSServiceId_SetExceptionContext',0,161,1,27
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,27
	.byte	'OSServiceId_AppKill',0,163,1,27
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,27
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,27
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,27
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,27
	.byte	'OSServiceId_TimerIsr',0,168,1,27
	.byte	'OSServiceId_IsrWrapper',0,169,1,27
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,27
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,27
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,27
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,27
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,27
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,27
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,27
	.byte	'OSServiceId_GetSemaphore',0,177,1,27
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,27
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,27
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,27
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,27
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,27
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,27
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,27
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,27
	.byte	'OSServiceId_HookCallCallback',0,186,1,27
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,27
	.byte	'OSServiceId_IsInterruptPending',0,188,1,27
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,27
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,27
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,27
	.byte	'OSServiceId_GetCoreStartState',0,192,1,27
	.byte	'OSServiceId_StartOS',0,208,1,27
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,27
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,27
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,27
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,27
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,27
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,27
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,27
	.byte	'OSServiceId_ActivateTask',0,217,1,27
	.byte	'OSServiceId_TerminateTask',0,218,1,27
	.byte	'OSServiceId_ChainTask',0,219,1,27
	.byte	'OSServiceId_GetTaskID',0,220,1,27
	.byte	'OSServiceId_GetTaskState',0,221,1,27
	.byte	'OSServiceId_Schedule',0,222,1,27
	.byte	'OSServiceId_SetEvent',0,223,1,27
	.byte	'OSServiceId_ClearEvent',0,224,1,27
	.byte	'OSServiceId_GetEvent',0,225,1,27
	.byte	'OSServiceId_WaitEvent',0,226,1,27
	.byte	'OSServiceId_GetAlarmBase',0,227,1,27
	.byte	'OSServiceId_GetAlarm',0,228,1,27
	.byte	'OSServiceId_SetRelAlarm',0,229,1,27
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,27
	.byte	'OSServiceId_CancelAlarm',0,231,1,27
	.byte	'OSServiceId_GetResource',0,232,1,27
	.byte	'OSServiceId_ReleaseResource',0,233,1,27
	.byte	'OSSERVICEID_COUNT',0,255,1,0,24
	.byte	'OSServiceIdType',0,24,156,4,3
	.word	26807
	.byte	26,24,172,4,9,2,27
	.byte	'OS_STATUS_OK',0,0,27
	.byte	'OS_STATUS_CALLEVEL',0,2,27
	.byte	'OS_STATUS_LIMIT',0,4,27
	.byte	'OS_STATUS_RESOURCE',0,6,27
	.byte	'OS_STATUS_SERVICEID',0,9,27
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,27
	.byte	'OS_STATUS_MISSINGEND',0,11,27
	.byte	'OS_STATUS_DISABLEDINT',0,12,27
	.byte	'OS_STATUS_STACKFAULT',0,13,27
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,27
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,27
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,27
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,27
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,27
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,27
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,27
	.byte	'OS_STATUS_SPINLOCK',0,21,27
	.byte	'OS_STATUS_CORE',0,22,27
	.byte	'OS_STATUS_OVERFLOW',0,245,1,27
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,27
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,27
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,27
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,27
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,27
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,27
	.byte	'OS_STATUS_API_ERROR',0,252,1,27
	.byte	'OS_STATUS_ASSERTION',0,253,1,27
	.byte	'OS_STATUS_OVERLOAD',0,254,1,27
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,27
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,27
	.byte	'OS_STATUS_ID_1',0,131,2,27
	.byte	'OS_STATUS_UNLOCKED',0,133,2,27
	.byte	'OS_STATUS_STATE_1',0,135,2,27
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,27
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,27
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,27
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,27
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,27
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,27
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,27
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,27
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,27
	.byte	'OS_STATUS_ID_2',0,131,4,27
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,27
	.byte	'OS_STATUS_STATE_2',0,135,4,27
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,27
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,27
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,27
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,27
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,27
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,27
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,27
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,27
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,27
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,27
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,27
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,27
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,27
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,27
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,27
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,27
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,27
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,27
	.byte	'OS_STATUS_STOPPED_1',0,133,10,27
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,27
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,27
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,27
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,27
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,27
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,27
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,27
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,27
	.byte	'OS_STATUS_NEXTED_1',0,133,14,27
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,27
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,27
	.byte	'OS_STATUS_LOCKED',0,129,16,27
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,27
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,27
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,27
	.byte	'OS_STATUS_PRIORITY',0,129,18,27
	.byte	'OS_STATUS_ORDER',0,133,18,27
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,27
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,27
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,27
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,27
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,27
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,24
	.byte	'Os_StatusType',0,24,232,5,3
	.word	29977
	.byte	25,24,133,6,9,4,16
	.byte	'Service',0
	.word	26807
	.byte	1,2,35,0,16
	.byte	'Error',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'DetailedError',0
	.word	29977
	.byte	2,2,35,2,0,24
	.byte	'Os_ErrorInformationType',0,24,143,6,3
	.word	32507
	.byte	26,24,175,6,9,1,27
	.byte	'SCHEDULETABLE_STOPPED',0,0,27
	.byte	'SCHEDULETABLE_NEXT',0,1,27
	.byte	'SCHEDULETABLE_WAITING',0,2,27
	.byte	'SCHEDULETABLE_RUNNING',0,3,27
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,24
	.byte	'ScheduleTableStatusType',0,24,192,6,3
	.word	32602
	.byte	24
	.byte	'Os_AccessCheckAddress',0,24,199,6,29
	.word	641
	.byte	26,24,211,6,9,1,27
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,27
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,27
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,27
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,27
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,27
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,27
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,27
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,27
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,27
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,27
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,27
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,27
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,27
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,27
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,27
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,27
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,27
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,27
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,27
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,24
	.byte	'Os_MemAccessType',0,24,233,6,3
	.word	32806
	.byte	24
	.byte	'PduR_LockFunctionType',0,25,218,8,9
	.word	2506
	.byte	30
	.word	133
	.byte	1,1,9
	.word	133
	.byte	9
	.word	16294
	.byte	0,11
	.word	33366
	.byte	24
	.byte	'PduR_TransmitFctPtrType',0,25,222,8,9
	.word	33384
	.byte	24
	.byte	'PduR_IfRxIndicationType',0,25,224,8,9
	.word	16313
	.byte	24
	.byte	'PduR_IfTxConfirmationFctPtrType',0,25,225,8,9
	.word	3670
	.byte	24
	.byte	'PduR_hasIfRoutingOfGeneralPropertiesRomType',0,25,207,9,17
	.word	133
	.byte	24
	.byte	'PduR_InitializedType',0,25,210,9,17
	.word	133
	.byte	24
	.byte	'PduR_DestApplicationManagerRomIdxOfMmRomType',0,25,219,9,15
	.word	133
	.byte	24
	.byte	'PduR_MaskedBitsOfMmRomType',0,25,225,9,15
	.word	133
	.byte	24
	.byte	'PduR_RmGDestRomStartIdxOfMmRomType',0,25,231,9,15
	.word	133
	.byte	24
	.byte	'PduR_MmRomIndType',0,25,240,9,15
	.word	133
	.byte	24
	.byte	'PduR_PartitionSNVOfPartitionIdentifiersType',0,25,246,9,16
	.word	641
	.byte	24
	.byte	'PduR_PduLengthHandlingStrategyOfRmDestRomType',0,25,252,9,15
	.word	133
	.byte	24
	.byte	'PduR_RmGDestRomIdxOfRmDestRomType',0,25,255,9,15
	.word	133
	.byte	24
	.byte	'PduR_RmSrcRomIdxOfRmDestRomType',0,25,130,10,15
	.word	133
	.byte	24
	.byte	'PduR_RoutingTypeOfRmDestRomType',0,25,133,10,15
	.word	133
	.byte	24
	.byte	'PduR_DestHndOfRmGDestRomType',0,25,136,10,15
	.word	133
	.byte	24
	.byte	'PduR_DirectionOfRmGDestRomType',0,25,139,10,15
	.word	133
	.byte	24
	.byte	'PduR_MaxPduLengthOfRmGDestRomType',0,25,145,10,15
	.word	133
	.byte	24
	.byte	'PduR_MmRomIdxOfRmGDestRomType',0,25,148,10,15
	.word	133
	.byte	24
	.byte	'PduR_PartitionIndexOfCslOfRmGDestRomType',0,25,151,10,15
	.word	133
	.byte	24
	.byte	'PduR_RmDestRomIdxOfRmGDestRomType',0,25,157,10,15
	.word	133
	.byte	24
	.byte	'PduR_MmRomIdxOfRmSrcRomType',0,25,166,10,15
	.word	133
	.byte	24
	.byte	'PduR_PartitionIndexOfCslOfRmSrcRomType',0,25,169,10,15
	.word	133
	.byte	24
	.byte	'PduR_RmDestRomStartIdxOfRmSrcRomType',0,25,178,10,15
	.word	133
	.byte	24
	.byte	'PduR_SrcHndOfRmSrcRomType',0,25,181,10,15
	.word	133
	.byte	24
	.byte	'PduR_RmTransmitFctPtrIdxOfTx2LoType',0,25,250,10,15
	.word	133
	.byte	24
	.byte	'PduR_PartitionIndexOfCslOfTxIf2UpType',0,25,253,10,15
	.word	133
	.byte	24
	.byte	'PduR_RmGDestRomIdxOfTxIf2UpType',0,25,128,11,15
	.word	133
	.byte	24
	.byte	'PduR_TxConfirmationUsedOfTxIf2UpType',0,25,131,11,17
	.word	133
	.byte	24
	.byte	'PduR_RmTransmitFctPtrType',0,25,144,11,9
	.word	33384
	.byte	15
	.byte	'sPduR_DestApplicationManagerRomType',0,25,182,11,16,1,16
	.byte	'PduR_DestApplicationManagerRomNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_DestApplicationManagerRomType',0,25,185,11,3
	.word	34606
	.byte	15
	.byte	'sPduR_ExclusiveAreaRomType',0,25,188,11,16,8,16
	.byte	'LockOfExclusiveAreaRom',0
	.word	33335
	.byte	4,2,35,0,16
	.byte	'UnlockOfExclusiveAreaRom',0
	.word	33335
	.byte	4,2,35,4,0,24
	.byte	'PduR_ExclusiveAreaRomType',0,25,192,11,3
	.word	34742
	.byte	11
	.word	2503
	.byte	15
	.byte	'sPduR_GeneralPropertiesRomType',0,25,195,11,16,1,16
	.byte	'hasIfRoutingOfGeneralPropertiesRom',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_GeneralPropertiesRomType',0,25,198,11,3
	.word	34882
	.byte	15
	.byte	'sPduR_LockRomType',0,25,201,11,16,1,16
	.byte	'PduR_LockRomNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_LockRomType',0,25,204,11,3
	.word	35003
	.byte	15
	.byte	'sPduR_MmRomType',0,25,207,11,16,16,16
	.byte	'DestApplicationManagerRomIdxOfMmRom',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'MaskedBitsOfMmRom',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'RmGDestRomStartIdxOfMmRom',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'UpIfRxIndicationFctPtrOfMmRom',0
	.word	33422
	.byte	4,2,35,4,16
	.byte	'UpIfTxConfirmationFctPtrOfMmRom',0
	.word	33455
	.byte	4,2,35,8,16
	.byte	'LoIfTransmitFctPtrOfMmRom',0
	.word	33389
	.byte	4,2,35,12,0,24
	.byte	'PduR_MmRomType',0,25,215,11,3
	.word	35085
	.byte	11
	.word	16299
	.byte	11
	.word	3661
	.byte	11
	.word	33366
	.byte	15
	.byte	'sPduR_PartitionIdentifiersType',0,25,218,11,16,4,16
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	641
	.byte	4,2,35,0,0,24
	.byte	'PduR_PartitionIdentifiersType',0,25,221,11,3
	.word	35369
	.byte	15
	.byte	'sPduR_RmDestRomType',0,25,224,11,16,4,16
	.byte	'PduLengthHandlingStrategyOfRmDestRom',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'RmGDestRomIdxOfRmDestRom',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'RmSrcRomIdxOfRmDestRom',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'RoutingTypeOfRmDestRom',0
	.word	133
	.byte	1,2,35,3,0,24
	.byte	'PduR_RmDestRomType',0,25,230,11,3
	.word	35490
	.byte	15
	.byte	'sPduR_RmGDestRomType',0,25,233,11,16,6,16
	.byte	'DestHndOfRmGDestRom',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'DirectionOfRmGDestRom',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'MaxPduLengthOfRmGDestRom',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'MmRomIdxOfRmGDestRom',0
	.word	133
	.byte	1,2,35,3,16
	.byte	'PartitionIndexOfCslOfRmGDestRom',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'RmDestRomIdxOfRmGDestRom',0
	.word	133
	.byte	1,2,35,5,0,24
	.byte	'PduR_RmGDestRomType',0,25,241,11,3
	.word	35689
	.byte	15
	.byte	'sPduR_RmSrcRomType',0,25,244,11,16,4,16
	.byte	'MmRomIdxOfRmSrcRom',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'PartitionIndexOfCslOfRmSrcRom',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'RmDestRomStartIdxOfRmSrcRom',0
	.word	133
	.byte	1,2,35,2,16
	.byte	'SrcHndOfRmSrcRom',0
	.word	133
	.byte	1,2,35,3,0,24
	.byte	'PduR_RmSrcRomType',0,25,250,11,3
	.word	35945
	.byte	15
	.byte	'sPduR_RxIf2DestType',0,25,253,11,16,1,16
	.byte	'PduR_RxIf2DestNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_RxIf2DestType',0,25,128,12,3
	.word	36128
	.byte	15
	.byte	'sPduR_SrcApplicationRomType',0,25,131,12,16,1,16
	.byte	'PduR_SrcApplicationRomNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_SrcApplicationRomType',0,25,134,12,3
	.word	36216
	.byte	15
	.byte	'sPduR_Tx2LoType',0,25,137,12,16,1,16
	.byte	'RmTransmitFctPtrIdxOfTx2Lo',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_Tx2LoType',0,25,140,12,3
	.word	36328
	.byte	15
	.byte	'sPduR_TxIf2UpType',0,25,143,12,16,4,16
	.byte	'TxConfirmationUsedOfTxIf2Up',0
	.word	133
	.byte	1,2,35,0,16
	.byte	'PartitionIndexOfCslOfTxIf2Up',0
	.word	133
	.byte	1,2,35,1,16
	.byte	'RmGDestRomIdxOfTxIf2Up',0
	.word	133
	.byte	1,2,35,2,0,24
	.byte	'PduR_TxIf2UpType',0,25,148,12,3
	.word	36411
	.byte	11
	.word	133
	.byte	24
	.byte	'PduR_InitializedPtrType',0,25,169,12,66
	.word	36569
	.byte	15
	.byte	'sPduR_PCPartitionConfigType',0,25,217,12,16,4,16
	.byte	'InitializedOfPCPartitionConfig',0
	.word	36574
	.byte	4,2,35,0,0,24
	.byte	'PduR_PCPartitionConfigType',0,25,220,12,3
	.word	36607
	.byte	11
	.word	133
	.byte	15
	.byte	'sPduR_PCConfigType',0,25,235,12,16,1,16
	.byte	'PduR_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'PduR_PCConfigType',0,25,238,12,3
	.word	36723
	.byte	15
	.byte	'CanSM_ChannelVarRecordTypeTag',0,26,55,16,20,16
	.byte	'CanSM_UniversalTimer',0
	.word	519
	.byte	2,2,35,0,16
	.byte	'CanSM_LastValidBaudRate',0
	.word	519
	.byte	2,2,35,2,16
	.byte	'CanSM_RequestedComMode',0
	.word	133
	.byte	1,2,35,4,16
	.byte	'CanSM_IndicatedComMode',0
	.word	133
	.byte	1,2,35,5,16
	.byte	'CanSM_NewComMode',0
	.word	133
	.byte	1,2,35,6,16
	.byte	'CanSM_EnfroceComModeIndication',0
	.word	133
	.byte	1,2,35,7,16
	.byte	'CanSM_RamCheckState',0
	.word	133
	.byte	1,2,35,8,16
	.byte	'CanSM_CurrentState',0
	.word	133
	.byte	1,2,35,9,16
	.byte	'CanSM_ModeRequestRepetitionCounter',0
	.word	133
	.byte	1,2,35,10,16
	.byte	'CanSM_ModeIndicationResponsible',0
	.word	133
	.byte	1,2,35,11,16
	.byte	'CanSM_BswMIndicatedState',0
	.word	133
	.byte	1,2,35,12,16
	.byte	'CanSM_BswMNewState',0
	.word	133
	.byte	1,2,35,13,16
	.byte	'CanSM_BusOffCounter',0
	.word	133
	.byte	1,2,35,14,16
	.byte	'CanSM_BusOffFlag',0
	.word	133
	.byte	1,2,35,15,16
	.byte	'CanSM_TxOnlineDelayTime',0
	.word	133
	.byte	1,2,35,16,16
	.byte	'CanSM_TxTimeoutEndIndicationFlag',0
	.word	133
	.byte	1,2,35,17,0,24
	.byte	'CanSM_ChannelVarRecordType',0,26,73,3
	.word	36808
	.byte	24
	.byte	'CanSM_ChannelConfigIterType',0,27,223,3,21
	.word	133
	.byte	15
	.byte	'sCanSM_ChannelConfigType',0,27,165,4,16,1,16
	.byte	'CanSM_ChannelConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanSM_ChannelConfigType',0,27,168,4,3
	.word	37443
	.byte	15
	.byte	'sCanSM_PCConfigType',0,27,213,4,16,1,16
	.byte	'CanSM_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,24
	.byte	'CanSM_PCConfigType',0,27,216,4,3
	.word	37546
	.byte	31,48
	.word	3839
	.byte	32,11,0,7
	.word	37634
	.byte	34
	.byte	'BswM_ActionLists',0,28,219,3,48
	.word	37643
	.byte	1,1,31,7
	.word	3932
	.byte	32,6,0,7
	.word	37676
	.byte	34
	.byte	'BswM_DeferredRules',0,28,238,3,50
	.word	37685
	.byte	1,1,31,4
	.word	3675
	.byte	32,0,0,7
	.word	37720
	.byte	34
	.byte	'BswM_InitGenVarAndInitAL',0,28,251,3,56
	.word	37729
	.byte	1,1,11
	.word	3661
	.byte	31,4
	.word	3803
	.byte	32,0,0,7
	.word	37775
	.byte	34
	.byte	'BswM_ModeNotificationFct',0,28,136,4,54
	.word	37784
	.byte	1,1,11
	.word	2503
	.byte	31,80
	.word	4404
	.byte	32,9,0,7
	.word	37830
	.byte	34
	.byte	'BswM_Rules',0,28,178,4,42
	.word	37839
	.byte	1,1,31,8
	.word	133
	.byte	32,7,0,7
	.word	37866
	.byte	34
	.byte	'BswM_RulesInd',0,28,195,4,45
	.word	37875
	.byte	1,1,7
	.word	37775
	.byte	34
	.byte	'BswM_SwcModeRequestUpdateFct',0,28,208,4,54
	.word	37905
	.byte	1,1,34
	.byte	'BswM_ActionListQueue',0,28,225,4,56
	.word	5603
	.byte	1,1,31,2
	.word	519
	.byte	32,0,0,34
	.byte	'BswM_GenericState',0,28,255,4,44
	.word	37982
	.byte	1,1,34
	.byte	'BswM_Initialized',0,28,140,5,51
	.word	133
	.byte	1,1,31,1
	.word	133
	.byte	32,0,0,34
	.byte	'BswM_ModeRequestQueue',0,28,157,5,56
	.word	38048
	.byte	1,1,34
	.byte	'BswM_QueueSemaphore',0,28,170,5,54
	.word	133
	.byte	1,1,34
	.byte	'BswM_QueueWritten',0,28,183,5,52
	.word	133
	.byte	1,1,34
	.byte	'BswM_RuleStates',0,28,200,5,51
	.word	5705
	.byte	1,1,34
	.byte	'BswM_TimerState',0,28,217,5,51
	.word	5797
	.byte	1,1,34
	.byte	'BswM_TimerValue',0,28,234,5,51
	.word	5889
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,11,1,0,0,7,38,0,73,19,0,0,8,46
	.byte	1,3,8,54,15,39,12,63,12,60,12,0,0,9,5,0,73,19,0,0,10,53,0,73,19,0,0,11,15,0,73,19,0,0,12,46,1,3,8,73,19
	.byte	54,15,39,12,63,12,60,12,0,0,13,5,0,3,8,73,19,0,0,14,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12
	.byte	60,12,0,0,15,19,1,3,8,58,15,59,15,57,15,11,15,0,0,16,13,0,3,8,73,19,11,15,56,9,0,0,17,46,0,3,8,58,15,59
	.byte	15,57,15,54,15,39,12,63,12,60,12,0,0,18,46,1,49,19,0,0,19,5,0,49,19,0,0,20,29,1,49,19,0,0,21,11,0,49,19
	.byte	0,0,22,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,23,21,0,54,15,0,0,24,22,0,3,8,58,15,59,15,57,15
	.byte	73,19,0,0,25,19,1,58,15,59,15,57,15,11,15,0,0,26,4,1,58,15,59,15,57,15,11,15,0,0,27,40,0,3,8,28,13,0,0
	.byte	28,21,0,54,15,39,12,0,0,29,21,1,54,15,39,12,0,0,30,21,1,73,19,54,15,39,12,0,0,31,1,1,11,15,73,19,0,0,32
	.byte	33,0,47,15,0,0,33,23,1,3,8,58,15,59,15,57,15,11,15,0,0,34,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12
	.byte	0,0,35,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,36,23,1,58,15,59,15,57,15,11,15,0,0,37,13,0,11,15,73
	.byte	19,13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L133:
	.word	.L320-.L319
.L319:
	.half	3
	.word	.L322-.L321
.L321:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation',0,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0
	.byte	'Det.h',0,1,0,0
	.byte	'BswM_Cfg.h',0,2,0,0
	.byte	'Os.h',0,3,0,0
	.byte	'Platform_Types.h',0,4,0,0
	.byte	'Std_Types.h',0,4,0,0
	.byte	'ComStack_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,4,0,0
	.byte	'Det_Cfg.h',0,2,0,0
	.byte	'Rte_Type.h',0,2,0,0
	.byte	'ComM_Cfg.h',0,2,0,0
	.byte	'CanSM_BswM.h',0,5,0,0
	.byte	'EcuM_Generated_Types.h',0,2,0,0
	.byte	'EcuM_Cfg.h',0,2,0,0
	.byte	'Can_DrvGeneralTypes.h',0,2,0,0
	.byte	'Can_Cfg.h',0,2,0,0
	.byte	'Can.h',0,6,0,0
	.byte	'CanIf_Cfg.h',0,2,0,0
	.byte	'CanIf_Types.h',0,7,0,0
	.byte	'Com_Cfg.h',0,2,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Hal_Os_Types.h',0,3,0,0
	.byte	'Os_Hal_OsInt.h',0,3,0,0
	.byte	'Os_Types.h',0,3,0,0
	.byte	'PduR_Lcfg.h',0,2,0,0
	.byte	'CanSM_Int.h',0,5,0,0
	.byte	'CanSM_Cfg.h',0,2,0,0
	.byte	'BswM_Private_Cfg.h',0,2,0,0,0
.L322:
.L320:
	.sdecl	'.debug_info',debug,cluster('BswM_ComM_CurrentMode')
	.sect	'.debug_info'
.L134:
	.word	261
	.half	3
	.word	.L135
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L137,.L136
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_ComM_CurrentMode',0,1,232,14,23,1,1,1
	.word	.L119,.L209,.L118
	.byte	4
	.byte	'Network',0,1,232,14,63
	.word	.L210,.L211
	.byte	4
	.byte	'RequestedMode',0,1,232,14,86
	.word	.L210,.L212
	.byte	5
	.word	.L119,.L209
	.byte	6
	.byte	'errorId',0,1,235,14,9
	.word	.L210,.L213
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_ComM_CurrentMode')
	.sect	'.debug_abbrev'
.L135:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_ComM_CurrentMode')
	.sect	'.debug_line'
.L136:
	.word	.L324-.L323
.L323:
	.half	3
	.word	.L326-.L325
.L325:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L326:
	.byte	5,17,7,0,5,2
	.word	.L119
	.byte	3,234,14,1,5,8,3,17,1,5,13,9
	.half	.L327-.L119
	.byte	3,2,1,5,29,1,5,8,9
	.half	.L39-.L327
	.byte	3,2,1,5,13,7,9
	.half	.L328-.L39
	.byte	3,2,1,5,43,1,5,8,9
	.half	.L41-.L328
	.byte	3,3,1,5,13,9
	.half	.L329-.L41
	.byte	3,2,1,5,3,9
	.half	.L40-.L329
	.byte	3,27,1,5,27,7,9
	.half	.L330-.L40
	.byte	3,2,1,5,65,9
	.half	.L309-.L330
	.byte	1,5,91,9
	.half	.L331-.L309
	.byte	1,5,1,7,9
	.half	.L44-.L331
	.byte	3,5,1,7,9
	.half	.L138-.L44
	.byte	0,1,1
.L324:
	.sdecl	'.debug_ranges',debug,cluster('BswM_ComM_CurrentMode')
	.sect	'.debug_ranges'
.L137:
	.word	-1,.L119,0,.L138-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_CanSM_CurrentState')
	.sect	'.debug_info'
.L139:
	.word	262
	.half	3
	.word	.L140
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L142,.L141
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_CanSM_CurrentState',0,1,209,17,23,1,1,1
	.word	.L121,.L214,.L120
	.byte	4
	.byte	'Network',0,1,209,17,65
	.word	.L210,.L215
	.byte	4
	.byte	'CurrentState',0,1,209,17,101
	.word	.L210,.L216
	.byte	5
	.word	.L121,.L214
	.byte	6
	.byte	'errorId',0,1,212,17,9
	.word	.L210,.L217
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_CanSM_CurrentState')
	.sect	'.debug_abbrev'
.L140:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_CanSM_CurrentState')
	.sect	'.debug_line'
.L141:
	.word	.L333-.L332
.L332:
	.half	3
	.word	.L335-.L334
.L334:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L335:
	.byte	5,17,7,0,5,2
	.word	.L121
	.byte	3,211,17,1,5,8,3,16,1,5,13,9
	.half	.L336-.L121
	.byte	3,2,1,5,29,1,5,8,9
	.half	.L45-.L336
	.byte	3,2,1,5,13,7,9
	.half	.L337-.L45
	.byte	3,2,1,5,43,1,5,8,9
	.half	.L47-.L337
	.byte	3,3,1,5,13,9
	.half	.L338-.L47
	.byte	3,2,1,5,3,9
	.half	.L46-.L338
	.byte	3,27,1,5,27,7,9
	.half	.L339-.L46
	.byte	3,2,1,5,65,9
	.half	.L311-.L339
	.byte	1,5,93,9
	.half	.L340-.L311
	.byte	1,5,1,7,9
	.half	.L50-.L340
	.byte	3,5,1,7,9
	.half	.L143-.L50
	.byte	0,1,1
.L333:
	.sdecl	'.debug_ranges',debug,cluster('BswM_CanSM_CurrentState')
	.sect	'.debug_ranges'
.L142:
	.word	-1,.L121,0,.L143-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_EcuM_CurrentState')
	.sect	'.debug_info'
.L144:
	.word	240
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L147,.L146
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_EcuM_CurrentState',0,1,198,23,23,1,1,1
	.word	.L123,.L218,.L122
	.byte	4
	.byte	'CurrentState',0,1,198,23,61
	.word	.L210,.L219
	.byte	5
	.word	.L123,.L218
	.byte	6
	.byte	'errorId',0,1,201,23,9
	.word	.L210,.L220
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_EcuM_CurrentState')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_EcuM_CurrentState')
	.sect	'.debug_line'
.L146:
	.word	.L342-.L341
.L341:
	.half	3
	.word	.L344-.L343
.L343:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L344:
	.byte	5,17,7,0,5,2
	.word	.L123
	.byte	3,200,23,1,5,8,3,16,1,5,13,9
	.half	.L345-.L123
	.byte	3,2,1,5,29,1,5,24,9
	.half	.L51-.L345
	.byte	3,5,1,5,7,9
	.half	.L346-.L51
	.byte	1,5,24,7,9
	.half	.L347-.L346
	.byte	3,1,1,5,21,9
	.half	.L348-.L347
	.byte	1,5,24,7,9
	.half	.L349-.L348
	.byte	3,1,1,5,21,9
	.half	.L350-.L349
	.byte	1,5,24,7,9
	.half	.L351-.L350
	.byte	3,1,1,5,21,9
	.half	.L352-.L351
	.byte	1,5,24,7,9
	.half	.L353-.L352
	.byte	3,1,1,5,21,9
	.half	.L354-.L353
	.byte	1,5,24,7,9
	.half	.L355-.L354
	.byte	3,1,1,5,21,9
	.half	.L356-.L355
	.byte	1,5,24,7,9
	.half	.L357-.L356
	.byte	3,1,1,5,21,9
	.half	.L358-.L357
	.byte	1,5,24,7,9
	.half	.L359-.L358
	.byte	3,1,1,5,21,9
	.half	.L360-.L359
	.byte	1,5,24,7,9
	.half	.L361-.L360
	.byte	3,1,1,5,21,9
	.half	.L362-.L361
	.byte	1,5,24,7,9
	.half	.L363-.L362
	.byte	3,1,1,5,21,9
	.half	.L364-.L363
	.byte	1,5,24,7,9
	.half	.L365-.L364
	.byte	3,1,1,5,21,9
	.half	.L366-.L365
	.byte	1,5,24,7,9
	.half	.L367-.L366
	.byte	3,1,1,5,21,9
	.half	.L368-.L367
	.byte	1,5,24,7,9
	.half	.L369-.L368
	.byte	3,1,1,5,21,9
	.half	.L370-.L369
	.byte	1,5,24,7,9
	.half	.L371-.L370
	.byte	3,1,1,5,21,9
	.half	.L372-.L371
	.byte	1,5,24,7,9
	.half	.L373-.L372
	.byte	3,1,1,5,21,9
	.half	.L374-.L373
	.byte	1,5,24,7,9
	.half	.L375-.L374
	.byte	3,1,1,5,21,9
	.half	.L376-.L375
	.byte	1,5,24,7,9
	.half	.L377-.L376
	.byte	3,1,1,5,21,9
	.half	.L378-.L377
	.byte	1,5,24,7,9
	.half	.L379-.L378
	.byte	3,1,1,5,21,9
	.half	.L380-.L379
	.byte	1,5,24,7,9
	.half	.L381-.L380
	.byte	3,1,1,5,21,9
	.half	.L382-.L381
	.byte	1,5,24,7,9
	.half	.L383-.L382
	.byte	3,1,1,5,21,9
	.half	.L384-.L383
	.byte	1,7,9
	.half	.L385-.L384
	.byte	3,1,1,5,13,9
	.half	.L386-.L385
	.byte	3,3,1,5,3,9
	.half	.L52-.L386
	.byte	3,24,1,5,27,7,9
	.half	.L387-.L52
	.byte	3,2,1,5,65,9
	.half	.L312-.L387
	.byte	1,5,92,9
	.half	.L388-.L312
	.byte	1,5,1,7,9
	.half	.L74-.L388
	.byte	3,5,1,7,9
	.half	.L148-.L74
	.byte	0,1,1
.L342:
	.sdecl	'.debug_ranges',debug,cluster('BswM_EcuM_CurrentState')
	.sect	'.debug_ranges'
.L147:
	.word	-1,.L123,0,.L148-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.debug_info'
.L149:
	.word	254
	.half	3
	.word	.L150
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L152,.L151
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_EcuM_CurrentWakeup',0,1,165,24,23,1,1,1
	.word	.L125,.L221,.L124
	.byte	4
	.byte	'source',0,1,165,24,69
	.word	.L222,.L223
	.byte	4
	.byte	'state',0,1,165,24,98
	.word	.L210,.L224
	.byte	5
	.word	.L125,.L221
	.byte	6
	.byte	'errorId',0,1,168,24,9
	.word	.L210,.L225
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.debug_abbrev'
.L150:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.debug_line'
.L151:
	.word	.L390-.L389
.L389:
	.half	3
	.word	.L392-.L391
.L391:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L392:
	.byte	5,17,7,0,5,2
	.word	.L125
	.byte	3,167,24,1,5,8,3,16,1,5,13,9
	.half	.L393-.L125
	.byte	3,2,1,5,29,1,5,8,9
	.half	.L75-.L393
	.byte	3,3,1,5,13,9
	.half	.L394-.L75
	.byte	3,2,1,5,3,9
	.half	.L76-.L394
	.byte	3,26,1,5,27,7,9
	.half	.L395-.L76
	.byte	3,2,1,5,65,9
	.half	.L313-.L395
	.byte	1,5,93,9
	.half	.L396-.L313
	.byte	1,5,1,7,9
	.half	.L78-.L396
	.byte	3,5,1,7,9
	.half	.L153-.L78
	.byte	0,1,1
.L390:
	.sdecl	'.debug_ranges',debug,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.debug_ranges'
.L152:
	.word	-1,.L125,0,.L153-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_EcuM_RequestedState')
	.sect	'.debug_info'
.L154:
	.word	262
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L157,.L156
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_EcuM_RequestedState',0,1,237,24,23,1,1,1
	.word	.L127,.L226,.L126
	.byte	4
	.byte	'State',0,1,237,24,63
	.word	.L210,.L227
	.byte	4
	.byte	'CurrentStatus',0,1,237,24,89
	.word	.L210,.L228
	.byte	5
	.word	.L127,.L226
	.byte	6
	.byte	'errorId',0,1,240,24,9
	.word	.L210,.L229
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_EcuM_RequestedState')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_EcuM_RequestedState')
	.sect	'.debug_line'
.L156:
	.word	.L398-.L397
.L397:
	.half	3
	.word	.L400-.L399
.L399:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L400:
	.byte	5,17,7,0,5,2
	.word	.L127
	.byte	3,239,24,1,5,8,3,16,1,5,13,9
	.half	.L401-.L127
	.byte	3,2,1,5,29,1,5,24,9
	.half	.L79-.L401
	.byte	3,2,1,5,14,9
	.half	.L402-.L79
	.byte	1,5,57,7,9
	.half	.L403-.L402
	.byte	1,5,54,9
	.half	.L404-.L403
	.byte	1,5,13,7,9
	.half	.L405-.L404
	.byte	3,2,1,5,43,1,5,8,9
	.half	.L81-.L405
	.byte	3,3,1,5,13,9
	.half	.L406-.L81
	.byte	3,2,1,5,3,9
	.half	.L80-.L406
	.byte	3,27,1,5,27,7,9
	.half	.L407-.L80
	.byte	3,2,1,5,65,9
	.half	.L314-.L407
	.byte	1,5,94,9
	.half	.L408-.L314
	.byte	1,5,1,7,9
	.half	.L85-.L408
	.byte	3,5,1,7,9
	.half	.L158-.L85
	.byte	0,1,1
.L398:
	.sdecl	'.debug_ranges',debug,cluster('BswM_EcuM_RequestedState')
	.sect	'.debug_ranges'
.L157:
	.word	-1,.L127,0,.L158-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_InitMemory')
	.sect	'.debug_info'
.L159:
	.word	185
	.half	3
	.word	.L160
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L162,.L161
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_InitMemory',0,1,157,9,23,1,1,1
	.word	.L105,.L230,.L104
	.byte	4
	.word	.L105,.L230
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_InitMemory')
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_InitMemory')
	.sect	'.debug_line'
.L161:
	.word	.L410-.L409
.L409:
	.half	3
	.word	.L412-.L411
.L411:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L412:
	.byte	5,3,7,0,5,2
	.word	.L105
	.byte	3,159,9,1,5,1,9
	.half	.L413-.L105
	.byte	3,1,1,7,9
	.half	.L163-.L413
	.byte	0,1,1
.L410:
	.sdecl	'.debug_ranges',debug,cluster('BswM_InitMemory')
	.sect	'.debug_ranges'
.L162:
	.word	-1,.L105,0,.L163-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_Init')
	.sect	'.debug_info'
.L164:
	.word	241
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_Init',0,1,128,10,23,1,1,1
	.word	.L109,.L231,.L108
	.byte	4
	.byte	'ConfigPtr',0,1,128,10,85
	.word	.L232,.L233
	.byte	5
	.word	.L109,.L231
	.byte	6
	.byte	'errorId',0,1,131,10,9
	.word	.L210,.L234
	.byte	6
	.byte	'idx',0,1,133,10,19
	.word	.L210,.L235
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_Init')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_Init')
	.sect	'.debug_line'
.L166:
	.word	.L415-.L414
.L414:
	.half	3
	.word	.L417-.L416
.L416:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L417:
	.byte	5,19,7,0,5,2
	.word	.L109
	.byte	3,130,10,1,5,7,3,16,1,5,17,9
	.half	.L418-.L109
	.byte	3,112,1,5,7,3,16,1,5,3,9
	.half	.L302-.L418
	.byte	1,5,13,7,9
	.half	.L419-.L302
	.byte	3,2,1,5,32,1,5,12,9
	.half	.L28-.L419
	.byte	3,2,1,5,8,9
	.half	.L420-.L28
	.byte	1,5,13,7,9
	.half	.L421-.L420
	.byte	3,2,1,5,41,1,5,5,9
	.half	.L30-.L421
	.byte	3,9,1,9
	.half	.L422-.L30
	.byte	3,3,1,5,7,9
	.half	.L423-.L422
	.byte	3,10,1,5,69,9
	.half	.L424-.L423
	.byte	3,126,1,5,7,9
	.half	.L32-.L424
	.byte	3,2,1,5,69,3,126,1,5,7,7,9
	.half	.L425-.L32
	.byte	3,12,1,5,59,9
	.half	.L426-.L425
	.byte	3,126,1,5,7,9
	.half	.L33-.L426
	.byte	3,2,1,5,64,9
	.half	.L427-.L33
	.byte	3,126,1,5,7,9
	.half	.L428-.L427
	.byte	3,2,1,5,59,9
	.half	.L429-.L428
	.byte	3,126,1,5,7,7,9
	.half	.L430-.L429
	.byte	3,227,0,1,5,18,9
	.half	.L431-.L430
	.byte	3,140,1,1,5,7,9
	.half	.L432-.L431
	.byte	3,3,1,5,17,9
	.half	.L433-.L432
	.byte	3,12,1,5,7,9
	.half	.L434-.L433
	.byte	3,115,1,5,17,9
	.half	.L435-.L434
	.byte	3,13,1,5,9,9
	.half	.L436-.L435
	.byte	3,11,1,5,44,9
	.half	.L437-.L436
	.byte	3,5,1,5,5,9
	.half	.L438-.L437
	.byte	1,5,13,9
	.half	.L439-.L438
	.byte	3,13,1,5,59,9
	.half	.L440-.L439
	.byte	1,5,45,9
	.half	.L441-.L440
	.byte	3,23,1,5,32,9
	.half	.L442-.L441
	.byte	1,5,5,9
	.half	.L443-.L442
	.byte	3,3,1,5,3,9
	.half	.L29-.L443
	.byte	3,10,1,5,79,7,9
	.half	.L444-.L29
	.byte	3,2,1,5,27,9
	.half	.L445-.L444
	.byte	1,5,79,9
	.half	.L446-.L445
	.byte	1,5,1,7,9
	.half	.L34-.L446
	.byte	3,5,1,7,9
	.half	.L168-.L34
	.byte	0,1,1
.L415:
	.sdecl	'.debug_ranges',debug,cluster('BswM_Init')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L109,0,.L168-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_Deinit')
	.sect	'.debug_info'
.L169:
	.word	181
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_Deinit',0,1,138,13,23,1,1,1
	.word	.L111,.L236,.L110
	.byte	4
	.word	.L111,.L236
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_Deinit')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_Deinit')
	.sect	'.debug_line'
.L171:
	.word	.L448-.L447
.L447:
	.half	3
	.word	.L450-.L449
.L449:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L450:
	.byte	5,3,7,0,5,2
	.word	.L111
	.byte	3,148,13,1,9
	.half	.L451-.L111
	.byte	3,3,1,5,5,9
	.half	.L452-.L451
	.byte	3,5,1,5,29,9
	.half	.L453-.L452
	.byte	3,3,1,5,3,9
	.half	.L454-.L453
	.byte	1,5,1,7,9
	.half	.L173-.L454
	.byte	3,4,0,1,1
.L448:
	.sdecl	'.debug_ranges',debug,cluster('BswM_Deinit')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L111,0,.L173-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_PreInit')
	.sect	'.debug_info'
.L174:
	.word	205
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L177,.L176
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_PreInit',0,1,176,9,23,1,1,1
	.word	.L107,.L237,.L106
	.byte	4
	.byte	'ConfigPtr',0,1,176,9,88
	.word	.L232,.L238
	.byte	5
	.word	.L107,.L237
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_PreInit')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_PreInit')
	.sect	'.debug_line'
.L176:
	.word	.L456-.L455
.L455:
	.half	3
	.word	.L458-.L457
.L457:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L458:
	.byte	5,7,7,0,5,2
	.word	.L107
	.byte	3,219,9,1,5,31,9
	.half	.L459-.L107
	.byte	3,7,1,5,3,9
	.half	.L460-.L459
	.byte	1,5,1,9
	.half	.L461-.L460
	.byte	3,11,1,7,9
	.half	.L178-.L461
	.byte	0,1,1
.L456:
	.sdecl	'.debug_ranges',debug,cluster('BswM_PreInit')
	.sect	'.debug_ranges'
.L177:
	.word	-1,.L107,0,.L178-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_RequestMode')
	.sect	'.debug_info'
.L179:
	.word	261
	.half	3
	.word	.L180
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L182,.L181
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_RequestMode',0,1,222,13,23,1,1,1
	.word	.L113,.L239,.L112
	.byte	4
	.byte	'requesting_user',0,1,222,13,54
	.word	.L240,.L241
	.byte	4
	.byte	'requested_mode',0,1,222,13,85
	.word	.L240,.L242
	.byte	5
	.word	.L243
	.byte	6
	.byte	'errorId',0,1,225,13,9
	.word	.L210,.L244
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_RequestMode')
	.sect	'.debug_abbrev'
.L180:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_RequestMode')
	.sect	'.debug_line'
.L181:
	.word	.L463-.L462
.L462:
	.half	3
	.word	.L465-.L464
.L464:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L465:
	.byte	5,17,7,0,5,2
	.word	.L113
	.byte	3,224,13,1,5,8,3,15,1,5,13,9
	.half	.L466-.L113
	.byte	3,2,1,5,29,1,5,11,9
	.half	.L35-.L466
	.byte	3,9,1,5,7,9
	.half	.L467-.L35
	.byte	1,5,9,7,9
	.half	.L468-.L467
	.byte	3,4,1,3,126,1,9
	.half	.L306-.L468
	.byte	3,2,1,3,126,1,9
	.half	.L469-.L306
	.byte	3,2,1,5,17,9
	.half	.L304-.L469
	.byte	3,3,1,5,3,9
	.half	.L36-.L304
	.byte	3,13,1,5,27,7,9
	.half	.L470-.L36
	.byte	3,3,1,5,65,9
	.half	.L307-.L470
	.byte	1,5,86,9
	.half	.L308-.L307
	.byte	1,5,1,7,9
	.half	.L38-.L308
	.byte	3,5,1,7,9
	.half	.L183-.L38
	.byte	0,1,1
.L463:
	.sdecl	'.debug_ranges',debug,cluster('BswM_RequestMode')
	.sect	'.debug_ranges'
.L182:
	.word	-1,.L113,0,.L183-.L113,0,0
.L243:
	.word	-1,.L113,0,.L239-.L113,-1,.L115,0,.L208-.L115,-1,.L117,0,.L203-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_MainFunction')
	.sect	'.debug_info'
.L184:
	.word	441
	.half	3
	.word	.L185
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L187,.L186
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_MainFunction',0,1,151,34,23,1,1,1
	.word	.L129,.L245,.L128
	.byte	4
	.word	.L129,.L245
	.byte	5
	.byte	'errorId',0,1,155,34,9
	.word	.L210,.L246
	.byte	6
	.word	.L247,.L248,.L90
	.byte	7
	.word	.L249,.L250
	.byte	8
	.word	.L251,.L248,.L90
	.byte	0,6
	.word	.L252,.L90,.L95
	.byte	7
	.word	.L253,.L254
	.byte	9
	.word	.L255,.L90,.L95
	.byte	5
	.byte	'ruleIndex',0,1,191,8,30
	.word	.L210,.L256
	.byte	5
	.byte	'actionListIndex',0,1,192,8,30
	.word	.L210,.L257
	.byte	5
	.byte	'executeActionLists',0,1,193,8,11
	.word	.L210,.L258
	.byte	6
	.word	.L259,.L260,.L95
	.byte	7
	.word	.L261,.L262
	.byte	7
	.word	.L263,.L264
	.byte	9
	.word	.L265,.L260,.L95
	.byte	5
	.byte	'actionListIndex',0,1,146,8,34
	.word	.L210,.L266
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_MainFunction')
	.sect	'.debug_abbrev'
.L185:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_MainFunction')
	.sect	'.debug_line'
.L186:
	.word	.L472-.L471
.L471:
	.half	3
	.word	.L474-.L473
.L473:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L474:
	.byte	5,19,7,0,5,2
	.word	.L129
	.byte	3,154,34,1,5,17,9
	.half	.L315-.L129
	.byte	1,5,8,3,17,1,5,13,9
	.half	.L475-.L315
	.byte	3,2,1,5,29,1,5,5,9
	.half	.L86-.L475
	.byte	3,7,1,5,22,9
	.half	.L476-.L86
	.byte	3,1,1,5,5,9
	.half	.L477-.L476
	.byte	3,1,1,5,7,7,9
	.half	.L478-.L477
	.byte	3,2,1,5,5,9
	.half	.L88-.L478
	.byte	3,2,1,9
	.half	.L479-.L88
	.byte	3,3,1,5,34,7,9
	.half	.L480-.L479
	.byte	3,2,1,5,7,9
	.half	.L89-.L480
	.byte	3,9,1,5,56,9
	.half	.L481-.L89
	.byte	1,5,5,9
	.half	.L482-.L481
	.byte	3,5,1,5,8,9
	.half	.L248-.L482
	.byte	3,166,101,1,5,9,9
	.half	.L483-.L248
	.byte	3,5,1,5,5,9
	.half	.L484-.L483
	.byte	3,123,1,5,7,7,9
	.half	.L485-.L484
	.byte	3,2,1,5,9,9
	.half	.L486-.L485
	.byte	3,3,1,5,30,9
	.half	.L90-.L486
	.byte	3,200,0,1,5,23,9
	.half	.L487-.L90
	.byte	3,6,1,5,77,9
	.half	.L488-.L487
	.byte	3,125,1,5,23,9
	.half	.L92-.L488
	.byte	3,3,1,5,117,9
	.half	.L489-.L92
	.byte	1,5,23,9
	.half	.L490-.L489
	.byte	1,5,117,9
	.half	.L491-.L490
	.byte	1,5,9,9
	.half	.L318-.L491
	.byte	3,4,1,5,77,7,9
	.half	.L492-.L318
	.byte	1,5,132,1,9
	.half	.L493-.L492
	.byte	1,5,28,7,9
	.half	.L494-.L493
	.byte	3,2,1,5,7,3,1,1,5,77,9
	.half	.L93-.L494
	.byte	3,118,1,5,3,7,9
	.half	.L495-.L93
	.byte	3,16,1,5,7,7,9
	.half	.L260-.L495
	.byte	3,77,1,5,9,3,125,1,5,13,9
	.half	.L317-.L260
	.byte	3,6,1,5,9,9
	.half	.L496-.L317
	.byte	3,122,1,5,13,9
	.half	.L497-.L496
	.byte	3,6,1,5,91,9
	.half	.L498-.L497
	.byte	3,118,1,5,9,9
	.half	.L96-.L498
	.byte	3,4,1,5,5,9
	.half	.L499-.L96
	.byte	1,5,7,7,9
	.half	.L500-.L499
	.byte	3,3,1,9
	.half	.L501-.L500
	.byte	3,1,1,5,13,9
	.half	.L502-.L501
	.byte	3,2,1,5,72,9
	.half	.L503-.L502
	.byte	1,5,7,9
	.half	.L504-.L503
	.byte	3,4,1,9
	.half	.L505-.L504
	.byte	3,1,1,5,108,9
	.half	.L97-.L505
	.byte	3,113,1,5,91,9
	.half	.L506-.L97
	.byte	1,5,5,7,9
	.half	.L95-.L506
	.byte	3,190,26,1,9
	.half	.L507-.L95
	.byte	3,4,1,5,34,7,9
	.half	.L508-.L507
	.byte	3,3,1,5,7,9
	.half	.L509-.L508
	.byte	3,2,1,9
	.half	.L98-.L509
	.byte	3,8,1,5,52,9
	.half	.L510-.L98
	.byte	1,5,3,9
	.half	.L87-.L510
	.byte	3,11,1,5,87,7,9
	.half	.L511-.L87
	.byte	3,2,1,5,27,9
	.half	.L512-.L511
	.byte	1,5,65,9
	.half	.L513-.L512
	.byte	1,5,87,9
	.half	.L514-.L513
	.byte	1,5,1,9
	.half	.L99-.L514
	.byte	3,7,1,7,9
	.half	.L188-.L99
	.byte	0,1,1
.L472:
	.sdecl	'.debug_ranges',debug,cluster('BswM_MainFunction')
	.sect	'.debug_ranges'
.L187:
	.word	-1,.L129,0,.L188-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_ImmediateModeRequest')
	.sect	'.debug_info'
.L189:
	.word	308
	.half	3
	.word	.L190
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L192,.L191
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_ImmediateModeRequest',0,1,238,4,23,1,1,1
	.word	.L103,.L267,.L102
	.byte	4
	.byte	'start',0,1,238,4,78
	.word	.L210,.L268
	.byte	4
	.byte	'end',0,1,238,4,114
	.word	.L210,.L269
	.byte	4
	.byte	'sid',0,1,238,4,125
	.word	.L210,.L270
	.byte	4
	.byte	'partitionIdx',0,1,238,4,182,1
	.word	.L210,.L271
	.byte	5
	.word	.L103,.L267
	.byte	6
	.byte	'immediateUserIndex',0,1,245,4,32
	.word	.L210,.L272
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_ImmediateModeRequest')
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_ImmediateModeRequest')
	.sect	'.debug_line'
.L191:
	.word	.L516-.L515
.L515:
	.half	3
	.word	.L518-.L517
.L517:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L518:
	.byte	5,23,7,0,5,2
	.word	.L103
	.byte	3,237,4,1,5,14,9
	.half	.L297-.L103
	.byte	3,10,1,5,3,9
	.half	.L298-.L297
	.byte	1,5,5,7,9
	.half	.L299-.L298
	.byte	3,7,1,5,22,9
	.half	.L295-.L299
	.byte	3,2,1,5,5,9
	.half	.L519-.L295
	.byte	3,1,1,5,7,7,9
	.half	.L520-.L519
	.byte	3,2,1,5,31,9
	.half	.L19-.L520
	.byte	3,3,1,5,13,3,10,1,5,31,9
	.half	.L521-.L19
	.byte	3,118,1,7,9
	.half	.L522-.L521
	.byte	1,5,11,9
	.half	.L523-.L522
	.byte	3,17,1,3,123,1,5,31,9
	.half	.L524-.L523
	.byte	3,116,1,5,13,9
	.half	.L21-.L524
	.byte	3,10,1,5,9,9
	.half	.L525-.L21
	.byte	1,5,11,7,9
	.half	.L526-.L525
	.byte	3,2,1,9
	.half	.L527-.L526
	.byte	3,1,1,5,51,9
	.half	.L528-.L527
	.byte	3,127,1,5,14,9
	.half	.L22-.L528
	.byte	3,3,1,5,11,7,9
	.half	.L529-.L22
	.byte	3,2,1,5,91,9
	.half	.L530-.L529
	.byte	1,5,11,9
	.half	.L24-.L530
	.byte	3,6,1,5,33,9
	.half	.L531-.L24
	.byte	3,1,1,5,49,9
	.half	.L532-.L531
	.byte	1,5,57,9
	.half	.L533-.L532
	.byte	1,5,11,9
	.half	.L301-.L533
	.byte	3,1,1,5,82,9
	.half	.L23-.L301
	.byte	3,103,1,5,31,1,5,5,7,9
	.half	.L26-.L23
	.byte	3,30,1,9
	.half	.L534-.L26
	.byte	3,2,1,5,34,7,9
	.half	.L535-.L534
	.byte	3,3,1,5,7,9
	.half	.L536-.L535
	.byte	3,2,1,5,1,9
	.half	.L18-.L536
	.byte	3,6,1,7,9
	.half	.L193-.L18
	.byte	0,1,1
.L516:
	.sdecl	'.debug_ranges',debug,cluster('BswM_ImmediateModeRequest')
	.sect	'.debug_ranges'
.L192:
	.word	-1,.L103,0,.L193-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('BswM_ProcessQueuedRequests')
	.sect	'.debug_info'
.L194:
	.word	488
	.half	3
	.word	.L195
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L197,.L196
	.byte	2
	.word	.L130
	.byte	3
	.byte	'BswM_ProcessQueuedRequests',0,1,156,4,34,1,1
	.word	.L101,.L273,.L100
	.byte	4
	.byte	'partitionIdx',0,1,156,4,113
	.word	.L210,.L274
	.byte	5
	.word	.L101,.L273
	.byte	6
	.byte	'ruleIndex',0,1,160,4,25
	.word	.L210,.L275
	.byte	6
	.byte	'actionListIndex',0,1,161,4,30
	.word	.L210,.L276
	.byte	6
	.byte	'executeActionLists',0,1,162,4,11
	.word	.L210,.L277
	.byte	6
	.byte	'queueState',0,1,163,4,9
	.word	.L210,.L278
	.byte	7
	.word	.L259,.L279,.L3
	.byte	8
	.word	.L261,.L280
	.byte	8
	.word	.L263,.L281
	.byte	9
	.word	.L265,.L282
	.byte	6
	.byte	'actionListIndex',0,1,146,8,34
	.word	.L210,.L284
	.byte	0,0,7
	.word	.L259,.L283,.L2
	.byte	8
	.word	.L261,.L280
	.byte	8
	.word	.L263,.L281
	.byte	0,7
	.word	.L285,.L286,.L14
	.byte	8
	.word	.L287,.L288
	.byte	10
	.word	.L289,.L290
	.byte	0,7
	.word	.L285,.L15,.L273
	.byte	8
	.word	.L287,.L288
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('BswM_ProcessQueuedRequests')
	.sect	'.debug_abbrev'
.L195:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0,10,11
	.byte	0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('BswM_ProcessQueuedRequests')
	.sect	'.debug_line'
.L196:
	.word	.L538-.L537
.L537:
	.half	3
	.word	.L540-.L539
.L539:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L540:
	.byte	5,34,7,0,5,2
	.word	.L101
	.byte	3,155,4,1,5,32,9
	.half	.L291-.L101
	.byte	3,6,1,5,30,9
	.half	.L541-.L291
	.byte	1,5,22,9
	.half	.L292-.L541
	.byte	3,1,1,5,20,9
	.half	.L542-.L292
	.byte	1,5,3,3,4,1,5,7,9
	.half	.L279-.L542
	.byte	3,250,3,1,5,76,3,135,124,1,5,5,9
	.half	.L3-.L279
	.byte	3,2,1,5,33,9
	.half	.L543-.L3
	.byte	3,4,1,5,24,9
	.half	.L544-.L543
	.byte	3,125,1,5,7,9
	.half	.L545-.L544
	.byte	3,3,1,5,31,7,9
	.half	.L546-.L545
	.byte	3,6,1,5,183,1,9
	.half	.L547-.L546
	.byte	3,124,1,5,31,9
	.half	.L5-.L547
	.byte	3,4,1,5,110,9
	.half	.L548-.L5
	.byte	1,5,31,9
	.half	.L293-.L548
	.byte	1,5,110,9
	.half	.L549-.L293
	.byte	1,5,16,9
	.half	.L294-.L549
	.byte	3,4,1,5,84,7,9
	.half	.L550-.L294
	.byte	1,5,139,1,9
	.half	.L551-.L550
	.byte	1,5,26,7,9
	.half	.L552-.L551
	.byte	3,2,1,5,15,3,1,1,5,183,1,9
	.half	.L6-.L552
	.byte	3,117,1,5,9,7,9
	.half	.L553-.L6
	.byte	3,18,1,5,11,7,9
	.half	.L554-.L553
	.byte	3,2,1,5,22,9
	.half	.L555-.L554
	.byte	3,1,1,5,30,9
	.half	.L556-.L555
	.byte	3,1,1,5,93,3,126,1,5,11,9
	.half	.L8-.L556
	.byte	3,5,1,5,7,9
	.half	.L9-.L8
	.byte	3,101,1,5,5,9
	.half	.L4-.L9
	.byte	3,31,1,5,9,7,9
	.half	.L283-.L4
	.byte	3,209,3,1,5,13,9
	.half	.L557-.L283
	.byte	3,6,1,5,91,9
	.half	.L558-.L557
	.byte	3,118,1,5,9,9
	.half	.L11-.L558
	.byte	3,4,1,5,5,9
	.half	.L559-.L11
	.byte	1,5,7,7,9
	.half	.L560-.L559
	.byte	3,3,1,9
	.half	.L561-.L560
	.byte	3,1,1,5,13,9
	.half	.L562-.L561
	.byte	3,2,1,5,56,9
	.half	.L563-.L562
	.byte	3,173,124,1,5,7,9
	.half	.L564-.L563
	.byte	3,215,3,1,9
	.half	.L565-.L564
	.byte	3,1,1,5,108,9
	.half	.L12-.L565
	.byte	3,113,1,5,91,9
	.half	.L566-.L12
	.byte	1,5,9,7,9
	.half	.L2-.L566
	.byte	3,142,124,1,5,42,7,9
	.half	.L567-.L2
	.byte	1,5,3,9
	.half	.L13-.L567
	.byte	3,44,1,9
	.half	.L568-.L13
	.byte	3,2,1,7,9
	.half	.L286-.L568
	.byte	3,162,127,1,5,33,9
	.half	.L569-.L286
	.byte	3,54,1,5,5,9
	.half	.L570-.L569
	.byte	3,124,1,9
	.half	.L571-.L570
	.byte	3,81,1,5,7,7,9
	.half	.L572-.L571
	.byte	3,2,1,5,76,1,5,1,9
	.half	.L14-.L572
	.byte	3,221,0,1,5,10,7,9
	.half	.L15-.L14
	.byte	3,165,127,1,5,7,7,9
	.half	.L573-.L15
	.byte	3,2,1,9
	.half	.L574-.L573
	.byte	3,1,1,5,29,9
	.half	.L16-.L574
	.byte	3,7,1,5,3,9
	.half	.L575-.L16
	.byte	1,5,1,7,9
	.half	.L198-.L575
	.byte	3,209,0,0,1,1
.L538:
	.sdecl	'.debug_ranges',debug,cluster('BswM_ProcessQueuedRequests')
	.sect	'.debug_ranges'
.L197:
	.word	-1,.L101,0,.L198-.L101,0,0
.L282:
	.word	-1,.L101,.L279-.L101,.L3-.L101,.L283-.L101,.L2-.L101,0,0
.L290:
	.word	-1,.L101,.L286-.L101,.L14-.L101,.L15-.L101,.L273-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L199:
	.word	168
	.half	3
	.word	.L200
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L202,.L201
	.byte	2
	.word	.L130
	.byte	3
	.byte	'.cocofun_1',0,1,222,13,23,1
	.word	.L117,.L203,.L116
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L200:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L201:
	.word	.L577-.L576
.L576:
	.half	3
	.word	.L579-.L578
.L578:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L579:
	.byte	5,8,7,0,5,2
	.word	.L117
	.byte	3,239,13,1,9
	.half	.L203-.L117
	.byte	0,1,1,5,8,0,5,2
	.word	.L117
	.byte	3,251,14,1,9
	.half	.L580-.L117
	.byte	3,244,126,1,7,9
	.half	.L203-.L580
	.byte	0,1,1,5,8,0,5,2
	.word	.L117
	.byte	3,227,17,1,9
	.half	.L580-.L117
	.byte	3,140,124,1,7,9
	.half	.L203-.L580
	.byte	0,1,1,5,8,0,5,2
	.word	.L117
	.byte	3,216,23,1,9
	.half	.L580-.L117
	.byte	3,151,118,1,7,9
	.half	.L203-.L580
	.byte	0,1,1,5,8,0,5,2
	.word	.L117
	.byte	3,183,24,1,9
	.half	.L580-.L117
	.byte	3,184,117,1,7,9
	.half	.L203-.L580
	.byte	0,1,1,5,8,0,5,2
	.word	.L117
	.byte	3,255,24,1,9
	.half	.L580-.L117
	.byte	3,240,116,1,7,9
	.half	.L203-.L580
	.byte	0,1,1,5,8,0,5,2
	.word	.L117
	.byte	3,171,34,1,9
	.half	.L580-.L117
	.byte	3,196,107,1,7,9
	.half	.L203-.L580
	.byte	0,1,1
.L577:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L202:
	.word	-1,.L117,0,.L203-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L204:
	.word	168
	.half	3
	.word	.L205
	.byte	4,1
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L207,.L206
	.byte	2
	.word	.L130
	.byte	3
	.byte	'.cocofun_2',0,1,222,13,23,1
	.word	.L115,.L208,.L114
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L205:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L206:
	.word	.L582-.L581
.L581:
	.half	3
	.word	.L584-.L583
.L583:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\BswM\\Implementation\\BswM.c',0,0,0,0,0
.L584:
	.byte	5,27,7,0,5,2
	.word	.L115
	.byte	3,145,14,1,5,43,9
	.half	.L310-.L115
	.byte	1,9
	.half	.L208-.L310
	.byte	0,1,1,5,27,0,5,2
	.word	.L115
	.byte	3,163,15,1,5,43,9
	.half	.L310-.L115
	.byte	1,3,238,126,1,7,9
	.half	.L208-.L310
	.byte	0,1,1,5,27,0,5,2
	.word	.L115
	.byte	3,139,18,1,5,43,9
	.half	.L310-.L115
	.byte	1,3,134,124,1,7,9
	.half	.L208-.L310
	.byte	0,1,1,5,27,0,5,2
	.word	.L115
	.byte	3,144,24,1,5,43,9
	.half	.L310-.L115
	.byte	1,3,129,118,1,7,9
	.half	.L208-.L310
	.byte	0,1,1,5,27,0,5,2
	.word	.L115
	.byte	3,218,24,1,5,43,9
	.half	.L310-.L115
	.byte	1,3,183,117,1,7,9
	.half	.L208-.L310
	.byte	0,1,1,5,27,0,5,2
	.word	.L115
	.byte	3,167,25,1,5,43,9
	.half	.L310-.L115
	.byte	1,3,234,116,1,7,9
	.half	.L208-.L310
	.byte	0,1,1
.L582:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L207:
	.word	-1,.L115,0,.L208-.L115,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L203-.L117
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L208-.L115
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_CanSM_CurrentState')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L214-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L216:
	.word	-1,.L121,.L303-.L121,.L203-.L121
	.half	1
	.byte	85
	.word	0,.L311-.L121
	.half	1
	.byte	85
	.word	.L115-.L121,.L208-.L121
	.half	1
	.byte	85
	.word	.L50-.L121,.L214-.L121
	.half	1
	.byte	85
	.word	0,0
.L215:
	.word	-1,.L121,.L303-.L121,.L203-.L121
	.half	1
	.byte	84
	.word	0,.L311-.L121
	.half	1
	.byte	84
	.word	.L115-.L121,.L310-.L121
	.half	1
	.byte	84
	.word	.L50-.L121,.L214-.L121
	.half	1
	.byte	84
	.word	0,0
.L217:
	.word	-1,.L121,.L303-.L121,.L203-.L121
	.half	1
	.byte	87
	.word	.L115-.L121,.L208-.L121
	.half	1
	.byte	87
	.word	0,.L214-.L121
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_ComM_CurrentMode')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L209-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L211:
	.word	-1,.L119,.L303-.L119,.L203-.L119
	.half	1
	.byte	84
	.word	0,.L309-.L119
	.half	1
	.byte	84
	.word	.L115-.L119,.L310-.L119
	.half	1
	.byte	84
	.word	.L44-.L119,.L209-.L119
	.half	1
	.byte	84
	.word	0,0
.L212:
	.word	-1,.L119,.L303-.L119,.L203-.L119
	.half	1
	.byte	85
	.word	0,.L309-.L119
	.half	1
	.byte	85
	.word	.L115-.L119,.L208-.L119
	.half	1
	.byte	85
	.word	.L44-.L119,.L209-.L119
	.half	1
	.byte	85
	.word	0,0
.L213:
	.word	-1,.L119,.L303-.L119,.L203-.L119
	.half	1
	.byte	87
	.word	.L115-.L119,.L208-.L119
	.half	1
	.byte	87
	.word	0,.L209-.L119
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_Deinit')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L236-.L111
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_EcuM_CurrentState')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L218-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L219:
	.word	-1,.L123,.L303-.L123,.L203-.L123
	.half	1
	.byte	84
	.word	0,.L312-.L123
	.half	1
	.byte	84
	.word	.L115-.L123,.L310-.L123
	.half	1
	.byte	84
	.word	.L74-.L123,.L218-.L123
	.half	1
	.byte	84
	.word	0,0
.L220:
	.word	-1,.L123,.L303-.L123,.L203-.L123
	.half	1
	.byte	87
	.word	.L115-.L123,.L208-.L123
	.half	1
	.byte	87
	.word	0,.L218-.L123
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L221-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L225:
	.word	-1,.L125,.L303-.L125,.L203-.L125
	.half	1
	.byte	87
	.word	.L115-.L125,.L208-.L125
	.half	1
	.byte	87
	.word	0,.L221-.L125
	.half	1
	.byte	87
	.word	0,0
.L223:
	.word	-1,.L125,.L303-.L125,.L203-.L125
	.half	1
	.byte	84
	.word	0,.L313-.L125
	.half	1
	.byte	84
	.word	.L115-.L125,.L310-.L125
	.half	1
	.byte	84
	.word	.L78-.L125,.L221-.L125
	.half	1
	.byte	84
	.word	0,0
.L224:
	.word	-1,.L125,.L303-.L125,.L203-.L125
	.half	1
	.byte	85
	.word	0,.L313-.L125
	.half	1
	.byte	85
	.word	.L115-.L125,.L208-.L125
	.half	1
	.byte	85
	.word	.L78-.L125,.L221-.L125
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_EcuM_RequestedState')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L226-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L228:
	.word	-1,.L127,.L303-.L127,.L203-.L127
	.half	1
	.byte	85
	.word	0,.L314-.L127
	.half	1
	.byte	85
	.word	.L115-.L127,.L208-.L127
	.half	1
	.byte	85
	.word	.L85-.L127,.L226-.L127
	.half	1
	.byte	85
	.word	0,0
.L227:
	.word	-1,.L127,.L303-.L127,.L203-.L127
	.half	1
	.byte	84
	.word	0,.L314-.L127
	.half	1
	.byte	84
	.word	.L115-.L127,.L310-.L127
	.half	1
	.byte	84
	.word	.L85-.L127,.L226-.L127
	.half	1
	.byte	84
	.word	0,0
.L229:
	.word	-1,.L127,.L303-.L127,.L203-.L127
	.half	1
	.byte	87
	.word	.L115-.L127,.L208-.L127
	.half	1
	.byte	87
	.word	0,.L226-.L127
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_ImmediateModeRequest')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L267-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L269:
	.word	-1,.L103,0,.L295-.L103
	.half	1
	.byte	85
	.word	.L298-.L103,.L299-.L103
	.half	1
	.byte	88
	.word	0,0
.L272:
	.word	0,0
.L271:
	.word	-1,.L103,0,.L295-.L103
	.half	1
	.byte	87
	.word	.L297-.L103,.L267-.L103
	.half	1
	.byte	90
	.word	0,0
.L270:
	.word	-1,.L103,0,.L295-.L103
	.half	1
	.byte	86
	.word	.L300-.L103,.L301-.L103
	.half	1
	.byte	89
	.word	0,0
.L268:
	.word	-1,.L103,0,.L295-.L103
	.half	1
	.byte	84
	.word	.L296-.L103,.L21-.L103
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_Init')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L231-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L233:
	.word	-1,.L109,0,.L33-.L109
	.half	1
	.byte	100
	.word	0,0
.L234:
	.word	-1,.L109,.L302-.L109,.L231-.L109
	.half	1
	.byte	89
	.word	0,0
.L235:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_InitMemory')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L230-.L105
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_MainFunction')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L245-.L129
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	0,0
.L257:
	.word	-1,.L129,.L318-.L129,.L96-.L129
	.half	1
	.byte	82
	.word	0,0
.L246:
	.word	-1,.L129,.L303-.L129,.L203-.L129
	.half	1
	.byte	90
	.word	.L315-.L129,.L245-.L129
	.half	1
	.byte	90
	.word	0,0
.L258:
	.word	-1,.L129,.L316-.L129,.L317-.L129
	.half	1
	.byte	88
	.word	0,0
.L262:
	.word	0,0
.L250:
	.word	0,0
.L264:
	.word	0,0
.L254:
	.word	0,0
.L256:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_PreInit')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L237-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L107,0,.L237-.L107
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_ProcessQueuedRequests')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L273-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L276:
	.word	-1,.L101,.L294-.L101,.L4-.L101
	.half	1
	.byte	82
	.word	0,0
.L284:
	.word	0,0
.L277:
	.word	-1,.L101,.L292-.L101,.L273-.L101
	.half	1
	.byte	90
	.word	0,0
.L280:
	.word	0,0
.L288:
	.word	0,0
.L274:
	.word	-1,.L101,0,.L279-.L101
	.half	1
	.byte	84
	.word	.L291-.L101,.L273-.L101
	.half	1
	.byte	88
	.word	.L293-.L101,.L294-.L101
	.half	1
	.byte	84
	.word	0,0
.L281:
	.word	0,0
.L278:
	.word	-1,.L101,.L279-.L101,.L273-.L101
	.half	1
	.byte	92
	.word	0,0
.L275:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('BswM_RequestMode')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L239-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L244:
	.word	-1,.L113,.L303-.L113,.L203-.L113
	.half	1
	.byte	87
	.word	0,.L304-.L113
	.half	1
	.byte	87
	.word	.L36-.L113,.L307-.L113
	.half	1
	.byte	87
	.word	.L115-.L113,.L208-.L113
	.half	1
	.byte	87
	.word	.L308-.L113,.L239-.L113
	.half	1
	.byte	87
	.word	0,0
.L242:
	.word	-1,.L113,.L303-.L113,.L203-.L113
	.half	1
	.byte	85
	.word	0,.L305-.L113
	.half	1
	.byte	85
	.word	0,0
.L241:
	.word	-1,.L113,.L303-.L113,.L203-.L113
	.half	1
	.byte	84
	.word	0,.L306-.L113
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L585:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('BswM_ProcessQueuedRequests')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L101,.L273-.L101
	.sdecl	'.debug_frame',debug,cluster('BswM_ImmediateModeRequest')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L103,.L267-.L103
	.sdecl	'.debug_frame',debug,cluster('BswM_InitMemory')
	.sect	'.debug_frame'
	.word	24
	.word	.L585,.L105,.L230-.L105
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('BswM_PreInit')
	.sect	'.debug_frame'
	.word	24
	.word	.L585,.L107,.L237-.L107
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('BswM_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L109,.L231-.L109
	.sdecl	'.debug_frame',debug,cluster('BswM_Deinit')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L111,.L236-.L111
	.sdecl	'.debug_frame',debug,cluster('BswM_RequestMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L113,.L239-.L113
	.sdecl	'.debug_frame',debug,cluster('BswM_ComM_CurrentMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L119,.L209-.L119
	.sdecl	'.debug_frame',debug,cluster('BswM_CanSM_CurrentState')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L121,.L214-.L121
	.sdecl	'.debug_frame',debug,cluster('BswM_EcuM_CurrentState')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L123,.L218-.L123
	.sdecl	'.debug_frame',debug,cluster('BswM_EcuM_CurrentWakeup')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L125,.L221-.L125
	.sdecl	'.debug_frame',debug,cluster('BswM_EcuM_RequestedState')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L127,.L226-.L127
	.sdecl	'.debug_frame',debug,cluster('BswM_MainFunction')
	.sect	'.debug_frame'
	.word	12
	.word	.L585,.L129,.L245-.L129
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L586:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L586,.L115,.L208-.L115
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L586,.L117,.L203-.L117
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\BswM\Implementation\BswM.c	  4478  
; ..\component\BswM\Implementation\BswM.c	  4479  #define BSWM_STOP_SEC_CODE
; ..\component\BswM\Implementation\BswM.c	  4480  /* PRQA S 5087 1 */ /* MD_MSR_MemMap */
; ..\component\BswM\Implementation\BswM.c	  4481  #include "MemMap.h"
; ..\component\BswM\Implementation\BswM.c	  4482  
; ..\component\BswM\Implementation\BswM.c	  4483  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\BswM\Implementation\BswM.c	  4484  
; ..\component\BswM\Implementation\BswM.c	  4485  \ID SBSW_BSWM_ACTIONFCTPTR
; ..\component\BswM\Implementation\BswM.c	  4486    \DESCRIPTION Access to generated table which contains function pointer
; ..\component\BswM\Implementation\BswM.c	  4487    \COUNTERMEASURE \S User verifies generated functions (SMI-8) and performs adequate integration (SMI-4).
; ..\component\BswM\Implementation\BswM.c	  4488  
; ..\component\BswM\Implementation\BswM.c	  4489  \ID SBSW_BSWM_ACTIONLISTFCTPTR
; ..\component\BswM\Implementation\BswM.c	  4490    \DESCRIPTION Access to generated table which contains function pointer
; ..\component\BswM\Implementation\BswM.c	  4491    \COUNTERMEASURE \S User verifies generated functions (SMI-8) and performs adequate integration (SMI-4).
; ..\component\BswM\Implementation\BswM.c	  4492  
; ..\component\BswM\Implementation\BswM.c	  4493  \ID SBSW_BSWM_EXPRESSIONFCTPTR
; ..\component\BswM\Implementation\BswM.c	  4494    \DESCRIPTION Access to generated table which contains function pointer
; ..\component\BswM\Implementation\BswM.c	  4495    \COUNTERMEASURE \S User verifies generated functions (SMI-8) and performs adequate integration (SMI-4).
; ..\component\BswM\Implementation\BswM.c	  4496  
; ..\component\BswM\Implementation\BswM.c	  4497  \ID SBSW_BSWM_RULEFCTPTR
; ..\component\BswM\Implementation\BswM.c	  4498    \DESCRIPTION Access to generated table which contains function pointer
; ..\component\BswM\Implementation\BswM.c	  4499    \COUNTERMEASURE \S User verifies generated functions (SMI-8) and performs adequate integration (SMI-4).
; ..\component\BswM\Implementation\BswM.c	  4500  
; ..\component\BswM\Implementation\BswM.c	  4501  \ID SBSW_BSWM_IMMEDIATEMODEREQUEST
; ..\component\BswM\Implementation\BswM.c	  4502    \DESCRIPTION Access to ModeRequestQueue via indirection over Domain. Immediate and ModeRequestQueue have same index using ComStackLib.
; ..\component\BswM\Implementation\BswM.c	  4503    \COUNTERMEASURE \N Qualified use-case CSL02 and CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4504  
; ..\component\BswM\Implementation\BswM.c	  4505  \ID SBSW_BSWM_SETACTIONLISTQUEUE
; ..\component\BswM\Implementation\BswM.c	  4506    \DESCRIPTION Access of ActionListQueue using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4507    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4508  
; ..\component\BswM\Implementation\BswM.c	  4509  \ID SBSW_BSWM_PARTITIONINDEXACCESS
; ..\component\BswM\Implementation\BswM.c	  4510    \DESCRIPTION Access of all variables and functions created and used by ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4511    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4512                       If BSWM_MULTIPARTITION is STD_OFF GetPartitionIdx is defined to 0 which is always a valid index.
; ..\component\BswM\Implementation\BswM.c	  4513  
; ..\component\BswM\Implementation\BswM.c	  4514  \ID SBSW_BSWM_SETMODEREQUESTQUEUE
; ..\component\BswM\Implementation\BswM.c	  4515    \DESCRIPTION Access of ModeRequestQueue using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4516    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4517  
; ..\component\BswM\Implementation\BswM.c	  4518  \ID SBSW_BSWM_SETRULESTATE
; ..\component\BswM\Implementation\BswM.c	  4519    \DESCRIPTION Access of RuleStates using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4520    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4521  
; ..\component\BswM\Implementation\BswM.c	  4522  \ID SBSW_BSWM_SETTIMER
; ..\component\BswM\Implementation\BswM.c	  4523    \DESCRIPTION Access of TimerState and TimerValue with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4524    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4525  
; ..\component\BswM\Implementation\BswM.c	  4526  \ID SBSW_BSWM_GETVERSIONINFO
; ..\component\BswM\Implementation\BswM.c	  4527    \DESCRIPTION The function BswM_GetVersionInfo writes to the object referenced by parameter VersionInfo
; ..\component\BswM\Implementation\BswM.c	  4528    \COUNTERMEASURE \N The caller ensures that the pointers passed to the parameter VersionInfo is valid.
; ..\component\BswM\Implementation\BswM.c	  4529  
; ..\component\BswM\Implementation\BswM.c	  4530  \ID SBSW_BSWM_DCMCOMSTATE
; ..\component\BswM\Implementation\BswM.c	  4531    \DESCRIPTION Access of DcmComState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4532    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4533  
; ..\component\BswM\Implementation\BswM.c	  4534  \ID SBSW_BSWM_CANSMCHANNELSTATE
; ..\component\BswM\Implementation\BswM.c	  4535    \DESCRIPTION Access of CanSMChanelState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4536    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4537  
; ..\component\BswM\Implementation\BswM.c	  4538  \ID SBSW_BSWM_COMMCHANNELSTATE
; ..\component\BswM\Implementation\BswM.c	  4539    \DESCRIPTION Access of ComMChanelState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4540    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4541  
; ..\component\BswM\Implementation\BswM.c	  4542  \ID SBSW_BSWM_COMMPNCSTATE
; ..\component\BswM\Implementation\BswM.c	  4543    \DESCRIPTION Access of ComMPncState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4544    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4545  
; ..\component\BswM\Implementation\BswM.c	  4546  \ID SBSW_BSWM_ECUMRUNREQUESTSTATE
; ..\component\BswM\Implementation\BswM.c	  4547    \DESCRIPTION Access of EcuMRunRequestState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4548    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4549  
; ..\component\BswM\Implementation\BswM.c	  4550  \ID SBSW_BSWM_ECUMWAKEUPSTATE
; ..\component\BswM\Implementation\BswM.c	  4551    \DESCRIPTION Access of EcuMWakeupState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4552    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4553  
; ..\component\BswM\Implementation\BswM.c	  4554  \ID SBSW_BSWM_ETHIFPORTSTATE
; ..\component\BswM\Implementation\BswM.c	  4555    \DESCRIPTION Access of EthIfPortState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4556    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4557  
; ..\component\BswM\Implementation\BswM.c	  4558  \ID SBSW_BSWM_ETHSMSTATE
; ..\component\BswM\Implementation\BswM.c	  4559    \DESCRIPTION Access of EthSMState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4560    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4561  
; ..\component\BswM\Implementation\BswM.c	  4562  \ID SBSW_BSWM_FRSMSTATE
; ..\component\BswM\Implementation\BswM.c	  4563    \DESCRIPTION Access of FrSMState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4564    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4565  
; ..\component\BswM\Implementation\BswM.c	  4566  \ID SBSW_BSWM_GENERICSTATE
; ..\component\BswM\Implementation\BswM.c	  4567    \DESCRIPTION Access of GenericState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4568    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4569  
; ..\component\BswM\Implementation\BswM.c	  4570  \ID SBSW_BSWM_J1939NMSTATE
; ..\component\BswM\Implementation\BswM.c	  4571    \DESCRIPTION Access of J1939NmState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4572    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4573    
; ..\component\BswM\Implementation\BswM.c	  4574  \ID SBSW_BSWM_LINSCHEDULEENDSTATE
; ..\component\BswM\Implementation\BswM.c	  4575    \DESCRIPTION Access of LinScheduleEndState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4576    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4577  
; ..\component\BswM\Implementation\BswM.c	  4578  \ID SBSW_BSWM_LINSCHEDULESTATE
; ..\component\BswM\Implementation\BswM.c	  4579    \DESCRIPTION Access of LinScheduleState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4580    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4581  
; ..\component\BswM\Implementation\BswM.c	  4582  \ID SBSW_BSWM_LINSMSTATE
; ..\component\BswM\Implementation\BswM.c	  4583    \DESCRIPTION Access of LinSMState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4584    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4585  
; ..\component\BswM\Implementation\BswM.c	  4586  \ID SBSW_BSWM_LINTPSTATE
; ..\component\BswM\Implementation\BswM.c	  4587    \DESCRIPTION Access of LinTPState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4588    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4589  
; ..\component\BswM\Implementation\BswM.c	  4590  \ID SBSW_BSWM_NMSTATE
; ..\component\BswM\Implementation\BswM.c	  4591    \DESCRIPTION Access of NmState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4592    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4593  
; ..\component\BswM\Implementation\BswM.c	  4594  \ID SBSW_BSWM_NVMBLOCKSTATE
; ..\component\BswM\Implementation\BswM.c	  4595    \DESCRIPTION Access of NvMBlockState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4596    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4597  
; ..\component\BswM\Implementation\BswM.c	  4598  \ID SBSW_BSWM_NVMJOBSTATE
; ..\component\BswM\Implementation\BswM.c	  4599    \DESCRIPTION Access of NvMJobState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4600    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4601    
; ..\component\BswM\Implementation\BswM.c	  4602  \ID SBSW_BSWM_PDURPRETRANSMITSTATE
; ..\component\BswM\Implementation\BswM.c	  4603    \DESCRIPTION Access of PduRPreTransmitState and PduRPreTransmitMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4604    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4605    
; ..\component\BswM\Implementation\BswM.c	  4606  \ID SBSW_BSWM_PDURPRETRANSMITSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4607    \DESCRIPTION Access to PduRPreTransmitState via indirection over PduRPreTransmitMapping.
; ..\component\BswM\Implementation\BswM.c	  4608    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4609  
; ..\component\BswM\Implementation\BswM.c	  4610  \ID SBSW_BSWM_PDURRXINDICATIONSTATE
; ..\component\BswM\Implementation\BswM.c	  4611    \DESCRIPTION Access of PduRRxIndicationState and PduRRxIndicationMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4612    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4613  
; ..\component\BswM\Implementation\BswM.c	  4614  \ID SBSW_BSWM_PDURRXINDICATIONSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4615    \DESCRIPTION Access to PduRRxIndicationState via indirection over PduRRxIndicationMapping.
; ..\component\BswM\Implementation\BswM.c	  4616    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4617  
; ..\component\BswM\Implementation\BswM.c	  4618  \ID SBSW_BSWM_PDURTPRXINDICATIONSTATE
; ..\component\BswM\Implementation\BswM.c	  4619    \DESCRIPTION Access of PduRTpRxIndicationState and PduRTpRxIndicationMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4620    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4621  
; ..\component\BswM\Implementation\BswM.c	  4622  \ID SBSW_BSWM_PDURTPRXINDICATIONSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4623    \DESCRIPTION Access to PduRTpRxIndicationState via indirection over PduRTpRxIndicationMapping.
; ..\component\BswM\Implementation\BswM.c	  4624    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4625  
; ..\component\BswM\Implementation\BswM.c	  4626  \ID SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATE
; ..\component\BswM\Implementation\BswM.c	  4627    \DESCRIPTION Access of PduRTpStartOfReceptionState and PduRTpStartOfReceptionMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4628    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4629  
; ..\component\BswM\Implementation\BswM.c	  4630  \ID SBSW_BSWM_PDURTPSTARTOFRECEPTIONSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4631    \DESCRIPTION Access to PduRTpStartOfReceptionState via indirection over PduRTpStartOfReceptionMapping.
; ..\component\BswM\Implementation\BswM.c	  4632    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4633  
; ..\component\BswM\Implementation\BswM.c	  4634  \ID SBSW_BSWM_PDURTPTXCONFIRMATIONSTATE
; ..\component\BswM\Implementation\BswM.c	  4635    \DESCRIPTION Access of PduRTpTxConfirmationState and PduRTpTxConfirmationMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4636    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4637  
; ..\component\BswM\Implementation\BswM.c	  4638  \ID SBSW_BSWM_PDURTPTXCONFIRMATIONSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4639    \DESCRIPTION Access to PduRTpTxConfirmationState via indirection over PduRTpTxConfirmationMapping.
; ..\component\BswM\Implementation\BswM.c	  4640    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4641  
; ..\component\BswM\Implementation\BswM.c	  4642  \ID SBSW_BSWM_PDURTRANSMITSTATE
; ..\component\BswM\Implementation\BswM.c	  4643    \DESCRIPTION Access of PduRTransmitState and PduRTransmitMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4644    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4645  
; ..\component\BswM\Implementation\BswM.c	  4646  \ID SBSW_BSWM_PDURTRANSMITSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4647    \DESCRIPTION Access to PduRTransmitState via indirection over PduRTransmitMapping.
; ..\component\BswM\Implementation\BswM.c	  4648    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4649  
; ..\component\BswM\Implementation\BswM.c	  4650  \ID SBSW_BSWM_PDURTXCONFIRMATIONSTATE
; ..\component\BswM\Implementation\BswM.c	  4651    \DESCRIPTION Access of PduRTxConfirmationState and PduRTxConfirmationMapping with same index using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4652    \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4653  
; ..\component\BswM\Implementation\BswM.c	  4654  \ID SBSW_BSWM_PDURTXCONFIRMATIONSTATEIND
; ..\component\BswM\Implementation\BswM.c	  4655    \DESCRIPTION Access to PduRTxConfirmationState via indirection over PduRTxConfirmationMapping.
; ..\component\BswM\Implementation\BswM.c	  4656    \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4657  
; ..\component\BswM\Implementation\BswM.c	  4658  \ID SBSW_BSWM_SDCLIENTSERVICESTATE
; ..\component\BswM\Implementation\BswM.c	  4659    \DESCRIPTION Access of SdClientServiceState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4660    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4661  
; ..\component\BswM\Implementation\BswM.c	  4662  \ID SBSW_BSWM_SDCONSUMEDEVENTSTATE
; ..\component\BswM\Implementation\BswM.c	  4663    \DESCRIPTION Access of SdConsumedEventState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4664    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4665  
; ..\component\BswM\Implementation\BswM.c	  4666  \ID SBSW_BSWM_SDEVENTHANDLERSTATE
; ..\component\BswM\Implementation\BswM.c	  4667    \DESCRIPTION Access of SdEventHandlerState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4668    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4669  
; ..\component\BswM\Implementation\BswM.c	  4670  \ID SBSW_BSWM_WDGMSTATE
; ..\component\BswM\Implementation\BswM.c	  4671    \DESCRIPTION Access of WdgMState using ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4672    \COUNTERMEASURE \N Qualified use-case CSL01 of ComStackLib
; ..\component\BswM\Implementation\BswM.c	  4673  
; ..\component\BswM\Implementation\BswM.c	  4674  \ID SBSW_BSWM_RTE_READ
; ..\component\BswM\Implementation\BswM.c	  4675    \DESCRIPTION The Rte_Read_<Port> function is called with an address to a static variable
; ..\component\BswM\Implementation\BswM.c	  4676    \COUNTERMEASURE \N Write access to a static variable - address is always valid
; ..\component\BswM\Implementation\BswM.c	  4677  
; ..\component\BswM\Implementation\BswM.c	  4678  \ID SBSW_BSWM_RTE_MODE
; ..\component\BswM\Implementation\BswM.c	  4679    \DESCRIPTION The Rte_Mode_<Port> function is called with an address to a static variable and a local variable
; ..\component\BswM\Implementation\BswM.c	  4680    \COUNTERMEASURE \N Write access to a static and a local variable - addresses are always valid
; ..\component\BswM\Implementation\BswM.c	  4681  
; ..\component\BswM\Implementation\BswM.c	  4682  \ID SBSW_BSWM_FCTCALL_LOCALVAR
; ..\component\BswM\Implementation\BswM.c	  4683    \DESCRIPTION The function is called with an address to a local variable.
; ..\component\BswM\Implementation\BswM.c	  4684    \COUNTERMEASURE \N Write access to a local variable - address is always valid. Size is ensured through same type. No array.
; ..\component\BswM\Implementation\BswM.c	  4685  
; ..\component\BswM\Implementation\BswM.c	  4686  \ID SBSW_BSWM_SETIPDUGROUPVECTOR
; ..\component\BswM\Implementation\BswM.c	  4687    \DESCRIPTION Access to generated table which contains function pointer
; ..\component\BswM\Implementation\BswM.c	  4688    \COUNTERMEASURE \M Size of BSWM_IPDUGROUPVECTORSIZE must be equal to the size of Com_IpduGroupVector in bytes.
; ..\component\BswM\Implementation\BswM.c	  4689  
; ..\component\BswM\Implementation\BswM.c	  4690  \ID SBSW_BSWM_IPDUGROUPVECTORCALL
; ..\component\BswM\Implementation\BswM.c	  4691    \DESCRIPTION A Com function is called with an address of a Com_IpduGroupVector. Size of this vector is defined by Com itself
; ..\component\BswM\Implementation\BswM.c	  4692    \COUNTERMEASURE \N Write access to a local variable of same type - address is always valid
; ..\component\BswM\Implementation\BswM.c	  4693  
; ..\component\BswM\Implementation\BswM.c	  4694  \ID SBSW_BSWM_PUSHINTOACTIONLISTPRIORITYQUEUE
; ..\component\BswM\Implementation\BswM.c	  4695    \DESCRIPTION Write access to generated array ActionListPriorityQueue
; ..\component\BswM\Implementation\BswM.c	  4696    \COUNTERMEASURE \R The DET check of the function ensures that child never exceeds the size of the array ActionListPriorityQueue.
; ..\component\BswM\Implementation\BswM.c	  4697  
; ..\component\BswM\Implementation\BswM.c	  4698  \ID SBSW_BSWM_POPFROMACTIONLISTPRIORITYQUEUE
; ..\component\BswM\Implementation\BswM.c	  4699    \DESCRIPTION Write access to generated array ActionListPriorityQueue
; ..\component\BswM\Implementation\BswM.c	  4700    \COUNTERMEASURE \R The access on the ActionListPriorityQueue array is protected with checking the index against the variable
; ..\component\BswM\Implementation\BswM.c	  4701    BswM_LengthOfActionListPriorityQueue which represents the current length of the queue. It is verified in the function 
; ..\component\BswM\Implementation\BswM.c	  4702    BswM_PushIntoActionListQueue that the queue size can only grow until it reaches the absolut size of the array.
; ..\component\BswM\Implementation\BswM.c	  4703  
; ..\component\BswM\Implementation\BswM.c	  4704  \ID SBSW_BSWM_OSAPPLICATIONTOBSWM
; ..\component\BswM\Implementation\BswM.c	  4705    \DESCRIPTION Write access to generated array OsApplicationToBswM
; ..\component\BswM\Implementation\BswM.c	  4706    \COUNTERMEASURE \N The access of the array is only within its bounds. The generated variable SizeOfOsApplication is generated with the exact same
; ..\component\BswM\Implementation\BswM.c	  4707                       data as the variable size itself.
; ..\component\BswM\Implementation\BswM.c	  4708  
; ..\component\BswM\Implementation\BswM.c	  4709  SBSW_JUSTIFICATION_END */
; ..\component\BswM\Implementation\BswM.c	  4710  
; ..\component\BswM\Implementation\BswM.c	  4711  /* COV_JUSTIFICATION_BEGIN
; ..\component\BswM\Implementation\BswM.c	  4712  
; ..\component\BswM\Implementation\BswM.c	  4713  \ID COV_BSWM_LOCAL
; ..\component\BswM\Implementation\BswM.c	  4714    \REASON Ensures that BSWM_LOCAL is always be set.
; ..\component\BswM\Implementation\BswM.c	  4715  
; ..\component\BswM\Implementation\BswM.c	  4716  \ID COV_BSWM_LOCAL_INLINE
; ..\component\BswM\Implementation\BswM.c	  4717    \REASON Ensures that BSWM_LOCAL_INLINE is always be set.
; ..\component\BswM\Implementation\BswM.c	  4718  
; ..\component\BswM\Implementation\BswM.c	  4719  \ID COV_BSWM_DEV_ERROR_DETECT
; ..\component\BswM\Implementation\BswM.c	  4720    \REASON In Safe Configurations the Dev Error Detect switch is always STD_ON. This is globally justified for the regular use case. Special use cases must be justified manually.
; ..\component\BswM\Implementation\BswM.c	  4721  
; ..\component\BswM\Implementation\BswM.c	  4722  \ID COV_BSWM_ECUM_COMPATIBILITY
; ..\component\BswM\Implementation\BswM.c	  4723    \ACCEPT XX
; ..\component\BswM\Implementation\BswM.c	  4724    \ACCEPT TX
; ..\component\BswM\Implementation\BswM.c	  4725    \REASON States are only available to be compatible with former AUTOSAR releases.
; ..\component\BswM\Implementation\BswM.c	  4726  
; ..\component\BswM\Implementation\BswM.c	  4727  \ID COV_BSWM_NM_COMPATIBILITY
; ..\component\BswM\Implementation\BswM.c	  4728    \ACCEPT TX
; ..\component\BswM\Implementation\BswM.c	  4729    \REASON States are only available to be compatible with former AUTOSAR releases.
; ..\component\BswM\Implementation\BswM.c	  4730  
; ..\component\BswM\Implementation\BswM.c	  4731  \ID COV_BSWM_ACTIONLISTBLOCKED
; ..\component\BswM\Implementation\BswM.c	  4732    \ACCEPT TF tf tx
; ..\component\BswM\Implementation\BswM.c	  4733    \REASON Action list is only blocked if configuration of rules leads to the call of the same action list.
; ..\component\BswM\Implementation\BswM.c	  4734  
; ..\component\BswM\Implementation\BswM.c	  4735  \ID COV_BSWM_ACTIONLISTIDLE
; ..\component\BswM\Implementation\BswM.c	  4736    \ACCEPT TF tf tx
; ..\component\BswM\Implementation\BswM.c	  4737    \REASON Action list is only not idle if two rules are arbitrated which shall execute the same action list.
; ..\component\BswM\Implementation\BswM.c	  4738  
; ..\component\BswM\Implementation\BswM.c	  4739  \ID COV_BSWM_ALLNETWORKPORTS
; ..\component\BswM\Implementation\BswM.c	  4740    \ACCEPT TX
; ..\component\BswM\Implementation\BswM.c	  4741    \REASON Configurations contains ports for all available networks. Therefore, loop is always left by break.
; ..\component\BswM\Implementation\BswM.c	  4742  
; ..\component\BswM\Implementation\BswM.c	  4743  \ID COV_BSWM_MODEREQUESTPENDING
; ..\component\BswM\Implementation\BswM.c	  4744    \ACCEPT XF
; ..\component\BswM\Implementation\BswM.c	  4745    \REASON A mode request is only set to pending if the mode request requests itself during its arbitration.
; ..\component\BswM\Implementation\BswM.c	  4746  
; ..\component\BswM\Implementation\BswM.c	  4747  \ID COV_BSWM_TRIGGEREDRULEEXECUTION
; ..\component\BswM\Implementation\BswM.c	  4748    \ACCEPT TX
; ..\component\BswM\Implementation\BswM.c	  4749    \REASON The pattern of triggered rules is tested centrally and must not be tested for each rule of a configuration.
; ..\component\BswM\Implementation\BswM.c	  4750  
; ..\component\BswM\Implementation\BswM.c	  4751  \ID COV_BSWM_WHILE_1
; ..\component\BswM\Implementation\BswM.c	  4752    \REASON The condition while(1) will always return True.
; ..\component\BswM\Implementation\BswM.c	  4753  
; ..\component\BswM\Implementation\BswM.c	  4754  \ID COV_BSWM_PART_ARRAY
; ..\component\BswM\Implementation\BswM.c	  4755    \REASON High effort to cover. Covered by review.
; ..\component\BswM\Implementation\BswM.c	  4756  
; ..\component\BswM\Implementation\BswM.c	  4757  \ID COV_BSWM_ALL_TRUE
; ..\component\BswM\Implementation\BswM.c	  4758    \REASON Due to the configuration, this if statement is always true.
; ..\component\BswM\Implementation\BswM.c	  4759  
; ..\component\BswM\Implementation\BswM.c	  4760  \ID COV_BSWM_INITACTIONLISTS
; ..\component\BswM\Implementation\BswM.c	  4761    \REASON Due to the configurations, there might be no InitActionLists at all. Therefore the size will be zero. The generated function is generic.
; ..\component\BswM\Implementation\BswM.c	  4762  
; ..\component\BswM\Implementation\BswM.c	  4763  COV_JUSTIFICATION_END */
; ..\component\BswM\Implementation\BswM.c	  4764  
; ..\component\BswM\Implementation\BswM.c	  4765  /* Justification for module-specific MISRA deviations:
; ..\component\BswM\Implementation\BswM.c	  4766  
; ..\component\BswM\Implementation\BswM.c	  4767   MD_BSWM_0310:
; ..\component\BswM\Implementation\BswM.c	  4768        Reason:     Only a valid address is needed, data is not accessed.
; ..\component\BswM\Implementation\BswM.c	  4769        Risk:       Access to invalid data.
; ..\component\BswM\Implementation\BswM.c	  4770        Prevention: Covered by code review and test.
; ..\component\BswM\Implementation\BswM.c	  4771  
; ..\component\BswM\Implementation\BswM.c	  4772   MD_BSWM_2741:
; ..\component\BswM\Implementation\BswM.c	  4773        Reason:     In certain cofigurations this statement results always in true.
; ..\component\BswM\Implementation\BswM.c	  4774        Risk:       No functional risk.
; ..\component\BswM\Implementation\BswM.c	  4775        Prevention: Covered by code review.
; ..\component\BswM\Implementation\BswM.c	  4776  
; ..\component\BswM\Implementation\BswM.c	  4777   MD_BSWM_2982:
; ..\component\BswM\Implementation\BswM.c	  4778        Reason:     The semaphore is locked at the beginning and released at the end of the main function. It can be interrupted by other functions.
; ..\component\BswM\Implementation\BswM.c	  4779        Risk:       No functional risk.
; ..\component\BswM\Implementation\BswM.c	  4780        Prevention: Covered by code review and comment in code.
; ..\component\BswM\Implementation\BswM.c	  4781  
; ..\component\BswM\Implementation\BswM.c	  4782   MD_BSWM_3200:
; ..\component\BswM\Implementation\BswM.c	  4783        Reason:     The returned value of an arbitrary user callout is not used, because it can be any configured
; ..\component\BswM\Implementation\BswM.c	  4784                    string, and such return value can not be predicted during generation of the code. 
; ..\component\BswM\Implementation\BswM.c	  4785        Risk:       Testability might become too complex.
; ..\component\BswM\Implementation\BswM.c	  4786        Prevention: Covered by code review.
; ..\component\BswM\Implementation\BswM.c	  4787  
; ..\component\BswM\Implementation\BswM.c	  4788   MD_BSWM_3415:
; ..\component\BswM\Implementation\BswM.c	  4789        Reason:     Generated code of Logical Expression function might contain function calls.
; ..\component\BswM\Implementation\BswM.c	  4790        Risk:       A function that should have been called, is not called.
; ..\component\BswM\Implementation\BswM.c	  4791        Prevention: Covered by generator code review.
; ..\component\BswM\Implementation\BswM.c	  4792  
; ..\component\BswM\Implementation\BswM.c	  4793   MD_BSWM_3449:
; ..\component\BswM\Implementation\BswM.c	  4794        Reason:     The declarations are generated and are always the same.
; ..\component\BswM\Implementation\BswM.c	  4795        Risk:       No functional risk.
; ..\component\BswM\Implementation\BswM.c	  4796        Prevention: Covered by code review.
; ..\component\BswM\Implementation\BswM.c	  4797  
; ..\component\BswM\Implementation\BswM.c	  4798   MD_BSWM_3451:
; ..\component\BswM\Implementation\BswM.c	  4799        Reason:     The declarations are generated and are always the same.
; ..\component\BswM\Implementation\BswM.c	  4800        Risk:       No functional risk.
; ..\component\BswM\Implementation\BswM.c	  4801        Prevention: Covered by code review.
; ..\component\BswM\Implementation\BswM.c	  4802  
; ..\component\BswM\Implementation\BswM.c	  4803   MD_BSWM_3673:
; ..\component\BswM\Implementation\BswM.c	  4804        Reason:     Function prototype needs to be equal to specified AUTOSAR API of calling module.
; ..\component\BswM\Implementation\BswM.c	  4805        Risk:       No functional risk.
; ..\component\BswM\Implementation\BswM.c	  4806        Prevention: Covered by code review.
; ..\component\BswM\Implementation\BswM.c	  4807  
; ..\component\BswM\Implementation\BswM.c	  4808  */
; ..\component\BswM\Implementation\BswM.c	  4809  
; ..\component\BswM\Implementation\BswM.c	  4810  /**********************************************************************************************************************
; ..\component\BswM\Implementation\BswM.c	  4811   *  END OF FILE: BswM.c
; ..\component\BswM\Implementation\BswM.c	  4812   *********************************************************************************************************************/

	; Module end
