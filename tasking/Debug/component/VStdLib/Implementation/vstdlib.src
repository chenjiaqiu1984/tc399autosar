	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\VStdLib\\Implementation\\.vstdlib.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\VStdLib\\Implementation\\vstdlib.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\VStdLib\\Implementation\\vstdlib.src ..\\component\\VStdLib\\Implementation\\vstdlib.c"
	.compiler_name		"ctc"
	;source	'..\\component\\VStdLib\\Implementation\\vstdlib.c'

	
$TC162
	
	.sdecl	'.text.vstdlib.VStdLib_MemSet',code,cluster('VStdLib_MemSet')
	.sect	'.text.vstdlib.VStdLib_MemSet'
	.align	2
	
	.global	VStdLib_MemSet

; ..\component\VStdLib\Implementation\vstdlib.c	     1  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	     2   *  COPYRIGHT
; ..\component\VStdLib\Implementation\vstdlib.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\VStdLib\Implementation\vstdlib.c	     4   *  \verbatim
; ..\component\VStdLib\Implementation\vstdlib.c	     5   *  Copyright (c) 2018 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\VStdLib\Implementation\vstdlib.c	     6   *
; ..\component\VStdLib\Implementation\vstdlib.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\VStdLib\Implementation\vstdlib.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\VStdLib\Implementation\vstdlib.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\VStdLib\Implementation\vstdlib.c	    10   *  \endverbatim
; ..\component\VStdLib\Implementation\vstdlib.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\VStdLib\Implementation\vstdlib.c	    12   *  FILE DESCRIPTION
; ..\component\VStdLib\Implementation\vstdlib.c	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\VStdLib\Implementation\vstdlib.c	    14  /**        \file  vstdlib.c
; ..\component\VStdLib\Implementation\vstdlib.c	    15   *        \brief  Implementation of the generic Vector Standard Library (VStdLib_GenericAsr)
; ..\component\VStdLib\Implementation\vstdlib.c	    16   *
; ..\component\VStdLib\Implementation\vstdlib.c	    17   *      \details  The generic Vector Standard Library provides a hardware independent implementation
; ..\component\VStdLib\Implementation\vstdlib.c	    18   *                of memory manipulation services used by several MICROSAR BSW components.
; ..\component\VStdLib\Implementation\vstdlib.c	    19   *
; ..\component\VStdLib\Implementation\vstdlib.c	    20   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	    21  
; ..\component\VStdLib\Implementation\vstdlib.c	    22  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	    23   *  REVISION HISTORY
; ..\component\VStdLib\Implementation\vstdlib.c	    24   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\VStdLib\Implementation\vstdlib.c	    25   *  Refer to the header file.
; ..\component\VStdLib\Implementation\vstdlib.c	    26   *
; ..\component\VStdLib\Implementation\vstdlib.c	    27   *  FILE VERSION
; ..\component\VStdLib\Implementation\vstdlib.c	    28   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\VStdLib\Implementation\vstdlib.c	    29   *  Refer to the VERSION CHECK below.
; ..\component\VStdLib\Implementation\vstdlib.c	    30   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	    31  
; ..\component\VStdLib\Implementation\vstdlib.c	    32  #define VSTDLIB_SOURCE
; ..\component\VStdLib\Implementation\vstdlib.c	    33  
; ..\component\VStdLib\Implementation\vstdlib.c	    34  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	    35   *  INCLUDES
; ..\component\VStdLib\Implementation\vstdlib.c	    36   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	    37  
; ..\component\VStdLib\Implementation\vstdlib.c	    38  #include "vstdlib.h"
; ..\component\VStdLib\Implementation\vstdlib.c	    39  
; ..\component\VStdLib\Implementation\vstdlib.c	    40  #if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	    41  # include "Det.h"
; ..\component\VStdLib\Implementation\vstdlib.c	    42  #endif
; ..\component\VStdLib\Implementation\vstdlib.c	    43  
; ..\component\VStdLib\Implementation\vstdlib.c	    44  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	    45   *  VERSION CHECK
; ..\component\VStdLib\Implementation\vstdlib.c	    46   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	    47  
; ..\component\VStdLib\Implementation\vstdlib.c	    48  /* Checks the version of the interface header file */
; ..\component\VStdLib\Implementation\vstdlib.c	    49  #if (  (VSTDLIB_SW_MAJOR_VERSION != (3u)) \ 
; ..\component\VStdLib\Implementation\vstdlib.c	    50      || (VSTDLIB_SW_MINOR_VERSION != (0u)) \ 
; ..\component\VStdLib\Implementation\vstdlib.c	    51      || (VSTDLIB_SW_PATCH_VERSION != (0u)) )
; ..\component\VStdLib\Implementation\vstdlib.c	    52  # error "Version numbers of vstdlib.c and vstdlib.h are inconsistent!"
; ..\component\VStdLib\Implementation\vstdlib.c	    53  #endif
; ..\component\VStdLib\Implementation\vstdlib.c	    54  
; ..\component\VStdLib\Implementation\vstdlib.c	    55  /* Checks the version of the configuration header file */
; ..\component\VStdLib\Implementation\vstdlib.c	    56  #if (  (VSTDLIB_CFG_MAJOR_VERSION != (2u)) \ 
; ..\component\VStdLib\Implementation\vstdlib.c	    57      || (VSTDLIB_CFG_MINOR_VERSION != (0u)) )
; ..\component\VStdLib\Implementation\vstdlib.c	    58  # error "Version numbers of vstdlib.c and VStdLib_Cfg.h are inconsistent!"
; ..\component\VStdLib\Implementation\vstdlib.c	    59  #endif
; ..\component\VStdLib\Implementation\vstdlib.c	    60  
; ..\component\VStdLib\Implementation\vstdlib.c	    61  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	    62   *  CONFIGURATION CHECK
; ..\component\VStdLib\Implementation\vstdlib.c	    63   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	    64  
; ..\component\VStdLib\Implementation\vstdlib.c	    65  # if !defined (VSTDLIB_USE_LIBRARY_FUNCTIONS)
; ..\component\VStdLib\Implementation\vstdlib.c	    66  #  error "VSTDLIB_USE_LIBRARY_FUNCTIONS has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    67  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    68  
; ..\component\VStdLib\Implementation\vstdlib.c	    69  # if !defined (VSTDLIB_RUNTIME_OPTIMIZATION)
; ..\component\VStdLib\Implementation\vstdlib.c	    70  #  error "VSTDLIB_RUNTIME_OPTIMIZATION has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    71  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    72  
; ..\component\VStdLib\Implementation\vstdlib.c	    73  # if !defined (VSTDLIB_USE_JUMPTABLES)
; ..\component\VStdLib\Implementation\vstdlib.c	    74  #  error "VSTDLIB_USE_JUMPTABLES has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    75  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    76  
; ..\component\VStdLib\Implementation\vstdlib.c	    77  # if !defined (VSTDLIB_DEV_ERROR_DETECT)
; ..\component\VStdLib\Implementation\vstdlib.c	    78  #  error "VSTDLIB_DEV_ERROR_DETECT has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    79  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    80  
; ..\component\VStdLib\Implementation\vstdlib.c	    81  # if !defined (VSTDLIB_DEV_ERROR_REPORT)
; ..\component\VStdLib\Implementation\vstdlib.c	    82  #  error "VSTDLIB_DEV_ERROR_REPORT has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    83  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    84  
; ..\component\VStdLib\Implementation\vstdlib.c	    85  # if !defined (VSTDLIB_VERSION_INFO_API)
; ..\component\VStdLib\Implementation\vstdlib.c	    86  #  error "VSTDLIB_VERSION_INFO_API has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    87  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    88  
; ..\component\VStdLib\Implementation\vstdlib.c	    89  # if !defined (VSTDLIB_DUMMY_STATEMENT)
; ..\component\VStdLib\Implementation\vstdlib.c	    90  #  error "VSTDLIB_DUMMY_STATEMENT has to be defined.. check VStdLib_Cfg.h!"
; ..\component\VStdLib\Implementation\vstdlib.c	    91  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    92  
; ..\component\VStdLib\Implementation\vstdlib.c	    93  # if ((VSTDLIB_DEV_ERROR_REPORT == STD_ON) && (VSTDLIB_DEV_ERROR_DETECT != STD_ON))
; ..\component\VStdLib\Implementation\vstdlib.c	    94  #  error "VSTDLIB_DEV_ERROR_REPORT defined to STD_ON requires VSTDLIB_DEV_ERROR_DETECT also to be defined to STD_ON!"
; ..\component\VStdLib\Implementation\vstdlib.c	    95  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	    96  
; ..\component\VStdLib\Implementation\vstdlib.c	    97  # if (VSTDLIB_USE_LIBRARY_FUNCTIONS == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	    98  #  if (!defined (VStdLib_MemClr) || !defined (VStdLib_MemSet) || !defined (VStdLib_MemCpy) || \ 
; ..\component\VStdLib\Implementation\vstdlib.c	    99         !defined (VStdLib_MemCpy16) || !defined (VStdLib_MemCpy32))
; ..\component\VStdLib\Implementation\vstdlib.c	   100  #   error "VStdLib_MemClr, VStdLib_MemSet, VStdLib_MemCpy, VStdLib_MemCpy16 and VStdLib_MemCpy32 have to be defined!"
; ..\component\VStdLib\Implementation\vstdlib.c	   101  #  endif
; ..\component\VStdLib\Implementation\vstdlib.c	   102  # else
; ..\component\VStdLib\Implementation\vstdlib.c	   103  #  if ((VSTDLIB_SUPPORT_LARGE_DATA != STD_ON) && (VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON))
; ..\component\VStdLib\Implementation\vstdlib.c	   104  #   error "VSTDLIB_RUNTIME_OPTIMIZATION must not be enabled if large data support is not given!"
; ..\component\VStdLib\Implementation\vstdlib.c	   105  #  endif
; ..\component\VStdLib\Implementation\vstdlib.c	   106  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	   107  
; ..\component\VStdLib\Implementation\vstdlib.c	   108  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   109   *  LOCAL CONSTANT MACROS
; ..\component\VStdLib\Implementation\vstdlib.c	   110   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   111  
; ..\component\VStdLib\Implementation\vstdlib.c	   112  /* Masks internal parameters to ensure an upper limit of 3, respectively 31 */
; ..\component\VStdLib\Implementation\vstdlib.c	   113  #define VSTDLIB_MASK_3                       (0x03u)
; ..\component\VStdLib\Implementation\vstdlib.c	   114  #define VSTDLIB_MASK_31                      (0x1Fu)
; ..\component\VStdLib\Implementation\vstdlib.c	   115  
; ..\component\VStdLib\Implementation\vstdlib.c	   116  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   117   *  LOCAL FUNCTION MACROS
; ..\component\VStdLib\Implementation\vstdlib.c	   118   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   119  
; ..\component\VStdLib\Implementation\vstdlib.c	   120  /* Returns the number of bytes that are missing to the next 32-bit boundary */
; ..\component\VStdLib\Implementation\vstdlib.c	   121  #define VSTDLIB_ALIGN_OFFSET(ptr) /* PRQA S 3453 */ /* MD_MSR_FctLikeMacro */ \ 
; ..\component\VStdLib\Implementation\vstdlib.c	   122    (uint8_least)((4u - (uint32_least)(ptr)) & VSTDLIB_MASK_3)
; ..\component\VStdLib\Implementation\vstdlib.c	   123  
; ..\component\VStdLib\Implementation\vstdlib.c	   124  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   125   *  LOCAL TYPES AND STRUCTURES
; ..\component\VStdLib\Implementation\vstdlib.c	   126   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   127  
; ..\component\VStdLib\Implementation\vstdlib.c	   128  /* Module specific definition of LOCAL_INLINE */
; ..\component\VStdLib\Implementation\vstdlib.c	   129  #if !defined (VSTDLIB_LOCAL_INLINE)
; ..\component\VStdLib\Implementation\vstdlib.c	   130  # define VSTDLIB_LOCAL_INLINE                LOCAL_INLINE
; ..\component\VStdLib\Implementation\vstdlib.c	   131  #endif
; ..\component\VStdLib\Implementation\vstdlib.c	   132  
; ..\component\VStdLib\Implementation\vstdlib.c	   133  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   134   *  LOCAL FUNCTION PROTOTYPES
; ..\component\VStdLib\Implementation\vstdlib.c	   135   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   136  
; ..\component\VStdLib\Implementation\vstdlib.c	   137  #define VSTDLIB_START_SEC_CODE
; ..\component\VStdLib\Implementation\vstdlib.c	   138  #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\VStdLib\Implementation\vstdlib.c	   139  
; ..\component\VStdLib\Implementation\vstdlib.c	   140  #if (VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   141  # if (VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   142  
; ..\component\VStdLib\Implementation\vstdlib.c	   143  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   144   *  VStdLib_Loc_MemSet_8_3()
; ..\component\VStdLib\Implementation\vstdlib.c	   145   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   146  /*! \brief         Initializes up to 3 bytes at pDst to the character nPattern (any alignment).
; ..\component\VStdLib\Implementation\vstdlib.c	   147   *  \details       Depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   148   *  \param[out]    pDst8         8-bit pointer to the memory location to be initialized.
; ..\component\VStdLib\Implementation\vstdlib.c	   149   *  \param[in]     nPattern      The character to be used to initialize the memory.
; ..\component\VStdLib\Implementation\vstdlib.c	   150   *  \param[in]     nCnt          Number of bytes to initialize, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   151   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   152   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   153   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   154   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   155   *  \pre           The parameters 'pDst8' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   156   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   157  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemSet_8_3(
; ..\component\VStdLib\Implementation\vstdlib.c	   158    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   159    uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   160    uint8_least nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	   161  
; ..\component\VStdLib\Implementation\vstdlib.c	   162  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   163   *  VStdLib_Loc_MemSet_8_31()
; ..\component\VStdLib\Implementation\vstdlib.c	   164   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   165  /*! \brief         Initializes up to 31 bytes at pDst to the character nPattern (any alignment).
; ..\component\VStdLib\Implementation\vstdlib.c	   166   *  \details       Depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   167   *  \param[out]    pDst8         8-bit pointer to the memory location to be initialized.
; ..\component\VStdLib\Implementation\vstdlib.c	   168   *  \param[in]     nPattern      The character to be used to initialize the memory.
; ..\component\VStdLib\Implementation\vstdlib.c	   169   *  \param[in]     nCnt          Number of bytes to initialize, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   170   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   171   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   172   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   173   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   174   *  \pre           The parameters 'pDst8' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   175   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   176  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemSet_8_31(
; ..\component\VStdLib\Implementation\vstdlib.c	   177    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   178    uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   179    uint8_least nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	   180  
; ..\component\VStdLib\Implementation\vstdlib.c	   181  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   182   *  VStdLib_Loc_MemSet_32_Aligned()
; ..\component\VStdLib\Implementation\vstdlib.c	   183   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   184  /*! \brief         Initializes memory at pDst to the character nPattern (32-bit aligned).
; ..\component\VStdLib\Implementation\vstdlib.c	   185   *  \details       With a for loop, the tail depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   186   *  \param[out]    pDst32        32-bit pointer to the memory location to be initialized.
; ..\component\VStdLib\Implementation\vstdlib.c	   187   *  \param[in]     nPattern      The character to be used to initialize the memory.
; ..\component\VStdLib\Implementation\vstdlib.c	   188   *  \param[in]     nCnt          Number of bytes to initialize, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   189   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   190   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   191   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   192   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   193   *  \pre           The parameters 'pDst32' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   194   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   195  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemSet_32_Aligned(
; ..\component\VStdLib\Implementation\vstdlib.c	   196    P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pDst32,
; ..\component\VStdLib\Implementation\vstdlib.c	   197    uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   198    uint32_least nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	   199  
; ..\component\VStdLib\Implementation\vstdlib.c	   200  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   201   *  VStdLib_Loc_MemCpy_8_3()
; ..\component\VStdLib\Implementation\vstdlib.c	   202   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   203  /*! \brief         Copies up to 3 bytes from pSrc to pDst (any alignment).
; ..\component\VStdLib\Implementation\vstdlib.c	   204   *  \details       Depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   205   *  \param[out]    pDst8         8-bit pointer to the memory location to copy to.
; ..\component\VStdLib\Implementation\vstdlib.c	   206   *  \param[in]     pSrc8         8-bit pointer to the memory location to copy from.
; ..\component\VStdLib\Implementation\vstdlib.c	   207   *  \param[in]     nCnt          Number of bytes to copy, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   208   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   209   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   210   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   211   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   212   *  \pre           The parameters 'pDst8' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   213   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   214  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_8_3(
; ..\component\VStdLib\Implementation\vstdlib.c	   215    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   216    P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc8,
; ..\component\VStdLib\Implementation\vstdlib.c	   217    uint8_least nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	   218  
; ..\component\VStdLib\Implementation\vstdlib.c	   219  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   220   *  VStdLib_Loc_MemCpy_8_31()
; ..\component\VStdLib\Implementation\vstdlib.c	   221   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   222  /*! \brief         Copies up to 31 bytes from pSrc to pDst (any alignment).
; ..\component\VStdLib\Implementation\vstdlib.c	   223   *  \details       Depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   224   *  \param[out]    pDst8         8-bit pointer to the memory location to copy to.
; ..\component\VStdLib\Implementation\vstdlib.c	   225   *  \param[in]     pSrc8         8-bit pointer to the memory location to copy from.
; ..\component\VStdLib\Implementation\vstdlib.c	   226   *  \param[in]     nCnt          Number of bytes to copy, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   227   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   228   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   229   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   230   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   231   *  \pre           The parameters 'pDst8' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   232   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   233  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_8_31(
; ..\component\VStdLib\Implementation\vstdlib.c	   234    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   235    P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc8,
; ..\component\VStdLib\Implementation\vstdlib.c	   236    uint8_least nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	   237  
; ..\component\VStdLib\Implementation\vstdlib.c	   238  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   239   *  VStdLib_Loc_MemCpy_32_Aligned()
; ..\component\VStdLib\Implementation\vstdlib.c	   240   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   241  /*! \brief         Copies 32-bit aligned data from pSrc to pDst.
; ..\component\VStdLib\Implementation\vstdlib.c	   242   *  \details       With a for loop, the tail depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   243   *  \param[out]    pDst32        32-bit pointer to the memory location to copy to.
; ..\component\VStdLib\Implementation\vstdlib.c	   244   *  \param[in]     pSrc32        32-bit pointer to the memory location to copy from.
; ..\component\VStdLib\Implementation\vstdlib.c	   245   *  \param[in]     nCnt          Number of bytes to copy, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   246   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   247   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   248   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   249   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   250   *  \pre           The parameters 'pDst32' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   251   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   252  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_32_Aligned(
; ..\component\VStdLib\Implementation\vstdlib.c	   253    P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pDst32,
; ..\component\VStdLib\Implementation\vstdlib.c	   254    P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc32,
; ..\component\VStdLib\Implementation\vstdlib.c	   255    uint32_least nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	   256  
; ..\component\VStdLib\Implementation\vstdlib.c	   257  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   258   *  VStdLib_Loc_MemCpy_8_PartialWord()
; ..\component\VStdLib\Implementation\vstdlib.c	   259   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   260  /*! \brief         Copies a partial word of 1 to 3 bytes from pSrc to pDst to reach a 32-bit boundary (any alignment).
; ..\component\VStdLib\Implementation\vstdlib.c	   261   *  \details       Depending on VSTDLIB_USE_JUMPTABLES either with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   262   *  \param[out]    pDst8         8-bit pointer to the memory location to copy to.
; ..\component\VStdLib\Implementation\vstdlib.c	   263   *  \param[in]     nCnt          Number of bytes to copy, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   264   *  \param[in,out] pPrev         Word to copy from (is modified and used by caller afterwards).
; ..\component\VStdLib\Implementation\vstdlib.c	   265   *  \param[in,out] pDPos         Index for pDst8 to copy to (is modified and used by caller afterwards).
; ..\component\VStdLib\Implementation\vstdlib.c	   266   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   267   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   268   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   269   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   270   *  \pre           The parameters 'pDst8' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   271   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   272  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_8_PartialWord(
; ..\component\VStdLib\Implementation\vstdlib.c	   273    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   274    uint8_least nCnt,
; ..\component\VStdLib\Implementation\vstdlib.c	   275    P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pPrev,
; ..\component\VStdLib\Implementation\vstdlib.c	   276    P2VAR(uint32_least, AUTOMATIC, VSTDLIB_VAR_FAR) pDPos);
; ..\component\VStdLib\Implementation\vstdlib.c	   277  
; ..\component\VStdLib\Implementation\vstdlib.c	   278  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   279   *  VStdLib_Loc_MemCpy_32_Unaligned()
; ..\component\VStdLib\Implementation\vstdlib.c	   280   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   281  /*! \brief         Copies data from 32-bit aligned pSrc to unaligned pDst.
; ..\component\VStdLib\Implementation\vstdlib.c	   282   *  \details       With a for loop using 32-bit accesses, the head and tail depending on VSTDLIB_USE_JUMPTABLES either
; ..\component\VStdLib\Implementation\vstdlib.c	   283                     with a jumptable or a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	   284   *  \param[out]    pDst8         8-bit pointer to the memory location to copy to.
; ..\component\VStdLib\Implementation\vstdlib.c	   285   *  \param[in]     pSrc32        32-bit pointer to the memory location to copy from.
; ..\component\VStdLib\Implementation\vstdlib.c	   286   *  \param[in]     nCnt          Number of bytes to copy, pDst must be valid for this amount.
; ..\component\VStdLib\Implementation\vstdlib.c	   287   *  \param[in]     nDstOffset    pDst offset to the next 32-bit boundary.
; ..\component\VStdLib\Implementation\vstdlib.c	   288   *  \context       ANY
; ..\component\VStdLib\Implementation\vstdlib.c	   289   *  \reentrant     TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   290   *  \synchronous   TRUE
; ..\component\VStdLib\Implementation\vstdlib.c	   291   *  \config        VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON && VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON
; ..\component\VStdLib\Implementation\vstdlib.c	   292   *  \pre           The parameters 'pDst8' and 'nCnt' have to define a valid memory area.
; ..\component\VStdLib\Implementation\vstdlib.c	   293   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   294  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_32_Unaligned(
; ..\component\VStdLib\Implementation\vstdlib.c	   295    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   296    P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc32,
; ..\component\VStdLib\Implementation\vstdlib.c	   297    uint32_least nCnt,
; ..\component\VStdLib\Implementation\vstdlib.c	   298    uint8_least nDstOffset);
; ..\component\VStdLib\Implementation\vstdlib.c	   299  
; ..\component\VStdLib\Implementation\vstdlib.c	   300  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   301   *  LOCAL FUNCTIONS
; ..\component\VStdLib\Implementation\vstdlib.c	   302   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   303  
; ..\component\VStdLib\Implementation\vstdlib.c	   304  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   305   * VStdLib_Loc_MemSet_8_3()
; ..\component\VStdLib\Implementation\vstdlib.c	   306   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   307  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   308   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   309   *
; ..\component\VStdLib\Implementation\vstdlib.c	   310   *
; ..\component\VStdLib\Implementation\vstdlib.c	   311   *
; ..\component\VStdLib\Implementation\vstdlib.c	   312   *
; ..\component\VStdLib\Implementation\vstdlib.c	   313   *
; ..\component\VStdLib\Implementation\vstdlib.c	   314   */
; ..\component\VStdLib\Implementation\vstdlib.c	   315  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemSet_8_3(
; ..\component\VStdLib\Implementation\vstdlib.c	   316    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   317    uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   318    uint8_least nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   319  {
; ..\component\VStdLib\Implementation\vstdlib.c	   320    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   321  #  if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   322  
; ..\component\VStdLib\Implementation\vstdlib.c	   323    /* #10 Initialize up to 3 bytes using a jump table */
; ..\component\VStdLib\Implementation\vstdlib.c	   324    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   325    switch (nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   326    {
; ..\component\VStdLib\Implementation\vstdlib.c	   327      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   328        pDst8[2] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   329        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   330      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   331        pDst8[1] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   332        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   333      case 1:
; ..\component\VStdLib\Implementation\vstdlib.c	   334        pDst8[0] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   335        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   336      default:
; ..\component\VStdLib\Implementation\vstdlib.c	   337        /* nothing to do */
; ..\component\VStdLib\Implementation\vstdlib.c	   338        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   339    }
; ..\component\VStdLib\Implementation\vstdlib.c	   340    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   341  
; ..\component\VStdLib\Implementation\vstdlib.c	   342  #  else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   343  
; ..\component\VStdLib\Implementation\vstdlib.c	   344    uint8_least idx;
; ..\component\VStdLib\Implementation\vstdlib.c	   345  
; ..\component\VStdLib\Implementation\vstdlib.c	   346    /* #20 Linearly initialize the bytes using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	   347    for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	   348    {
; ..\component\VStdLib\Implementation\vstdlib.c	   349      pDst8[idx] = nPattern; /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   350    }
; ..\component\VStdLib\Implementation\vstdlib.c	   351  
; ..\component\VStdLib\Implementation\vstdlib.c	   352  #  endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   353  } /* VStdLib_Loc_MemSet_8_3() */
; ..\component\VStdLib\Implementation\vstdlib.c	   354  
; ..\component\VStdLib\Implementation\vstdlib.c	   355  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   356   * VStdLib_Loc_MemSet_8_31()
; ..\component\VStdLib\Implementation\vstdlib.c	   357   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   358  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   359   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   360   *
; ..\component\VStdLib\Implementation\vstdlib.c	   361   *
; ..\component\VStdLib\Implementation\vstdlib.c	   362   *
; ..\component\VStdLib\Implementation\vstdlib.c	   363   *
; ..\component\VStdLib\Implementation\vstdlib.c	   364   *
; ..\component\VStdLib\Implementation\vstdlib.c	   365   */
; ..\component\VStdLib\Implementation\vstdlib.c	   366  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemSet_8_31(
; ..\component\VStdLib\Implementation\vstdlib.c	   367    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   368    uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   369    uint8_least nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   370  {
; ..\component\VStdLib\Implementation\vstdlib.c	   371    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   372  #  if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   373  
; ..\component\VStdLib\Implementation\vstdlib.c	   374    /* #10 Initialize up to 31 bytes using a jump table */
; ..\component\VStdLib\Implementation\vstdlib.c	   375    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   376    switch (nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   377    {
; ..\component\VStdLib\Implementation\vstdlib.c	   378      case 31:
; ..\component\VStdLib\Implementation\vstdlib.c	   379        pDst8[30] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   380        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   381      case 30:
; ..\component\VStdLib\Implementation\vstdlib.c	   382        pDst8[29] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   383        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   384      case 29:
; ..\component\VStdLib\Implementation\vstdlib.c	   385        pDst8[28] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   386        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   387      case 28:
; ..\component\VStdLib\Implementation\vstdlib.c	   388        pDst8[27] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   389        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   390      case 27:
; ..\component\VStdLib\Implementation\vstdlib.c	   391        pDst8[26] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   392        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   393      case 26:
; ..\component\VStdLib\Implementation\vstdlib.c	   394        pDst8[25] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   395        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   396      case 25:
; ..\component\VStdLib\Implementation\vstdlib.c	   397        pDst8[24] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   398        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   399      case 24:
; ..\component\VStdLib\Implementation\vstdlib.c	   400        pDst8[23] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   401        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   402      case 23:
; ..\component\VStdLib\Implementation\vstdlib.c	   403        pDst8[22] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   404        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   405      case 22:
; ..\component\VStdLib\Implementation\vstdlib.c	   406        pDst8[21] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   407        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   408      case 21:
; ..\component\VStdLib\Implementation\vstdlib.c	   409        pDst8[20] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   410        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   411      case 20:
; ..\component\VStdLib\Implementation\vstdlib.c	   412        pDst8[19] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   413        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   414      case 19:
; ..\component\VStdLib\Implementation\vstdlib.c	   415        pDst8[18] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   416        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   417      case 18:
; ..\component\VStdLib\Implementation\vstdlib.c	   418        pDst8[17] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   419        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   420      case 17:
; ..\component\VStdLib\Implementation\vstdlib.c	   421        pDst8[16] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   422        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   423      case 16:
; ..\component\VStdLib\Implementation\vstdlib.c	   424        pDst8[15] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   425        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   426      case 15:
; ..\component\VStdLib\Implementation\vstdlib.c	   427        pDst8[14] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   428        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   429      case 14:
; ..\component\VStdLib\Implementation\vstdlib.c	   430        pDst8[13] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   431        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   432      case 13:
; ..\component\VStdLib\Implementation\vstdlib.c	   433        pDst8[12] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   434        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   435      case 12:
; ..\component\VStdLib\Implementation\vstdlib.c	   436        pDst8[11] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   437        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   438      case 11:
; ..\component\VStdLib\Implementation\vstdlib.c	   439        pDst8[10] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   440        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   441      case 10:
; ..\component\VStdLib\Implementation\vstdlib.c	   442        pDst8[9] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   443        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   444      case 9:
; ..\component\VStdLib\Implementation\vstdlib.c	   445        pDst8[8] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   446        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   447      case 8:
; ..\component\VStdLib\Implementation\vstdlib.c	   448        pDst8[7] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   449        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   450      case 7:
; ..\component\VStdLib\Implementation\vstdlib.c	   451        pDst8[6] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   452        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   453      case 6:
; ..\component\VStdLib\Implementation\vstdlib.c	   454        pDst8[5] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   455        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   456      case 5:
; ..\component\VStdLib\Implementation\vstdlib.c	   457        pDst8[4] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   458        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   459      case 4:
; ..\component\VStdLib\Implementation\vstdlib.c	   460        pDst8[3] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   461        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   462      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   463        pDst8[2] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   464        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   465      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   466        pDst8[1] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   467        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   468      case 1:
; ..\component\VStdLib\Implementation\vstdlib.c	   469        pDst8[0] = nPattern; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   470        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   471      default:
; ..\component\VStdLib\Implementation\vstdlib.c	   472        /* nothing to do */
; ..\component\VStdLib\Implementation\vstdlib.c	   473        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   474    }
; ..\component\VStdLib\Implementation\vstdlib.c	   475    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   476  
; ..\component\VStdLib\Implementation\vstdlib.c	   477  #  else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   478  
; ..\component\VStdLib\Implementation\vstdlib.c	   479    uint8_least idx;
; ..\component\VStdLib\Implementation\vstdlib.c	   480  
; ..\component\VStdLib\Implementation\vstdlib.c	   481    /* #20 Linearly initialize the bytes using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	   482    for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	   483    {
; ..\component\VStdLib\Implementation\vstdlib.c	   484      pDst8[idx] = nPattern;  /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   485    }
; ..\component\VStdLib\Implementation\vstdlib.c	   486  
; ..\component\VStdLib\Implementation\vstdlib.c	   487  #  endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   488  } /* VStdLib_Loc_MemSet_8_31() */ /* PRQA S 6030 */ /* MD_VStdLib_Metrics */
; ..\component\VStdLib\Implementation\vstdlib.c	   489  
; ..\component\VStdLib\Implementation\vstdlib.c	   490  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   491   * VStdLib_Loc_MemSet_32_Aligned()
; ..\component\VStdLib\Implementation\vstdlib.c	   492   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   493  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   494   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   495   *
; ..\component\VStdLib\Implementation\vstdlib.c	   496   *
; ..\component\VStdLib\Implementation\vstdlib.c	   497   *
; ..\component\VStdLib\Implementation\vstdlib.c	   498   *
; ..\component\VStdLib\Implementation\vstdlib.c	   499   *
; ..\component\VStdLib\Implementation\vstdlib.c	   500   *
; ..\component\VStdLib\Implementation\vstdlib.c	   501   */
; ..\component\VStdLib\Implementation\vstdlib.c	   502  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemSet_32_Aligned(
; ..\component\VStdLib\Implementation\vstdlib.c	   503    P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pDst32,
; ..\component\VStdLib\Implementation\vstdlib.c	   504    uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   505    uint32_least nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   506  {
; ..\component\VStdLib\Implementation\vstdlib.c	   507    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   508    uint32_least dPos = 0u;
; ..\component\VStdLib\Implementation\vstdlib.c	   509    uint32_least remaining;
; ..\component\VStdLib\Implementation\vstdlib.c	   510    uint32 nPattern32 =
; ..\component\VStdLib\Implementation\vstdlib.c	   511      (uint32)(((uint32)nPattern << 24u) | ((uint32)nPattern << 16u) | ((uint32)nPattern << 8u) | nPattern);
; ..\component\VStdLib\Implementation\vstdlib.c	   512  
; ..\component\VStdLib\Implementation\vstdlib.c	   513    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   514    /* #10 Linearly initialize 16-byte blocks using 32-bit accesses in a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	   515    for (remaining = nCnt; remaining >= 16u; remaining -= 16u)
; ..\component\VStdLib\Implementation\vstdlib.c	   516    {
; ..\component\VStdLib\Implementation\vstdlib.c	   517      pDst32[dPos]      = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   518      pDst32[dPos + 1u] = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   519      pDst32[dPos + 2u] = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   520      pDst32[dPos + 3u] = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   521      dPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	   522    }
; ..\component\VStdLib\Implementation\vstdlib.c	   523  
; ..\component\VStdLib\Implementation\vstdlib.c	   524  #  if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   525  
; ..\component\VStdLib\Implementation\vstdlib.c	   526    /* #20 Initialize the remaining block using a jump table */
; ..\component\VStdLib\Implementation\vstdlib.c	   527    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   528    switch (remaining)
; ..\component\VStdLib\Implementation\vstdlib.c	   529    {
; ..\component\VStdLib\Implementation\vstdlib.c	   530      case 15:
; ..\component\VStdLib\Implementation\vstdlib.c	   531      case 14:
; ..\component\VStdLib\Implementation\vstdlib.c	   532      case 13:
; ..\component\VStdLib\Implementation\vstdlib.c	   533      case 12:
; ..\component\VStdLib\Implementation\vstdlib.c	   534        pDst32[dPos] = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   535        dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   536        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   537      case 11:
; ..\component\VStdLib\Implementation\vstdlib.c	   538      case 10:
; ..\component\VStdLib\Implementation\vstdlib.c	   539      case 9:
; ..\component\VStdLib\Implementation\vstdlib.c	   540      case 8:
; ..\component\VStdLib\Implementation\vstdlib.c	   541        pDst32[dPos] = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   542        dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   543        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   544      case 7:
; ..\component\VStdLib\Implementation\vstdlib.c	   545      case 6:
; ..\component\VStdLib\Implementation\vstdlib.c	   546      case 5:
; ..\component\VStdLib\Implementation\vstdlib.c	   547      case 4:
; ..\component\VStdLib\Implementation\vstdlib.c	   548        pDst32[dPos] = nPattern32; /* SBSW_VSTDLIB_ACCESS_32_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   549        dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   550        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   551      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   552      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   553      case 1:
; ..\component\VStdLib\Implementation\vstdlib.c	   554        VStdLib_Loc_MemSet_8_3( /* SBSW_VSTDLIB_CALL_REMAINING_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   555          (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pDst32[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	   556          nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   557          (uint8_least) (remaining & VSTDLIB_MASK_3));
; ..\component\VStdLib\Implementation\vstdlib.c	   558        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   559      default:
; ..\component\VStdLib\Implementation\vstdlib.c	   560        /* nothing to do */
; ..\component\VStdLib\Implementation\vstdlib.c	   561        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   562    }
; ..\component\VStdLib\Implementation\vstdlib.c	   563    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   564  
; ..\component\VStdLib\Implementation\vstdlib.c	   565  #  else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   566  
; ..\component\VStdLib\Implementation\vstdlib.c	   567    /* #30 Initialize the remaining block using a byte-wise algorithm */
; ..\component\VStdLib\Implementation\vstdlib.c	   568    VStdLib_Loc_MemSet_8_31( /* SBSW_VSTDLIB_CALL_REMAINING */
; ..\component\VStdLib\Implementation\vstdlib.c	   569      (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pDst32[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	   570      nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	   571      (uint8_least) remaining);
; ..\component\VStdLib\Implementation\vstdlib.c	   572  
; ..\component\VStdLib\Implementation\vstdlib.c	   573  #  endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   574  } /* VStdLib_Loc_MemSet_32_Aligned() */
; ..\component\VStdLib\Implementation\vstdlib.c	   575  
; ..\component\VStdLib\Implementation\vstdlib.c	   576  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   577   * VStdLib_Loc_MemCpy_8_3()
; ..\component\VStdLib\Implementation\vstdlib.c	   578   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   579  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   580   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   581   *
; ..\component\VStdLib\Implementation\vstdlib.c	   582   *
; ..\component\VStdLib\Implementation\vstdlib.c	   583   *
; ..\component\VStdLib\Implementation\vstdlib.c	   584   *
; ..\component\VStdLib\Implementation\vstdlib.c	   585   *
; ..\component\VStdLib\Implementation\vstdlib.c	   586   */
; ..\component\VStdLib\Implementation\vstdlib.c	   587  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_8_3(
; ..\component\VStdLib\Implementation\vstdlib.c	   588    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   589    P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc8,
; ..\component\VStdLib\Implementation\vstdlib.c	   590    uint8_least nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   591  {
; ..\component\VStdLib\Implementation\vstdlib.c	   592    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   593  #  if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   594  
; ..\component\VStdLib\Implementation\vstdlib.c	   595    /* #10 Copy up to 3 bytes using a jump table */
; ..\component\VStdLib\Implementation\vstdlib.c	   596    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   597    switch (nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   598    {
; ..\component\VStdLib\Implementation\vstdlib.c	   599      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   600        pDst8[2] = pSrc8[2]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   601        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   602      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   603        pDst8[1] = pSrc8[1]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   604        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   605      case 1:
; ..\component\VStdLib\Implementation\vstdlib.c	   606        pDst8[0] = pSrc8[0]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   607        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   608      default:
; ..\component\VStdLib\Implementation\vstdlib.c	   609        /* nothing to do */
; ..\component\VStdLib\Implementation\vstdlib.c	   610        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   611    }
; ..\component\VStdLib\Implementation\vstdlib.c	   612    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   613  
; ..\component\VStdLib\Implementation\vstdlib.c	   614  #  else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   615  
; ..\component\VStdLib\Implementation\vstdlib.c	   616    uint8_least idx;
; ..\component\VStdLib\Implementation\vstdlib.c	   617  
; ..\component\VStdLib\Implementation\vstdlib.c	   618    /* #20 Linearly copy the bytes using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	   619    for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	   620    {
; ..\component\VStdLib\Implementation\vstdlib.c	   621      pDst8[idx] = pSrc8[idx]; /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   622    }
; ..\component\VStdLib\Implementation\vstdlib.c	   623  
; ..\component\VStdLib\Implementation\vstdlib.c	   624  #  endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   625  } /* VStdLib_Loc_MemCpy_8_3() */
; ..\component\VStdLib\Implementation\vstdlib.c	   626  
; ..\component\VStdLib\Implementation\vstdlib.c	   627  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   628   * VStdLib_Loc_MemCpy_8_31()
; ..\component\VStdLib\Implementation\vstdlib.c	   629   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   630  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   631   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   632   *
; ..\component\VStdLib\Implementation\vstdlib.c	   633   *
; ..\component\VStdLib\Implementation\vstdlib.c	   634   *
; ..\component\VStdLib\Implementation\vstdlib.c	   635   *
; ..\component\VStdLib\Implementation\vstdlib.c	   636   *
; ..\component\VStdLib\Implementation\vstdlib.c	   637   */
; ..\component\VStdLib\Implementation\vstdlib.c	   638  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_8_31(
; ..\component\VStdLib\Implementation\vstdlib.c	   639    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   640    P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc8,
; ..\component\VStdLib\Implementation\vstdlib.c	   641    uint8_least nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   642  {
; ..\component\VStdLib\Implementation\vstdlib.c	   643    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   644  #  if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   645  
; ..\component\VStdLib\Implementation\vstdlib.c	   646    /* #10 Copy up to 31 bytes using a jump table */
; ..\component\VStdLib\Implementation\vstdlib.c	   647    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   648    switch (nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   649    {
; ..\component\VStdLib\Implementation\vstdlib.c	   650      case 31:
; ..\component\VStdLib\Implementation\vstdlib.c	   651        pDst8[30] = pSrc8[30]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   652        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   653      case 30:
; ..\component\VStdLib\Implementation\vstdlib.c	   654        pDst8[29] = pSrc8[29]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   655        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   656      case 29:
; ..\component\VStdLib\Implementation\vstdlib.c	   657        pDst8[28] = pSrc8[28]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   658        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   659      case 28:
; ..\component\VStdLib\Implementation\vstdlib.c	   660        pDst8[27] = pSrc8[27]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   661        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   662      case 27:
; ..\component\VStdLib\Implementation\vstdlib.c	   663        pDst8[26] = pSrc8[26]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   664        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   665      case 26:
; ..\component\VStdLib\Implementation\vstdlib.c	   666        pDst8[25] = pSrc8[25]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   667        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   668      case 25:
; ..\component\VStdLib\Implementation\vstdlib.c	   669        pDst8[24] = pSrc8[24]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   670        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   671      case 24:
; ..\component\VStdLib\Implementation\vstdlib.c	   672        pDst8[23] = pSrc8[23]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   673        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   674      case 23:
; ..\component\VStdLib\Implementation\vstdlib.c	   675        pDst8[22] = pSrc8[22]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   676        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   677      case 22:
; ..\component\VStdLib\Implementation\vstdlib.c	   678        pDst8[21] = pSrc8[21]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   679        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   680      case 21:
; ..\component\VStdLib\Implementation\vstdlib.c	   681        pDst8[20] = pSrc8[20]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   682        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   683      case 20:
; ..\component\VStdLib\Implementation\vstdlib.c	   684        pDst8[19] = pSrc8[19]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   685        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   686      case 19:
; ..\component\VStdLib\Implementation\vstdlib.c	   687        pDst8[18] = pSrc8[18]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   688        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   689      case 18:
; ..\component\VStdLib\Implementation\vstdlib.c	   690        pDst8[17] = pSrc8[17]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   691        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   692      case 17:
; ..\component\VStdLib\Implementation\vstdlib.c	   693        pDst8[16] = pSrc8[16]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   694        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   695      case 16:
; ..\component\VStdLib\Implementation\vstdlib.c	   696        pDst8[15] = pSrc8[15]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   697        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   698      case 15:
; ..\component\VStdLib\Implementation\vstdlib.c	   699        pDst8[14] = pSrc8[14]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   700        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   701      case 14:
; ..\component\VStdLib\Implementation\vstdlib.c	   702        pDst8[13] = pSrc8[13]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   703        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   704      case 13:
; ..\component\VStdLib\Implementation\vstdlib.c	   705        pDst8[12] = pSrc8[12]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   706        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   707      case 12:
; ..\component\VStdLib\Implementation\vstdlib.c	   708        pDst8[11] = pSrc8[11]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   709        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   710      case 11:
; ..\component\VStdLib\Implementation\vstdlib.c	   711        pDst8[10] = pSrc8[10]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   712        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   713      case 10:
; ..\component\VStdLib\Implementation\vstdlib.c	   714        pDst8[9] = pSrc8[9]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   715        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   716      case 9:
; ..\component\VStdLib\Implementation\vstdlib.c	   717        pDst8[8] = pSrc8[8]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   718        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   719      case 8:
; ..\component\VStdLib\Implementation\vstdlib.c	   720        pDst8[7] = pSrc8[7]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   721        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   722      case 7:
; ..\component\VStdLib\Implementation\vstdlib.c	   723        pDst8[6] = pSrc8[6]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   724        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   725      case 6:
; ..\component\VStdLib\Implementation\vstdlib.c	   726        pDst8[5] = pSrc8[5]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   727        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   728      case 5:
; ..\component\VStdLib\Implementation\vstdlib.c	   729        pDst8[4] = pSrc8[4]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   730        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   731      case 4:
; ..\component\VStdLib\Implementation\vstdlib.c	   732        pDst8[3] = pSrc8[3]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   733        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   734      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   735        pDst8[2] = pSrc8[2]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   736        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   737      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   738        pDst8[1] = pSrc8[1]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   739        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   740      case 1:
; ..\component\VStdLib\Implementation\vstdlib.c	   741        pDst8[0] = pSrc8[0]; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   742        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   743      default:
; ..\component\VStdLib\Implementation\vstdlib.c	   744        /* nothing to do */
; ..\component\VStdLib\Implementation\vstdlib.c	   745        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   746    }
; ..\component\VStdLib\Implementation\vstdlib.c	   747    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   748  
; ..\component\VStdLib\Implementation\vstdlib.c	   749  #  else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   750  
; ..\component\VStdLib\Implementation\vstdlib.c	   751    uint8_least idx;
; ..\component\VStdLib\Implementation\vstdlib.c	   752  
; ..\component\VStdLib\Implementation\vstdlib.c	   753    /* #20 Linearly copy the bytes using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	   754    for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	   755    {
; ..\component\VStdLib\Implementation\vstdlib.c	   756      pDst8[idx] = pSrc8[idx]; /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   757    }
; ..\component\VStdLib\Implementation\vstdlib.c	   758  
; ..\component\VStdLib\Implementation\vstdlib.c	   759  #  endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   760  } /* VStdLib_Loc_MemCpy_8_31() */ /* PRQA S 6030 */ /* MD_VStdLib_Metrics */
; ..\component\VStdLib\Implementation\vstdlib.c	   761  
; ..\component\VStdLib\Implementation\vstdlib.c	   762  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   763   * VStdLib_Loc_MemCpy_32_Aligned()
; ..\component\VStdLib\Implementation\vstdlib.c	   764   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   765  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   766   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   767   *
; ..\component\VStdLib\Implementation\vstdlib.c	   768   *
; ..\component\VStdLib\Implementation\vstdlib.c	   769   *
; ..\component\VStdLib\Implementation\vstdlib.c	   770   *
; ..\component\VStdLib\Implementation\vstdlib.c	   771   *
; ..\component\VStdLib\Implementation\vstdlib.c	   772   *
; ..\component\VStdLib\Implementation\vstdlib.c	   773   */
; ..\component\VStdLib\Implementation\vstdlib.c	   774  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_32_Aligned(
; ..\component\VStdLib\Implementation\vstdlib.c	   775    P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pDst32,
; ..\component\VStdLib\Implementation\vstdlib.c	   776    P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc32,
; ..\component\VStdLib\Implementation\vstdlib.c	   777    uint32_least nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   778  {
; ..\component\VStdLib\Implementation\vstdlib.c	   779    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   780    uint32_least dPos = 0u; /* == sPos */
; ..\component\VStdLib\Implementation\vstdlib.c	   781    uint32_least remaining;
; ..\component\VStdLib\Implementation\vstdlib.c	   782    uint32 x0, x1, x2, x3;
; ..\component\VStdLib\Implementation\vstdlib.c	   783  
; ..\component\VStdLib\Implementation\vstdlib.c	   784    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   785    /* #10 Linearly copy 16-byte blocks using 32-bit accesses in a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	   786    for (remaining = nCnt; remaining >= 16u; remaining -= 16u)
; ..\component\VStdLib\Implementation\vstdlib.c	   787    {
; ..\component\VStdLib\Implementation\vstdlib.c	   788      x0 = pSrc32[dPos];
; ..\component\VStdLib\Implementation\vstdlib.c	   789      x1 = pSrc32[dPos + 1u];
; ..\component\VStdLib\Implementation\vstdlib.c	   790      x2 = pSrc32[dPos + 2u];
; ..\component\VStdLib\Implementation\vstdlib.c	   791      x3 = pSrc32[dPos + 3u];
; ..\component\VStdLib\Implementation\vstdlib.c	   792      pDst32[dPos]      = x0; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   793      pDst32[dPos + 1u] = x1; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   794      pDst32[dPos + 2u] = x2; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   795      pDst32[dPos + 3u] = x3; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   796      dPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	   797    }
; ..\component\VStdLib\Implementation\vstdlib.c	   798  
; ..\component\VStdLib\Implementation\vstdlib.c	   799  #  if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   800  
; ..\component\VStdLib\Implementation\vstdlib.c	   801    /* #20 Copy the remaining block using a jump table */
; ..\component\VStdLib\Implementation\vstdlib.c	   802    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   803    switch (remaining)
; ..\component\VStdLib\Implementation\vstdlib.c	   804    {
; ..\component\VStdLib\Implementation\vstdlib.c	   805      case 15:
; ..\component\VStdLib\Implementation\vstdlib.c	   806      case 14:
; ..\component\VStdLib\Implementation\vstdlib.c	   807      case 13:
; ..\component\VStdLib\Implementation\vstdlib.c	   808      case 12:
; ..\component\VStdLib\Implementation\vstdlib.c	   809        pDst32[dPos] = pSrc32[dPos]; /* SBSW_VSTDLIB_ACCESS_32_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   810        dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   811        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   812      case 11:
; ..\component\VStdLib\Implementation\vstdlib.c	   813      case 10:
; ..\component\VStdLib\Implementation\vstdlib.c	   814      case 9:
; ..\component\VStdLib\Implementation\vstdlib.c	   815      case 8:
; ..\component\VStdLib\Implementation\vstdlib.c	   816        pDst32[dPos] = pSrc32[dPos]; /* SBSW_VSTDLIB_ACCESS_32_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   817        dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   818        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   819      case 7:
; ..\component\VStdLib\Implementation\vstdlib.c	   820      case 6:
; ..\component\VStdLib\Implementation\vstdlib.c	   821      case 5:
; ..\component\VStdLib\Implementation\vstdlib.c	   822      case 4:
; ..\component\VStdLib\Implementation\vstdlib.c	   823        pDst32[dPos] = pSrc32[dPos]; /* SBSW_VSTDLIB_ACCESS_32_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   824        dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   825        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   826      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   827      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   828      case 1:
; ..\component\VStdLib\Implementation\vstdlib.c	   829        VStdLib_Loc_MemCpy_8_3( /* SBSW_VSTDLIB_CALL_REMAINING_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   830          (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pDst32[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	   831          (P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pSrc32[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	   832          (uint8_least) (remaining & VSTDLIB_MASK_3));
; ..\component\VStdLib\Implementation\vstdlib.c	   833        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   834      default:
; ..\component\VStdLib\Implementation\vstdlib.c	   835        /* nothing to do */
; ..\component\VStdLib\Implementation\vstdlib.c	   836        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   837    }
; ..\component\VStdLib\Implementation\vstdlib.c	   838    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   839  
; ..\component\VStdLib\Implementation\vstdlib.c	   840  #  else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   841  
; ..\component\VStdLib\Implementation\vstdlib.c	   842    /* #30 Copy the remaining block using a byte-wise algorithm */
; ..\component\VStdLib\Implementation\vstdlib.c	   843    VStdLib_Loc_MemCpy_8_31( /* SBSW_VSTDLIB_CALL_REMAINING */
; ..\component\VStdLib\Implementation\vstdlib.c	   844      (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pDst32[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	   845      (P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pSrc32[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	   846      (uint8_least) remaining);
; ..\component\VStdLib\Implementation\vstdlib.c	   847  
; ..\component\VStdLib\Implementation\vstdlib.c	   848  #  endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   849  } /* VStdLib_Loc_MemCpy_32_Aligned() */
; ..\component\VStdLib\Implementation\vstdlib.c	   850  
; ..\component\VStdLib\Implementation\vstdlib.c	   851  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   852   * VStdLib_Loc_MemCpy_8_PartialWord()
; ..\component\VStdLib\Implementation\vstdlib.c	   853   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   854  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   855   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   856   *
; ..\component\VStdLib\Implementation\vstdlib.c	   857   *
; ..\component\VStdLib\Implementation\vstdlib.c	   858   *
; ..\component\VStdLib\Implementation\vstdlib.c	   859   *
; ..\component\VStdLib\Implementation\vstdlib.c	   860   *
; ..\component\VStdLib\Implementation\vstdlib.c	   861   *
; ..\component\VStdLib\Implementation\vstdlib.c	   862   *
; ..\component\VStdLib\Implementation\vstdlib.c	   863   *
; ..\component\VStdLib\Implementation\vstdlib.c	   864   *
; ..\component\VStdLib\Implementation\vstdlib.c	   865   *
; ..\component\VStdLib\Implementation\vstdlib.c	   866   *
; ..\component\VStdLib\Implementation\vstdlib.c	   867   */
; ..\component\VStdLib\Implementation\vstdlib.c	   868  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_8_PartialWord(
; ..\component\VStdLib\Implementation\vstdlib.c	   869    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   870    uint8_least nCnt,
; ..\component\VStdLib\Implementation\vstdlib.c	   871    P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pPrev,
; ..\component\VStdLib\Implementation\vstdlib.c	   872    P2VAR(uint32_least, AUTOMATIC, VSTDLIB_VAR_FAR) pDPos)
; ..\component\VStdLib\Implementation\vstdlib.c	   873  {
; ..\component\VStdLib\Implementation\vstdlib.c	   874    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   875  #  if (CPU_BYTE_ORDER == LOW_BYTE_FIRST)
; ..\component\VStdLib\Implementation\vstdlib.c	   876  #   if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   877  
; ..\component\VStdLib\Implementation\vstdlib.c	   878    /* #10 Copy 1 to 3 bytes using a jump table and adapt '*pDPos' and '*pPrev' for little endian byte order */
; ..\component\VStdLib\Implementation\vstdlib.c	   879    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   880    switch (nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   881    {
; ..\component\VStdLib\Implementation\vstdlib.c	   882      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   883        pDst8[*pDPos] = (uint8) *pPrev; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   884        (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   885        (*pPrev) >>= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   886        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   887      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   888        pDst8[*pDPos] = (uint8) *pPrev; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   889        (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   890        (*pPrev) >>= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   891        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   892      default: /* case 1 - nCnt is always in range [1..3] */
; ..\component\VStdLib\Implementation\vstdlib.c	   893        pDst8[*pDPos] = (uint8) *pPrev; /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   894        (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   895        (*pPrev) >>= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   896        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   897    }
; ..\component\VStdLib\Implementation\vstdlib.c	   898    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   899  
; ..\component\VStdLib\Implementation\vstdlib.c	   900  #   else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   901  
; ..\component\VStdLib\Implementation\vstdlib.c	   902    uint8_least idx;
; ..\component\VStdLib\Implementation\vstdlib.c	   903  
; ..\component\VStdLib\Implementation\vstdlib.c	   904    /* #20 Linearly copy the bytes using a loop and adapt '*pDPos' and '*pPrev' for little endian byte order */
; ..\component\VStdLib\Implementation\vstdlib.c	   905    for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	   906    {
; ..\component\VStdLib\Implementation\vstdlib.c	   907      pDst8[*pDPos] = (uint8) (uint8) *pPrev; /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   908      (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   909      (*pPrev) >>= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   910    }
; ..\component\VStdLib\Implementation\vstdlib.c	   911  
; ..\component\VStdLib\Implementation\vstdlib.c	   912  #   endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   913  #  else /* CPU_BYTE_ORDER == HIGH_BYTE_FIRST */
; ..\component\VStdLib\Implementation\vstdlib.c	   914  #   if (VSTDLIB_USE_JUMPTABLES == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	   915  
; ..\component\VStdLib\Implementation\vstdlib.c	   916    /* #30 Copy 1 to 3 bytes using a jump table and adapt '*pDPos' and '*pPrev' for big endian byte order */
; ..\component\VStdLib\Implementation\vstdlib.c	   917    /* PRQA S 2003 VSTDLIB_NO_CASE_BREAK */ /* MD_VStdLib_NoCaseBreak */
; ..\component\VStdLib\Implementation\vstdlib.c	   918    switch (nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	   919    {
; ..\component\VStdLib\Implementation\vstdlib.c	   920      case 3:
; ..\component\VStdLib\Implementation\vstdlib.c	   921        pDst8[*pDPos] = (uint8) ((*pPrev) >> 24u); /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   922        (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   923        (*pPrev) <<= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   924        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   925      case 2:
; ..\component\VStdLib\Implementation\vstdlib.c	   926        pDst8[*pDPos] = (uint8) ((*pPrev) >> 24u); /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   927        (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   928        (*pPrev) <<= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   929        /* intentionally no break */
; ..\component\VStdLib\Implementation\vstdlib.c	   930      default: /* case 1 -  nCnt is always in range [1..3] */
; ..\component\VStdLib\Implementation\vstdlib.c	   931        pDst8[*pDPos] = (uint8) ((*pPrev) >> 24u); /* SBSW_VSTDLIB_ACCESS_8_JUMPTABLE */
; ..\component\VStdLib\Implementation\vstdlib.c	   932        (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   933        (*pPrev) <<= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   934        break;
; ..\component\VStdLib\Implementation\vstdlib.c	   935    }
; ..\component\VStdLib\Implementation\vstdlib.c	   936    /* PRQA L:VSTDLIB_NO_CASE_BREAK */
; ..\component\VStdLib\Implementation\vstdlib.c	   937  
; ..\component\VStdLib\Implementation\vstdlib.c	   938  #   else /* VSTDLIB_USE_JUMPTABLES == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	   939  
; ..\component\VStdLib\Implementation\vstdlib.c	   940    uint8_least idx;
; ..\component\VStdLib\Implementation\vstdlib.c	   941  
; ..\component\VStdLib\Implementation\vstdlib.c	   942    /* #40 Linearly copy the bytes using a loop and adapt '*pDPos' and '*pPrev' for big endian byte order */
; ..\component\VStdLib\Implementation\vstdlib.c	   943    for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	   944    {
; ..\component\VStdLib\Implementation\vstdlib.c	   945      pDst8[*pDPos] = (uint8) ((*pPrev) >> 24u); /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	   946      (*pDPos)++; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   947      (*pPrev) <<= 8u; /* SBSW_VSTDLIB_ACCESS_LOCAL */
; ..\component\VStdLib\Implementation\vstdlib.c	   948    }
; ..\component\VStdLib\Implementation\vstdlib.c	   949  
; ..\component\VStdLib\Implementation\vstdlib.c	   950  #   endif /* VSTDLIB_USE_JUMPTABLES */
; ..\component\VStdLib\Implementation\vstdlib.c	   951  #  endif /* CPU_BYTE_ORDER */
; ..\component\VStdLib\Implementation\vstdlib.c	   952  } /* VStdLib_Loc_MemCpy_8_PartialWord() */
; ..\component\VStdLib\Implementation\vstdlib.c	   953  
; ..\component\VStdLib\Implementation\vstdlib.c	   954  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	   955   * VStdLib_Loc_MemCpy_32_Unaligned()
; ..\component\VStdLib\Implementation\vstdlib.c	   956   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	   957  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	   958   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	   959   *
; ..\component\VStdLib\Implementation\vstdlib.c	   960   *
; ..\component\VStdLib\Implementation\vstdlib.c	   961   *
; ..\component\VStdLib\Implementation\vstdlib.c	   962   *
; ..\component\VStdLib\Implementation\vstdlib.c	   963   *
; ..\component\VStdLib\Implementation\vstdlib.c	   964   *
; ..\component\VStdLib\Implementation\vstdlib.c	   965   *
; ..\component\VStdLib\Implementation\vstdlib.c	   966   */
; ..\component\VStdLib\Implementation\vstdlib.c	   967  VSTDLIB_LOCAL_INLINE FUNC(void, VSTDLIB_CODE) VStdLib_Loc_MemCpy_32_Unaligned(
; ..\component\VStdLib\Implementation\vstdlib.c	   968    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   969    P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc32,
; ..\component\VStdLib\Implementation\vstdlib.c	   970    uint32_least nCnt,
; ..\component\VStdLib\Implementation\vstdlib.c	   971    uint8_least nDstOffset)
; ..\component\VStdLib\Implementation\vstdlib.c	   972  {
; ..\component\VStdLib\Implementation\vstdlib.c	   973    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   974    uint32_least dPos = 0u;
; ..\component\VStdLib\Implementation\vstdlib.c	   975    uint32_least sPos = 0u;
; ..\component\VStdLib\Implementation\vstdlib.c	   976    uint32_least remaining = nCnt;
; ..\component\VStdLib\Implementation\vstdlib.c	   977  
; ..\component\VStdLib\Implementation\vstdlib.c	   978    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	   979    /* #10 If more than 32 bytes have to be copied */
; ..\component\VStdLib\Implementation\vstdlib.c	   980    if (remaining >= 32u)
; ..\component\VStdLib\Implementation\vstdlib.c	   981    {
; ..\component\VStdLib\Implementation\vstdlib.c	   982      P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pDst32;
; ..\component\VStdLib\Implementation\vstdlib.c	   983      uint32 prev;
; ..\component\VStdLib\Implementation\vstdlib.c	   984  
; ..\component\VStdLib\Implementation\vstdlib.c	   985      /* #20 Copy the first partial word to reach the 32-bit boundary and adjust the destination pointer */
; ..\component\VStdLib\Implementation\vstdlib.c	   986      prev = pSrc32[sPos];
; ..\component\VStdLib\Implementation\vstdlib.c	   987      remaining -= 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	   988      VStdLib_Loc_MemCpy_8_PartialWord( /* SBSW_VSTDLIB_CALL_MODIFIED_CNT */
; ..\component\VStdLib\Implementation\vstdlib.c	   989        pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	   990        nDstOffset,
; ..\component\VStdLib\Implementation\vstdlib.c	   991        &prev,
; ..\component\VStdLib\Implementation\vstdlib.c	   992        &dPos);
; ..\component\VStdLib\Implementation\vstdlib.c	   993  
; ..\component\VStdLib\Implementation\vstdlib.c	   994      /* At this point 'pDst8[dPos]' is aligned to a 32-bit boundary */
; ..\component\VStdLib\Implementation\vstdlib.c	   995      pDst32 = (P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR)) &pDst8[dPos]; /* PRQA S 0310, 3305 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	   996      dPos = 0u;
; ..\component\VStdLib\Implementation\vstdlib.c	   997      sPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	   998  
; ..\component\VStdLib\Implementation\vstdlib.c	   999      /* #30 Linearly copy 16-byte blocks using 32-bit accesses by correcting the byte displacement of dst and src */
; ..\component\VStdLib\Implementation\vstdlib.c	  1000      if (nDstOffset == 3u) /* 24-bit displacement */
; ..\component\VStdLib\Implementation\vstdlib.c	  1001      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1002        for (; remaining >= 16u; remaining -= 16u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1003        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1004          uint32 x0, x1, x2, x3, x4;
; ..\component\VStdLib\Implementation\vstdlib.c	  1005          x1 = pSrc32[sPos];
; ..\component\VStdLib\Implementation\vstdlib.c	  1006          x2 = pSrc32[sPos + 1u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1007          x3 = pSrc32[sPos + 2u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1008          x4 = pSrc32[sPos + 3u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1009  #  if (CPU_BYTE_ORDER == LOW_BYTE_FIRST)
; ..\component\VStdLib\Implementation\vstdlib.c	  1010          x0 = prev | (x1 << 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1011          x1 = (x1 >> 24u) | (x2 << 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1012          x2 = (x2 >> 24u) | (x3 << 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1013          x3 = (x3 >> 24u) | (x4 << 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1014          prev = x4 >> 24u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1015  #  else /* CPU_BYTE_ORDER == HIGH_BYTE_FIRST */
; ..\component\VStdLib\Implementation\vstdlib.c	  1016          x0 = prev | (x1 >> 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1017          x1 = (x1 << 24u) | (x2 >> 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1018          x2 = (x2 << 24u) | (x3 >> 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1019          x3 = (x3 << 24u) | (x4 >> 8u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1020          prev = x4 << 24;
; ..\component\VStdLib\Implementation\vstdlib.c	  1021  #  endif /* CPU_BYTE_ORDER */
; ..\component\VStdLib\Implementation\vstdlib.c	  1022          pDst32[dPos]      = x0; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1023          pDst32[dPos + 1u] = x1; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1024          pDst32[dPos + 2u] = x2; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1025          pDst32[dPos + 3u] = x3; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1026          dPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1027          sPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1028        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1029      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1030      else if (nDstOffset == 2u) /* 16-bit displacement */
; ..\component\VStdLib\Implementation\vstdlib.c	  1031      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1032        for (; remaining >= 16u; remaining -= 16u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1033        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1034          uint32 x0, x1, x2, x3, x4;
; ..\component\VStdLib\Implementation\vstdlib.c	  1035          x1 = pSrc32[sPos];
; ..\component\VStdLib\Implementation\vstdlib.c	  1036          x2 = pSrc32[sPos + 1u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1037          x3 = pSrc32[sPos + 2u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1038          x4 = pSrc32[sPos + 3u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1039  #  if (CPU_BYTE_ORDER == LOW_BYTE_FIRST)
; ..\component\VStdLib\Implementation\vstdlib.c	  1040          x0 = prev | (x1 << 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1041          x1 = (x1 >> 16u) | (x2 << 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1042          x2 = (x2 >> 16u) | (x3 << 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1043          x3 = (x3 >> 16u) | (x4 << 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1044          prev = x4 >> 16u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1045  #  else /* CPU_BYTE_ORDER == HIGH_BYTE_FIRST */
; ..\component\VStdLib\Implementation\vstdlib.c	  1046          x0 = prev | (x1 >> 16);
; ..\component\VStdLib\Implementation\vstdlib.c	  1047          x1 = (x1 << 16u) | (x2 >> 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1048          x2 = (x2 << 16u) | (x3 >> 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1049          x3 = (x3 << 16u) | (x4 >> 16u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1050          prev = x4 << 16;
; ..\component\VStdLib\Implementation\vstdlib.c	  1051  #  endif /* CPU_BYTE_ORDER */
; ..\component\VStdLib\Implementation\vstdlib.c	  1052          pDst32[dPos]      = x0; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1053          pDst32[dPos + 1u] = x1; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1054          pDst32[dPos + 2u] = x2; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1055          pDst32[dPos + 3u] = x3; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1056          dPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1057          sPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1058        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1059  
; ..\component\VStdLib\Implementation\vstdlib.c	  1060      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1061      else /* nDstOffset == 1 - 8-bit displacement */
; ..\component\VStdLib\Implementation\vstdlib.c	  1062      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1063        for (; remaining >= 16u; remaining -= 16u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1064        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1065          uint32 x0, x1, x2, x3, x4;
; ..\component\VStdLib\Implementation\vstdlib.c	  1066          x1 = pSrc32[sPos];
; ..\component\VStdLib\Implementation\vstdlib.c	  1067          x2 = pSrc32[sPos + 1u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1068          x3 = pSrc32[sPos + 2u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1069          x4 = pSrc32[sPos + 3u];
; ..\component\VStdLib\Implementation\vstdlib.c	  1070  #  if (CPU_BYTE_ORDER == LOW_BYTE_FIRST)
; ..\component\VStdLib\Implementation\vstdlib.c	  1071          x0 = prev | (x1 << 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1072          x1 = (x1 >> 8u) | (x2 << 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1073          x2 = (x2 >> 8u) | (x3 << 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1074          x3 = (x3 >> 8u) | (x4 << 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1075          prev = x4 >> 8u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1076  #  else /* CPU_BYTE_ORDER == HIGH_BYTE_FIRST */
; ..\component\VStdLib\Implementation\vstdlib.c	  1077          x0 = prev | (x1 >> 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1078          x1 = (x1 << 8u) | (x2 >> 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1079          x2 = (x2 << 8u) | (x3 >> 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1080          x3 = (x3 << 8u) | (x4 >> 24u);
; ..\component\VStdLib\Implementation\vstdlib.c	  1081          prev = x4 << 8u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1082  #  endif /* CPU_BYTE_ORDER */
; ..\component\VStdLib\Implementation\vstdlib.c	  1083          pDst32[dPos]      = x0; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1084          pDst32[dPos + 1u] = x1; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1085          pDst32[dPos + 2u] = x2; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1086          pDst32[dPos + 3u] = x3; /* SBSW_VSTDLIB_ACCESS_32_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1087          dPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1088          sPos += 4u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1089        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1090      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1091  
; ..\component\VStdLib\Implementation\vstdlib.c	  1092      /* #40 Linearly copy the remaining words using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	  1093      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1094        uint8_least prevShift = (nDstOffset << 3u) & VSTDLIB_MASK_31;
; ..\component\VStdLib\Implementation\vstdlib.c	  1095        uint8_least xShift = 32u - prevShift;
; ..\component\VStdLib\Implementation\vstdlib.c	  1096        /* At this point remaining is < 16 byte */
; ..\component\VStdLib\Implementation\vstdlib.c	  1097        for (; remaining >= 4u; remaining -= 4u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1098        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1099          uint32 x0, x1;
; ..\component\VStdLib\Implementation\vstdlib.c	  1100          x1 = pSrc32[sPos];
; ..\component\VStdLib\Implementation\vstdlib.c	  1101  #  if (CPU_BYTE_ORDER == LOW_BYTE_FIRST)
; ..\component\VStdLib\Implementation\vstdlib.c	  1102          x0 = prev | (x1 << xShift);
; ..\component\VStdLib\Implementation\vstdlib.c	  1103          prev = x1 >> prevShift;
; ..\component\VStdLib\Implementation\vstdlib.c	  1104  #  else /* CPU_BYTE_ORDER == HIGH_BYTE_FIRST */
; ..\component\VStdLib\Implementation\vstdlib.c	  1105          x0 = prev | (x1 >> xShift);
; ..\component\VStdLib\Implementation\vstdlib.c	  1106          prev = x1 << prevShift;
; ..\component\VStdLib\Implementation\vstdlib.c	  1107  #  endif /* CPU_BYTE_ORDER */
; ..\component\VStdLib\Implementation\vstdlib.c	  1108          pDst32[dPos] = x0; /* SBSW_VSTDLIB_ACCESS_32_LOOP_REMAINING */
; ..\component\VStdLib\Implementation\vstdlib.c	  1109          dPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	  1110          sPos++;
; ..\component\VStdLib\Implementation\vstdlib.c	  1111        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1112      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1113  
; ..\component\VStdLib\Implementation\vstdlib.c	  1114      /* #50 Copy the remaining partial word using a byte-wise algorithm */
; ..\component\VStdLib\Implementation\vstdlib.c	  1115      pDst8 = (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pDst32[dPos]; /* PRQA S 1338 */ /* MD_VStdLib_ParamMod */
; ..\component\VStdLib\Implementation\vstdlib.c	  1116      dPos = 0u;
; ..\component\VStdLib\Implementation\vstdlib.c	  1117      VStdLib_Loc_MemCpy_8_PartialWord( /* SBSW_VSTDLIB_CALL_REMAINING_PARTIAL */
; ..\component\VStdLib\Implementation\vstdlib.c	  1118        pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1119        (4u - nDstOffset),
; ..\component\VStdLib\Implementation\vstdlib.c	  1120        &prev,
; ..\component\VStdLib\Implementation\vstdlib.c	  1121        &dPos);
; ..\component\VStdLib\Implementation\vstdlib.c	  1122    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1123  
; ..\component\VStdLib\Implementation\vstdlib.c	  1124    /* #60 Copy the remaining bytes using a byte-wise algorithm */
; ..\component\VStdLib\Implementation\vstdlib.c	  1125    VStdLib_Loc_MemCpy_8_31( /* SBSW_VSTDLIB_CALL_REMAINING */
; ..\component\VStdLib\Implementation\vstdlib.c	  1126      &pDst8[dPos],
; ..\component\VStdLib\Implementation\vstdlib.c	  1127      (P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) &pSrc32[sPos],
; ..\component\VStdLib\Implementation\vstdlib.c	  1128      (uint8_least) remaining);
; ..\component\VStdLib\Implementation\vstdlib.c	  1129  } /* VStdLib_Loc_MemCpy_32_Unaligned() */
; ..\component\VStdLib\Implementation\vstdlib.c	  1130  
; ..\component\VStdLib\Implementation\vstdlib.c	  1131  # endif /* VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON */
; ..\component\VStdLib\Implementation\vstdlib.c	  1132  
; ..\component\VStdLib\Implementation\vstdlib.c	  1133  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1134   *  GLOBAL FUNCTIONS
; ..\component\VStdLib\Implementation\vstdlib.c	  1135   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1136  
; ..\component\VStdLib\Implementation\vstdlib.c	  1137  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1138   * VStdLib_MemSet()
; ..\component\VStdLib\Implementation\vstdlib.c	  1139   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1140  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	  1141   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1142   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1143   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1144   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1145   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1146   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1147   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1148   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1149   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1150   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1151   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1152   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1153   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1154   */
; ..\component\VStdLib\Implementation\vstdlib.c	  1155  FUNC(void, VSTDLIB_CODE) VStdLib_MemSet(P2VAR(void, AUTOMATIC, VSTDLIB_VAR_FAR) pDst,
; Function VStdLib_MemSet
.L191:
VStdLib_MemSet:	.type	func

; ..\component\VStdLib\Implementation\vstdlib.c	  1156                                          uint8 nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	  1157                                          VStdLib_CntType nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	  1158  {
; ..\component\VStdLib\Implementation\vstdlib.c	  1159    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1160    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8 = \ 
; ..\component\VStdLib\Implementation\vstdlib.c	  1161      (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) pDst; /* PRQA S 0316 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1162    uint8 errorId = VSTDLIB_E_NO_ERROR;
; ..\component\VStdLib\Implementation\vstdlib.c	  1163  
; ..\component\VStdLib\Implementation\vstdlib.c	  1164    /* ----- Development Error Checks ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1165  # if (VSTDLIB_DEV_ERROR_DETECT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1166    /* #10 Check parameter 'pDst' */
; ..\component\VStdLib\Implementation\vstdlib.c	  1167    if (pDst == NULL_PTR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1168    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1169      errorId = VSTDLIB_E_PARAM_POINTER;
; ..\component\VStdLib\Implementation\vstdlib.c	  1170    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1171    else
; ..\component\VStdLib\Implementation\vstdlib.c	  1172  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1173    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1174      /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1175  # if (VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1176  
; ..\component\VStdLib\Implementation\vstdlib.c	  1177      /* #20 If less than 32 bytes have to be initialized */
; ..\component\VStdLib\Implementation\vstdlib.c	  1178      if (nCnt < 32u)
	mov	d15,#32
.L506:
	jge.u	d5,d15,.L2
.L253:

; ..\component\VStdLib\Implementation\vstdlib.c	   376    switch (nCnt)      (inlined)
	mov	d15,#31
	movh.a	a15,#@his(.1.jmp)
	lea	a15,[a15]@los(.1.jmp)
	jlt	d15,d5,.L4
	mov	d15,#1
	jlt	d5,d15,.L4
	sub	d15,d5,d15
	addsc.a	a15,a15,d15,#2
	ld.a	a15,[a15]
	ji	a15
.L410:
	
	.sdecl	'.rodata.vstdlib..1.jmp',data,rom
	.sect	'.rodata.vstdlib..1.jmp'
	.align	4
.1.jmp:	.type	object
	.word	.L5
	.word	.L6
	.word	.L7
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L17
	.word	.L18
	.word	.L19
	.word	.L20
	.word	.L21
	.word	.L22
	.word	.L23
	.word	.L24
	.word	.L25
	.word	.L26
	.word	.L27
	.word	.L28
	.word	.L29
	.word	.L30
	.word	.L31
	.word	.L32
	.word	.L33
	.word	.L34
	.word	.L35
	
	.sect	'.text.vstdlib.VStdLib_MemSet'

; ..\component\VStdLib\Implementation\vstdlib.c	   378      case 31:      (inlined)
.L35:
	st.b	[a4]30,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   381      case 30:      (inlined)
.L34:
	st.b	[a4]29,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   384      case 29:      (inlined)
.L33:
	st.b	[a4]28,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   387      case 28:      (inlined)
.L32:
	st.b	[a4]27,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   390      case 27:      (inlined)
.L31:
	st.b	[a4]26,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   393      case 26:      (inlined)
.L30:
	st.b	[a4]25,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   396      case 25:      (inlined)
.L29:
	st.b	[a4]24,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   399      case 24:      (inlined)
.L28:
	st.b	[a4]23,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   402      case 23:      (inlined)
.L27:
	st.b	[a4]22,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   405      case 22:      (inlined)
.L26:
	st.b	[a4]21,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   408      case 21:      (inlined)
.L25:
	st.b	[a4]20,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   411      case 20:      (inlined)
.L24:
	st.b	[a4]19,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   414      case 19:      (inlined)
.L23:
	st.b	[a4]18,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   417      case 18:      (inlined)
.L22:
	st.b	[a4]17,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   420      case 17:      (inlined)
.L21:
	st.b	[a4]16,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   423      case 16:      (inlined)
.L20:
	st.b	[a4]15,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   426      case 15:      (inlined)
.L19:
	st.b	[a4]14,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   429      case 14:      (inlined)
.L18:
	st.b	[a4]13,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   432      case 13:      (inlined)
.L17:
	st.b	[a4]12,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   435      case 12:      (inlined)
.L16:
	st.b	[a4]11,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   438      case 11:      (inlined)
.L15:
	st.b	[a4]10,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   441      case 10:      (inlined)
.L14:
	st.b	[a4]9,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   444      case 9:      (inlined)
.L13:
	st.b	[a4]8,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   447      case 8:      (inlined)
.L12:
	st.b	[a4]7,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   450      case 7:      (inlined)
.L11:
	st.b	[a4]6,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   453      case 6:      (inlined)
.L10:
	st.b	[a4]5,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   456      case 5:      (inlined)
.L9:
	st.b	[a4]4,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   459      case 4:      (inlined)
.L8:
	st.b	[a4]3,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   462      case 3:      (inlined)
.L7:
	st.b	[a4]2,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   465      case 2:      (inlined)
.L6:
	st.b	[a4]1,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   468      case 1:      (inlined)
.L5:
	st.b	[a4],d4

; ..\component\VStdLib\Implementation\vstdlib.c	   471      default:      (inlined)
.L4:

; ..\component\VStdLib\Implementation\vstdlib.c	  1179      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1180        /* #30 Use a byte-wise algorithm */
; ..\component\VStdLib\Implementation\vstdlib.c	  1181        VStdLib_Loc_MemSet_8_31( /* SBSW_VSTDLIB_CALL_UNMODIFIED */
; ..\component\VStdLib\Implementation\vstdlib.c	  1182          pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1183          nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	  1184          (uint8_least) nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	  1185      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1186      /* #40 Else */
; ..\component\VStdLib\Implementation\vstdlib.c	  1187      else
; ..\component\VStdLib\Implementation\vstdlib.c	  1188      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1189        /* #50 Get the destination pointer offset to the next 32-bit boundary */
; ..\component\VStdLib\Implementation\vstdlib.c	  1190        uint8_least nDstOffset = VSTDLIB_ALIGN_OFFSET(pDst8); /* PRQA S 0306 */ /* MD_VStdLib_PtrCastToInt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1191  
; ..\component\VStdLib\Implementation\vstdlib.c	  1192        /* #60 If the destination is not aligned */
; ..\component\VStdLib\Implementation\vstdlib.c	  1193        if (nDstOffset != 0u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1194        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1195          /* #70 Initialize the amount of bytes to reach the alignment boundary and adjust the pointer */
; ..\component\VStdLib\Implementation\vstdlib.c	  1196          VStdLib_Loc_MemSet_8_3( /* SBSW_VSTDLIB_CALL_MODIFIED_CNT */
; ..\component\VStdLib\Implementation\vstdlib.c	  1197            pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1198            nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	  1199            nDstOffset);
; ..\component\VStdLib\Implementation\vstdlib.c	  1200  
; ..\component\VStdLib\Implementation\vstdlib.c	  1201          pDst8 = &pDst8[nDstOffset];
; ..\component\VStdLib\Implementation\vstdlib.c	  1202          nCnt -= nDstOffset; /* PRQA S 1338 */ /* MD_VStdLib_ParamMod */
; ..\component\VStdLib\Implementation\vstdlib.c	  1203        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1204  
; ..\component\VStdLib\Implementation\vstdlib.c	  1205        /* #80 The pointer is aligned, use the 32-bit aligned memset */
; ..\component\VStdLib\Implementation\vstdlib.c	  1206        VStdLib_Loc_MemSet_32_Aligned( /* SBSW_VSTDLIB_CALL_MODIFIED_PTR_CNT */
; ..\component\VStdLib\Implementation\vstdlib.c	  1207          (P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR)) pDst8, /* PRQA S 0310, 3305 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1208          nPattern,
; ..\component\VStdLib\Implementation\vstdlib.c	  1209          nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	  1210      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1211  
; ..\component\VStdLib\Implementation\vstdlib.c	  1212  # else /* VSTDLIB_RUNTIME_OPTIMIZATION == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	  1213  
; ..\component\VStdLib\Implementation\vstdlib.c	  1214      VStdLib_CntType idx;
; ..\component\VStdLib\Implementation\vstdlib.c	  1215  
; ..\component\VStdLib\Implementation\vstdlib.c	  1216      /* #90 Linearly initialize nCnt bytes using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	  1217      for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	  1218      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1219        pDst8[idx] = nPattern; /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1220      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1221  
; ..\component\VStdLib\Implementation\vstdlib.c	  1222  # endif /* VSTDLIB_RUNTIME_OPTIMIZATION */
; ..\component\VStdLib\Implementation\vstdlib.c	  1223    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1224  
; ..\component\VStdLib\Implementation\vstdlib.c	  1225    /* ----- Development Error Report ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1226  # if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1227    if (errorId != VSTDLIB_E_NO_ERROR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1228    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1229      (void) Det_ReportError(VSTDLIB_MODULE_ID, VSTDLIB_INSTANCE_ID_DET, VSTDLIB_SID_MEM_SET, errorId);
; ..\component\VStdLib\Implementation\vstdlib.c	  1230    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1231  # else
; ..\component\VStdLib\Implementation\vstdlib.c	  1232    VSTDLIB_DUMMY_STATEMENT(errorId); /* PRQA S 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1233  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1234  } /* VStdLib_MemSet() */
	ret
.L2:
	mov.d	d15,a4
.L413:
	rsub	d15,d15,#4
.L414:
	and	d15,#3
.L507:
	jeq	d15,#0,.L37
.L263:
	jeq	d15,#1,.L38
.L508:
	jeq	d15,#2,.L39
.L509:
	jne	d15,#3,.L41
.L510:
	st.b	[a4]2,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   330      case 2:      (inlined)
.L39:
	st.b	[a4]1,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   333      case 1:      (inlined)
.L38:
	st.b	[a4],d4

; ..\component\VStdLib\Implementation\vstdlib.c	   336      default:      (inlined)
.L41:
	addsc.a	a4,a4,d15,#0
.L272:
	sub	d5,d15
.L37:
	mov	d15,#0
.L415:
	sh	d0,d4,#24
.L511:
	sh	d1,d4,#16
.L512:
	or	d0,d1
.L513:
	sh	d1,d4,#8
.L514:
	or	d0,d1
.L416:
	or	d0,d4
	mov.aa	a15,a4
.L515:
	mov	d1,d5
.L417:
	sh	d1,#-4
.L411:
	add	d1,#-1
	mov.a	a2,d1

; ..\component\VStdLib\Implementation\vstdlib.c	   515    for (remaining = nCnt; remaining >= 16u; remaining -= 16u)      (inlined)
.L42:
	st.w	[a15],d0
.L516:
	lea	a5,[a15]4
	st.w	[a5+],d0
.L517:
	add	d15,#4
	st.w	[a5+],d0
.L518:
	add	d5,d5,#-16
	st.w	[a5+],d0
.L418:
	lea	a15,[a15]16
	loop	a2,.L42
.L419:

; ..\component\VStdLib\Implementation\vstdlib.c	   528    switch (remaining)      (inlined)
	mov	d1,#15
	movh.a	a15,#@his(.2.jmp)
	lea	a15,[a15]@los(.2.jmp)
	jlt	d1,d5,.L45
	mov	d1,#1
	jlt	d5,d1,.L45
	sub	d1,d5,d1
	addsc.a	a15,a15,d1,#2
	ld.a	a15,[a15]
	ji	a15
.L412:
	
	.sdecl	'.rodata.vstdlib..2.jmp',data,rom
	.sect	'.rodata.vstdlib..2.jmp'
	.align	4
.2.jmp:	.type	object
	.word	.L46
	.word	.L47
	.word	.L48
	.word	.L49
	.word	.L50
	.word	.L51
	.word	.L52
	.word	.L53
	.word	.L54
	.word	.L55
	.word	.L56
	.word	.L57
	.word	.L58
	.word	.L59
	.word	.L60
	
	.sect	'.text.vstdlib.VStdLib_MemSet'

; ..\component\VStdLib\Implementation\vstdlib.c	   533      case 12:      (inlined)
.L57:

; ..\component\VStdLib\Implementation\vstdlib.c	   532      case 13:      (inlined)
.L58:

; ..\component\VStdLib\Implementation\vstdlib.c	   531      case 14:      (inlined)
.L59:

; ..\component\VStdLib\Implementation\vstdlib.c	   530      case 15:      (inlined)
.L60:
	addsc.a	a15,a4,d15,#2
.L519:
	add	d15,#1
.L520:
	st.w	[a15],d0

; ..\component\VStdLib\Implementation\vstdlib.c	   540      case 8:      (inlined)
.L53:

; ..\component\VStdLib\Implementation\vstdlib.c	   539      case 9:      (inlined)
.L54:

; ..\component\VStdLib\Implementation\vstdlib.c	   538      case 10:      (inlined)
.L55:

; ..\component\VStdLib\Implementation\vstdlib.c	   537      case 11:      (inlined)
.L56:
	addsc.a	a15,a4,d15,#2
.L521:
	add	d15,#1
.L522:
	st.w	[a15],d0

; ..\component\VStdLib\Implementation\vstdlib.c	   547      case 4:      (inlined)
.L49:

; ..\component\VStdLib\Implementation\vstdlib.c	   546      case 5:      (inlined)
.L50:

; ..\component\VStdLib\Implementation\vstdlib.c	   545      case 6:      (inlined)
.L51:

; ..\component\VStdLib\Implementation\vstdlib.c	   544      case 7:      (inlined)
.L52:
	addsc.a	a15,a4,d15,#2
.L523:
	add	d15,#1
.L524:
	st.w	[a15],d0

; ..\component\VStdLib\Implementation\vstdlib.c	   553      case 1:      (inlined)
.L46:

; ..\component\VStdLib\Implementation\vstdlib.c	   552      case 2:      (inlined)
.L47:

; ..\component\VStdLib\Implementation\vstdlib.c	   551      case 3:      (inlined)
.L48:
	addsc.a	a15,a4,d15,#2
.L283:
	and	d15,d5,#3
.L420:
	jeq	d15,#1,.L61
.L525:
	jeq	d15,#2,.L62
.L526:
	jne	d15,#3,.L64
.L527:
	st.b	[a15]2,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   330      case 2:      (inlined)
.L62:
	st.b	[a15]1,d4

; ..\component\VStdLib\Implementation\vstdlib.c	   333      case 1:      (inlined)
.L61:
	st.b	[a15],d4

; ..\component\VStdLib\Implementation\vstdlib.c	   336      default:      (inlined)
.L64:

; ..\component\VStdLib\Implementation\vstdlib.c	   559      default:      (inlined)
.L45:
	ret
.L243:
	
__VStdLib_MemSet_function_end:
	.size	VStdLib_MemSet,__VStdLib_MemSet_function_end-VStdLib_MemSet
.L212:
	; End of function
	
	.sdecl	'.text.vstdlib.VStdLib_MemCpy',code,cluster('VStdLib_MemCpy')
	.sect	'.text.vstdlib.VStdLib_MemCpy'
	.align	2
	
	.global	VStdLib_MemCpy

; ..\component\VStdLib\Implementation\vstdlib.c	  1235  
; ..\component\VStdLib\Implementation\vstdlib.c	  1236  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1237   * VStdLib_MemCpy()
; ..\component\VStdLib\Implementation\vstdlib.c	  1238   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1239  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	  1240   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1241   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1242   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1243   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1244   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1245   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1246   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1247   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1248   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1249   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1250   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1251   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1252   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1253   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1254   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1255   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1256   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1257   */
; ..\component\VStdLib\Implementation\vstdlib.c	  1258  FUNC(void, VSTDLIB_CODE) VStdLib_MemCpy(P2VAR(void, AUTOMATIC, VSTDLIB_VAR_FAR) pDst,
; Function VStdLib_MemCpy
.L193:
VStdLib_MemCpy:	.type	func

; ..\component\VStdLib\Implementation\vstdlib.c	  1259                                          P2CONST(void, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc,
; ..\component\VStdLib\Implementation\vstdlib.c	  1260                                          VStdLib_CntType nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	  1261  {
; ..\component\VStdLib\Implementation\vstdlib.c	  1262    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1263    P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pDst8 = \ 
; ..\component\VStdLib\Implementation\vstdlib.c	  1264      (P2VAR(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) pDst; /* PRQA S 0316 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1265    P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc8 = \ 
; ..\component\VStdLib\Implementation\vstdlib.c	  1266      (P2CONST(uint8, AUTOMATIC, VSTDLIB_VAR_FAR)) pSrc; /* PRQA S 0316 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1267    uint8 errorId = VSTDLIB_E_NO_ERROR;
; ..\component\VStdLib\Implementation\vstdlib.c	  1268  
; ..\component\VStdLib\Implementation\vstdlib.c	  1269    /* ----- Development Error Checks ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1270  # if (VSTDLIB_DEV_ERROR_DETECT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1271    /* #10 Check parameters 'pDst' and 'pSrc' */
; ..\component\VStdLib\Implementation\vstdlib.c	  1272    if ((pDst == NULL_PTR) || (pSrc == NULL_PTR))
; ..\component\VStdLib\Implementation\vstdlib.c	  1273    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1274      errorId = VSTDLIB_E_PARAM_POINTER;
; ..\component\VStdLib\Implementation\vstdlib.c	  1275    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1276    else
; ..\component\VStdLib\Implementation\vstdlib.c	  1277  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1278    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1279      /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1280  # if (VSTDLIB_RUNTIME_OPTIMIZATION == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1281  
; ..\component\VStdLib\Implementation\vstdlib.c	  1282      /* #20 If less than 32 bytes have to be copied */
; ..\component\VStdLib\Implementation\vstdlib.c	  1283      if (nCnt < 32u)
	mov	d15,#32
	mov.aa	a15,a4
.L422:
	mov.aa	a6,a5
.L423:
	jge.u	d4,d15,.L65
.L293:

; ..\component\VStdLib\Implementation\vstdlib.c	   648    switch (nCnt)      (inlined)
	mov	d15,#31
	movh.a	a2,#@his(.3.jmp)
	lea	a2,[a2]@los(.3.jmp)
	jlt	d15,d4,.L67
	mov	d15,#1
	jlt	d4,d15,.L67
	sub	d15,d4,d15
	addsc.a	a2,a2,d15,#2
	ld.a	a2,[a2]
	ji	a2
.L421:
	
	.sdecl	'.rodata.vstdlib..3.jmp',data,rom
	.sect	'.rodata.vstdlib..3.jmp'
	.align	4
.3.jmp:	.type	object
	.word	.L68
	.word	.L69
	.word	.L70
	.word	.L71
	.word	.L72
	.word	.L73
	.word	.L74
	.word	.L75
	.word	.L76
	.word	.L77
	.word	.L78
	.word	.L79
	.word	.L80
	.word	.L81
	.word	.L82
	.word	.L83
	.word	.L84
	.word	.L85
	.word	.L86
	.word	.L87
	.word	.L88
	.word	.L89
	.word	.L90
	.word	.L91
	.word	.L92
	.word	.L93
	.word	.L94
	.word	.L95
	.word	.L96
	.word	.L97
	.word	.L98
	
	.sect	'.text.vstdlib.VStdLib_MemCpy'

; ..\component\VStdLib\Implementation\vstdlib.c	   650      case 31:      (inlined)
.L98:
	ld.bu	d15,[a6]30
.L532:
	st.b	[a15]30,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   653      case 30:      (inlined)
.L97:
	ld.bu	d15,[a6]29
.L533:
	st.b	[a15]29,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   656      case 29:      (inlined)
.L96:
	ld.bu	d15,[a6]28
.L534:
	st.b	[a15]28,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   659      case 28:      (inlined)
.L95:
	ld.bu	d15,[a6]27
.L535:
	st.b	[a15]27,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   662      case 27:      (inlined)
.L94:
	ld.bu	d15,[a6]26
.L536:
	st.b	[a15]26,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   665      case 26:      (inlined)
.L93:
	ld.bu	d15,[a6]25
.L537:
	st.b	[a15]25,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   668      case 25:      (inlined)
.L92:
	ld.bu	d15,[a6]24
.L538:
	st.b	[a15]24,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   671      case 24:      (inlined)
.L91:
	ld.bu	d15,[a6]23
.L539:
	st.b	[a15]23,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   674      case 23:      (inlined)
.L90:
	ld.bu	d15,[a6]22
.L540:
	st.b	[a15]22,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   677      case 22:      (inlined)
.L89:
	ld.bu	d15,[a6]21
.L541:
	st.b	[a15]21,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   680      case 21:      (inlined)
.L88:
	ld.bu	d15,[a6]20
.L542:
	st.b	[a15]20,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   683      case 20:      (inlined)
.L87:
	ld.bu	d15,[a6]19
.L543:
	st.b	[a15]19,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   686      case 19:      (inlined)
.L86:
	ld.bu	d15,[a6]18
.L544:
	st.b	[a15]18,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   689      case 18:      (inlined)
.L85:
	ld.bu	d15,[a6]17
.L545:
	st.b	[a15]17,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   692      case 17:      (inlined)
.L84:
	ld.bu	d15,[a6]16
.L546:
	st.b	[a15]16,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   695      case 16:      (inlined)
.L83:
	ld.bu	d15,[a6]15
.L547:
	st.b	[a15]15,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   698      case 15:      (inlined)
.L82:
	ld.bu	d15,[a6]14
.L548:
	st.b	[a15]14,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   701      case 14:      (inlined)
.L81:
	ld.bu	d15,[a6]13
.L549:
	st.b	[a15]13,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   704      case 13:      (inlined)
.L80:
	ld.bu	d15,[a6]12
.L550:
	st.b	[a15]12,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   707      case 12:      (inlined)
.L79:
	ld.bu	d15,[a6]11
.L551:
	st.b	[a15]11,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   710      case 11:      (inlined)
.L78:
	ld.bu	d15,[a6]10
.L552:
	st.b	[a15]10,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   713      case 10:      (inlined)
.L77:
	ld.bu	d15,[a6]9
.L553:
	st.b	[a15]9,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   716      case 9:      (inlined)
.L76:
	ld.bu	d15,[a6]8
.L554:
	st.b	[a15]8,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   719      case 8:      (inlined)
.L75:
	ld.bu	d15,[a6]7
.L555:
	st.b	[a15]7,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   722      case 7:      (inlined)
.L74:
	ld.bu	d15,[a6]6
.L556:
	st.b	[a15]6,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   725      case 6:      (inlined)
.L73:
	ld.bu	d15,[a6]5
.L557:
	st.b	[a15]5,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   728      case 5:      (inlined)
.L72:
	ld.bu	d15,[a6]4
.L558:
	st.b	[a15]4,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   731      case 4:      (inlined)
.L71:
	ld.bu	d15,[a6]3
.L559:
	st.b	[a15]3,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   734      case 3:      (inlined)
.L70:
	ld.bu	d15,[a6]2
.L560:
	st.b	[a15]2,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   737      case 2:      (inlined)
.L69:
	ld.bu	d15,[a6]1
.L561:
	st.b	[a15]1,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   740      case 1:      (inlined)
.L68:
	ld.bu	d15,[a6]
.L562:
	st.b	[a15],d15

; ..\component\VStdLib\Implementation\vstdlib.c	   743      default:      (inlined)
.L67:

; ..\component\VStdLib\Implementation\vstdlib.c	  1284      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1285        /* #30 Use a byte-wise algorithm */
; ..\component\VStdLib\Implementation\vstdlib.c	  1286        VStdLib_Loc_MemCpy_8_31( /* SBSW_VSTDLIB_CALL_UNMODIFIED */
; ..\component\VStdLib\Implementation\vstdlib.c	  1287          pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1288          pSrc8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1289          (uint8_least) nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	  1290      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1291      /* #40 Else */
; ..\component\VStdLib\Implementation\vstdlib.c	  1292      else
; ..\component\VStdLib\Implementation\vstdlib.c	  1293      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1294        /* #50 Get the source pointer offset to the next 32-bit boundary */
; ..\component\VStdLib\Implementation\vstdlib.c	  1295        uint8_least nSrcOffset = VSTDLIB_ALIGN_OFFSET(pSrc8); /* PRQA S 0306 */ /* MD_VStdLib_PtrCastToInt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1296        uint8_least nDstOffset;
; ..\component\VStdLib\Implementation\vstdlib.c	  1297  
; ..\component\VStdLib\Implementation\vstdlib.c	  1298        /* #60 If the source is not aligned */
; ..\component\VStdLib\Implementation\vstdlib.c	  1299        if (nSrcOffset != 0u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1300        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1301          /* #70 Copy the amount of bytes to reach the alignment boundary and adjust the pointers */
; ..\component\VStdLib\Implementation\vstdlib.c	  1302          VStdLib_Loc_MemCpy_8_3( /* SBSW_VSTDLIB_CALL_MODIFIED_CNT */
; ..\component\VStdLib\Implementation\vstdlib.c	  1303            pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1304            pSrc8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1305            nSrcOffset);
; ..\component\VStdLib\Implementation\vstdlib.c	  1306  
; ..\component\VStdLib\Implementation\vstdlib.c	  1307          pSrc8 = &pSrc8[nSrcOffset];
; ..\component\VStdLib\Implementation\vstdlib.c	  1308          pDst8 = &pDst8[nSrcOffset];
; ..\component\VStdLib\Implementation\vstdlib.c	  1309          nCnt -= nSrcOffset; /* PRQA S 1338 */ /* MD_VStdLib_ParamMod */
; ..\component\VStdLib\Implementation\vstdlib.c	  1310        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1311  
; ..\component\VStdLib\Implementation\vstdlib.c	  1312        /* #80 Get the destination pointer offset to the next 32-bit boundary */
; ..\component\VStdLib\Implementation\vstdlib.c	  1313        nDstOffset = VSTDLIB_ALIGN_OFFSET(pDst8); /* PRQA S 0306 */ /* MD_VStdLib_PtrCastToInt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1314  
; ..\component\VStdLib\Implementation\vstdlib.c	  1315        /* #90 If destination is aligned */
; ..\component\VStdLib\Implementation\vstdlib.c	  1316        if (nDstOffset == 0u)
; ..\component\VStdLib\Implementation\vstdlib.c	  1317        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1318          /* #100 Both pointers are aligned, use the 32-bit aligned memcpy */
; ..\component\VStdLib\Implementation\vstdlib.c	  1319          VStdLib_Loc_MemCpy_32_Aligned( /* SBSW_VSTDLIB_CALL_MODIFIED_PTR_CNT */
; ..\component\VStdLib\Implementation\vstdlib.c	  1320            (P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR)) pDst8, /* PRQA S 0310, 3305 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1321            (P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR)) pSrc8, /* PRQA S 0310, 3305 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1322            nCnt);
; ..\component\VStdLib\Implementation\vstdlib.c	  1323        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1324        /* #110 Else */
; ..\component\VStdLib\Implementation\vstdlib.c	  1325        else
; ..\component\VStdLib\Implementation\vstdlib.c	  1326        {
; ..\component\VStdLib\Implementation\vstdlib.c	  1327          /* #120 Use the 32-bit unaligned memcpy */
; ..\component\VStdLib\Implementation\vstdlib.c	  1328          VStdLib_Loc_MemCpy_32_Unaligned( /* SBSW_VSTDLIB_CALL_MODIFIED_PTR_CNT */
; ..\component\VStdLib\Implementation\vstdlib.c	  1329            pDst8,
; ..\component\VStdLib\Implementation\vstdlib.c	  1330            (P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR)) pSrc8, /* PRQA S 0310, 3305 */ /* MD_VStdLib_PtrCast */
; ..\component\VStdLib\Implementation\vstdlib.c	  1331            nCnt,
; ..\component\VStdLib\Implementation\vstdlib.c	  1332            nDstOffset);
; ..\component\VStdLib\Implementation\vstdlib.c	  1333        }
; ..\component\VStdLib\Implementation\vstdlib.c	  1334      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1335  
; ..\component\VStdLib\Implementation\vstdlib.c	  1336  # else /* VSTDLIB_RUNTIME_OPTIMIZATION == STD_OFF */
; ..\component\VStdLib\Implementation\vstdlib.c	  1337  
; ..\component\VStdLib\Implementation\vstdlib.c	  1338      VStdLib_CntType idx;
; ..\component\VStdLib\Implementation\vstdlib.c	  1339  
; ..\component\VStdLib\Implementation\vstdlib.c	  1340      /* #130 Linearly copy nCnt bytes using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	  1341      for (idx = 0u; idx < nCnt; idx++)
; ..\component\VStdLib\Implementation\vstdlib.c	  1342      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1343        pDst8[idx] = pSrc8[idx]; /* SBSW_VSTDLIB_ACCESS_LOOP */
; ..\component\VStdLib\Implementation\vstdlib.c	  1344      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1345  
; ..\component\VStdLib\Implementation\vstdlib.c	  1346  # endif /* VSTDLIB_RUNTIME_OPTIMIZATION */
; ..\component\VStdLib\Implementation\vstdlib.c	  1347    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1348  
; ..\component\VStdLib\Implementation\vstdlib.c	  1349    /* ----- Development Error Report ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1350  # if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1351    if (errorId != VSTDLIB_E_NO_ERROR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1352    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1353      (void) Det_ReportError(VSTDLIB_MODULE_ID, VSTDLIB_INSTANCE_ID_DET, VSTDLIB_SID_MEM_COPY, errorId);
; ..\component\VStdLib\Implementation\vstdlib.c	  1354    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1355  # else
; ..\component\VStdLib\Implementation\vstdlib.c	  1356    VSTDLIB_DUMMY_STATEMENT(errorId); /* PRQA S 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1357  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1358  } /* VStdLib_MemCpy() */
	ret
.L65:
	mov.d	d0,a6
.L426:
	rsub	d15,d0,#4
.L428:
	and	d15,#3
.L563:
	jeq	d15,#0,.L100
.L304:
	jeq	d15,#1,.L101
.L564:
	jeq	d15,#2,.L102
.L565:
	jne	d15,#3,.L104
.L566:
	ld.bu	d0,[a6]2
.L427:
	st.b	[a15]2,d0

; ..\component\VStdLib\Implementation\vstdlib.c	   602      case 2:      (inlined)
.L102:
	ld.bu	d0,[a6]1
.L567:
	st.b	[a15]1,d0

; ..\component\VStdLib\Implementation\vstdlib.c	   605      case 1:      (inlined)
.L101:
	ld.bu	d0,[a6]
.L568:
	st.b	[a15],d0

; ..\component\VStdLib\Implementation\vstdlib.c	   608      default:      (inlined)
.L104:
	addsc.a	a6,a6,d15,#0
.L569:
	addsc.a	a15,a15,d15,#0
.L425:
	sub	d4,d15
.L100:
	mov.d	d0,a15
.L430:
	rsub	d15,d0,#4
.L429:
	and	d5,d15,#3
.L432:
	jne	d5,#0,.L105
.L313:
	mov	e0,d4,d4
.L431:
	mov	d15,#0
.L433:
	sh	d1,#-4
	add	d1,#-1
	mov.a	a2,d1

; ..\component\VStdLib\Implementation\vstdlib.c	   786    for (remaining = nCnt; remaining >= 16u; remaining -= 16u)      (inlined)
.L106:
	addsc.a	a4,a6,d15,#2
.L570:
	addsc.a	a5,a15,d15,#2
.L571:
	ld.w	d4,[a4]
.L572:
	ld.w	d1,[a4]4
.L434:
	ld.w	d2,[a4]8
.L436:
	ld.w	d3,[a4]12
.L437:
	st.w	[a5],d4
.L573:
	lea	a4,[a5]4
	st.w	[a4+],d1
.L574:
	st.w	[a4+],d2
.L575:
	add	d15,#4
	st.w	[a4+],d3
.L438:
	add	d0,d0,#-16
	loop	a2,.L106
.L576:

; ..\component\VStdLib\Implementation\vstdlib.c	   803    switch (remaining)      (inlined)
	mov	d1,#15
	movh.a	a2,#@his(.4.jmp)
.L435:
	lea	a2,[a2]@los(.4.jmp)
	jlt	d1,d0,.L109
	mov	d1,#1
	jlt	d0,d1,.L109
	sub	d1,d0,d1
	addsc.a	a2,a2,d1,#2
	ld.a	a2,[a2]
	ji	a2
.L424:
	
	.sdecl	'.rodata.vstdlib..4.jmp',data,rom
	.sect	'.rodata.vstdlib..4.jmp'
	.align	4
.4.jmp:	.type	object
	.word	.L110
	.word	.L111
	.word	.L112
	.word	.L113
	.word	.L114
	.word	.L115
	.word	.L116
	.word	.L117
	.word	.L118
	.word	.L119
	.word	.L120
	.word	.L121
	.word	.L122
	.word	.L123
	.word	.L124
	
	.sect	'.text.vstdlib.VStdLib_MemCpy'

; ..\component\VStdLib\Implementation\vstdlib.c	   808      case 12:      (inlined)
.L121:

; ..\component\VStdLib\Implementation\vstdlib.c	   807      case 13:      (inlined)
.L122:

; ..\component\VStdLib\Implementation\vstdlib.c	   806      case 14:      (inlined)
.L123:

; ..\component\VStdLib\Implementation\vstdlib.c	   805      case 15:      (inlined)
.L124:
	fcall	.cocofun_6

; ..\component\VStdLib\Implementation\vstdlib.c	   815      case 8:      (inlined)
.L117:

; ..\component\VStdLib\Implementation\vstdlib.c	   814      case 9:      (inlined)
.L118:

; ..\component\VStdLib\Implementation\vstdlib.c	   813      case 10:      (inlined)
.L119:

; ..\component\VStdLib\Implementation\vstdlib.c	   812      case 11:      (inlined)
.L120:
	fcall	.cocofun_6

; ..\component\VStdLib\Implementation\vstdlib.c	   822      case 4:      (inlined)
.L113:

; ..\component\VStdLib\Implementation\vstdlib.c	   821      case 5:      (inlined)
.L114:

; ..\component\VStdLib\Implementation\vstdlib.c	   820      case 6:      (inlined)
.L115:

; ..\component\VStdLib\Implementation\vstdlib.c	   819      case 7:      (inlined)
.L116:
	fcall	.cocofun_6

; ..\component\VStdLib\Implementation\vstdlib.c	   828      case 1:      (inlined)
.L110:

; ..\component\VStdLib\Implementation\vstdlib.c	   827      case 2:      (inlined)
.L111:

; ..\component\VStdLib\Implementation\vstdlib.c	   826      case 3:      (inlined)
.L112:
	addsc.a	a2,a15,d15,#2
.L577:
	addsc.a	a15,a6,d15,#2
.L328:
	and	d15,d0,#3
.L439:
	jeq	d15,#1,.L129
.L578:
	jeq	d15,#2,.L126
.L579:
	jne	d15,#3,.L128
.L580:
	ld.bu	d15,[a15]2
.L581:
	st.b	[a2]2,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   602      case 2:      (inlined)
.L126:
	ld.bu	d15,[a15]1
.L582:
	st.b	[a2]1,d15
.L314:
	j	.L129
.L105:
	mov	d15,#0
.L441:
	mov	d6,d15
.L442:
	mov	d0,#32
.L440:

; ..\component\VStdLib\Implementation\vstdlib.c	   980    if (remaining >= 32u)      (inlined)
	jlt.u	d4,d0,.L130
.L343:
	add	d4,#-4
	ld.w	d0,[a6]
.L348:
	jeq	d5,#2,.L131
.L583:
	jne	d5,#3,.L133
.L584:
	mov	d15,#1
	st.b	[a15],d0
.L585:
	sh	d0,#-8

; ..\component\VStdLib\Implementation\vstdlib.c	   887      case 2:      (inlined)
.L131:
	fcall	.cocofun_7

; ..\component\VStdLib\Implementation\vstdlib.c	   892      default: /* case 1 - nCnt is always in range [1..3] */      (inlined)
.L133:
	fcall	.cocofun_7
.L349:
	addsc.a	a4,a15,d15,#0
.L496:
	mov	d8,#0
.L443:
	mov	d6,#1
.L586:

; ..\component\VStdLib\Implementation\vstdlib.c	  1000      if (nDstOffset == 3u) /* 24-bit displacement */      (inlined)
	jne	d5,#3,.L134
.L587:
	mov	d1,d4
.L446:
	sh	d1,#-4
.L444:
	add	d1,#-1
	mov.a	a2,d1

; ..\component\VStdLib\Implementation\vstdlib.c	  1002        for (; remaining >= 16u; remaining -= 16u)      (inlined)
.L135:
	addsc.a	a15,a6,d6,#2
.L588:
	add	d6,#4
.L589:
	ld.w	d1,[a15]
.L447:
	ld.w	d15,[a15]4
.L449:
	sh	d2,d1,#8
	ld.w	d7,[a15]8
.L451:
	or	d2,d0
	ld.w	d9,[a15]12
.L452:
	addsc.a	a15,a4,d8,#2
.L590:
	sh	d1,d1,#-24
.L448:
	st.w	[a15+],d2
.L591:
	sh	d0,d15,#8
.L445:
	or	d1,d0
	st.w	[a15+],d1
.L592:
	sh	d0,d15,#-24
.L593:
	sh	d3,d7,#8
.L453:
	or	d3,d0
	st.w	[a15+],d3
.L450:
	sh	d0,d7,#-24
.L594:
	sh	d7,d9,#8
.L595:
	or	d7,d0
	st.w	[a15+],d7
.L596:
	sh	d0,d9,#-24
.L454:
	add	d8,#4
.L361:
	add	d4,d4,#-16
	loop	a2,.L135
.L456:

; ..\component\VStdLib\Implementation\vstdlib.c	  1002        for (; remaining >= 16u; remaining -= 16u)      (inlined)
	j	.L137

; ..\component\VStdLib\Implementation\vstdlib.c	  1000      if (nDstOffset == 3u) /* 24-bit displacement */      (inlined)
.L134:

; ..\component\VStdLib\Implementation\vstdlib.c	  1030      else if (nDstOffset == 2u) /* 16-bit displacement */      (inlined)
	jne	d5,#2,.L138
.L597:
	mov	d15,d4
.L458:
	sh	d15,#-4
.L457:
	add	d15,#-1
	mov.a	a2,d15

; ..\component\VStdLib\Implementation\vstdlib.c	  1032        for (; remaining >= 16u; remaining -= 16u)      (inlined)
.L139:
	addsc.a	a15,a6,d6,#2
.L598:
	add	d6,#4
.L599:
	ld.w	d1,[a15]
.L459:
	ld.w	d15,[a15]4
.L461:
	sh	d2,d1,#16
	ld.w	d7,[a15]8
.L463:
	or	d2,d0
	ld.w	d9,[a15]12
.L465:
	addsc.a	a15,a4,d8,#2
.L600:
	sh	d1,d1,#-16
.L460:
	st.w	[a15+],d2
.L601:
	sh	d0,d15,#16
.L455:
	or	d1,d0
	st.w	[a15+],d1
.L602:
	sh	d0,d15,#-16
.L603:
	sh	d3,d7,#16
.L604:
	sh	d15,d7,#-16
.L462:
	or	d3,d0
	st.w	[a15+],d3
.L605:
	sh	d0,d9,#16
.L466:
	or	d15,d0
	st.w	[a15+],d15
.L464:
	sh	d0,d9,#-16
.L467:
	add	d8,#4
.L368:
	add	d4,d4,#-16
	loop	a2,.L139
.L469:

; ..\component\VStdLib\Implementation\vstdlib.c	  1032        for (; remaining >= 16u; remaining -= 16u)      (inlined)
	j	.L141

; ..\component\VStdLib\Implementation\vstdlib.c	  1030      else if (nDstOffset == 2u) /* 16-bit displacement */      (inlined)
.L138:
	mov	d15,d4
.L471:
	sh	d15,#-4
.L470:
	add	d15,#-1
	mov.a	a2,d15

; ..\component\VStdLib\Implementation\vstdlib.c	  1063        for (; remaining >= 16u; remaining -= 16u)      (inlined)
.L142:
	addsc.a	a15,a6,d6,#2
.L606:
	add	d6,#4
.L607:
	ld.w	d1,[a15]
.L472:
	ld.w	d15,[a15]4
.L474:
	sh	d2,d1,#24
	ld.w	d7,[a15]8
.L476:
	or	d2,d0
	ld.w	d9,[a15]12
.L478:
	addsc.a	a15,a4,d8,#2
.L608:
	sh	d1,#-8
.L473:
	st.w	[a15+],d2
.L609:
	sh	d0,d15,#24
.L468:
	or	d1,d0
	st.w	[a15+],d1
.L610:
	sh	d0,d15,#-8
.L611:
	sh	d3,d7,#24
.L479:
	or	d3,d0
	st.w	[a15+],d3
.L475:
	sh	d7,#-8
.L477:
	sh	d15,d9,#24
.L480:
	or	d7,d15
	st.w	[a15+],d7
.L612:
	sh	d0,d9,#-8
.L481:
	add	d8,#4
.L375:
	add	d4,d4,#-16
	loop	a2,.L142

; ..\component\VStdLib\Implementation\vstdlib.c	  1061      else /* nDstOffset == 1 - 8-bit displacement */      (inlined)
.L141:

; ..\component\VStdLib\Implementation\vstdlib.c	  1030      else if (nDstOffset == 2u) /* 16-bit displacement */      (inlined)
.L137:
	sh	d15,d5,#3
.L483:
	and	d15,#31
.L613:
	rsub	d1,d15,#32
	addsc.a	a15,a6,d6,#2
.L484:
	addsc.a	a2,a4,d8,#2
.L486:
	mov	d2,d4
.L487:
	sh	d2,#-2
	jeq	d2,#0,.L146
	mov.a	a5,d2
.L488:
	add.a	a5,#-1

; ..\component\VStdLib\Implementation\vstdlib.c	  1097        for (; remaining >= 4u; remaining -= 4u)      (inlined)
.L145:
	ld.w	d3,[a15+]
.L489:
	add	d8,#1
.L614:
	sh	d2,d3,d1
.L490:
	or	d2,d0
	st.w	[a2+],d2
.L491:
	mov	d0,d15
.L482:
	rsub	d0,#0
	sh	d0,d3,d0
.L492:
	add	d6,#1
.L385:
	add	d4,#-4
	loop	a5,.L145
.L146:
	addsc.a	a15,a4,d8,#2
.L495:
	mov	d15,#0
.L388:
	rsub	d1,d5,#4
.L485:
	jeq	d1,#2,.L147
.L615:
	jne	d1,#3,.L149
.L616:
	mov	d15,#1
	st.b	[a15],d0
.L617:
	sh	d0,#-8

; ..\component\VStdLib\Implementation\vstdlib.c	   887      case 2:      (inlined)
.L147:
	fcall	.cocofun_7

; ..\component\VStdLib\Implementation\vstdlib.c	   892      default: /* case 1 - nCnt is always in range [1..3] */      (inlined)
.L149:
	addsc.a	a2,a15,d15,#0
.L618:
	add	d15,#1
.L619:
	st.b	[a2],d0

; ..\component\VStdLib\Implementation\vstdlib.c	   980    if (remaining >= 32u)      (inlined)
.L130:
	extr.u	d0,d4,#0,#8

; ..\component\VStdLib\Implementation\vstdlib.c	   648    switch (nCnt)      (inlined)
	movh.a	a4,#@his(.5.jmp)
.L389:
	addsc.a	a2,a15,d15,#0
.L620:
	addsc.a	a15,a6,d6,#2
.L391:

; ..\component\VStdLib\Implementation\vstdlib.c	   648    switch (nCnt)      (inlined)
	mov	d15,#31
	lea	a4,[a4]@los(.5.jmp)
.L493:
	jlt	d15,d0,.L151
	mov	d15,#1
	jlt	d0,d15,.L151
	sub	d15,d0,d15
	addsc.a	a4,a4,d15,#2
	ld.a	a4,[a4]
	ji	a4
.L494:
	
	.sdecl	'.rodata.vstdlib..5.jmp',data,rom
	.sect	'.rodata.vstdlib..5.jmp'
	.align	4
.5.jmp:	.type	object
	.word	.L152
	.word	.L153
	.word	.L154
	.word	.L155
	.word	.L156
	.word	.L157
	.word	.L158
	.word	.L159
	.word	.L160
	.word	.L161
	.word	.L162
	.word	.L163
	.word	.L164
	.word	.L165
	.word	.L166
	.word	.L167
	.word	.L168
	.word	.L169
	.word	.L170
	.word	.L171
	.word	.L172
	.word	.L173
	.word	.L174
	.word	.L175
	.word	.L176
	.word	.L177
	.word	.L178
	.word	.L179
	.word	.L180
	.word	.L181
	.word	.L182
	
	.sect	'.text.vstdlib.VStdLib_MemCpy'

; ..\component\VStdLib\Implementation\vstdlib.c	   650      case 31:      (inlined)
.L182:
	ld.bu	d15,[a15]30
.L621:
	st.b	[a2]30,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   653      case 30:      (inlined)
.L181:
	ld.bu	d15,[a15]29
.L622:
	st.b	[a2]29,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   656      case 29:      (inlined)
.L180:
	ld.bu	d15,[a15]28
.L623:
	st.b	[a2]28,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   659      case 28:      (inlined)
.L179:
	ld.bu	d15,[a15]27
.L624:
	st.b	[a2]27,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   662      case 27:      (inlined)
.L178:
	ld.bu	d15,[a15]26
.L625:
	st.b	[a2]26,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   665      case 26:      (inlined)
.L177:
	ld.bu	d15,[a15]25
.L626:
	st.b	[a2]25,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   668      case 25:      (inlined)
.L176:
	ld.bu	d15,[a15]24
.L627:
	st.b	[a2]24,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   671      case 24:      (inlined)
.L175:
	ld.bu	d15,[a15]23
.L628:
	st.b	[a2]23,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   674      case 23:      (inlined)
.L174:
	ld.bu	d15,[a15]22
.L629:
	st.b	[a2]22,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   677      case 22:      (inlined)
.L173:
	ld.bu	d15,[a15]21
.L630:
	st.b	[a2]21,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   680      case 21:      (inlined)
.L172:
	ld.bu	d15,[a15]20
.L631:
	st.b	[a2]20,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   683      case 20:      (inlined)
.L171:
	ld.bu	d15,[a15]19
.L632:
	st.b	[a2]19,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   686      case 19:      (inlined)
.L170:
	ld.bu	d15,[a15]18
.L633:
	st.b	[a2]18,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   689      case 18:      (inlined)
.L169:
	ld.bu	d15,[a15]17
.L634:
	st.b	[a2]17,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   692      case 17:      (inlined)
.L168:
	ld.bu	d15,[a15]16
.L635:
	st.b	[a2]16,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   695      case 16:      (inlined)
.L167:
	ld.bu	d15,[a15]15
.L636:
	st.b	[a2]15,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   698      case 15:      (inlined)
.L166:
	ld.bu	d15,[a15]14
.L637:
	st.b	[a2]14,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   701      case 14:      (inlined)
.L165:
	ld.bu	d15,[a15]13
.L638:
	st.b	[a2]13,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   704      case 13:      (inlined)
.L164:
	ld.bu	d15,[a15]12
.L639:
	st.b	[a2]12,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   707      case 12:      (inlined)
.L163:
	ld.bu	d15,[a15]11
.L640:
	st.b	[a2]11,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   710      case 11:      (inlined)
.L162:
	ld.bu	d15,[a15]10
.L641:
	st.b	[a2]10,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   713      case 10:      (inlined)
.L161:
	ld.bu	d15,[a15]9
.L642:
	st.b	[a2]9,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   716      case 9:      (inlined)
.L160:
	ld.bu	d15,[a15]8
.L643:
	st.b	[a2]8,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   719      case 8:      (inlined)
.L159:
	ld.bu	d15,[a15]7
.L644:
	st.b	[a2]7,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   722      case 7:      (inlined)
.L158:
	ld.bu	d15,[a15]6
.L645:
	st.b	[a2]6,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   725      case 6:      (inlined)
.L157:
	ld.bu	d15,[a15]5
.L646:
	st.b	[a2]5,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   728      case 5:      (inlined)
.L156:
	ld.bu	d15,[a15]4
.L647:
	st.b	[a2]4,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   731      case 4:      (inlined)
.L155:
	ld.bu	d15,[a15]3
.L648:
	st.b	[a2]3,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   734      case 3:      (inlined)
.L154:
	ld.bu	d15,[a15]2
.L649:
	st.b	[a2]2,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   737      case 2:      (inlined)
.L153:
	ld.bu	d15,[a15]1
.L650:
	st.b	[a2]1,d15

; ..\component\VStdLib\Implementation\vstdlib.c	   740      case 1:      (inlined)
.L152:
.L129:
	ld.bu	d15,[a15]
.L651:
	st.b	[a2],d15

; ..\component\VStdLib\Implementation\vstdlib.c	   743      default:      (inlined)
.L151:

; ..\component\VStdLib\Implementation\vstdlib.c	   608      default:      (inlined)
.L128:

; ..\component\VStdLib\Implementation\vstdlib.c	   834      default:      (inlined)
.L109:
	ret
.L284:
	
__VStdLib_MemCpy_function_end:
	.size	VStdLib_MemCpy,__VStdLib_MemCpy_function_end-VStdLib_MemCpy
.L217:
	; End of function
	
	.sdecl	'.text.vstdlib..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.vstdlib..cocofun_7'
	.align	2
; Function .cocofun_7
.L195:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	addsc.a	a2,a15,d15,#0
.L681:
	add	d15,#1
.L682:
	st.b	[a2],d0
.L683:
	sh	d0,#-8
	fret
.L242:
	; End of function
	.sdecl	'.text.vstdlib..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.vstdlib..cocofun_6'
	.align	2
; Function .cocofun_6
.L197:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	addsc.a	a4,a6,d15,#2
.L673:
	addsc.a	a2,a15,d15,#2
.L674:
	add	d15,#1
	ld.w	d1,[a4]
.L675:
	st.w	[a2],d1
.L676:
	fret
.L237:
	; End of function
	.sdecl	'.text.vstdlib.VStdLib_MemCpy16',code,cluster('VStdLib_MemCpy16')
	.sect	'.text.vstdlib.VStdLib_MemCpy16'
	.align	2
	
	.global	VStdLib_MemCpy16

; ..\component\VStdLib\Implementation\vstdlib.c	  1359  
; ..\component\VStdLib\Implementation\vstdlib.c	  1360  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1361   * VStdLib_MemCpy16()
; ..\component\VStdLib\Implementation\vstdlib.c	  1362   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1363  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	  1364   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1365   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1366   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1367   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1368   */
; ..\component\VStdLib\Implementation\vstdlib.c	  1369  FUNC(void, VSTDLIB_CODE) VStdLib_MemCpy16(P2VAR(uint16, AUTOMATIC, VSTDLIB_VAR_FAR) pDst,
; Function VStdLib_MemCpy16
.L199:
VStdLib_MemCpy16:	.type	func

; ..\component\VStdLib\Implementation\vstdlib.c	  1370                                            P2CONST(uint16, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc,
; ..\component\VStdLib\Implementation\vstdlib.c	  1371                                            VStdLib_CntType nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	  1372  {
; ..\component\VStdLib\Implementation\vstdlib.c	  1373    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1374    VStdLib_CntType idx;
; ..\component\VStdLib\Implementation\vstdlib.c	  1375    uint8 errorId = VSTDLIB_E_NO_ERROR;
; ..\component\VStdLib\Implementation\vstdlib.c	  1376  
; ..\component\VStdLib\Implementation\vstdlib.c	  1377    /* ----- Development Error Checks ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1378  # if (VSTDLIB_DEV_ERROR_DETECT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1379    /* #10 Check parameters 'pDst' and 'pSrc' */
; ..\component\VStdLib\Implementation\vstdlib.c	  1380    if ((pDst == NULL_PTR) || (pSrc == NULL_PTR))
; ..\component\VStdLib\Implementation\vstdlib.c	  1381    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1382      errorId = VSTDLIB_E_PARAM_POINTER;
; ..\component\VStdLib\Implementation\vstdlib.c	  1383    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1384    else
; ..\component\VStdLib\Implementation\vstdlib.c	  1385  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1386    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1387      /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1388      /* #20 Linearly copy nCnt 16-bit blocks using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	  1389      for (idx = 0u; idx < nCnt; idx++)
	jeq	d4,#0,.L185
.L656:
	mov.a	a15,d4
	add.a	a15,#-1
.L184:

; ..\component\VStdLib\Implementation\vstdlib.c	  1390      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1391        pDst[idx] = pSrc[idx]; /* SBSW_VSTDLIB_ACCESS_LOOP */
	ld.hu	d15,[a5+]2
.L657:
	st.h	[a4+],d15
	loop	a15,.L184
.L185:

; ..\component\VStdLib\Implementation\vstdlib.c	  1392      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1393    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1394  
; ..\component\VStdLib\Implementation\vstdlib.c	  1395    /* ----- Development Error Report --------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1396  # if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1397    if (errorId != VSTDLIB_E_NO_ERROR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1398    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1399      (void) Det_ReportError(VSTDLIB_MODULE_ID, VSTDLIB_INSTANCE_ID_DET, VSTDLIB_SID_MEM_COPY_16, errorId);
; ..\component\VStdLib\Implementation\vstdlib.c	  1400    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1401  # else
; ..\component\VStdLib\Implementation\vstdlib.c	  1402    VSTDLIB_DUMMY_STATEMENT(errorId); /* PRQA S 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1403  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1404  } /* VStdLib_MemCpy16() */
	ret
.L392:
	
__VStdLib_MemCpy16_function_end:
	.size	VStdLib_MemCpy16,__VStdLib_MemCpy16_function_end-VStdLib_MemCpy16
.L222:
	; End of function
	
	.sdecl	'.text.vstdlib.VStdLib_MemCpy32',code,cluster('VStdLib_MemCpy32')
	.sect	'.text.vstdlib.VStdLib_MemCpy32'
	.align	2
	
	.global	VStdLib_MemCpy32

; ..\component\VStdLib\Implementation\vstdlib.c	  1405  
; ..\component\VStdLib\Implementation\vstdlib.c	  1406  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1407   * VStdLib_MemCpy32()
; ..\component\VStdLib\Implementation\vstdlib.c	  1408   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1409  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	  1410   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1411   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1412   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1413   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1414   */
; ..\component\VStdLib\Implementation\vstdlib.c	  1415  FUNC(void, VSTDLIB_CODE) VStdLib_MemCpy32(P2VAR(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pDst,
; Function VStdLib_MemCpy32
.L201:
VStdLib_MemCpy32:	.type	func

; ..\component\VStdLib\Implementation\vstdlib.c	  1416                                            P2CONST(uint32, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc,
; ..\component\VStdLib\Implementation\vstdlib.c	  1417                                            VStdLib_CntType nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	  1418  {
; ..\component\VStdLib\Implementation\vstdlib.c	  1419    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1420    VStdLib_CntType idx;
; ..\component\VStdLib\Implementation\vstdlib.c	  1421    uint8 errorId = VSTDLIB_E_NO_ERROR;
; ..\component\VStdLib\Implementation\vstdlib.c	  1422  
; ..\component\VStdLib\Implementation\vstdlib.c	  1423    /* ----- Development Error Checks ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1424  # if (VSTDLIB_DEV_ERROR_DETECT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1425    /* #10 Check parameters 'pDst' and 'pSrc' */
; ..\component\VStdLib\Implementation\vstdlib.c	  1426    if ((pDst == NULL_PTR) || (pSrc == NULL_PTR))
; ..\component\VStdLib\Implementation\vstdlib.c	  1427    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1428      errorId = VSTDLIB_E_PARAM_POINTER;
; ..\component\VStdLib\Implementation\vstdlib.c	  1429    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1430    else
; ..\component\VStdLib\Implementation\vstdlib.c	  1431  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1432    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1433      /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1434      /* #20 Linearly copy nCnt 32-bit blocks using a loop */
; ..\component\VStdLib\Implementation\vstdlib.c	  1435      for (idx = 0u; idx < nCnt; idx++)
	jeq	d4,#0,.L188
.L662:
	mov.a	a15,d4
	add.a	a15,#-1
.L187:

; ..\component\VStdLib\Implementation\vstdlib.c	  1436      {
; ..\component\VStdLib\Implementation\vstdlib.c	  1437        pDst[idx] = pSrc[idx]; /* SBSW_VSTDLIB_ACCESS_LOOP */
	ld.w	d15,[a5+]
.L663:
	st.w	[a4+],d15
	loop	a15,.L187
.L188:

; ..\component\VStdLib\Implementation\vstdlib.c	  1438      }
; ..\component\VStdLib\Implementation\vstdlib.c	  1439    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1440  
; ..\component\VStdLib\Implementation\vstdlib.c	  1441    /* ----- Development Error Report --------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1442  # if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1443    if (errorId != VSTDLIB_E_NO_ERROR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1444    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1445      (void) Det_ReportError(VSTDLIB_MODULE_ID, VSTDLIB_INSTANCE_ID_DET, VSTDLIB_SID_MEM_COPY_32, errorId);
; ..\component\VStdLib\Implementation\vstdlib.c	  1446    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1447  # else
; ..\component\VStdLib\Implementation\vstdlib.c	  1448    VSTDLIB_DUMMY_STATEMENT(errorId); /* PRQA S 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1449  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1450  } /* VStdLib_MemCpy32() */
	ret
.L399:
	
__VStdLib_MemCpy32_function_end:
	.size	VStdLib_MemCpy32,__VStdLib_MemCpy32_function_end-VStdLib_MemCpy32
.L227:
	; End of function
	
	.sdecl	'.text.vstdlib.VStdLib_MemCpy_s',code,cluster('VStdLib_MemCpy_s')
	.sect	'.text.vstdlib.VStdLib_MemCpy_s'
	.align	2
	
	.global	VStdLib_MemCpy_s

; ..\component\VStdLib\Implementation\vstdlib.c	  1451  
; ..\component\VStdLib\Implementation\vstdlib.c	  1452  #endif /* VSTDLIB_USE_LIBRARY_FUNCTIONS != STD_ON */
; ..\component\VStdLib\Implementation\vstdlib.c	  1453  
; ..\component\VStdLib\Implementation\vstdlib.c	  1454  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1455   * VStdLib_MemCpy_s()
; ..\component\VStdLib\Implementation\vstdlib.c	  1456   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1457  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	  1458   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1459   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1460   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1461   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1462   */
; ..\component\VStdLib\Implementation\vstdlib.c	  1463  FUNC(void, VSTDLIB_CODE) VStdLib_MemCpy_s(P2VAR(void, AUTOMATIC, VSTDLIB_VAR_FAR) pDst,
; Function VStdLib_MemCpy_s
.L203:
VStdLib_MemCpy_s:	.type	func

; ..\component\VStdLib\Implementation\vstdlib.c	  1464                                            VStdLib_CntType nDstSize,
; ..\component\VStdLib\Implementation\vstdlib.c	  1465                                            P2CONST(void, AUTOMATIC, VSTDLIB_VAR_FAR) pSrc,
; ..\component\VStdLib\Implementation\vstdlib.c	  1466                                            VStdLib_CntType nCnt)
; ..\component\VStdLib\Implementation\vstdlib.c	  1467  {
; ..\component\VStdLib\Implementation\vstdlib.c	  1468    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1469    uint8 errorId = VSTDLIB_E_NO_ERROR;
; ..\component\VStdLib\Implementation\vstdlib.c	  1470  
; ..\component\VStdLib\Implementation\vstdlib.c	  1471    /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1472    /* #10 Check parameter 'nDstSize' (independently of development error detection) */
; ..\component\VStdLib\Implementation\vstdlib.c	  1473    if (nCnt > nDstSize)
	jlt.u	d4,d5,.L189
.L668:

; ..\component\VStdLib\Implementation\vstdlib.c	  1474    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1475      errorId = VSTDLIB_E_PARAM_SIZE;
; ..\component\VStdLib\Implementation\vstdlib.c	  1476    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1477    else
; ..\component\VStdLib\Implementation\vstdlib.c	  1478    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1479      /* #20 Call VStdLib_MemCpy() */
; ..\component\VStdLib\Implementation\vstdlib.c	  1480      VStdLib_MemCpy(pDst, pSrc, nCnt); /* SBSW_VSTDLIB_CALL_UNMODIFIED */
	mov	d4,d5
.L497:
	j	VStdLib_MemCpy
.L189:

; ..\component\VStdLib\Implementation\vstdlib.c	  1481    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1482  
; ..\component\VStdLib\Implementation\vstdlib.c	  1483    /* ----- Development Error Report ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1484  #if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1485    if (errorId != VSTDLIB_E_NO_ERROR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1486    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1487      (void) Det_ReportError(VSTDLIB_MODULE_ID, VSTDLIB_INSTANCE_ID_DET, VSTDLIB_SID_MEM_COPY_S, errorId);
; ..\component\VStdLib\Implementation\vstdlib.c	  1488    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1489  #else
; ..\component\VStdLib\Implementation\vstdlib.c	  1490    VSTDLIB_DUMMY_STATEMENT(errorId); /* PRQA S 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1491  #endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1492  } /* VStdLib_MemCpy_s() */
	ret
.L405:
	
__VStdLib_MemCpy_s_function_end:
	.size	VStdLib_MemCpy_s,__VStdLib_MemCpy_s_function_end-VStdLib_MemCpy_s
.L232:
	; End of function
	
	.calls	'VStdLib_MemCpy_s','VStdLib_MemCpy'
	.calls	'VStdLib_MemCpy','.cocofun_6'
	.calls	'VStdLib_MemCpy','.cocofun_7'
	.calls	'VStdLib_MemSet','',0
	.calls	'VStdLib_MemCpy','',0
	.calls	'.cocofun_7','',0
	.calls	'.cocofun_6','',0
	.calls	'VStdLib_MemCpy16','',0
	.calls	'VStdLib_MemCpy32','',0
	.calls	'VStdLib_MemCpy_s','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L205:
	.word	1585
	.half	3
	.word	.L206
	.byte	4
.L204:
	.byte	1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L207
.L246:
	.byte	2
	.byte	'unsigned char',0,1,8
.L250:
	.byte	3
	.word	139
.L262:
	.byte	4
	.byte	'VStdLib_Loc_MemSet_8_3',0,3,1,187,2,47,1,1
.L264:
	.byte	5
	.byte	'pDst8',0,1,188,2,44
	.word	156
.L266:
	.byte	5
	.byte	'nPattern',0,1,189,2,9
	.word	139
.L268:
	.byte	5
	.byte	'nCnt',0,1,190,2,15
	.word	139
.L270:
	.byte	6,0
.L252:
	.byte	4
	.byte	'VStdLib_Loc_MemSet_8_31',0,3,1,238,2,47,1,1
.L254:
	.byte	5
	.byte	'pDst8',0,1,239,2,44
	.word	156
.L256:
	.byte	5
	.byte	'nPattern',0,1,240,2,9
	.word	139
.L258:
	.byte	5
	.byte	'nCnt',0,1,241,2,15
	.word	139
.L260:
	.byte	6,0
.L248:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L344:
	.byte	3
	.word	322
.L271:
	.byte	4
	.byte	'VStdLib_Loc_MemSet_32_Aligned',0,3,1,246,3,47,1,1
.L273:
	.byte	5
	.byte	'pDst32',0,1,247,3,45
	.word	343
.L275:
	.byte	5
	.byte	'nPattern',0,1,248,3,9
	.word	139
.L277:
	.byte	5
	.byte	'nCnt',0,1,249,3,16
	.word	322
.L279:
	.byte	7,6,0,0,8
	.word	139
.L290:
	.byte	3
	.word	438
.L303:
	.byte	4
	.byte	'VStdLib_Loc_MemCpy_8_3',0,3,1,203,4,47,1,1
.L305:
	.byte	5
	.byte	'pDst8',0,1,204,4,44
	.word	156
.L307:
	.byte	5
	.byte	'pSrc8',0,1,205,4,46
	.word	443
.L309:
	.byte	5
	.byte	'nCnt',0,1,206,4,15
	.word	139
.L311:
	.byte	6,0
.L292:
	.byte	4
	.byte	'VStdLib_Loc_MemCpy_8_31',0,3,1,254,4,47,1,1
.L294:
	.byte	5
	.byte	'pDst8',0,1,255,4,44
	.word	156
.L296:
	.byte	5
	.byte	'pSrc8',0,1,128,5,46
	.word	443
.L298:
	.byte	5
	.byte	'nCnt',0,1,129,5,15
	.word	139
.L300:
	.byte	6,0,8
	.word	322
.L401:
	.byte	3
	.word	603
.L312:
	.byte	4
	.byte	'VStdLib_Loc_MemCpy_32_Aligned',0,3,1,134,6,47,1,1
.L315:
	.byte	5
	.byte	'pDst32',0,1,135,6,45
	.word	343
.L317:
	.byte	5
	.byte	'pSrc32',0,1,136,6,47
	.word	608
.L319:
	.byte	5
	.byte	'nCnt',0,1,137,6,16
	.word	322
.L321:
	.byte	7,6,0,0,3
	.word	322
.L347:
	.byte	4
	.byte	'VStdLib_Loc_MemCpy_8_PartialWord',0,3,1,228,6,47,1,1
.L350:
	.byte	5
	.byte	'pDst8',0,1,229,6,44
	.word	156
.L352:
	.byte	5
	.byte	'nCnt',0,1,230,6,15
	.word	139
.L354:
	.byte	5
	.byte	'pPrev',0,1,231,6,45
	.word	343
.L356:
	.byte	5
	.byte	'pDPos',0,1,232,6,51
	.word	701
.L358:
	.byte	6,0
.L329:
	.byte	4
	.byte	'VStdLib_Loc_MemCpy_32_Unaligned',0,3,1,199,7,47,1,1
.L330:
	.byte	5
	.byte	'pDst8',0,1,200,7,44
	.word	156
.L332:
	.byte	5
	.byte	'pSrc32',0,1,201,7,47
	.word	608
.L334:
	.byte	5
	.byte	'nCnt',0,1,202,7,16
	.word	322
.L336:
	.byte	5
	.byte	'nDstOffset',0,1,203,7,15
	.word	139
.L338:
	.byte	7
.L342:
	.byte	7
.L360:
	.byte	6
.L367:
	.byte	6
.L374:
	.byte	6
.L381:
	.byte	7
.L384:
	.byte	6,0,0,6,6,6,0,0,2
	.byte	'int',0,4,5,8
	.word	927
	.byte	9
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,10
	.word	934
	.byte	0,2
	.byte	'unsigned int',0,4,7,11
	.word	976
	.byte	3
	.word	976
	.byte	12
	.byte	'__cmpswapw',0
	.word	992
	.byte	1,1,1,1,13
	.byte	'p',0
	.word	997
	.byte	13
	.byte	'value',0
	.word	976
	.byte	13
	.byte	'compare',0
	.word	976
	.byte	0,14
	.byte	'void',0
.L244:
	.byte	3
	.word	1054
	.byte	8
	.word	1054
.L286:
	.byte	3
	.word	1065
	.byte	2
	.byte	'unsigned short int',0,2,7
.L393:
	.byte	3
	.word	1075
	.byte	8
	.word	1075
.L395:
	.byte	3
	.word	1102
	.byte	15
	.word	161
	.byte	16
	.word	192
	.byte	16
	.word	207
	.byte	16
	.word	225
	.byte	6,0,15
	.word	241
	.byte	16
	.word	273
	.byte	16
	.word	288
	.byte	16
	.word	306
	.byte	6,0,15
	.word	348
	.byte	16
	.word	386
	.byte	16
	.word	402
	.byte	16
	.word	420
	.byte	7,17
	.word	161
	.byte	16
	.word	192
	.byte	16
	.word	207
	.byte	16
	.word	225
	.byte	18
	.word	239
	.byte	0,6,0,0,15
	.word	448
	.byte	16
	.word	479
	.byte	16
	.word	494
	.byte	16
	.word	509
	.byte	6,0,15
	.word	525
	.byte	16
	.word	557
	.byte	16
	.word	572
	.byte	16
	.word	587
	.byte	6,0,15
	.word	613
	.byte	16
	.word	651
	.byte	16
	.word	667
	.byte	16
	.word	683
	.byte	7,17
	.word	448
	.byte	16
	.word	479
	.byte	16
	.word	494
	.byte	16
	.word	509
	.byte	18
	.word	523
	.byte	0,6,0,0,15
	.word	706
	.byte	16
	.word	747
	.byte	16
	.word	762
	.byte	16
	.word	776
	.byte	16
	.word	791
	.byte	6,0,15
	.word	808
	.byte	16
	.word	848
	.byte	16
	.word	863
	.byte	16
	.word	879
	.byte	16
	.word	893
	.byte	7,7,6,6,6,7,6,0,17
	.word	706
	.byte	16
	.word	747
	.byte	16
	.word	762
	.byte	16
	.word	776
	.byte	16
	.word	791
	.byte	18
	.word	806
	.byte	0,17
	.word	706
	.byte	16
	.word	747
	.byte	16
	.word	762
	.byte	16
	.word	776
	.byte	16
	.word	791
	.byte	18
	.word	806
	.byte	0,0,6,6,17
	.word	525
	.byte	16
	.word	557
	.byte	16
	.word	572
	.byte	16
	.word	587
	.byte	18
	.word	601
	.byte	0,6,0,0,19,1,3
	.word	1454
	.byte	20
	.byte	'__codeptr',0,1,1,1
	.word	1456
	.byte	20
	.byte	'uint8',0,2,104,31
	.word	139
	.byte	20
	.byte	'uint16',0,2,106,31
	.word	1075
	.byte	20
	.byte	'uint32',0,2,108,31
	.word	322
	.byte	20
	.byte	'uint8_least',0,2,111,31
	.word	139
	.byte	20
	.byte	'uint32_least',0,2,115,31
	.word	322
	.byte	20
	.byte	'VStdLib_CntType',0,3,100,22
	.word	322
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,11,1,0,0,8,38
	.byte	0,73,19,0,0,9,46,1,3,8,54,15,39,12,63,12,60,12,0,0,10,5,0,73,19,0,0,11,53,0,73,19,0,0,12,46,1,3,8,73,19
	.byte	54,15,39,12,63,12,60,12,0,0,13,5,0,3,8,73,19,0,0,14,59,0,3,8,0,0,15,46,1,49,19,0,0,16,5,0,49,19,0,0,17
	.byte	29,1,49,19,0,0,18,11,0,49,19,0,0,19,21,0,54,15,0,0,20,22,0,3,8,58,15,59,15,57,15,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L207:
	.word	.L499-.L498
.L498:
	.half	3
	.word	.L501-.L500
.L500:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.h',0,0,0,0,0
.L501:
.L499:
	.sdecl	'.debug_info',debug,cluster('VStdLib_MemSet')
	.sect	'.debug_info'
.L208:
	.word	584
	.half	3
	.word	.L209
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L211,.L210
	.byte	2
	.word	.L204
	.byte	3
	.byte	'VStdLib_MemSet',0,1,131,9,26,1,1,1
	.word	.L191,.L243,.L190
	.byte	4
	.byte	'pDst',0,1,131,9,81
	.word	.L244,.L245
	.byte	4
	.byte	'nPattern',0,1,132,9,47
	.word	.L246,.L247
	.byte	4
	.byte	'nCnt',0,1,133,9,57
	.word	.L248,.L249
	.byte	5
	.word	.L191,.L243
	.byte	6
	.byte	'pDst8',0,1,136,9,44
	.word	.L250,.L251
	.byte	7
	.word	.L252,.L253,.L4
	.byte	8
	.word	.L254,.L255
	.byte	8
	.word	.L256,.L257
	.byte	8
	.word	.L258,.L259
	.byte	9
	.word	.L260,.L253,.L4
	.byte	0,5
	.word	.L2,.L45
	.byte	6
	.byte	'nDstOffset',0,1,166,9,19
	.word	.L246,.L261
	.byte	7
	.word	.L262,.L263,.L41
	.byte	8
	.word	.L264,.L265
	.byte	8
	.word	.L266,.L267
	.byte	8
	.word	.L268,.L269
	.byte	9
	.word	.L270,.L263,.L41
	.byte	0,7
	.word	.L271,.L272,.L45
	.byte	8
	.word	.L273,.L274
	.byte	8
	.word	.L275,.L276
	.byte	8
	.word	.L277,.L278
	.byte	10
	.word	.L279,.L272,.L45
	.byte	6
	.byte	'dPos',0,1,252,3,16
	.word	.L248,.L280
	.byte	6
	.byte	'remaining',0,1,253,3,16
	.word	.L248,.L281
	.byte	6
	.byte	'nPattern32',0,1,254,3,10
	.word	.L248,.L282
	.byte	7
	.word	.L262,.L283,.L45
	.byte	8
	.word	.L264,.L265
	.byte	8
	.word	.L266,.L267
	.byte	8
	.word	.L268,.L269
	.byte	9
	.word	.L270,.L283,.L45
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('VStdLib_MemSet')
	.sect	'.debug_abbrev'
.L209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('VStdLib_MemSet')
	.sect	'.debug_line'
.L210:
	.word	.L503-.L502
.L502:
	.half	3
	.word	.L505-.L504
.L504:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L505:
	.byte	5,16,7,0,5,2
	.word	.L191
	.byte	3,153,9,1,5,5,9
	.half	.L506-.L191
	.byte	1,5,3,7,9
	.half	.L253-.L506
	.byte	3,222,121,1,5,17,9
	.half	.L35-.L253
	.byte	3,3,1,9
	.half	.L34-.L35
	.byte	3,3,1,9
	.half	.L33-.L34
	.byte	3,3,1,9
	.half	.L32-.L33
	.byte	3,3,1,9
	.half	.L31-.L32
	.byte	3,3,1,9
	.half	.L30-.L31
	.byte	3,3,1,9
	.half	.L29-.L30
	.byte	3,3,1,9
	.half	.L28-.L29
	.byte	3,3,1,9
	.half	.L27-.L28
	.byte	3,3,1,9
	.half	.L26-.L27
	.byte	3,3,1,9
	.half	.L25-.L26
	.byte	3,3,1,9
	.half	.L24-.L25
	.byte	3,3,1,9
	.half	.L23-.L24
	.byte	3,3,1,9
	.half	.L22-.L23
	.byte	3,3,1,9
	.half	.L21-.L22
	.byte	3,3,1,9
	.half	.L20-.L21
	.byte	3,3,1,9
	.half	.L19-.L20
	.byte	3,3,1,9
	.half	.L18-.L19
	.byte	3,3,1,9
	.half	.L17-.L18
	.byte	3,3,1,9
	.half	.L16-.L17
	.byte	3,3,1,9
	.half	.L15-.L16
	.byte	3,3,1,5,16,9
	.half	.L14-.L15
	.byte	3,3,1,9
	.half	.L13-.L14
	.byte	3,3,1,9
	.half	.L12-.L13
	.byte	3,3,1,9
	.half	.L11-.L12
	.byte	3,3,1,9
	.half	.L10-.L11
	.byte	3,3,1,9
	.half	.L9-.L10
	.byte	3,3,1,9
	.half	.L8-.L9
	.byte	3,3,1,9
	.half	.L7-.L8
	.byte	3,3,1,9
	.half	.L6-.L7
	.byte	3,3,1,9
	.half	.L5-.L6
	.byte	3,3,1,5,1,9
	.half	.L4-.L5
	.byte	3,253,5,1,5,32,7,9
	.half	.L2-.L4
	.byte	3,84,1,5,7,9
	.half	.L507-.L2
	.byte	3,3,1,5,10,7,9
	.half	.L263-.L507
	.byte	3,164,121,1,7,9
	.half	.L508-.L263
	.byte	3,125,1,7,9
	.half	.L509-.L508
	.byte	3,125,1,5,16,7,9
	.half	.L510-.L509
	.byte	3,1,1,9
	.half	.L39-.L510
	.byte	3,3,1,9
	.half	.L38-.L39
	.byte	3,3,1,5,23,9
	.half	.L41-.L38
	.byte	3,227,6,1,5,14,9
	.half	.L272-.L41
	.byte	3,1,1,5,21,9
	.half	.L37-.L272
	.byte	3,202,122,1,5,32,9
	.half	.L415-.L37
	.byte	3,3,1,5,60,9
	.half	.L511-.L415
	.byte	1,5,40,9
	.half	.L512-.L511
	.byte	1,5,88,9
	.half	.L513-.L512
	.byte	1,5,68,9
	.half	.L514-.L513
	.byte	1,5,95,9
	.half	.L416-.L514
	.byte	1,5,60,3,4,1,5,9,9
	.half	.L515-.L416
	.byte	3,182,5,1,5,23,9
	.half	.L42-.L515
	.byte	3,204,122,1,9
	.half	.L516-.L42
	.byte	3,1,1,5,10,9
	.half	.L517-.L516
	.byte	3,3,1,5,23,3,126,1,5,54,9
	.half	.L518-.L517
	.byte	3,124,1,5,23,3,5,1,5,10,9
	.half	.L418-.L518
	.byte	3,1,1,5,9,3,176,5,1,5,3,7,9
	.half	.L419-.L418
	.byte	3,215,122,1,5,13,9
	.half	.L60-.L419
	.byte	3,6,1,5,11,9
	.half	.L519-.L60
	.byte	3,1,1,5,20,9
	.half	.L520-.L519
	.byte	3,127,1,5,13,9
	.half	.L56-.L520
	.byte	3,7,1,5,11,9
	.half	.L521-.L56
	.byte	3,1,1,5,20,9
	.half	.L522-.L521
	.byte	3,127,1,5,13,9
	.half	.L52-.L522
	.byte	3,7,1,5,11,9
	.half	.L523-.L52
	.byte	3,1,1,5,20,9
	.half	.L524-.L523
	.byte	3,127,1,5,59,9
	.half	.L48-.L524
	.byte	3,7,1,5,34,9
	.half	.L283-.L48
	.byte	3,2,1,5,10,9
	.half	.L420-.L283
	.byte	3,160,126,1,7,9
	.half	.L525-.L420
	.byte	3,125,1,7,9
	.half	.L526-.L525
	.byte	3,125,1,5,16,7,9
	.half	.L527-.L526
	.byte	3,1,1,9
	.half	.L62-.L527
	.byte	3,3,1,9
	.half	.L61-.L62
	.byte	3,3,1,5,1,9
	.half	.L45-.L61
	.byte	3,132,7,1,7,9
	.half	.L212-.L45
	.byte	0,1,1
.L503:
	.sdecl	'.debug_ranges',debug,cluster('VStdLib_MemSet')
	.sect	'.debug_ranges'
.L211:
	.word	-1,.L191,0,.L212-.L191,0,0
	.sdecl	'.debug_info',debug,cluster('VStdLib_MemCpy')
	.sect	'.debug_info'
.L213:
	.word	1416
	.half	3
	.word	.L214
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L216,.L215
	.byte	2
	.word	.L204
	.byte	3
	.byte	'VStdLib_MemCpy',0,1,234,9,26,1,1,1
	.word	.L193,.L284,.L192
	.byte	4
	.byte	'pDst',0,1,234,9,81
	.word	.L244,.L285
	.byte	4
	.byte	'pSrc',0,1,235,9,83
	.word	.L286,.L287
	.byte	4
	.byte	'nCnt',0,1,236,9,57
	.word	.L248,.L288
	.byte	5
	.word	.L193,.L284
	.byte	6
	.byte	'pDst8',0,1,239,9,44
	.word	.L250,.L289
	.byte	6
	.byte	'pSrc8',0,1,241,9,46
	.word	.L290,.L291
	.byte	7
	.word	.L292,.L293,.L67
	.byte	8
	.word	.L294,.L295
	.byte	8
	.word	.L296,.L297
	.byte	8
	.word	.L298,.L299
	.byte	9
	.word	.L300,.L293,.L67
	.byte	0,5
	.word	.L65,.L109
	.byte	6
	.byte	'nSrcOffset',0,1,143,10,19
	.word	.L246,.L301
	.byte	6
	.byte	'nDstOffset',0,1,144,10,19
	.word	.L246,.L302
	.byte	7
	.word	.L303,.L304,.L104
	.byte	8
	.word	.L305,.L306
	.byte	8
	.word	.L307,.L308
	.byte	8
	.word	.L309,.L310
	.byte	9
	.word	.L311,.L304,.L104
	.byte	0,7
	.word	.L312,.L313,.L314
	.byte	8
	.word	.L315,.L316
	.byte	8
	.word	.L317,.L318
	.byte	8
	.word	.L319,.L320
	.byte	10
	.word	.L321,.L322
	.byte	6
	.byte	'dPos',0,1,140,6,16
	.word	.L248,.L323
	.byte	6
	.byte	'remaining',0,1,141,6,16
	.word	.L248,.L324
	.byte	6
	.byte	'x1',0,1,142,6,14
	.word	.L248,.L325
	.byte	6
	.byte	'x2',0,1,142,6,18
	.word	.L248,.L326
	.byte	6
	.byte	'x3',0,1,142,6,22
	.word	.L248,.L327
	.byte	7
	.word	.L303,.L328,.L314
	.byte	8
	.word	.L305,.L306
	.byte	8
	.word	.L307,.L308
	.byte	8
	.word	.L309,.L310
	.byte	9
	.word	.L311,.L328,.L314
	.byte	0,0,0,7
	.word	.L329,.L105,.L109
	.byte	8
	.word	.L330,.L331
	.byte	8
	.word	.L332,.L333
	.byte	8
	.word	.L334,.L335
	.byte	8
	.word	.L336,.L337
	.byte	11
	.word	.L338,.L105,.L109
	.byte	6
	.byte	'dPos',0,1,206,7,16
	.word	.L248,.L339
	.byte	6
	.byte	'sPos',0,1,207,7,16
	.word	.L248,.L340
	.byte	6
	.byte	'remaining',0,1,208,7,16
	.word	.L248,.L341
	.byte	11
	.word	.L342,.L343,.L130
	.byte	6
	.byte	'pDst32',0,1,214,7,47
	.word	.L344,.L345
	.byte	6
	.byte	'prev',0,1,215,7,12
	.word	.L248,.L346
	.byte	7
	.word	.L347,.L348,.L349
	.byte	8
	.word	.L350,.L351
	.byte	8
	.word	.L352,.L353
	.byte	8
	.word	.L354,.L355
	.byte	8
	.word	.L356,.L357
	.byte	12
	.word	.L358,.L359
	.byte	0,11
	.word	.L360,.L135,.L361
	.byte	6
	.byte	'x0',0,1,236,7,16
	.word	.L248,.L362
	.byte	6
	.byte	'x1',0,1,236,7,20
	.word	.L248,.L363
	.byte	6
	.byte	'x2',0,1,236,7,24
	.word	.L248,.L364
	.byte	6
	.byte	'x3',0,1,236,7,28
	.word	.L248,.L365
	.byte	6
	.byte	'x4',0,1,236,7,32
	.word	.L248,.L366
	.byte	0,11
	.word	.L367,.L139,.L368
	.byte	6
	.byte	'x0',0,1,138,8,16
	.word	.L248,.L369
	.byte	6
	.byte	'x1',0,1,138,8,20
	.word	.L248,.L370
	.byte	6
	.byte	'x2',0,1,138,8,24
	.word	.L248,.L371
	.byte	6
	.byte	'x3',0,1,138,8,28
	.word	.L248,.L372
	.byte	6
	.byte	'x4',0,1,138,8,32
	.word	.L248,.L373
	.byte	0,11
	.word	.L374,.L142,.L375
	.byte	6
	.byte	'x0',0,1,169,8,16
	.word	.L248,.L376
	.byte	6
	.byte	'x1',0,1,169,8,20
	.word	.L248,.L377
	.byte	6
	.byte	'x2',0,1,169,8,24
	.word	.L248,.L378
	.byte	6
	.byte	'x3',0,1,169,8,28
	.word	.L248,.L379
	.byte	6
	.byte	'x4',0,1,169,8,32
	.word	.L248,.L380
	.byte	0,11
	.word	.L381,.L137,.L146
	.byte	6
	.byte	'prevShift',0,1,198,8,19
	.word	.L246,.L382
	.byte	6
	.byte	'xShift',0,1,199,8,19
	.word	.L246,.L383
	.byte	11
	.word	.L384,.L145,.L385
	.byte	6
	.byte	'x0',0,1,203,8,16
	.word	.L248,.L386
	.byte	6
	.byte	'x1',0,1,203,8,20
	.word	.L248,.L387
	.byte	0,0,7
	.word	.L347,.L388,.L130
	.byte	8
	.word	.L350,.L351
	.byte	8
	.word	.L352,.L353
	.byte	8
	.word	.L354,.L355
	.byte	8
	.word	.L356,.L357
	.byte	9
	.word	.L358,.L388,.L130
	.byte	0,0,7
	.word	.L292,.L130,.L389
	.byte	8
	.word	.L294,.L295
	.byte	8
	.word	.L296,.L297
	.byte	8
	.word	.L298,.L299
	.byte	12
	.word	.L300,.L390
	.byte	0,7
	.word	.L292,.L391,.L109
	.byte	8
	.word	.L294,.L295
	.byte	8
	.word	.L296,.L297
	.byte	8
	.word	.L298,.L299
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('VStdLib_MemCpy')
	.sect	'.debug_abbrev'
.L214:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,12,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('VStdLib_MemCpy')
	.sect	'.debug_line'
.L215:
	.word	.L529-.L528
.L528:
	.half	3
	.word	.L531-.L530
.L530:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L531:
	.byte	5,16,7,0,5,2
	.word	.L193
	.byte	3,130,10,1,5,26,3,103,1,5,5,9
	.half	.L423-.L193
	.byte	3,25,1,5,3,7,9
	.half	.L293-.L423
	.byte	3,133,123,1,5,24,9
	.half	.L98-.L293
	.byte	3,3,1,5,17,9
	.half	.L532-.L98
	.byte	1,5,24,9
	.half	.L97-.L532
	.byte	3,3,1,5,17,9
	.half	.L533-.L97
	.byte	1,5,24,9
	.half	.L96-.L533
	.byte	3,3,1,5,17,9
	.half	.L534-.L96
	.byte	1,5,24,9
	.half	.L95-.L534
	.byte	3,3,1,5,17,9
	.half	.L535-.L95
	.byte	1,5,24,9
	.half	.L94-.L535
	.byte	3,3,1,5,17,9
	.half	.L536-.L94
	.byte	1,5,24,9
	.half	.L93-.L536
	.byte	3,3,1,5,17,9
	.half	.L537-.L93
	.byte	1,5,24,9
	.half	.L92-.L537
	.byte	3,3,1,5,17,9
	.half	.L538-.L92
	.byte	1,5,24,9
	.half	.L91-.L538
	.byte	3,3,1,5,17,9
	.half	.L539-.L91
	.byte	1,5,24,9
	.half	.L90-.L539
	.byte	3,3,1,5,17,9
	.half	.L540-.L90
	.byte	1,5,24,9
	.half	.L89-.L540
	.byte	3,3,1,5,17,9
	.half	.L541-.L89
	.byte	1,5,24,9
	.half	.L88-.L541
	.byte	3,3,1,5,17,9
	.half	.L542-.L88
	.byte	1,5,24,9
	.half	.L87-.L542
	.byte	3,3,1,5,17,9
	.half	.L543-.L87
	.byte	1,5,24,9
	.half	.L86-.L543
	.byte	3,3,1,5,17,9
	.half	.L544-.L86
	.byte	1,5,24,9
	.half	.L85-.L544
	.byte	3,3,1,5,17,9
	.half	.L545-.L85
	.byte	1,5,24,9
	.half	.L84-.L545
	.byte	3,3,1,5,17,9
	.half	.L546-.L84
	.byte	1,5,24,9
	.half	.L83-.L546
	.byte	3,3,1,5,17,9
	.half	.L547-.L83
	.byte	1,5,24,9
	.half	.L82-.L547
	.byte	3,3,1,5,17,9
	.half	.L548-.L82
	.byte	1,5,24,9
	.half	.L81-.L548
	.byte	3,3,1,5,17,9
	.half	.L549-.L81
	.byte	1,5,24,9
	.half	.L80-.L549
	.byte	3,3,1,5,17,9
	.half	.L550-.L80
	.byte	1,5,24,9
	.half	.L79-.L550
	.byte	3,3,1,5,17,9
	.half	.L551-.L79
	.byte	1,5,24,9
	.half	.L78-.L551
	.byte	3,3,1,5,17,9
	.half	.L552-.L78
	.byte	1,5,23,9
	.half	.L77-.L552
	.byte	3,3,1,5,16,9
	.half	.L553-.L77
	.byte	1,5,23,9
	.half	.L76-.L553
	.byte	3,3,1,5,16,9
	.half	.L554-.L76
	.byte	1,5,23,9
	.half	.L75-.L554
	.byte	3,3,1,5,16,9
	.half	.L555-.L75
	.byte	1,5,23,9
	.half	.L74-.L555
	.byte	3,3,1,5,16,9
	.half	.L556-.L74
	.byte	1,5,23,9
	.half	.L73-.L556
	.byte	3,3,1,5,16,9
	.half	.L557-.L73
	.byte	1,5,23,9
	.half	.L72-.L557
	.byte	3,3,1,5,16,9
	.half	.L558-.L72
	.byte	1,5,23,9
	.half	.L71-.L558
	.byte	3,3,1,5,16,9
	.half	.L559-.L71
	.byte	1,5,23,9
	.half	.L70-.L559
	.byte	3,3,1,5,16,9
	.half	.L560-.L70
	.byte	1,5,23,9
	.half	.L69-.L560
	.byte	3,3,1,5,16,9
	.half	.L561-.L69
	.byte	1,5,23,9
	.half	.L68-.L561
	.byte	3,3,1,5,16,9
	.half	.L562-.L68
	.byte	1,5,1,9
	.half	.L67-.L562
	.byte	3,233,4,1,5,32,7,9
	.half	.L65-.L67
	.byte	3,65,1,5,7,9
	.half	.L563-.L65
	.byte	3,4,1,5,10,7,9
	.half	.L304-.L563
	.byte	3,202,122,1,7,9
	.half	.L564-.L304
	.byte	3,125,1,7,9
	.half	.L565-.L564
	.byte	3,125,1,5,23,7,9
	.half	.L566-.L565
	.byte	3,1,1,5,16,9
	.half	.L427-.L566
	.byte	1,5,23,9
	.half	.L102-.L427
	.byte	3,3,1,5,16,9
	.half	.L567-.L102
	.byte	1,5,23,9
	.half	.L101-.L567
	.byte	3,3,1,5,16,9
	.half	.L568-.L101
	.byte	1,5,23,9
	.half	.L104-.L568
	.byte	3,189,5,1,9
	.half	.L569-.L104
	.byte	3,1,1,5,14,9
	.half	.L425-.L569
	.byte	3,1,1,5,20,9
	.half	.L100-.L425
	.byte	3,4,1,5,7,9
	.half	.L432-.L100
	.byte	3,3,1,5,18,7,9
	.half	.L313-.L432
	.byte	3,238,123,1,5,21,9
	.half	.L431-.L313
	.byte	3,122,1,5,11,9
	.half	.L433-.L431
	.byte	3,158,4,1,5,16,9
	.half	.L106-.L433
	.byte	3,235,123,1,5,11,9
	.half	.L570-.L106
	.byte	3,3,1,5,16,9
	.half	.L571-.L570
	.byte	3,124,1,9
	.half	.L572-.L571
	.byte	3,1,1,9
	.half	.L434-.L572
	.byte	3,1,1,9
	.half	.L436-.L434
	.byte	3,1,1,5,23,9
	.half	.L437-.L436
	.byte	3,1,1,9
	.half	.L573-.L437
	.byte	3,1,1,9
	.half	.L574-.L573
	.byte	3,1,1,5,10,9
	.half	.L575-.L574
	.byte	3,2,1,5,23,3,127,1,5,54,9
	.half	.L438-.L575
	.byte	3,119,1,5,11,3,152,4,1,5,3,7,9
	.half	.L576-.L438
	.byte	3,249,123,1,5,13,9
	.half	.L124-.L576
	.byte	3,6,1,9
	.half	.L120-.L124
	.byte	3,7,1,9
	.half	.L116-.L120
	.byte	3,7,1,5,59,9
	.half	.L112-.L116
	.byte	3,7,1,5,61,9
	.half	.L577-.L112
	.byte	3,1,1,5,34,9
	.half	.L328-.L577
	.byte	3,1,1,5,10,9
	.half	.L439-.L328
	.byte	3,157,126,1,7,9
	.half	.L578-.L439
	.byte	3,125,1,7,9
	.half	.L579-.L578
	.byte	3,125,1,5,23,7,9
	.half	.L580-.L579
	.byte	3,1,1,5,16,9
	.half	.L581-.L580
	.byte	1,5,23,9
	.half	.L126-.L581
	.byte	3,3,1,5,16,9
	.half	.L582-.L126
	.byte	1,9
	.half	.L314-.L582
	.byte	3,207,5,1,5,21,9
	.half	.L105-.L314
	.byte	3,164,125,1,9
	.half	.L441-.L105
	.byte	3,1,1,5,20,9
	.half	.L442-.L441
	.byte	3,5,1,5,3,9
	.half	.L440-.L442
	.byte	1,5,15,7,9
	.half	.L343-.L440
	.byte	3,7,1,5,18,3,127,1,5,10,9
	.half	.L348-.L343
	.byte	3,157,127,1,7,9
	.half	.L583-.L348
	.byte	3,123,1,5,15,7,9
	.half	.L584-.L583
	.byte	3,2,1,5,21,3,127,1,5,16,9
	.half	.L585-.L584
	.byte	3,2,1,5,12,9
	.half	.L131-.L585
	.byte	3,3,1,9
	.half	.L133-.L131
	.byte	3,5,1,5,64,9
	.half	.L349-.L133
	.byte	3,230,0,1,5,10,9
	.half	.L496-.L349
	.byte	3,1,1,5,9,9
	.half	.L443-.L496
	.byte	3,1,1,5,5,9
	.half	.L586-.L443
	.byte	3,3,1,5,14,7,9
	.half	.L587-.L586
	.byte	3,2,1,5,20,9
	.half	.L135-.L587
	.byte	3,3,1,5,14,9
	.half	.L588-.L135
	.byte	3,22,1,5,20,9
	.half	.L589-.L588
	.byte	3,106,1,9
	.half	.L447-.L589
	.byte	3,1,1,5,25,9
	.half	.L449-.L447
	.byte	3,4,1,5,20,3,125,1,5,19,9
	.half	.L451-.L449
	.byte	3,3,1,5,20,3,126,1,5,15,9
	.half	.L452-.L451
	.byte	3,14,1,5,18,9
	.half	.L590-.L452
	.byte	3,117,1,5,27,9
	.half	.L448-.L590
	.byte	3,11,1,5,32,9
	.half	.L591-.L448
	.byte	3,117,1,5,26,9
	.half	.L445-.L591
	.byte	1,5,27,3,12,1,5,18,9
	.half	.L592-.L445
	.byte	3,117,1,5,32,9
	.half	.L593-.L592
	.byte	1,5,26,9
	.half	.L453-.L593
	.byte	1,5,27,3,12,1,5,18,9
	.half	.L450-.L453
	.byte	3,117,1,5,32,9
	.half	.L594-.L450
	.byte	1,5,26,9
	.half	.L595-.L594
	.byte	1,5,27,3,12,1,5,19,9
	.half	.L596-.L595
	.byte	3,117,1,5,14,9
	.half	.L454-.L596
	.byte	3,12,1,5,42,9
	.half	.L361-.L454
	.byte	3,104,1,5,14,1,5,30,7,9
	.half	.L456-.L361
	.byte	1,5,10,9
	.half	.L134-.L456
	.byte	3,28,1,5,14,7,9
	.half	.L597-.L134
	.byte	3,2,1,5,20,9
	.half	.L139-.L597
	.byte	3,3,1,5,14,9
	.half	.L598-.L139
	.byte	3,22,1,5,20,9
	.half	.L599-.L598
	.byte	3,106,1,9
	.half	.L459-.L599
	.byte	3,1,1,5,25,9
	.half	.L461-.L459
	.byte	3,4,1,5,20,3,125,1,5,19,9
	.half	.L463-.L461
	.byte	3,3,1,5,20,3,126,1,5,15,9
	.half	.L465-.L463
	.byte	3,14,1,5,18,9
	.half	.L600-.L465
	.byte	3,117,1,5,27,9
	.half	.L460-.L600
	.byte	3,11,1,5,32,9
	.half	.L601-.L460
	.byte	3,117,1,5,26,9
	.half	.L455-.L601
	.byte	1,5,27,3,12,1,5,18,9
	.half	.L602-.L455
	.byte	3,117,1,5,32,9
	.half	.L603-.L602
	.byte	1,5,18,9
	.half	.L604-.L603
	.byte	3,1,1,5,26,9
	.half	.L462-.L604
	.byte	3,127,1,5,27,3,12,1,5,32,9
	.half	.L605-.L462
	.byte	3,117,1,5,26,9
	.half	.L466-.L605
	.byte	1,5,27,3,12,1,5,19,9
	.half	.L464-.L466
	.byte	3,117,1,5,14,9
	.half	.L467-.L464
	.byte	3,12,1,5,42,9
	.half	.L368-.L467
	.byte	3,104,1,5,14,1,5,30,7,9
	.half	.L469-.L368
	.byte	1,5,14,9
	.half	.L138-.L469
	.byte	3,31,1,5,20,9
	.half	.L142-.L138
	.byte	3,3,1,5,14,9
	.half	.L606-.L142
	.byte	3,22,1,5,20,9
	.half	.L607-.L606
	.byte	3,106,1,9
	.half	.L472-.L607
	.byte	3,1,1,5,25,9
	.half	.L474-.L472
	.byte	3,4,1,5,20,3,125,1,5,19,9
	.half	.L476-.L474
	.byte	3,3,1,5,20,3,126,1,5,15,9
	.half	.L478-.L476
	.byte	3,14,1,5,18,9
	.half	.L608-.L478
	.byte	3,117,1,5,27,9
	.half	.L473-.L608
	.byte	3,11,1,5,31,9
	.half	.L609-.L473
	.byte	3,117,1,5,25,9
	.half	.L468-.L609
	.byte	1,5,27,3,12,1,5,18,9
	.half	.L610-.L468
	.byte	3,117,1,5,31,9
	.half	.L611-.L610
	.byte	1,5,25,9
	.half	.L479-.L611
	.byte	1,5,27,3,12,1,5,18,9
	.half	.L475-.L479
	.byte	3,117,1,5,31,9
	.half	.L477-.L475
	.byte	1,5,25,9
	.half	.L480-.L477
	.byte	1,5,27,3,12,1,5,19,9
	.half	.L612-.L480
	.byte	3,117,1,5,14,9
	.half	.L481-.L612
	.byte	3,12,1,5,42,9
	.half	.L375-.L481
	.byte	3,104,1,5,14,1,5,43,7,9
	.half	.L137-.L375
	.byte	3,31,1,5,50,9
	.half	.L483-.L137
	.byte	1,5,32,9
	.half	.L613-.L483
	.byte	3,1,1,5,20,3,5,1,5,15,9
	.half	.L484-.L613
	.byte	3,8,1,5,14,9
	.half	.L486-.L484
	.byte	3,117,1,5,20,9
	.half	.L145-.L486
	.byte	3,3,1,5,13,9
	.half	.L489-.L145
	.byte	3,9,1,5,25,9
	.half	.L614-.L489
	.byte	3,121,1,5,19,9
	.half	.L490-.L614
	.byte	1,5,22,3,6,1,5,19,9
	.half	.L491-.L490
	.byte	3,123,1,5,13,9
	.half	.L492-.L491
	.byte	3,7,1,5,41,9
	.half	.L385-.L492
	.byte	3,115,1,5,14,1,5,63,7,9
	.half	.L146-.L385
	.byte	3,18,1,5,10,9
	.half	.L495-.L146
	.byte	3,1,1,5,11,9
	.half	.L388-.L495
	.byte	3,3,1,5,10,9
	.half	.L485-.L388
	.byte	3,152,126,1,7,9
	.half	.L615-.L485
	.byte	3,123,1,5,15,7,9
	.half	.L616-.L615
	.byte	3,2,1,5,21,3,127,1,5,16,9
	.half	.L617-.L616
	.byte	3,2,1,5,12,9
	.half	.L147-.L617
	.byte	3,3,1,9
	.half	.L149-.L147
	.byte	3,5,1,5,15,9
	.half	.L618-.L149
	.byte	3,1,1,5,21,9
	.half	.L619-.L618
	.byte	3,127,1,5,5,9
	.half	.L130-.L619
	.byte	3,235,1,1,5,3,3,160,124,1,5,11,9
	.half	.L389-.L130
	.byte	3,222,3,1,5,57,9
	.half	.L620-.L389
	.byte	3,1,1,5,3,9
	.half	.L391-.L620
	.byte	3,161,124,1,5,24,9
	.half	.L182-.L391
	.byte	3,3,1,5,17,9
	.half	.L621-.L182
	.byte	1,5,24,9
	.half	.L181-.L621
	.byte	3,3,1,5,17,9
	.half	.L622-.L181
	.byte	1,5,24,9
	.half	.L180-.L622
	.byte	3,3,1,5,17,9
	.half	.L623-.L180
	.byte	1,5,24,9
	.half	.L179-.L623
	.byte	3,3,1,5,17,9
	.half	.L624-.L179
	.byte	1,5,24,9
	.half	.L178-.L624
	.byte	3,3,1,5,17,9
	.half	.L625-.L178
	.byte	1,5,24,9
	.half	.L177-.L625
	.byte	3,3,1,5,17,9
	.half	.L626-.L177
	.byte	1,5,24,9
	.half	.L176-.L626
	.byte	3,3,1,5,17,9
	.half	.L627-.L176
	.byte	1,5,24,9
	.half	.L175-.L627
	.byte	3,3,1,5,17,9
	.half	.L628-.L175
	.byte	1,5,24,9
	.half	.L174-.L628
	.byte	3,3,1,5,17,9
	.half	.L629-.L174
	.byte	1,5,24,9
	.half	.L173-.L629
	.byte	3,3,1,5,17,9
	.half	.L630-.L173
	.byte	1,5,24,9
	.half	.L172-.L630
	.byte	3,3,1,5,17,9
	.half	.L631-.L172
	.byte	1,5,24,9
	.half	.L171-.L631
	.byte	3,3,1,5,17,9
	.half	.L632-.L171
	.byte	1,5,24,9
	.half	.L170-.L632
	.byte	3,3,1,5,17,9
	.half	.L633-.L170
	.byte	1,5,24,9
	.half	.L169-.L633
	.byte	3,3,1,5,17,9
	.half	.L634-.L169
	.byte	1,5,24,9
	.half	.L168-.L634
	.byte	3,3,1,5,17,9
	.half	.L635-.L168
	.byte	1,5,24,9
	.half	.L167-.L635
	.byte	3,3,1,5,17,9
	.half	.L636-.L167
	.byte	1,5,24,9
	.half	.L166-.L636
	.byte	3,3,1,5,17,9
	.half	.L637-.L166
	.byte	1,5,24,9
	.half	.L165-.L637
	.byte	3,3,1,5,17,9
	.half	.L638-.L165
	.byte	1,5,24,9
	.half	.L164-.L638
	.byte	3,3,1,5,17,9
	.half	.L639-.L164
	.byte	1,5,24,9
	.half	.L163-.L639
	.byte	3,3,1,5,17,9
	.half	.L640-.L163
	.byte	1,5,24,9
	.half	.L162-.L640
	.byte	3,3,1,5,17,9
	.half	.L641-.L162
	.byte	1,5,23,9
	.half	.L161-.L641
	.byte	3,3,1,5,16,9
	.half	.L642-.L161
	.byte	1,5,23,9
	.half	.L160-.L642
	.byte	3,3,1,5,16,9
	.half	.L643-.L160
	.byte	1,5,23,9
	.half	.L159-.L643
	.byte	3,3,1,5,16,9
	.half	.L644-.L159
	.byte	1,5,23,9
	.half	.L158-.L644
	.byte	3,3,1,5,16,9
	.half	.L645-.L158
	.byte	1,5,23,9
	.half	.L157-.L645
	.byte	3,3,1,5,16,9
	.half	.L646-.L157
	.byte	1,5,23,9
	.half	.L156-.L646
	.byte	3,3,1,5,16,9
	.half	.L647-.L156
	.byte	1,5,23,9
	.half	.L155-.L647
	.byte	3,3,1,5,16,9
	.half	.L648-.L155
	.byte	1,5,23,9
	.half	.L154-.L648
	.byte	3,3,1,5,16,9
	.half	.L649-.L154
	.byte	1,5,23,9
	.half	.L153-.L649
	.byte	3,3,1,5,16,9
	.half	.L650-.L153
	.byte	1,5,23,9
	.half	.L129-.L650
	.byte	3,3,1,5,16,9
	.half	.L651-.L129
	.byte	1,5,1,9
	.half	.L109-.L651
	.byte	3,233,4,1,7,9
	.half	.L217-.L109
	.byte	0,1,1
.L529:
	.sdecl	'.debug_ranges',debug,cluster('VStdLib_MemCpy')
	.sect	'.debug_ranges'
.L216:
	.word	-1,.L193,0,.L217-.L193,0,0
.L322:
	.word	-1,.L193,.L313-.L193,.L314-.L193,-1,.L197,0,.L237-.L197,0,0
.L359:
	.word	-1,.L193,.L348-.L193,.L349-.L193,-1,.L195,0,.L242-.L195,0,0
.L390:
	.word	-1,.L193,.L130-.L193,.L389-.L193,.L391-.L193,.L109-.L193,0,0
	.sdecl	'.debug_info',debug,cluster('VStdLib_MemCpy16')
	.sect	'.debug_info'
.L218:
	.word	264
	.half	3
	.word	.L219
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L221,.L220
	.byte	2
	.word	.L204
	.byte	3
	.byte	'VStdLib_MemCpy16',0,1,217,10,26,1,1,1
	.word	.L199,.L392,.L198
	.byte	4
	.byte	'pDst',0,1,217,10,85
	.word	.L393,.L394
	.byte	4
	.byte	'pSrc',0,1,218,10,87
	.word	.L395,.L396
	.byte	4
	.byte	'nCnt',0,1,219,10,59
	.word	.L248,.L397
	.byte	5
	.word	.L199,.L392
	.byte	6
	.byte	'idx',0,1,222,10,19
	.word	.L248,.L398
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('VStdLib_MemCpy16')
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('VStdLib_MemCpy16')
	.sect	'.debug_line'
.L220:
	.word	.L653-.L652
.L652:
	.half	3
	.word	.L655-.L654
.L654:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L655:
	.byte	5,26,7,0,5,2
	.word	.L199
	.byte	3,236,10,1,7,9
	.half	.L656-.L199
	.byte	1,5,23,9
	.half	.L184-.L656
	.byte	3,2,1,5,17,9
	.half	.L657-.L184
	.byte	1,5,26,3,126,1,5,1,7,9
	.half	.L185-.L657
	.byte	3,15,1,7,9
	.half	.L222-.L185
	.byte	0,1,1
.L653:
	.sdecl	'.debug_ranges',debug,cluster('VStdLib_MemCpy16')
	.sect	'.debug_ranges'
.L221:
	.word	-1,.L199,0,.L222-.L199,0,0
	.sdecl	'.debug_info',debug,cluster('VStdLib_MemCpy32')
	.sect	'.debug_info'
.L223:
	.word	264
	.half	3
	.word	.L224
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L226,.L225
	.byte	2
	.word	.L204
	.byte	3
	.byte	'VStdLib_MemCpy32',0,1,135,11,26,1,1,1
	.word	.L201,.L399,.L200
	.byte	4
	.byte	'pDst',0,1,135,11,85
	.word	.L344,.L400
	.byte	4
	.byte	'pSrc',0,1,136,11,87
	.word	.L401,.L402
	.byte	4
	.byte	'nCnt',0,1,137,11,59
	.word	.L248,.L403
	.byte	5
	.word	.L201,.L399
	.byte	6
	.byte	'idx',0,1,140,11,19
	.word	.L248,.L404
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('VStdLib_MemCpy32')
	.sect	'.debug_abbrev'
.L224:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('VStdLib_MemCpy32')
	.sect	'.debug_line'
.L225:
	.word	.L659-.L658
.L658:
	.half	3
	.word	.L661-.L660
.L660:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L661:
	.byte	5,26,7,0,5,2
	.word	.L201
	.byte	3,154,11,1,7,9
	.half	.L662-.L201
	.byte	1,5,23,9
	.half	.L187-.L662
	.byte	3,2,1,5,17,9
	.half	.L663-.L187
	.byte	1,5,26,3,126,1,5,1,7,9
	.half	.L188-.L663
	.byte	3,15,1,7,9
	.half	.L227-.L188
	.byte	0,1,1
.L659:
	.sdecl	'.debug_ranges',debug,cluster('VStdLib_MemCpy32')
	.sect	'.debug_ranges'
.L226:
	.word	-1,.L201,0,.L227-.L201,0,0
	.sdecl	'.debug_info',debug,cluster('VStdLib_MemCpy_s')
	.sect	'.debug_info'
.L228:
	.word	268
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L231,.L230
	.byte	2
	.word	.L204
	.byte	3
	.byte	'VStdLib_MemCpy_s',0,1,183,11,26,1,1,1
	.word	.L203,.L405,.L202
	.byte	4
	.byte	'pDst',0,1,183,11,83
	.word	.L244,.L406
	.byte	4
	.byte	'nDstSize',0,1,184,11,59
	.word	.L248,.L407
	.byte	4
	.byte	'pSrc',0,1,185,11,85
	.word	.L286,.L408
	.byte	4
	.byte	'nCnt',0,1,186,11,59
	.word	.L248,.L409
	.byte	5
	.word	.L203,.L405
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('VStdLib_MemCpy_s')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('VStdLib_MemCpy_s')
	.sect	'.debug_line'
.L230:
	.word	.L665-.L664
.L664:
	.half	3
	.word	.L667-.L666
.L666:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L667:
	.byte	5,3,7,0,5,2
	.word	.L203
	.byte	3,192,11,1,5,32,7,9
	.half	.L668-.L203
	.byte	3,7,1,5,1,9
	.half	.L189-.L668
	.byte	3,12,1,7,9
	.half	.L232-.L189
	.byte	0,1,1
.L665:
	.sdecl	'.debug_ranges',debug,cluster('VStdLib_MemCpy_s')
	.sect	'.debug_ranges'
.L231:
	.word	-1,.L203,0,.L232-.L203,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L233:
	.word	174
	.half	3
	.word	.L234
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L236,.L235
	.byte	2
	.word	.L204
	.byte	3
	.byte	'.cocofun_6',0,1,234,9,26,1
	.word	.L197,.L237,.L196
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L234:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L235:
	.word	.L670-.L669
.L669:
	.half	3
	.word	.L672-.L671
.L671:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L672:
	.byte	5,28,7,0,5,2
	.word	.L197
	.byte	3,168,6,1,5,13,9
	.half	.L673-.L197
	.byte	1,5,11,9
	.half	.L674-.L673
	.byte	3,1,1,5,28,3,127,1,5,20,9
	.half	.L675-.L674
	.byte	1,5,11,9
	.half	.L676-.L675
	.byte	3,1,1,7,9
	.half	.L237-.L676
	.byte	0,1,1,5,28,0,5,2
	.word	.L197
	.byte	3,175,6,1,5,13,9
	.half	.L673-.L197
	.byte	1,5,11,9
	.half	.L674-.L673
	.byte	3,1,1,5,28,3,127,1,5,20,9
	.half	.L675-.L674
	.byte	1,5,11,9
	.half	.L676-.L675
	.byte	3,122,1,7,9
	.half	.L237-.L676
	.byte	0,1,1,5,28,0,5,2
	.word	.L197
	.byte	3,182,6,1,5,13,9
	.half	.L673-.L197
	.byte	1,5,11,9
	.half	.L674-.L673
	.byte	3,1,1,5,28,3,127,1,5,20,9
	.half	.L675-.L674
	.byte	1,5,11,9
	.half	.L676-.L675
	.byte	3,115,1,7,9
	.half	.L237-.L676
	.byte	0,1,1
.L670:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L236:
	.word	-1,.L197,0,.L237-.L197,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L238:
	.word	174
	.half	3
	.word	.L239
	.byte	4,1
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L241,.L240
	.byte	2
	.word	.L204
	.byte	3
	.byte	'.cocofun_7',0,1,234,9,26,1
	.word	.L195,.L242,.L194
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L239:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L240:
	.word	.L678-.L677
.L677:
	.half	3
	.word	.L680-.L679
.L679:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\VStdLib\\Implementation\\vstdlib.c',0,0,0,0,0
.L680:
	.byte	5,12,7,0,5,2
	.word	.L195
	.byte	3,247,6,1,5,15,9
	.half	.L681-.L195
	.byte	3,1,1,5,21,9
	.half	.L682-.L681
	.byte	3,127,1,5,16,9
	.half	.L683-.L682
	.byte	3,2,1,9
	.half	.L242-.L683
	.byte	0,1,1,5,12,0,5,2
	.word	.L195
	.byte	3,252,6,1,5,15,9
	.half	.L681-.L195
	.byte	3,1,1,5,21,9
	.half	.L682-.L681
	.byte	3,127,1,5,16,9
	.half	.L683-.L682
	.byte	3,2,1,3,123,1,7,9
	.half	.L242-.L683
	.byte	0,1,1,5,12,0,5,2
	.word	.L195
	.byte	3,247,6,1,5,15,9
	.half	.L681-.L195
	.byte	3,1,1,5,21,9
	.half	.L682-.L681
	.byte	3,127,1,5,16,9
	.half	.L683-.L682
	.byte	3,2,1,9
	.half	.L242-.L683
	.byte	0,1,1
.L678:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L241:
	.word	-1,.L195,0,.L242-.L195,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L196:
	.word	-1,.L197,0,.L237-.L197
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L194:
	.word	-1,.L195,0,.L242-.L195
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('VStdLib_MemCpy')
	.sect	'.debug_loc'
.L192:
	.word	-1,.L193,0,.L284-.L193
	.half	2
	.byte	138,0
	.word	0,0
.L323:
	.word	-1,.L193,.L433-.L193,.L424-.L193
	.half	1
	.byte	95
	.word	.L197-.L193,.L237-.L193
	.half	1
	.byte	95
	.word	.L112-.L193,.L439-.L193
	.half	1
	.byte	95
	.word	0,0
.L339:
	.word	-1,.L193,.L441-.L193,.L133-.L193
	.half	1
	.byte	95
	.word	.L195-.L193,.L242-.L193
	.half	1
	.byte	95
	.word	.L349-.L193,.L443-.L193
	.half	1
	.byte	95
	.word	.L443-.L193,.L388-.L193
	.half	1
	.byte	88
	.word	.L388-.L193,.L493-.L193
	.half	1
	.byte	95
	.word	0,0
.L310:
	.word	0,0
.L299:
	.word	0,0
.L320:
	.word	0,0
.L353:
	.word	0,0
.L335:
	.word	0,0
.L288:
	.word	-1,.L193,0,.L421-.L193
	.half	1
	.byte	84
	.word	.L98-.L193,.L106-.L193
	.half	1
	.byte	84
	.word	.L105-.L193,.L133-.L193
	.half	1
	.byte	84
	.word	.L195-.L193,.L242-.L193
	.half	1
	.byte	84
	.word	.L349-.L193,.L444-.L193
	.half	1
	.byte	84
	.word	.L446-.L193,.L135-.L193
	.half	1
	.byte	81
	.word	.L135-.L193,.L134-.L193
	.half	1
	.byte	98
	.word	.L361-.L193,.L456-.L193
	.half	1
	.byte	84
	.word	.L134-.L193,.L457-.L193
	.half	1
	.byte	84
	.word	.L458-.L193,.L139-.L193
	.half	1
	.byte	95
	.word	.L139-.L193,.L138-.L193
	.half	1
	.byte	98
	.word	.L368-.L193,.L469-.L193
	.half	1
	.byte	84
	.word	.L138-.L193,.L470-.L193
	.half	1
	.byte	84
	.word	.L471-.L193,.L142-.L193
	.half	1
	.byte	95
	.word	.L142-.L193,.L137-.L193
	.half	1
	.byte	98
	.word	.L375-.L193,.L137-.L193
	.half	1
	.byte	84
	.word	.L486-.L193,.L487-.L193
	.half	1
	.byte	84
	.word	.L487-.L193,.L145-.L193
	.half	1
	.byte	82
	.word	.L488-.L193,.L146-.L193
	.half	1
	.byte	101
	.word	.L385-.L193,.L146-.L193
	.half	1
	.byte	84
	.word	.L130-.L193,.L389-.L193
	.half	1
	.byte	84
	.word	0,0
.L337:
	.word	0,0
.L302:
	.word	-1,.L193,.L432-.L193,.L424-.L193
	.half	1
	.byte	85
	.word	.L197-.L193,.L237-.L193
	.half	1
	.byte	85
	.word	.L112-.L193,.L133-.L193
	.half	1
	.byte	85
	.word	.L195-.L193,.L242-.L193
	.half	1
	.byte	85
	.word	.L349-.L193,.L494-.L193
	.half	1
	.byte	85
	.word	.L182-.L193,.L284-.L193
	.half	1
	.byte	85
	.word	0,0
.L301:
	.word	-1,.L193,.L428-.L193,.L429-.L193
	.half	1
	.byte	95
	.word	0,0
.L357:
	.word	0,0
.L285:
	.word	-1,.L193,0,.L421-.L193
	.half	1
	.byte	100
	.word	.L422-.L193,.L421-.L193
	.half	1
	.byte	111
	.word	.L98-.L193,.L424-.L193
	.half	1
	.byte	111
	.word	.L98-.L193,.L425-.L193
	.half	1
	.byte	100
	.word	.L430-.L193,.L431-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L197-.L193,.L237-.L193
	.half	1
	.byte	111
	.word	.L112-.L193,.L328-.L193
	.half	1
	.byte	111
	.word	.L105-.L193,.L440-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L105-.L193,.L133-.L193
	.half	1
	.byte	111
	.word	.L195-.L193,.L242-.L193
	.half	1
	.byte	111
	.word	.L349-.L193,.L135-.L193
	.half	1
	.byte	111
	.word	.L134-.L193,.L139-.L193
	.half	1
	.byte	111
	.word	.L138-.L193,.L142-.L193
	.half	1
	.byte	111
	.word	.L495-.L193,.L391-.L193
	.half	1
	.byte	111
	.word	0,0
.L316:
	.word	0,0
.L345:
	.word	-1,.L193,.L195-.L193,.L242-.L193
	.half	1
	.byte	100
	.word	.L496-.L193,.L130-.L193
	.half	1
	.byte	100
	.word	0,0
.L306:
	.word	0,0
.L295:
	.word	0,0
.L351:
	.word	0,0
.L331:
	.word	0,0
.L289:
	.word	0,0
.L355:
	.word	0,0
.L287:
	.word	-1,.L193,0,.L421-.L193
	.half	1
	.byte	101
	.word	.L423-.L193,.L421-.L193
	.half	1
	.byte	102
	.word	.L98-.L193,.L426-.L193
	.half	1
	.byte	101
	.word	.L98-.L193,.L424-.L193
	.half	1
	.byte	102
	.word	.L426-.L193,.L427-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L197-.L193,.L237-.L193
	.half	1
	.byte	102
	.word	.L112-.L193,.L133-.L193
	.half	1
	.byte	102
	.word	.L195-.L193,.L242-.L193
	.half	1
	.byte	102
	.word	.L349-.L193,.L494-.L193
	.half	1
	.byte	102
	.word	.L182-.L193,.L284-.L193
	.half	1
	.byte	102
	.word	0,0
.L318:
	.word	0,0
.L333:
	.word	0,0
.L308:
	.word	0,0
.L297:
	.word	0,0
.L291:
	.word	0,0
.L346:
	.word	-1,.L193,.L348-.L193,.L133-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L195-.L193,.L242-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L349-.L193,.L445-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L454-.L193,.L455-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L467-.L193,.L468-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L481-.L193,.L482-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L492-.L193,.L130-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L382:
	.word	-1,.L193,.L483-.L193,.L145-.L193
	.half	1
	.byte	95
	.word	.L491-.L193,.L482-.L193
	.half	1
	.byte	95
	.word	.L482-.L193,.L492-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L324:
	.word	-1,.L193,.L438-.L193,.L424-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L197-.L193,.L237-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	.L112-.L193,.L105-.L193
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L341:
	.word	0,0
.L340:
	.word	-1,.L193,.L442-.L193,.L133-.L193
	.half	1
	.byte	86
	.word	.L195-.L193,.L242-.L193
	.half	1
	.byte	86
	.word	.L349-.L193,.L494-.L193
	.half	1
	.byte	86
	.word	0,0
.L362:
	.word	-1,.L193,.L451-.L193,.L134-.L193
	.half	1
	.byte	82
	.word	0,0
.L369:
	.word	-1,.L193,.L463-.L193,.L138-.L193
	.half	1
	.byte	82
	.word	0,0
.L376:
	.word	-1,.L193,.L476-.L193,.L137-.L193
	.half	1
	.byte	82
	.word	0,0
.L386:
	.word	-1,.L193,.L490-.L193,.L146-.L193
	.half	1
	.byte	82
	.word	0,0
.L325:
	.word	-1,.L193,.L434-.L193,.L435-.L193
	.half	1
	.byte	81
	.word	0,0
.L363:
	.word	-1,.L193,.L447-.L193,.L448-.L193
	.half	1
	.byte	81
	.word	.L445-.L193,.L134-.L193
	.half	1
	.byte	81
	.word	0,0
.L370:
	.word	-1,.L193,.L459-.L193,.L460-.L193
	.half	1
	.byte	81
	.word	.L455-.L193,.L138-.L193
	.half	1
	.byte	81
	.word	0,0
.L377:
	.word	-1,.L193,.L472-.L193,.L473-.L193
	.half	1
	.byte	81
	.word	.L468-.L193,.L137-.L193
	.half	1
	.byte	81
	.word	0,0
.L387:
	.word	-1,.L193,.L489-.L193,.L146-.L193
	.half	1
	.byte	83
	.word	0,0
.L326:
	.word	-1,.L193,.L436-.L193,.L424-.L193
	.half	1
	.byte	82
	.word	.L197-.L193,.L237-.L193
	.half	1
	.byte	82
	.word	.L112-.L193,.L105-.L193
	.half	1
	.byte	82
	.word	0,0
.L364:
	.word	-1,.L193,.L449-.L193,.L450-.L193
	.half	1
	.byte	95
	.word	.L453-.L193,.L134-.L193
	.half	1
	.byte	83
	.word	0,0
.L371:
	.word	-1,.L193,.L461-.L193,.L462-.L193
	.half	1
	.byte	95
	.word	.L462-.L193,.L138-.L193
	.half	1
	.byte	83
	.word	0,0
.L378:
	.word	-1,.L193,.L474-.L193,.L475-.L193
	.half	1
	.byte	95
	.word	.L479-.L193,.L137-.L193
	.half	1
	.byte	83
	.word	0,0
.L327:
	.word	-1,.L193,.L437-.L193,.L424-.L193
	.half	1
	.byte	83
	.word	.L197-.L193,.L237-.L193
	.half	1
	.byte	83
	.word	.L112-.L193,.L105-.L193
	.half	1
	.byte	83
	.word	0,0
.L365:
	.word	-1,.L193,.L451-.L193,.L134-.L193
	.half	1
	.byte	87
	.word	0,0
.L372:
	.word	-1,.L193,.L463-.L193,.L464-.L193
	.half	1
	.byte	87
	.word	.L466-.L193,.L138-.L193
	.half	1
	.byte	95
	.word	0,0
.L379:
	.word	-1,.L193,.L476-.L193,.L477-.L193
	.half	1
	.byte	87
	.word	.L480-.L193,.L137-.L193
	.half	1
	.byte	87
	.word	0,0
.L366:
	.word	-1,.L193,.L452-.L193,.L134-.L193
	.half	1
	.byte	89
	.word	0,0
.L373:
	.word	-1,.L193,.L465-.L193,.L138-.L193
	.half	1
	.byte	89
	.word	0,0
.L380:
	.word	-1,.L193,.L478-.L193,.L137-.L193
	.half	1
	.byte	89
	.word	0,0
.L383:
	.word	-1,.L193,.L484-.L193,.L485-.L193
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('VStdLib_MemCpy16')
	.sect	'.debug_loc'
.L198:
	.word	-1,.L199,0,.L392-.L199
	.half	2
	.byte	138,0
	.word	0,0
.L398:
	.word	0,0
.L397:
	.word	-1,.L199,0,.L392-.L199
	.half	1
	.byte	84
	.word	0,0
.L394:
	.word	-1,.L199,0,.L392-.L199
	.half	1
	.byte	100
	.word	0,0
.L396:
	.word	-1,.L199,0,.L392-.L199
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('VStdLib_MemCpy32')
	.sect	'.debug_loc'
.L200:
	.word	-1,.L201,0,.L399-.L201
	.half	2
	.byte	138,0
	.word	0,0
.L404:
	.word	0,0
.L403:
	.word	-1,.L201,0,.L399-.L201
	.half	1
	.byte	84
	.word	0,0
.L400:
	.word	-1,.L201,0,.L399-.L201
	.half	1
	.byte	100
	.word	0,0
.L402:
	.word	-1,.L201,0,.L399-.L201
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('VStdLib_MemCpy_s')
	.sect	'.debug_loc'
.L202:
	.word	-1,.L203,0,.L405-.L203
	.half	2
	.byte	138,0
	.word	0,0
.L409:
	.word	-1,.L203,0,.L405-.L203
	.half	1
	.byte	85
	.word	.L497-.L203,.L189-.L203
	.half	1
	.byte	84
	.word	0,0
.L407:
	.word	-1,.L203,0,.L497-.L203
	.half	1
	.byte	84
	.word	.L189-.L203,.L405-.L203
	.half	1
	.byte	84
	.word	0,0
.L406:
	.word	-1,.L203,0,.L405-.L203
	.half	1
	.byte	100
	.word	0,0
.L408:
	.word	-1,.L203,0,.L405-.L203
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('VStdLib_MemSet')
	.sect	'.debug_loc'
.L190:
	.word	-1,.L191,0,.L243-.L191
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	-1,.L191,.L415-.L191,.L412-.L191
	.half	1
	.byte	95
	.word	.L60-.L191,.L420-.L191
	.half	1
	.byte	95
	.word	0,0
.L269:
	.word	0,0
.L259:
	.word	0,0
.L278:
	.word	0,0
.L249:
	.word	-1,.L191,0,.L410-.L191
	.half	1
	.byte	85
	.word	.L35-.L191,.L411-.L191
	.half	1
	.byte	85
	.word	.L417-.L191,.L42-.L191
	.half	1
	.byte	81
	.word	.L42-.L191,.L412-.L191
	.half	1
	.byte	98
	.word	.L418-.L191,.L419-.L191
	.half	1
	.byte	85
	.word	.L60-.L191,.L243-.L191
	.half	1
	.byte	98
	.word	0,0
.L261:
	.word	-1,.L191,.L414-.L191,.L415-.L191
	.half	1
	.byte	95
	.word	0,0
.L267:
	.word	0,0
.L257:
	.word	0,0
.L276:
	.word	0,0
.L247:
	.word	-1,.L191,0,.L410-.L191
	.half	1
	.byte	84
	.word	.L35-.L191,.L412-.L191
	.half	1
	.byte	84
	.word	.L60-.L191,.L243-.L191
	.half	1
	.byte	84
	.word	0,0
.L282:
	.word	-1,.L191,.L416-.L191,.L412-.L191
	.half	5
	.byte	144,32,157,32,0
	.word	.L60-.L191,.L243-.L191
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L245:
	.word	-1,.L191,0,.L410-.L191
	.half	1
	.byte	100
	.word	.L35-.L191,.L412-.L191
	.half	1
	.byte	100
	.word	.L413-.L191,.L414-.L191
	.half	1
	.byte	95
	.word	.L60-.L191,.L243-.L191
	.half	1
	.byte	100
	.word	0,0
.L274:
	.word	0,0
.L265:
	.word	0,0
.L255:
	.word	0,0
.L251:
	.word	-1,.L191,0,.L410-.L191
	.half	1
	.byte	100
	.word	.L35-.L191,.L412-.L191
	.half	1
	.byte	100
	.word	.L60-.L191,.L243-.L191
	.half	1
	.byte	100
	.word	0,0
.L281:
	.word	-1,.L191,0,.L410-.L191
	.half	1
	.byte	85
	.word	.L35-.L191,.L412-.L191
	.half	1
	.byte	85
	.word	.L60-.L191,.L243-.L191
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L684:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('VStdLib_MemSet')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L191,.L243-.L191
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('VStdLib_MemCpy')
	.sect	'.debug_frame'
	.word	16
	.word	.L684,.L193,.L284-.L193
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('VStdLib_MemCpy16')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L199,.L392-.L199
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('VStdLib_MemCpy32')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L201,.L399-.L201
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('VStdLib_MemCpy_s')
	.sect	'.debug_frame'
	.word	12
	.word	.L684,.L203,.L405-.L203
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L685:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L685,.L195,.L242-.L195
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L685,.L197,.L237-.L197
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\VStdLib\Implementation\vstdlib.c	  1493  
; ..\component\VStdLib\Implementation\vstdlib.c	  1494  #if (VSTDLIB_VERSION_INFO_API == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1495  
; ..\component\VStdLib\Implementation\vstdlib.c	  1496  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1497   *  VStdLib_GetVersionInfo()
; ..\component\VStdLib\Implementation\vstdlib.c	  1498   *********************************************************************************************************************/
; ..\component\VStdLib\Implementation\vstdlib.c	  1499  /*!
; ..\component\VStdLib\Implementation\vstdlib.c	  1500   * Internal comment removed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1501   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1502   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1503   *
; ..\component\VStdLib\Implementation\vstdlib.c	  1504   */
; ..\component\VStdLib\Implementation\vstdlib.c	  1505  FUNC(void, VSTDLIB_CODE) VStdLib_GetVersionInfo(P2VAR(Std_VersionInfoType, AUTOMATIC, VSTDLIB_APPL_VAR) versioninfo)
; ..\component\VStdLib\Implementation\vstdlib.c	  1506  {
; ..\component\VStdLib\Implementation\vstdlib.c	  1507    /* ----- Local Variables ---------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1508    uint8 errorId = VSTDLIB_E_NO_ERROR;
; ..\component\VStdLib\Implementation\vstdlib.c	  1509  
; ..\component\VStdLib\Implementation\vstdlib.c	  1510    /* ----- Development Error Checks ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1511  # if (VSTDLIB_DEV_ERROR_DETECT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1512    /* #10 Check parameter 'versioninfo' */
; ..\component\VStdLib\Implementation\vstdlib.c	  1513    if (versioninfo == NULL_PTR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1514    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1515      errorId = VSTDLIB_E_PARAM_POINTER;
; ..\component\VStdLib\Implementation\vstdlib.c	  1516    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1517    else
; ..\component\VStdLib\Implementation\vstdlib.c	  1518  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1519    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1520      /* ----- Implementation ----------------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1521      /* #20 Write component data to 'versioninfo' */
; ..\component\VStdLib\Implementation\vstdlib.c	  1522      versioninfo->vendorID = VSTDLIB_VENDOR_ID;                /* SBSW_VSTDLIB_ACCESS_VERSIONINFO */
; ..\component\VStdLib\Implementation\vstdlib.c	  1523      versioninfo->moduleID = VSTDLIB_MODULE_ID;                /* SBSW_VSTDLIB_ACCESS_VERSIONINFO */
; ..\component\VStdLib\Implementation\vstdlib.c	  1524      versioninfo->sw_major_version = VSTDLIB_SW_MAJOR_VERSION; /* SBSW_VSTDLIB_ACCESS_VERSIONINFO */
; ..\component\VStdLib\Implementation\vstdlib.c	  1525      versioninfo->sw_minor_version = VSTDLIB_SW_MINOR_VERSION; /* SBSW_VSTDLIB_ACCESS_VERSIONINFO */
; ..\component\VStdLib\Implementation\vstdlib.c	  1526      versioninfo->sw_patch_version = VSTDLIB_SW_PATCH_VERSION; /* SBSW_VSTDLIB_ACCESS_VERSIONINFO */
; ..\component\VStdLib\Implementation\vstdlib.c	  1527    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1528  
; ..\component\VStdLib\Implementation\vstdlib.c	  1529    /* ----- Development Error Report ------------------------------------- */
; ..\component\VStdLib\Implementation\vstdlib.c	  1530  # if (VSTDLIB_DEV_ERROR_REPORT == STD_ON)
; ..\component\VStdLib\Implementation\vstdlib.c	  1531    if (errorId != VSTDLIB_E_NO_ERROR)
; ..\component\VStdLib\Implementation\vstdlib.c	  1532    {
; ..\component\VStdLib\Implementation\vstdlib.c	  1533      (void) Det_ReportError(VSTDLIB_MODULE_ID, VSTDLIB_INSTANCE_ID_DET, VSTDLIB_SID_GET_VERSION_INFO, errorId);
; ..\component\VStdLib\Implementation\vstdlib.c	  1534    }
; ..\component\VStdLib\Implementation\vstdlib.c	  1535  # else
; ..\component\VStdLib\Implementation\vstdlib.c	  1536    VSTDLIB_DUMMY_STATEMENT(errorId); /* PRQA S 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\VStdLib\Implementation\vstdlib.c	  1537  # endif
; ..\component\VStdLib\Implementation\vstdlib.c	  1538  } /* VStdLib_GetVersionInfo() */
; ..\component\VStdLib\Implementation\vstdlib.c	  1539  
; ..\component\VStdLib\Implementation\vstdlib.c	  1540  #endif /* VSTDLIB_VERSION_INFO_API == STD_ON */
; ..\component\VStdLib\Implementation\vstdlib.c	  1541  
; ..\component\VStdLib\Implementation\vstdlib.c	  1542  #define VSTDLIB_STOP_SEC_CODE
; ..\component\VStdLib\Implementation\vstdlib.c	  1543  #include "MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\VStdLib\Implementation\vstdlib.c	  1544  
; ..\component\VStdLib\Implementation\vstdlib.c	  1545  /* Justification for module-specific MISRA deviations:
; ..\component\VStdLib\Implementation\vstdlib.c	  1546  
; ..\component\VStdLib\Implementation\vstdlib.c	  1547   MD_VStdLib_NoCaseBreak:
; ..\component\VStdLib\Implementation\vstdlib.c	  1548     Reason:     Break statements are omitted due to performance reasons when using jump tables.
; ..\component\VStdLib\Implementation\vstdlib.c	  1549     Risk:       Resulting code is misleading.
; ..\component\VStdLib\Implementation\vstdlib.c	  1550     Prevention: Code comments, code inspection and test of the different variants in the component test.
; ..\component\VStdLib\Implementation\vstdlib.c	  1551  
; ..\component\VStdLib\Implementation\vstdlib.c	  1552   MD_VStdLib_ParamMod:
; ..\component\VStdLib\Implementation\vstdlib.c	  1553     Reason:     Pointers and counts given as function parameters are modified during different algorithm stages.
; ..\component\VStdLib\Implementation\vstdlib.c	  1554     Risk:       Wrong pointer access is performed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1555     Prevention: Silent analysis, code inspection and test of the different variants in the component test.
; ..\component\VStdLib\Implementation\vstdlib.c	  1556  
; ..\component\VStdLib\Implementation\vstdlib.c	  1557   MD_VStdLib_PtrCast:
; ..\component\VStdLib\Implementation\vstdlib.c	  1558     Reason:     Pointer is casted as different memory access sizes are utilized due to performance reasons.
; ..\component\VStdLib\Implementation\vstdlib.c	  1559     Risk:       Wrong pointer access is performed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1560     Prevention: Code inspection and test of the different variants in the component test.
; ..\component\VStdLib\Implementation\vstdlib.c	  1561  
; ..\component\VStdLib\Implementation\vstdlib.c	  1562   MD_VStdLib_PtrCastToInt:
; ..\component\VStdLib\Implementation\vstdlib.c	  1563     Reason:     Pointer is casted to an integral type in order to get the target alignment.
; ..\component\VStdLib\Implementation\vstdlib.c	  1564     Risk:       None, as only LSBs are evaluated.
; ..\component\VStdLib\Implementation\vstdlib.c	  1565     Prevention: None.
; ..\component\VStdLib\Implementation\vstdlib.c	  1566  
; ..\component\VStdLib\Implementation\vstdlib.c	  1567   MD_VStdLib_Metrics:
; ..\component\VStdLib\Implementation\vstdlib.c	  1568     Reason:     No separation of functionality due to performance reasons when using jump tables.
; ..\component\VStdLib\Implementation\vstdlib.c	  1569     Risk:       None, as the complexity arises from one single switch statement.
; ..\component\VStdLib\Implementation\vstdlib.c	  1570     Prevention: None.
; ..\component\VStdLib\Implementation\vstdlib.c	  1571  
; ..\component\VStdLib\Implementation\vstdlib.c	  1572  */
; ..\component\VStdLib\Implementation\vstdlib.c	  1573  
; ..\component\VStdLib\Implementation\vstdlib.c	  1574  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\VStdLib\Implementation\vstdlib.c	  1575  
; ..\component\VStdLib\Implementation\vstdlib.c	  1576   \ID SBSW_VSTDLIB_CALL_UNMODIFIED
; ..\component\VStdLib\Implementation\vstdlib.c	  1577     \DESCRIPTION A function is called with unmodified 'pDst' and 'nCnt' parameters.
; ..\component\VStdLib\Implementation\vstdlib.c	  1578     \COUNTERMEASURE \N The caller of the function ensures that 'pDst' and 'nCnt' are valid. These parameters are passed
; ..\component\VStdLib\Implementation\vstdlib.c	  1579                        to the callee without modifications. If the parameters are casted there are no side effects.
; ..\component\VStdLib\Implementation\vstdlib.c	  1580  
; ..\component\VStdLib\Implementation\vstdlib.c	  1581   \ID SBSW_VSTDLIB_CALL_MODIFIED_CNT
; ..\component\VStdLib\Implementation\vstdlib.c	  1582     \DESCRIPTION A static function is called with unmodified 'pDst' parameter and a modified 'nCnt' parameter.
; ..\component\VStdLib\Implementation\vstdlib.c	  1583     \COUNTERMEASURE \N The caller of the function ensures that 'pDst' and 'nCnt' are valid. The offset value is
; ..\component\VStdLib\Implementation\vstdlib.c	  1584                        always smaller than 4 due to VSTDLIB_ALIGN_OFFSET() and 'nCnt' is 32 or higher at this point.
; ..\component\VStdLib\Implementation\vstdlib.c	  1585                        Therefore 'pDst' and 'nCnt' for the callee are valid.
; ..\component\VStdLib\Implementation\vstdlib.c	  1586  
; ..\component\VStdLib\Implementation\vstdlib.c	  1587   \ID SBSW_VSTDLIB_CALL_MODIFIED_PTR_CNT
; ..\component\VStdLib\Implementation\vstdlib.c	  1588     \DESCRIPTION A static function can be called with unmodified or modified 'pDst' and 'nCnt' parameters.
; ..\component\VStdLib\Implementation\vstdlib.c	  1589     \COUNTERMEASURE \N The caller of the function ensures that 'pDst' and 'nCnt' are valid. In case the function is
; ..\component\VStdLib\Implementation\vstdlib.c	  1590                        called with modified parameters (pointer alignment was performed), 'pDst' is incremented by
; ..\component\VStdLib\Implementation\vstdlib.c	  1591                        the value of 'nDstOffset' and 'nCnt' is decremented by the same value. Therefore 'pDst'
; ..\component\VStdLib\Implementation\vstdlib.c	  1592                        and 'nCnt' for the callee are valid.
; ..\component\VStdLib\Implementation\vstdlib.c	  1593  
; ..\component\VStdLib\Implementation\vstdlib.c	  1594   \ID SBSW_VSTDLIB_ACCESS_LOOP
; ..\component\VStdLib\Implementation\vstdlib.c	  1595     \DESCRIPTION Linear memory access using a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	  1596     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. The for loop ensures that
; ..\component\VStdLib\Implementation\vstdlib.c	  1597                        the loop index is always smaller than nCnt. Therefore only valid memory is accessed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1598  
; ..\component\VStdLib\Implementation\vstdlib.c	  1599   \ID SBSW_VSTDLIB_ACCESS_8_JUMPTABLE
; ..\component\VStdLib\Implementation\vstdlib.c	  1600     \DESCRIPTION Linear 8-bit-access using a switch statement.
; ..\component\VStdLib\Implementation\vstdlib.c	  1601     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. The constant indices are
; ..\component\VStdLib\Implementation\vstdlib.c	  1602                        always smaller than the value of 'nCnt'. Therefore only valid memory is accessed.
; ..\component\VStdLib\Implementation\vstdlib.c	  1603  
; ..\component\VStdLib\Implementation\vstdlib.c	  1604   \ID SBSW_VSTDLIB_ACCESS_32_LOOP
; ..\component\VStdLib\Implementation\vstdlib.c	  1605     \DESCRIPTION Linear 32-bit-access using a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	  1606     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. The access index 'dPos'
; ..\component\VStdLib\Implementation\vstdlib.c	  1607                        is initialized with 0. The loop control variable 'remaining' is decremented by 16 per iteration.
; ..\component\VStdLib\Implementation\vstdlib.c	  1608                        The exit condition ensures that at least 16 bytes are valid per iteration. The access index
; ..\component\VStdLib\Implementation\vstdlib.c	  1609                        'dPos' plus constant offset ensures that exactly 16 valid bytes are accessed. 'dPos' is
; ..\component\VStdLib\Implementation\vstdlib.c	  1610                        incremented by 4 (that equals 16 bytes) after the access.
; ..\component\VStdLib\Implementation\vstdlib.c	  1611  
; ..\component\VStdLib\Implementation\vstdlib.c	  1612   \ID SBSW_VSTDLIB_ACCESS_32_LOOP_REMAINING
; ..\component\VStdLib\Implementation\vstdlib.c	  1613     \DESCRIPTION Linear 32-bit-access using a for loop.
; ..\component\VStdLib\Implementation\vstdlib.c	  1614     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. After the for loop above
; ..\component\VStdLib\Implementation\vstdlib.c	  1615                        'remaining' bytes of valid memory start at the address that is indicated by 'dPos'. The loop
; ..\component\VStdLib\Implementation\vstdlib.c	  1616                        control variable 'remaining' is decremented by 4 per iteration. The exit condition ensures that
; ..\component\VStdLib\Implementation\vstdlib.c	  1617                        at least 4 bytes are valid per iteration. The access index 'dPos' ensures that exactly 4 valid
; ..\component\VStdLib\Implementation\vstdlib.c	  1618                        bytes are accessed. 'dPos' is incremented by 1 (that equals 4 bytes) after the access.
; ..\component\VStdLib\Implementation\vstdlib.c	  1619  
; ..\component\VStdLib\Implementation\vstdlib.c	  1620   \ID SBSW_VSTDLIB_ACCESS_32_JUMPTABLE
; ..\component\VStdLib\Implementation\vstdlib.c	  1621     \DESCRIPTION Linear 32-bit-access using a switch statement.
; ..\component\VStdLib\Implementation\vstdlib.c	  1622     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. After the for loop above
; ..\component\VStdLib\Implementation\vstdlib.c	  1623                        'remaining' bytes of valid memory start at the address that is indicated by 'dPos'. The switch
; ..\component\VStdLib\Implementation\vstdlib.c	  1624                        statement ensures that an access is only made if at least 4 byte are valid. 'dPos' is
; ..\component\VStdLib\Implementation\vstdlib.c	  1625                        incremented by 4 after the access.
; ..\component\VStdLib\Implementation\vstdlib.c	  1626  
; ..\component\VStdLib\Implementation\vstdlib.c	  1627   \ID SBSW_VSTDLIB_CALL_REMAINING_JUMPTABLE
; ..\component\VStdLib\Implementation\vstdlib.c	  1628     \DESCRIPTION A static function is called to access the remaining bytes at the end of processing a 32-bit jump table.
; ..\component\VStdLib\Implementation\vstdlib.c	  1629     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. At this point 0-3
; ..\component\VStdLib\Implementation\vstdlib.c	  1630                        bytes of valid memory (indicated by the LSBs of 'remaining') start at the address that is
; ..\component\VStdLib\Implementation\vstdlib.c	  1631                        indicated by 'dPos'. Due to the usage of VSTDLIB_MASK_3 'pDst' and 'nCnt' for the callee are
; ..\component\VStdLib\Implementation\vstdlib.c	  1632                        valid.
; ..\component\VStdLib\Implementation\vstdlib.c	  1633  
; ..\component\VStdLib\Implementation\vstdlib.c	  1634   \ID SBSW_VSTDLIB_CALL_REMAINING
; ..\component\VStdLib\Implementation\vstdlib.c	  1635     \DESCRIPTION A static function is called to access the remaining bytes after 32-bit operations.
; ..\component\VStdLib\Implementation\vstdlib.c	  1636     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. After the for loop above
; ..\component\VStdLib\Implementation\vstdlib.c	  1637                        'remaining' bytes of valid memory start at the address that is indicated by 'dPos'. Therefore
; ..\component\VStdLib\Implementation\vstdlib.c	  1638                        'pDst' and 'nCnt' for the callee are valid.
; ..\component\VStdLib\Implementation\vstdlib.c	  1639  
; ..\component\VStdLib\Implementation\vstdlib.c	  1640   \ID SBSW_VSTDLIB_CALL_REMAINING_PARTIAL
; ..\component\VStdLib\Implementation\vstdlib.c	  1641     \DESCRIPTION A static function is called to access the remaining partial word after 32-bit displacement operations.
; ..\component\VStdLib\Implementation\vstdlib.c	  1642     \COUNTERMEASURE \N The caller of this function ensures that 'pDst' and 'nCnt' are valid. At this point at least
; ..\component\VStdLib\Implementation\vstdlib.c	  1643                        (4 - 'nDstOffset') bytes of valid memory start at the address that is indicated by 'dPos'.
; ..\component\VStdLib\Implementation\vstdlib.c	  1644                        Therefore 'pDst' and 'nCnt' for the callee are valid.
; ..\component\VStdLib\Implementation\vstdlib.c	  1645  
; ..\component\VStdLib\Implementation\vstdlib.c	  1646   \ID SBSW_VSTDLIB_ACCESS_LOCAL
; ..\component\VStdLib\Implementation\vstdlib.c	  1647     \DESCRIPTION Access to a pointer referencing a local variable.
; ..\component\VStdLib\Implementation\vstdlib.c	  1648     \COUNTERMEASURE \N The static function VStdLib_Loc_MemCpy_8_PartialWord() is only called with valid pointers to
; ..\component\VStdLib\Implementation\vstdlib.c	  1649                        local parameters.
; ..\component\VStdLib\Implementation\vstdlib.c	  1650  
; ..\component\VStdLib\Implementation\vstdlib.c	  1651   \ID SBSW_VSTDLIB_ACCESS_VERSIONINFO
; ..\component\VStdLib\Implementation\vstdlib.c	  1652     \DESCRIPTION The function VStdLib_GetVersionInfo() writes to the object referenced by parameter 'versioninfo'.
; ..\component\VStdLib\Implementation\vstdlib.c	  1653     \COUNTERMEASURE \N The caller ensures that the pointer passed to the parameter 'versioninfo' is valid and references
; ..\component\VStdLib\Implementation\vstdlib.c	  1654                        an object of type Std_VersionInfoType.
; ..\component\VStdLib\Implementation\vstdlib.c	  1655  
; ..\component\VStdLib\Implementation\vstdlib.c	  1656  SBSW_JUSTIFICATION_END */
; ..\component\VStdLib\Implementation\vstdlib.c	  1657  
; ..\component\VStdLib\Implementation\vstdlib.c	  1658  /**********************************************************************************************************************
; ..\component\VStdLib\Implementation\vstdlib.c	  1659   *  END OF FILE: vstdlib.c
; ..\component\VStdLib\Implementation\vstdlib.c	  1660   *********************************************************************************************************************/

	; Module end
