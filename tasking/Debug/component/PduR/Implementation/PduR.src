	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\PduR\\Implementation\\.PduR.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\PduR\\Implementation\\PduR.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\PduR\\Implementation\\PduR.src ..\\component\\PduR\\Implementation\\PduR.c"
	.compiler_name		"ctc"
	;source	'..\\component\\PduR\\Implementation\\PduR.c'

	
$TC162
	
	.sdecl	'.text.PduR.PduR_GetConfigurationId',code,cluster('PduR_GetConfigurationId')
	.sect	'.text.PduR.PduR_GetConfigurationId'
	.align	2
	
	.global	PduR_GetConfigurationId

; ..\component\PduR\Implementation\PduR.c	     1  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	     2   *  COPYRIGHT
; ..\component\PduR\Implementation\PduR.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR.c	     4   *  \verbatim
; ..\component\PduR\Implementation\PduR.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\PduR\Implementation\PduR.c	     6   *
; ..\component\PduR\Implementation\PduR.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\PduR\Implementation\PduR.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR.c	    10   *  \endverbatim
; ..\component\PduR\Implementation\PduR.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR.c	    12   *  FILE DESCRIPTION
; ..\component\PduR\Implementation\PduR.c	    13   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR.c	    14   *         File:  PduR.c
; ..\component\PduR\Implementation\PduR.c	    15   *      Project:  Gw_AsrPduRCfg5
; ..\component\PduR\Implementation\PduR.c	    16   *       Module:  MICROSAR PDU Router
; ..\component\PduR\Implementation\PduR.c	    17   *    Generator:  Configurator 5
; ..\component\PduR\Implementation\PduR.c	    18   *
; ..\component\PduR\Implementation\PduR.c	    19   *  Description:  Vector implementation of AUTOSAR PDU Router
; ..\component\PduR\Implementation\PduR.c	    20   *
; ..\component\PduR\Implementation\PduR.c	    21   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    22  
; ..\component\PduR\Implementation\PduR.c	    23  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    24   *  REVISION HISTORY
; ..\component\PduR\Implementation\PduR.c	    25   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR.c	    26   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR.c	    27   *
; ..\component\PduR\Implementation\PduR.c	    28   *  FILE VERSION
; ..\component\PduR\Implementation\PduR.c	    29   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR.c	    30   *  Refer to the VERSION CHECK below.
; ..\component\PduR\Implementation\PduR.c	    31   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    32  
; ..\component\PduR\Implementation\PduR.c	    33  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    34   * LOCAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR.c	    35   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    36  
; ..\component\PduR\Implementation\PduR.c	    37  
; ..\component\PduR\Implementation\PduR.c	    38  #define PDUR_SOURCE
; ..\component\PduR\Implementation\PduR.c	    39  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    40   * INCLUDES
; ..\component\PduR\Implementation\PduR.c	    41   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    42  #include "PduR.h"
; ..\component\PduR\Implementation\PduR.c	    43  #include "PduR_Bm.h"
; ..\component\PduR\Implementation\PduR.c	    44  #include "PduR_Fm.h"
; ..\component\PduR\Implementation\PduR.c	    45  #include "PduR_IFQ.h"
; ..\component\PduR\Implementation\PduR.c	    46  #include "PduR_Sm.h"
; ..\component\PduR\Implementation\PduR.c	    47  #include "PduR_RmIf.h"
; ..\component\PduR\Implementation\PduR.c	    48  #include "PduR_RmTp.h"
; ..\component\PduR\Implementation\PduR.c	    49  #include "PduR_RmTp_TxInst.h"
; ..\component\PduR\Implementation\PduR.c	    50  #include "PduR_McQ.h"
; ..\component\PduR\Implementation\PduR.c	    51  #include "PduR_Lock.h"
; ..\component\PduR\Implementation\PduR.c	    52  #include "SchM_PduR.h"
; ..\component\PduR\Implementation\PduR.c	    53  
; ..\component\PduR\Implementation\PduR.c	    54  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	    55  # include "Os.h"
; ..\component\PduR\Implementation\PduR.c	    56  #endif
; ..\component\PduR\Implementation\PduR.c	    57  
; ..\component\PduR\Implementation\PduR.c	    58  #if ((PDUR_BSWMPDURRXINDICATIONCALLBACKOFRXIF2DEST == STD_ON) || (PDUR_BSWMPDURTPRXINDICATIONCALLBACKOFRXTP2DEST == STD_ON) || (PDUR_BSWMPDURTPSTARTOFRECEPTIONCALLBACKOFRXTP2DEST == STD_ON) || (PDUR_BSWMPDURTRANSMITCALLBACKOFTX2LO == STD_ON) || (PDUR_BSWMPDURTXCONFIRMATIONCALLBACKOFTXIF2UP == STD_ON) || (PDUR_BSWMPDURTPTXCONFIRMATIONCALLBACKOFTXTP2SRC == STD_ON) || (PDUR_BSWMPDURPRETRANSMITCALLBACKOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	    59  # include "BswM_PduR.h"
; ..\component\PduR\Implementation\PduR.c	    60  #endif
; ..\component\PduR\Implementation\PduR.c	    61  
; ..\component\PduR\Implementation\PduR.c	    62  #if(PDUR_USE_ECUM_BSW_ERROR_HOOK == STD_ON)
; ..\component\PduR\Implementation\PduR.c	    63  # include "EcuM_Error.h"
; ..\component\PduR\Implementation\PduR.c	    64  #endif
; ..\component\PduR\Implementation\PduR.c	    65  
; ..\component\PduR\Implementation\PduR.c	    66  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    67   *  VERSION CHECK
; ..\component\PduR\Implementation\PduR.c	    68   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    69  /* Check the version of PduR header file */
; ..\component\PduR\Implementation\PduR.c	    70  #if (  (PDUR_SW_MAJOR_VERSION != (15u)) \ 
; ..\component\PduR\Implementation\PduR.c	    71      || (PDUR_SW_MINOR_VERSION != (4u)) \ 
; ..\component\PduR\Implementation\PduR.c	    72      || (PDUR_SW_PATCH_VERSION != (1u)) )
; ..\component\PduR\Implementation\PduR.c	    73  # error "Vendor specific version numbers of PduR.c and PduR.h are inconsistent"
; ..\component\PduR\Implementation\PduR.c	    74  #endif
; ..\component\PduR\Implementation\PduR.c	    75  
; ..\component\PduR\Implementation\PduR.c	    76  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    77   *  LOCAL CONSTANT MACROS
; ..\component\PduR\Implementation\PduR.c	    78   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    79  
; ..\component\PduR\Implementation\PduR.c	    80  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    81   * LOCAL FUNCTION MACROS
; ..\component\PduR\Implementation\PduR.c	    82   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    83  
; ..\component\PduR\Implementation\PduR.c	    84  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    85   * LOCAL DATA TYPES AND STRUCTURES
; ..\component\PduR\Implementation\PduR.c	    86   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    87  
; ..\component\PduR\Implementation\PduR.c	    88  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    89   * LOCAL FUNCTION PROTOTYPES
; ..\component\PduR\Implementation\PduR.c	    90   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    91  #define PDUR_START_SEC_CODE
; ..\component\PduR\Implementation\PduR.c	    92  #include "PduR_MemMap.h"    /* PRQA S 5087 */        /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR.c	    93  
; ..\component\PduR\Implementation\PduR.c	    94  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	    95    PduR_InitMemorySection
; ..\component\PduR\Implementation\PduR.c	    96  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	    97  /*! \brief       This function initializes the PDUR
; ..\component\PduR\Implementation\PduR.c	    98   *  \details     Initializes all component variables of a specific memory section and sets the component state to initialized.
; ..\component\PduR\Implementation\PduR.c	    99   *  \param[in]   memIdx   memory section index
; ..\component\PduR\Implementation\PduR.c	   100   *  \pre         Interrupts are disabled.
; ..\component\PduR\Implementation\PduR.c	   101   *  \pre         Module is uninitialized.
; ..\component\PduR\Implementation\PduR.c	   102   *  \pre         PduR_InitMemory has been called unless PduR_ModuleInitialized is initialized by start-up code.
; ..\component\PduR\Implementation\PduR.c	   103   *  \pre         PduR_PreInit has been called.
; ..\component\PduR\Implementation\PduR.c	   104   *  \context     TASK
; ..\component\PduR\Implementation\PduR.c	   105   *  \reentrant   FALSE
; ..\component\PduR\Implementation\PduR.c	   106   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   107   ********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   108  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_InitMemorySection(PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   109  
; ..\component\PduR\Implementation\PduR.c	   110  #if(PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   111  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   112   * PduR_Init_RmDestRpgRom
; ..\component\PduR\Implementation\PduR.c	   113   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   114  /*! \brief      This function initializes the PDUR routing path groups.
; ..\component\PduR\Implementation\PduR.c	   115   *  \details    -
; ..\component\PduR\Implementation\PduR.c	   116   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR.c	   117   *  \pre        PduR_InitMemory() has been executed, if the start up code does not initialize variables.
; ..\component\PduR\Implementation\PduR.c	   118   *  \note       The function must be called on task level and has not to be interrupted.
; ..\component\PduR\Implementation\PduR.c	   119   *              by other administrative function calls.
; ..\component\PduR\Implementation\PduR.c	   120   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   121  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Init_RmDestRpgRom(PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   122  #endif
; ..\component\PduR\Implementation\PduR.c	   123  
; ..\component\PduR\Implementation\PduR.c	   124  #if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   125  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   126   * PduR_Rm_MultipleSourceHandler_Init
; ..\component\PduR\Implementation\PduR.c	   127   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   128  /*! \brief      This function initializes the PDUR fan in RAM variables.
; ..\component\PduR\Implementation\PduR.c	   129   *  \details    -
; ..\component\PduR\Implementation\PduR.c	   130   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR.c	   131   *  \pre        PduR_InitMemory() has been executed, if the start up code does not initialize variables.
; ..\component\PduR\Implementation\PduR.c	   132   *  \note       The function must be called on task level and has not to be interrupted
; ..\component\PduR\Implementation\PduR.c	   133   *              by other administrative function calls.
; ..\component\PduR\Implementation\PduR.c	   134   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   135  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Rm_MultipleSourceHandler_Init(PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   136  #endif
; ..\component\PduR\Implementation\PduR.c	   137  
; ..\component\PduR\Implementation\PduR.c	   138  #if ((PDUR_IFCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON) || (PDUR_TPCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	   139  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   140   * PduR_Rm_CancelTransmit_MultiDest
; ..\component\PduR\Implementation\PduR.c	   141   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   142  /*!
; ..\component\PduR\Implementation\PduR.c	   143   * \brief    The function calls the CancelTransmit function for every destination
; ..\component\PduR\Implementation\PduR.c	   144   * \details     -
; ..\component\PduR\Implementation\PduR.c	   145   * \param[in]   rmSrcIdx            internal RmSrcRom index
; ..\component\PduR\Implementation\PduR.c	   146   * \return      Std_ReturnType
; ..\component\PduR\Implementation\PduR.c	   147   *               E_OK              Cancellation was executed successfully by all the destination modules.
; ..\component\PduR\Implementation\PduR.c	   148   *               E_NOT_OK          Cancellation was rejected by the destination module.
; ..\component\PduR\Implementation\PduR.c	   149   * \pre         -
; ..\component\PduR\Implementation\PduR.c	   150   * \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   151   * \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   152   * \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   153  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   154  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_Rm_CancelTransmit_MultiDest(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR.c	   155  #endif
; ..\component\PduR\Implementation\PduR.c	   156  
; ..\component\PduR\Implementation\PduR.c	   157  #if ((PDUR_MAIN_FUNCTION == STD_ON) && ((PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)))
; ..\component\PduR\Implementation\PduR.c	   158  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   159    PduR_DispatchMainfuntion
; ..\component\PduR\Implementation\PduR.c	   160  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   161  /*! \brief      This function calls the corresponding Mainfunction for the rmGDestRomIdx
; ..\component\PduR\Implementation\PduR.c	   162   *  \details    -
; ..\component\PduR\Implementation\PduR.c	   163   *  \param[in]  rmGDestRomIdx    internal RmGDestRom index
; ..\component\PduR\Implementation\PduR.c	   164   *  \pre        -
; ..\component\PduR\Implementation\PduR.c	   165   ********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   166  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_DispatchMainfuntion(PduR_RmGDestRomIterType rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	   167  #endif
; ..\component\PduR\Implementation\PduR.c	   168  
; ..\component\PduR\Implementation\PduR.c	   169  #if(PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   170  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   171   * PduR_EvC_Init
; ..\component\PduR\Implementation\PduR.c	   172  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   173  /*! \brief      This function initializes the deferred event cache.
; ..\component\PduR\Implementation\PduR.c	   174   *  \details    -
; ..\component\PduR\Implementation\PduR.c	   175   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR.c	   176   *  \pre        -
; ..\component\PduR\Implementation\PduR.c	   177   ********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   178  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_Init(PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   179  #endif
; ..\component\PduR\Implementation\PduR.c	   180  
; ..\component\PduR\Implementation\PduR.c	   181  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   182  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   183   * PduR_EvC_ReadFlush
; ..\component\PduR\Implementation\PduR.c	   184   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   185  /*! \brief       Flush the event queue by setting the read pointer equal to the write pointer
; ..\component\PduR\Implementation\PduR.c	   186   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   187   *  \param[in]   deferredEventCacheIdx    Id of the correct queue to be used
; ..\component\PduR\Implementation\PduR.c	   188   *  \param[in]   memIdx                   memory section index
; ..\component\PduR\Implementation\PduR.c	   189   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   190   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   191   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   192   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   193   *  \note        This function must only be called by the reader core!
; ..\component\PduR\Implementation\PduR.c	   194   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   195  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_ReadFlush(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   196  #endif
; ..\component\PduR\Implementation\PduR.c	   197  
; ..\component\PduR\Implementation\PduR.c	   198  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   199  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   200   * PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe
; ..\component\PduR\Implementation\PduR.c	   201   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   202  /*! \brief       Gets the current read idx for the queue with optional error checking.
; ..\component\PduR\Implementation\PduR.c	   203   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   204   *  \param[in]   deferredEventCacheIdx    Id of the correct queue to be used
; ..\component\PduR\Implementation\PduR.c	   205   *  \param[in]   memIdx                   memory section index
; ..\component\PduR\Implementation\PduR.c	   206   *  \return      the read index
; ..\component\PduR\Implementation\PduR.c	   207   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   208   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   209   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   210   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   211   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   212  LOCAL_INLINE FUNC(PduR_DeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRamType, PDUR_CODE) PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   213  #endif
; ..\component\PduR\Implementation\PduR.c	   214  
; ..\component\PduR\Implementation\PduR.c	   215  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   216  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   217   * PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe
; ..\component\PduR\Implementation\PduR.c	   218   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   219  /*! \brief       Gets the current write idx for the queue with optional error checking.
; ..\component\PduR\Implementation\PduR.c	   220   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   221   *  \param[in]   deferredEventCacheIdx    Id of the correct queue to be used
; ..\component\PduR\Implementation\PduR.c	   222   *  \param[in]   memIdx                   memory section index
; ..\component\PduR\Implementation\PduR.c	   223   *  \return      the write index
; ..\component\PduR\Implementation\PduR.c	   224   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   225   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   226   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   227   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   228   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   229  LOCAL_INLINE FUNC(PduR_DeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRamType, PDUR_CODE) PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   230  #endif
; ..\component\PduR\Implementation\PduR.c	   231  
; ..\component\PduR\Implementation\PduR.c	   232  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   233  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   234   * PduR_EvC_IsFull
; ..\component\PduR\Implementation\PduR.c	   235   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   236  /*! \brief       Checks if the queue is full.
; ..\component\PduR\Implementation\PduR.c	   237   *  \details -
; ..\component\PduR\Implementation\PduR.c	   238   *  \param[in]   deferredEventCacheIdx    Id of the correct queue to be used
; ..\component\PduR\Implementation\PduR.c	   239   *  \param[in]   memIdx                   memory section index
; ..\component\PduR\Implementation\PduR.c	   240   *  \return      true                     Queue is full.
; ..\component\PduR\Implementation\PduR.c	   241   *               false                    Queue is not full.
; ..\component\PduR\Implementation\PduR.c	   242   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   243   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   244   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   245   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   246   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   247  LOCAL_INLINE FUNC(boolean, PDUR_CODE) PduR_EvC_IsFull(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR.c	   248  #endif
; ..\component\PduR\Implementation\PduR.c	   249  
; ..\component\PduR\Implementation\PduR.c	   250  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   251  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   252   * PduR_EvC_IsAnyEvCOverflowed
; ..\component\PduR\Implementation\PduR.c	   253   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   254  /*! \brief       Checks if any EvC for the destination application is overflowed.
; ..\component\PduR\Implementation\PduR.c	   255   *  \details -
; ..\component\PduR\Implementation\PduR.c	   256   *  \param[in]   destApplicationManagerRomIdx    Id of the destination application
; ..\component\PduR\Implementation\PduR.c	   257   *  \return      true                     Any EvC is overflowed.
; ..\component\PduR\Implementation\PduR.c	   258   *               false                    No EvC is overflowed.
; ..\component\PduR\Implementation\PduR.c	   259   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   260   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   261   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   262   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   263   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   264  LOCAL_INLINE FUNC(boolean, PDUR_CODE) PduR_EvC_IsAnyEvCOverflowed(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	   265  #endif
; ..\component\PduR\Implementation\PduR.c	   266  
; ..\component\PduR\Implementation\PduR.c	   267  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   268  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   269   * PduR_EvC_FlushAllEvCOfDestApplication
; ..\component\PduR\Implementation\PduR.c	   270   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   271  /*! \brief       Flushes all EvCs of the destination application.
; ..\component\PduR\Implementation\PduR.c	   272   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   273   *  \param[in]   destApplicationManagerRomIdx    Id of the destination application
; ..\component\PduR\Implementation\PduR.c	   274   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   275   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   276   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   277   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   278   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   279  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_FlushAllEvCOfDestApplication(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	   280  #endif
; ..\component\PduR\Implementation\PduR.c	   281  
; ..\component\PduR\Implementation\PduR.c	   282  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   283  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   284   * PduR_EvC_ReadAndProcessEvCOfDestApplication
; ..\component\PduR\Implementation\PduR.c	   285   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   286  /*! \brief       Read and process the event cache of this destination application
; ..\component\PduR\Implementation\PduR.c	   287   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   288   *  \param[in]   destApplicationManagerRomIdx    Id of the destination application
; ..\component\PduR\Implementation\PduR.c	   289   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   290   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   291   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   292   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   293   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   294  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_ReadAndProcessEvCOfDestApplication(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	   295  #endif
; ..\component\PduR\Implementation\PduR.c	   296  
; ..\component\PduR\Implementation\PduR.c	   297  #if ((PDUR_MAIN_FUNCTION == STD_ON) && ((PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)))
; ..\component\PduR\Implementation\PduR.c	   298  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   299   * PduR_ProcessAllDestinationsOfDestApplication
; ..\component\PduR\Implementation\PduR.c	   300   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   301  /*! \brief       Process all destinations on this destination application
; ..\component\PduR\Implementation\PduR.c	   302   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   303   *  \param[in]   destApplicationManagerRomIdx    Id of the destination application
; ..\component\PduR\Implementation\PduR.c	   304   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   305   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   306   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   307   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   308   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   309  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_ProcessAllDestinationsOfDestApplication(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	   310  #endif
; ..\component\PduR\Implementation\PduR.c	   311  
; ..\component\PduR\Implementation\PduR.c	   312  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   313  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   314   * PduR_IsRmGDestIdxValidOnApplication
; ..\component\PduR\Implementation\PduR.c	   315   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   316  /*! \brief       Checks if this global destination handle is assigned to the provided application.
; ..\component\PduR\Implementation\PduR.c	   317   *  \details -
; ..\component\PduR\Implementation\PduR.c	   318   *  \param[in]   rmGDestRomIdx    rmGDest handle id
; ..\component\PduR\Implementation\PduR.c	   319   *  \param[in]   applicationId    application handled id
; ..\component\PduR\Implementation\PduR.c	   320   *  \return      true             rmGDest is running on applicationId
; ..\component\PduR\Implementation\PduR.c	   321   *               false            rmGDest is not running on applicationId
; ..\component\PduR\Implementation\PduR.c	   322   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   323   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   324   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   325   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   326   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   327  LOCAL_INLINE FUNC(boolean, PDUR_CODE) PduR_IsRmGDestIdxValidOnApplication(PduR_RmGDestRomIterType rmGDestRomIdx, PduR_DestApplicationManagerRomIterType applicationId);
; ..\component\PduR\Implementation\PduR.c	   328  #endif
; ..\component\PduR\Implementation\PduR.c	   329  
; ..\component\PduR\Implementation\PduR.c	   330  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   331  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   332   *  PduR_CreatePartitionLookupTable
; ..\component\PduR\Implementation\PduR.c	   333   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   334  /*! \brief       Create the partition lookup table which maps the OsApplicationId to the internal ComStackLib Id
; ..\component\PduR\Implementation\PduR.c	   335   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   336   *  \pre         -
; ..\component\PduR\Implementation\PduR.c	   337   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   338   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   339   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   340   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   341  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_CreatePartitionLookupTable(void);
; ..\component\PduR\Implementation\PduR.c	   342  #endif
; ..\component\PduR\Implementation\PduR.c	   343  
; ..\component\PduR\Implementation\PduR.c	   344  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   345  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   346   *  PduR_GetMemorySectionIndexOfOsApplication
; ..\component\PduR\Implementation\PduR.c	   347   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   348  /*! \brief       Get the current memory section index which is assigned to the OsApplication this function is running in.
; ..\component\PduR\Implementation\PduR.c	   349   *  \details     -
; ..\component\PduR\Implementation\PduR.c	   350   *  \param[in]   applicationId  Id of the OsApplication this function is running in.
; ..\component\PduR\Implementation\PduR.c	   351   *  \return      memory section index
; ..\component\PduR\Implementation\PduR.c	   352   *  \pre         PduR_PreInit was called before. This function calculated the mapping between OsApplicationId and the internal CSL memory section Id.
; ..\component\PduR\Implementation\PduR.c	   353   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   354   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   355   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   356   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   357  LOCAL_INLINE FUNC(PduR_MemIdxType, PDUR_CODE) PduR_GetMemorySectionIndexOfOsApplication(ApplicationType applicationId);
; ..\component\PduR\Implementation\PduR.c	   358  #endif
; ..\component\PduR\Implementation\PduR.c	   359  
; ..\component\PduR\Implementation\PduR.c	   360  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   361   *  PduR_GetMemIdx
; ..\component\PduR\Implementation\PduR.c	   362   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   363  /*! \brief       Get the current memory section index which is assigned to the OsApplication this function is running in.
; ..\component\PduR\Implementation\PduR.c	   364   *  \details     For single core configuration a default value will be returned.
; ..\component\PduR\Implementation\PduR.c	   365   *  \return      memory section index
; ..\component\PduR\Implementation\PduR.c	   366   *  \pre         PduR_PreInit was called before. This function calculated the mapping between OsApplicationId and the internal CSL memory section Id.
; ..\component\PduR\Implementation\PduR.c	   367   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR.c	   368   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR.c	   369   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR.c	   370   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   371  LOCAL_INLINE FUNC(PduR_MemIdxType, PDUR_CODE) PduR_GetMemIdx(void);
; ..\component\PduR\Implementation\PduR.c	   372  
; ..\component\PduR\Implementation\PduR.c	   373  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   374   * LOCAL DATA PROTOTYPES
; ..\component\PduR\Implementation\PduR.c	   375   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   376  
; ..\component\PduR\Implementation\PduR.c	   377  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   378   * GLOBAL DATA PROTOTYPES
; ..\component\PduR\Implementation\PduR.c	   379   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   380  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   381   * GLOBAL AND LOCAL FUNCTIONS
; ..\component\PduR\Implementation\PduR.c	   382   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   383  #if(PDUR_VERSION_INFO_API == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   384  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   385   * PduR_GetVersionInfo
; ..\component\PduR\Implementation\PduR.c	   386   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   387  /*!
; ..\component\PduR\Implementation\PduR.c	   388   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   389   *
; ..\component\PduR\Implementation\PduR.c	   390   *
; ..\component\PduR\Implementation\PduR.c	   391   *
; ..\component\PduR\Implementation\PduR.c	   392   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   393  FUNC(void, PDUR_CODE) PduR_GetVersionInfo(P2VAR(Std_VersionInfoType, AUTOMATIC, PDUR_APPL_DATA) versionInfo)
; ..\component\PduR\Implementation\PduR.c	   394  {
; ..\component\PduR\Implementation\PduR.c	   395    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   396    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   397  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   398    /* Check parameter 'ConfigPtr' */
; ..\component\PduR\Implementation\PduR.c	   399    if(versionInfo == NULL_PTR)
; ..\component\PduR\Implementation\PduR.c	   400    {
; ..\component\PduR\Implementation\PduR.c	   401      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR.c	   402    }
; ..\component\PduR\Implementation\PduR.c	   403    else
; ..\component\PduR\Implementation\PduR.c	   404  # endif
; ..\component\PduR\Implementation\PduR.c	   405    {
; ..\component\PduR\Implementation\PduR.c	   406      versionInfo->vendorID = (uint16) PDUR_VENDOR_ID;    /* SBSW_PDUR_GETVERSION_PARAM */
; ..\component\PduR\Implementation\PduR.c	   407      versionInfo->moduleID = (uint8) PDUR_MODULE_ID;     /* SBSW_PDUR_GETVERSION_PARAM */
; ..\component\PduR\Implementation\PduR.c	   408      versionInfo->sw_major_version = (uint8) PDUR_SW_MAJOR_VERSION;      /* SBSW_PDUR_GETVERSION_PARAM */
; ..\component\PduR\Implementation\PduR.c	   409      versionInfo->sw_minor_version = (uint8) PDUR_SW_MINOR_VERSION;      /* SBSW_PDUR_GETVERSION_PARAM */
; ..\component\PduR\Implementation\PduR.c	   410      versionInfo->sw_patch_version = (uint8) PDUR_SW_PATCH_VERSION;      /* SBSW_PDUR_GETVERSION_PARAM */
; ..\component\PduR\Implementation\PduR.c	   411    }
; ..\component\PduR\Implementation\PduR.c	   412    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   413  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   414    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	   415    {
; ..\component\PduR\Implementation\PduR.c	   416      PduR_Det_ReportError(PDUR_FCT_VERSIONINFO, errorId);
; ..\component\PduR\Implementation\PduR.c	   417    }
; ..\component\PduR\Implementation\PduR.c	   418  # else
; ..\component\PduR\Implementation\PduR.c	   419    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   420  # endif
; ..\component\PduR\Implementation\PduR.c	   421  }       /* End of PduR_GetVersionInfo() */
; ..\component\PduR\Implementation\PduR.c	   422  #endif
; ..\component\PduR\Implementation\PduR.c	   423  
; ..\component\PduR\Implementation\PduR.c	   424  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   425   * PduR_GetConfigurationId
; ..\component\PduR\Implementation\PduR.c	   426   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   427  /*!
; ..\component\PduR\Implementation\PduR.c	   428   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   429   *
; ..\component\PduR\Implementation\PduR.c	   430   *
; ..\component\PduR\Implementation\PduR.c	   431   *
; ..\component\PduR\Implementation\PduR.c	   432   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   433  FUNC(PduR_PBConfigIdType, PDUR_CODE) PduR_GetConfigurationId(void)
; Function PduR_GetConfigurationId
.L36:
PduR_GetConfigurationId:	.type	func

; ..\component\PduR\Implementation\PduR.c	   434  {
; ..\component\PduR\Implementation\PduR.c	   435    uint16 configID = 0u;         /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   436    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   437    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   438  
; ..\component\PduR\Implementation\PduR.c	   439    if(!PduR_IsPreInitialized())
	mov	d0,#0
	fcall	.cocofun_1
	jeq	d15,#0,.L2
.L170:

; ..\component\PduR\Implementation\PduR.c	   440    {
; ..\component\PduR\Implementation\PduR.c	   441      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   442    }
; ..\component\PduR\Implementation\PduR.c	   443    else if(!PduR_IsInitialized(PduR_GetMemIdx()))
	fcall	.cocofun_2
	jne	d15,#0,.L3
.L2:

; ..\component\PduR\Implementation\PduR.c	   444    {
; ..\component\PduR\Implementation\PduR.c	   445      errorId = PDUR_E_INVALID_REQUEST;
	mov	d0,#1
.L3:

; ..\component\PduR\Implementation\PduR.c	   446    }
; ..\component\PduR\Implementation\PduR.c	   447    else
; ..\component\PduR\Implementation\PduR.c	   448    {
; ..\component\PduR\Implementation\PduR.c	   449      configID = PduR_GetConfigId(partitionIndexOfCSLForCommonSharedMemory);
; ..\component\PduR\Implementation\PduR.c	   450    }
; ..\component\PduR\Implementation\PduR.c	   451    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   452  #if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   453    if(errorId != PDUR_E_NO_ERROR)
	jeq	d0,#0,.L4
.L171:

; ..\component\PduR\Implementation\PduR.c	   454    {
; ..\component\PduR\Implementation\PduR.c	   455      PduR_Det_ReportError(PDUR_FCT_CONFIGURATIONID, errorId);
	fcall	.cocofun_3
.L151:
	mov	d6,#242
.L152:
	mov	d7,#1
	call	Det_ReportError
.L4:

; ..\component\PduR\Implementation\PduR.c	   456    }
; ..\component\PduR\Implementation\PduR.c	   457  #else
; ..\component\PduR\Implementation\PduR.c	   458    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   459  #endif
; ..\component\PduR\Implementation\PduR.c	   460    return configID;
; ..\component\PduR\Implementation\PduR.c	   461  }       /* End of PduR_GetConfigurationId() */
	mov	d2,#0
	ret
.L117:
	
__PduR_GetConfigurationId_function_end:
	.size	PduR_GetConfigurationId,__PduR_GetConfigurationId_function_end-PduR_GetConfigurationId
.L65:
	; End of function
	
	.sdecl	'.text.PduR..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.PduR..cocofun_3'
	.align	2
; Function .cocofun_3
.L38:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	mov	d4,#51
.L238:
	mov	d5,#0
	fret
.L115:
	; End of function
	.sdecl	'.text.PduR..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.PduR..cocofun_2'
	.align	2
; Function .cocofun_2
.L40:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	movh.a	a15,#@his(PduR_PCPartitionConfig)
	ld.a	a15,[a15]@los(PduR_PCPartitionConfig)
	ld.bu	d15,[a15]
.L233:
	fret
.L110:
	; End of function
	.sdecl	'.text.PduR..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.PduR..cocofun_1'
	.align	2
; Function .cocofun_1
.L42:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	movh.a	a15,#@his(PduR_PreInitialized)
.L150:
	ld.bu	d15,[a15]@los(PduR_PreInitialized)
.L228:
	fret
.L105:
	; End of function
	.sdecl	'.text.PduR.PduR_UpTransmit',code,cluster('PduR_UpTransmit')
	.sect	'.text.PduR.PduR_UpTransmit'
	.align	2
	
	.global	PduR_UpTransmit

; ..\component\PduR\Implementation\PduR.c	   462  
; ..\component\PduR\Implementation\PduR.c	   463  /* Upper Layer Interface APIs */
; ..\component\PduR\Implementation\PduR.c	   464  #if (PDUR_TX2LO == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   465  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   466   * PduR_UpTransmit
; ..\component\PduR\Implementation\PduR.c	   467   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   468  /*!
; ..\component\PduR\Implementation\PduR.c	   469   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   470   *
; ..\component\PduR\Implementation\PduR.c	   471   *
; ..\component\PduR\Implementation\PduR.c	   472   *
; ..\component\PduR\Implementation\PduR.c	   473   *
; ..\component\PduR\Implementation\PduR.c	   474   *
; ..\component\PduR\Implementation\PduR.c	   475   *
; ..\component\PduR\Implementation\PduR.c	   476   *
; ..\component\PduR\Implementation\PduR.c	   477   *
; ..\component\PduR\Implementation\PduR.c	   478   *
; ..\component\PduR\Implementation\PduR.c	   479   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   480  FUNC(Std_ReturnType, PDUR_CODE) PduR_UpTransmit(PduIdType id, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; Function PduR_UpTransmit
.L44:
PduR_UpTransmit:	.type	func

; ..\component\PduR\Implementation\PduR.c	   481  {
; ..\component\PduR\Implementation\PduR.c	   482    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   483    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
	mov	d8,#0
.L155:

; ..\component\PduR\Implementation\PduR.c	   484    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   485  
; ..\component\PduR\Implementation\PduR.c	   486    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   487  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   488    if(!PduR_IsPreInitialized())
	mov	d9,#1
	fcall	.cocofun_1
	jeq	d15,#0,.L6
.L196:

; ..\component\PduR\Implementation\PduR.c	   489    {
; ..\component\PduR\Implementation\PduR.c	   490      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   491    }
; ..\component\PduR\Implementation\PduR.c	   492    else if((id >= PduR_GetSizeOfTx2Lo())
	jlt.u	d4,#3,.L7
.L197:

; ..\component\PduR\Implementation\PduR.c	   493  #  if (PDUR_INVALIDHNDOFTX2LO == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   494            || (PduR_IsInvalidHndOfTx2Lo(id))
; ..\component\PduR\Implementation\PduR.c	   495  #  endif
; ..\component\PduR\Implementation\PduR.c	   496      )
; ..\component\PduR\Implementation\PduR.c	   497    {
; ..\component\PduR\Implementation\PduR.c	   498      errorId = PDUR_E_PDU_ID_INVALID;
	mov	d8,#2
	j	.L8
.L7:

; ..\component\PduR\Implementation\PduR.c	   499    }
; ..\component\PduR\Implementation\PduR.c	   500    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfTx2Lo(id)))
	movh.a	a15,#@his(PduR_Tx2Lo)
	lea	a15,[a15]@los(PduR_Tx2Lo)
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
	movh.a	a15,#@his(PduR_PCPartitionConfig)
	lea	a15,[a15]@los(PduR_PCPartitionConfig)
	addsc.a	a15,a15,d15,#2
	sha	d0,d15,#2
	ld.a	a15,[a15]
	ld.bu	d15,[a15]
	jne	d15,#0,.L9
.L6:

; ..\component\PduR\Implementation\PduR.c	   501    {
; ..\component\PduR\Implementation\PduR.c	   502      errorId = PDUR_E_INVALID_REQUEST;
	mov	d8,d9
	j	.L10
.L9:

; ..\component\PduR\Implementation\PduR.c	   503    }
; ..\component\PduR\Implementation\PduR.c	   504    else
; ..\component\PduR\Implementation\PduR.c	   505  # endif
; ..\component\PduR\Implementation\PduR.c	   506    {
; ..\component\PduR\Implementation\PduR.c	   507      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   508  # if (PDUR_BSWMPDURTRANSMITCALLBACKOFTX2LO == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   509      if(PduR_IsBswMPduRTransmitCallbackOfTx2Lo(id))
; ..\component\PduR\Implementation\PduR.c	   510      {
; ..\component\PduR\Implementation\PduR.c	   511        BswM_PduR_Transmit(id, info);     /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   512      }
; ..\component\PduR\Implementation\PduR.c	   513  # endif
; ..\component\PduR\Implementation\PduR.c	   514      {
; ..\component\PduR\Implementation\PduR.c	   515        { /* 1:N Tx If API Forwarding; 1:1 Tx Tp API Forwarding */
; ..\component\PduR\Implementation\PduR.c	   516          retVal = PduR_GetRmTransmitFctPtr(PduR_GetRmTransmitFctPtrIdxOfTx2Lo(id)) (PduR_GetRmSrcRomIdxOfTx2Lo(id), info);       /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
	movh.a	a15,#@his(PduR_RmTransmitFctPtr)
	lea	a15,[a15]@los(PduR_RmTransmitFctPtr)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]
.L198:
	add	d4,#1
.L153:
	calli	a15
.L154:
	mov	d9,d2
.L10:
.L8:

; ..\component\PduR\Implementation\PduR.c	   517        }
; ..\component\PduR\Implementation\PduR.c	   518      }
; ..\component\PduR\Implementation\PduR.c	   519    }
; ..\component\PduR\Implementation\PduR.c	   520  
; ..\component\PduR\Implementation\PduR.c	   521    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   522  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   523    if(errorId != PDUR_E_NO_ERROR)
	jeq	d8,#0,.L11
.L199:

; ..\component\PduR\Implementation\PduR.c	   524    {
; ..\component\PduR\Implementation\PduR.c	   525      PduR_Det_ReportError(PDUR_FCT_TX, errorId);
	fcall	.cocofun_3
	mov	d6,#200
	mov	d7,d8
	call	Det_ReportError
.L11:

; ..\component\PduR\Implementation\PduR.c	   526    }
; ..\component\PduR\Implementation\PduR.c	   527  # else
; ..\component\PduR\Implementation\PduR.c	   528    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   529  # endif
; ..\component\PduR\Implementation\PduR.c	   530  
; ..\component\PduR\Implementation\PduR.c	   531    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   532    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   533  
; ..\component\PduR\Implementation\PduR.c	   534    return retVal;
; ..\component\PduR\Implementation\PduR.c	   535  }
	mov	d2,d9
	ret
.L133:
	
__PduR_UpTransmit_function_end:
	.size	PduR_UpTransmit,__PduR_UpTransmit_function_end-PduR_UpTransmit
.L85:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LoIfRxIndication',code,cluster('PduR_LoIfRxIndication')
	.sect	'.text.PduR.PduR_LoIfRxIndication'
	.align	2
	
	.global	PduR_LoIfRxIndication

; ..\component\PduR\Implementation\PduR.c	   536  #endif
; ..\component\PduR\Implementation\PduR.c	   537  
; ..\component\PduR\Implementation\PduR.c	   538  /* Communication Interface APIs */
; ..\component\PduR\Implementation\PduR.c	   539  #if (PDUR_RXIF2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   540  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   541   * PduR_LoIfRxIndication
; ..\component\PduR\Implementation\PduR.c	   542   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   543  /*!
; ..\component\PduR\Implementation\PduR.c	   544   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   545   *
; ..\component\PduR\Implementation\PduR.c	   546   *
; ..\component\PduR\Implementation\PduR.c	   547   *
; ..\component\PduR\Implementation\PduR.c	   548   *
; ..\component\PduR\Implementation\PduR.c	   549   *
; ..\component\PduR\Implementation\PduR.c	   550   *
; ..\component\PduR\Implementation\PduR.c	   551   *
; ..\component\PduR\Implementation\PduR.c	   552   *
; ..\component\PduR\Implementation\PduR.c	   553   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   554  FUNC(void, PDUR_CODE) PduR_LoIfRxIndication(PduIdType RxPduId, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; Function PduR_LoIfRxIndication
.L46:
PduR_LoIfRxIndication:	.type	func

; ..\component\PduR\Implementation\PduR.c	   555  {
; ..\component\PduR\Implementation\PduR.c	   556    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   557    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   558  
; ..\component\PduR\Implementation\PduR.c	   559    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   560  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   561    if(!PduR_IsPreInitialized())
	mov	d8,#0
	fcall	.cocofun_1
	jeq	d15,#0,.L13
.L204:

; ..\component\PduR\Implementation\PduR.c	   562    {
; ..\component\PduR\Implementation\PduR.c	   563      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   564    }
; ..\component\PduR\Implementation\PduR.c	   565    else if((RxPduId >= PduR_GetSizeOfRxIf2Dest())
	jeq	d4,#0,.L14
.L205:

; ..\component\PduR\Implementation\PduR.c	   566  #  if (PDUR_INVALIDHNDOFRXIF2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   567            || (PduR_IsInvalidHndOfRxIf2Dest(RxPduId))
; ..\component\PduR\Implementation\PduR.c	   568  #  endif
; ..\component\PduR\Implementation\PduR.c	   569      )
; ..\component\PduR\Implementation\PduR.c	   570    {
; ..\component\PduR\Implementation\PduR.c	   571      errorId = PDUR_E_PDU_ID_INVALID;
	mov	d8,#2
	j	.L15
.L14:

; ..\component\PduR\Implementation\PduR.c	   572    }
; ..\component\PduR\Implementation\PduR.c	   573    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfRxIf2Dest(RxPduId)))
	fcall	.cocofun_2
.L156:
	jne	d15,#0,.L16
.L13:

; ..\component\PduR\Implementation\PduR.c	   574    {
; ..\component\PduR\Implementation\PduR.c	   575      errorId = PDUR_E_INVALID_REQUEST;
	mov	d8,#1
	j	.L17
.L16:

; ..\component\PduR\Implementation\PduR.c	   576    }
; ..\component\PduR\Implementation\PduR.c	   577    else
; ..\component\PduR\Implementation\PduR.c	   578  # endif
; ..\component\PduR\Implementation\PduR.c	   579    {
; ..\component\PduR\Implementation\PduR.c	   580      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   581  # if (PDUR_BSWMPDURRXINDICATIONCALLBACKOFRXIF2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   582      if(PduR_IsBswMPduRRxIndicationCallbackOfRxIf2Dest(RxPduId))
; ..\component\PduR\Implementation\PduR.c	   583      {
; ..\component\PduR\Implementation\PduR.c	   584        BswM_PduR_RxIndication(RxPduId, info);    /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   585      }
; ..\component\PduR\Implementation\PduR.c	   586  # endif
; ..\component\PduR\Implementation\PduR.c	   587      {
; ..\component\PduR\Implementation\PduR.c	   588        (void) PduR_RmIf_RoutePdu(PduR_GetRmSrcRomIdxOfRxIf2Dest(RxPduId), info);     /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
	call	PduR_RmIf_RoutePdu
.L17:
.L15:

; ..\component\PduR\Implementation\PduR.c	   589      }
; ..\component\PduR\Implementation\PduR.c	   590    }
; ..\component\PduR\Implementation\PduR.c	   591  
; ..\component\PduR\Implementation\PduR.c	   592    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   593  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   594    if(errorId != PDUR_E_NO_ERROR)
	jeq	d8,#0,.L18
.L206:

; ..\component\PduR\Implementation\PduR.c	   595    {
; ..\component\PduR\Implementation\PduR.c	   596      PduR_Det_ReportError(PDUR_FCT_IFRXIND, errorId);
	fcall	.cocofun_3
	mov	d6,#201
	mov	d7,d8
.L157:
	j	Det_ReportError
.L18:

; ..\component\PduR\Implementation\PduR.c	   597    }
; ..\component\PduR\Implementation\PduR.c	   598  # else
; ..\component\PduR\Implementation\PduR.c	   599    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   600  # endif
; ..\component\PduR\Implementation\PduR.c	   601  
; ..\component\PduR\Implementation\PduR.c	   602    PDUR_DUMMY_STATEMENT(RxPduId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   603    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   604  }
	ret
.L139:
	
__PduR_LoIfRxIndication_function_end:
	.size	PduR_LoIfRxIndication,__PduR_LoIfRxIndication_function_end-PduR_LoIfRxIndication
.L90:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LoIfTxConfirmation',code,cluster('PduR_LoIfTxConfirmation')
	.sect	'.text.PduR.PduR_LoIfTxConfirmation'
	.align	2
	
	.global	PduR_LoIfTxConfirmation

; ..\component\PduR\Implementation\PduR.c	   605  #endif
; ..\component\PduR\Implementation\PduR.c	   606  
; ..\component\PduR\Implementation\PduR.c	   607  #if (PDUR_TXCONFIRMATIONUSEDOFTXIF2UP == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   608  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   609   * PduR_LoIfTxConfirmation
; ..\component\PduR\Implementation\PduR.c	   610   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   611  /*!
; ..\component\PduR\Implementation\PduR.c	   612   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   613   *
; ..\component\PduR\Implementation\PduR.c	   614   *
; ..\component\PduR\Implementation\PduR.c	   615   *
; ..\component\PduR\Implementation\PduR.c	   616   *
; ..\component\PduR\Implementation\PduR.c	   617   *
; ..\component\PduR\Implementation\PduR.c	   618   *
; ..\component\PduR\Implementation\PduR.c	   619   *
; ..\component\PduR\Implementation\PduR.c	   620   *
; ..\component\PduR\Implementation\PduR.c	   621   *
; ..\component\PduR\Implementation\PduR.c	   622   *
; ..\component\PduR\Implementation\PduR.c	   623   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   624  FUNC(void, PDUR_CODE) PduR_LoIfTxConfirmation(PduIdType TxPduId)
; Function PduR_LoIfTxConfirmation
.L48:
PduR_LoIfTxConfirmation:	.type	func

; ..\component\PduR\Implementation\PduR.c	   625  {
; ..\component\PduR\Implementation\PduR.c	   626    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   627    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   628  
; ..\component\PduR\Implementation\PduR.c	   629    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   630  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   631    if(!PduR_IsPreInitialized())
	mov	d8,#0
	fcall	.cocofun_1
	jeq	d15,#0,.L19
.L211:

; ..\component\PduR\Implementation\PduR.c	   632    {
; ..\component\PduR\Implementation\PduR.c	   633      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   634    }
; ..\component\PduR\Implementation\PduR.c	   635    else if((TxPduId >= PduR_GetSizeOfTxIf2Up())
	jlt.u	d4,#3,.L20
.L212:

; ..\component\PduR\Implementation\PduR.c	   636  #  if (PDUR_INVALIDHNDOFTXIF2UP == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   637            || (PduR_IsInvalidHndOfTxIf2Up(TxPduId))
; ..\component\PduR\Implementation\PduR.c	   638  #  endif
; ..\component\PduR\Implementation\PduR.c	   639      )
; ..\component\PduR\Implementation\PduR.c	   640    {
; ..\component\PduR\Implementation\PduR.c	   641      errorId = PDUR_E_PDU_ID_INVALID;
	mov	d8,#2
	j	.L21
.L20:

; ..\component\PduR\Implementation\PduR.c	   642    }
; ..\component\PduR\Implementation\PduR.c	   643    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfTxIf2Up(TxPduId)))
	movh.a	a15,#@his(PduR_TxIf2Up)
	lea	a15,[a15]@los(PduR_TxIf2Up)
	addsc.a	a15,a15,d4,#2
	movh.a	a2,#@his(PduR_PCPartitionConfig)
	ld.bu	d15,[a15]1
	lea	a2,[a2]@los(PduR_PCPartitionConfig)
	addsc.a	a2,a2,d15,#2
	ld.a	a2,[a2]
	ld.bu	d15,[a2]
	jne	d15,#0,.L22
.L19:

; ..\component\PduR\Implementation\PduR.c	   644    {
; ..\component\PduR\Implementation\PduR.c	   645      errorId = PDUR_E_INVALID_REQUEST;
	mov	d8,#1
	j	.L23
.L22:

; ..\component\PduR\Implementation\PduR.c	   646    }
; ..\component\PduR\Implementation\PduR.c	   647    else
; ..\component\PduR\Implementation\PduR.c	   648  # endif
; ..\component\PduR\Implementation\PduR.c	   649    {
; ..\component\PduR\Implementation\PduR.c	   650      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   651  # if (PDUR_BSWMPDURTXCONFIRMATIONCALLBACKOFTXIF2UP == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   652      if(PduR_IsBswMPduRTxConfirmationCallbackOfTxIf2Up(TxPduId))
; ..\component\PduR\Implementation\PduR.c	   653      {
; ..\component\PduR\Implementation\PduR.c	   654        BswM_PduR_TxConfirmation(TxPduId);
; ..\component\PduR\Implementation\PduR.c	   655      }
; ..\component\PduR\Implementation\PduR.c	   656  # endif
; ..\component\PduR\Implementation\PduR.c	   657  # if (PDUR_TXCONFIRMATIONUSEDOFTXIF2UP == STD_ON)       /* COV_PDUR_VAR_LINIF_SPECIAL_CONFIGURATION */
; ..\component\PduR\Implementation\PduR.c	   658      if(PduR_IsTxConfirmationUsedOfTxIf2Up(TxPduId))     /* COV_PDUR_FEATURE_ALWAYS_TRUE */
	ld.bu	d15,[a15]
.L213:
	jeq	d15,#0,.L24
.L214:

; ..\component\PduR\Implementation\PduR.c	   659      {
; ..\component\PduR\Implementation\PduR.c	   660        PduR_RmIf_MultipleSourceHandler_TxConfirmation(PduR_GetRmGDestRomIdxOfTxIf2Up(TxPduId));
	ld.bu	d4,[a15]2
.L158:
	call	PduR_RmIf_MultipleSourceHandler_TxConfirmation
.L24:
.L23:
.L21:

; ..\component\PduR\Implementation\PduR.c	   661      }
; ..\component\PduR\Implementation\PduR.c	   662  # endif
; ..\component\PduR\Implementation\PduR.c	   663    }
; ..\component\PduR\Implementation\PduR.c	   664  
; ..\component\PduR\Implementation\PduR.c	   665    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   666  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   667    if(errorId != PDUR_E_NO_ERROR)
	jeq	d8,#0,.L25
.L215:

; ..\component\PduR\Implementation\PduR.c	   668    {
; ..\component\PduR\Implementation\PduR.c	   669      PduR_Det_ReportError(PDUR_FCT_IFTXCFM, errorId);
	fcall	.cocofun_3
	mov	d6,#202
	mov	d7,d8
.L159:
	j	Det_ReportError
.L25:

; ..\component\PduR\Implementation\PduR.c	   670    }
; ..\component\PduR\Implementation\PduR.c	   671  # else
; ..\component\PduR\Implementation\PduR.c	   672    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   673  # endif
; ..\component\PduR\Implementation\PduR.c	   674  
; ..\component\PduR\Implementation\PduR.c	   675    PDUR_DUMMY_STATEMENT(TxPduId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   676  }
	ret
.L143:
	
__PduR_LoIfTxConfirmation_function_end:
	.size	PduR_LoIfTxConfirmation,__PduR_LoIfTxConfirmation_function_end-PduR_LoIfTxConfirmation
.L95:
	; End of function
	
	.sdecl	'.text.PduR.PduR_PreInit',code,cluster('PduR_PreInit')
	.sect	'.text.PduR.PduR_PreInit'
	.align	2
	
	.global	PduR_PreInit

; ..\component\PduR\Implementation\PduR.c	   677  #endif
; ..\component\PduR\Implementation\PduR.c	   678  
; ..\component\PduR\Implementation\PduR.c	   679  #if ((PDUR_TRIGGERTRANSMITSUPPORTEDOFRMSRCROM == STD_ON) || (PDUR_EXISTS_TRIGGER_TRANSMIT_QUEUEDATAPROVISIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	   680  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   681   * PduR_LoIfTriggerTransmit
; ..\component\PduR\Implementation\PduR.c	   682   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   683  /*!
; ..\component\PduR\Implementation\PduR.c	   684   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   685   *
; ..\component\PduR\Implementation\PduR.c	   686   *
; ..\component\PduR\Implementation\PduR.c	   687   *
; ..\component\PduR\Implementation\PduR.c	   688   *
; ..\component\PduR\Implementation\PduR.c	   689   *
; ..\component\PduR\Implementation\PduR.c	   690   *
; ..\component\PduR\Implementation\PduR.c	   691   *
; ..\component\PduR\Implementation\PduR.c	   692   *
; ..\component\PduR\Implementation\PduR.c	   693   *
; ..\component\PduR\Implementation\PduR.c	   694   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   695  FUNC(Std_ReturnType, PDUR_CODE) PduR_LoIfTriggerTransmit(PduIdType TxPduId, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR.c	   696  {
; ..\component\PduR\Implementation\PduR.c	   697    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   698    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   699    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   700  
; ..\component\PduR\Implementation\PduR.c	   701    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   702  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   703    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	   704    {
; ..\component\PduR\Implementation\PduR.c	   705      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   706    }
; ..\component\PduR\Implementation\PduR.c	   707    else if((TxPduId >= PduR_GetSizeOfTxIf2Up())
; ..\component\PduR\Implementation\PduR.c	   708  #  if (PDUR_INVALIDHNDOFTXIF2UP == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   709            || (PduR_IsInvalidHndOfTxIf2Up(TxPduId))
; ..\component\PduR\Implementation\PduR.c	   710  #  endif
; ..\component\PduR\Implementation\PduR.c	   711      )
; ..\component\PduR\Implementation\PduR.c	   712    {
; ..\component\PduR\Implementation\PduR.c	   713      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	   714    }
; ..\component\PduR\Implementation\PduR.c	   715    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfTxIf2Up(TxPduId)))
; ..\component\PduR\Implementation\PduR.c	   716    {
; ..\component\PduR\Implementation\PduR.c	   717      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   718    }
; ..\component\PduR\Implementation\PduR.c	   719    else
; ..\component\PduR\Implementation\PduR.c	   720  # endif
; ..\component\PduR\Implementation\PduR.c	   721    {
; ..\component\PduR\Implementation\PduR.c	   722      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   723      retVal = PduR_RmIf_MultipleSourceHandler_TriggerTransmit(PduR_GetRmGDestRomIdxOfTxIf2Up(TxPduId), info);    /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   724    }
; ..\component\PduR\Implementation\PduR.c	   725  
; ..\component\PduR\Implementation\PduR.c	   726    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   727  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   728    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	   729    {
; ..\component\PduR\Implementation\PduR.c	   730      PduR_Det_ReportError(PDUR_FCT_TT, errorId);
; ..\component\PduR\Implementation\PduR.c	   731    }
; ..\component\PduR\Implementation\PduR.c	   732  # else
; ..\component\PduR\Implementation\PduR.c	   733    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   734  # endif
; ..\component\PduR\Implementation\PduR.c	   735  
; ..\component\PduR\Implementation\PduR.c	   736    PDUR_DUMMY_STATEMENT(TxPduId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   737    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   738  
; ..\component\PduR\Implementation\PduR.c	   739    return retVal;
; ..\component\PduR\Implementation\PduR.c	   740  }
; ..\component\PduR\Implementation\PduR.c	   741  #endif
; ..\component\PduR\Implementation\PduR.c	   742  /* Transport Protocol APIs */
; ..\component\PduR\Implementation\PduR.c	   743  #if (PDUR_RXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   744  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   745   * PduR_LoTpStartOfReception
; ..\component\PduR\Implementation\PduR.c	   746   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   747  /*!
; ..\component\PduR\Implementation\PduR.c	   748   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   749   *
; ..\component\PduR\Implementation\PduR.c	   750   *
; ..\component\PduR\Implementation\PduR.c	   751   *
; ..\component\PduR\Implementation\PduR.c	   752   *
; ..\component\PduR\Implementation\PduR.c	   753   *
; ..\component\PduR\Implementation\PduR.c	   754   *
; ..\component\PduR\Implementation\PduR.c	   755   *
; ..\component\PduR\Implementation\PduR.c	   756   *
; ..\component\PduR\Implementation\PduR.c	   757   *
; ..\component\PduR\Implementation\PduR.c	   758   *
; ..\component\PduR\Implementation\PduR.c	   759   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   760  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LoTpStartOfReception(PduIdType id, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, PduLengthType TpSduLength,
; ..\component\PduR\Implementation\PduR.c	   761                                                               P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR.c	   762  {
; ..\component\PduR\Implementation\PduR.c	   763    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   764    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   765    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   766  
; ..\component\PduR\Implementation\PduR.c	   767    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   768  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   769    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	   770    {
; ..\component\PduR\Implementation\PduR.c	   771      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   772    }
; ..\component\PduR\Implementation\PduR.c	   773    else if((id >= PduR_GetSizeOfRxTp2Dest())
; ..\component\PduR\Implementation\PduR.c	   774  #  if (PDUR_INVALIDHNDOFRXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   775            || (PduR_IsInvalidHndOfRxTp2Dest(id))
; ..\component\PduR\Implementation\PduR.c	   776  #  endif
; ..\component\PduR\Implementation\PduR.c	   777      )
; ..\component\PduR\Implementation\PduR.c	   778    {
; ..\component\PduR\Implementation\PduR.c	   779      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	   780    }
; ..\component\PduR\Implementation\PduR.c	   781    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfRxTp2Dest(id)))
; ..\component\PduR\Implementation\PduR.c	   782    {
; ..\component\PduR\Implementation\PduR.c	   783      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   784    }
; ..\component\PduR\Implementation\PduR.c	   785    else
; ..\component\PduR\Implementation\PduR.c	   786  # endif
; ..\component\PduR\Implementation\PduR.c	   787    {
; ..\component\PduR\Implementation\PduR.c	   788      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   789      PduR_RmSrcRomIdxOfRxTp2DestType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRxTp2Dest(id);
; ..\component\PduR\Implementation\PduR.c	   790      
; ..\component\PduR\Implementation\PduR.c	   791  # if ((PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) && (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	   792      PduR_RmDestRomStartIdxOfRmSrcRomType rmDestRomIdxOfApiFwdDest = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	   793      boolean apiFwdDestWasCalled = FALSE;
; ..\component\PduR\Implementation\PduR.c	   794  # endif
; ..\component\PduR\Implementation\PduR.c	   795  
; ..\component\PduR\Implementation\PduR.c	   796  # if (PDUR_BSWMPDURTPSTARTOFRECEPTIONCALLBACKOFRXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   797      if(PduR_IsBswMPduRTpStartOfReceptionCallbackOfRxTp2Dest(id))
; ..\component\PduR\Implementation\PduR.c	   798      {
; ..\component\PduR\Implementation\PduR.c	   799        BswM_PduR_TpStartOfReception(id, info, TpSduLength, bufferSizePtr);       /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   800      }
; ..\component\PduR\Implementation\PduR.c	   801  # endif
; ..\component\PduR\Implementation\PduR.c	   802  
; ..\component\PduR\Implementation\PduR.c	   803  # if (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   804      {
; ..\component\PduR\Implementation\PduR.c	   805        PduR_RmDestRomStartIdxOfRmSrcRomType rmDestRomIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	   806  
; ..\component\PduR\Implementation\PduR.c	   807  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)      
; ..\component\PduR\Implementation\PduR.c	   808        for(; rmDestRomIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcRomIdx); rmDestRomIdx++)
; ..\component\PduR\Implementation\PduR.c	   809        {
; ..\component\PduR\Implementation\PduR.c	   810          if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM)
; ..\component\PduR\Implementation\PduR.c	   811          {
; ..\component\PduR\Implementation\PduR.c	   812  #  endif
; ..\component\PduR\Implementation\PduR.c	   813  #  if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   814            if(PduR_IsDestPduEnabled(rmDestRomIdx) == TRUE)
; ..\component\PduR\Implementation\PduR.c	   815  #  endif
; ..\component\PduR\Implementation\PduR.c	   816            {
; ..\component\PduR\Implementation\PduR.c	   817              PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	   818              retVal = PduR_GetUpTpStartOfReceptionFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info, TpSduLength, bufferSizePtr);       /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   819  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   820              rmDestRomIdxOfApiFwdDest= rmDestRomIdx;
; ..\component\PduR\Implementation\PduR.c	   821              apiFwdDestWasCalled = TRUE;
; ..\component\PduR\Implementation\PduR.c	   822              break;
; ..\component\PduR\Implementation\PduR.c	   823  #  endif
; ..\component\PduR\Implementation\PduR.c	   824            }
; ..\component\PduR\Implementation\PduR.c	   825  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   826          }
; ..\component\PduR\Implementation\PduR.c	   827        }
; ..\component\PduR\Implementation\PduR.c	   828  #  endif
; ..\component\PduR\Implementation\PduR.c	   829      }
; ..\component\PduR\Implementation\PduR.c	   830  # endif
; ..\component\PduR\Implementation\PduR.c	   831  
; ..\component\PduR\Implementation\PduR.c	   832  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   833      if(PduR_IsRmBufferedTpPropertiesRomUsedOfRmSrcRom(rmSrcRomIdx)) /* COV_PDUR_ONLY_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR.c	   834      {
; ..\component\PduR\Implementation\PduR.c	   835  #  if (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   836        if(apiFwdDestWasCalled == TRUE)
; ..\component\PduR\Implementation\PduR.c	   837        {
; ..\component\PduR\Implementation\PduR.c	   838            if(retVal == BUFREQ_OK)
; ..\component\PduR\Implementation\PduR.c	   839            {
; ..\component\PduR\Implementation\PduR.c	   840              PduLengthType bufferSizeOfQueuedDestinations;
; ..\component\PduR\Implementation\PduR.c	   841  
; ..\component\PduR\Implementation\PduR.c	   842              retVal = PduR_RmTp_StartOfReception(rmSrcRomIdx, info, TpSduLength, &bufferSizeOfQueuedDestinations);     /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   843              if(retVal == BUFREQ_OK)
; ..\component\PduR\Implementation\PduR.c	   844              {
; ..\component\PduR\Implementation\PduR.c	   845                if(bufferSizeOfQueuedDestinations < *bufferSizePtr)
; ..\component\PduR\Implementation\PduR.c	   846                {
; ..\component\PduR\Implementation\PduR.c	   847                  *bufferSizePtr = bufferSizeOfQueuedDestinations;  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	   848                }
; ..\component\PduR\Implementation\PduR.c	   849              }
; ..\component\PduR\Implementation\PduR.c	   850              else
; ..\component\PduR\Implementation\PduR.c	   851              {
; ..\component\PduR\Implementation\PduR.c	   852                PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdxOfApiFwdDest);
; ..\component\PduR\Implementation\PduR.c	   853                PduR_GetUpTpTpRxIndicationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), E_NOT_OK);       /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   854              }
; ..\component\PduR\Implementation\PduR.c	   855            }
; ..\component\PduR\Implementation\PduR.c	   856        }
; ..\component\PduR\Implementation\PduR.c	   857        else
; ..\component\PduR\Implementation\PduR.c	   858  #  endif
; ..\component\PduR\Implementation\PduR.c	   859        {
; ..\component\PduR\Implementation\PduR.c	   860          retVal = PduR_RmTp_StartOfReception(rmSrcRomIdx, info, TpSduLength, bufferSizePtr);     /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   861        }
; ..\component\PduR\Implementation\PduR.c	   862      }
; ..\component\PduR\Implementation\PduR.c	   863  # endif
; ..\component\PduR\Implementation\PduR.c	   864    }
; ..\component\PduR\Implementation\PduR.c	   865  
; ..\component\PduR\Implementation\PduR.c	   866    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   867  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   868    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	   869    {
; ..\component\PduR\Implementation\PduR.c	   870      PduR_Det_ReportError(PDUR_FCT_SOR, errorId);
; ..\component\PduR\Implementation\PduR.c	   871    }
; ..\component\PduR\Implementation\PduR.c	   872  # else
; ..\component\PduR\Implementation\PduR.c	   873    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   874  # endif
; ..\component\PduR\Implementation\PduR.c	   875  
; ..\component\PduR\Implementation\PduR.c	   876    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   877    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   878    PDUR_DUMMY_STATEMENT(TpSduLength);    /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   879    PDUR_DUMMY_STATEMENT(bufferSizePtr);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	   880  
; ..\component\PduR\Implementation\PduR.c	   881    return retVal;
; ..\component\PduR\Implementation\PduR.c	   882  }  /* PRQA S 6080, 6010, 6030 */ /* MD_MSR_STMIF, MD_MSR_STPTH, MD_MSR_STCYC */
; ..\component\PduR\Implementation\PduR.c	   883  #endif
; ..\component\PduR\Implementation\PduR.c	   884  #if (PDUR_RXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   885  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	   886   * PduR_LoTpCopyRxData
; ..\component\PduR\Implementation\PduR.c	   887   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   888  /*!
; ..\component\PduR\Implementation\PduR.c	   889   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	   890   *
; ..\component\PduR\Implementation\PduR.c	   891   *
; ..\component\PduR\Implementation\PduR.c	   892   *
; ..\component\PduR\Implementation\PduR.c	   893   *
; ..\component\PduR\Implementation\PduR.c	   894   *
; ..\component\PduR\Implementation\PduR.c	   895   *
; ..\component\PduR\Implementation\PduR.c	   896   *
; ..\component\PduR\Implementation\PduR.c	   897   *
; ..\component\PduR\Implementation\PduR.c	   898   *
; ..\component\PduR\Implementation\PduR.c	   899   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	   900  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LoTpCopyRxData(PduIdType id, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR.c	   901  {
; ..\component\PduR\Implementation\PduR.c	   902    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   903    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   904    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	   905  
; ..\component\PduR\Implementation\PduR.c	   906    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   907  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	   908    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	   909    {
; ..\component\PduR\Implementation\PduR.c	   910      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   911    }
; ..\component\PduR\Implementation\PduR.c	   912    else if((id >= PduR_GetSizeOfRxTp2Dest())
; ..\component\PduR\Implementation\PduR.c	   913  #  if (PDUR_INVALIDHNDOFRXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   914            || (PduR_IsInvalidHndOfRxTp2Dest(id))
; ..\component\PduR\Implementation\PduR.c	   915  #  endif
; ..\component\PduR\Implementation\PduR.c	   916      )
; ..\component\PduR\Implementation\PduR.c	   917    {
; ..\component\PduR\Implementation\PduR.c	   918      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	   919    }
; ..\component\PduR\Implementation\PduR.c	   920    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfRxTp2Dest(id)))
; ..\component\PduR\Implementation\PduR.c	   921    {
; ..\component\PduR\Implementation\PduR.c	   922      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	   923    }
; ..\component\PduR\Implementation\PduR.c	   924    else
; ..\component\PduR\Implementation\PduR.c	   925  # endif
; ..\component\PduR\Implementation\PduR.c	   926    {
; ..\component\PduR\Implementation\PduR.c	   927      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   928      PduR_RmSrcRomIdxOfRxTp2DestType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRxTp2Dest(id);
; ..\component\PduR\Implementation\PduR.c	   929  # if ((PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) && (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	   930      boolean apiFwdDestWasCalled = FALSE;
; ..\component\PduR\Implementation\PduR.c	   931  # endif
; ..\component\PduR\Implementation\PduR.c	   932  
; ..\component\PduR\Implementation\PduR.c	   933  # if (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   934      {
; ..\component\PduR\Implementation\PduR.c	   935        PduR_RmDestRomStartIdxOfRmSrcRomType rmDestRomIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	   936  
; ..\component\PduR\Implementation\PduR.c	   937        /*----- Iterate destPdus, find out the only unbuffered destPdu (only one unbuffered destPdu is supported), call the Forwarding Tp module CopyRxData function -----*/
; ..\component\PduR\Implementation\PduR.c	   938  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   939        for (; rmDestRomIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcRomIdx); rmDestRomIdx++)
; ..\component\PduR\Implementation\PduR.c	   940        {
; ..\component\PduR\Implementation\PduR.c	   941          if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM)
; ..\component\PduR\Implementation\PduR.c	   942          {
; ..\component\PduR\Implementation\PduR.c	   943  #  endif
; ..\component\PduR\Implementation\PduR.c	   944  #  if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   945            if(PduR_IsDestPduEnabled(rmDestRomIdx) == TRUE)
; ..\component\PduR\Implementation\PduR.c	   946  #  endif
; ..\component\PduR\Implementation\PduR.c	   947            {
; ..\component\PduR\Implementation\PduR.c	   948              PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	   949              retVal = PduR_GetUpTpCopyRxDataFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info, bufferSizePtr);  /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   950  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   951              apiFwdDestWasCalled = TRUE;
; ..\component\PduR\Implementation\PduR.c	   952              break;
; ..\component\PduR\Implementation\PduR.c	   953  #  endif
; ..\component\PduR\Implementation\PduR.c	   954            }
; ..\component\PduR\Implementation\PduR.c	   955  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   956          }
; ..\component\PduR\Implementation\PduR.c	   957        }
; ..\component\PduR\Implementation\PduR.c	   958  #  endif
; ..\component\PduR\Implementation\PduR.c	   959      }
; ..\component\PduR\Implementation\PduR.c	   960  # endif
; ..\component\PduR\Implementation\PduR.c	   961  
; ..\component\PduR\Implementation\PduR.c	   962  
; ..\component\PduR\Implementation\PduR.c	   963  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   964      /* ----- when Unbuferred destRoms exist, call the gateway or Tp module start of reception function ----- */
; ..\component\PduR\Implementation\PduR.c	   965      if(PduR_IsRmBufferedTpPropertiesRomUsedOfRmSrcRom(rmSrcRomIdx)) /* COV_PDUR_ONLY_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR.c	   966      { /* buffered Tp Routings */
; ..\component\PduR\Implementation\PduR.c	   967  #  if (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   968        if(apiFwdDestWasCalled == TRUE)
; ..\component\PduR\Implementation\PduR.c	   969        {
; ..\component\PduR\Implementation\PduR.c	   970          if(retVal == BUFREQ_OK)
; ..\component\PduR\Implementation\PduR.c	   971          {/* buffered Tp Routings */
; ..\component\PduR\Implementation\PduR.c	   972            PduLengthType bufferSizeOfQueuedDestinations;
; ..\component\PduR\Implementation\PduR.c	   973  
; ..\component\PduR\Implementation\PduR.c	   974            retVal = PduR_RmTp_CopyRxData(rmSrcRomIdx, info, &bufferSizeOfQueuedDestinations);  /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   975            if(retVal == BUFREQ_OK)
; ..\component\PduR\Implementation\PduR.c	   976            {
; ..\component\PduR\Implementation\PduR.c	   977              if(bufferSizeOfQueuedDestinations < *bufferSizePtr)
; ..\component\PduR\Implementation\PduR.c	   978              {
; ..\component\PduR\Implementation\PduR.c	   979                *bufferSizePtr = bufferSizeOfQueuedDestinations;  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	   980              }
; ..\component\PduR\Implementation\PduR.c	   981            }
; ..\component\PduR\Implementation\PduR.c	   982          }
; ..\component\PduR\Implementation\PduR.c	   983        }
; ..\component\PduR\Implementation\PduR.c	   984        else
; ..\component\PduR\Implementation\PduR.c	   985  #  endif
; ..\component\PduR\Implementation\PduR.c	   986        {
; ..\component\PduR\Implementation\PduR.c	   987          retVal = PduR_RmTp_CopyRxData(rmSrcRomIdx, info, bufferSizePtr);     /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	   988        }
; ..\component\PduR\Implementation\PduR.c	   989      }
; ..\component\PduR\Implementation\PduR.c	   990  # endif
; ..\component\PduR\Implementation\PduR.c	   991    }
; ..\component\PduR\Implementation\PduR.c	   992  
; ..\component\PduR\Implementation\PduR.c	   993  
; ..\component\PduR\Implementation\PduR.c	   994    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	   995  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	   996    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	   997    {
; ..\component\PduR\Implementation\PduR.c	   998      PduR_Det_ReportError(PDUR_FCT_CPYRX, errorId);
; ..\component\PduR\Implementation\PduR.c	   999    }
; ..\component\PduR\Implementation\PduR.c	  1000  # else
; ..\component\PduR\Implementation\PduR.c	  1001    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1002  # endif
; ..\component\PduR\Implementation\PduR.c	  1003  
; ..\component\PduR\Implementation\PduR.c	  1004    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1005    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1006    PDUR_DUMMY_STATEMENT(bufferSizePtr);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1007  
; ..\component\PduR\Implementation\PduR.c	  1008    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1009  }  /* PRQA S 6080, 6030 */ /* MD_MSR_STMIF, MD_MSR_STCYC */
; ..\component\PduR\Implementation\PduR.c	  1010  #endif
; ..\component\PduR\Implementation\PduR.c	  1011  #if(PDUR_TXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1012  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1013   * PduR_LoTpCopyTxData
; ..\component\PduR\Implementation\PduR.c	  1014   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1015  /*!
; ..\component\PduR\Implementation\PduR.c	  1016   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1017   *
; ..\component\PduR\Implementation\PduR.c	  1018   *
; ..\component\PduR\Implementation\PduR.c	  1019   *
; ..\component\PduR\Implementation\PduR.c	  1020   *
; ..\component\PduR\Implementation\PduR.c	  1021   *
; ..\component\PduR\Implementation\PduR.c	  1022   *
; ..\component\PduR\Implementation\PduR.c	  1023   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1024  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LoTpCopyTxData(PduIdType id, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\component\PduR\Implementation\PduR.c	  1025                                                         P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr)
; ..\component\PduR\Implementation\PduR.c	  1026  {
; ..\component\PduR\Implementation\PduR.c	  1027    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1028    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1029    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1030  
; ..\component\PduR\Implementation\PduR.c	  1031    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1032  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1033    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  1034    {
; ..\component\PduR\Implementation\PduR.c	  1035      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1036    }
; ..\component\PduR\Implementation\PduR.c	  1037    else if((id >= PduR_GetSizeOfTxTp2Src())
; ..\component\PduR\Implementation\PduR.c	  1038  #  if (PDUR_INVALIDHNDOFTXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1039            || (PduR_IsInvalidHndOfTxTp2Src(id))
; ..\component\PduR\Implementation\PduR.c	  1040  #  endif
; ..\component\PduR\Implementation\PduR.c	  1041      )
; ..\component\PduR\Implementation\PduR.c	  1042    {
; ..\component\PduR\Implementation\PduR.c	  1043      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  1044    }
; ..\component\PduR\Implementation\PduR.c	  1045    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfTxTp2Src(id)))
; ..\component\PduR\Implementation\PduR.c	  1046    {
; ..\component\PduR\Implementation\PduR.c	  1047      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1048    }
; ..\component\PduR\Implementation\PduR.c	  1049    else
; ..\component\PduR\Implementation\PduR.c	  1050  # endif
; ..\component\PduR\Implementation\PduR.c	  1051    {
; ..\component\PduR\Implementation\PduR.c	  1052      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1053      retVal = PduR_RmTp_MultipleSourceHandler_CopyTxData(PduR_GetRmGDestRomIdxOfTxTp2Src(id), info, retry, availableDataPtr);    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	  1054    }
; ..\component\PduR\Implementation\PduR.c	  1055    
; ..\component\PduR\Implementation\PduR.c	  1056    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1057  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1058    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1059    {
; ..\component\PduR\Implementation\PduR.c	  1060      PduR_Det_ReportError(PDUR_FCT_CPYTX, errorId);
; ..\component\PduR\Implementation\PduR.c	  1061    }
; ..\component\PduR\Implementation\PduR.c	  1062  # else
; ..\component\PduR\Implementation\PduR.c	  1063    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1064  # endif
; ..\component\PduR\Implementation\PduR.c	  1065  
; ..\component\PduR\Implementation\PduR.c	  1066    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1067    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1068    PDUR_DUMMY_STATEMENT(retry);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1069    PDUR_DUMMY_STATEMENT(availableDataPtr);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1070  
; ..\component\PduR\Implementation\PduR.c	  1071    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1072  }
; ..\component\PduR\Implementation\PduR.c	  1073  #endif
; ..\component\PduR\Implementation\PduR.c	  1074  #if (PDUR_RXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1075  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1076   * PduR_LoTpRxIndication
; ..\component\PduR\Implementation\PduR.c	  1077   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1078  /*!
; ..\component\PduR\Implementation\PduR.c	  1079   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1080   *
; ..\component\PduR\Implementation\PduR.c	  1081   *
; ..\component\PduR\Implementation\PduR.c	  1082   *
; ..\component\PduR\Implementation\PduR.c	  1083   *
; ..\component\PduR\Implementation\PduR.c	  1084   *
; ..\component\PduR\Implementation\PduR.c	  1085   *
; ..\component\PduR\Implementation\PduR.c	  1086   *
; ..\component\PduR\Implementation\PduR.c	  1087   *
; ..\component\PduR\Implementation\PduR.c	  1088   *
; ..\component\PduR\Implementation\PduR.c	  1089   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1090  FUNC(void, PDUR_CODE) PduR_LoTpRxIndication(PduIdType id, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR.c	  1091  {
; ..\component\PduR\Implementation\PduR.c	  1092    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1093    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1094  
; ..\component\PduR\Implementation\PduR.c	  1095    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1096  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1097    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  1098    {
; ..\component\PduR\Implementation\PduR.c	  1099      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1100    }
; ..\component\PduR\Implementation\PduR.c	  1101    else if((id >= PduR_GetSizeOfRxTp2Dest())
; ..\component\PduR\Implementation\PduR.c	  1102  #  if (PDUR_INVALIDHNDOFRXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1103            || (PduR_IsInvalidHndOfRxTp2Dest(id))
; ..\component\PduR\Implementation\PduR.c	  1104  #  endif
; ..\component\PduR\Implementation\PduR.c	  1105      )
; ..\component\PduR\Implementation\PduR.c	  1106    {
; ..\component\PduR\Implementation\PduR.c	  1107      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  1108    }
; ..\component\PduR\Implementation\PduR.c	  1109    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfRxTp2Dest(id)))
; ..\component\PduR\Implementation\PduR.c	  1110    {
; ..\component\PduR\Implementation\PduR.c	  1111      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1112    }
; ..\component\PduR\Implementation\PduR.c	  1113    else
; ..\component\PduR\Implementation\PduR.c	  1114  # endif
; ..\component\PduR\Implementation\PduR.c	  1115    {
; ..\component\PduR\Implementation\PduR.c	  1116  # if (PDUR_BSWMPDURTPRXINDICATIONCALLBACKOFRXTP2DEST == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1117      if(PduR_IsBswMPduRTpRxIndicationCallbackOfRxTp2Dest(id))
; ..\component\PduR\Implementation\PduR.c	  1118      {
; ..\component\PduR\Implementation\PduR.c	  1119        BswM_PduR_TpRxIndication(id, result);
; ..\component\PduR\Implementation\PduR.c	  1120      }
; ..\component\PduR\Implementation\PduR.c	  1121  # endif
; ..\component\PduR\Implementation\PduR.c	  1122  
; ..\component\PduR\Implementation\PduR.c	  1123      {
; ..\component\PduR\Implementation\PduR.c	  1124        /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1125        PduR_RmSrcRomIdxOfRxTp2DestType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRxTp2Dest(id);
; ..\component\PduR\Implementation\PduR.c	  1126  
; ..\component\PduR\Implementation\PduR.c	  1127  # if (PDUR_EXISTS_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1128        {
; ..\component\PduR\Implementation\PduR.c	  1129          PduR_RmDestRomStartIdxOfRmSrcRomType rmDestRomIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1130  
; ..\component\PduR\Implementation\PduR.c	  1131          /*----- Iterate destPdus, find out the only unbuffered destPdu (only one unbuffered destPdu is supported), call the Forwarding Tp module RxIndication -----*/
; ..\component\PduR\Implementation\PduR.c	  1132  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1133          for (; rmDestRomIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcRomIdx); rmDestRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  1134          {
; ..\component\PduR\Implementation\PduR.c	  1135            if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_TP_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM)
; ..\component\PduR\Implementation\PduR.c	  1136  #  endif
; ..\component\PduR\Implementation\PduR.c	  1137            {
; ..\component\PduR\Implementation\PduR.c	  1138              PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1139              PduR_GetUpTpTpRxIndicationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), result);      /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	  1140  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1141              break;
; ..\component\PduR\Implementation\PduR.c	  1142  #  endif
; ..\component\PduR\Implementation\PduR.c	  1143            }
; ..\component\PduR\Implementation\PduR.c	  1144  #  if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1145          }
; ..\component\PduR\Implementation\PduR.c	  1146  #  endif
; ..\component\PduR\Implementation\PduR.c	  1147        }
; ..\component\PduR\Implementation\PduR.c	  1148  # endif
; ..\component\PduR\Implementation\PduR.c	  1149  
; ..\component\PduR\Implementation\PduR.c	  1150  
; ..\component\PduR\Implementation\PduR.c	  1151  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1152        if(PduR_IsRmBufferedTpPropertiesRomUsedOfRmSrcRom(rmSrcRomIdx)) /* COV_PDUR_ONLY_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR.c	  1153        {
; ..\component\PduR\Implementation\PduR.c	  1154          /* buffered Tp Routings */
; ..\component\PduR\Implementation\PduR.c	  1155          PduR_RmTp_TpRxIndication(rmSrcRomIdx, result);
; ..\component\PduR\Implementation\PduR.c	  1156        }
; ..\component\PduR\Implementation\PduR.c	  1157  # endif
; ..\component\PduR\Implementation\PduR.c	  1158      }
; ..\component\PduR\Implementation\PduR.c	  1159    }
; ..\component\PduR\Implementation\PduR.c	  1160  
; ..\component\PduR\Implementation\PduR.c	  1161    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1162  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1163    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1164    {
; ..\component\PduR\Implementation\PduR.c	  1165      PduR_Det_ReportError(PDUR_FCT_TPRXIND, errorId);
; ..\component\PduR\Implementation\PduR.c	  1166    }
; ..\component\PduR\Implementation\PduR.c	  1167  # else
; ..\component\PduR\Implementation\PduR.c	  1168    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1169  # endif
; ..\component\PduR\Implementation\PduR.c	  1170  
; ..\component\PduR\Implementation\PduR.c	  1171    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1172    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1173  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR.c	  1174  #endif
; ..\component\PduR\Implementation\PduR.c	  1175  #if (PDUR_TXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1176  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1177   * PduR_LoTpTxConfirmation
; ..\component\PduR\Implementation\PduR.c	  1178   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1179  /*!
; ..\component\PduR\Implementation\PduR.c	  1180   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1181   *
; ..\component\PduR\Implementation\PduR.c	  1182   *
; ..\component\PduR\Implementation\PduR.c	  1183   *
; ..\component\PduR\Implementation\PduR.c	  1184   *
; ..\component\PduR\Implementation\PduR.c	  1185   *
; ..\component\PduR\Implementation\PduR.c	  1186   *
; ..\component\PduR\Implementation\PduR.c	  1187   *
; ..\component\PduR\Implementation\PduR.c	  1188   *
; ..\component\PduR\Implementation\PduR.c	  1189   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1190  FUNC(void, PDUR_CODE) PduR_LoTpTxConfirmation(PduIdType id, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR.c	  1191  {
; ..\component\PduR\Implementation\PduR.c	  1192    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1193    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1194  
; ..\component\PduR\Implementation\PduR.c	  1195    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1196  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1197    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  1198    {
; ..\component\PduR\Implementation\PduR.c	  1199      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1200    }
; ..\component\PduR\Implementation\PduR.c	  1201    else if((id >= PduR_GetSizeOfTxTp2Src())
; ..\component\PduR\Implementation\PduR.c	  1202  #  if (PDUR_INVALIDHNDOFTXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1203            || (PduR_IsInvalidHndOfTxTp2Src(id))
; ..\component\PduR\Implementation\PduR.c	  1204  #  endif
; ..\component\PduR\Implementation\PduR.c	  1205      )
; ..\component\PduR\Implementation\PduR.c	  1206    {
; ..\component\PduR\Implementation\PduR.c	  1207      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  1208    }
; ..\component\PduR\Implementation\PduR.c	  1209    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfTxTp2Src(id)))
; ..\component\PduR\Implementation\PduR.c	  1210    {
; ..\component\PduR\Implementation\PduR.c	  1211      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1212    }
; ..\component\PduR\Implementation\PduR.c	  1213    else
; ..\component\PduR\Implementation\PduR.c	  1214  # endif
; ..\component\PduR\Implementation\PduR.c	  1215    {
; ..\component\PduR\Implementation\PduR.c	  1216      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1217  # if (PDUR_BSWMPDURTPTXCONFIRMATIONCALLBACKOFTXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1218      if(PduR_IsBswMPduRTpTxConfirmationCallbackOfTxTp2Src(id))
; ..\component\PduR\Implementation\PduR.c	  1219      {
; ..\component\PduR\Implementation\PduR.c	  1220        BswM_PduR_TpTxConfirmation(id, result);
; ..\component\PduR\Implementation\PduR.c	  1221      }
; ..\component\PduR\Implementation\PduR.c	  1222  # endif
; ..\component\PduR\Implementation\PduR.c	  1223      PduR_RmTp_MultipleSourceHandler_TpTxConfirmation(PduR_GetRmGDestRomIdxOfTxTp2Src(id), result);
; ..\component\PduR\Implementation\PduR.c	  1224    }
; ..\component\PduR\Implementation\PduR.c	  1225  
; ..\component\PduR\Implementation\PduR.c	  1226    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1227  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1228    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1229    {
; ..\component\PduR\Implementation\PduR.c	  1230      PduR_Det_ReportError(PDUR_FCT_TPTXCFM, errorId);
; ..\component\PduR\Implementation\PduR.c	  1231    }
; ..\component\PduR\Implementation\PduR.c	  1232  # else
; ..\component\PduR\Implementation\PduR.c	  1233    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1234  # endif
; ..\component\PduR\Implementation\PduR.c	  1235  
; ..\component\PduR\Implementation\PduR.c	  1236    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1237    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1238  }
; ..\component\PduR\Implementation\PduR.c	  1239  #endif
; ..\component\PduR\Implementation\PduR.c	  1240  /* CancelReceive global without UseTag API */
; ..\component\PduR\Implementation\PduR.c	  1241  #if (PDUR_CANCELRECEIVESUPPORTEDOFMMROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1242  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1243   * PduR_CancelReceive
; ..\component\PduR\Implementation\PduR.c	  1244   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1245  /*!
; ..\component\PduR\Implementation\PduR.c	  1246   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1247   *
; ..\component\PduR\Implementation\PduR.c	  1248   *
; ..\component\PduR\Implementation\PduR.c	  1249   *
; ..\component\PduR\Implementation\PduR.c	  1250   *
; ..\component\PduR\Implementation\PduR.c	  1251   *
; ..\component\PduR\Implementation\PduR.c	  1252   *
; ..\component\PduR\Implementation\PduR.c	  1253   *
; ..\component\PduR\Implementation\PduR.c	  1254   *
; ..\component\PduR\Implementation\PduR.c	  1255   *
; ..\component\PduR\Implementation\PduR.c	  1256   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1257  FUNC(Std_ReturnType, PDUR_CODE) PduR_CancelReceive(PduIdType id)
; ..\component\PduR\Implementation\PduR.c	  1258  {
; ..\component\PduR\Implementation\PduR.c	  1259    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1260    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1261    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1262  
; ..\component\PduR\Implementation\PduR.c	  1263    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1264  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1265    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  1266    {
; ..\component\PduR\Implementation\PduR.c	  1267      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1268    }
; ..\component\PduR\Implementation\PduR.c	  1269    else if((id >= PduR_GetSizeOfRxTp2Src())
; ..\component\PduR\Implementation\PduR.c	  1270  #  if (PDUR_INVALIDHNDOFRXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1271            || (PduR_IsInvalidHndOfRxTp2Src(id))
; ..\component\PduR\Implementation\PduR.c	  1272  #  endif
; ..\component\PduR\Implementation\PduR.c	  1273      )
; ..\component\PduR\Implementation\PduR.c	  1274    {
; ..\component\PduR\Implementation\PduR.c	  1275      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  1276    }
; ..\component\PduR\Implementation\PduR.c	  1277    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfRxTp2Src(id)))
; ..\component\PduR\Implementation\PduR.c	  1278    {
; ..\component\PduR\Implementation\PduR.c	  1279      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1280    }
; ..\component\PduR\Implementation\PduR.c	  1281    else
; ..\component\PduR\Implementation\PduR.c	  1282  # endif
; ..\component\PduR\Implementation\PduR.c	  1283    {
; ..\component\PduR\Implementation\PduR.c	  1284      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1285      PduR_RmDestRomIdxOfRxTp2SrcType rmDestRomIdx = PduR_GetRmDestRomIdxOfRxTp2Src(id);
; ..\component\PduR\Implementation\PduR.c	  1286      PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1287      PduR_MmRomIdxOfRmSrcRomType mmRomIdx = PduR_GetMmRomIdxOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1288  
; ..\component\PduR\Implementation\PduR.c	  1289      if(PduR_IsCancelReceiveSupportedOfMmRom(mmRomIdx))  /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  1290      {
; ..\component\PduR\Implementation\PduR.c	  1291  # if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1292        if(PduR_IsDestPduEnabled(rmDestRomIdx) == TRUE)
; ..\component\PduR\Implementation\PduR.c	  1293  # endif
; ..\component\PduR\Implementation\PduR.c	  1294        {
; ..\component\PduR\Implementation\PduR.c	  1295          PduR_SrcHndOfRmSrcRomType srcHnd = PduR_GetSrcHndOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1296          retVal = PduR_GetLoTpCancelReceiveFctPtrOfMmRom(mmRomIdx) (srcHnd);     /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR.c	  1297        }
; ..\component\PduR\Implementation\PduR.c	  1298      }
; ..\component\PduR\Implementation\PduR.c	  1299    }
; ..\component\PduR\Implementation\PduR.c	  1300  
; ..\component\PduR\Implementation\PduR.c	  1301    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1302  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1303    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1304    {
; ..\component\PduR\Implementation\PduR.c	  1305      PduR_Det_ReportError(PDUR_FCT_CRX, errorId);
; ..\component\PduR\Implementation\PduR.c	  1306    }
; ..\component\PduR\Implementation\PduR.c	  1307  # else
; ..\component\PduR\Implementation\PduR.c	  1308    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1309  # endif
; ..\component\PduR\Implementation\PduR.c	  1310  
; ..\component\PduR\Implementation\PduR.c	  1311    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1312  
; ..\component\PduR\Implementation\PduR.c	  1313    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1314  } /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR.c	  1315  #endif
; ..\component\PduR\Implementation\PduR.c	  1316  #if (PDUR_CHANGEPARAMETERSUPPORTEDOFMMROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1317  /* ChangeParameter global without UseTag  API */
; ..\component\PduR\Implementation\PduR.c	  1318  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1319   * PduR_ChangeParameter
; ..\component\PduR\Implementation\PduR.c	  1320   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1321  /*!
; ..\component\PduR\Implementation\PduR.c	  1322   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1323   *
; ..\component\PduR\Implementation\PduR.c	  1324   *
; ..\component\PduR\Implementation\PduR.c	  1325   *
; ..\component\PduR\Implementation\PduR.c	  1326   *
; ..\component\PduR\Implementation\PduR.c	  1327   *
; ..\component\PduR\Implementation\PduR.c	  1328   *
; ..\component\PduR\Implementation\PduR.c	  1329   *
; ..\component\PduR\Implementation\PduR.c	  1330   *
; ..\component\PduR\Implementation\PduR.c	  1331   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1332  FUNC(Std_ReturnType, PDUR_CODE) PduR_ChangeParameter(PduIdType id, TPParameterType parameter, uint16 value)
; ..\component\PduR\Implementation\PduR.c	  1333  {
; ..\component\PduR\Implementation\PduR.c	  1334    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1335    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1336    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1337  
; ..\component\PduR\Implementation\PduR.c	  1338    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1339  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1340    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  1341    {
; ..\component\PduR\Implementation\PduR.c	  1342      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1343    }
; ..\component\PduR\Implementation\PduR.c	  1344    else if((id >= PduR_GetSizeOfRxTp2Src())
; ..\component\PduR\Implementation\PduR.c	  1345  #  if (PDUR_INVALIDHNDOFRXTP2SRC == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1346            || (PduR_IsInvalidHndOfRxTp2Src(id))
; ..\component\PduR\Implementation\PduR.c	  1347  #  endif
; ..\component\PduR\Implementation\PduR.c	  1348      )
; ..\component\PduR\Implementation\PduR.c	  1349    {
; ..\component\PduR\Implementation\PduR.c	  1350      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  1351    }
; ..\component\PduR\Implementation\PduR.c	  1352    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfRxTp2Src(id)))
; ..\component\PduR\Implementation\PduR.c	  1353    {
; ..\component\PduR\Implementation\PduR.c	  1354      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1355    }
; ..\component\PduR\Implementation\PduR.c	  1356    else
; ..\component\PduR\Implementation\PduR.c	  1357  # endif
; ..\component\PduR\Implementation\PduR.c	  1358    {
; ..\component\PduR\Implementation\PduR.c	  1359      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1360      PduR_RmDestRomIdxOfRxTp2SrcType rmDestRomIdx = PduR_GetRmDestRomIdxOfRxTp2Src(id);
; ..\component\PduR\Implementation\PduR.c	  1361      PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1362      PduR_MmRomIdxOfRmSrcRomType mmRomIdx = PduR_GetMmRomIdxOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1363  
; ..\component\PduR\Implementation\PduR.c	  1364      if(PduR_IsChangeParameterSupportedOfMmRom(mmRomIdx))        /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  1365      {
; ..\component\PduR\Implementation\PduR.c	  1366        PduR_SrcHndOfRmSrcRomType srcHnd = PduR_GetSrcHndOfRmSrcRom(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1367        retVal = PduR_GetLoTpChangeParameterFctPtrOfMmRom(mmRomIdx) (srcHnd, parameter, value);   /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR.c	  1368      }
; ..\component\PduR\Implementation\PduR.c	  1369    }
; ..\component\PduR\Implementation\PduR.c	  1370  
; ..\component\PduR\Implementation\PduR.c	  1371    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1372  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1373    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1374    {
; ..\component\PduR\Implementation\PduR.c	  1375      PduR_Det_ReportError(PDUR_FCT_CHPARA, errorId);
; ..\component\PduR\Implementation\PduR.c	  1376    }
; ..\component\PduR\Implementation\PduR.c	  1377  # else
; ..\component\PduR\Implementation\PduR.c	  1378    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1379  # endif
; ..\component\PduR\Implementation\PduR.c	  1380  
; ..\component\PduR\Implementation\PduR.c	  1381    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1382    PDUR_DUMMY_STATEMENT(parameter);      /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1383    PDUR_DUMMY_STATEMENT(value);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1384  
; ..\component\PduR\Implementation\PduR.c	  1385    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1386  }
; ..\component\PduR\Implementation\PduR.c	  1387  #endif
; ..\component\PduR\Implementation\PduR.c	  1388  /* Communication Interface / Transport Protocol APIs */
; ..\component\PduR\Implementation\PduR.c	  1389  #if ((PDUR_IFCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON) || (PDUR_TPCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	  1390  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1391   * PduR_CancelTransmit
; ..\component\PduR\Implementation\PduR.c	  1392   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1393  /*!
; ..\component\PduR\Implementation\PduR.c	  1394   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1395   *
; ..\component\PduR\Implementation\PduR.c	  1396   *
; ..\component\PduR\Implementation\PduR.c	  1397   *
; ..\component\PduR\Implementation\PduR.c	  1398   *
; ..\component\PduR\Implementation\PduR.c	  1399   *
; ..\component\PduR\Implementation\PduR.c	  1400   *
; ..\component\PduR\Implementation\PduR.c	  1401   *
; ..\component\PduR\Implementation\PduR.c	  1402   *
; ..\component\PduR\Implementation\PduR.c	  1403   *
; ..\component\PduR\Implementation\PduR.c	  1404   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1405  FUNC(Std_ReturnType, PDUR_CODE) PduR_CancelTransmit(PduIdType id)
; ..\component\PduR\Implementation\PduR.c	  1406  {
; ..\component\PduR\Implementation\PduR.c	  1407    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1408    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1409    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1410  
; ..\component\PduR\Implementation\PduR.c	  1411    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1412  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1413    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  1414    {
; ..\component\PduR\Implementation\PduR.c	  1415      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1416    }
; ..\component\PduR\Implementation\PduR.c	  1417  #  if (PDUR_TX2LO == STD_ON)    /* COV_PDUR_VAR_DEPENDENT_SWITCH */
; ..\component\PduR\Implementation\PduR.c	  1418    else if((id >= PduR_GetSizeOfTx2Lo())
; ..\component\PduR\Implementation\PduR.c	  1419  #   if (PDUR_INVALIDHNDOFTX2LO == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1420            || (PduR_IsInvalidHndOfTx2Lo(id))
; ..\component\PduR\Implementation\PduR.c	  1421  #   endif
; ..\component\PduR\Implementation\PduR.c	  1422      )
; ..\component\PduR\Implementation\PduR.c	  1423    {
; ..\component\PduR\Implementation\PduR.c	  1424      errorId = PDUR_E_PDU_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  1425    }
; ..\component\PduR\Implementation\PduR.c	  1426    else if(!PduR_IsInitialized(PduR_GetPartitionIndexOfCslOfTx2Lo(id)))
; ..\component\PduR\Implementation\PduR.c	  1427    {
; ..\component\PduR\Implementation\PduR.c	  1428      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  1429    }
; ..\component\PduR\Implementation\PduR.c	  1430  #  endif
; ..\component\PduR\Implementation\PduR.c	  1431    else
; ..\component\PduR\Implementation\PduR.c	  1432  # endif
; ..\component\PduR\Implementation\PduR.c	  1433    {
; ..\component\PduR\Implementation\PduR.c	  1434      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1435  # if (PDUR_CANCELTRANSMITUSEDOFTX2LO  == STD_ON)        /* COV_PDUR_VAR_DEPENDENT_SWITCH */
; ..\component\PduR\Implementation\PduR.c	  1436      if(PduR_IsCancelTransmitUsedOfTx2Lo(id))    /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  1437      {
; ..\component\PduR\Implementation\PduR.c	  1438        retVal = PduR_Rm_CancelTransmit_MultiDest(PduR_GetRmSrcRomIdxOfTx2Lo(id));
; ..\component\PduR\Implementation\PduR.c	  1439      }
; ..\component\PduR\Implementation\PduR.c	  1440  # endif
; ..\component\PduR\Implementation\PduR.c	  1441    }
; ..\component\PduR\Implementation\PduR.c	  1442    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1443  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1444    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1445    {
; ..\component\PduR\Implementation\PduR.c	  1446      PduR_Det_ReportError(PDUR_FCT_CTX, errorId);
; ..\component\PduR\Implementation\PduR.c	  1447    }
; ..\component\PduR\Implementation\PduR.c	  1448  # else
; ..\component\PduR\Implementation\PduR.c	  1449    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1450  # endif
; ..\component\PduR\Implementation\PduR.c	  1451  
; ..\component\PduR\Implementation\PduR.c	  1452    PDUR_DUMMY_STATEMENT(id);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1453  
; ..\component\PduR\Implementation\PduR.c	  1454    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1455  }
; ..\component\PduR\Implementation\PduR.c	  1456  #endif
; ..\component\PduR\Implementation\PduR.c	  1457  
; ..\component\PduR\Implementation\PduR.c	  1458  #if ((PDUR_IFCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON) || (PDUR_TPCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	  1459  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1460   * PduR_Rm_CancelTransmit_MultiDest
; ..\component\PduR\Implementation\PduR.c	  1461   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1462  /*!
; ..\component\PduR\Implementation\PduR.c	  1463   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1464   *
; ..\component\PduR\Implementation\PduR.c	  1465   *
; ..\component\PduR\Implementation\PduR.c	  1466   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1467  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_Rm_CancelTransmit_MultiDest(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR.c	  1468  {
; ..\component\PduR\Implementation\PduR.c	  1469    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1470  
; ..\component\PduR\Implementation\PduR.c	  1471    PduR_RmDestRomIterType rmDestIdx;
; ..\component\PduR\Implementation\PduR.c	  1472  
; ..\component\PduR\Implementation\PduR.c	  1473    for(rmDestIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx); rmDestIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcIdx); rmDestIdx++)
; ..\component\PduR\Implementation\PduR.c	  1474    {
; ..\component\PduR\Implementation\PduR.c	  1475  # if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1476      if(PduR_IsDestPduEnabled(rmDestIdx) == TRUE)
; ..\component\PduR\Implementation\PduR.c	  1477  # endif
; ..\component\PduR\Implementation\PduR.c	  1478      {
; ..\component\PduR\Implementation\PduR.c	  1479        switch (PduR_GetRoutingTypeOfRmDestRom(rmDestIdx))
; ..\component\PduR\Implementation\PduR.c	  1480        {
; ..\component\PduR\Implementation\PduR.c	  1481  # if ((PDUR_EXISTS_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON) && (PDUR_IFCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	  1482          case PDUR_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM:
; ..\component\PduR\Implementation\PduR.c	  1483            if(PduR_IsIfCancelTransmitSupportedOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx))))        /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  1484            {
; ..\component\PduR\Implementation\PduR.c	  1485              retVal &= PduR_RmIf_MultipleSourceHandler_CancelTransmit(rmDestIdx);
; ..\component\PduR\Implementation\PduR.c	  1486            }
; ..\component\PduR\Implementation\PduR.c	  1487            break;
; ..\component\PduR\Implementation\PduR.c	  1488  # endif
; ..\component\PduR\Implementation\PduR.c	  1489  # if ((PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON) && (PDUR_TPCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	  1490          case PDUR_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM:
; ..\component\PduR\Implementation\PduR.c	  1491            if(PduR_IsTpCancelTransmitSupportedOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx))))        /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  1492            {
; ..\component\PduR\Implementation\PduR.c	  1493              retVal &= PduR_RmTp_MultipleSourceHandler_CancelTransmit(rmDestIdx);
; ..\component\PduR\Implementation\PduR.c	  1494            }
; ..\component\PduR\Implementation\PduR.c	  1495            break;
; ..\component\PduR\Implementation\PduR.c	  1496  # endif
; ..\component\PduR\Implementation\PduR.c	  1497          default:       /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR.c	  1498            /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR.c	  1499            break;
; ..\component\PduR\Implementation\PduR.c	  1500        }
; ..\component\PduR\Implementation\PduR.c	  1501      }
; ..\component\PduR\Implementation\PduR.c	  1502    }
; ..\component\PduR\Implementation\PduR.c	  1503  
; ..\component\PduR\Implementation\PduR.c	  1504    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1505  
; ..\component\PduR\Implementation\PduR.c	  1506    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1507  }
; ..\component\PduR\Implementation\PduR.c	  1508  #endif
; ..\component\PduR\Implementation\PduR.c	  1509  
; ..\component\PduR\Implementation\PduR.c	  1510  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1511  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1512  *  PduR_GetMemorySectionIndexOfOsApplication
; ..\component\PduR\Implementation\PduR.c	  1513  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1514  /*!
; ..\component\PduR\Implementation\PduR.c	  1515   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1516   *
; ..\component\PduR\Implementation\PduR.c	  1517   *
; ..\component\PduR\Implementation\PduR.c	  1518   */
; ..\component\PduR\Implementation\PduR.c	  1519  LOCAL_INLINE FUNC(PduR_MemIdxType, PDUR_CODE) PduR_GetMemorySectionIndexOfOsApplication(ApplicationType applicationId)
; ..\component\PduR\Implementation\PduR.c	  1520  {
; ..\component\PduR\Implementation\PduR.c	  1521    PduR_MemIdxType retVal = 0;
; ..\component\PduR\Implementation\PduR.c	  1522    PduR_MemIdxType memIdx = PduR_GetOsApplicationToPduROfPartitionLookupTableRam(applicationId);
; ..\component\PduR\Implementation\PduR.c	  1523  
; ..\component\PduR\Implementation\PduR.c	  1524    if(memIdx == 0xFFu) /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR.c	  1525    {
; ..\component\PduR\Implementation\PduR.c	  1526      /* This PduR is either not assigned to this osApplication or was not correctly initialized. */
; ..\component\PduR\Implementation\PduR.c	  1527      PduR_Det_ReportError(PDUR_FCT_MEM_SECTION_MAPPING, PDUR_E_OSAPP2MEMMAPPING);
; ..\component\PduR\Implementation\PduR.c	  1528    }
; ..\component\PduR\Implementation\PduR.c	  1529    else
; ..\component\PduR\Implementation\PduR.c	  1530    {
; ..\component\PduR\Implementation\PduR.c	  1531      retVal = memIdx;
; ..\component\PduR\Implementation\PduR.c	  1532    }
; ..\component\PduR\Implementation\PduR.c	  1533    return retVal;
; ..\component\PduR\Implementation\PduR.c	  1534  }
; ..\component\PduR\Implementation\PduR.c	  1535  #endif
; ..\component\PduR\Implementation\PduR.c	  1536  
; ..\component\PduR\Implementation\PduR.c	  1537  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1538  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1539   *  PduR_CreatePartitionLookupTable
; ..\component\PduR\Implementation\PduR.c	  1540   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1541  /*!
; ..\component\PduR\Implementation\PduR.c	  1542   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1543   *
; ..\component\PduR\Implementation\PduR.c	  1544   *
; ..\component\PduR\Implementation\PduR.c	  1545   *
; ..\component\PduR\Implementation\PduR.c	  1546   *
; ..\component\PduR\Implementation\PduR.c	  1547   *
; ..\component\PduR\Implementation\PduR.c	  1548   */
; ..\component\PduR\Implementation\PduR.c	  1549  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_CreatePartitionLookupTable(void)
; ..\component\PduR\Implementation\PduR.c	  1550  {
; ..\component\PduR\Implementation\PduR.c	  1551    PduR_MemIdxType memIdx;
; ..\component\PduR\Implementation\PduR.c	  1552    PduR_PartitionLookupTableRamIterType osApplicationId;
; ..\component\PduR\Implementation\PduR.c	  1553  
; ..\component\PduR\Implementation\PduR.c	  1554    for (osApplicationId = 0u; osApplicationId < PduR_GetSizeOfPartitionLookupTableRam(); osApplicationId++)
; ..\component\PduR\Implementation\PduR.c	  1555    {
; ..\component\PduR\Implementation\PduR.c	  1556      PduR_SetOsApplicationToPduROfPartitionLookupTableRam(osApplicationId, 0xFFu); /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR.c	  1557      for (memIdx = 0u; memIdx < PduR_GetSizeOfPartitionIdentifiers(); memIdx++)  /* COV_PDUR_RUNS_ON_ALL_APPLICATIONS */
; ..\component\PduR\Implementation\PduR.c	  1558      {
; ..\component\PduR\Implementation\PduR.c	  1559        if (((PduR_PartitionLookupTableRamIterType) PduR_GetPartitionSNVOfPartitionIdentifiers(memIdx)) == osApplicationId)
; ..\component\PduR\Implementation\PduR.c	  1560        {
; ..\component\PduR\Implementation\PduR.c	  1561          PduR_SetOsApplicationToPduROfPartitionLookupTableRam(osApplicationId, memIdx); /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR.c	  1562          break;
; ..\component\PduR\Implementation\PduR.c	  1563        }
; ..\component\PduR\Implementation\PduR.c	  1564      }
; ..\component\PduR\Implementation\PduR.c	  1565    }
; ..\component\PduR\Implementation\PduR.c	  1566  }
; ..\component\PduR\Implementation\PduR.c	  1567  #endif
; ..\component\PduR\Implementation\PduR.c	  1568  
; ..\component\PduR\Implementation\PduR.c	  1569  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1570   *  PduR_GetMemIdx
; ..\component\PduR\Implementation\PduR.c	  1571   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1572  /*!
; ..\component\PduR\Implementation\PduR.c	  1573   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1574   *
; ..\component\PduR\Implementation\PduR.c	  1575   *
; ..\component\PduR\Implementation\PduR.c	  1576   *
; ..\component\PduR\Implementation\PduR.c	  1577   *
; ..\component\PduR\Implementation\PduR.c	  1578   */
; ..\component\PduR\Implementation\PduR.c	  1579  LOCAL_INLINE FUNC(PduR_MemIdxType, PDUR_CODE) PduR_GetMemIdx(void)
; ..\component\PduR\Implementation\PduR.c	  1580  {
; ..\component\PduR\Implementation\PduR.c	  1581  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1582    return PduR_GetMemorySectionIndexOfOsApplication(GetApplicationID());
; ..\component\PduR\Implementation\PduR.c	  1583  #else
; ..\component\PduR\Implementation\PduR.c	  1584    return partitionIndexOfCSLForCommonSharedMemory;
; ..\component\PduR\Implementation\PduR.c	  1585  #endif
; ..\component\PduR\Implementation\PduR.c	  1586  }
; ..\component\PduR\Implementation\PduR.c	  1587  
; ..\component\PduR\Implementation\PduR.c	  1588  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1589   *  PduR_PreInit
; ..\component\PduR\Implementation\PduR.c	  1590   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1591  /*!
; ..\component\PduR\Implementation\PduR.c	  1592   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1593   *
; ..\component\PduR\Implementation\PduR.c	  1594   *
; ..\component\PduR\Implementation\PduR.c	  1595   *
; ..\component\PduR\Implementation\PduR.c	  1596   *
; ..\component\PduR\Implementation\PduR.c	  1597   *
; ..\component\PduR\Implementation\PduR.c	  1598   *
; ..\component\PduR\Implementation\PduR.c	  1599   *
; ..\component\PduR\Implementation\PduR.c	  1600   *
; ..\component\PduR\Implementation\PduR.c	  1601   *
; ..\component\PduR\Implementation\PduR.c	  1602   *
; ..\component\PduR\Implementation\PduR.c	  1603   *
; ..\component\PduR\Implementation\PduR.c	  1604   *
; ..\component\PduR\Implementation\PduR.c	  1605   *
; ..\component\PduR\Implementation\PduR.c	  1606   *
; ..\component\PduR\Implementation\PduR.c	  1607   */
; ..\component\PduR\Implementation\PduR.c	  1608  FUNC(void, PDUR_CODE) PduR_PreInit(P2CONST(PduR_PBConfigType, AUTOMATIC, PDUR_INIT_DATA) ConfigPtr)
; Function PduR_PreInit
.L50:
PduR_PreInit:	.type	func

; ..\component\PduR\Implementation\PduR.c	  1609  {
; ..\component\PduR\Implementation\PduR.c	  1610    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1611    PduR_PCPartitionConfigIdxOfPartitionIdentifiersType partitionCounter;
; ..\component\PduR\Implementation\PduR.c	  1612  
; ..\component\PduR\Implementation\PduR.c	  1613  #if(PDUR_USE_INIT_POINTER == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1614    PduR_ConfigDataPtr = ConfigPtr;
; ..\component\PduR\Implementation\PduR.c	  1615    if(PduR_ConfigDataPtr == NULL_PTR)
; ..\component\PduR\Implementation\PduR.c	  1616    {
; ..\component\PduR\Implementation\PduR.c	  1617  # if(PDUR_USE_ECUM_BSW_ERROR_HOOK == STD_ON)    /* COV_PDUR_VAR_DEPENDENT_SWITCH */
; ..\component\PduR\Implementation\PduR.c	  1618      EcuM_BswErrorHook(PDUR_MODULE_ID, ECUM_BSWERROR_NULLPTR);
; ..\component\PduR\Implementation\PduR.c	  1619  # endif
; ..\component\PduR\Implementation\PduR.c	  1620      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR.c	  1621    }
; ..\component\PduR\Implementation\PduR.c	  1622  # if (PDUR_FINALMAGICNUMBER == STD_ON)  /* COV_PDUR_VAR_DEPENDENT_SWITCH */
; ..\component\PduR\Implementation\PduR.c	  1623    else if(PduR_GetFinalMagicNumber() != PDUR_FINAL_MAGIC_NUMBER)
; ..\component\PduR\Implementation\PduR.c	  1624    {
; ..\component\PduR\Implementation\PduR.c	  1625  #  if(PDUR_USE_ECUM_BSW_ERROR_HOOK == STD_ON)   /* COV_PDUR_VAR_DEPENDENT_SWITCH */
; ..\component\PduR\Implementation\PduR.c	  1626      EcuM_BswErrorHook(PDUR_MODULE_ID, ECUM_BSWERROR_MAGICNUMBER);
; ..\component\PduR\Implementation\PduR.c	  1627  #  endif
; ..\component\PduR\Implementation\PduR.c	  1628      errorId = PDUR_E_INIT_FAILED;
; ..\component\PduR\Implementation\PduR.c	  1629      PduR_ConfigDataPtr = (const PduR_PBConfigType *) NULL_PTR;
; ..\component\PduR\Implementation\PduR.c	  1630    }
; ..\component\PduR\Implementation\PduR.c	  1631    else
; ..\component\PduR\Implementation\PduR.c	  1632  # endif
; ..\component\PduR\Implementation\PduR.c	  1633  #else
; ..\component\PduR\Implementation\PduR.c	  1634    if(ConfigPtr != NULL_PTR)
	mov	d7,#0
	jz.a	a4,.L26
.L160:

; ..\component\PduR\Implementation\PduR.c	  1635    {
; ..\component\PduR\Implementation\PduR.c	  1636      errorId = PDUR_E_INIT_FAILED;
	mov	d7,#11
	j	.L27
.L26:

; ..\component\PduR\Implementation\PduR.c	  1637    }
; ..\component\PduR\Implementation\PduR.c	  1638    else
; ..\component\PduR\Implementation\PduR.c	  1639  #endif
; ..\component\PduR\Implementation\PduR.c	  1640    {
; ..\component\PduR\Implementation\PduR.c	  1641  #if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1642      PduR_CreatePartitionLookupTable();
; ..\component\PduR\Implementation\PduR.c	  1643      /* Initialize shared memory section. */
; ..\component\PduR\Implementation\PduR.c	  1644      PduR_InitMemorySection(partitionIndexOfCSLForCommonSharedMemory);
; ..\component\PduR\Implementation\PduR.c	  1645  #endif
; ..\component\PduR\Implementation\PduR.c	  1646  
; ..\component\PduR\Implementation\PduR.c	  1647      for (partitionCounter = 0u; partitionCounter < PduR_GetSizeOfPartitionIdentifiers(); partitionCounter++)
; ..\component\PduR\Implementation\PduR.c	  1648      {
; ..\component\PduR\Implementation\PduR.c	  1649        PduR_SetInitialized(FALSE, partitionCounter); /* SBSW_PDUR_CSL01 */
	movh.a	a15,#@his(PduR_PCPartitionConfig)
	ld.a	a15,[a15]@los(PduR_PCPartitionConfig)
	mov	d15,#0
	st.b	[a15],d15
.L176:

; ..\component\PduR\Implementation\PduR.c	  1650      }
; ..\component\PduR\Implementation\PduR.c	  1651  
; ..\component\PduR\Implementation\PduR.c	  1652      PduR_PreInitialized = TRUE;
	movh.a	a15,#@his(PduR_PreInitialized)
.L177:
	mov	d15,#1
	st.b	[a15]@los(PduR_PreInitialized),d15
.L27:

; ..\component\PduR\Implementation\PduR.c	  1653    }
; ..\component\PduR\Implementation\PduR.c	  1654    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1655  #if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1656    if(errorId != PDUR_E_NO_ERROR)
	jeq	d7,#0,.L28
.L178:

; ..\component\PduR\Implementation\PduR.c	  1657    {
; ..\component\PduR\Implementation\PduR.c	  1658      PduR_Det_ReportError(PDUR_FCT_PREINIT, errorId);
	fcall	.cocofun_3
	mov	d6,#1
	j	Det_ReportError
.L28:

; ..\component\PduR\Implementation\PduR.c	  1659    }
; ..\component\PduR\Implementation\PduR.c	  1660  #else
; ..\component\PduR\Implementation\PduR.c	  1661    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1662  #endif
; ..\component\PduR\Implementation\PduR.c	  1663  }
	ret
.L121:
	
__PduR_PreInit_function_end:
	.size	PduR_PreInit,__PduR_PreInit_function_end-PduR_PreInit
.L70:
	; End of function
	
	.sdecl	'.text.PduR.PduR_Init',code,cluster('PduR_Init')
	.sect	'.text.PduR.PduR_Init'
	.align	2
	
	.global	PduR_Init

; ..\component\PduR\Implementation\PduR.c	  1664  
; ..\component\PduR\Implementation\PduR.c	  1665  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1666   * PduR_Init
; ..\component\PduR\Implementation\PduR.c	  1667   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1668  /*!
; ..\component\PduR\Implementation\PduR.c	  1669   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1670   *
; ..\component\PduR\Implementation\PduR.c	  1671   *
; ..\component\PduR\Implementation\PduR.c	  1672   *
; ..\component\PduR\Implementation\PduR.c	  1673   *
; ..\component\PduR\Implementation\PduR.c	  1674   *
; ..\component\PduR\Implementation\PduR.c	  1675   *
; ..\component\PduR\Implementation\PduR.c	  1676   *
; ..\component\PduR\Implementation\PduR.c	  1677   *
; ..\component\PduR\Implementation\PduR.c	  1678   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1679  FUNC(void, PDUR_CODE) PduR_Init(P2CONST(PduR_PBConfigType, AUTOMATIC, PDUR_INIT_DATA) ConfigPtr)
; Function PduR_Init
.L52:
PduR_Init:	.type	func

; ..\component\PduR\Implementation\PduR.c	  1680  {
; ..\component\PduR\Implementation\PduR.c	  1681  /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1682    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1683  
; ..\component\PduR\Implementation\PduR.c	  1684    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1685    if (!PduR_IsPreInitialized())
	mov	d7,#0
	fcall	.cocofun_1
	jne	d15,#0,.L29
.L183:

; ..\component\PduR\Implementation\PduR.c	  1686    {
; ..\component\PduR\Implementation\PduR.c	  1687      errorId = PDUR_E_NO_PREINIT;
	mov	d7,#4
	j	.L30
.L29:

; ..\component\PduR\Implementation\PduR.c	  1688    }
; ..\component\PduR\Implementation\PduR.c	  1689    else if(PduR_IsInitialized(PduR_GetMemIdx()))
	fcall	.cocofun_2
.L161:
	jeq	d15,#0,.L31
.L184:

; ..\component\PduR\Implementation\PduR.c	  1690    {
; ..\component\PduR\Implementation\PduR.c	  1691      errorId = PDUR_E_ALREADY_INITIALIZED;
	mov	d7,#3
	j	.L32
.L31:

; ..\component\PduR\Implementation\PduR.c	  1692    }
; ..\component\PduR\Implementation\PduR.c	  1693    else
; ..\component\PduR\Implementation\PduR.c	  1694    {
; ..\component\PduR\Implementation\PduR.c	  1695      PduR_InitMemorySection(PduR_GetMemIdx());
; ..\component\PduR\Implementation\PduR.c	  1696    }
; ..\component\PduR\Implementation\PduR.c	  1697    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1698  #if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1699    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1700    {
; ..\component\PduR\Implementation\PduR.c	  1701      PduR_Det_ReportError(PDUR_FCT_INIT, errorId);
; ..\component\PduR\Implementation\PduR.c	  1702    }
; ..\component\PduR\Implementation\PduR.c	  1703  #else
; ..\component\PduR\Implementation\PduR.c	  1704    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1705  #endif
; ..\component\PduR\Implementation\PduR.c	  1706    PDUR_DUMMY_STATEMENT(ConfigPtr);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1707  }
; ..\component\PduR\Implementation\PduR.c	  1708  
; ..\component\PduR\Implementation\PduR.c	  1709  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1710   * PduR_InitMemorySection
; ..\component\PduR\Implementation\PduR.c	  1711   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1712  /*!
; ..\component\PduR\Implementation\PduR.c	  1713   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1714   *
; ..\component\PduR\Implementation\PduR.c	  1715   *
; ..\component\PduR\Implementation\PduR.c	  1716   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1717  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_InitMemorySection(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  1718  {
; ..\component\PduR\Implementation\PduR.c	  1719  #if(PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1720    PduR_Init_RmDestRpgRom(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1721  #endif
; ..\component\PduR\Implementation\PduR.c	  1722  
; ..\component\PduR\Implementation\PduR.c	  1723  #if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1724    PduR_Rm_MultipleSourceHandler_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1725  #endif
; ..\component\PduR\Implementation\PduR.c	  1726  
; ..\component\PduR\Implementation\PduR.c	  1727  #if(PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1728    PduR_Bm_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1729  #endif
; ..\component\PduR\Implementation\PduR.c	  1730  
; ..\component\PduR\Implementation\PduR.c	  1731  #if(PDUR_FMFIFORAM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1732    PduR_Fm_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1733  #endif
; ..\component\PduR\Implementation\PduR.c	  1734  
; ..\component\PduR\Implementation\PduR.c	  1735  #if (PDUR_SMDATAPLANEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1736    PduR_Sm_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1737  #endif
; ..\component\PduR\Implementation\PduR.c	  1738  
; ..\component\PduR\Implementation\PduR.c	  1739  #if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1740    PduR_RmIf_InitDestPduState(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1741  #endif
; ..\component\PduR\Implementation\PduR.c	  1742  
; ..\component\PduR\Implementation\PduR.c	  1743  #if(PDUR_EXISTS_SINGLE_BUFFER_QUEUE_IMPLEMENTATIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1744    PduR_RmIf_SingleBuffer_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1745  #endif
; ..\component\PduR\Implementation\PduR.c	  1746  
; ..\component\PduR\Implementation\PduR.c	  1747  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1748    PduR_RmTp_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1749  #endif
; ..\component\PduR\Implementation\PduR.c	  1750  
; ..\component\PduR\Implementation\PduR.c	  1751  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1752    PduR_McQ_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1753  #endif
; ..\component\PduR\Implementation\PduR.c	  1754  
; ..\component\PduR\Implementation\PduR.c	  1755  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1756    PduR_EvC_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1757  #endif
; ..\component\PduR\Implementation\PduR.c	  1758  
; ..\component\PduR\Implementation\PduR.c	  1759  #if (PDUR_SPINLOCKRAM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1760    PduR_Lock_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1761  #endif
; ..\component\PduR\Implementation\PduR.c	  1762  
; ..\component\PduR\Implementation\PduR.c	  1763  #if (PDUR_INTERFACEFIFOQUEUEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1764    PduR_IFQ_Init(memIdx);
; ..\component\PduR\Implementation\PduR.c	  1765  #endif
; ..\component\PduR\Implementation\PduR.c	  1766  
; ..\component\PduR\Implementation\PduR.c	  1767    PduR_SetInitialized(TRUE, memIdx);        /* SBSW_PDUR_CSL_VAR_ACCESS */
	mov	d15,#1
	st.b	[a15],d15
.L32:
.L30:
	jeq	d7,#0,.L33
.L185:
	fcall	.cocofun_3
	mov	d6,d5
	j	Det_ReportError
.L33:
	ret
.L125:
	
__PduR_Init_function_end:
	.size	PduR_Init,__PduR_Init_function_end-PduR_Init
.L75:
	; End of function
	
	.sdecl	'.text.PduR.PduR_Rm_GetSrcDestPdu',code,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.text.PduR.PduR_Rm_GetSrcDestPdu'
	.align	2
	
	.global	PduR_Rm_GetSrcDestPdu

; ..\component\PduR\Implementation\PduR.c	  1768  }  /* PRQA S 6050 */ /* MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR.c	  1769  
; ..\component\PduR\Implementation\PduR.c	  1770  #if (PDUR_MAIN_FUNCTION == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1771  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1772    PduR_MainFunction
; ..\component\PduR\Implementation\PduR.c	  1773  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1774  /*!
; ..\component\PduR\Implementation\PduR.c	  1775   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1776   *
; ..\component\PduR\Implementation\PduR.c	  1777   *
; ..\component\PduR\Implementation\PduR.c	  1778   *
; ..\component\PduR\Implementation\PduR.c	  1779   *
; ..\component\PduR\Implementation\PduR.c	  1780   *
; ..\component\PduR\Implementation\PduR.c	  1781   *
; ..\component\PduR\Implementation\PduR.c	  1782   *
; ..\component\PduR\Implementation\PduR.c	  1783   *
; ..\component\PduR\Implementation\PduR.c	  1784   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1785  FUNC(void, PDUR_CODE) PduR_MainFunction(void)
; ..\component\PduR\Implementation\PduR.c	  1786  {
; ..\component\PduR\Implementation\PduR.c	  1787  # if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1788    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1789    PduR_ApplicationId2DestApplicationManagerRomIterType applicationId = (PduR_ApplicationId2DestApplicationManagerRomIterType) GetApplicationID();
; ..\component\PduR\Implementation\PduR.c	  1790  #  if (PDUR_DEV_ERROR_DETECT == STD_ON) /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  1791    if(applicationId >= PduR_GetSizeOfApplicationId2DestApplicationManagerRom())
; ..\component\PduR\Implementation\PduR.c	  1792    {
; ..\component\PduR\Implementation\PduR.c	  1793      errorId = PDUR_E_INVALID_APPLICATION_ID;
; ..\component\PduR\Implementation\PduR.c	  1794    }
; ..\component\PduR\Implementation\PduR.c	  1795  #   if(PDUR_INVALIDHNDOFAPPLICATIONID2DESTAPPLICATIONMANAGERROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1796    else if(PduR_IsInvalidHndOfApplicationId2DestApplicationManagerRom(applicationId))
; ..\component\PduR\Implementation\PduR.c	  1797    {
; ..\component\PduR\Implementation\PduR.c	  1798      errorId = PDUR_E_INVALID_APPLICATION_ID;
; ..\component\PduR\Implementation\PduR.c	  1799    }
; ..\component\PduR\Implementation\PduR.c	  1800  #   endif
; ..\component\PduR\Implementation\PduR.c	  1801    else
; ..\component\PduR\Implementation\PduR.c	  1802  #  endif
; ..\component\PduR\Implementation\PduR.c	  1803  # endif
; ..\component\PduR\Implementation\PduR.c	  1804    {
; ..\component\PduR\Implementation\PduR.c	  1805      if(PduR_IsPreInitialized() && PduR_IsInitialized(PduR_GetMemIdx())) /* PRQA S 3415 */ /* MD_PduR_3415 */
; ..\component\PduR\Implementation\PduR.c	  1806      {
; ..\component\PduR\Implementation\PduR.c	  1807        PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx = 0; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1808  # if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1809        destApplicationManagerRomIdx = PduR_GetDestApplicationManagerRomIdxOfApplicationId2DestApplicationManagerRom(applicationId); /* PRQA S 2842 */ /* MD_PduR_2842 */
; ..\component\PduR\Implementation\PduR.c	  1810  # endif
; ..\component\PduR\Implementation\PduR.c	  1811  
; ..\component\PduR\Implementation\PduR.c	  1812  # if ((PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR.c	  1813  #  if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1814        /* In case of an overflowed event queue, flush all queues and apply fallback strategy to process all destinations */
; ..\component\PduR\Implementation\PduR.c	  1815        if(PduR_EvC_IsAnyEvCOverflowed(destApplicationManagerRomIdx) == TRUE)
; ..\component\PduR\Implementation\PduR.c	  1816        {
; ..\component\PduR\Implementation\PduR.c	  1817          PduR_EvC_FlushAllEvCOfDestApplication(destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1818          PduR_ProcessAllDestinationsOfDestApplication(destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1819        }
; ..\component\PduR\Implementation\PduR.c	  1820        /* Otherwise, process deferred event cache and call the corresponding Mainfunction */
; ..\component\PduR\Implementation\PduR.c	  1821        else
; ..\component\PduR\Implementation\PduR.c	  1822        {
; ..\component\PduR\Implementation\PduR.c	  1823          PduR_EvC_ReadAndProcessEvCOfDestApplication(destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1824        }
; ..\component\PduR\Implementation\PduR.c	  1825  #  else
; ..\component\PduR\Implementation\PduR.c	  1826        PduR_ProcessAllDestinationsOfDestApplication(destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1827  #  endif
; ..\component\PduR\Implementation\PduR.c	  1828  # endif
; ..\component\PduR\Implementation\PduR.c	  1829  
; ..\component\PduR\Implementation\PduR.c	  1830  # if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1831        /* Process deferred If Pdus which are handled by the multicore queue in context of cyclic MainFunction */
; ..\component\PduR\Implementation\PduR.c	  1832        PduR_McQ_MainFunction((PduR_DestApplicationManagerRomIdxOfMmRomType) destApplicationManagerRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1833  # endif
; ..\component\PduR\Implementation\PduR.c	  1834      }
; ..\component\PduR\Implementation\PduR.c	  1835    }
; ..\component\PduR\Implementation\PduR.c	  1836  
; ..\component\PduR\Implementation\PduR.c	  1837  # if(PDUR_MULTICORE == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1838    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  1839  #  if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1840    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  1841    {
; ..\component\PduR\Implementation\PduR.c	  1842      PduR_Det_ReportError(PDUR_FCT_MAINFUNCTION_TX, errorId);
; ..\component\PduR\Implementation\PduR.c	  1843    }
; ..\component\PduR\Implementation\PduR.c	  1844  #  else
; ..\component\PduR\Implementation\PduR.c	  1845    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  1846  #  endif
; ..\component\PduR\Implementation\PduR.c	  1847  # endif
; ..\component\PduR\Implementation\PduR.c	  1848  }  /* PRQA S 6050 */ /* MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR.c	  1849  #endif
; ..\component\PduR\Implementation\PduR.c	  1850  
; ..\component\PduR\Implementation\PduR.c	  1851  #if(PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1852  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1853   * PduR_Init_RmDestRpgRom
; ..\component\PduR\Implementation\PduR.c	  1854   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1855  /*!
; ..\component\PduR\Implementation\PduR.c	  1856   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1857   *
; ..\component\PduR\Implementation\PduR.c	  1858   *
; ..\component\PduR\Implementation\PduR.c	  1859   *
; ..\component\PduR\Implementation\PduR.c	  1860   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1861  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Init_RmDestRpgRom(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  1862  {
; ..\component\PduR\Implementation\PduR.c	  1863    {
; ..\component\PduR\Implementation\PduR.c	  1864      PduR_RmDestRpgRomIterType rmDestRpgRomIdx;
; ..\component\PduR\Implementation\PduR.c	  1865      for(rmDestRpgRomIdx = 0u; rmDestRpgRomIdx < PduR_GetSizeOfRmDestRpgRom(memIdx); rmDestRpgRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  1866      {
; ..\component\PduR\Implementation\PduR.c	  1867        PduR_SetEnabledCntOfRmDestRpgRam(rmDestRpgRomIdx, PduR_GetInitialEnabledCntOfRmDestRpgRom(rmDestRpgRomIdx, memIdx), memIdx);      /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR.c	  1868      }
; ..\component\PduR\Implementation\PduR.c	  1869    }
; ..\component\PduR\Implementation\PduR.c	  1870    {
; ..\component\PduR\Implementation\PduR.c	  1871      PduR_RpgRomIterType rpgRomIdx;
; ..\component\PduR\Implementation\PduR.c	  1872      for(rpgRomIdx = 0u; rpgRomIdx < PduR_GetSizeOfRpgRom(memIdx); rpgRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  1873      {
; ..\component\PduR\Implementation\PduR.c	  1874        PduR_SetEnabledOfRpgRam(rpgRomIdx, PduR_IsEnabledAtInitOfRpgRom(rpgRomIdx, memIdx), memIdx);    /* SBSW_PDUR_CSL01 */ /* PRQA S 2995, 2996 */ /* MD_PduR_2995_2996 */
; ..\component\PduR\Implementation\PduR.c	  1875      }
; ..\component\PduR\Implementation\PduR.c	  1876    }
; ..\component\PduR\Implementation\PduR.c	  1877  }
; ..\component\PduR\Implementation\PduR.c	  1878  #endif
; ..\component\PduR\Implementation\PduR.c	  1879  
; ..\component\PduR\Implementation\PduR.c	  1880  #if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1881  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1882   * PduR_Rm_MultipleSourceHandler_Init
; ..\component\PduR\Implementation\PduR.c	  1883   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1884  /*!
; ..\component\PduR\Implementation\PduR.c	  1885   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1886   *
; ..\component\PduR\Implementation\PduR.c	  1887   *
; ..\component\PduR\Implementation\PduR.c	  1888   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1889  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Rm_MultipleSourceHandler_Init(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  1890  {
; ..\component\PduR\Implementation\PduR.c	  1891    PduR_RmGDestNto1InfoRamIterType rmGDestNto1InfoRamIdx;
; ..\component\PduR\Implementation\PduR.c	  1892  
; ..\component\PduR\Implementation\PduR.c	  1893    for(rmGDestNto1InfoRamIdx = 0u; rmGDestNto1InfoRamIdx < PduR_GetSizeOfRmGDestNto1InfoRam(memIdx); rmGDestNto1InfoRamIdx++)
; ..\component\PduR\Implementation\PduR.c	  1894    {
; ..\component\PduR\Implementation\PduR.c	  1895      PduR_SetTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoRamIdx, FALSE, memIdx);  /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1896      PduR_SetRmDestRomIdxOfRmGDestNto1InfoRam(rmGDestNto1InfoRamIdx, PDUR_NO_RMDESTROMIDXOFRMGDESTNTO1INFORAM, memIdx);     /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1897    }
; ..\component\PduR\Implementation\PduR.c	  1898  }
; ..\component\PduR\Implementation\PduR.c	  1899  #endif
; ..\component\PduR\Implementation\PduR.c	  1900  
; ..\component\PduR\Implementation\PduR.c	  1901  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1902   * PduR_Rm_GetSrcDestPdu
; ..\component\PduR\Implementation\PduR.c	  1903   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1904  /*!
; ..\component\PduR\Implementation\PduR.c	  1905   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1906   *
; ..\component\PduR\Implementation\PduR.c	  1907   *
; ..\component\PduR\Implementation\PduR.c	  1908   *
; ..\component\PduR\Implementation\PduR.c	  1909   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1910  FUNC(Std_ReturnType, PDUR_CODE) PduR_Rm_GetSrcDestPdu(PduR_RmGDestRomIterType rmGDestRomIdx, P2VAR(PduR_RmDestRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx)
; Function PduR_Rm_GetSrcDestPdu
.L54:
PduR_Rm_GetSrcDestPdu:	.type	func

; ..\component\PduR\Implementation\PduR.c	  1911  {
; ..\component\PduR\Implementation\PduR.c	  1912    Std_ReturnType retVal = E_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  1913  
; ..\component\PduR\Implementation\PduR.c	  1914  #if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1915    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1916  
; ..\component\PduR\Implementation\PduR.c	  1917    if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))  /* COV_PDUR_NTO1_NO_BUFFER_GW_ONLY_ROUTINGPATHS */
; ..\component\PduR\Implementation\PduR.c	  1918    {
; ..\component\PduR\Implementation\PduR.c	  1919      PduR_RmDestRomIterType readRmDestRomIdx = PduR_GetRmDestRomIdxOfRmGDestNto1InfoRam(PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx), memIdx);
; ..\component\PduR\Implementation\PduR.c	  1920  
; ..\component\PduR\Implementation\PduR.c	  1921      if(readRmDestRomIdx == PDUR_NO_RMDESTROMIDXOFRMGDESTNTO1INFORAM)   /* COV_PDUR_NTO1_NO_BUFFER_GW_ONLY_ROUTINGPATHS */
; ..\component\PduR\Implementation\PduR.c	  1922      {
; ..\component\PduR\Implementation\PduR.c	  1923        retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR.c	  1924      }
; ..\component\PduR\Implementation\PduR.c	  1925  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1926      else if(readRmDestRomIdx >= PduR_GetSizeOfRmDestRom()) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR.c	  1927      {
; ..\component\PduR\Implementation\PduR.c	  1928        /* If rmDestRomIdx is out-of-bounds: use one of the valid source rmDests as fallback. */
; ..\component\PduR\Implementation\PduR.c	  1929        *rmDestRomIdx = PduR_GetRmDestRomIdxOfRmGDestRom(rmGDestRomIdx);    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1930      }
; ..\component\PduR\Implementation\PduR.c	  1931      else if(PduR_GetRmGDestRomIdxOfRmDestRom(readRmDestRomIdx) != rmGDestRomIdx) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR.c	  1932      {
; ..\component\PduR\Implementation\PduR.c	  1933        /* The read source rmDest is valid but does not belong to this rmGDestRom. It is erroneous. Use one of the valid source rmDests as fallback. */
; ..\component\PduR\Implementation\PduR.c	  1934        *rmDestRomIdx = PduR_GetRmDestRomIdxOfRmGDestRom(rmGDestRomIdx);    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1935      }
; ..\component\PduR\Implementation\PduR.c	  1936  # endif
; ..\component\PduR\Implementation\PduR.c	  1937      else
; ..\component\PduR\Implementation\PduR.c	  1938      {
; ..\component\PduR\Implementation\PduR.c	  1939        *rmDestRomIdx = readRmDestRomIdx;        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1940      }
; ..\component\PduR\Implementation\PduR.c	  1941    }
; ..\component\PduR\Implementation\PduR.c	  1942    else
; ..\component\PduR\Implementation\PduR.c	  1943  #endif
; ..\component\PduR\Implementation\PduR.c	  1944    {
; ..\component\PduR\Implementation\PduR.c	  1945      *rmDestRomIdx = PduR_GetRmDestRomIdxOfRmGDestRom(rmGDestRomIdx);    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
	mul	d15,d4,#6
	movh.a	a15,#@his(PduR_RmGDestRom)
	lea	a15,[a15]@los(PduR_RmGDestRom)
	addsc.a	a15,a15,d15,#0
.L220:

; ..\component\PduR\Implementation\PduR.c	  1946    }
; ..\component\PduR\Implementation\PduR.c	  1947  
; ..\component\PduR\Implementation\PduR.c	  1948    return retVal;
	mov	d2,#0
.L221:
	ld.bu	d15,[a15]5
.L222:
	st.b	[a4],d15
.L223:

; ..\component\PduR\Implementation\PduR.c	  1949  }
	ret
.L146:
	
__PduR_Rm_GetSrcDestPdu_function_end:
	.size	PduR_Rm_GetSrcDestPdu,__PduR_Rm_GetSrcDestPdu_function_end-PduR_Rm_GetSrcDestPdu
.L100:
	; End of function
	
	.sdecl	'.text.PduR.PduR_InitMemory',code,cluster('PduR_InitMemory')
	.sect	'.text.PduR.PduR_InitMemory'
	.align	2
	
	.global	PduR_InitMemory

; ..\component\PduR\Implementation\PduR.c	  1950  
; ..\component\PduR\Implementation\PduR.c	  1951  #if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1952  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1953   * PduR_Rm_MultipleSourceHandler_Reset
; ..\component\PduR\Implementation\PduR.c	  1954   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1955  /*!
; ..\component\PduR\Implementation\PduR.c	  1956   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1957   *
; ..\component\PduR\Implementation\PduR.c	  1958   *
; ..\component\PduR\Implementation\PduR.c	  1959   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1960  FUNC(void, PDUR_CODE) PduR_Rm_MultipleSourceHandler_Reset(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR.c	  1961  {
; ..\component\PduR\Implementation\PduR.c	  1962    if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR.c	  1963    {
; ..\component\PduR\Implementation\PduR.c	  1964      PduR_RmGDestNto1InfoRamIdxOfRmGDestRomType rmGDestNto1InfoIdx = PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1965      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  1966  
; ..\component\PduR\Implementation\PduR.c	  1967      PduR_SetTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, FALSE, memIdx);  /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1968      PduR_SetRmDestRomIdxOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, PDUR_NO_RMDESTROMIDXOFRMGDESTNTO1INFORAM, memIdx);     /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  1969    }
; ..\component\PduR\Implementation\PduR.c	  1970  }
; ..\component\PduR\Implementation\PduR.c	  1971  #endif
; ..\component\PduR\Implementation\PduR.c	  1972  
; ..\component\PduR\Implementation\PduR.c	  1973  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1974   * PduR_InitMemory
; ..\component\PduR\Implementation\PduR.c	  1975   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1976  /*!
; ..\component\PduR\Implementation\PduR.c	  1977   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1978   *
; ..\component\PduR\Implementation\PduR.c	  1979   *
; ..\component\PduR\Implementation\PduR.c	  1980   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1981  FUNC(void, PDUR_CODE) PduR_InitMemory(void)
; Function PduR_InitMemory
.L56:
PduR_InitMemory:	.type	func

; ..\component\PduR\Implementation\PduR.c	  1982  {
; ..\component\PduR\Implementation\PduR.c	  1983    PduR_PreInitialized = FALSE;
	movh.a	a15,#@his(PduR_PreInitialized)
.L190:
	mov	d15,#0
	st.b	[a15]@los(PduR_PreInitialized),d15
.L191:

; ..\component\PduR\Implementation\PduR.c	  1984  #if(PDUR_USE_INIT_POINTER == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1985    PduR_ConfigDataPtr = NULL_PTR;
; ..\component\PduR\Implementation\PduR.c	  1986  #endif
; ..\component\PduR\Implementation\PduR.c	  1987  }
	ret
.L132:
	
__PduR_InitMemory_function_end:
	.size	PduR_InitMemory,__PduR_InitMemory_function_end-PduR_InitMemory
.L80:
	; End of function
	
	.calls	'PduR_GetConfigurationId','Det_ReportError'
	.calls	'PduR_UpTransmit','__INDIRECT__'
	.calls	'PduR_UpTransmit','Det_ReportError'
	.calls	'PduR_LoIfRxIndication','PduR_RmIf_RoutePdu'
	.calls	'PduR_LoIfRxIndication','Det_ReportError'
	.calls	'PduR_LoIfTxConfirmation','PduR_RmIf_MultipleSourceHandler_TxConfirmation'
	.calls	'PduR_LoIfTxConfirmation','Det_ReportError'
	.calls	'PduR_PreInit','Det_ReportError'
	.calls	'PduR_Init','Det_ReportError'
	.calls	'PduR_GetConfigurationId','.cocofun_1'
	.calls	'PduR_GetConfigurationId','.cocofun_2'
	.calls	'PduR_GetConfigurationId','.cocofun_3'
	.calls	'PduR_UpTransmit','.cocofun_1'
	.calls	'PduR_UpTransmit','.cocofun_3'
	.calls	'PduR_LoIfRxIndication','.cocofun_1'
	.calls	'PduR_LoIfRxIndication','.cocofun_2'
	.calls	'PduR_LoIfRxIndication','.cocofun_3'
	.calls	'PduR_LoIfTxConfirmation','.cocofun_1'
	.calls	'PduR_LoIfTxConfirmation','.cocofun_3'
	.calls	'PduR_PreInit','.cocofun_3'
	.calls	'PduR_Init','.cocofun_1'
	.calls	'PduR_Init','.cocofun_2'
	.calls	'PduR_Init','.cocofun_3'
	.calls	'PduR_GetConfigurationId','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.calls	'PduR_UpTransmit','',0
	.calls	'PduR_LoIfRxIndication','',0
	.calls	'PduR_LoIfTxConfirmation','',0
	.calls	'PduR_PreInit','',0
	.calls	'PduR_Init','',0
	.calls	'PduR_Rm_GetSrcDestPdu','',0
	.extern	Det_ReportError
	.extern	PduR_RmGDestRom
	.extern	PduR_RmTransmitFctPtr
	.extern	PduR_Tx2Lo
	.extern	PduR_TxIf2Up
	.extern	PduR_PCPartitionConfig
	.extern	PduR_PreInitialized
	.extern	PduR_RmIf_RoutePdu
	.extern	PduR_RmIf_MultipleSourceHandler_TxConfirmation
	.extern	__INDIRECT__
	.calls	'PduR_InitMemory','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L58:
	.word	28963
	.half	3
	.word	.L59
	.byte	4
.L57:
	.byte	1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L60
.L119:
	.byte	2
	.byte	'unsigned char',0,1,8
.L128:
	.byte	3
	.byte	'PduR_InitMemorySection',0,3,1,181,13,36,1,1
.L129:
	.byte	4
	.byte	'memIdx',0,1,181,13,75
	.word	133
.L131:
	.byte	5,0,2
	.byte	'int',0,4,5,6
	.word	199
	.byte	7
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,8
	.word	206
	.byte	0,2
	.byte	'unsigned int',0,4,7,9
	.word	248
	.byte	10
	.word	248
	.byte	11
	.byte	'__cmpswapw',0
	.word	264
	.byte	1,1,1,1,12
	.byte	'p',0
	.word	269
	.byte	12
	.byte	'value',0
	.word	248
	.byte	12
	.byte	'compare',0
	.word	248
	.byte	0,2
	.byte	'unsigned short int',0,2,7,13
	.byte	'Det_ReportError',0,2,154,2,32
	.word	133
	.byte	1,1,1,1,4
	.byte	'ModuleId',0,2,154,2,56
	.word	326
	.byte	4
	.byte	'InstanceId',0,2,154,2,72
	.word	133
	.byte	4
	.byte	'ApiId',0,2,154,2,90
	.word	133
	.byte	4
	.byte	'ErrorId',0,2,154,2,103
	.word	133
	.byte	0
.L116:
	.byte	2
	.byte	'unsigned long int',0,4,7,14
	.byte	'sPduR_PCConfigType',0,3,235,12,16,1,15
	.byte	'PduR_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,6
	.word	469
.L122:
	.byte	10
	.word	527
	.byte	10
	.word	133
	.byte	16
	.byte	'SduDataPtrType',0,4,196,1,54
	.word	537
	.byte	17,4,197,1,9,8,15
	.byte	'SduDataPtr',0
	.word	542
	.byte	4,2,35,0,15
	.byte	'SduLength',0
	.word	133
	.byte	1,2,35,4,0,6
	.word	566
.L135:
	.byte	10
	.word	612
	.byte	10
	.word	133
.L148:
	.byte	10
	.word	133
	.byte	13
	.byte	'PduR_RmIf_RoutePdu',0,5,109,33
	.word	133
	.byte	1,1,1,1,4
	.byte	'rmSrcIdx',0,5,109,74
	.word	133
	.byte	4
	.byte	'info',0,5,109,132,1
	.word	617
	.byte	0,18
	.byte	'PduR_RmIf_MultipleSourceHandler_TxConfirmation',0,5,223,1,23,1,1,1,1,4
	.byte	'rmGDestRomIdx',0,5,223,1,102
	.word	133
	.byte	0,19
	.word	150
	.byte	20
	.word	181
	.byte	5,0,21
	.byte	'__INDIRECT__',0,1,1,1,1,1,1,22,1,10
	.word	807
	.byte	16
	.byte	'__codeptr',0,1,1,1
	.word	809
	.byte	16
	.byte	'boolean',0,6,101,31
	.word	133
	.byte	16
	.byte	'uint8',0,6,104,31
	.word	133
	.byte	2
	.byte	'short int',0,2,5,16
	.byte	'sint16',0,6,105,31
	.word	862
	.byte	16
	.byte	'uint16',0,6,106,31
	.word	326
	.byte	2
	.byte	'long int',0,4,5,16
	.byte	'sint32',0,6,107,31
	.word	905
	.byte	16
	.byte	'uint32',0,6,108,31
	.word	448
	.byte	16
	.byte	'uint8_least',0,6,111,31
	.word	133
	.byte	16
	.byte	'uint32_least',0,6,115,31
	.word	448
	.byte	2
	.byte	'unsigned long long int',0,8,7,16
	.byte	'uint64',0,6,121,30
	.word	988
	.byte	16
	.byte	'StatusType',0,7,127,23
	.word	133
	.byte	16
	.byte	'Std_ReturnType',0,7,132,1,15
	.word	133
	.byte	17,7,134,1,9,8,15
	.byte	'vendorID',0
	.word	326
	.byte	2,2,35,0,15
	.byte	'moduleID',0
	.word	326
	.byte	2,2,35,2,15
	.byte	'sw_major_version',0
	.word	133
	.byte	1,2,35,4,15
	.byte	'sw_minor_version',0
	.word	133
	.byte	1,2,35,5,15
	.byte	'sw_patch_version',0
	.word	133
	.byte	1,2,35,6,0,16
	.byte	'Std_VersionInfoType',0,7,141,1,3
	.word	1072
	.byte	16
	.byte	'PduIdType',0,8,63,15
	.word	133
	.byte	16
	.byte	'PduLengthType',0,8,65,15
	.word	133
	.byte	16
	.byte	'PduInfoType',0,4,201,1,3
	.word	566
	.byte	23,4,203,1,9,1,24
	.byte	'BUFREQ_OK',0,0,24
	.byte	'BUFREQ_E_NOT_OK',0,1,24
	.byte	'BUFREQ_E_BUSY',0,2,24
	.byte	'BUFREQ_E_OVFL',0,3,0,16
	.byte	'BufReq_ReturnType',0,4,209,1,3
	.word	1283
	.byte	23,4,219,1,9,1,24
	.byte	'TP_DATACONF',0,0,24
	.byte	'TP_DATARETRY',0,1,24
	.byte	'TP_CONFPENDING',0,2,0,16
	.byte	'TpDataStateType',0,4,226,1,3
	.word	1379
	.byte	14
	.byte	'sDet_PCConfigType',0,9,238,1,16,1,15
	.byte	'Det_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'Det_PCConfigType',0,9,241,1,3
	.word	1457
	.byte	23,10,147,1,9,1,24
	.byte	'Default_Init_Task',0,0,24
	.byte	'Default_Init_Task_Trusted',0,1,24
	.byte	'IdleTask_OsCore0',0,2,24
	.byte	'bsw_task',0,3,24
	.byte	'swc_init',0,4,24
	.byte	'swc_task',0,5,24
	.byte	'INVALID_TASK',0,6,24
	.byte	'OS_TASKID_COUNT',0,6,0,16
	.byte	'TaskType',0,10,157,1,3
	.word	1539
	.byte	16
	.byte	'Os_Hal_AddressType',0,11,61,16
	.word	448
	.byte	25,64
	.word	448
	.byte	26,15,0,14
	.byte	'Os_ExceptionContextType_Tag',0,12,71,8,160,1,15
	.byte	'AddressRegisters',0
	.word	1724
	.byte	64,2,35,0,15
	.byte	'DataRegisters',0
	.word	1724
	.byte	64,2,35,64,15
	.byte	'Ra',0
	.word	448
	.byte	4,3,35,128,1,15
	.byte	'Psw',0
	.word	448
	.byte	4,3,35,132,1,15
	.byte	'ExceptionSource',0
	.word	448
	.byte	4,3,35,136,1,15
	.byte	'Pcpn',0
	.word	448
	.byte	4,3,35,140,1,15
	.byte	'Pie',0
	.word	448
	.byte	4,3,35,144,1,15
	.byte	'MpuRegionForStackLow',0
	.word	448
	.byte	4,3,35,148,1,15
	.byte	'MpuRegionForStackUpper',0
	.word	448
	.byte	4,3,35,152,1,15
	.byte	'RawPCXI',0
	.word	448
	.byte	4,3,35,156,1,0,16
	.byte	'Os_ExceptionContextType',0,11,66,44
	.word	1733
	.byte	16
	.byte	'Os_InterruptSourceIdType',0,13,238,1,16
	.word	448
	.byte	16
	.byte	'Os_ExceptionSourceIdType',0,13,246,1,16
	.word	448
	.byte	23,13,161,2,9,1,24
	.byte	'RUNNING',0,0,24
	.byte	'READY',0,1,24
	.byte	'WAITING',0,2,24
	.byte	'SUSPENDED',0,3,0,16
	.byte	'TaskStateType',0,13,175,2,3
	.word	2081
	.byte	16
	.byte	'EventMaskType',0,13,182,2,16
	.word	988
	.byte	16
	.byte	'Os_TickType',0,13,200,2,19
	.word	448
	.byte	16
	.byte	'TickType',0,13,206,2,21
	.word	448
	.byte	17,13,220,2,9,12,15
	.byte	'maxallowedvalue',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'ticksperbase',0
	.word	448
	.byte	4,2,35,4,15
	.byte	'mincycle',0
	.word	448
	.byte	4,2,35,8,0,16
	.byte	'AlarmBaseType',0,13,228,2,2
	.word	2213
	.byte	23,13,128,3,9,1,24
	.byte	'APPLICATION_TERMINATED',0,0,24
	.byte	'APPLICATION_RESTARTING',0,1,24
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,16
	.byte	'ApplicationStateType',0,13,133,3,3
	.word	2308
	.byte	23,13,177,3,9,1,24
	.byte	'OSServiceId_GetApplicationID',0,0,24
	.byte	'OSServiceId_GetISRID',0,1,24
	.byte	'OSServiceId_CallTrustedFunction',0,2,24
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,24
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,24
	.byte	'OSServiceId_CheckObjectAccess',0,5,24
	.byte	'OSServiceId_CheckObjectOwnership',0,6,24
	.byte	'OSServiceId_StartScheduleTableRel',0,7,24
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,24
	.byte	'OSServiceId_StopScheduleTable',0,9,24
	.byte	'OSServiceId_NextScheduleTable',0,10,24
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,24
	.byte	'OSServiceId_SyncScheduleTable',0,12,24
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,24
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,24
	.byte	'OSServiceId_IncrementCounter',0,15,24
	.byte	'OSServiceId_GetCounterValue',0,16,24
	.byte	'OSServiceId_GetElapsedValue',0,17,24
	.byte	'OSServiceId_TerminateApplication',0,18,24
	.byte	'OSServiceId_AllowAccess',0,19,24
	.byte	'OSServiceId_GetApplicationState',0,20,24
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,24
	.byte	'OSServiceId_GetCoreID',0,22,24
	.byte	'OSServiceId_StartCore',0,23,24
	.byte	'OSServiceId_StartNonAutosarCore',0,24,24
	.byte	'OSServiceId_GetSpinlock',0,25,24
	.byte	'OSServiceId_ReleaseSpinlock',0,26,24
	.byte	'OSServiceId_TryToGetSpinlock',0,27,24
	.byte	'OSServiceId_ShutdownAllCores',0,28,24
	.byte	'OSServiceId_ControlIdle',0,29,24
	.byte	'OSServiceId_IocSend',0,30,24
	.byte	'OSServiceId_IocWrite',0,31,24
	.byte	'OSServiceId_IocSendGroup',0,32,24
	.byte	'OSServiceId_IocWriteGroup',0,33,24
	.byte	'OSServiceId_IocReceive',0,34,24
	.byte	'OSServiceId_IocRead',0,35,24
	.byte	'OSServiceId_IocReceiveGroup',0,36,24
	.byte	'OSServiceId_IocReadGroup',0,37,24
	.byte	'OSServiceId_IocEmptyQueue',0,38,24
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,24
	.byte	'OSServiceId_GetExceptionContext',0,160,1,24
	.byte	'OSServiceId_SetExceptionContext',0,161,1,24
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,24
	.byte	'OSServiceId_AppKill',0,163,1,24
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,24
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,24
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,24
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,24
	.byte	'OSServiceId_TimerIsr',0,168,1,24
	.byte	'OSServiceId_IsrWrapper',0,169,1,24
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,24
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,24
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,24
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,24
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,24
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,24
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,24
	.byte	'OSServiceId_GetSemaphore',0,177,1,24
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,24
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,24
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,24
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,24
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,24
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,24
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,24
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,24
	.byte	'OSServiceId_HookCallCallback',0,186,1,24
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,24
	.byte	'OSServiceId_IsInterruptPending',0,188,1,24
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,24
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,24
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,24
	.byte	'OSServiceId_GetCoreStartState',0,192,1,24
	.byte	'OSServiceId_StartOS',0,208,1,24
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,24
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,24
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,24
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,24
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,24
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,24
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,24
	.byte	'OSServiceId_ActivateTask',0,217,1,24
	.byte	'OSServiceId_TerminateTask',0,218,1,24
	.byte	'OSServiceId_ChainTask',0,219,1,24
	.byte	'OSServiceId_GetTaskID',0,220,1,24
	.byte	'OSServiceId_GetTaskState',0,221,1,24
	.byte	'OSServiceId_Schedule',0,222,1,24
	.byte	'OSServiceId_SetEvent',0,223,1,24
	.byte	'OSServiceId_ClearEvent',0,224,1,24
	.byte	'OSServiceId_GetEvent',0,225,1,24
	.byte	'OSServiceId_WaitEvent',0,226,1,24
	.byte	'OSServiceId_GetAlarmBase',0,227,1,24
	.byte	'OSServiceId_GetAlarm',0,228,1,24
	.byte	'OSServiceId_SetRelAlarm',0,229,1,24
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,24
	.byte	'OSServiceId_CancelAlarm',0,231,1,24
	.byte	'OSServiceId_GetResource',0,232,1,24
	.byte	'OSServiceId_ReleaseResource',0,233,1,24
	.byte	'OSSERVICEID_COUNT',0,255,1,0,16
	.byte	'OSServiceIdType',0,13,156,4,3
	.word	2420
	.byte	23,13,172,4,9,2,24
	.byte	'OS_STATUS_OK',0,0,24
	.byte	'OS_STATUS_CALLEVEL',0,2,24
	.byte	'OS_STATUS_LIMIT',0,4,24
	.byte	'OS_STATUS_RESOURCE',0,6,24
	.byte	'OS_STATUS_SERVICEID',0,9,24
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,24
	.byte	'OS_STATUS_MISSINGEND',0,11,24
	.byte	'OS_STATUS_DISABLEDINT',0,12,24
	.byte	'OS_STATUS_STACKFAULT',0,13,24
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,24
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,24
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,24
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,24
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,24
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,24
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,24
	.byte	'OS_STATUS_SPINLOCK',0,21,24
	.byte	'OS_STATUS_CORE',0,22,24
	.byte	'OS_STATUS_OVERFLOW',0,245,1,24
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,24
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,24
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,24
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,24
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,24
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,24
	.byte	'OS_STATUS_API_ERROR',0,252,1,24
	.byte	'OS_STATUS_ASSERTION',0,253,1,24
	.byte	'OS_STATUS_OVERLOAD',0,254,1,24
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,24
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,24
	.byte	'OS_STATUS_ID_1',0,131,2,24
	.byte	'OS_STATUS_UNLOCKED',0,133,2,24
	.byte	'OS_STATUS_STATE_1',0,135,2,24
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,24
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,24
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,24
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,24
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,24
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,24
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,24
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,24
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,24
	.byte	'OS_STATUS_ID_2',0,131,4,24
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,24
	.byte	'OS_STATUS_STATE_2',0,135,4,24
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,24
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,24
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,24
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,24
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,24
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,24
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,24
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,24
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,24
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,24
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,24
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,24
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,24
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,24
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,24
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,24
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,24
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,24
	.byte	'OS_STATUS_STOPPED_1',0,133,10,24
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,24
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,24
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,24
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,24
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,24
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,24
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,24
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,24
	.byte	'OS_STATUS_NEXTED_1',0,133,14,24
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,24
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,24
	.byte	'OS_STATUS_LOCKED',0,129,16,24
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,24
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,24
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,24
	.byte	'OS_STATUS_PRIORITY',0,129,18,24
	.byte	'OS_STATUS_ORDER',0,133,18,24
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,24
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,24
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,24
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,24
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,24
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,16
	.byte	'Os_StatusType',0,13,232,5,3
	.word	5590
	.byte	17,13,133,6,9,4,15
	.byte	'Service',0
	.word	2420
	.byte	1,2,35,0,15
	.byte	'Error',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'DetailedError',0
	.word	5590
	.byte	2,2,35,2,0,16
	.byte	'Os_ErrorInformationType',0,13,143,6,3
	.word	8120
	.byte	23,13,175,6,9,1,24
	.byte	'SCHEDULETABLE_STOPPED',0,0,24
	.byte	'SCHEDULETABLE_NEXT',0,1,24
	.byte	'SCHEDULETABLE_WAITING',0,2,24
	.byte	'SCHEDULETABLE_RUNNING',0,3,24
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,16
	.byte	'ScheduleTableStatusType',0,13,192,6,3
	.word	8215
	.byte	16
	.byte	'Os_AccessCheckAddress',0,13,199,6,29
	.word	448
	.byte	23,13,211,6,9,1,24
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,24
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,24
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,24
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,24
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,24
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,24
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,24
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,24
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,24
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,24
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,24
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,24
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,24
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,24
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,24
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,24
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,24
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,24
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,24
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,16
	.byte	'Os_MemAccessType',0,13,233,6,3
	.word	8419
	.byte	16
	.byte	'Can_IdType',0,14,52,30
	.word	326
	.byte	16
	.byte	'Can_HwHandleType',0,14,55,29
	.word	133
	.byte	16
	.byte	'Can_SduPtrType',0,14,58,45
	.word	537
	.byte	14
	.byte	'Can_PduTypeTag',0,14,61,16,12,15
	.byte	'id',0
	.word	326
	.byte	2,2,35,0,15
	.byte	'length',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'sdu',0
	.word	8992
	.byte	4,2,35,4,15
	.byte	'swPduHandle',0
	.word	133
	.byte	1,2,35,8,0,16
	.byte	'Can_PduType',0,14,67,3
	.word	9015
	.byte	10
	.word	133
	.byte	23,14,77,9,1,24
	.byte	'CAN_CS_UNINIT',0,0,24
	.byte	'CAN_CS_STARTED',0,1,24
	.byte	'CAN_CS_STOPPED',0,2,24
	.byte	'CAN_CS_SLEEP',0,3,0,16
	.byte	'Can_ControllerStateType',0,14,82,3
	.word	9123
	.byte	23,14,84,9,1,24
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,24
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,24
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,16
	.byte	'Can_ErrorStateType',0,14,88,3
	.word	9226
	.byte	16
	.byte	'tCanLLCanIntOld',0,15,161,3,37
	.word	448
	.byte	16
	.byte	'Can_OsIsrType',0,15,167,3,15
	.word	133
	.byte	16
	.byte	'Can_ExternalTickType',0,15,180,3,16
	.word	448
	.byte	25,32
	.word	448
	.byte	26,7,0,16
	.byte	'Can_LoopTimeout_dim_type',0,15,183,3,44
	.word	9410
	.byte	16
	.byte	'Can_ControllerConfigIterType',0,15,192,13,21
	.word	133
	.byte	16
	.byte	'Can_PduOfActiveSendObjectType',0,15,148,14,19
	.word	133
	.byte	16
	.byte	'Can_StateOfActiveSendObjectType',0,15,151,14,16
	.word	326
	.byte	16
	.byte	'Can_BTPType',0,15,154,14,16
	.word	448
	.byte	16
	.byte	'Can_RXBCOfBufferConfigType',0,15,160,14,15
	.word	133
	.byte	16
	.byte	'Can_RXF0COfBufferConfigType',0,15,163,14,16
	.word	448
	.byte	16
	.byte	'Can_RXF1COfBufferConfigType',0,15,166,14,15
	.word	133
	.byte	16
	.byte	'Can_TXBCOfBufferConfigType',0,15,169,14,16
	.word	448
	.byte	16
	.byte	'Can_TXEFCOfBufferConfigType',0,15,172,14,15
	.word	133
	.byte	16
	.byte	'Can_CanIfChannelIdType',0,15,190,14,15
	.word	133
	.byte	16
	.byte	'Can_CanSubSystemBaseAdrType',0,15,193,14,16
	.word	448
	.byte	16
	.byte	'Can_BasisAdrOfControllerConfigType',0,15,196,14,16
	.word	448
	.byte	16
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,15,199,14,15
	.word	133
	.byte	16
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,15,202,14,16
	.word	326
	.byte	16
	.byte	'Can_IsTTCanOfControllerConfigType',0,15,205,14,17
	.word	133
	.byte	16
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,15,208,14,15
	.word	133
	.byte	16
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,15,211,14,15
	.word	133
	.byte	16
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,15,214,14,15
	.word	133
	.byte	16
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,15,220,14,15
	.word	133
	.byte	16
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,15,223,14,15
	.word	133
	.byte	16
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,15,226,14,15
	.word	133
	.byte	16
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,15,232,14,15
	.word	133
	.byte	16
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,15,235,14,15
	.word	133
	.byte	16
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,15,238,14,15
	.word	133
	.byte	16
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,15,241,14,15
	.word	133
	.byte	16
	.byte	'Can_RxSelectionOfControllerConfigType',0,15,244,14,15
	.word	133
	.byte	16
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,15,247,14,15
	.word	133
	.byte	16
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,15,250,14,15
	.word	133
	.byte	16
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,15,253,14,15
	.word	133
	.byte	16
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,15,128,15,15
	.word	133
	.byte	16
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,15,131,15,15
	.word	133
	.byte	16
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,15,134,15,15
	.word	133
	.byte	16
	.byte	'Can_BusOffNotificationOfControllerDataType',0,15,137,15,15
	.word	133
	.byte	16
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,15,140,15,15
	.word	133
	.byte	16
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,15,143,15,15
	.word	133
	.byte	16
	.byte	'Can_IntEnableOfControllerDataType',0,15,146,15,16
	.word	448
	.byte	16
	.byte	'Can_IsBusOffOfControllerDataType',0,15,149,15,17
	.word	133
	.byte	16
	.byte	'Can_LastInitObjectOfControllerDataType',0,15,152,15,15
	.word	133
	.byte	16
	.byte	'Can_LastStateOfControllerDataType',0,15,155,15,15
	.word	133
	.byte	16
	.byte	'Can_LogStatusOfControllerDataType',0,15,158,15,15
	.word	133
	.byte	16
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,15,161,15,15
	.word	133
	.byte	16
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,15,164,15,16
	.word	448
	.byte	16
	.byte	'Can_PrevModeOfControllerDataType',0,15,167,15,15
	.word	133
	.byte	16
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,15,170,15,15
	.word	133
	.byte	16
	.byte	'Can_TXBCROfControllerDataType',0,15,173,15,16
	.word	448
	.byte	16
	.byte	'Can_TXBRPOfControllerDataType',0,15,176,15,16
	.word	448
	.byte	16
	.byte	'Can_FBTPType',0,15,179,15,16
	.word	448
	.byte	16
	.byte	'Can_GFCType',0,15,182,15,15
	.word	133
	.byte	16
	.byte	'Can_INT_PriorityType',0,15,185,15,15
	.word	133
	.byte	16
	.byte	'Can_INT_RoutingGroupType',0,15,188,15,15
	.word	133
	.byte	16
	.byte	'Can_InitObjectBaudrateType',0,15,191,15,16
	.word	326
	.byte	16
	.byte	'Can_InitObjectFdBrsConfigType',0,15,194,15,15
	.word	133
	.byte	16
	.byte	'Can_InitObjectStartIndexType',0,15,197,15,15
	.word	133
	.byte	16
	.byte	'Can_ActiveSendObjectOfMailboxType',0,15,200,15,15
	.word	133
	.byte	16
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,15,203,15,15
	.word	133
	.byte	16
	.byte	'Can_FdPaddingOfMailboxType',0,15,206,15,15
	.word	133
	.byte	16
	.byte	'Can_HwHandleOfMailboxType',0,15,209,15,15
	.word	133
	.byte	16
	.byte	'Can_IDValueOfMailboxType',0,15,212,15,15
	.word	133
	.byte	16
	.byte	'Can_MailboxSizeOfMailboxType',0,15,215,15,15
	.word	133
	.byte	16
	.byte	'Can_MailboxTypeOfMailboxType',0,15,218,15,15
	.word	133
	.byte	16
	.byte	'Can_MaxDataLenOfMailboxType',0,15,221,15,15
	.word	133
	.byte	16
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,15,224,15,15
	.word	133
	.byte	16
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,15,227,15,15
	.word	133
	.byte	16
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,15,230,15,15
	.word	133
	.byte	16
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,15,233,15,15
	.word	133
	.byte	16
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,15,236,15,15
	.word	133
	.byte	16
	.byte	'Can_FLSSAOfSIDFCType',0,15,242,15,15
	.word	133
	.byte	16
	.byte	'Can_LSSOfSIDFCType',0,15,245,15,15
	.word	133
	.byte	16
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,15,248,15,15
	.word	133
	.byte	16
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,15,251,15,15
	.word	133
	.byte	16
	.byte	'Can_SIDFEType',0,15,129,16,16
	.word	448
	.byte	16
	.byte	'Can_SRN_AddressType',0,15,132,16,16
	.word	448
	.byte	16
	.byte	'Can_RXBAOfShmAdrType',0,15,135,16,16
	.word	448
	.byte	16
	.byte	'Can_RXF0AOfShmAdrType',0,15,138,16,16
	.word	448
	.byte	16
	.byte	'Can_RXF1AOfShmAdrType',0,15,141,16,16
	.word	448
	.byte	16
	.byte	'Can_SIDFAOfShmAdrType',0,15,144,16,16
	.word	448
	.byte	16
	.byte	'Can_StartAdrOfShmAdrType',0,15,147,16,16
	.word	448
	.byte	16
	.byte	'Can_StopAdrOfShmAdrType',0,15,150,16,16
	.word	448
	.byte	16
	.byte	'Can_TXBAOfShmAdrType',0,15,153,16,16
	.word	448
	.byte	16
	.byte	'Can_TXEFAOfShmAdrType',0,15,156,16,16
	.word	448
	.byte	16
	.byte	'Can_XIDFAOfShmAdrType',0,15,159,16,16
	.word	448
	.byte	16
	.byte	'Can_F0DSOfShmElementSizeType',0,15,162,16,15
	.word	133
	.byte	16
	.byte	'Can_F1DSOfShmElementSizeType',0,15,165,16,15
	.word	133
	.byte	16
	.byte	'Can_RBDSOfShmElementSizeType',0,15,168,16,15
	.word	133
	.byte	16
	.byte	'Can_TBDSOfShmElementSizeType',0,15,171,16,15
	.word	133
	.byte	16
	.byte	'Can_TEFBDSOfShmElementSizeType',0,15,174,16,15
	.word	133
	.byte	16
	.byte	'Can_TDCRType',0,15,130,17,15
	.word	133
	.byte	16
	.byte	'Can_XIDAMType',0,15,133,17,16
	.word	448
	.byte	16
	.byte	'Can_FLESAOfXIDFCType',0,15,136,17,15
	.word	133
	.byte	16
	.byte	'Can_LSEOfXIDFCType',0,15,139,17,15
	.word	133
	.byte	16
	.byte	'Can_EIDFE_0OfXIDFEType',0,15,142,17,15
	.word	133
	.byte	16
	.byte	'Can_EIDFE_1OfXIDFEType',0,15,145,17,15
	.word	133
	.byte	14
	.byte	'sCan_ActiveSendObjectType',0,15,161,17,16,4,15
	.byte	'StateOfActiveSendObject',0
	.word	326
	.byte	2,2,35,0,15
	.byte	'PduOfActiveSendObject',0
	.word	133
	.byte	1,2,35,2,0,16
	.byte	'Can_ActiveSendObjectType',0,15,165,17,3
	.word	13218
	.byte	14
	.byte	'sCan_BufferConfigType',0,15,168,17,16,12,15
	.byte	'RXF0COfBufferConfig',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'TXBCOfBufferConfig',0
	.word	448
	.byte	4,2,35,4,15
	.byte	'RXBCOfBufferConfig',0
	.word	133
	.byte	1,2,35,8,15
	.byte	'RXF1COfBufferConfig',0
	.word	133
	.byte	1,2,35,9,15
	.byte	'TXEFCOfBufferConfig',0
	.word	133
	.byte	1,2,35,10,0,16
	.byte	'Can_BufferConfigType',0,15,175,17,3
	.word	13349
	.byte	14
	.byte	'sCan_ControllerConfigType',0,15,178,17,16,28,15
	.byte	'BasisAdrOfControllerConfig',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	326
	.byte	2,2,35,4,15
	.byte	'IsTTCanOfControllerConfig',0
	.word	133
	.byte	1,2,35,6,15
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,7,15
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,8,15
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	133
	.byte	1,2,35,9,15
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,10,15
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,11,15
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	133
	.byte	1,2,35,12,15
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	133
	.byte	1,2,35,13,15
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,14,15
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,15,15
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,16,15
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,17,15
	.byte	'RxSelectionOfControllerConfig',0
	.word	133
	.byte	1,2,35,18,15
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,19,15
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,20,15
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,21,15
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,22,15
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	133
	.byte	1,2,35,23,15
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	133
	.byte	1,2,35,24,0,16
	.byte	'Can_ControllerConfigType',0,15,201,17,3
	.word	13551
	.byte	14
	.byte	'sCan_ControllerDataType',0,15,204,17,16,64,15
	.byte	'IntEnableOfControllerData',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	448
	.byte	4,2,35,4,15
	.byte	'TXBCROfControllerData',0
	.word	448
	.byte	4,2,35,8,15
	.byte	'TXBRPOfControllerData',0
	.word	448
	.byte	4,2,35,12,15
	.byte	'BusOffNotificationOfControllerData',0
	.word	133
	.byte	1,2,35,16,15
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	133
	.byte	1,2,35,17,15
	.byte	'CanInterruptCounterOfControllerData',0
	.word	133
	.byte	1,2,35,18,15
	.byte	'IsBusOffOfControllerData',0
	.word	133
	.byte	1,2,35,19,15
	.byte	'LastInitObjectOfControllerData',0
	.word	133
	.byte	1,2,35,20,15
	.byte	'LastStateOfControllerData',0
	.word	133
	.byte	1,2,35,21,15
	.byte	'LogStatusOfControllerData',0
	.word	133
	.byte	1,2,35,22,15
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	133
	.byte	1,2,35,23,15
	.byte	'PrevModeOfControllerData',0
	.word	133
	.byte	1,2,35,24,15
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	133
	.byte	1,2,35,25,15
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	448
	.byte	4,2,35,26,15
	.byte	'LoopTimeoutOfControllerData',0
	.word	9419
	.byte	32,2,35,30,0,16
	.byte	'Can_ControllerDataType',0,15,222,17,3
	.word	14544
	.byte	25,32
	.word	448
	.byte	26,7,0,14
	.byte	'sCan_MailboxType',0,15,225,17,16,12,15
	.byte	'ActiveSendObjectOfMailbox',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'FdPaddingOfMailbox',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'HwHandleOfMailbox',0
	.word	133
	.byte	1,2,35,3,15
	.byte	'IDValueOfMailbox',0
	.word	133
	.byte	1,2,35,4,15
	.byte	'MailboxSizeOfMailbox',0
	.word	133
	.byte	1,2,35,5,15
	.byte	'MailboxTypeOfMailbox',0
	.word	133
	.byte	1,2,35,6,15
	.byte	'MaxDataLenOfMailbox',0
	.word	133
	.byte	1,2,35,7,15
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	133
	.byte	1,2,35,8,0,16
	.byte	'Can_MailboxType',0,15,236,17,3
	.word	15260
	.byte	14
	.byte	'sCan_MemorySectionInfoType',0,15,239,17,16,1,15
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'Can_MemorySectionInfoType',0,15,242,17,3
	.word	15590
	.byte	14
	.byte	'sCan_MemorySectionObjectsType',0,15,245,17,16,4,15
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	133
	.byte	1,2,35,2,0,16
	.byte	'Can_MemorySectionObjectsType',0,15,250,17,3
	.word	15706
	.byte	14
	.byte	'sCan_SIDFCType',0,15,253,17,16,4,15
	.byte	'FLSSAOfSIDFC',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'LSSOfSIDFC',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	133
	.byte	1,2,35,3,0,16
	.byte	'Can_SIDFCType',0,15,131,18,3
	.word	15912
	.byte	14
	.byte	'sCan_ShmAdrType',0,15,134,18,16,36,15
	.byte	'RXBAOfShmAdr',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'RXF0AOfShmAdr',0
	.word	448
	.byte	4,2,35,4,15
	.byte	'RXF1AOfShmAdr',0
	.word	448
	.byte	4,2,35,8,15
	.byte	'SIDFAOfShmAdr',0
	.word	448
	.byte	4,2,35,12,15
	.byte	'StartAdrOfShmAdr',0
	.word	448
	.byte	4,2,35,16,15
	.byte	'StopAdrOfShmAdr',0
	.word	448
	.byte	4,2,35,20,15
	.byte	'TXBAOfShmAdr',0
	.word	448
	.byte	4,2,35,24,15
	.byte	'TXEFAOfShmAdr',0
	.word	448
	.byte	4,2,35,28,15
	.byte	'XIDFAOfShmAdr',0
	.word	448
	.byte	4,2,35,32,0,16
	.byte	'Can_ShmAdrType',0,15,145,18,3
	.word	16057
	.byte	14
	.byte	'sCan_ShmElementSizeType',0,15,148,18,16,6,15
	.byte	'F0DSOfShmElementSize',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'F1DSOfShmElementSize',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'RBDSOfShmElementSize',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'TBDSOfShmElementSize',0
	.word	133
	.byte	1,2,35,3,15
	.byte	'TEFBDSOfShmElementSize',0
	.word	133
	.byte	1,2,35,4,0,16
	.byte	'Can_ShmElementSizeType',0,15,155,18,3
	.word	16314
	.byte	14
	.byte	'sCan_XIDFCType',0,15,158,18,16,2,15
	.byte	'FLESAOfXIDFC',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'LSEOfXIDFC',0
	.word	133
	.byte	1,2,35,1,0,16
	.byte	'Can_XIDFCType',0,15,162,18,3
	.word	16529
	.byte	14
	.byte	'sCan_XIDFEType',0,15,165,18,16,2,15
	.byte	'EIDFE_0OfXIDFE',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'EIDFE_1OfXIDFE',0
	.word	133
	.byte	1,2,35,1,0,16
	.byte	'Can_XIDFEType',0,15,169,18,3
	.word	16616
	.byte	14
	.byte	'sCan_PCConfigType',0,15,143,19,16,1,15
	.byte	'Can_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'Can_PCConfigType',0,15,146,19,3
	.word	16709
	.byte	16
	.byte	'Can_ConfigType',0,15,148,19,26
	.word	16709
	.byte	9
	.word	448
	.byte	9
	.word	448
	.byte	9
	.word	1724
	.byte	14
	.byte	'tElmTypeTag',0,16,145,9,25,72,15
	.byte	'E0',0
	.word	16815
	.byte	4,2,35,0,15
	.byte	'E1',0
	.word	16820
	.byte	4,2,35,4,15
	.byte	'data',0
	.word	16825
	.byte	64,2,35,8,0,9
	.word	16830
	.byte	16
	.byte	'tElmType',0,16,162,9,3
	.word	16887
	.byte	9
	.word	448
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	17,16,224,9,5,4,27
	.byte	'ID',0,4
	.word	16910
	.byte	29,3,2,35,0,27
	.byte	'RTR',0,1
	.word	16915
	.byte	1,2,2,35,3,27
	.byte	'XTD',0,1
	.word	16920
	.byte	1,1,2,35,3,27
	.byte	'ESI',0,1
	.word	16925
	.byte	1,0,2,35,3,0,9
	.word	448
	.byte	28,16,222,9,3,4,15
	.byte	'b0',0
	.word	16930
	.byte	4,2,35,0,15
	.byte	'B0',0
	.word	16996
	.byte	4,2,35,0,0,9
	.word	326
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	17,16,235,9,5,4,27
	.byte	'RXTS',0,2
	.word	17032
	.byte	16,0,2,35,0,27
	.byte	'DLC',0,1
	.word	17037
	.byte	4,4,2,35,2,27
	.byte	'BRS',0,1
	.word	17042
	.byte	1,3,2,35,2,27
	.byte	'FDF',0,1
	.word	17047
	.byte	1,2,2,35,2,27
	.byte	'r0',0,1
	.word	17052
	.byte	2,0,2,35,2,27
	.byte	'FIDX',0,1
	.word	17057
	.byte	7,1,2,35,3,27
	.byte	'ANMF',0,1
	.word	17062
	.byte	1,0,2,35,3,0,9
	.word	326
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	9
	.word	133
	.byte	17,16,245,9,5,4,27
	.byte	'r1',0,2
	.word	17181
	.byte	16,0,2,35,0,27
	.byte	'DLC',0,1
	.word	17186
	.byte	4,4,2,35,2,27
	.byte	'BRS',0,1
	.word	17191
	.byte	1,3,2,35,2,27
	.byte	'FDF',0,1
	.word	17196
	.byte	1,2,2,35,2,27
	.byte	'r0',0,1
	.word	17201
	.byte	1,1,2,35,2,27
	.byte	'EFC',0,1
	.word	17206
	.byte	1,0,2,35,2,27
	.byte	'MM',0,1
	.word	17211
	.byte	8,0,2,35,3,0,28,16,233,9,3,4,15
	.byte	'rb1',0
	.word	17067
	.byte	4,2,35,0,15
	.byte	'tb1',0
	.word	17216
	.byte	4,2,35,0,15
	.byte	'B1',0
	.word	448
	.byte	4,2,35,0,0,9
	.word	1724
	.byte	14
	.byte	'tCanChipMsgPtrTag',0,16,220,9,25,72,15
	.byte	'uB0',0
	.word	17001
	.byte	4,2,35,0,15
	.byte	'uB1',0
	.word	17325
	.byte	4,2,35,4,15
	.byte	'data',0
	.word	17370
	.byte	64,2,35,8,0,9
	.word	17375
	.byte	16
	.byte	'tCanChipMsgPtr',0,16,134,10,3
	.word	17440
	.byte	17,16,141,10,3,4,27
	.byte	'FnFL',0,1
	.word	133
	.byte	7,1,2,35,0,27
	.byte	'r2',0,1
	.word	133
	.byte	1,0,2,35,0,27
	.byte	'FnGI',0,1
	.word	133
	.byte	6,2,2,35,1,27
	.byte	'r1',0,4
	.word	448
	.byte	10,8,2,35,0,27
	.byte	'FnF',0,1
	.word	133
	.byte	1,7,2,35,3,27
	.byte	'RFnL',0,1
	.word	133
	.byte	1,6,2,35,3,27
	.byte	'r0',0,1
	.word	133
	.byte	6,0,2,35,3,0,29
	.byte	'tRXFnSTag',0,16,138,10,15,4,15
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17469
	.byte	4,2,35,0,0,16
	.byte	'tRXFnS',0,16,151,10,3
	.word	17581
	.byte	17,16,156,10,3,4,30,1
	.word	133
	.byte	2,6,2,35,0,27
	.byte	'FOSA',0,2
	.word	326
	.byte	14,0,2,35,0,27
	.byte	'F0S',0,1
	.word	133
	.byte	7,1,2,35,2,30,1
	.word	133
	.byte	1,0,2,35,2,27
	.byte	'F0WM',0,1
	.word	133
	.byte	7,1,2,35,3,30,1
	.word	133
	.byte	1,0,2,35,3,0,29
	.byte	'tRXFnCTag',0,16,153,10,15,4,15
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17636
	.byte	4,2,35,0,0,16
	.byte	'tRXFnC',0,16,165,10,3
	.word	17723
	.byte	17,16,171,10,3,4,27
	.byte	'F0DS',0,1
	.word	133
	.byte	3,5,2,35,0,30,1
	.word	133
	.byte	1,4,2,35,0,27
	.byte	'F1DS',0,1
	.word	133
	.byte	3,1,2,35,0,30,1
	.word	133
	.byte	1,0,2,35,0,27
	.byte	'RBDS',0,1
	.word	133
	.byte	3,5,2,35,1,30,4
	.word	448
	.byte	21,0,2,35,0,0,29
	.byte	'tRXESCTag',0,16,168,10,15,4,15
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17778
	.byte	4,2,35,0,0,16
	.byte	'tRXESC',0,16,180,10,3
	.word	17866
	.byte	17,16,185,10,3,4,27
	.byte	'TFFL',0,1
	.word	133
	.byte	6,2,2,35,0,30,1
	.word	133
	.byte	2,0,2,35,0,27
	.byte	'TFGI',0,1
	.word	133
	.byte	5,3,2,35,1,30,1
	.word	133
	.byte	3,0,2,35,1,27
	.byte	'TFQPI',0,1
	.word	133
	.byte	5,3,2,35,2,27
	.byte	'TFQF',0,1
	.word	133
	.byte	1,2,2,35,2,30,2
	.word	326
	.byte	10,0,2,35,2,0,29
	.byte	'tTXFQSTag',0,16,182,10,15,4,15
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17921
	.byte	4,2,35,0,0,16
	.byte	'tTXFQS',0,16,195,10,3
	.word	18026
	.byte	17,16,200,10,3,4,27
	.byte	'EFFL',0,1
	.word	133
	.byte	6,2,2,35,0,27
	.byte	'r1',0,1
	.word	133
	.byte	2,0,2,35,0,27
	.byte	'EFGI',0,1
	.word	133
	.byte	5,3,2,35,1,30,4
	.word	448
	.byte	11,8,2,35,0,27
	.byte	'EFF',0,1
	.word	133
	.byte	1,7,2,35,3,27
	.byte	'TEFL',0,1
	.word	133
	.byte	1,6,2,35,3,27
	.byte	'r0',0,1
	.word	133
	.byte	6,0,2,35,3,0,29
	.byte	'tTXEFSTag',0,16,197,10,15,4,15
	.byte	'R',0
	.word	448
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	18081
	.byte	4,2,35,0,0,16
	.byte	'tTXEFS',0,16,210,10,3
	.word	18190
	.byte	16
	.byte	'CanIf_TxBufferSizeType',0,17,184,1,15
	.word	133
	.byte	23,18,189,2,9,1,24
	.byte	'CANIF_CS_UNINIT',0,0,24
	.byte	'CANIF_CS_STOPPED',0,1,24
	.byte	'CANIF_CS_STARTED',0,2,24
	.byte	'CANIF_CS_SLEEP',0,3,0,16
	.byte	'CanIf_ControllerModeType',0,18,195,2,3
	.word	18277
	.byte	23,18,215,2,9,1,24
	.byte	'CANIF_GET_OFFLINE',0,0,24
	.byte	'CANIF_GET_RX_ONLINE',0,1,24
	.byte	'CANIF_GET_TX_ONLINE',0,2,24
	.byte	'CANIF_GET_ONLINE',0,3,24
	.byte	'CANIF_GET_OFFLINE_ACTIVE',0,4,24
	.byte	'CANIF_GET_OFFLINE_ACTIVE_RX_ONLINE',0,5,24
	.byte	'CANIF_NO_MODE_PDU_GET_MODE_TYPE_END',0,6,0,16
	.byte	'CanIf_PduGetModeType',0,18,228,2,3
	.word	18391
	.byte	23,18,231,2,9,1,24
	.byte	'CANIF_RxBasicCANMailbox',0,0,24
	.byte	'CANIF_RxFullCANMailbox',0,1,24
	.byte	'CANIF_TxBasicCANMailbox',0,2,24
	.byte	'CANIF_TxFullCANMailbox',0,3,24
	.byte	'CANIF_UnusedCANMailbox',0,4,0,16
	.byte	'CanIf_MailBoxTypeType',0,18,238,2,3
	.word	18613
	.byte	23,18,241,2,9,1,24
	.byte	'CanIf_SimpleRxIndicationLayout',0,0,24
	.byte	'CanIf_AdvancedRxIndicationLayout',0,1,24
	.byte	'CanIf_NmOsekRxIndicationLayout',0,2,24
	.byte	'CanIf_CddRxIndicationLayout',0,3,0,16
	.byte	'CanIf_RxIndicationLayoutType',0,18,247,2,3
	.word	18778
	.byte	31,1,1,8
	.word	133
	.byte	0,10
	.word	18954
	.byte	16
	.byte	'CanIf_TxConfirmationFctType',0,18,175,3,9
	.word	18963
	.byte	6
	.word	133
	.byte	10
	.word	19005
	.byte	31,1,1,8
	.word	133
	.byte	8
	.word	19010
	.byte	0,10
	.word	19015
	.byte	16
	.byte	'CanIf_SimpleRxIndicationFctType',0,18,181,3,9
	.word	19029
	.byte	6
	.word	566
	.byte	10
	.word	19075
	.byte	31,1,1,8
	.word	133
	.byte	8
	.word	19080
	.byte	0,10
	.word	19085
	.byte	16
	.byte	'CanIf_AdvancedRxIndicationFctType',0,18,186,3,9
	.word	19099
	.byte	31,1,1,8
	.word	133
	.byte	8
	.word	19010
	.byte	8
	.word	326
	.byte	0,10
	.word	19147
	.byte	16
	.byte	'CanIf_NmOsekRxIndicationFctType',0,18,190,3,9
	.word	19166
	.byte	31,1,1,8
	.word	133
	.byte	8
	.word	19080
	.byte	8
	.word	326
	.byte	0,10
	.word	19212
	.byte	16
	.byte	'CanIf_CddRxIndicationFctType',0,18,194,3,9
	.word	19231
	.byte	31,1,1,8
	.word	133
	.byte	8
	.word	18277
	.byte	0,10
	.word	19274
	.byte	16
	.byte	'CanIf_CtrlModeIndicationFctType',0,18,198,3,9
	.word	19288
	.byte	16
	.byte	'CanIf_BusOffNotificationFctType',0,18,202,3,9
	.word	18963
	.byte	28,18,203,4,9,4,15
	.byte	'eSimpleRxIndicationType',0
	.word	19034
	.byte	4,2,35,0,15
	.byte	'eAdvancedRxIndicationType',0
	.word	19104
	.byte	4,2,35,0,15
	.byte	'eNmOsekRxIndicationType',0
	.word	19171
	.byte	4,2,35,0,15
	.byte	'eCddRxIndicationType',0
	.word	19236
	.byte	4,2,35,0,0,16
	.byte	'CanIf_RxIndicationFctType',0,18,209,4,3
	.word	19375
	.byte	10
	.word	19015
	.byte	10
	.word	19085
	.byte	10
	.word	19147
	.byte	10
	.word	19212
	.byte	14
	.byte	'sCanIf_TxQueueBaseType',0,18,222,4,16,1,15
	.byte	'eSduLength',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'CanIf_TxQueueBaseType',0,18,228,4,3
	.word	19568
	.byte	14
	.byte	'sCanIf_TxQueueBaseWithDataType',0,18,231,4,16,1,15
	.byte	'eBaseParams',0
	.word	19568
	.byte	1,2,35,0,0,16
	.byte	'CanIf_TxQueueBaseWithDataType',0,18,237,4,3
	.word	19649
	.byte	14
	.byte	'sCanIf_TxPrioByCanIdByteQueueType',0,18,242,4,16,2,15
	.byte	'eQueueParams',0
	.word	19649
	.byte	1,2,35,0,15
	.byte	'eQueued',0
	.word	133
	.byte	1,2,35,1,0,16
	.byte	'CanIf_TxPrioByCanIdByteQueueType',0,18,246,4,3
	.word	19747
	.byte	14
	.byte	'sCanIf_TxBufferPrioByCanIdBaseType',0,18,128,5,16,1,15
	.byte	'eQueueCounter',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'CanIf_TxBufferPrioByCanIdBaseType',0,18,131,5,3
	.word	19869
	.byte	16
	.byte	'CanIf_MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,17,138,9,15
	.word	133
	.byte	16
	.byte	'CanIf_MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,17,141,9,15
	.word	133
	.byte	16
	.byte	'CanIf_CtrlStatesIdxOfMailBoxConfigType',0,17,150,9,15
	.word	133
	.byte	16
	.byte	'CanIf_PduIdFirstOfMailBoxConfigType',0,17,153,9,15
	.word	133
	.byte	16
	.byte	'CanIf_PduIdLastOfMailBoxConfigType',0,17,156,9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxBufferCfgIdxOfMailBoxConfigType',0,17,159,9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxBufferHandlingTypeOfMailBoxConfigType',0,17,165,9,15
	.word	133
	.byte	16
	.byte	'CanIf_MailBoxConfigIdxOfMappedTxBuffersConfigType',0,17,168,9,15
	.word	133
	.byte	16
	.byte	'CanIf_RxIndicationFctListIdxOfRxPduConfigType',0,17,171,9,15
	.word	133
	.byte	16
	.byte	'CanIf_RxPduCanIdOfRxPduConfigType',0,17,174,9,15
	.word	133
	.byte	16
	.byte	'CanIf_RxPduDlcOfRxPduConfigType',0,17,177,9,15
	.word	133
	.byte	16
	.byte	'CanIf_RxPduMaskOfRxPduConfigType',0,17,180,9,16
	.word	326
	.byte	16
	.byte	'CanIf_UpperPduIdOfRxPduConfigType',0,17,183,9,19
	.word	133
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,17,231,9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,17,234
	.byte	9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfigType',0,17,237
	.byte	9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,17
	.byte	240,9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdusType',0,17,243,9,15
	.word	133
	.byte	16
	.byte	'CanIf_CanIdOfTxPduConfigType',0,17,246,9,16
	.word	326
	.byte	16
	.byte	'CanIf_CtrlStatesIdxOfTxPduConfigType',0,17,249,9,15
	.word	133
	.byte	16
	.byte	'CanIf_IsTxPduTruncationOfTxPduConfigType',0,17,252,9,17
	.word	133
	.byte	16
	.byte	'CanIf_MailBoxConfigIdxOfTxPduConfigType',0,17,255,9,15
	.word	133
	.byte	16
	.byte	'CanIf_TxConfirmationFctListIdxOfTxPduConfigType',0,17,130,10,15
	.word	133
	.byte	16
	.byte	'CanIf_TxPduLengthOfTxPduConfigType',0,17,133,10,15
	.word	133
	.byte	16
	.byte	'CanIf_UpperLayerTxPduIdOfTxPduConfigType',0,17,136,10,19
	.word	133
	.byte	16
	.byte	'CanIf_TxQueueIdxOfTxPduQueueIndexType',0,17,139,10,15
	.word	133
	.byte	16
	.byte	'CanIf_TxQueueIndex2DataStartStopIdxOfTxPduQueueIndexType',0,17,142,10,15
	.word	133
	.byte	16
	.byte	'CanIf_TxQueueDataType',0,17,151,10,15
	.word	133
	.byte	16
	.byte	'CanIf_TxQueueDataEndIdxOfTxQueueIndex2DataStartStopType',0,17,154,10,15
	.word	133
	.byte	16
	.byte	'CanIf_TxQueueDataLengthOfTxQueueIndex2DataStartStopType',0,17,157,10,15
	.word	133
	.byte	16
	.byte	'CanIf_TxQueueDataStartIdxOfTxQueueIndex2DataStartStopType',0,17,160,10,15
	.word	133
	.byte	14
	.byte	'sCanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,17,183,10,16,2,15
	.byte	'MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	133
	.byte	1,2,35,1,0,16
	.byte	'CanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,17,187,10,3
	.word	21808
	.byte	14
	.byte	'sCanIf_CtrlStatesType',0,17,190,10,16,2,15
	.byte	'CtrlModeOfCtrlStates',0
	.word	18277
	.byte	1,2,35,0,15
	.byte	'PduModeOfCtrlStates',0
	.word	18391
	.byte	1,2,35,1,0,16
	.byte	'CanIf_CtrlStatesType',0,17,194,10,3
	.word	22059
	.byte	14
	.byte	'sCanIf_MailBoxConfigType',0,17,200,10,16,6,15
	.byte	'CtrlStatesIdxOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'PduIdFirstOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'PduIdLastOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'TxBufferCfgIdxOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,3,15
	.byte	'TxBufferHandlingTypeOfMailBoxConfig',0
	.word	133
	.byte	1,2,35,4,15
	.byte	'MailBoxTypeOfMailBoxConfig',0
	.word	18613
	.byte	1,2,35,5,0,16
	.byte	'CanIf_MailBoxConfigType',0,17,208,10,3
	.word	22177
	.byte	14
	.byte	'sCanIf_MappedTxBuffersConfigType',0,17,214,10,16,1,15
	.byte	'MailBoxConfigIdxOfMappedTxBuffersConfig',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'CanIf_MappedTxBuffersConfigType',0,17,217,10,3
	.word	22469
	.byte	14
	.byte	'sCanIf_RxIndicationFctListType',0,17,220,10,16,8,15
	.byte	'RxIndicationFctOfRxIndicationFctList',0
	.word	19375
	.byte	4,2,35,0,15
	.byte	'RxIndicationLayoutOfRxIndicationFctList',0
	.word	18778
	.byte	1,2,35,4,0,16
	.byte	'CanIf_RxIndicationFctListType',0,17,224,10,3
	.word	22599
	.byte	14
	.byte	'sCanIf_RxPduConfigType',0,17,230,10,16,6,15
	.byte	'RxPduMaskOfRxPduConfig',0
	.word	326
	.byte	2,2,35,0,15
	.byte	'UpperPduIdOfRxPduConfig',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'RxIndicationFctListIdxOfRxPduConfig',0
	.word	133
	.byte	1,2,35,3,15
	.byte	'RxPduCanIdOfRxPduConfig',0
	.word	133
	.byte	1,2,35,4,15
	.byte	'RxPduDlcOfRxPduConfig',0
	.word	133
	.byte	1,2,35,5,0,16
	.byte	'CanIf_RxPduConfigType',0,17,237,10,3
	.word	22771
	.byte	14
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueConfigType',0,17,245,10,16,4,15
	.byte	'TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	133
	.byte	1,2,35,3,0,16
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueConfigType',0,17,251,10,3
	.word	23006
	.byte	14
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,17,129,11,16,1,15
	.byte	'TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdus',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,17,132,11,3
	.word	23463
	.byte	14
	.byte	'sCanIf_TxPduConfigType',0,17,140,11,16,8,15
	.byte	'CanIdOfTxPduConfig',0
	.word	326
	.byte	2,2,35,0,15
	.byte	'UpperLayerTxPduIdOfTxPduConfig',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'IsTxPduTruncationOfTxPduConfig',0
	.word	133
	.byte	1,2,35,3,15
	.byte	'CtrlStatesIdxOfTxPduConfig',0
	.word	133
	.byte	1,2,35,4,15
	.byte	'MailBoxConfigIdxOfTxPduConfig',0
	.word	133
	.byte	1,2,35,5,15
	.byte	'TxConfirmationFctListIdxOfTxPduConfig',0
	.word	133
	.byte	1,2,35,6,15
	.byte	'TxPduLengthOfTxPduConfig',0
	.word	133
	.byte	1,2,35,7,0,16
	.byte	'CanIf_TxPduConfigType',0,17,149,11,3
	.word	23648
	.byte	14
	.byte	'sCanIf_TxPduQueueIndexType',0,17,155,11,16,2,15
	.byte	'TxQueueIdxOfTxPduQueueIndex',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'TxQueueIndex2DataStartStopIdxOfTxPduQueueIndex',0
	.word	133
	.byte	1,2,35,1,0,16
	.byte	'CanIf_TxPduQueueIndexType',0,17,159,11,3
	.word	23973
	.byte	14
	.byte	'sCanIf_TxQueueIndex2DataStartStopType',0,17,166,11,16,4,15
	.byte	'TxQueueDataEndIdxOfTxQueueIndex2DataStartStop',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'TxQueueDataLengthOfTxQueueIndex2DataStartStop',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'TxQueueDataStartIdxOfTxQueueIndex2DataStartStop',0
	.word	133
	.byte	1,2,35,2,0,16
	.byte	'CanIf_TxQueueIndex2DataStartStopType',0,17,171,11,3
	.word	24135
	.byte	14
	.byte	'CanIf_CtrlStatesStructSTag',0,17,183,11,16,2,15
	.byte	'CT_testCANFDdbc_2c920817',0
	.word	22059
	.byte	2,2,35,0,0,16
	.byte	'CanIf_CtrlStatesStructSType',0,17,186,11,3
	.word	24393
	.byte	14
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSTag',0,17,189,11,16,1,15
	.byte	'CHNL_7a25eeb6',0
	.word	19869
	.byte	1,2,35,0,0,16
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSType',0,17,192,11,3
	.word	24498
	.byte	14
	.byte	'CanIf_TxQueueStructSTag',0,17,195,11,16,6,15
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	19747
	.byte	2,2,35,0,15
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	19747
	.byte	2,2,35,2,15
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	19747
	.byte	2,2,35,4,0,16
	.byte	'CanIf_TxQueueStructSType',0,17,200,11,3
	.word	24618
	.byte	25,32
	.word	133
	.byte	26,31,0,25,8
	.word	133
	.byte	26,7,0,25,64
	.word	133
	.byte	26,63,0,14
	.byte	'CanIf_TxQueueDataStructSTag',0,17,203,11,16,104,15
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	24822
	.byte	32,2,35,0,15
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	24831
	.byte	8,2,35,32,15
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	24840
	.byte	64,2,35,40,0,16
	.byte	'CanIf_TxQueueDataStructSType',0,17,208,11,3
	.word	24849
	.byte	14
	.byte	'sCanIf_PCConfigType',0,17,189,12,16,1,15
	.byte	'CanIf_PCConfigNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'CanIf_PCConfigType',0,17,192,12,3
	.word	25061
	.byte	32,1,1,10
	.word	25149
	.byte	16
	.byte	'PduR_LockFunctionType',0,3,218,8,9
	.word	25152
	.byte	33
	.word	133
	.byte	1,1,8
	.word	133
	.byte	8
	.word	19080
	.byte	0,10
	.word	25188
	.byte	16
	.byte	'PduR_TransmitFctPtrType',0,3,222,8,9
	.word	25206
	.byte	16
	.byte	'PduR_IfRxIndicationType',0,3,224,8,9
	.word	19099
	.byte	16
	.byte	'PduR_IfTxConfirmationFctPtrType',0,3,225,8,9
	.word	18963
	.byte	16
	.byte	'PduR_RmDestRomIterType',0,3,153,9,21
	.word	133
	.byte	16
	.byte	'PduR_RmGDestRomIterType',0,3,156,9,21
	.word	133
	.byte	16
	.byte	'PduR_RmSrcRomIterType',0,3,159,9,21
	.word	133
	.byte	16
	.byte	'PduR_hasIfRoutingOfGeneralPropertiesRomType',0,3,207,9,17
	.word	133
	.byte	16
	.byte	'PduR_InitializedType',0,3,210,9,17
	.word	133
	.byte	16
	.byte	'PduR_DestApplicationManagerRomIdxOfMmRomType',0,3,219,9,15
	.word	133
	.byte	16
	.byte	'PduR_MaskedBitsOfMmRomType',0,3,225,9,15
	.word	133
	.byte	16
	.byte	'PduR_RmGDestRomStartIdxOfMmRomType',0,3,231,9,15
	.word	133
	.byte	16
	.byte	'PduR_MmRomIndType',0,3,240,9,15
	.word	133
	.byte	16
	.byte	'PduR_PartitionSNVOfPartitionIdentifiersType',0,3,246,9,16
	.word	448
	.byte	16
	.byte	'PduR_PduLengthHandlingStrategyOfRmDestRomType',0,3,252,9,15
	.word	133
	.byte	16
	.byte	'PduR_RmGDestRomIdxOfRmDestRomType',0,3,255,9,15
	.word	133
	.byte	16
	.byte	'PduR_RmSrcRomIdxOfRmDestRomType',0,3,130,10,15
	.word	133
	.byte	16
	.byte	'PduR_RoutingTypeOfRmDestRomType',0,3,133,10,15
	.word	133
	.byte	16
	.byte	'PduR_DestHndOfRmGDestRomType',0,3,136,10,15
	.word	133
	.byte	16
	.byte	'PduR_DirectionOfRmGDestRomType',0,3,139,10,15
	.word	133
	.byte	16
	.byte	'PduR_MaxPduLengthOfRmGDestRomType',0,3,145,10,15
	.word	133
	.byte	16
	.byte	'PduR_MmRomIdxOfRmGDestRomType',0,3,148,10,15
	.word	133
	.byte	16
	.byte	'PduR_PartitionIndexOfCslOfRmGDestRomType',0,3,151,10,15
	.word	133
	.byte	16
	.byte	'PduR_RmDestRomIdxOfRmGDestRomType',0,3,157,10,15
	.word	133
	.byte	16
	.byte	'PduR_MmRomIdxOfRmSrcRomType',0,3,166,10,15
	.word	133
	.byte	16
	.byte	'PduR_PartitionIndexOfCslOfRmSrcRomType',0,3,169,10,15
	.word	133
	.byte	16
	.byte	'PduR_RmDestRomStartIdxOfRmSrcRomType',0,3,178,10,15
	.word	133
	.byte	16
	.byte	'PduR_SrcHndOfRmSrcRomType',0,3,181,10,15
	.word	133
	.byte	16
	.byte	'PduR_RmTransmitFctPtrIdxOfTx2LoType',0,3,250,10,15
	.word	133
	.byte	16
	.byte	'PduR_PartitionIndexOfCslOfTxIf2UpType',0,3,253,10,15
	.word	133
	.byte	16
	.byte	'PduR_RmGDestRomIdxOfTxIf2UpType',0,3,128,11,15
	.word	133
	.byte	16
	.byte	'PduR_TxConfirmationUsedOfTxIf2UpType',0,3,131,11,17
	.word	133
	.byte	16
	.byte	'PduR_RmTransmitFctPtrType',0,3,144,11,9
	.word	25206
	.byte	16
	.byte	'PduR_MemIdxType',0,3,156,11,15
	.word	133
	.byte	14
	.byte	'sPduR_DestApplicationManagerRomType',0,3,182,11,16,1,15
	.byte	'PduR_DestApplicationManagerRomNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'PduR_DestApplicationManagerRomType',0,3,185,11,3
	.word	26549
	.byte	14
	.byte	'sPduR_ExclusiveAreaRomType',0,3,188,11,16,8,15
	.byte	'LockOfExclusiveAreaRom',0
	.word	25157
	.byte	4,2,35,0,15
	.byte	'UnlockOfExclusiveAreaRom',0
	.word	25157
	.byte	4,2,35,4,0,16
	.byte	'PduR_ExclusiveAreaRomType',0,3,192,11,3
	.word	26685
	.byte	10
	.word	25149
	.byte	14
	.byte	'sPduR_GeneralPropertiesRomType',0,3,195,11,16,1,15
	.byte	'hasIfRoutingOfGeneralPropertiesRom',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'PduR_GeneralPropertiesRomType',0,3,198,11,3
	.word	26825
	.byte	14
	.byte	'sPduR_LockRomType',0,3,201,11,16,1,15
	.byte	'PduR_LockRomNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'PduR_LockRomType',0,3,204,11,3
	.word	26946
	.byte	14
	.byte	'sPduR_MmRomType',0,3,207,11,16,16,15
	.byte	'DestApplicationManagerRomIdxOfMmRom',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'MaskedBitsOfMmRom',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'RmGDestRomStartIdxOfMmRom',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'UpIfRxIndicationFctPtrOfMmRom',0
	.word	25244
	.byte	4,2,35,4,15
	.byte	'UpIfTxConfirmationFctPtrOfMmRom',0
	.word	25277
	.byte	4,2,35,8,15
	.byte	'LoIfTransmitFctPtrOfMmRom',0
	.word	25211
	.byte	4,2,35,12,0,16
	.byte	'PduR_MmRomType',0,3,215,11,3
	.word	27028
	.byte	10
	.word	19085
	.byte	10
	.word	18954
	.byte	10
	.word	25188
	.byte	14
	.byte	'sPduR_PartitionIdentifiersType',0,3,218,11,16,4,15
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	448
	.byte	4,2,35,0,0,16
	.byte	'PduR_PartitionIdentifiersType',0,3,221,11,3
	.word	27312
	.byte	14
	.byte	'sPduR_RmDestRomType',0,3,224,11,16,4,15
	.byte	'PduLengthHandlingStrategyOfRmDestRom',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'RmGDestRomIdxOfRmDestRom',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'RmSrcRomIdxOfRmDestRom',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'RoutingTypeOfRmDestRom',0
	.word	133
	.byte	1,2,35,3,0,16
	.byte	'PduR_RmDestRomType',0,3,230,11,3
	.word	27433
	.byte	14
	.byte	'sPduR_RmGDestRomType',0,3,233,11,16,6,15
	.byte	'DestHndOfRmGDestRom',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'DirectionOfRmGDestRom',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'MaxPduLengthOfRmGDestRom',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'MmRomIdxOfRmGDestRom',0
	.word	133
	.byte	1,2,35,3,15
	.byte	'PartitionIndexOfCslOfRmGDestRom',0
	.word	133
	.byte	1,2,35,4,15
	.byte	'RmDestRomIdxOfRmGDestRom',0
	.word	133
	.byte	1,2,35,5,0,16
	.byte	'PduR_RmGDestRomType',0,3,241,11,3
	.word	27632
	.byte	14
	.byte	'sPduR_RmSrcRomType',0,3,244,11,16,4,15
	.byte	'MmRomIdxOfRmSrcRom',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'PartitionIndexOfCslOfRmSrcRom',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'RmDestRomStartIdxOfRmSrcRom',0
	.word	133
	.byte	1,2,35,2,15
	.byte	'SrcHndOfRmSrcRom',0
	.word	133
	.byte	1,2,35,3,0,16
	.byte	'PduR_RmSrcRomType',0,3,250,11,3
	.word	27888
	.byte	14
	.byte	'sPduR_RxIf2DestType',0,3,253,11,16,1,15
	.byte	'PduR_RxIf2DestNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'PduR_RxIf2DestType',0,3,128,12,3
	.word	28071
	.byte	14
	.byte	'sPduR_SrcApplicationRomType',0,3,131,12,16,1,15
	.byte	'PduR_SrcApplicationRomNeverUsed',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'PduR_SrcApplicationRomType',0,3,134,12,3
	.word	28159
	.byte	14
	.byte	'sPduR_Tx2LoType',0,3,137,12,16,1,15
	.byte	'RmTransmitFctPtrIdxOfTx2Lo',0
	.word	133
	.byte	1,2,35,0,0,16
	.byte	'PduR_Tx2LoType',0,3,140,12,3
	.word	28271
	.byte	14
	.byte	'sPduR_TxIf2UpType',0,3,143,12,16,4,15
	.byte	'TxConfirmationUsedOfTxIf2Up',0
	.word	133
	.byte	1,2,35,0,15
	.byte	'PartitionIndexOfCslOfTxIf2Up',0
	.word	133
	.byte	1,2,35,1,15
	.byte	'RmGDestRomIdxOfTxIf2Up',0
	.word	133
	.byte	1,2,35,2,0,16
	.byte	'PduR_TxIf2UpType',0,3,148,12,3
	.word	28354
	.byte	10
	.word	133
	.byte	16
	.byte	'PduR_InitializedPtrType',0,3,169,12,66
	.word	28512
	.byte	14
	.byte	'sPduR_PCPartitionConfigType',0,3,217,12,16,4,15
	.byte	'InitializedOfPCPartitionConfig',0
	.word	28517
	.byte	4,2,35,0,0,16
	.byte	'PduR_PCPartitionConfigType',0,3,220,12,3
	.word	28550
	.byte	10
	.word	133
	.byte	16
	.byte	'PduR_PCConfigType',0,3,238,12,3
	.word	469
	.byte	16
	.byte	'PduR_PBConfigType',0,3,240,12,27
	.word	469
	.byte	25,24
	.word	27632
	.byte	26,3,0,6
	.word	28720
	.byte	34
	.byte	'PduR_RmGDestRom',0,3,132,14,47
	.word	28729
	.byte	1,1,25,4
	.word	26489
	.byte	26,0,0,6
	.word	28761
	.byte	34
	.byte	'PduR_RmTransmitFctPtr',0,3,172,14,53
	.word	28770
	.byte	1,1,10
	.word	25188
	.byte	25,3
	.word	28271
	.byte	26,2,0,6
	.word	28813
	.byte	34
	.byte	'PduR_Tx2Lo',0,3,192,14,42
	.word	28822
	.byte	1,1,25,12
	.word	28354
	.byte	26,2,0,6
	.word	28849
	.byte	34
	.byte	'PduR_TxIf2Up',0,3,214,14,44
	.word	28858
	.byte	1,1,25,4
	.word	28550
	.byte	26,0,0,6
	.word	28887
	.byte	34
	.byte	'PduR_PCPartitionConfig',0,3,250,14,54
	.word	28896
	.byte	1,1,34
	.byte	'PduR_PreInitialized',0,3,148,15,38
	.word	133
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,38,0,73,19,0,0,7,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,8,5,0,73,19,0,0,9,53,0,73,19,0,0,10,15,0,73,19,0,0,11,46,1,3,8,73,19,54,15,39
	.byte	12,63,12,60,12,0,0,12,5,0,3,8,73,19,0,0,13,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0
	.byte	0,14,19,1,3,8,58,15,59,15,57,15,11,15,0,0,15,13,0,3,8,73,19,11,15,56,9,0,0,16,22,0,3,8,58,15,59,15,57
	.byte	15,73,19,0,0,17,19,1,58,15,59,15,57,15,11,15,0,0,18,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12
	.byte	0,0,19,46,1,49,19,0,0,20,5,0,49,19,0,0,21,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,22,21,0,54
	.byte	15,0,0,23,4,1,58,15,59,15,57,15,11,15,0,0,24,40,0,3,8,28,13,0,0,25,1,1,11,15,73,19,0,0,26,33,0,47,15,0
	.byte	0,27,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,28,23,1,58,15,59,15,57,15,11,15,0,0,29,23,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,30,13,0,11,15,73,19,13,15,12,15,56,9,0,0,31,21,1,54,15,39,12,0,0,32,21,0,54,15,39,12
	.byte	0,0,33,21,1,73,19,54,15,39,12,0,0,34,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L60:
	.word	.L163-.L162
.L162:
	.half	3
	.word	.L165-.L164
.L164:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation',0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0
	.byte	'Det.h',0,1,0,0
	.byte	'PduR_Lcfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.h',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'Std_Types.h',0,3,0,0
	.byte	'ComStack_Cfg.h',0,2,0,0
	.byte	'Det_Cfg.h',0,2,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Hal_Os_Types.h',0,4,0,0
	.byte	'Os_Hal_OsInt.h',0,4,0,0
	.byte	'Os_Types.h',0,4,0,0
	.byte	'Can_DrvGeneralTypes.h',0,2,0,0
	.byte	'Can_Cfg.h',0,2,0,0
	.byte	'Can.h',0,5,0,0
	.byte	'CanIf_Cfg.h',0,2,0,0
	.byte	'CanIf_Types.h',0,6,0,0,0
.L165:
.L163:
	.sdecl	'.debug_info',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_info'
.L61:
	.word	215
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L64,.L63
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_GetConfigurationId',0,1,177,3,38
	.word	.L116
	.byte	1,1,1
	.word	.L36,.L117,.L35
	.byte	4
	.word	.L118
	.byte	5
	.byte	'errorId',0,1,181,3,9
	.word	.L119,.L120
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,85,6,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_line'
.L63:
	.word	.L167-.L166
.L166:
	.half	3
	.word	.L169-.L168
.L168:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L169:
	.byte	5,17,7,0,5,2
	.word	.L36
	.byte	3,180,3,1,5,7,3,2,1,5,12,9
	.half	.L170-.L36
	.byte	3,4,1,5,13,9
	.half	.L2-.L170
	.byte	3,2,1,5,3,9
	.half	.L3-.L2
	.byte	3,8,1,5,5,7,9
	.half	.L171-.L3
	.byte	3,2,1,5,10,9
	.half	.L4-.L171
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L65-.L4
	.byte	0,1,1
.L167:
	.sdecl	'.debug_ranges',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_ranges'
.L64:
	.word	-1,.L36,0,.L65-.L36,0,0
.L118:
	.word	-1,.L36,0,.L117-.L36,-1,.L38,0,.L115-.L38,-1,.L40,0,.L110-.L40,-1,.L42,0,.L105-.L42,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_PreInit')
	.sect	'.debug_info'
.L66:
	.word	227
	.half	3
	.word	.L67
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L69,.L68
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_PreInit',0,1,200,12,23,1,1,1
	.word	.L50,.L121,.L49
	.byte	4
	.byte	'ConfigPtr',0,1,200,12,90
	.word	.L122,.L123
	.byte	5
	.word	.L50,.L121
	.byte	6
	.byte	'errorId',0,1,202,12,9
	.word	.L119,.L124
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_PreInit')
	.sect	'.debug_abbrev'
.L67:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_PreInit')
	.sect	'.debug_line'
.L68:
	.word	.L173-.L172
.L172:
	.half	3
	.word	.L175-.L174
.L174:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L175:
	.byte	5,17,7,0,5,2
	.word	.L50
	.byte	3,201,12,1,5,3,3,24,1,5,13,7,9
	.half	.L160-.L50
	.byte	3,2,1,5,33,1,5,7,9
	.half	.L26-.L160
	.byte	3,13,1,5,5,9
	.half	.L176-.L26
	.byte	3,3,1,5,27,9
	.half	.L177-.L176
	.byte	1,5,25,1,5,3,9
	.half	.L27-.L177
	.byte	3,4,1,5,5,7,9
	.half	.L178-.L27
	.byte	3,2,1,5,1,9
	.half	.L28-.L178
	.byte	3,5,1,7,9
	.half	.L70-.L28
	.byte	0,1,1
.L173:
	.sdecl	'.debug_ranges',debug,cluster('PduR_PreInit')
	.sect	'.debug_ranges'
.L69:
	.word	-1,.L50,0,.L70-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_Init')
	.sect	'.debug_info'
.L71:
	.word	260
	.half	3
	.word	.L72
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L74,.L73
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_Init',0,1,143,13,23,1,1,1
	.word	.L52,.L125,.L51
	.byte	4
	.byte	'ConfigPtr',0,1,143,13,87
	.word	.L122,.L126
	.byte	5
	.word	.L52,.L125
	.byte	6
	.byte	'errorId',0,1,146,13,9
	.word	.L119,.L127
	.byte	7
	.word	.L128,.L31,.L30
	.byte	8
	.word	.L129,.L130
	.byte	9
	.word	.L131,.L31,.L30
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_Init')
	.sect	'.debug_abbrev'
.L72:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_Init')
	.sect	'.debug_line'
.L73:
	.word	.L180-.L179
.L179:
	.half	3
	.word	.L182-.L181
.L181:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L182:
	.byte	5,17,7,0,5,2
	.word	.L52
	.byte	3,145,13,1,5,8,3,3,1,5,13,9
	.half	.L183-.L52
	.byte	3,2,1,5,32,1,5,11,9
	.half	.L29-.L183
	.byte	3,2,1,5,8,9
	.half	.L161-.L29
	.byte	1,5,13,7,9
	.half	.L184-.L161
	.byte	3,2,1,5,41,1,5,3,9
	.half	.L31-.L184
	.byte	3,204,0,1,9
	.half	.L30-.L31
	.byte	3,188,127,1,5,5,7,9
	.half	.L185-.L30
	.byte	3,2,1,5,1,9
	.half	.L33-.L185
	.byte	3,6,1,7,9
	.half	.L75-.L33
	.byte	0,1,1
.L180:
	.sdecl	'.debug_ranges',debug,cluster('PduR_Init')
	.sect	'.debug_ranges'
.L74:
	.word	-1,.L52,0,.L75-.L52,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_InitMemory')
	.sect	'.debug_info'
.L76:
	.word	185
	.half	3
	.word	.L77
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L79,.L78
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_InitMemory',0,1,189,15,23,1,1,1
	.word	.L56,.L132,.L55
	.byte	4
	.word	.L56,.L132
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_InitMemory')
	.sect	'.debug_abbrev'
.L77:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_InitMemory')
	.sect	'.debug_line'
.L78:
	.word	.L187-.L186
.L186:
	.half	3
	.word	.L189-.L188
.L188:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L189:
	.byte	5,3,7,0,5,2
	.word	.L56
	.byte	3,190,15,1,5,25,9
	.half	.L190-.L56
	.byte	1,5,23,1,5,1,9
	.half	.L191-.L190
	.byte	3,4,1,7,9
	.half	.L80-.L191
	.byte	0,1,1
.L187:
	.sdecl	'.debug_ranges',debug,cluster('PduR_InitMemory')
	.sect	'.debug_ranges'
.L79:
	.word	-1,.L56,0,.L80-.L56,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_info'
.L81:
	.word	265
	.half	3
	.word	.L82
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L84,.L83
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_UpTransmit',0,1,224,3,33
	.word	.L119
	.byte	1,1,1
	.word	.L44,.L133,.L43
	.byte	4
	.byte	'id',0,1,224,3,59
	.word	.L119,.L134
	.byte	4
	.byte	'info',0,1,224,3,111
	.word	.L135,.L136
	.byte	5
	.word	.L44,.L133
	.byte	6
	.byte	'errorId',0,1,227,3,9
	.word	.L119,.L137
	.byte	6
	.byte	'retVal',0,1,228,3,18
	.word	.L119,.L138
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_abbrev'
.L82:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_line'
.L83:
	.word	.L193-.L192
.L192:
	.half	3
	.word	.L195-.L194
.L194:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L195:
	.byte	5,17,7,0,5,2
	.word	.L44
	.byte	3,226,3,1,5,25,9
	.half	.L155-.L44
	.byte	3,1,1,5,7,3,4,1,5,8,9
	.half	.L196-.L155
	.byte	3,4,1,5,13,7,9
	.half	.L197-.L196
	.byte	3,6,1,5,36,1,5,12,9
	.half	.L7-.L197
	.byte	3,2,1,5,13,9
	.half	.L6-.L7
	.byte	3,2,1,5,37,1,5,18,9
	.half	.L9-.L6
	.byte	3,14,1,5,84,9
	.half	.L198-.L9
	.byte	1,5,116,9
	.half	.L153-.L198
	.byte	1,5,16,9
	.half	.L154-.L153
	.byte	1,5,3,9
	.half	.L8-.L154
	.byte	3,7,1,5,5,7,9
	.half	.L199-.L8
	.byte	3,2,1,5,3,9
	.half	.L11-.L199
	.byte	3,9,1,5,1,3,1,1,7,9
	.half	.L85-.L11
	.byte	0,1,1
.L193:
	.sdecl	'.debug_ranges',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_ranges'
.L84:
	.word	-1,.L44,0,.L85-.L44,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LoIfRxIndication')
	.sect	'.debug_info'
.L86:
	.word	252
	.half	3
	.word	.L87
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L89,.L88
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_LoIfRxIndication',0,1,170,4,23,1,1,1
	.word	.L46,.L139,.L45
	.byte	4
	.byte	'RxPduId',0,1,170,4,55
	.word	.L119,.L140
	.byte	4
	.byte	'info',0,1,170,4,112
	.word	.L135,.L141
	.byte	5
	.word	.L46,.L139
	.byte	6
	.byte	'errorId',0,1,173,4,9
	.word	.L119,.L142
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LoIfRxIndication')
	.sect	'.debug_abbrev'
.L87:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LoIfRxIndication')
	.sect	'.debug_line'
.L88:
	.word	.L201-.L200
.L200:
	.half	3
	.word	.L203-.L202
.L202:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L203:
	.byte	5,17,7,0,5,2
	.word	.L46
	.byte	3,172,4,1,5,7,3,4,1,5,8,9
	.half	.L204-.L46
	.byte	3,4,1,5,13,7,9
	.half	.L205-.L204
	.byte	3,6,1,5,36,1,5,12,9
	.half	.L14-.L205
	.byte	3,2,1,5,13,9
	.half	.L13-.L14
	.byte	3,2,1,5,37,1,5,74,9
	.half	.L16-.L13
	.byte	3,13,1,5,3,9
	.half	.L15-.L16
	.byte	3,6,1,5,5,7,9
	.half	.L206-.L15
	.byte	3,2,1,5,1,9
	.half	.L18-.L206
	.byte	3,8,1,7,9
	.half	.L90-.L18
	.byte	0,1,1
.L201:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LoIfRxIndication')
	.sect	'.debug_ranges'
.L89:
	.word	-1,.L46,0,.L90-.L46,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LoIfTxConfirmation')
	.sect	'.debug_info'
.L91:
	.word	236
	.half	3
	.word	.L92
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L94,.L93
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_LoIfTxConfirmation',0,1,240,4,23,1,1,1
	.word	.L48,.L143,.L47
	.byte	4
	.byte	'TxPduId',0,1,240,4,57
	.word	.L119,.L144
	.byte	5
	.word	.L48,.L143
	.byte	6
	.byte	'errorId',0,1,243,4,9
	.word	.L119,.L145
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LoIfTxConfirmation')
	.sect	'.debug_abbrev'
.L92:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LoIfTxConfirmation')
	.sect	'.debug_line'
.L93:
	.word	.L208-.L207
.L207:
	.half	3
	.word	.L210-.L209
.L209:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L210:
	.byte	5,17,7,0,5,2
	.word	.L48
	.byte	3,242,4,1,5,7,3,4,1,5,8,9
	.half	.L211-.L48
	.byte	3,4,1,5,13,7,9
	.half	.L212-.L211
	.byte	3,6,1,5,36,1,5,12,9
	.half	.L20-.L212
	.byte	3,2,1,5,13,9
	.half	.L19-.L20
	.byte	3,2,1,5,37,1,5,8,9
	.half	.L22-.L19
	.byte	3,13,1,5,5,9
	.half	.L213-.L22
	.byte	1,5,54,7,9
	.half	.L214-.L213
	.byte	3,2,1,5,3,9
	.half	.L21-.L214
	.byte	3,7,1,5,5,7,9
	.half	.L215-.L21
	.byte	3,2,1,5,1,9
	.half	.L25-.L215
	.byte	3,7,1,7,9
	.half	.L95-.L25
	.byte	0,1,1
.L208:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LoIfTxConfirmation')
	.sect	'.debug_ranges'
.L94:
	.word	-1,.L48,0,.L95-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.debug_info'
.L96:
	.word	249
	.half	3
	.word	.L97
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L99,.L98
	.byte	2
	.word	.L57
	.byte	3
	.byte	'PduR_Rm_GetSrcDestPdu',0,1,246,14,33
	.word	.L119
	.byte	1,1,1
	.word	.L54,.L146,.L53
	.byte	4
	.byte	'rmGDestRomIdx',0,1,246,14,79
	.word	.L119,.L147
	.byte	4
	.byte	'rmDestRomIdx',0,1,246,14,151,1
	.word	.L148,.L149
	.byte	5
	.word	.L54,.L146
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.debug_abbrev'
.L97:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.debug_line'
.L98:
	.word	.L217-.L216
.L216:
	.half	3
	.word	.L219-.L218
.L218:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L219:
	.byte	5,21,7,0,5,2
	.word	.L54
	.byte	3,152,15,1,5,10,9
	.half	.L220-.L54
	.byte	3,3,1,5,21,9
	.half	.L221-.L220
	.byte	3,125,1,5,19,9
	.half	.L222-.L221
	.byte	1,5,1,9
	.half	.L223-.L222
	.byte	3,4,1,7,9
	.half	.L100-.L223
	.byte	0,1,1
.L217:
	.sdecl	'.debug_ranges',debug,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.debug_ranges'
.L99:
	.word	-1,.L54,0,.L100-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L101:
	.word	168
	.half	3
	.word	.L102
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L104,.L103
	.byte	2
	.word	.L57
	.byte	3
	.byte	'.cocofun_1',0,1,177,3,38,1
	.word	.L42,.L105,.L41
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L102:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L103:
	.word	.L225-.L224
.L224:
	.half	3
	.word	.L227-.L226
.L226:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L227:
	.byte	5,7,7,0,5,2
	.word	.L42
	.byte	3,182,3,1,9
	.half	.L105-.L42
	.byte	0,1,1,5,7,0,5,2
	.word	.L42
	.byte	3,231,3,1,9
	.half	.L228-.L42
	.byte	3,79,1,7,9
	.half	.L105-.L228
	.byte	0,1,1,5,7,0,5,2
	.word	.L42
	.byte	3,176,4,1,9
	.half	.L228-.L42
	.byte	3,134,127,1,7,9
	.half	.L105-.L228
	.byte	0,1,1,5,7,0,5,2
	.word	.L42
	.byte	3,246,4,1,9
	.half	.L228-.L42
	.byte	3,192,126,1,7,9
	.half	.L105-.L228
	.byte	0,1,1,5,8,0,5,2
	.word	.L42
	.byte	3,148,13,1,5,7,9
	.half	.L228-.L42
	.byte	3,162,118,1,7,9
	.half	.L105-.L228
	.byte	0,1,1
.L225:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L104:
	.word	-1,.L42,0,.L105-.L42,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L106:
	.word	168
	.half	3
	.word	.L107
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L109,.L108
	.byte	2
	.word	.L57
	.byte	3
	.byte	'.cocofun_2',0,1,177,3,38,1
	.word	.L40,.L110,.L39
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L107:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L108:
	.word	.L230-.L229
.L229:
	.half	3
	.word	.L232-.L231
.L231:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L232:
	.byte	5,12,7,0,5,2
	.word	.L40
	.byte	3,186,3,1,9
	.half	.L110-.L40
	.byte	0,1,1,5,12,0,5,2
	.word	.L40
	.byte	3,188,4,1,9
	.half	.L233-.L40
	.byte	3,254,126,1,7,9
	.half	.L110-.L233
	.byte	0,1,1,5,11,0,5,2
	.word	.L40
	.byte	3,152,13,1,5,12,9
	.half	.L233-.L40
	.byte	3,162,118,1,7,9
	.half	.L110-.L233
	.byte	0,1,1
.L230:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L109:
	.word	-1,.L40,0,.L110-.L40,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L111:
	.word	168
	.half	3
	.word	.L112
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L114,.L113
	.byte	2
	.word	.L57
	.byte	3
	.byte	'.cocofun_3',0,1,177,3,38,1
	.word	.L38,.L115,.L37
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L112:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L113:
	.word	.L235-.L234
.L234:
	.half	3
	.word	.L237-.L236
.L236:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.c',0,0,0,0,0
.L237:
	.byte	5,5,7,0,5,2
	.word	.L38
	.byte	3,198,3,1,9
	.half	.L115-.L38
	.byte	0,1,1,5,5,0,5,2
	.word	.L38
	.byte	3,140,4,1,9
	.half	.L238-.L38
	.byte	3,186,127,1,7,9
	.half	.L115-.L238
	.byte	0,1,1,5,5,0,5,2
	.word	.L38
	.byte	3,211,4,1,9
	.half	.L238-.L38
	.byte	3,243,126,1,7,9
	.half	.L115-.L238
	.byte	0,1,1,5,5,0,5,2
	.word	.L38
	.byte	3,156,5,1,9
	.half	.L238-.L38
	.byte	3,170,126,1,7,9
	.half	.L115-.L238
	.byte	0,1,1,5,5,0,5,2
	.word	.L38
	.byte	3,249,12,1,9
	.half	.L238-.L38
	.byte	3,205,118,1,7,9
	.half	.L115-.L238
	.byte	0,1,1,5,5,0,5,2
	.word	.L38
	.byte	3,164,13,1,9
	.half	.L238-.L38
	.byte	3,162,118,1,7,9
	.half	.L115-.L238
	.byte	0,1,1
.L235:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L114:
	.word	-1,.L38,0,.L115-.L38,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L41:
	.word	-1,.L42,0,.L105-.L42
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L39:
	.word	-1,.L40,0,.L110-.L40
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L37:
	.word	-1,.L38,0,.L115-.L38
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L117-.L36
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	-1,.L36,.L150-.L36,.L105-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	.L40-.L36,.L110-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	0,.L151-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	.L38-.L36,.L115-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	.L152-.L36,.L4-.L36
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_Init')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L52,.L150-.L52,.L105-.L52
	.half	1
	.byte	100
	.word	0,.L29-.L52
	.half	1
	.byte	100
	.word	.L40-.L52,.L110-.L52
	.half	1
	.byte	100
	.word	.L38-.L52,.L115-.L52
	.half	1
	.byte	100
	.word	.L161-.L52,.L125-.L52
	.half	1
	.byte	100
	.word	0,0
.L51:
	.word	-1,.L52,0,.L125-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L127:
	.word	-1,.L52,.L150-.L52,.L105-.L52
	.half	1
	.byte	87
	.word	0,.L29-.L52
	.half	1
	.byte	87
	.word	.L40-.L52,.L110-.L52
	.half	1
	.byte	87
	.word	.L38-.L52,.L115-.L52
	.half	1
	.byte	87
	.word	.L161-.L52,.L125-.L52
	.half	1
	.byte	87
	.word	0,0
.L130:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_InitMemory')
	.sect	'.debug_loc'
.L55:
	.word	-1,.L56,0,.L132-.L56
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LoIfRxIndication')
	.sect	'.debug_loc'
.L45:
	.word	-1,.L46,0,.L139-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L140:
	.word	-1,.L46,.L150-.L46,.L105-.L46
	.half	1
	.byte	84
	.word	0,.L14-.L46
	.half	1
	.byte	84
	.word	.L40-.L46,.L110-.L46
	.half	1
	.byte	84
	.word	.L156-.L46,.L15-.L46
	.half	1
	.byte	84
	.word	0,0
.L142:
	.word	-1,.L46,.L150-.L46,.L105-.L46
	.half	1
	.byte	88
	.word	0,.L14-.L46
	.half	1
	.byte	88
	.word	.L40-.L46,.L110-.L46
	.half	1
	.byte	88
	.word	.L38-.L46,.L115-.L46
	.half	1
	.byte	88
	.word	.L156-.L46,.L139-.L46
	.half	1
	.byte	88
	.word	.L157-.L46,.L18-.L46
	.half	1
	.byte	87
	.word	0,0
.L141:
	.word	-1,.L46,.L150-.L46,.L105-.L46
	.half	1
	.byte	100
	.word	0,.L14-.L46
	.half	1
	.byte	100
	.word	.L40-.L46,.L110-.L46
	.half	1
	.byte	100
	.word	.L156-.L46,.L15-.L46
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LoIfTxConfirmation')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L143-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L144:
	.word	-1,.L48,.L150-.L48,.L105-.L48
	.half	1
	.byte	84
	.word	0,.L158-.L48
	.half	1
	.byte	84
	.word	0,0
.L145:
	.word	-1,.L48,.L150-.L48,.L105-.L48
	.half	1
	.byte	88
	.word	.L38-.L48,.L115-.L48
	.half	1
	.byte	88
	.word	0,.L143-.L48
	.half	1
	.byte	88
	.word	.L159-.L48,.L25-.L48
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_PreInit')
	.sect	'.debug_loc'
.L123:
	.word	-1,.L50,.L38-.L50,.L115-.L50
	.half	1
	.byte	100
	.word	0,.L121-.L50
	.half	1
	.byte	100
	.word	0,0
.L49:
	.word	-1,.L50,0,.L121-.L50
	.half	2
	.byte	138,0
	.word	0,0
.L124:
	.word	-1,.L50,.L38-.L50,.L115-.L50
	.half	1
	.byte	87
	.word	.L160-.L50,.L121-.L50
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.debug_loc'
.L53:
	.word	-1,.L54,0,.L146-.L54
	.half	2
	.byte	138,0
	.word	0,0
.L149:
	.word	-1,.L54,0,.L146-.L54
	.half	1
	.byte	100
	.word	0,0
.L147:
	.word	-1,.L54,0,.L146-.L54
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_loc'
.L43:
	.word	-1,.L44,0,.L133-.L44
	.half	2
	.byte	138,0
	.word	0,0
.L137:
	.word	-1,.L44,.L150-.L44,.L105-.L44
	.half	1
	.byte	88
	.word	.L38-.L44,.L115-.L44
	.half	1
	.byte	88
	.word	.L155-.L44,.L133-.L44
	.half	1
	.byte	88
	.word	0,0
.L134:
	.word	-1,.L44,.L150-.L44,.L105-.L44
	.half	1
	.byte	84
	.word	0,.L153-.L44
	.half	1
	.byte	84
	.word	0,0
.L136:
	.word	-1,.L44,.L150-.L44,.L105-.L44
	.half	1
	.byte	100
	.word	0,.L154-.L44
	.half	1
	.byte	100
	.word	0,0
.L138:
	.word	-1,.L44,.L150-.L44,.L105-.L44
	.half	1
	.byte	89
	.word	.L155-.L44,.L154-.L44
	.half	1
	.byte	89
	.word	.L154-.L44,.L8-.L44
	.half	1
	.byte	82
	.word	.L38-.L44,.L115-.L44
	.half	1
	.byte	89
	.word	.L8-.L44,.L133-.L44
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L239:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_frame'
	.word	12
	.word	.L239,.L36,.L117-.L36
	.sdecl	'.debug_frame',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L239,.L44,.L133-.L44
	.sdecl	'.debug_frame',debug,cluster('PduR_LoIfRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L239,.L46,.L139-.L46
	.sdecl	'.debug_frame',debug,cluster('PduR_LoIfTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L239,.L48,.L143-.L48
	.sdecl	'.debug_frame',debug,cluster('PduR_PreInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L239,.L50,.L121-.L50
	.sdecl	'.debug_frame',debug,cluster('PduR_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L239,.L52,.L125-.L52
	.sdecl	'.debug_frame',debug,cluster('PduR_Rm_GetSrcDestPdu')
	.sect	'.debug_frame'
	.word	24
	.word	.L239,.L54,.L146-.L54
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('PduR_InitMemory')
	.sect	'.debug_frame'
	.word	24
	.word	.L239,.L56,.L132-.L56
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L240:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L240,.L38,.L115-.L38
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L240,.L40,.L110-.L40
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L240,.L42,.L105-.L42
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\PduR\Implementation\PduR.c	  1988  
; ..\component\PduR\Implementation\PduR.c	  1989  #if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  1990  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  1991   * PduR_EnableRouting
; ..\component\PduR\Implementation\PduR.c	  1992   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1993  /*!
; ..\component\PduR\Implementation\PduR.c	  1994   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  1995   *
; ..\component\PduR\Implementation\PduR.c	  1996   *
; ..\component\PduR\Implementation\PduR.c	  1997   *
; ..\component\PduR\Implementation\PduR.c	  1998   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  1999  FUNC(void, PDUR_CODE) PduR_EnableRouting(PduR_RoutingPathGroupIdType id)
; ..\component\PduR\Implementation\PduR.c	  2000  {
; ..\component\PduR\Implementation\PduR.c	  2001    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  2002  
; ..\component\PduR\Implementation\PduR.c	  2003    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  2004  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  2005    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  2006    {
; ..\component\PduR\Implementation\PduR.c	  2007      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  2008    }
; ..\component\PduR\Implementation\PduR.c	  2009    else if(!PduR_IsInitialized(PduR_GetMemIdx()))
; ..\component\PduR\Implementation\PduR.c	  2010    {
; ..\component\PduR\Implementation\PduR.c	  2011      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  2012    }
; ..\component\PduR\Implementation\PduR.c	  2013    else if(id >= PduR_GetSizeOfRpgExtIdRom())
; ..\component\PduR\Implementation\PduR.c	  2014    {
; ..\component\PduR\Implementation\PduR.c	  2015      errorId = PDUR_E_ROUTING_PATH_GROUP_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  2016    }
; ..\component\PduR\Implementation\PduR.c	  2017  #  if(PDUR_INVALIDHNDOFRPGEXTIDROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2018    else if(PduR_IsInvalidHndOfRpgExtIdRom(id))
; ..\component\PduR\Implementation\PduR.c	  2019    {
; ..\component\PduR\Implementation\PduR.c	  2020      errorId = PDUR_E_ROUTING_PATH_GROUP_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  2021    }
; ..\component\PduR\Implementation\PduR.c	  2022  #  endif
; ..\component\PduR\Implementation\PduR.c	  2023    else
; ..\component\PduR\Implementation\PduR.c	  2024  # endif
; ..\component\PduR\Implementation\PduR.c	  2025    {
; ..\component\PduR\Implementation\PduR.c	  2026      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRpgExtIdRom(id);
; ..\component\PduR\Implementation\PduR.c	  2027      PduR_RpgRomIdxOfRpgExtIdRomType rpgRomIdx = PduR_GetRpgRomIdxOfRpgExtIdRom(id);
; ..\component\PduR\Implementation\PduR.c	  2028  
; ..\component\PduR\Implementation\PduR.c	  2029      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  2030      if(!PduR_IsEnabledOfRpgRam(rpgRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR.c	  2031      {
; ..\component\PduR\Implementation\PduR.c	  2032        PduR_RmDestRpgRomIndIterType rmDestRpgRomIndIdx;
; ..\component\PduR\Implementation\PduR.c	  2033        for(rmDestRpgRomIndIdx = PduR_GetRmDestRpgRomIndStartIdxOfRpgRom(rpgRomIdx, memIdx); rmDestRpgRomIndIdx < PduR_GetRmDestRpgRomIndEndIdxOfRpgRom(rpgRomIdx, memIdx); rmDestRpgRomIndIdx++)
; ..\component\PduR\Implementation\PduR.c	  2034        {
; ..\component\PduR\Implementation\PduR.c	  2035          PduR_RmDestRpgRomIterType rmDestRpgRomIdx = PduR_GetRmDestRpgRomInd(rmDestRpgRomIndIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2036          PduR_RmDestRomIterType rmDestRomIdx = PduR_GetRmDestRomIdxOfRmDestRpgRom(rmDestRpgRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2037          PduR_Lock_LockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2038          {
; ..\component\PduR\Implementation\PduR.c	  2039            PduR_SetEnabledCntOfRmDestRpgRam(rmDestRpgRomIdx, PduR_GetEnabledCntOfRmDestRpgRam(rmDestRpgRomIdx, memIdx) + 1u, memIdx);    /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR.c	  2040          }
; ..\component\PduR\Implementation\PduR.c	  2041          PduR_Lock_UnlockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2042        }
; ..\component\PduR\Implementation\PduR.c	  2043        PduR_SetEnabledOfRpgRam(rpgRomIdx, TRUE, memIdx);        /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR.c	  2044      }
; ..\component\PduR\Implementation\PduR.c	  2045    }
; ..\component\PduR\Implementation\PduR.c	  2046    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  2047  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2048    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  2049    {
; ..\component\PduR\Implementation\PduR.c	  2050      PduR_Det_ReportError(PDUR_FCT_ENABLEROUTING, errorId);
; ..\component\PduR\Implementation\PduR.c	  2051    }
; ..\component\PduR\Implementation\PduR.c	  2052  # else
; ..\component\PduR\Implementation\PduR.c	  2053    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  2054  # endif
; ..\component\PduR\Implementation\PduR.c	  2055  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR.c	  2056  #endif
; ..\component\PduR\Implementation\PduR.c	  2057  
; ..\component\PduR\Implementation\PduR.c	  2058  #if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2059  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2060   * PduR_DisableRouting
; ..\component\PduR\Implementation\PduR.c	  2061   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2062  /*!
; ..\component\PduR\Implementation\PduR.c	  2063   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2064   *
; ..\component\PduR\Implementation\PduR.c	  2065   *
; ..\component\PduR\Implementation\PduR.c	  2066   *
; ..\component\PduR\Implementation\PduR.c	  2067   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2068  FUNC(void, PDUR_CODE) PduR_DisableRouting(PduR_RoutingPathGroupIdType id)
; ..\component\PduR\Implementation\PduR.c	  2069  {
; ..\component\PduR\Implementation\PduR.c	  2070    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR.c	  2071  
; ..\component\PduR\Implementation\PduR.c	  2072    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  2073  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR.c	  2074    if(!PduR_IsPreInitialized())
; ..\component\PduR\Implementation\PduR.c	  2075    {
; ..\component\PduR\Implementation\PduR.c	  2076      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  2077    }
; ..\component\PduR\Implementation\PduR.c	  2078    else if(!PduR_IsInitialized(PduR_GetMemIdx()))
; ..\component\PduR\Implementation\PduR.c	  2079    {
; ..\component\PduR\Implementation\PduR.c	  2080      errorId = PDUR_E_INVALID_REQUEST;
; ..\component\PduR\Implementation\PduR.c	  2081    }
; ..\component\PduR\Implementation\PduR.c	  2082    else if(id >= PduR_GetSizeOfRpgExtIdRom())
; ..\component\PduR\Implementation\PduR.c	  2083    {
; ..\component\PduR\Implementation\PduR.c	  2084      errorId = PDUR_E_ROUTING_PATH_GROUP_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  2085    }
; ..\component\PduR\Implementation\PduR.c	  2086  #  if(PDUR_INVALIDHNDOFRPGEXTIDROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2087    else if(PduR_IsInvalidHndOfRpgExtIdRom(id))
; ..\component\PduR\Implementation\PduR.c	  2088    {
; ..\component\PduR\Implementation\PduR.c	  2089      errorId = PDUR_E_ROUTING_PATH_GROUP_ID_INVALID;
; ..\component\PduR\Implementation\PduR.c	  2090    }
; ..\component\PduR\Implementation\PduR.c	  2091  #  endif
; ..\component\PduR\Implementation\PduR.c	  2092    else
; ..\component\PduR\Implementation\PduR.c	  2093  # endif
; ..\component\PduR\Implementation\PduR.c	  2094    {
; ..\component\PduR\Implementation\PduR.c	  2095      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRpgExtIdRom(id);
; ..\component\PduR\Implementation\PduR.c	  2096      PduR_RpgRomIdxOfRpgExtIdRomType rpgRomIdx = PduR_GetRpgRomIdxOfRpgExtIdRom(id);
; ..\component\PduR\Implementation\PduR.c	  2097  
; ..\component\PduR\Implementation\PduR.c	  2098      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  2099      if(PduR_IsEnabledOfRpgRam(rpgRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR.c	  2100      {
; ..\component\PduR\Implementation\PduR.c	  2101        PduR_RmDestRpgRomIndIterType rmDestRpgRomIndIdx;
; ..\component\PduR\Implementation\PduR.c	  2102        for(rmDestRpgRomIndIdx = PduR_GetRmDestRpgRomIndStartIdxOfRpgRom(rpgRomIdx, memIdx); rmDestRpgRomIndIdx < PduR_GetRmDestRpgRomIndEndIdxOfRpgRom(rpgRomIdx, memIdx); rmDestRpgRomIndIdx++)
; ..\component\PduR\Implementation\PduR.c	  2103        {
; ..\component\PduR\Implementation\PduR.c	  2104          PduR_RmDestRpgRomIterType rmDestRpgRomIdx = PduR_GetRmDestRpgRomInd(rmDestRpgRomIndIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2105          PduR_RmDestRomIterType rmDestRomIdx = PduR_GetRmDestRomIdxOfRmDestRpgRom(rmDestRpgRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2106          PduR_Lock_LockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2107          {
; ..\component\PduR\Implementation\PduR.c	  2108  # if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2109            if(PDUR_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx))   /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  2110            {
; ..\component\PduR\Implementation\PduR.c	  2111              PduR_RmIf_DisableRoutingAction(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2112            }
; ..\component\PduR\Implementation\PduR.c	  2113  # endif
; ..\component\PduR\Implementation\PduR.c	  2114  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2115            if(PDUR_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx))
; ..\component\PduR\Implementation\PduR.c	  2116            {
; ..\component\PduR\Implementation\PduR.c	  2117              PduR_RmTp_TpDisableRouting_TpTxSmStateHandler(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2118            }
; ..\component\PduR\Implementation\PduR.c	  2119  # endif
; ..\component\PduR\Implementation\PduR.c	  2120            PduR_SetEnabledCntOfRmDestRpgRam(rmDestRpgRomIdx, (PduR_GetEnabledCntOfRmDestRpgRam(rmDestRpgRomIdx, memIdx) - 1u), memIdx);  /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR.c	  2121          }
; ..\component\PduR\Implementation\PduR.c	  2122          PduR_Lock_UnlockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2123        }
; ..\component\PduR\Implementation\PduR.c	  2124        PduR_SetEnabledOfRpgRam(rpgRomIdx, FALSE, memIdx);       /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR.c	  2125      }
; ..\component\PduR\Implementation\PduR.c	  2126    }
; ..\component\PduR\Implementation\PduR.c	  2127    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR.c	  2128  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2129    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR.c	  2130    {
; ..\component\PduR\Implementation\PduR.c	  2131      PduR_Det_ReportError(PDUR_FCT_DISABLEROUTING, errorId);
; ..\component\PduR\Implementation\PduR.c	  2132    }
; ..\component\PduR\Implementation\PduR.c	  2133  # else
; ..\component\PduR\Implementation\PduR.c	  2134    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR.c	  2135  # endif
; ..\component\PduR\Implementation\PduR.c	  2136  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR.c	  2137  #endif
; ..\component\PduR\Implementation\PduR.c	  2138  
; ..\component\PduR\Implementation\PduR.c	  2139  #if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2140  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2141   * PduR_IsDestPduEnabled
; ..\component\PduR\Implementation\PduR.c	  2142   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2143  /*!
; ..\component\PduR\Implementation\PduR.c	  2144   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2145   *
; ..\component\PduR\Implementation\PduR.c	  2146   *
; ..\component\PduR\Implementation\PduR.c	  2147   *
; ..\component\PduR\Implementation\PduR.c	  2148   *
; ..\component\PduR\Implementation\PduR.c	  2149   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2150  FUNC(boolean, PDUR_CODE) PduR_IsDestPduEnabled(PduR_RmDestRomIterType rmDestRomIdx)
; ..\component\PduR\Implementation\PduR.c	  2151  {
; ..\component\PduR\Implementation\PduR.c	  2152    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2153  
; ..\component\PduR\Implementation\PduR.c	  2154    return (!PduR_IsRmDestRpgRomUsedOfRmDestRom(rmDestRomIdx)) || (0u != PduR_GetEnabledCntOfRmDestRpgRam(PduR_GetRmDestRpgRomIdxOfRmDestRom(rmDestRomIdx), memIdx));
; ..\component\PduR\Implementation\PduR.c	  2155  }
; ..\component\PduR\Implementation\PduR.c	  2156  #endif
; ..\component\PduR\Implementation\PduR.c	  2157  
; ..\component\PduR\Implementation\PduR.c	  2158  #if ((PDUR_MAIN_FUNCTION == STD_ON) && ((PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)))
; ..\component\PduR\Implementation\PduR.c	  2159  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2160   * PduR_DispatchMainfuntion
; ..\component\PduR\Implementation\PduR.c	  2161   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2162  /*!
; ..\component\PduR\Implementation\PduR.c	  2163   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2164   *
; ..\component\PduR\Implementation\PduR.c	  2165   *
; ..\component\PduR\Implementation\PduR.c	  2166   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2167  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_DispatchMainfuntion(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR.c	  2168  {
; ..\component\PduR\Implementation\PduR.c	  2169  # if(PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2170    if(PduR_IsRmBufferedIfPropertiesRomUsedOfRmGDestRom(rmGDestRomIdx))   /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR.c	  2171    {
; ..\component\PduR\Implementation\PduR.c	  2172      PduR_RmIf_MainFunction(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2173    }
; ..\component\PduR\Implementation\PduR.c	  2174  # endif
; ..\component\PduR\Implementation\PduR.c	  2175  # if(PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2176    if(PduR_IsRmGDestTpTxStateRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR.c	  2177    {
; ..\component\PduR\Implementation\PduR.c	  2178      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2179  
; ..\component\PduR\Implementation\PduR.c	  2180      PduR_RmTp_TxInst_MainFunction(rmGDestRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2181    }
; ..\component\PduR\Implementation\PduR.c	  2182  # endif
; ..\component\PduR\Implementation\PduR.c	  2183  }
; ..\component\PduR\Implementation\PduR.c	  2184  #endif
; ..\component\PduR\Implementation\PduR.c	  2185  
; ..\component\PduR\Implementation\PduR.c	  2186  #if (PDUR_BSWMPDURPRETRANSMITCALLBACKOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2187  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2188   * PduR_CallPreTransmitCallout
; ..\component\PduR\Implementation\PduR.c	  2189   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2190  /*!
; ..\component\PduR\Implementation\PduR.c	  2191   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2192   *
; ..\component\PduR\Implementation\PduR.c	  2193   *
; ..\component\PduR\Implementation\PduR.c	  2194   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2195  FUNC(void, PDUR_CODE) PduR_CallPreTransmitCallout(PduR_RmDestRomIterType rmDestRomIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR.c	  2196  {
; ..\component\PduR\Implementation\PduR.c	  2197    if(PduR_IsBswMPduRPreTransmitCallbackOfRmDestRom(rmDestRomIdx))
; ..\component\PduR\Implementation\PduR.c	  2198    {
; ..\component\PduR\Implementation\PduR.c	  2199      BswM_PduR_PreTransmit(PduR_GetTxIf2UpIdxOfRmGDestRom(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx)), info);  /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR.c	  2200    }
; ..\component\PduR\Implementation\PduR.c	  2201  }
; ..\component\PduR\Implementation\PduR.c	  2202  #endif
; ..\component\PduR\Implementation\PduR.c	  2203  
; ..\component\PduR\Implementation\PduR.c	  2204  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2205  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2206   * PduR_EvC_Init
; ..\component\PduR\Implementation\PduR.c	  2207   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2208  /*!
; ..\component\PduR\Implementation\PduR.c	  2209   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2210   *
; ..\component\PduR\Implementation\PduR.c	  2211   *
; ..\component\PduR\Implementation\PduR.c	  2212   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2213  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_Init(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2214  {
; ..\component\PduR\Implementation\PduR.c	  2215    PduR_DeferredEventCacheRomIterType deferredEventCacheRomIdx;
; ..\component\PduR\Implementation\PduR.c	  2216    for(deferredEventCacheRomIdx = 0u; deferredEventCacheRomIdx < PduR_GetSizeOfDeferredEventCacheRom(memIdx); deferredEventCacheRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  2217    {
; ..\component\PduR\Implementation\PduR.c	  2218      PduR_DeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRomType startIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRom(deferredEventCacheRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2219  
; ..\component\PduR\Implementation\PduR.c	  2220      PduR_SetDeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRam(deferredEventCacheRomIdx, startIdxOfBuffer, memIdx);       /* SBSW_PDUR_CSL02 */
; ..\component\PduR\Implementation\PduR.c	  2221      PduR_SetDeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRam(deferredEventCacheRomIdx, startIdxOfBuffer, memIdx);      /* SBSW_PDUR_CSL02 */
; ..\component\PduR\Implementation\PduR.c	  2222    }
; ..\component\PduR\Implementation\PduR.c	  2223  }
; ..\component\PduR\Implementation\PduR.c	  2224  #endif
; ..\component\PduR\Implementation\PduR.c	  2225  
; ..\component\PduR\Implementation\PduR.c	  2226  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2227  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2228   * PduR_EvC_Put
; ..\component\PduR\Implementation\PduR.c	  2229   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2230  /*!
; ..\component\PduR\Implementation\PduR.c	  2231   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2232   *
; ..\component\PduR\Implementation\PduR.c	  2233   *
; ..\component\PduR\Implementation\PduR.c	  2234   *
; ..\component\PduR\Implementation\PduR.c	  2235   *
; ..\component\PduR\Implementation\PduR.c	  2236   *
; ..\component\PduR\Implementation\PduR.c	  2237   *
; ..\component\PduR\Implementation\PduR.c	  2238   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2239  FUNC(Std_ReturnType, PDUR_CODE) PduR_EvC_Put(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_RmGDestRomIterType rmGDestRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2240  {
; ..\component\PduR\Implementation\PduR.c	  2241    Std_ReturnType retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR.c	  2242  
; ..\component\PduR\Implementation\PduR.c	  2243    SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR.c	  2244    {
; ..\component\PduR\Implementation\PduR.c	  2245      PduR_DeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRamType readIdx = PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2246      PduR_DeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRamType writeIdx = PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2247  
; ..\component\PduR\Implementation\PduR.c	  2248      if(writeIdx < PduR_GetSizeOfDeferredEventCacheArrayRam(memIdx))   /* COV_PDUR_VAR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR.c	  2249      {
; ..\component\PduR\Implementation\PduR.c	  2250        PduR_DeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRomType startIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2251        PduR_DeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRomType endIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx) - 1u;    /* ComStackLibs EndIdx is actually the first out of bounds index */
; ..\component\PduR\Implementation\PduR.c	  2252  
; ..\component\PduR\Implementation\PduR.c	  2253        /* If event cache is full, return E_NOT_OK */
; ..\component\PduR\Implementation\PduR.c	  2254        if(PduR_EvC_IsFull(deferredEventCacheIdx, memIdx) == TRUE)
; ..\component\PduR\Implementation\PduR.c	  2255        {
; ..\component\PduR\Implementation\PduR.c	  2256          /* Buffer is full */
; ..\component\PduR\Implementation\PduR.c	  2257          retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR.c	  2258        }
; ..\component\PduR\Implementation\PduR.c	  2259        /* else if write index < read index, put rmGDestRomIdx into cache and increase write idx */
; ..\component\PduR\Implementation\PduR.c	  2260        else if(writeIdx < readIdx)       /* write is possible until read Idx is reached. Could be too small though */
; ..\component\PduR\Implementation\PduR.c	  2261        {
; ..\component\PduR\Implementation\PduR.c	  2262          PduR_SetRmGDestRomIdxOfDeferredEventCacheArrayRam(writeIdx, (PduR_RmGDestRomIdxOfDeferredEventCacheArrayRamType) rmGDestRomIdx, memIdx);        /* SBSW_PDUR_EVC_PUT_RTCHECK */
; ..\component\PduR\Implementation\PduR.c	  2263          PduR_SetDeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRam(deferredEventCacheIdx, writeIdx + 1u, memIdx);        /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2264          retVal = E_OK;
; ..\component\PduR\Implementation\PduR.c	  2265        }
; ..\component\PduR\Implementation\PduR.c	  2266        /* else */
; ..\component\PduR\Implementation\PduR.c	  2267        else
; ..\component\PduR\Implementation\PduR.c	  2268        { /* readIdx < writeIdx OR readIdx == writeIdx */
; ..\component\PduR\Implementation\PduR.c	  2269          /* put rmGDestRomIdx into cache */
; ..\component\PduR\Implementation\PduR.c	  2270          PduR_SetRmGDestRomIdxOfDeferredEventCacheArrayRam(writeIdx, (PduR_RmGDestRomIdxOfDeferredEventCacheArrayRamType) rmGDestRomIdx, memIdx);        /* SBSW_PDUR_EVC_PUT_RTCHECK */
; ..\component\PduR\Implementation\PduR.c	  2271  
; ..\component\PduR\Implementation\PduR.c	  2272          /* Wrap around write index if required or increase write index otherwise */
; ..\component\PduR\Implementation\PduR.c	  2273          if(writeIdx == endIdxOfBuffer)
; ..\component\PduR\Implementation\PduR.c	  2274          {
; ..\component\PduR\Implementation\PduR.c	  2275            PduR_SetDeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRam(deferredEventCacheIdx, startIdxOfBuffer, memIdx);   /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2276          }
; ..\component\PduR\Implementation\PduR.c	  2277          else
; ..\component\PduR\Implementation\PduR.c	  2278          {
; ..\component\PduR\Implementation\PduR.c	  2279            PduR_SetDeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRam(deferredEventCacheIdx, writeIdx + 1u, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2280          }
; ..\component\PduR\Implementation\PduR.c	  2281          retVal = E_OK;
; ..\component\PduR\Implementation\PduR.c	  2282        }
; ..\component\PduR\Implementation\PduR.c	  2283      }
; ..\component\PduR\Implementation\PduR.c	  2284      else
; ..\component\PduR\Implementation\PduR.c	  2285      {
; ..\component\PduR\Implementation\PduR.c	  2286        PduR_Det_ReportError(PDUR_EVC_PUT, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR.c	  2287      }
; ..\component\PduR\Implementation\PduR.c	  2288    }
; ..\component\PduR\Implementation\PduR.c	  2289    SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR.c	  2290  
; ..\component\PduR\Implementation\PduR.c	  2291    return retVal;
; ..\component\PduR\Implementation\PduR.c	  2292  }
; ..\component\PduR\Implementation\PduR.c	  2293  #endif
; ..\component\PduR\Implementation\PduR.c	  2294  
; ..\component\PduR\Implementation\PduR.c	  2295  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2296  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2297   * PduR_EvC_WriteDeferredEventCache
; ..\component\PduR\Implementation\PduR.c	  2298  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2299  /*!
; ..\component\PduR\Implementation\PduR.c	  2300   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2301   *
; ..\component\PduR\Implementation\PduR.c	  2302   *
; ..\component\PduR\Implementation\PduR.c	  2303   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2304  FUNC(void, PDUR_CODE) PduR_EvC_WriteDeferredEventCache(PduR_RmDestRomIterType rmDest, PduR_RmGDestRomIdxOfRmDestRomType rmGDest)
; ..\component\PduR\Implementation\PduR.c	  2305  {
; ..\component\PduR\Implementation\PduR.c	  2306    /* Put destination handle into the deferred event queue */
; ..\component\PduR\Implementation\PduR.c	  2307    PduR_DestApplicationManagerRomIdxOfMmRomType srcApplicationIdx  = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(PduR_GetRmSrcRomIdxOfRmDestRom(rmDest)));
; ..\component\PduR\Implementation\PduR.c	  2308    PduR_DestApplicationManagerRomIdxOfMmRomType destApplicationIdx = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDest));
; ..\component\PduR\Implementation\PduR.c	  2309    PduR_SrcApplicationRomIterType dest2srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationIdx) + (PduR_SrcApplicationRomIterType) srcApplicationIdx;
; ..\component\PduR\Implementation\PduR.c	  2310  
; ..\component\PduR\Implementation\PduR.c	  2311    (void) PduR_EvC_Put(PduR_GetDeferredEventCacheRomIdxOfSrcApplicationRom(dest2srcApplicationRomIdx), rmGDest, PduR_GetPartitionIndexOfCslOfSrcApplicationRom(dest2srcApplicationRomIdx));
; ..\component\PduR\Implementation\PduR.c	  2312  }
; ..\component\PduR\Implementation\PduR.c	  2313  #endif
; ..\component\PduR\Implementation\PduR.c	  2314  
; ..\component\PduR\Implementation\PduR.c	  2315  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2316  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2317   * PduR_EvC_Get
; ..\component\PduR\Implementation\PduR.c	  2318   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2319  /*!
; ..\component\PduR\Implementation\PduR.c	  2320   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2321   *
; ..\component\PduR\Implementation\PduR.c	  2322   *
; ..\component\PduR\Implementation\PduR.c	  2323   *
; ..\component\PduR\Implementation\PduR.c	  2324   *
; ..\component\PduR\Implementation\PduR.c	  2325   *
; ..\component\PduR\Implementation\PduR.c	  2326   *
; ..\component\PduR\Implementation\PduR.c	  2327   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2328  FUNC(Std_ReturnType, PDUR_CODE) PduR_EvC_Get(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, P2VAR(PduR_RmGDestRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmGDestRomIdxPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2329  {
; ..\component\PduR\Implementation\PduR.c	  2330    Std_ReturnType retVal;
; ..\component\PduR\Implementation\PduR.c	  2331  
; ..\component\PduR\Implementation\PduR.c	  2332    SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR.c	  2333    {
; ..\component\PduR\Implementation\PduR.c	  2334      PduR_DeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRamType readIdx = PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2335      PduR_DeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRamType writeIdx = PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2336  
; ..\component\PduR\Implementation\PduR.c	  2337      /* If buffer is empty, return E_NOT_OK */
; ..\component\PduR\Implementation\PduR.c	  2338      if(readIdx == writeIdx)
; ..\component\PduR\Implementation\PduR.c	  2339      {
; ..\component\PduR\Implementation\PduR.c	  2340        retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR.c	  2341      }
; ..\component\PduR\Implementation\PduR.c	  2342      /* Otherwise */
; ..\component\PduR\Implementation\PduR.c	  2343      else
; ..\component\PduR\Implementation\PduR.c	  2344      {
; ..\component\PduR\Implementation\PduR.c	  2345        PduR_DeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRomType startIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2346        PduR_DeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRomType endIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx) - 1u;    /* ComStackLibs EndIdx is actually the first out of bounds index */
; ..\component\PduR\Implementation\PduR.c	  2347  
; ..\component\PduR\Implementation\PduR.c	  2348        /* Read RmGDestRomIdx from Cache */
; ..\component\PduR\Implementation\PduR.c	  2349        *rmGDestRomIdxPtr = PduR_GetRmGDestRomIdxOfDeferredEventCacheArrayRam(readIdx, memIdx);   /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2350  
; ..\component\PduR\Implementation\PduR.c	  2351        /* Increase read index to next element. Wrap around if required. */
; ..\component\PduR\Implementation\PduR.c	  2352        if(readIdx == endIdxOfBuffer)
; ..\component\PduR\Implementation\PduR.c	  2353        {
; ..\component\PduR\Implementation\PduR.c	  2354          PduR_SetDeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRam(deferredEventCacheIdx, startIdxOfBuffer, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2355        }
; ..\component\PduR\Implementation\PduR.c	  2356        else
; ..\component\PduR\Implementation\PduR.c	  2357        {
; ..\component\PduR\Implementation\PduR.c	  2358          PduR_SetDeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRam(deferredEventCacheIdx, readIdx + 1u, memIdx);  /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2359        }
; ..\component\PduR\Implementation\PduR.c	  2360  
; ..\component\PduR\Implementation\PduR.c	  2361        /* Return E_OK */
; ..\component\PduR\Implementation\PduR.c	  2362        retVal = E_OK;
; ..\component\PduR\Implementation\PduR.c	  2363      }
; ..\component\PduR\Implementation\PduR.c	  2364    }
; ..\component\PduR\Implementation\PduR.c	  2365    SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR.c	  2366  
; ..\component\PduR\Implementation\PduR.c	  2367    return retVal;
; ..\component\PduR\Implementation\PduR.c	  2368  }
; ..\component\PduR\Implementation\PduR.c	  2369  #endif
; ..\component\PduR\Implementation\PduR.c	  2370  
; ..\component\PduR\Implementation\PduR.c	  2371  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2372  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2373   * PduR_EvC_ReadFlush
; ..\component\PduR\Implementation\PduR.c	  2374   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2375  /*!
; ..\component\PduR\Implementation\PduR.c	  2376   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2377   *
; ..\component\PduR\Implementation\PduR.c	  2378   *
; ..\component\PduR\Implementation\PduR.c	  2379   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2380  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_ReadFlush(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2381  {
; ..\component\PduR\Implementation\PduR.c	  2382    PduR_SetDeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRam(deferredEventCacheIdx, PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe(deferredEventCacheIdx, memIdx), memIdx);    /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR.c	  2383  }
; ..\component\PduR\Implementation\PduR.c	  2384  #endif
; ..\component\PduR\Implementation\PduR.c	  2385  
; ..\component\PduR\Implementation\PduR.c	  2386  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2387  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2388   * PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe
; ..\component\PduR\Implementation\PduR.c	  2389   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2390  /*!
; ..\component\PduR\Implementation\PduR.c	  2391   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2392   *
; ..\component\PduR\Implementation\PduR.c	  2393   *
; ..\component\PduR\Implementation\PduR.c	  2394   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2395  LOCAL_INLINE FUNC(PduR_DeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRamType, PDUR_CODE) PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2396  {
; ..\component\PduR\Implementation\PduR.c	  2397    PduR_DeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRamType readIdx = PduR_GetDeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRam(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2398  
; ..\component\PduR\Implementation\PduR.c	  2399  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2400    PduR_DeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRomType startIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2401    PduR_DeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRomType endIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2402  
; ..\component\PduR\Implementation\PduR.c	  2403    if(readIdx >= endIdxOfBuffer) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR.c	  2404    {
; ..\component\PduR\Implementation\PduR.c	  2405      readIdx = endIdxOfBuffer - 1u;
; ..\component\PduR\Implementation\PduR.c	  2406      PduR_ReportRuntimeDetError(PDUR_FCT_GETEVCREADIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR.c	  2407    }
; ..\component\PduR\Implementation\PduR.c	  2408    if(readIdx < startIdxOfBuffer) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR.c	  2409    {
; ..\component\PduR\Implementation\PduR.c	  2410      readIdx = startIdxOfBuffer;
; ..\component\PduR\Implementation\PduR.c	  2411      PduR_ReportRuntimeDetError(PDUR_FCT_GETEVCREADIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR.c	  2412    }
; ..\component\PduR\Implementation\PduR.c	  2413  # endif
; ..\component\PduR\Implementation\PduR.c	  2414  
; ..\component\PduR\Implementation\PduR.c	  2415    return readIdx;
; ..\component\PduR\Implementation\PduR.c	  2416  }
; ..\component\PduR\Implementation\PduR.c	  2417  #endif
; ..\component\PduR\Implementation\PduR.c	  2418  
; ..\component\PduR\Implementation\PduR.c	  2419  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2420  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2421   * PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe
; ..\component\PduR\Implementation\PduR.c	  2422   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2423  /*!
; ..\component\PduR\Implementation\PduR.c	  2424   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2425   *
; ..\component\PduR\Implementation\PduR.c	  2426   *
; ..\component\PduR\Implementation\PduR.c	  2427   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2428  LOCAL_INLINE FUNC(PduR_DeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRamType, PDUR_CODE) PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2429  {
; ..\component\PduR\Implementation\PduR.c	  2430    PduR_DeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRamType writeIdx = PduR_GetDeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRam(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2431  
; ..\component\PduR\Implementation\PduR.c	  2432  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2433    PduR_DeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRomType startIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2434    PduR_DeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRomType endIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2435  
; ..\component\PduR\Implementation\PduR.c	  2436    if(writeIdx >= endIdxOfBuffer) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR.c	  2437    {
; ..\component\PduR\Implementation\PduR.c	  2438      writeIdx = endIdxOfBuffer - 1u;
; ..\component\PduR\Implementation\PduR.c	  2439      PduR_ReportRuntimeDetError(PDUR_FCT_GETEVCWRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR.c	  2440    }
; ..\component\PduR\Implementation\PduR.c	  2441    if(writeIdx < startIdxOfBuffer) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR.c	  2442    {
; ..\component\PduR\Implementation\PduR.c	  2443      writeIdx = startIdxOfBuffer;
; ..\component\PduR\Implementation\PduR.c	  2444      PduR_ReportRuntimeDetError(PDUR_FCT_GETEVCWRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR.c	  2445    }
; ..\component\PduR\Implementation\PduR.c	  2446  # endif
; ..\component\PduR\Implementation\PduR.c	  2447  
; ..\component\PduR\Implementation\PduR.c	  2448    return writeIdx;
; ..\component\PduR\Implementation\PduR.c	  2449  }
; ..\component\PduR\Implementation\PduR.c	  2450  #endif
; ..\component\PduR\Implementation\PduR.c	  2451  
; ..\component\PduR\Implementation\PduR.c	  2452  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2453  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2454   * PduR_EvC_IsFull
; ..\component\PduR\Implementation\PduR.c	  2455   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2456  /*!
; ..\component\PduR\Implementation\PduR.c	  2457   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2458   *
; ..\component\PduR\Implementation\PduR.c	  2459   *
; ..\component\PduR\Implementation\PduR.c	  2460   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2461  LOCAL_INLINE FUNC(boolean, PDUR_CODE) PduR_EvC_IsFull(PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR.c	  2462  {
; ..\component\PduR\Implementation\PduR.c	  2463    boolean retVal;
; ..\component\PduR\Implementation\PduR.c	  2464  
; ..\component\PduR\Implementation\PduR.c	  2465    SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR.c	  2466    {
; ..\component\PduR\Implementation\PduR.c	  2467      PduR_DeferredEventCacheArrayRamReadIdxOfDeferredEventCacheRamType readIdx = PduR_EvC_GetDeferredEventCacheArrayRamReadIdxSafe(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2468      PduR_DeferredEventCacheArrayRamWriteIdxOfDeferredEventCacheRamType writeIdx = PduR_EvC_GetDeferredEventCacheArrayRamWriteIdxSafe(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2469  
; ..\component\PduR\Implementation\PduR.c	  2470      PduR_DeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRomType startIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamStartIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2471      PduR_DeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRomType endIdxOfBuffer = PduR_GetDeferredEventCacheArrayRamEndIdxOfDeferredEventCacheRom(deferredEventCacheIdx, memIdx) - 1u;      /* ComStackLibs EndIdx is actually the first out of bounds index */
; ..\component\PduR\Implementation\PduR.c	  2472  
; ..\component\PduR\Implementation\PduR.c	  2473      if(((writeIdx + 1u) == readIdx) || ((readIdx == startIdxOfBuffer) && (writeIdx == endIdxOfBuffer)))
; ..\component\PduR\Implementation\PduR.c	  2474      {
; ..\component\PduR\Implementation\PduR.c	  2475        /* Buffer is full */
; ..\component\PduR\Implementation\PduR.c	  2476        retVal = TRUE;
; ..\component\PduR\Implementation\PduR.c	  2477      }
; ..\component\PduR\Implementation\PduR.c	  2478      else
; ..\component\PduR\Implementation\PduR.c	  2479      {
; ..\component\PduR\Implementation\PduR.c	  2480        retVal = FALSE;
; ..\component\PduR\Implementation\PduR.c	  2481      }
; ..\component\PduR\Implementation\PduR.c	  2482    }
; ..\component\PduR\Implementation\PduR.c	  2483    SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR.c	  2484  
; ..\component\PduR\Implementation\PduR.c	  2485    return retVal;
; ..\component\PduR\Implementation\PduR.c	  2486  }
; ..\component\PduR\Implementation\PduR.c	  2487  #endif
; ..\component\PduR\Implementation\PduR.c	  2488  
; ..\component\PduR\Implementation\PduR.c	  2489  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2490  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2491   * PduR_EvC_IsAnyEvCOverflowed
; ..\component\PduR\Implementation\PduR.c	  2492   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2493  /*!
; ..\component\PduR\Implementation\PduR.c	  2494   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2495   *
; ..\component\PduR\Implementation\PduR.c	  2496   *
; ..\component\PduR\Implementation\PduR.c	  2497   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2498  LOCAL_INLINE FUNC(boolean, PDUR_CODE) PduR_EvC_IsAnyEvCOverflowed(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx)
; ..\component\PduR\Implementation\PduR.c	  2499  {
; ..\component\PduR\Implementation\PduR.c	  2500    PduR_SrcApplicationRomEndIdxOfDestApplicationManagerRomType srcApplicationRomIdx;
; ..\component\PduR\Implementation\PduR.c	  2501    boolean anyEventQueueIsOverflowed = FALSE;
; ..\component\PduR\Implementation\PduR.c	  2502  
; ..\component\PduR\Implementation\PduR.c	  2503    /* Check if any event queue has overflowed */
; ..\component\PduR\Implementation\PduR.c	  2504    for(srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx < PduR_GetSrcApplicationRomEndIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  2505    {
; ..\component\PduR\Implementation\PduR.c	  2506      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfSrcApplicationRom(srcApplicationRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2507      boolean isEvCFull = PduR_EvC_IsFull(PduR_GetDeferredEventCacheRomIdxOfSrcApplicationRom(srcApplicationRomIdx), memIdx);
; ..\component\PduR\Implementation\PduR.c	  2508  
; ..\component\PduR\Implementation\PduR.c	  2509      if (isEvCFull)
; ..\component\PduR\Implementation\PduR.c	  2510      {
; ..\component\PduR\Implementation\PduR.c	  2511        anyEventQueueIsOverflowed = TRUE;
; ..\component\PduR\Implementation\PduR.c	  2512        break;
; ..\component\PduR\Implementation\PduR.c	  2513      }
; ..\component\PduR\Implementation\PduR.c	  2514    }
; ..\component\PduR\Implementation\PduR.c	  2515  
; ..\component\PduR\Implementation\PduR.c	  2516    return anyEventQueueIsOverflowed;
; ..\component\PduR\Implementation\PduR.c	  2517  }
; ..\component\PduR\Implementation\PduR.c	  2518  #endif
; ..\component\PduR\Implementation\PduR.c	  2519  
; ..\component\PduR\Implementation\PduR.c	  2520  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2521  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2522   * PduR_EvC_FlushAllEvCOfDestApplication
; ..\component\PduR\Implementation\PduR.c	  2523   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2524  /*!
; ..\component\PduR\Implementation\PduR.c	  2525   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2526   *
; ..\component\PduR\Implementation\PduR.c	  2527   *
; ..\component\PduR\Implementation\PduR.c	  2528   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2529  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_FlushAllEvCOfDestApplication(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx)
; ..\component\PduR\Implementation\PduR.c	  2530  {
; ..\component\PduR\Implementation\PduR.c	  2531    PduR_SrcApplicationRomEndIdxOfDestApplicationManagerRomType srcApplicationRomIdx;
; ..\component\PduR\Implementation\PduR.c	  2532  
; ..\component\PduR\Implementation\PduR.c	  2533    /* Flush Queues */
; ..\component\PduR\Implementation\PduR.c	  2534    for(srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx < PduR_GetSrcApplicationRomEndIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  2535    {
; ..\component\PduR\Implementation\PduR.c	  2536      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfSrcApplicationRom(srcApplicationRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2537  
; ..\component\PduR\Implementation\PduR.c	  2538      PduR_EvC_ReadFlush(PduR_GetDeferredEventCacheRomIdxOfSrcApplicationRom(srcApplicationRomIdx), memIdx);
; ..\component\PduR\Implementation\PduR.c	  2539    }
; ..\component\PduR\Implementation\PduR.c	  2540  }
; ..\component\PduR\Implementation\PduR.c	  2541  #endif
; ..\component\PduR\Implementation\PduR.c	  2542  
; ..\component\PduR\Implementation\PduR.c	  2543  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2544  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2545   * PduR_EvC_ReadAndProcessEvCOfDestApplication
; ..\component\PduR\Implementation\PduR.c	  2546   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2547  /*!
; ..\component\PduR\Implementation\PduR.c	  2548   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2549   *
; ..\component\PduR\Implementation\PduR.c	  2550   *
; ..\component\PduR\Implementation\PduR.c	  2551   *
; ..\component\PduR\Implementation\PduR.c	  2552   *
; ..\component\PduR\Implementation\PduR.c	  2553   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2554  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_EvC_ReadAndProcessEvCOfDestApplication(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx)
; ..\component\PduR\Implementation\PduR.c	  2555  {
; ..\component\PduR\Implementation\PduR.c	  2556    PduR_SrcApplicationRomEndIdxOfDestApplicationManagerRomType srcApplicationRomIdx;
; ..\component\PduR\Implementation\PduR.c	  2557  
; ..\component\PduR\Implementation\PduR.c	  2558    for(srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx < PduR_GetSrcApplicationRomEndIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  2559    {
; ..\component\PduR\Implementation\PduR.c	  2560      PduR_RmGDestRomIterType rmGDestRomIdx;
; ..\component\PduR\Implementation\PduR.c	  2561      PduR_DeferredEventCacheRomIdxOfSrcApplicationRomType deferredEventCacheRomIdx = PduR_GetDeferredEventCacheRomIdxOfSrcApplicationRom(srcApplicationRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2562      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfSrcApplicationRom(srcApplicationRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2563      PduR_DeferredEventCacheArrayRamLengthOfDeferredEventCacheRomType readLimit = PduR_GetDeferredEventCacheArrayRamLengthOfDeferredEventCacheRom(deferredEventCacheRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR.c	  2564  
; ..\component\PduR\Implementation\PduR.c	  2565      while(PduR_EvC_Get(deferredEventCacheRomIdx, &rmGDestRomIdx, memIdx) == E_OK)       /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR.c	  2566      {
; ..\component\PduR\Implementation\PduR.c	  2567        if(PduR_IsRmGDestIdxValidOnApplication(rmGDestRomIdx, destApplicationManagerRomIdx) == TRUE) /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR.c	  2568        {
; ..\component\PduR\Implementation\PduR.c	  2569          PduR_DispatchMainfuntion(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2570        }
; ..\component\PduR\Implementation\PduR.c	  2571        readLimit--;
; ..\component\PduR\Implementation\PduR.c	  2572        if(readLimit == 0u)       /* COV_PDUR_DEFERRED_EVENT_CACHE_READLIMIT */
; ..\component\PduR\Implementation\PduR.c	  2573        {
; ..\component\PduR\Implementation\PduR.c	  2574          break;
; ..\component\PduR\Implementation\PduR.c	  2575        }
; ..\component\PduR\Implementation\PduR.c	  2576      }
; ..\component\PduR\Implementation\PduR.c	  2577    }
; ..\component\PduR\Implementation\PduR.c	  2578  }
; ..\component\PduR\Implementation\PduR.c	  2579  #endif
; ..\component\PduR\Implementation\PduR.c	  2580  
; ..\component\PduR\Implementation\PduR.c	  2581  #if ((PDUR_MAIN_FUNCTION == STD_ON) && ((PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)))
; ..\component\PduR\Implementation\PduR.c	  2582  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2583   * PduR_ProcessAllDestinationsOfDestApplication
; ..\component\PduR\Implementation\PduR.c	  2584   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2585  /*!
; ..\component\PduR\Implementation\PduR.c	  2586   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2587   *
; ..\component\PduR\Implementation\PduR.c	  2588   *
; ..\component\PduR\Implementation\PduR.c	  2589   *
; ..\component\PduR\Implementation\PduR.c	  2590   *
; ..\component\PduR\Implementation\PduR.c	  2591   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2592  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_ProcessAllDestinationsOfDestApplication(PduR_DestApplicationManagerRomIterType destApplicationManagerRomIdx)
; ..\component\PduR\Implementation\PduR.c	  2593  {
; ..\component\PduR\Implementation\PduR.c	  2594    PduR_MmRomIndIterType mmIndIdx;
; ..\component\PduR\Implementation\PduR.c	  2595  
; ..\component\PduR\Implementation\PduR.c	  2596    for(mmIndIdx = PduR_GetMmRomIndStartIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); mmIndIdx < PduR_GetMmRomIndEndIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); mmIndIdx++)
; ..\component\PduR\Implementation\PduR.c	  2597    {
; ..\component\PduR\Implementation\PduR.c	  2598      PduR_RmGDestRomIterType rmGDestRomIdx;
; ..\component\PduR\Implementation\PduR.c	  2599      PduR_MmRomIterType mmIdx = PduR_GetMmRomInd(mmIndIdx);
; ..\component\PduR\Implementation\PduR.c	  2600  
; ..\component\PduR\Implementation\PduR.c	  2601      for(rmGDestRomIdx = PduR_GetRmGDestRomStartIdxOfMmRom(mmIdx); rmGDestRomIdx < PduR_GetRmGDestRomEndIdxOfMmRom(mmIdx); rmGDestRomIdx++)
; ..\component\PduR\Implementation\PduR.c	  2602      {
; ..\component\PduR\Implementation\PduR.c	  2603        PduR_DispatchMainfuntion(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR.c	  2604      }
; ..\component\PduR\Implementation\PduR.c	  2605    }
; ..\component\PduR\Implementation\PduR.c	  2606  }
; ..\component\PduR\Implementation\PduR.c	  2607  #endif
; ..\component\PduR\Implementation\PduR.c	  2608  
; ..\component\PduR\Implementation\PduR.c	  2609  #if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR.c	  2610  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2611   * PduR_IsRmGDestIdxValidOnApplication
; ..\component\PduR\Implementation\PduR.c	  2612   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2613  /*!
; ..\component\PduR\Implementation\PduR.c	  2614   * Internal comment removed.
; ..\component\PduR\Implementation\PduR.c	  2615   *
; ..\component\PduR\Implementation\PduR.c	  2616   *
; ..\component\PduR\Implementation\PduR.c	  2617   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2618  LOCAL_INLINE FUNC(boolean, PDUR_CODE) PduR_IsRmGDestIdxValidOnApplication(PduR_RmGDestRomIterType rmGDestRomIdx, PduR_DestApplicationManagerRomIterType applicationId)
; ..\component\PduR\Implementation\PduR.c	  2619  {
; ..\component\PduR\Implementation\PduR.c	  2620    boolean retVal;
; ..\component\PduR\Implementation\PduR.c	  2621  
; ..\component\PduR\Implementation\PduR.c	  2622    PduR_DestApplicationManagerRomIterType supposedApplicationId = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx));
; ..\component\PduR\Implementation\PduR.c	  2623  
; ..\component\PduR\Implementation\PduR.c	  2624    if(applicationId == supposedApplicationId) /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR.c	  2625    {
; ..\component\PduR\Implementation\PduR.c	  2626      retVal = TRUE;
; ..\component\PduR\Implementation\PduR.c	  2627    }
; ..\component\PduR\Implementation\PduR.c	  2628    else
; ..\component\PduR\Implementation\PduR.c	  2629    {
; ..\component\PduR\Implementation\PduR.c	  2630      retVal = FALSE;
; ..\component\PduR\Implementation\PduR.c	  2631    }
; ..\component\PduR\Implementation\PduR.c	  2632  
; ..\component\PduR\Implementation\PduR.c	  2633    return retVal;
; ..\component\PduR\Implementation\PduR.c	  2634  }
; ..\component\PduR\Implementation\PduR.c	  2635  #endif
; ..\component\PduR\Implementation\PduR.c	  2636  
; ..\component\PduR\Implementation\PduR.c	  2637  #define PDUR_STOP_SEC_CODE
; ..\component\PduR\Implementation\PduR.c	  2638  #include "PduR_MemMap.h"    /* PRQA S 5087 */        /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR.c	  2639  
; ..\component\PduR\Implementation\PduR.c	  2640  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2641   * GLOBAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR.c	  2642   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR.c	  2643  /* module specific MISRA deviations:
; ..\component\PduR\Implementation\PduR.c	  2644    MD_PduR_1505:  Misra Rule 8.7
; ..\component\PduR\Implementation\PduR.c	  2645       Reason:      It depends on the configuration if the function is only referenced in the translation unit is is defined or not.
; ..\component\PduR\Implementation\PduR.c	  2646       Risk:        No risk.
; ..\component\PduR\Implementation\PduR.c	  2647       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2648  
; ..\component\PduR\Implementation\PduR.c	  2649    MD_PduR_1336: Misra Rule 8.2
; ..\component\PduR\Implementation\PduR.c	  2650       Reason:      No identifier name needed in a function pointer typedef.
; ..\component\PduR\Implementation\PduR.c	  2651       Risk:        No risk, because only warning that with a identifier name the readability is better.
; ..\component\PduR\Implementation\PduR.c	  2652       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2653  
; ..\component\PduR\Implementation\PduR.c	  2654    MD_PduR_2842
; ..\component\PduR\Implementation\PduR.c	  2655       Reason:      Index Access using the ComStackLib.
; ..\component\PduR\Implementation\PduR.c	  2656       Risk:        No risk, because qualified use-case CSL02 of ComStackLib.
; ..\component\PduR\Implementation\PduR.c	  2657       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2658  
; ..\component\PduR\Implementation\PduR.c	  2659    MD_PduR_2983: Misra Rule 2.2
; ..\component\PduR\Implementation\PduR.c	  2660       Reason:      The value is modified to be used in the next iteration. It depends on the configuration if the loop consists of more than one iteration.
; ..\component\PduR\Implementation\PduR.c	  2661       Risk:        No risk, as the assigned value is only not used subsequently.
; ..\component\PduR\Implementation\PduR.c	  2662       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2663  
; ..\component\PduR\Implementation\PduR.c	  2664    MD_PduR_2985: Misra Rule 2.2
; ..\component\PduR\Implementation\PduR.c	  2665       Reason:      The value of the result is only that of the left-hand operand for the first iteration. It depends on the configuration it there will be more than one iteration step.
; ..\component\PduR\Implementation\PduR.c	  2666       Risk:        No risk, as the bitwise operation is only redundant.
; ..\component\PduR\Implementation\PduR.c	  2667       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2668  
; ..\component\PduR\Implementation\PduR.c	  2669    MD_PduR_2995_2996: Misra Rule 2.2
; ..\component\PduR\Implementation\PduR.c	  2670       Reason:      Depending on the configuration the check might always be true or false.
; ..\component\PduR\Implementation\PduR.c	  2671       Risk:        No risk, as the evaluation of the boolean expression depends on the configuration.
; ..\component\PduR\Implementation\PduR.c	  2672       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2673  
; ..\component\PduR\Implementation\PduR.c	  2674    MD_PduR_2991: Misra Rule 14.3
; ..\component\PduR\Implementation\PduR.c	  2675       Reason:      The value of the if-controlling expression depends on the configuration.
; ..\component\PduR\Implementation\PduR.c	  2676       Risk:        No risk.
; ..\component\PduR\Implementation\PduR.c	  2677       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2678  
; ..\component\PduR\Implementation\PduR.c	  2679    MD_PduR_2880: Misra Rule 2.1
; ..\component\PduR\Implementation\PduR.c	  2680       Reason:      Code might not be reachable depending on the configuration.
; ..\component\PduR\Implementation\PduR.c	  2681       Risk:        No risk.
; ..\component\PduR\Implementation\PduR.c	  2682       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2683  
; ..\component\PduR\Implementation\PduR.c	  2684    MD_PduR_3415: Misra Rule 13.5
; ..\component\PduR\Implementation\PduR.c	  2685       Reason:      The right hand operand is known to have no side effects.
; ..\component\PduR\Implementation\PduR.c	  2686       Risk:        No risk.
; ..\component\PduR\Implementation\PduR.c	  2687       Prevention:  No prevention necessary.
; ..\component\PduR\Implementation\PduR.c	  2688  
; ..\component\PduR\Implementation\PduR.c	  2689    MD_PduR_3451_3449: Misra Rule 8.8
; ..\component\PduR\Implementation\PduR.c	  2690    Reason:         The global identifier has been declared in more than one file. the function declaration has to be in
; ..\component\PduR\Implementation\PduR.c	  2691                    the PduR_<Module>.h. Affected APIs are CancelReceive, CancelTransmit and ChangeParameter.
; ..\component\PduR\Implementation\PduR.c	  2692    Risk:           no risk.
; ..\component\PduR\Implementation\PduR.c	  2693    Prevention:     To avoid a duplicate declaration use the BSW-Module "use-Tag" flag.
; ..\component\PduR\Implementation\PduR.c	  2694    
; ..\component\PduR\Implementation\PduR.c	  2695    MD_PduR_DistinctIdentifiers: Misra Rule 5.5
; ..\component\PduR\Implementation\PduR.c	  2696    Reason:         Generated symbols may exceed the 31 character limitation, because the code 
; ..\component\PduR\Implementation\PduR.c	  2697                    generator concatenates strings based on fixed rules.
; ..\component\PduR\Implementation\PduR.c	  2698    Risk:           The linker or compiler may mismatch symbols.
; ..\component\PduR\Implementation\PduR.c	  2699    Prevention:     Modern compilers for AUTOSAR platforms do not have this limitation anymore. 
; ..\component\PduR\Implementation\PduR.c	  2700  */
; ..\component\PduR\Implementation\PduR.c	  2701  
; ..\component\PduR\Implementation\PduR.c	  2702  /* *INDENT-OFF* */
; ..\component\PduR\Implementation\PduR.c	  2703  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\PduR\Implementation\PduR.c	  2704  
; ..\component\PduR\Implementation\PduR.c	  2705    \ID SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION
; ..\component\PduR\Implementation\PduR.c	  2706      \DESCRIPTION The index is passed to an internal function as parameter and is used within the function to write to a memory location.
; ..\component\PduR\Implementation\PduR.c	  2707      \COUNTERMEASURE \N The index is read by the calling function using the ComStackLib macros. The ComStackLib ensures that the index is valid.
; ..\component\PduR\Implementation\PduR.c	  2708  
; ..\component\PduR\Implementation\PduR.c	  2709    \ID SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION
; ..\component\PduR\Implementation\PduR.c	  2710      \DESCRIPTION A pointer is written or passed to a function. The pointer can possibly be used to write to the corresponding memory location.
; ..\component\PduR\Implementation\PduR.c	  2711      \COUNTERMEASURE \N The calling function ensures that the pointer is valid.
; ..\component\PduR\Implementation\PduR.c	  2712  
; ..\component\PduR\Implementation\PduR.c	  2713    \ID SBSW_PDUR_STACK_VARIABLE
; ..\component\PduR\Implementation\PduR.c	  2714      \DESCRIPTION A pointer is passed to a function. The pointer can possibly be used to write to the corresponding memory location.
; ..\component\PduR\Implementation\PduR.c	  2715      \COUNTERMEASURE \N The pointer points to a local stack variable, therefore it's always valid.
; ..\component\PduR\Implementation\PduR.c	  2716  
; ..\component\PduR\Implementation\PduR.c	  2717    \ID SBSW_PDUR_GETVERSION_PARAM
; ..\component\PduR\Implementation\PduR.c	  2718      \DESCRIPTION    The PduR_GetVersionInfo writes to the 'versioninfo' pointer parameter. It is checked against NULL,
; ..\component\PduR\Implementation\PduR.c	  2719                      but this does not guarantee that the referenced memory is valid.
; ..\component\PduR\Implementation\PduR.c	  2720      \COUNTERMEASURE \N  Pointers passed to public PduR APIs point to a valid memory range. A general countermeasure is included in the safety manual.
; ..\component\PduR\Implementation\PduR.c	  2721  
; ..\component\PduR\Implementation\PduR.c	  2722    \ID SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR
; ..\component\PduR\Implementation\PduR.c	  2723      \DESCRIPTION    The API is called with an Id and a pointer.
; ..\component\PduR\Implementation\PduR.c	  2724                      The API call is forwarded using a function pointer which is read using ComStackLib macros.
; ..\component\PduR\Implementation\PduR.c	  2725  
; ..\component\PduR\Implementation\PduR.c	  2726      \COUNTERMEASURE \N The function pointer is read using the passed Id and ComStackLib macros.
; ..\component\PduR\Implementation\PduR.c	  2727                         The Id is a SNV provided by the lower layer. It is checked when it was first passed to the PduR module.
; ..\component\PduR\Implementation\PduR.c	  2728                         The pointer is either forwarded and assumed to be valid or it is a local stack variable.
; ..\component\PduR\Implementation\PduR.c	  2729  
; ..\component\PduR\Implementation\PduR.c	  2730    \ID SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY
; ..\component\PduR\Implementation\PduR.c	  2731      \DESCRIPTION    The API is called with an Id.
; ..\component\PduR\Implementation\PduR.c	  2732                      The API call is forwarded using a function pointer which is read using ComStackLib macros.
; ..\component\PduR\Implementation\PduR.c	  2733      \COUNTERMEASURE \R The function pointer is read using the passed Id and ComStackLib macros.
; ..\component\PduR\Implementation\PduR.c	  2734                         The Id is a SNV provided by the lower layer.
; ..\component\PduR\Implementation\PduR.c	  2735                         It is checked when it was first passed to the PduR module.
; ..\component\PduR\Implementation\PduR.c	  2736  
; ..\component\PduR\Implementation\PduR.c	  2737    \ID SBSW_PDUR_MEM_CPY_FIFOMGR
; ..\component\PduR\Implementation\PduR.c	  2738      \DESCRIPTION Call to copy RAM data to RAM
; ..\component\PduR\Implementation\PduR.c	  2739      \COUNTERMEASURE \N The passed pointers are either read by ComStackLib macros or are passed through and checked by one of the calling functions.
; ..\component\PduR\Implementation\PduR.c	  2740                         The size of the copy operation is always equal or less than the size of the destination buffer. This is ensured by the calling function.
; ..\component\PduR\Implementation\PduR.c	  2741  
; ..\component\PduR\Implementation\PduR.c	  2742    \ID SBSW_PDUR_MEM_CPY_RAM2RAM
; ..\component\PduR\Implementation\PduR.c	  2743      \DESCRIPTION Call to copy RAM data to RAM
; ..\component\PduR\Implementation\PduR.c	  2744      \COUNTERMEASURE \R The passed pointers are either read by ComStackLib macros or are passed through and checked by one of the calling functions.
; ..\component\PduR\Implementation\PduR.c	  2745                      \R The size of the copy operation is checked against the remaining free buffer space.
; ..\component\PduR\Implementation\PduR.c	  2746  
; ..\component\PduR\Implementation\PduR.c	  2747    \ID SBSW_PDUR_WRITE_TRANSMIT_OR_INDICATION_QUEUE
; ..\component\PduR\Implementation\PduR.c	  2748      \DESCRIPTION Data is written into the indication or transmit queue.
; ..\component\PduR\Implementation\PduR.c	  2749      \COUNTERMEASURE \R The passed index will always be within range of the indication or transmit queue as it is caluclated considering the length of the queue.
; ..\component\PduR\Implementation\PduR.c	  2750  
; ..\component\PduR\Implementation\PduR.c	  2751    \ID SBSW_PDUR_CORE_ID_RTCHECK
; ..\component\PduR\Implementation\PduR.c	  2752      \DESCRIPTION Array write access. Core Id is retrieved over OS API and respective counter is modified.
; ..\component\PduR\Implementation\PduR.c	  2753      \COUNTERMEASURE  \R Runtime check assures, core Id is always within the bounds of counter array.
; ..\component\PduR\Implementation\PduR.c	  2754  
; ..\component\PduR\Implementation\PduR.c	  2755    \ID SBSW_PDUR_MCQ_RAMARRAY_RTCHECK
; ..\component\PduR\Implementation\PduR.c	  2756      \DESCRIPTION Array write access. Write Idx is calculated from caller.
; ..\component\PduR\Implementation\PduR.c	  2757      \COUNTERMEASURE  \R Runtime check assures, write idx is always within the bound of the RamArray.
; ..\component\PduR\Implementation\PduR.c	  2758  
; ..\component\PduR\Implementation\PduR.c	  2759    \ID SBSW_PDUR_MCQ_RAMARRAY_RTCHECK_FCTCALL
; ..\component\PduR\Implementation\PduR.c	  2760      \DESCRIPTION The address of the provided destination pointer is retrieved via CSL Macros. Source pointer is only read.
; ..\component\PduR\Implementation\PduR.c	  2761      \COUNTERMEASURE  \R Runtime check assures, that the destination has enough space to store the data.
; ..\component\PduR\Implementation\PduR.c	  2762  
; ..\component\PduR\Implementation\PduR.c	  2763    \ID SBSW_PDUR_EVC_PUT_RTCHECK
; ..\component\PduR\Implementation\PduR.c	  2764      \DESCRIPTION Array write access. Write Idx is read from Ram.
; ..\component\PduR\Implementation\PduR.c	  2765      \COUNTERMEASURE  \R Runtime check assures, write idx is always within the bounds.
; ..\component\PduR\Implementation\PduR.c	  2766  
; ..\component\PduR\Implementation\PduR.c	  2767    \ID SBSW_PDUR_FCT_CALL_P2CONST
; ..\component\PduR\Implementation\PduR.c	  2768      \DESCRIPTION Function call with constant P2CONST / CONSTP2CONST.
; ..\component\PduR\Implementation\PduR.c	  2769      \COUNTERMEASURE  \N The function is call with pointer for reading purpose only. Content of pointer is not modified.
; ..\component\PduR\Implementation\PduR.c	  2770  
; ..\component\PduR\Implementation\PduR.c	  2771    \ID SBSW_PDUR_CSL01
; ..\component\PduR\Implementation\PduR.c	  2772      \DESCRIPTION Index Access is using ComStackLib
; ..\component\PduR\Implementation\PduR.c	  2773      \COUNTERMEASURE  \N Qualified use-case CSL01 of ComStackLib.
; ..\component\PduR\Implementation\PduR.c	  2774  
; ..\component\PduR\Implementation\PduR.c	  2775    \ID SBSW_PDUR_CSL02
; ..\component\PduR\Implementation\PduR.c	  2776      \DESCRIPTION  Access of Table1, via indirection over Table2
; ..\component\PduR\Implementation\PduR.c	  2777                    with same index using ComStackLib.
; ..\component\PduR\Implementation\PduR.c	  2778      \COUNTERMEASURE \N Qualified use-case CSL02 of ComStackLib
; ..\component\PduR\Implementation\PduR.c	  2779  
; ..\component\PduR\Implementation\PduR.c	  2780    \ID SBSW_PDUR_CSL03
; ..\component\PduR\Implementation\PduR.c	  2781      \DESCRIPTION Access to Table1 via indirection over Table2.
; ..\component\PduR\Implementation\PduR.c	  2782      \COUNTERMEASURE \N Qualified use-case CSL03 of ComStackLib
; ..\component\PduR\Implementation\PduR.c	  2783  
; ..\component\PduR\Implementation\PduR.c	  2784    \ID SBSW_PDUR_CSL_VAR_ACCESS
; ..\component\PduR\Implementation\PduR.c	  2785      \DESCRIPTION A ComStackLib generated variable is accessed.
; ..\component\PduR\Implementation\PduR.c	  2786      \COUNTERMEASURE \N The variable is written using a generated macro of the CSL. It immediately dereferences the variables address without pointer arithmetic.
; ..\component\PduR\Implementation\PduR.c	  2787  
; ..\component\PduR\Implementation\PduR.c	  2788    SBSW_JUSTIFICATION_END */
; ..\component\PduR\Implementation\PduR.c	  2789  
; ..\component\PduR\Implementation\PduR.c	  2790  /*
; ..\component\PduR\Implementation\PduR.c	  2791    SBSW_PDUR_CSL01 Boundary check using generated identifiers:
; ..\component\PduR\Implementation\PduR.c	  2792    Table1 -- Size of the table itself
; ..\component\PduR\Implementation\PduR.c	  2793  
; ..\component\PduR\Implementation\PduR.c	  2794    SBSW_PDUR_CSL02 Arrays of same size:
; ..\component\PduR\Implementation\PduR.c	  2795    Table1 -- SizeRelation --> Table2
; ..\component\PduR\Implementation\PduR.c	  2796  
; ..\component\PduR\Implementation\PduR.c	  2797    SBSW_PDUR_CSL03: Usage of modelled indirections:
; ..\component\PduR\Implementation\PduR.c	  2798    Table1 -- Key Size Relation --> Table2
; ..\component\PduR\Implementation\PduR.c	  2799  */
; ..\component\PduR\Implementation\PduR.c	  2800  
; ..\component\PduR\Implementation\PduR.c	  2801  /* COV_JUSTIFICATION_BEGIN
; ..\component\PduR\Implementation\PduR.c	  2802    \ID COV_PDUR_FEATURE_ALWAYS_TRUE
; ..\component\PduR\Implementation\PduR.c	  2803      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2804      \ACCEPT TF tx tf
; ..\component\PduR\Implementation\PduR.c	  2805      \ACCEPT TF tf xf
; ..\component\PduR\Implementation\PduR.c	  2806      \ACCEPT TF tf tf tf xf
; ..\component\PduR\Implementation\PduR.c	  2807      \ACCEPT TF tf tx
; ..\component\PduR\Implementation\PduR.c	  2808      \ACCEPT XF tf xf
; ..\component\PduR\Implementation\PduR.c	  2809      \ACCEPT TX tx tx
; ..\component\PduR\Implementation\PduR.c	  2810      \REASON Depending on the configuration the feature check can always be true. In this case the compiler removes the check.
; ..\component\PduR\Implementation\PduR.c	  2811  
; ..\component\PduR\Implementation\PduR.c	  2812    \ID COV_PDUR_ONLY_TP_QUEUED_ROUTINGS
; ..\component\PduR\Implementation\PduR.c	  2813      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2814      \REASON The condition is always true if there are only queued transport protocol routings and no unqueued routings in the configuration.
; ..\component\PduR\Implementation\PduR.c	  2815  
; ..\component\PduR\Implementation\PduR.c	  2816    \ID COV_PDUR_ONLY_DEFERRED_TP_QUEUED_ROUTINGS
; ..\component\PduR\Implementation\PduR.c	  2817      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2818      \REASON The condition is always false as the transmission to the destination is always successful for deferred routings. It can only fail in the MainFunction context.
; ..\component\PduR\Implementation\PduR.c	  2819  
; ..\component\PduR\Implementation\PduR.c	  2820    \ID COV_PDUR_NO_DEFERRED_IF_ROUTING
; ..\component\PduR\Implementation\PduR.c	  2821      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2822      \REASON Function is never covered in configurations without deferred If routing paths. The function is always referenced by a function pointer.
; ..\component\PduR\Implementation\PduR.c	  2823  
; ..\component\PduR\Implementation\PduR.c	  2824    \ID COV_PDUR_NO_DEFERRED_TP_ROUTING
; ..\component\PduR\Implementation\PduR.c	  2825      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2826      \REASON Function is never covered in configurations without deferred Tp routing paths. The function is always referenced by a function pointer.
; ..\component\PduR\Implementation\PduR.c	  2827  
; ..\component\PduR\Implementation\PduR.c	  2828    \ID COV_PDUR_CROSSCORE_ROUTINGS_ONLY
; ..\component\PduR\Implementation\PduR.c	  2829      \ACCEPT TF tx tf
; ..\component\PduR\Implementation\PduR.c	  2830      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2831      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2832      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2833      \REASON Condition can't be covered in configurations with only cross-core routing paths.
; ..\component\PduR\Implementation\PduR.c	  2834  
; ..\component\PduR\Implementation\PduR.c	  2835    \ID COV_PDUR_ONLY_DIRECT_BUFFER
; ..\component\PduR\Implementation\PduR.c	  2836      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2837      \ACCEPT TF tx tf
; ..\component\PduR\Implementation\PduR.c	  2838      \REASON In configurations with only direct buffers this is always true. Buffer can't run out as there always will be the shadow buffer.
; ..\component\PduR\Implementation\PduR.c	  2839  
; ..\component\PduR\Implementation\PduR.c	  2840    \ID COV_PDUR_ONLY_TT_SINGLE_BUFFER
; ..\component\PduR\Implementation\PduR.c	  2841      \ACCEPT XX
; ..\component\PduR\Implementation\PduR.c	  2842      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2843      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2844      \REASON The code can't be covered in configurations where only trigger transmit single buffer are used.
; ..\component\PduR\Implementation\PduR.c	  2845  
; ..\component\PduR\Implementation\PduR.c	  2846    \ID COV_PDUR_ONLY_SHARED_OR_DEDICATED_BUFFER
; ..\component\PduR\Implementation\PduR.c	  2847      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2848      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2849      \ACCEPT XX
; ..\component\PduR\Implementation\PduR.c	  2850      \REASON This configuration has only shared or dedicated buffer.
; ..\component\PduR\Implementation\PduR.c	  2851  
; ..\component\PduR\Implementation\PduR.c	  2852    \ID COV_PDUR_CANCELTRANSMIT_WITHOUT_RPG
; ..\component\PduR\Implementation\PduR.c	  2853      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2854      \REASON This case can not be covered without routing path groups being configured.
; ..\component\PduR\Implementation\PduR.c	  2855              The function can only be called once in these configuration and hence it will never be called in this TxInst state.
; ..\component\PduR\Implementation\PduR.c	  2856  
; ..\component\PduR\Implementation\PduR.c	  2857    \ID COV_PDUR_NO_NTO1_ROUTINGPATHS
; ..\component\PduR\Implementation\PduR.c	  2858      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2859      \REASON This condition is always true if no N:1 routing paths were configured.
; ..\component\PduR\Implementation\PduR.c	  2860  
; ..\component\PduR\Implementation\PduR.c	  2861    \ID COV_PDUR_NTO1_GW_ONLY_ROUTINGPATHS
; ..\component\PduR\Implementation\PduR.c	  2862      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2863      \REASON This condition is always true if there are only N:1 gateway only routing paths configured.
; ..\component\PduR\Implementation\PduR.c	  2864  
; ..\component\PduR\Implementation\PduR.c	  2865    \ID COV_PDUR_RUNS_ON_ALL_APPLICATIONS
; ..\component\PduR\Implementation\PduR.c	  2866      \APPLYOVERRIDE
; ..\component\PduR\Implementation\PduR.c	  2867      \REASON The PduR is executed on all configured Os Applications. Hence this loop always finds a valid Partition SNV and breaks the loop.
; ..\component\PduR\Implementation\PduR.c	  2868  
; ..\component\PduR\Implementation\PduR.c	  2869    \ID COV_PDUR_NTO1_NO_BUFFER_GW_ONLY_ROUTINGPATHS
; ..\component\PduR\Implementation\PduR.c	  2870      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2871      \ACCEPT XX
; ..\component\PduR\Implementation\PduR.c	  2872      \REASON This condition is never true if only no buffer gateway only N:1 routing paths exist.
; ..\component\PduR\Implementation\PduR.c	  2873  
; ..\component\PduR\Implementation\PduR.c	  2874    \ID COV_PDUR_MISRA
; ..\component\PduR\Implementation\PduR.c	  2875      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2876      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2877      \REASON [MSR_COV_MISRA]
; ..\component\PduR\Implementation\PduR.c	  2878  
; ..\component\PduR\Implementation\PduR.c	  2879    \ID COV_PDUR_IF_SDU_LENGTH_HANDLING
; ..\component\PduR\Implementation\PduR.c	  2880      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2881      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2882      \ACCEPT XX
; ..\component\PduR\Implementation\PduR.c	  2883      \REASON  If the provided length is greater than the maximum buffer size the value is truncated to this value. Therefore the code code not be reached in case of communication interface routing.
; ..\component\PduR\Implementation\PduR.c	  2884  
; ..\component\PduR\Implementation\PduR.c	  2885    \ID COV_PDUR_NON_EMPTY_QUEUE
; ..\component\PduR\Implementation\PduR.c	  2886      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2887      \REASON The fill level is only read from one function and in a context where it is never zero.
; ..\component\PduR\Implementation\PduR.c	  2888  
; ..\component\PduR\Implementation\PduR.c	  2889    \ID COV_PDUR_IF_ONLY
; ..\component\PduR\Implementation\PduR.c	  2890     \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2891     \ACCEPT XX
; ..\component\PduR\Implementation\PduR.c	  2892     \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2893     \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2894     \REASON This is only called if buffered transport protocol routing paths exist. This is not the case for communication interface routing path only configurations.
; ..\component\PduR\Implementation\PduR.c	  2895  
; ..\component\PduR\Implementation\PduR.c	  2896    \ID COV_PDUR_BUFFER_CALCULATION
; ..\component\PduR\Implementation\PduR.c	  2897     \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2898     \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2899     \REASON This function is not called in the context of this state. It still exists to have a correct and complete calculation function.
; ..\component\PduR\Implementation\PduR.c	  2900  
; ..\component\PduR\Implementation\PduR.c	  2901    \ID COV_PDUR_SPINLOCK_TIMEOUT
; ..\component\PduR\Implementation\PduR.c	  2902     \ACCEPT XF xf xx
; ..\component\PduR\Implementation\PduR.c	  2903     \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2904     \REASON The spinlock timeout can not be tested with the component testsuite.
; ..\component\PduR\Implementation\PduR.c	  2905  
; ..\component\PduR\Implementation\PduR.c	  2906    \ID COV_PDUR_EXTENDED_ERROR_CHECKS
; ..\component\PduR\Implementation\PduR.c	  2907     \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2908     \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2909     \ACCEPT XF tf xf
; ..\component\PduR\Implementation\PduR.c	  2910     \ACCEPT XF xf xx
; ..\component\PduR\Implementation\PduR.c	  2911     \REASON The extended error checks are not tested by the component testsuite.
; ..\component\PduR\Implementation\PduR.c	  2912  
; ..\component\PduR\Implementation\PduR.c	  2913    \ID COV_PDUR_FATAL_ERROR
; ..\component\PduR\Implementation\PduR.c	  2914      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2915      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2916      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2917      \ACCEPT TF tx tf
; ..\component\PduR\Implementation\PduR.c	  2918      \ACCEPT XF tf xf
; ..\component\PduR\Implementation\PduR.c	  2919      \REASON Fatal error check.
; ..\component\PduR\Implementation\PduR.c	  2920  
; ..\component\PduR\Implementation\PduR.c	  2921    \ID COV_PDUR_ROBUSTNESS
; ..\component\PduR\Implementation\PduR.c	  2922      \ACCEPT TF tx tf
; ..\component\PduR\Implementation\PduR.c	  2923      \ACCEPT TX tx tx
; ..\component\PduR\Implementation\PduR.c	  2924      \ACCEPT TF tf tx
; ..\component\PduR\Implementation\PduR.c	  2925      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2926      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2927      \ACCEPT TF tf tx tf
; ..\component\PduR\Implementation\PduR.c	  2928      \ACCEPT TF tx tf tf
; ..\component\PduR\Implementation\PduR.c	  2929      \ACCEPT TF tx tx tf
; ..\component\PduR\Implementation\PduR.c	  2930      \REASON This check increases robustness. Under normal circumstances it is never false/true.
; ..\component\PduR\Implementation\PduR.c	  2931  
; ..\component\PduR\Implementation\PduR.c	  2932    \ID COV_PDUR_MCQ_MAIN_FUNCTION_THRESHOLD
; ..\component\PduR\Implementation\PduR.c	  2933      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2934      \REASON Threshold shall never be violated in the Unit TestSuite. However, threshold check is required to avoid an endless loop under high load.
; ..\component\PduR\Implementation\PduR.c	  2935  
; ..\component\PduR\Implementation\PduR.c	  2936    \ID COV_PDUR_VAR_FATAL_ERROR
; ..\component\PduR\Implementation\PduR.c	  2937      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2938      \REASON Fatal error check.
; ..\component\PduR\Implementation\PduR.c	  2939  
; ..\component\PduR\Implementation\PduR.c	  2940    \ID COV_PDUR_VAR_DEV_ERROR_DETECT
; ..\component\PduR\Implementation\PduR.c	  2941      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2942      \REASON Det error detection must always be enabled for SafeBsw.
; ..\component\PduR\Implementation\PduR.c	  2943  
; ..\component\PduR\Implementation\PduR.c	  2944    \ID COV_PDUR_ERROR_NOTIFICATION
; ..\component\PduR\Implementation\PduR.c	  2945      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2946      \REASON Always false. Feature is not part of SafeBsw.
; ..\component\PduR\Implementation\PduR.c	  2947  
; ..\component\PduR\Implementation\PduR.c	  2948    \ID COV_PDUR_VAR_DEPENDENT_SWITCH
; ..\component\PduR\Implementation\PduR.c	  2949      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2950      \ACCEPT TX tx tx
; ..\component\PduR\Implementation\PduR.c	  2951      \REASON The nested switch depends on a previous switch.
; ..\component\PduR\Implementation\PduR.c	  2952  
; ..\component\PduR\Implementation\PduR.c	  2953    \ID COV_PDUR_VAR_NO_RX_ONLY_CONFIG
; ..\component\PduR\Implementation\PduR.c	  2954      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2955      \REASON Rx only configurations are not possible. Therefore this switch is always true.
; ..\component\PduR\Implementation\PduR.c	  2956  
; ..\component\PduR\Implementation\PduR.c	  2957    \ID COV_PDUR_VAR_LINIF_SPECIAL_CONFIGURATION
; ..\component\PduR\Implementation\PduR.c	  2958      \ACCEPT TX
; ..\component\PduR\Implementation\PduR.c	  2959      \REASON This can only be false for LinIf BswModule. Otherwise this Code part is always active if the API is active.
; ..\component\PduR\Implementation\PduR.c	  2960  
; ..\component\PduR\Implementation\PduR.c	  2961    \ID COV_PDUR_DEFERRED_EVENT_CACHE_READLIMIT
; ..\component\PduR\Implementation\PduR.c	  2962      \ACCEPT XF
; ..\component\PduR\Implementation\PduR.c	  2963      \REASON Statement is only true when events are queued again while others are read at the same time
; ..\component\PduR\Implementation\PduR.c	  2964  
; ..\component\PduR\Implementation\PduR.c	  2965    \ID COV_PDUR_WRAPPER_FUNC
; ..\component\PduR\Implementation\PduR.c	  2966      \ACCEPT X
; ..\component\PduR\Implementation\PduR.c	  2967      \REASON The wrapper function may not be needed in some configurations.
; ..\component\PduR\Implementation\PduR.c	  2968  
; ..\component\PduR\Implementation\PduR.c	  2969  COV_JUSTIFICATION_END */
; ..\component\PduR\Implementation\PduR.c	  2970  
; ..\component\PduR\Implementation\PduR.c	  2971  /* *INDENT-ON* */
; ..\component\PduR\Implementation\PduR.c	  2972  
; ..\component\PduR\Implementation\PduR.c	  2973  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR.c	  2974   * END OF FILE: PduR.c
; ..\component\PduR\Implementation\PduR.c	  2975   *********************************************************************************************************************/

	; Module end
