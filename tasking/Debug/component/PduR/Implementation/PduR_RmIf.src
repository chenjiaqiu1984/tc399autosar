	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\PduR\\Implementation\\.PduR_RmIf.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\PduR\\Implementation\\PduR_RmIf.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\PduR\\Implementation\\PduR_RmIf.src ..\\component\\PduR\\Implementation\\PduR_RmIf.c"
	.compiler_name		"ctc"
	;source	'..\\component\\PduR\\Implementation\\PduR_RmIf.c'

	
$TC162
	
	.sdecl	'.text.PduR_RmIf.PduR_RmIf_MultipleSourceHandler_Transmit',code,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.text.PduR_RmIf.PduR_RmIf_MultipleSourceHandler_Transmit'
	.align	2
	

; ..\component\PduR\Implementation\PduR_RmIf.c	     1  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	     2   *  COPYRIGHT
; ..\component\PduR\Implementation\PduR_RmIf.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmIf.c	     4   *  \verbatim
; ..\component\PduR\Implementation\PduR_RmIf.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\PduR\Implementation\PduR_RmIf.c	     6   *
; ..\component\PduR\Implementation\PduR_RmIf.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_RmIf.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\PduR\Implementation\PduR_RmIf.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_RmIf.c	    10   *  \endverbatim
; ..\component\PduR\Implementation\PduR_RmIf.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmIf.c	    12   *  FILE DESCRIPTION
; ..\component\PduR\Implementation\PduR_RmIf.c	    13   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmIf.c	    14   *         File:  PduR_RmIf.c
; ..\component\PduR\Implementation\PduR_RmIf.c	    15   *      Project:  Gw_AsrPduRCfg5
; ..\component\PduR\Implementation\PduR_RmIf.c	    16   *       Module:  MICROSAR PDU Router
; ..\component\PduR\Implementation\PduR_RmIf.c	    17   *    Generator:  Configurator 5
; ..\component\PduR\Implementation\PduR_RmIf.c	    18   *
; ..\component\PduR\Implementation\PduR_RmIf.c	    19   *  Description:  Vector implementation of AUTOSAR PDU Router
; ..\component\PduR\Implementation\PduR_RmIf.c	    20   *
; ..\component\PduR\Implementation\PduR_RmIf.c	    21   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    22  
; ..\component\PduR\Implementation\PduR_RmIf.c	    23  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    24   *  REVISION HISTORY
; ..\component\PduR\Implementation\PduR_RmIf.c	    25   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmIf.c	    26   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_RmIf.c	    27   *
; ..\component\PduR\Implementation\PduR_RmIf.c	    28   *  FILE VERSION
; ..\component\PduR\Implementation\PduR_RmIf.c	    29   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmIf.c	    30   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_RmIf.c	    31   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    32  
; ..\component\PduR\Implementation\PduR_RmIf.c	    33  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    34   * LOCAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR_RmIf.c	    35   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    36  
; ..\component\PduR\Implementation\PduR_RmIf.c	    37  
; ..\component\PduR\Implementation\PduR_RmIf.c	    38  #define PDUR_RMIF_SOURCE
; ..\component\PduR\Implementation\PduR_RmIf.c	    39  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    40   * INCLUDES
; ..\component\PduR\Implementation\PduR_RmIf.c	    41   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    42  #include "PduR.h"
; ..\component\PduR\Implementation\PduR_RmIf.c	    43  #include "PduR_Fm.h"
; ..\component\PduR\Implementation\PduR_RmIf.c	    44  #include "PduR_McQ.h"
; ..\component\PduR\Implementation\PduR_RmIf.c	    45  #include "PduR_Lock.h"
; ..\component\PduR\Implementation\PduR_RmIf.c	    46  #include "PduR_RmIf.h"
; ..\component\PduR\Implementation\PduR_RmIf.c	    47  #if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	    48  # include "Det.h"
; ..\component\PduR\Implementation\PduR_RmIf.c	    49  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	    50  
; ..\component\PduR\Implementation\PduR_RmIf.c	    51  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    52   *  LOCAL CONSTANT MACROS
; ..\component\PduR\Implementation\PduR_RmIf.c	    53   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    54  
; ..\component\PduR\Implementation\PduR_RmIf.c	    55  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    56   *  LOCAL FUNCTION MACROS
; ..\component\PduR\Implementation\PduR_RmIf.c	    57   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    58  #define PduR_Core_MemCpyRamToRam(d, s, l)    VStdMemCpyRamToRam((d), (s), (l))
; ..\component\PduR\Implementation\PduR_RmIf.c	    59  #define PduR_Core_MemCpyRomToRam(d, s, l)    VStdMemCpyRomToRam((d), (s), (l))
; ..\component\PduR\Implementation\PduR_RmIf.c	    60  
; ..\component\PduR\Implementation\PduR_RmIf.c	    61  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    62   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\PduR\Implementation\PduR_RmIf.c	    63   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    64  
; ..\component\PduR\Implementation\PduR_RmIf.c	    65  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    66   *  LOCAL DATA PROTOTYPES
; ..\component\PduR\Implementation\PduR_RmIf.c	    67   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    68  
; ..\component\PduR\Implementation\PduR_RmIf.c	    69  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    70   *  GLOBAL DATA
; ..\component\PduR\Implementation\PduR_RmIf.c	    71   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    72  
; ..\component\PduR\Implementation\PduR_RmIf.c	    73  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    74   *  LOCAL FUNCTION PROTOTYPES
; ..\component\PduR\Implementation\PduR_RmIf.c	    75   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    76  #define PDUR_START_SEC_CODE
; ..\component\PduR\Implementation\PduR_RmIf.c	    77  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_RmIf.c	    78  
; ..\component\PduR\Implementation\PduR_RmIf.c	    79  #if(PDUR_EXISTS_SHORTEN_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	    80  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    81   * PduR_RmIf_TruncateDlc
; ..\component\PduR\Implementation\PduR_RmIf.c	    82   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    83  /*! \brief      Truncates the Pdu length to the configured Pdu length if larger.
; ..\component\PduR\Implementation\PduR_RmIf.c	    84   *  \details    -
; ..\component\PduR\Implementation\PduR_RmIf.c	    85   *  \param[in]  rmGDest           routing manager indirection Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	    86   *  \param[in]  info              contains the data pointer and its length.
; ..\component\PduR\Implementation\PduR_RmIf.c	    87   *  \pre        -
; ..\component\PduR\Implementation\PduR_RmIf.c	    88   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    89  LOCAL_INLINE FUNC(PduLengthType, PDUR_CODE) PduR_RmIf_TruncateDlc(PduR_RmGDestRomIterType rmGDest, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	    90  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	    91  
; ..\component\PduR\Implementation\PduR_RmIf.c	    92  #if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	    93  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	    94   * PduR_RmIf_FifoHandling
; ..\component\PduR\Implementation\PduR_RmIf.c	    95   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	    96  /*! \brief      Perform D-Fifo and TT-Fifo buffer and transmission handling
; ..\component\PduR\Implementation\PduR_RmIf.c	    97   *  \details    -
; ..\component\PduR\Implementation\PduR_RmIf.c	    98   *  \param[in]  rmDest   routing manager indirection Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	    99   *  \param[in]  rmGDest  routing manager indirection Idx to global destination Pdu table.
; ..\component\PduR\Implementation\PduR_RmIf.c	   100   *  \param[in]  info     Info pointer contains data and length
; ..\component\PduR\Implementation\PduR_RmIf.c	   101   *  \pre        -
; ..\component\PduR\Implementation\PduR_RmIf.c	   102   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   103  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_FifoHandling(PduR_RmDestRomIterType rmDest, PduR_RmGDestRomIdxOfRmDestRomType rmGDest, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   104  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   105  
; ..\component\PduR\Implementation\PduR_RmIf.c	   106  #if(PDUR_EXISTS_IF_NOBUFFER_GATEWAY_ROUTINGTYPEOFRMDESTROM == STD_ON )
; ..\component\PduR\Implementation\PduR_RmIf.c	   107  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   108     PduR_RmIf_RxIndicationNoBuffer
; ..\component\PduR\Implementation\PduR_RmIf.c	   109  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   110  /*! \brief       This function processes the 'No-buffer-gateway-routing'
; ..\component\PduR\Implementation\PduR_RmIf.c	   111   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   112   *  \param[in]   rmDestIdx         ID of the received gateway I-PDU
; ..\component\PduR\Implementation\PduR_RmIf.c	   113   *  \param[in]   info              Payload information of the received I-PDU (pointer to data and data length).
; ..\component\PduR\Implementation\PduR_RmIf.c	   114   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   115   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   116   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   117   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   118   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmIf.c	   119  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   120  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_RxIndicationNoBuffer(PduR_RmDestRomIterType rmDestIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   121  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   122  
; ..\component\PduR\Implementation\PduR_RmIf.c	   123  #if(PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   124  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   125     PduR_RmIf_Forward2Buffer
; ..\component\PduR\Implementation\PduR_RmIf.c	   126  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   127  /*! \brief       The function forwards the If Pdu to the corresponding buffer handling function.
; ..\component\PduR\Implementation\PduR_RmIf.c	   128   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   129   *  \param[in]   rmDestIdx         ID of the received gateway I-PDU
; ..\component\PduR\Implementation\PduR_RmIf.c	   130   *  \param[in]   info              Payload information of the received I-PDU (pointer to data and data length).
; ..\component\PduR\Implementation\PduR_RmIf.c	   131   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   132   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   133   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   134   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   135   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmIf.c	   136  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   137  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_Forward2Buffer(PduR_RmDestRomIterType rmDestIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   138  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   139  
; ..\component\PduR\Implementation\PduR_RmIf.c	   140  #if(PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   141  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   142   * PduR_RmIf_SingleBufferHandling
; ..\component\PduR\Implementation\PduR_RmIf.c	   143   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   144  /*! \brief     This function processes 'Single-buffer-routings'
; ..\component\PduR\Implementation\PduR_RmIf.c	   145   *  \details   -
; ..\component\PduR\Implementation\PduR_RmIf.c	   146   *  \param[in] rmDest         routing manager indirection Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	   147   *  \param[in] rmGDest        routing manager indirection Idx to global destination Pdu table.
; ..\component\PduR\Implementation\PduR_RmIf.c	   148   *  \param[in] info           Info pointer contains data and max Pdu length.
; ..\component\PduR\Implementation\PduR_RmIf.c	   149   *  \pre       -
; ..\component\PduR\Implementation\PduR_RmIf.c	   150   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   151  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_SingleBufferHandling(PduR_RmDestRomIterType rmDest, PduR_RmGDestRomIdxOfRmDestRomType rmGDest, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   152  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   153  
; ..\component\PduR\Implementation\PduR_RmIf.c	   154  #if( (PDUR_EXISTS_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_IF_NOBUFFER_GATEWAY_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   155  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   156    PduR_RmIf_MultipleSourceHandler_Transmit
; ..\component\PduR\Implementation\PduR_RmIf.c	   157  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   158  /*!  \brief       This function transmits the Pdu to the destination module and does N:1 handling if required
; ..\component\PduR\Implementation\PduR_RmIf.c	   159   *   \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   160   *   \param[in]   rmDestRomIdx              ID of the destination Pdu
; ..\component\PduR\Implementation\PduR_RmIf.c	   161   *   \param[in]   info                      Pointer to the destination buffer and the number of bytes to copy.
; ..\component\PduR\Implementation\PduR_RmIf.c	   162   *   \param[in]   useLock                   shall the 'transmissionActive' Flag be set and considered for this transmission
; ..\component\PduR\Implementation\PduR_RmIf.c	   163   *   \return      Std_ReturnType            Result of the multiple transmission.
; ..\component\PduR\Implementation\PduR_RmIf.c	   164   *                            E_OK          The transmission was successfully .\n
; ..\component\PduR\Implementation\PduR_RmIf.c	   165   *                            E_NOT_OK      The transmission fails.
; ..\component\PduR\Implementation\PduR_RmIf.c	   166   *   \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   167   *   \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   168   *   \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   169   *   \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   170  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   171  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_MultipleSourceHandler_Transmit(PduR_RmDestRomIterType rmDestRomIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, boolean useLock);
; ..\component\PduR\Implementation\PduR_RmIf.c	   172  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   173  
; ..\component\PduR\Implementation\PduR_RmIf.c	   174  #if(PDUR_HASIFTXFIFOOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   175  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   176    PduR_RmIf_TxConfirmation
; ..\component\PduR\Implementation\PduR_RmIf.c	   177  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   178  /*! \brief       The function is called by the PduR to indicate the complete transmission of a communication interface I-PDU.
; ..\component\PduR\Implementation\PduR_RmIf.c	   179   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   180   *  \param[in]   rmGDestRomIdx           ID of the transmitted GwIf I-PDU
; ..\component\PduR\Implementation\PduR_RmIf.c	   181   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   182   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   183   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   184   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   185  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   186  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_TxConfirmation(PduR_RmGDestRomIdxOfTxIf2UpType rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   187  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   188  
; ..\component\PduR\Implementation\PduR_RmIf.c	   189  #if(PDUR_EXISTS_TRIGGER_TRANSMIT_QUEUEDATAPROVISIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   190  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   191    PduR_RmIf_TriggerTransmit
; ..\component\PduR\Implementation\PduR_RmIf.c	   192  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   193  /*! \brief           This function returns the next Pdu from the buffer for TriggerTransmit dataprovision routings
; ..\component\PduR\Implementation\PduR_RmIf.c	   194   *  \details         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   195   *  \param[in]       rmDestIdx         ID of the GwIf I-PDU that will be transmitted.
; ..\component\PduR\Implementation\PduR_RmIf.c	   196   *  \param[in,out]   info              Payload information of the received I-PDU (pointer to data and data length).
; ..\component\PduR\Implementation\PduR_RmIf.c	   197   *  \return          Std_ReturnType    E_OK:     The SDU has been copied and the SduLength indicates
; ..\component\PduR\Implementation\PduR_RmIf.c	   198   *                                           the number of copied bytes.
; ..\component\PduR\Implementation\PduR_RmIf.c	   199   *                                     E_NOT_OK: The SDU has not been copied and the SduLength has not been set.
; ..\component\PduR\Implementation\PduR_RmIf.c	   200   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   201   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   202   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   203   *  \synchronous FALSE
; ..\component\PduR\Implementation\PduR_RmIf.c	   204   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmIf.c	   205  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   206  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_TriggerTransmit(PduR_RmDestRomIterType rmDestIdx, CONSTP2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   207  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   208  
; ..\component\PduR\Implementation\PduR_RmIf.c	   209  #if ((PDUR_EXISTS_DISCARD_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON) || (PDUR_EXISTS_SHORTEN_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   210  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   211    PduR_RmIf_CheckInfoPointer
; ..\component\PduR\Implementation\PduR_RmIf.c	   212  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   213  /*! \brief       This function checks the validity of the PduInfoType pointer.
; ..\component\PduR\Implementation\PduR_RmIf.c	   214   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   215   *  \param[in]   info              Payload information of the received I-PDU (pointer to data and data length).
; ..\component\PduR\Implementation\PduR_RmIf.c	   216   *  \param[in]   apiId             Id of the API
; ..\component\PduR\Implementation\PduR_RmIf.c	   217   *  \return      Std_ReturnType    E_OK:     Check passed
; ..\component\PduR\Implementation\PduR_RmIf.c	   218   *                                 E_NOT_OK: Null pointer detected
; ..\component\PduR\Implementation\PduR_RmIf.c	   219   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   220   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   221   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   222   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   223  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   224  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_CheckInfoPointer(P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, uint8 apiId);
; ..\component\PduR\Implementation\PduR_RmIf.c	   225  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   226  
; ..\component\PduR\Implementation\PduR_RmIf.c	   227  #if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   228  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   229    PduR_RmIf_ProcessBufferedRouting
; ..\component\PduR\Implementation\PduR_RmIf.c	   230  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   231  /*! \brief       The function is called by the PduR to process buffered If Pdus
; ..\component\PduR\Implementation\PduR_RmIf.c	   232   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   233   *  \param[in]   rmSrcIdx          Source Id.
; ..\component\PduR\Implementation\PduR_RmIf.c	   234   *  \param[in]   rmDestIdx         Destintaion Id.
; ..\component\PduR\Implementation\PduR_RmIf.c	   235   *  \param[in]   rmGDestRomIdx     G Dest Rom Table Id.
; ..\component\PduR\Implementation\PduR_RmIf.c	   236   *  \param[in]   info              Payload information of the received I-PDU (pointer to data and data length).
; ..\component\PduR\Implementation\PduR_RmIf.c	   237   *  \return      Std_ReturnType    E_OK:     The SDU has been copied and the SduLength indicates
; ..\component\PduR\Implementation\PduR_RmIf.c	   238   *                                           the number of copied bytes.
; ..\component\PduR\Implementation\PduR_RmIf.c	   239   *                                 E_NOT_OK: The SDU has not been copied and the SduLength has not been set.
; ..\component\PduR\Implementation\PduR_RmIf.c	   240   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   241   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   242   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   243   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   244  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   245  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_ProcessBufferedRouting(PduR_RmSrcRomIterType rmSrcIdx, PduR_RmDestRomIterType rmDestIdx, PduR_RmGDestRomIterType rmGDestRomIdx,
; ..\component\PduR\Implementation\PduR_RmIf.c	   246                                                                                P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   247  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   248  
; ..\component\PduR\Implementation\PduR_RmIf.c	   249  #if ((PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) || (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   250  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   251   * PduR_QAL_Put
; ..\component\PduR\Implementation\PduR_RmIf.c	   252   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   253  /*! \brief      This function writes the Pdu to the Fifo. It calls the corresponding implementation specific function.
; ..\component\PduR\Implementation\PduR_RmIf.c	   254   *  \details    -
; ..\component\PduR\Implementation\PduR_RmIf.c	   255   *  \param[in]  rmDestRomIdx         routing manager indirection Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	   256   *  \param[in]  rmGDestRomIdx        routing manager indirection Idx to global destination Pdu table.
; ..\component\PduR\Implementation\PduR_RmIf.c	   257   *  \param[in]  pduLength            length to copy.
; ..\component\PduR\Implementation\PduR_RmIf.c	   258   *  \param[in]  sduDataPtr           data pointer.
; ..\component\PduR\Implementation\PduR_RmIf.c	   259   *  \pre        -
; ..\component\PduR\Implementation\PduR_RmIf.c	   260   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   261  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_QAL_Put(PduR_RmGDestRomIterType rmGDestRomIdx, PduR_RmDestRomIterType rmDestRomIdx, PduLengthType pduLength, SduDataPtrType sduDataPtr);
; ..\component\PduR\Implementation\PduR_RmIf.c	   262  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   263  
; ..\component\PduR\Implementation\PduR_RmIf.c	   264  #if ((PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) || (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   265  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   266   * PduR_QAL_Get
; ..\component\PduR\Implementation\PduR_RmIf.c	   267   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   268  /*! \brief       Get the next element from the queue if available
; ..\component\PduR\Implementation\PduR_RmIf.c	   269   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   270   *  \param[in]   rmGDestRomIdx       global destination Pdu Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	   271   *  \param[out]  rmDestRomIdx        read destination Pdu Idx from the queue
; ..\component\PduR\Implementation\PduR_RmIf.c	   272   *  \param[out]  info                read data from the queue
; ..\component\PduR\Implementation\PduR_RmIf.c	   273   *  \return      E_OK                A Pdu could be read and will be returned via the pointers
; ..\component\PduR\Implementation\PduR_RmIf.c	   274   *               E_NOT_OK            No Pdu could be read.
; ..\component\PduR\Implementation\PduR_RmIf.c	   275   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   276   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   277   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   278   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   279   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   280  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_QAL_Get(PduR_RmGDestRomIterType rmGDestRomIdx, P2VAR(PduR_RmDestRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmIf.c	   281  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   282  
; ..\component\PduR\Implementation\PduR_RmIf.c	   283  #if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   284  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   285   * PduR_QAL_Remove
; ..\component\PduR\Implementation\PduR_RmIf.c	   286   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   287  /*! \brief       Remove the oldest element from the queue
; ..\component\PduR\Implementation\PduR_RmIf.c	   288   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   289   *  \param[in]   rmGDestRomIdx         global destination Pdu Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	   290   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   291   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   292   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   293   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   294   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   295  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_QAL_Remove(PduR_RmGDestRomIterType rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   296  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   297  
; ..\component\PduR\Implementation\PduR_RmIf.c	   298  #if ((PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) && (PDUR_DEFERREDEVENTCACHEROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   299  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   300   * PduR_QAL_GetFillLevel
; ..\component\PduR\Implementation\PduR_RmIf.c	   301   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   302  /*! \brief       Get the fill level of the queue.
; ..\component\PduR\Implementation\PduR_RmIf.c	   303   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   304   *  \param[in]   rmGDestRomIdx       global destination Pdu Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	   305   *  \return                          Fill level of the queue
; ..\component\PduR\Implementation\PduR_RmIf.c	   306   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   307   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   308   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   309   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   310   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   311  LOCAL_INLINE FUNC(uint16, PDUR_CODE) PduR_QAL_GetFillLevel(PduR_RmGDestRomIterType rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   312  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   313  
; ..\component\PduR\Implementation\PduR_RmIf.c	   314  # if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   315  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   316   * PduR_QAL_Flush
; ..\component\PduR\Implementation\PduR_RmIf.c	   317   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   318  /*! \brief       This function flushes the FIFO queue.
; ..\component\PduR\Implementation\PduR_RmIf.c	   319   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   320   *  \param[in]   rmGDestRomIdx  routing manager indirection Idx.
; ..\component\PduR\Implementation\PduR_RmIf.c	   321   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   322   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   323   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   324   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   325   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   326  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_QAL_Flush(PduR_RmGDestRomIterType rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   327  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   328  
; ..\component\PduR\Implementation\PduR_RmIf.c	   329  #if (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   330  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   331   * PduR_RmIf_GetActualLengthOfSingleBufferRamSafe
; ..\component\PduR\Implementation\PduR_RmIf.c	   332   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   333   /*! \brief      Get the actual length of single buffer without worrying the length exceeds the buffer size
; ..\component\PduR\Implementation\PduR_RmIf.c	   334   *  \details     -
; ..\component\PduR\Implementation\PduR_RmIf.c	   335   *  \param[in]   singleBufferRomIdx            id of the interface FIFO queue
; ..\component\PduR\Implementation\PduR_RmIf.c	   336   *  \param[in]   memIdx                        memory section index
; ..\component\PduR\Implementation\PduR_RmIf.c	   337   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmIf.c	   338   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmIf.c	   339   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   340   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmIf.c	   341   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   342  LOCAL_INLINE FUNC(PduR_ActualLengthOfSingleBufferRamType, PDUR_CODE) PduR_RmIf_GetActualLengthOfSingleBufferRamSafe(PduR_SingleBufferRomIdxOfRmBufferedIfPropertiesRomType singleBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   343  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   344  
; ..\component\PduR\Implementation\PduR_RmIf.c	   345  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   346   *  LOCAL FUNCTIONS
; ..\component\PduR\Implementation\PduR_RmIf.c	   347   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   348  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   349   * PduR_RmIf_SingleBuffer_Init
; ..\component\PduR\Implementation\PduR_RmIf.c	   350   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   351  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   352   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   353   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   354   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   355   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   356  #if (PDUR_EXISTS_SINGLE_BUFFER_QUEUE_IMPLEMENTATIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   357  FUNC(void, PDUR_CODE) PduR_RmIf_SingleBuffer_Init(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	   358  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   359    PduR_SingleBufferRomIterType singleBufferRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   360  
; ..\component\PduR\Implementation\PduR_RmIf.c	   361    for(singleBufferRomIdx = 0u; singleBufferRomIdx < PduR_GetSizeOfSingleBufferRom(memIdx); singleBufferRomIdx++)
; ..\component\PduR\Implementation\PduR_RmIf.c	   362    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   363      PduR_SingleBufferArrayRamLengthOfSingleBufferRomType singleBufferArrayRamLengthOfSingleBufferRom = PduR_GetSingleBufferArrayRamLengthOfSingleBufferRom(singleBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   364  
; ..\component\PduR\Implementation\PduR_RmIf.c	   365      PduR_Core_MemCpyRomToRam(PduR_GetAddrSingleBufferArrayRam(PduR_GetSingleBufferArrayRamStartIdxOfSingleBufferRom(singleBufferRomIdx, memIdx), memIdx), /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */ /* SBSW_PDUR_MEM_CPY_FIFOMGR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   366                                                                PduR_GetAddrSingleBufferInitValuesRom(PduR_GetSingleBufferInitValuesRomStartIdxOfSingleBufferRom(singleBufferRomIdx, memIdx), memIdx),
; ..\component\PduR\Implementation\PduR_RmIf.c	   367                                                                singleBufferArrayRamLengthOfSingleBufferRom);
; ..\component\PduR\Implementation\PduR_RmIf.c	   368  
; ..\component\PduR\Implementation\PduR_RmIf.c	   369      PduR_SetActualLengthOfSingleBufferRam(singleBufferRomIdx, (PduR_ActualLengthOfSingleBufferRamType) singleBufferArrayRamLengthOfSingleBufferRom, memIdx); /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   370    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   371  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   372  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   373  
; ..\component\PduR\Implementation\PduR_RmIf.c	   374  #if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   375  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   376   * PduR_RmIf_InitDestPduState
; ..\component\PduR\Implementation\PduR_RmIf.c	   377  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   378  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   379   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   380   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   381   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   382   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   383  FUNC(void, PDUR_CODE) PduR_RmIf_InitDestPduState(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	   384  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   385    PduR_RmBufferedIfPropertiesRomIterType rmBufferedIfPropertiesRamIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   386    for(rmBufferedIfPropertiesRamIdx = 0u; rmBufferedIfPropertiesRamIdx < PduR_GetSizeOfRmBufferedIfPropertiesRam(memIdx); rmBufferedIfPropertiesRamIdx++)
; ..\component\PduR\Implementation\PduR_RmIf.c	   387    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   388  # if (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   389      if(PduR_IsSingleBufferRomUsedOfRmBufferedIfPropertiesRom(rmBufferedIfPropertiesRamIdx, memIdx)) /* COV_PDUR_ONLY_TT_SINGLE_BUFFER */ /* PRQA S 2991, 2995 */ /* MD_PduR_2991, MD_PduR_2995_2996 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   390      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   391        PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(rmBufferedIfPropertiesRamIdx, PDUR_RM_TX_ACTIVE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);    /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   392      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   393  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   394  # if ((PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) && (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   395      else
; ..\component\PduR\Implementation\PduR_RmIf.c	   396  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   397  # if(PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   398      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   399        PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(rmBufferedIfPropertiesRamIdx, PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);    /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   400      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   401  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   402    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   403  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   404  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   405  
; ..\component\PduR\Implementation\PduR_RmIf.c	   406  #if((PDUR_EXISTS_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_IF_NOBUFFER_GATEWAY_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   407  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   408   * PduR_RmIf_MultipleSourceHandler_Transmit
; ..\component\PduR\Implementation\PduR_RmIf.c	   409   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   410  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   411   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   412   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   413   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   414   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   415   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   416   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   417   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   418   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   419   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   420   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   421   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   422  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_MultipleSourceHandler_Transmit(PduR_RmDestRomIterType rmDestRomIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, boolean useLock)
; Function PduR_RmIf_MultipleSourceHandler_Transmit
.L18:
PduR_RmIf_MultipleSourceHandler_Transmit:	.type	func
	mov	d8,d4
	mov.aa	a12,a4
.L115:

; ..\component\PduR\Implementation\PduR_RmIf.c	   423  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   424    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	   425    PduR_Lock_LockRoutingPathByDestPdu(rmDestRomIdx);
	call	PduR_Lock_LockRoutingPathByDestPdu
.L109:

; ..\component\PduR\Implementation\PduR_RmIf.c	   426    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   427      PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
	fcall	.cocofun_3
.L112:
	addsc.a	a15,a15,d8,#2
	ld.bu	d15,[a15]1
.L113:

; ..\component\PduR\Implementation\PduR_RmIf.c	   428  
; ..\component\PduR\Implementation\PduR_RmIf.c	   429  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   430      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   431  
; ..\component\PduR\Implementation\PduR_RmIf.c	   432      if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	   433      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   434        PduR_RmGDestNto1InfoRamIdxOfRmGDestRomType rmGDestNto1InfoIdx = PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   435  
; ..\component\PduR\Implementation\PduR_RmIf.c	   436        if(!PduR_IsTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, memIdx))    /* COV_PDUR_NTO1_GW_ONLY_ROUTINGPATHS */
; ..\component\PduR\Implementation\PduR_RmIf.c	   437        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   438          PduR_SetRmDestRomIdxOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, (PduR_RmDestRomIdxOfRmGDestNto1InfoRamType) rmDestRomIdx, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   439          PduR_SetTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, useLock, memIdx);    /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   440  
; ..\component\PduR\Implementation\PduR_RmIf.c	   441  #  if (PDUR_BSWMPDURPRETRANSMITCALLBACKOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   442          PduR_CallPreTransmitCallout(rmDestRomIdx, info);  /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   443  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   444          retVal = PduR_GetLoIfTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info);     /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   445          if(retVal != E_OK)
; ..\component\PduR\Implementation\PduR_RmIf.c	   446          {
; ..\component\PduR\Implementation\PduR_RmIf.c	   447            PduR_Rm_MultipleSourceHandler_Reset(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   448          }
; ..\component\PduR\Implementation\PduR_RmIf.c	   449        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   450      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   451      else
; ..\component\PduR\Implementation\PduR_RmIf.c	   452  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   453      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   454  # if (PDUR_BSWMPDURPRETRANSMITCALLBACKOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   455        PduR_CallPreTransmitCallout(rmDestRomIdx, info);  /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   456  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   457        retVal = PduR_GetLoIfTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info);       /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
	mul	d15,d15,#6
	fcall	.cocofun_1
.L114:
	ld.a	a15,[a15]12
.L171:
	ld.bu	d4,[a2]
.L172:
	mov.aa	a4,a12
.L116:
	calli	a15
.L117:
	mov	d15,d2
.L110:

; ..\component\PduR\Implementation\PduR_RmIf.c	   458      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   459    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   460    PduR_Lock_UnlockRoutingPathByDestPdu(rmDestRomIdx);
	mov	d4,d8
	call	PduR_Lock_UnlockRoutingPathByDestPdu
.L118:

; ..\component\PduR\Implementation\PduR_RmIf.c	   461  
; ..\component\PduR\Implementation\PduR_RmIf.c	   462    PDUR_DUMMY_STATEMENT(useLock);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */
; ..\component\PduR\Implementation\PduR_RmIf.c	   463    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	   464  }
	mov	d2,d15
	ret
.L103:
	
__PduR_RmIf_MultipleSourceHandler_Transmit_function_end:
	.size	PduR_RmIf_MultipleSourceHandler_Transmit,__PduR_RmIf_MultipleSourceHandler_Transmit_function_end-PduR_RmIf_MultipleSourceHandler_Transmit
.L61:
	; End of function
	
	.sdecl	'.text.PduR_RmIf..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.PduR_RmIf..cocofun_3'
	.align	2
; Function .cocofun_3
.L20:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:1
	movh.a	a15,#@his(PduR_RmDestRom)
.L128:
	lea	a15,[a15]@los(PduR_RmDestRom)
.L189:
	fret
.L76:
	; End of function
	.sdecl	'.text.PduR_RmIf..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.PduR_RmIf..cocofun_1'
	.align	2
; Function .cocofun_1
.L22:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	movh.a	a15,#@his(PduR_RmGDestRom)
	lea	a15,[a15]@los(PduR_RmGDestRom)
	addsc.a	a2,a15,d15,#0
.L177:
	movh.a	a15,#@his(PduR_MmRom)
	ld.bu	d15,[a2]3
	lea	a15,[a15]@los(PduR_MmRom)
	sha	d15,#4
	addsc.a	a15,a15,d15,#0
.L178:
	fret
.L66:
	; End of function
	.sdecl	'.text.PduR_RmIf.PduR_RmIf_MultipleSourceHandler_TxConfirmation',code,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.text.PduR_RmIf.PduR_RmIf_MultipleSourceHandler_TxConfirmation'
	.align	2
	
	.global	PduR_RmIf_MultipleSourceHandler_TxConfirmation

; ..\component\PduR\Implementation\PduR_RmIf.c	   465  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   466  
; ..\component\PduR\Implementation\PduR_RmIf.c	   467  #if ((PDUR_TRIGGERTRANSMITSUPPORTEDOFRMSRCROM == STD_ON) || (PDUR_EXISTS_TRIGGER_TRANSMIT_QUEUEDATAPROVISIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   468  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   469   * PduR_RmIf_MultipleSourceHandler_TriggerTransmit
; ..\component\PduR\Implementation\PduR_RmIf.c	   470   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   471  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   472   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   473   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   474   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   475   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   476   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   477   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   478   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   479   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   480   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   481   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   482   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   483   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   484  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_MultipleSourceHandler_TriggerTransmit(PduR_RmGDestRomIdxOfTxIf2UpType rmGDestRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	   485  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   486    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	   487    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   488      PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   489  
; ..\component\PduR\Implementation\PduR_RmIf.c	   490      if(PduR_Rm_GetSrcDestPdu(rmGDestRomIdx, &rmDestRomIdx) == E_OK)     /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_NO_NTO1_ROUTINGPATHS */
; ..\component\PduR\Implementation\PduR_RmIf.c	   491      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   492  # if (PDUR_EXISTS_TRIGGER_TRANSMIT_QUEUEDATAPROVISIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   493        if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM)       /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   494        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   495          retVal = PduR_RmIf_TriggerTransmit(rmDestRomIdx, info); /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   496        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   497        else
; ..\component\PduR\Implementation\PduR_RmIf.c	   498  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   499  # if (PDUR_TRIGGERTRANSMITSUPPORTEDOFRMSRCROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   500        if(PduR_IsTriggerTransmitSupportedOfRmSrcRom(PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx)))       /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   501        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   502          retVal = PduR_GetUpIfTriggerTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx))) (PduR_GetSrcHndOfRmSrcRom(PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx)), info);     /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   503        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   504        else
; ..\component\PduR\Implementation\PduR_RmIf.c	   505  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   506        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   507          PduR_Det_ReportError(PDUR_RMIF_MULTIPLESOURCEHANDLER_TRIGGERTRANSMIT, PDUR_E_PDU_ID_INVALID);
; ..\component\PduR\Implementation\PduR_RmIf.c	   508        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   509      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   510      else
; ..\component\PduR\Implementation\PduR_RmIf.c	   511      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   512        PduR_Det_ReportError(PDUR_RMIF_MULTIPLESOURCEHANDLER_TRIGGERTRANSMIT, PDUR_E_PDU_ID_INVALID);
; ..\component\PduR\Implementation\PduR_RmIf.c	   513      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   514    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   515    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	   516  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   517  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   518  
; ..\component\PduR\Implementation\PduR_RmIf.c	   519  #if ((PDUR_IFCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON) && (PDUR_EXISTS_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   520  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   521   * PduR_RmIf_MultipleSourceHandler_CancelTransmit
; ..\component\PduR\Implementation\PduR_RmIf.c	   522   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   523  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   524   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   525   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   526   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   527   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   528   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   529   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   530   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   531   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   532   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   533   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   534  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_MultipleSourceHandler_CancelTransmit(PduR_RmDestRomIterType rmDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	   535  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   536    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	   537    PduR_Lock_LockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   538    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   539      PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   540  
; ..\component\PduR\Implementation\PduR_RmIf.c	   541  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   542      if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	   543      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   544        PduR_RmDestRomIterType lastTxdRmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   545        Std_ReturnType foundSrcPdu = PduR_Rm_GetSrcDestPdu(rmGDestRomIdx, &lastTxdRmDestRomIdx);  /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmIf.c	   546        PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   547  
; ..\component\PduR\Implementation\PduR_RmIf.c	   548        if(PduR_IsTransmissionActiveOfRmGDestNto1InfoRam(PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx), memIdx) && (foundSrcPdu == E_OK) && (rmDestRomIdx == lastTxdRmDestRomIdx))   /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmIf.c	   549        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   550          retVal = PduR_GetLoIfCancelTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx));     /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   551        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   552        else
; ..\component\PduR\Implementation\PduR_RmIf.c	   553        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   554          PduR_Det_ReportError(PDUR_RMIF_MULTIPLESOURCEHANDLER_CANCELTRANSMIT, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmIf.c	   555        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   556      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   557      else
; ..\component\PduR\Implementation\PduR_RmIf.c	   558  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   559      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   560        retVal = PduR_GetLoIfCancelTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx));       /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   561      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   562    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   563    PduR_Lock_UnlockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   564    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	   565  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   566  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   567  
; ..\component\PduR\Implementation\PduR_RmIf.c	   568  #if (PDUR_TXCONFIRMATIONUSEDOFTXIF2UP == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   569  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   570   * PduR_RmIf_MultipleSourceHandler_TxConfirmation
; ..\component\PduR\Implementation\PduR_RmIf.c	   571   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   572  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   573   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   574   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   575   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   576   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   577   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   578   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   579   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   580   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   581   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   582   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   583  FUNC(void, PDUR_CODE) PduR_RmIf_MultipleSourceHandler_TxConfirmation(PduR_RmGDestRomIdxOfTxIf2UpType rmGDestRomIdx)
; Function PduR_RmIf_MultipleSourceHandler_TxConfirmation
.L24:
PduR_RmIf_MultipleSourceHandler_TxConfirmation:	.type	func
	sub.a	a10,#8
.L119:

; ..\component\PduR\Implementation\PduR_RmIf.c	   584  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   585    PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   586  
; ..\component\PduR\Implementation\PduR_RmIf.c	   587    /* #10 Get RmDest index of GDestPdu. If index is ambiguous, call DET */
; ..\component\PduR\Implementation\PduR_RmIf.c	   588    if(PduR_Rm_GetSrcDestPdu(rmGDestRomIdx, &rmDestRomIdx) == E_OK)       /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_NO_NTO1_ROUTINGPATHS */
	mov	d8,d4
	mov.aa	a4,a10
.L121:
	call	PduR_Rm_GetSrcDestPdu
.L120:
	jne	d2,#0,.L3
.L96:

; ..\component\PduR\Implementation\PduR_RmIf.c	   589    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   590  # if (PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   591      /* #20 Reset RAM variables which hold the N:1 routing information */
; ..\component\PduR\Implementation\PduR_RmIf.c	   592      PduR_Rm_MultipleSourceHandler_Reset(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   593  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   594  # if ((PDUR_TXCONFIRMATIONSUPPORTEDOFRMSRCROM == STD_ON) && ((PDUR_EXISTS_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON) || ((PDUR_EXISTS_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON) && (PDUR_MCQBUFFERROM == STD_ON))))
; ..\component\PduR\Implementation\PduR_RmIf.c	   595      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   596        PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx);
	ld.bu	d15,[a10]
	fcall	.cocofun_3
	addsc.a	a15,a15,d15,#2
	ld.bu	d15,[a15]2
.L122:

; ..\component\PduR\Implementation\PduR_RmIf.c	   597  
; ..\component\PduR\Implementation\PduR_RmIf.c	   598        /* #30 If upper layer requires a Tx Confirmation */
; ..\component\PduR\Implementation\PduR_RmIf.c	   599        if(PduR_IsTxConfirmationSupportedOfRmSrcRom(rmSrcRomIdx)) /* COV_PDUR_FEATURE_ALWAYS_TRUE */
	movh.a	a15,#@his(PduR_RmSrcRom)
	lea	a15,[a15]@los(PduR_RmSrcRom)
	addsc.a	a2,a15,d15,#2
	ld.bu	d15,[a2]
.L123:
	jne	d15,#1,.L4
.L157:

; ..\component\PduR\Implementation\PduR_RmIf.c	   600        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   601          switch (PduR_GetPduRDestPduProcessingOfRmGDestRom(rmGDestRomIdx))
	mul	d15,d8,#6
	movh.a	a15,#@his(PduR_RmGDestRom)
	lea	a15,[a15]@los(PduR_RmGDestRom)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]4
	add	d15,#1
	extr.u	d15,d15,#0,#8
.L158:
	jne	d15,#1,.L5
.L159:

; ..\component\PduR\Implementation\PduR_RmIf.c	   602          {
; ..\component\PduR\Implementation\PduR_RmIf.c	   603  #  if (PDUR_EXISTS_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   604              /* #40 If Processing type is immediate, call upper layer IF confirmation */
; ..\component\PduR\Implementation\PduR_RmIf.c	   605            case PDUR_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM:       /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	   606              PduR_GetUpIfTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcRomIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcRomIdx));   /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
	movh.a	a15,#@his(PduR_MmRom+24)
	ld.a	a15,[a15]@los(PduR_MmRom+24)
.L160:
	ld.bu	d4,[a2]3
	ji	a15
.L3:

; ..\component\PduR\Implementation\PduR_RmIf.c	   607              break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   608  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   609  #  if ((PDUR_EXISTS_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON) && (PDUR_MCQBUFFERROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	   610              /* #50 Otherwise if processing is of type DEFERRED and routing type is not IF-buffered */
; ..\component\PduR\Implementation\PduR_RmIf.c	   611            case PDUR_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	   612  #   if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   613              if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) != PDUR_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM)
; ..\component\PduR\Implementation\PduR_RmIf.c	   614  #   endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   615              {
; ..\component\PduR\Implementation\PduR_RmIf.c	   616                /* Destination application in this context is the application of the SrcPdu */
; ..\component\PduR\Implementation\PduR_RmIf.c	   617                PduR_DestApplicationManagerRomIdxOfMmRomType destApplicationIdx = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx)));
; ..\component\PduR\Implementation\PduR_RmIf.c	   618                PduR_DestApplicationManagerRomIdxOfMmRomType srcApplicationIdx = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx));
; ..\component\PduR\Implementation\PduR_RmIf.c	   619                PduR_SrcApplicationRomIterType dest2srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationIdx) + (PduR_SrcApplicationRomIterType) srcApplicationIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   620  
; ..\component\PduR\Implementation\PduR_RmIf.c	   621                /* #60 Write Tx Confirmation into multicore queue if queue is not full, otherwise call DET */
; ..\component\PduR\Implementation\PduR_RmIf.c	   622                if(PduR_McQ_WriteTxConfirmation(PduR_GetMcQBufferRomIdxOfSrcApplicationRom(dest2srcApplicationRomIdx), rmSrcRomIdx, PduR_GetPartitionIndexOfCslOfSrcApplicationRom(dest2srcApplicationRomIdx)) == E_NOT_OK)
; ..\component\PduR\Implementation\PduR_RmIf.c	   623                {
; ..\component\PduR\Implementation\PduR_RmIf.c	   624                  PduR_Det_ReportError(PDUR_FCT_RMIF_TXCONF, PDUR_E_MCQ_QUEUE_OVERFLOW);
; ..\component\PduR\Implementation\PduR_RmIf.c	   625                }
; ..\component\PduR\Implementation\PduR_RmIf.c	   626              }
; ..\component\PduR\Implementation\PduR_RmIf.c	   627              break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   628  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   629            default:     /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	   630              /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	   631              break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   632          }
; ..\component\PduR\Implementation\PduR_RmIf.c	   633        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   634      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   635  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   636  
; ..\component\PduR\Implementation\PduR_RmIf.c	   637  # if(PDUR_HASIFTXFIFOOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   638      /* #70 If Routing Type is IF-Buffered, indicate the complete transmission */
; ..\component\PduR\Implementation\PduR_RmIf.c	   639      if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM) /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR_RmIf.c	   640      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   641        PduR_RmIf_TxConfirmation(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   642      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   643  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   644    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   645    else
; ..\component\PduR\Implementation\PduR_RmIf.c	   646    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   647      PduR_Det_ReportError(PDUR_RMIF_MULTIPLESOURCEHANDLER_TXCONFIRMATION, PDUR_E_PDU_ID_INVALID);
	mov	d4,#51
	mov	d5,#0
	mov	d6,#211
	mov	d7,#2
	j	Det_ReportError
.L5:
.L4:

; ..\component\PduR\Implementation\PduR_RmIf.c	   648    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   649  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
	ret
.L93:
	
__PduR_RmIf_MultipleSourceHandler_TxConfirmation_function_end:
	.size	PduR_RmIf_MultipleSourceHandler_TxConfirmation,__PduR_RmIf_MultipleSourceHandler_TxConfirmation_function_end-PduR_RmIf_MultipleSourceHandler_TxConfirmation
.L51:
	; End of function
	
	.sdecl	'.text.PduR_RmIf.PduR_RmIf_RoutePdu',code,cluster('PduR_RmIf_RoutePdu')
	.sect	'.text.PduR_RmIf.PduR_RmIf_RoutePdu'
	.align	2
	
	.global	PduR_RmIf_RoutePdu

; ..\component\PduR\Implementation\PduR_RmIf.c	   650  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   651  
; ..\component\PduR\Implementation\PduR_RmIf.c	   652  #if(PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   653  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   654   * PduR_RmIf_SingleBufferHandling
; ..\component\PduR\Implementation\PduR_RmIf.c	   655   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   656  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   657   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   658   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   659   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   660   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   661   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   662   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   663   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   664   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   665  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_SingleBufferHandling(PduR_RmDestRomIterType rmDest, PduR_RmGDestRomIdxOfRmDestRomType rmGDest, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	   666  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   667    (void) PduR_QAL_Put(rmGDest, rmDest, info->SduLength, info->SduDataPtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   668  
; ..\component\PduR\Implementation\PduR_RmIf.c	   669    switch (PduR_GetPduRDestPduProcessingOfRmGDestRom(rmGDest))
; ..\component\PduR\Implementation\PduR_RmIf.c	   670    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   671  # if (PDUR_EXISTS_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   672      case PDUR_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM: /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	   673      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   674        PduInfoType queuedPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	   675        PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   676  
; ..\component\PduR\Implementation\PduR_RmIf.c	   677        if(PduR_QAL_Get(rmGDest, &rmDestRomIdx, &queuedPduInfo) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   678        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   679          if(E_OK != PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, &queuedPduInfo, FALSE))    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   680          {
; ..\component\PduR\Implementation\PduR_RmIf.c	   681            PduR_Det_ReportError(PDUR_RMIF_SINGLEBUFFERHANDLING, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	   682          }
; ..\component\PduR\Implementation\PduR_RmIf.c	   683        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   684        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   685      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   686  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   687  # if (PDUR_EXISTS_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   688      case PDUR_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	   689      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   690        PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   691  
; ..\component\PduR\Implementation\PduR_RmIf.c	   692        /* Set this state to idle so it gets triggered in the mainfunction */
; ..\component\PduR\Implementation\PduR_RmIf.c	   693        PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDest), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   694  #  if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   695        PduR_EvC_WriteDeferredEventCache(rmDest, rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   696  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   697        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   698      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   699  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   700      default:       /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	   701        /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	   702        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   703    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   704  
; ..\component\PduR\Implementation\PduR_RmIf.c	   705    PDUR_DUMMY_STATEMENT(rmDest);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	   706  }       /* PRQA S 6050 */ /* MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR_RmIf.c	   707  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   708  
; ..\component\PduR\Implementation\PduR_RmIf.c	   709  #if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   710  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   711   * PduR_RmIf_FifoHandling
; ..\component\PduR\Implementation\PduR_RmIf.c	   712   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   713  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   714   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   715   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   716   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   717   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   718   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   719   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   720   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   721   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   722   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   723   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   724  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_FifoHandling(PduR_RmDestRomIterType rmDest, PduR_RmGDestRomIdxOfRmDestRomType rmGDest, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	   725  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   726    boolean triggerTransmission = TRUE;
; ..\component\PduR\Implementation\PduR_RmIf.c	   727    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   728  
; ..\component\PduR\Implementation\PduR_RmIf.c	   729    if(PduR_QAL_Put(rmGDest, rmDest, info->SduLength, info->SduDataPtr) != E_OK) /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmIf.c	   730    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   731      PduR_QAL_Flush(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   732      PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDest), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   733      PduR_Det_ReportError(PDUR_FCT_RMIF_FQ, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	   734  
; ..\component\PduR\Implementation\PduR_RmIf.c	   735  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   736      PduR_Rm_MultipleSourceHandler_Reset(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   737  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   738  
; ..\component\PduR\Implementation\PduR_RmIf.c	   739  # if (PDUR_ERROR_NOTIFICATION == STD_ON)        /* COV_PDUR_ERROR_NOTIFICATION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   740      ErrorNotificationQueueOverflow(PduR_GetDestHndOfRmGDestRom(rmGDest));
; ..\component\PduR\Implementation\PduR_RmIf.c	   741  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   742  
; ..\component\PduR\Implementation\PduR_RmIf.c	   743      if(PduR_QAL_Put(rmGDest, rmDest, info->SduLength, info->SduDataPtr) != E_OK)       /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   744      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   745        triggerTransmission = FALSE;
; ..\component\PduR\Implementation\PduR_RmIf.c	   746      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   747    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   748  
; ..\component\PduR\Implementation\PduR_RmIf.c	   749    if((triggerTransmission == TRUE) && (PduR_GetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDest), memIdx) == PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM)) /* COV_PDUR_ONLY_DIRECT_BUFFER */
; ..\component\PduR\Implementation\PduR_RmIf.c	   750    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   751      switch (PduR_GetPduRDestPduProcessingOfRmGDestRom(rmGDest))
; ..\component\PduR\Implementation\PduR_RmIf.c	   752      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   753  # if (PDUR_EXISTS_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   754        case PDUR_IMMEDIATE_PDURDESTPDUPROCESSINGOFRMGDESTROM: /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	   755        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   756          PduInfoType destPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	   757          PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   758          PduR_RmBufferedIfPropertiesRomIdxOfRmGDestRomType rmBufferedIfPropertiesRomIdx = PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   759  
; ..\component\PduR\Implementation\PduR_RmIf.c	   760          if(PduR_QAL_Get(rmGDest, &rmDestRomIdx, &destPduInfo) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   761          {
; ..\component\PduR\Implementation\PduR_RmIf.c	   762            if(E_OK != PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, &destPduInfo, TRUE))    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   763            {
; ..\component\PduR\Implementation\PduR_RmIf.c	   764              PduR_QAL_Flush(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   765              PduR_Det_ReportError(PDUR_FCT_RMIF_FQ, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	   766            }
; ..\component\PduR\Implementation\PduR_RmIf.c	   767            else
; ..\component\PduR\Implementation\PduR_RmIf.c	   768            {
; ..\component\PduR\Implementation\PduR_RmIf.c	   769              PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(rmBufferedIfPropertiesRomIdx, PDUR_RM_TX_ACTIVE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   770            }
; ..\component\PduR\Implementation\PduR_RmIf.c	   771          }
; ..\component\PduR\Implementation\PduR_RmIf.c	   772          break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   773        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   774  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   775  # if (PDUR_EXISTS_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   776        case PDUR_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	   777        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   778  #  if (PDUR_DEFERREDEVENTCACHEROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   779          if(PduR_QAL_GetFillLevel(rmGDest) == 1u)
; ..\component\PduR\Implementation\PduR_RmIf.c	   780          {/* Only trigger the Pdu once for the first queued element on the destination core */
; ..\component\PduR\Implementation\PduR_RmIf.c	   781            PduR_EvC_WriteDeferredEventCache(rmDest, rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   782          }
; ..\component\PduR\Implementation\PduR_RmIf.c	   783  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   784          break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   785        }
; ..\component\PduR\Implementation\PduR_RmIf.c	   786  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   787        default:       /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	   788          /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	   789          break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   790      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   791    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   792  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   793  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   794  
; ..\component\PduR\Implementation\PduR_RmIf.c	   795  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   796   * PduR_RmIf_SingleBuffer_Put
; ..\component\PduR\Implementation\PduR_RmIf.c	   797   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   798  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   799   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   800   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   801   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   802   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   803  #if (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   804  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_SingleBuffer_Put(PduR_RmGDestRomIterType rmGDestRomIdx, PduR_RmDestRomIterType rmDestRomIdx, PduLengthType pduLength, SduDataPtrType sduDataPtr)  /* PRQA S 3673 */ /* MD_MSR_Rule8.13 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   805  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   806    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   807    PduR_SingleBufferRomIdxOfRmBufferedIfPropertiesRomType singleBufferRomIdx = PduR_GetSingleBufferRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   808  
; ..\component\PduR\Implementation\PduR_RmIf.c	   809    PduR_Core_MemCpyRamToRam(PduR_GetAddrSingleBufferArrayRam(PduR_GetSingleBufferArrayRamStartIdxOfSingleBufferRom(singleBufferRomIdx, memIdx), memIdx), sduDataPtr, pduLength);   /* PRQA S 0315, 3673 */ /* MD_MSR_VStdLibCopy, MD_MSR_Rule8.13 */ /* SBSW_PDUR_MEM_CPY_FIFOMGR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   810    PduR_SetActualLengthOfSingleBufferRam(singleBufferRomIdx, pduLength, memIdx);    /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   811  
; ..\component\PduR\Implementation\PduR_RmIf.c	   812    PDUR_DUMMY_STATEMENT(rmDestRomIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	   813    return E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	   814  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   815  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   816  
; ..\component\PduR\Implementation\PduR_RmIf.c	   817  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   818   * PduR_RmIf_SingleBuffer_Get
; ..\component\PduR\Implementation\PduR_RmIf.c	   819   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   820  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   821   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   822   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   823   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   824   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   825  #if (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   826  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_SingleBuffer_Get(PduR_RmGDestRomIterType rmGDestRomIdx, P2VAR(PduR_RmDestRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	   827  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   828    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   829    PduR_SingleBufferRomIdxOfRmBufferedIfPropertiesRomType singleBufferRomIdx = PduR_GetSingleBufferRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   830  
; ..\component\PduR\Implementation\PduR_RmIf.c	   831    info->SduDataPtr = PduR_GetAddrSingleBufferArrayRam(PduR_GetSingleBufferArrayRamStartIdxOfSingleBufferRom(singleBufferRomIdx, memIdx), memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   832    info->SduLength = PduR_RmIf_GetActualLengthOfSingleBufferRamSafe(singleBufferRomIdx, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   833    *rmDestRomIdx = PduR_GetRmDestRomIdxOfSingleBufferRom(singleBufferRomIdx, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   834    return E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	   835  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   836  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   837  
; ..\component\PduR\Implementation\PduR_RmIf.c	   838  #if (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   839  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   840   * PduR_RmIf_GetActualLengthOfSingleBufferRamSafe
; ..\component\PduR\Implementation\PduR_RmIf.c	   841   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   842  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   843   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   844   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   845   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   846   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   847  LOCAL_INLINE FUNC(PduR_ActualLengthOfSingleBufferRamType, PDUR_CODE) PduR_RmIf_GetActualLengthOfSingleBufferRamSafe(PduR_SingleBufferRomIdxOfRmBufferedIfPropertiesRomType singleBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	   848  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   849    PduR_ActualLengthOfSingleBufferRamType actualLengthOfSingleBuffer = PduR_GetActualLengthOfSingleBufferRam(singleBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   850  
; ..\component\PduR\Implementation\PduR_RmIf.c	   851  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   852    PduR_SingleBufferArrayRamLengthOfSingleBufferRomType singleBufferArrayLength = PduR_GetSingleBufferArrayRamLengthOfSingleBufferRom(singleBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   853  
; ..\component\PduR\Implementation\PduR_RmIf.c	   854    if(actualLengthOfSingleBuffer > singleBufferArrayLength) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_RmIf.c	   855    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   856      actualLengthOfSingleBuffer = singleBufferArrayLength;
; ..\component\PduR\Implementation\PduR_RmIf.c	   857      PduR_ReportRuntimeDetError(PDUR_FCT_GETSINGLEBUFFERLENGTH, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_RmIf.c	   858    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   859  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   860  
; ..\component\PduR\Implementation\PduR_RmIf.c	   861    return actualLengthOfSingleBuffer;
; ..\component\PduR\Implementation\PduR_RmIf.c	   862  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   863  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   864  
; ..\component\PduR\Implementation\PduR_RmIf.c	   865  #if(PDUR_EXISTS_IF_NOBUFFER_GATEWAY_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   866  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   867   * PduR_RmIf_RxIndicationNoBuffer
; ..\component\PduR\Implementation\PduR_RmIf.c	   868   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   869  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   870   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   871   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   872   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   873   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   874  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_RxIndicationNoBuffer(PduR_RmDestRomIterType rmDestIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	   875  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   876    PduR_Lock_LockRoutingPathByDestPdu(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   877    if(E_OK != PduR_RmIf_MultipleSourceHandler_Transmit(rmDestIdx, info, FALSE))  /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	   878    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   879      PduR_Det_ReportError(PDUR_FCT_RMIF_FQ, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	   880    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   881    PduR_Lock_UnlockRoutingPathByDestPdu(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   882  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   883  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   884  
; ..\component\PduR\Implementation\PduR_RmIf.c	   885  #if(PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   886  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   887   * PduR_RmIf_Forward2Buffer
; ..\component\PduR\Implementation\PduR_RmIf.c	   888   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   889  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   890   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   891   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   892   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   893   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   894  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_Forward2Buffer(PduR_RmDestRomIterType rmDestIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	   895  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   896    PduR_RmGDestRomIdxOfRmDestRomType rmGDest = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   897    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	   898    PduR_Lock_LockRoutingPathByDestPdu(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   899  
; ..\component\PduR\Implementation\PduR_RmIf.c	   900    switch (PduR_GetQueueTypeOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx)), memIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	   901    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   902  # if(PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   903      case PDUR_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	   904        PduR_RmIf_SingleBufferHandling(rmDestIdx, rmGDest, info);       /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmIf.c	   905        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   906  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   907  # if(PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   908      case PDUR_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	   909        PduR_RmIf_FifoHandling(rmDestIdx, rmGDest, info);     /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmIf.c	   910        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   911  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   912      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	   913        /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	   914        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	   915    }
; ..\component\PduR\Implementation\PduR_RmIf.c	   916  
; ..\component\PduR\Implementation\PduR_RmIf.c	   917    PduR_Lock_UnlockRoutingPathByDestPdu(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   918    PDUR_DUMMY_STATEMENT(memIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	   919  }
; ..\component\PduR\Implementation\PduR_RmIf.c	   920  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   921  
; ..\component\PduR\Implementation\PduR_RmIf.c	   922  #if(PDUR_HASIFROUTINGOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   923  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	   924   * PduR_RmIf_RoutePdu
; ..\component\PduR\Implementation\PduR_RmIf.c	   925   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   926  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	   927   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	   928   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   929   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   930   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   931   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   932   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   933   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   934   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   935   *
; ..\component\PduR\Implementation\PduR_RmIf.c	   936   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	   937  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_RoutePdu(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; Function PduR_RmIf_RoutePdu
.L26:
PduR_RmIf_RoutePdu:	.type	func

; ..\component\PduR\Implementation\PduR_RmIf.c	   938  {
; ..\component\PduR\Implementation\PduR_RmIf.c	   939    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmIf.c	   940    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	   941  
; ..\component\PduR\Implementation\PduR_RmIf.c	   942    {
; ..\component\PduR\Implementation\PduR_RmIf.c	   943      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmIf.c	   944      PduR_RmDestRomIterType rmDestIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   945  
; ..\component\PduR\Implementation\PduR_RmIf.c	   946  # if (PDUR_SMDATAPLANEROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   947      /* #10 Call switching manager filter function if configured */
; ..\component\PduR\Implementation\PduR_RmIf.c	   948      if(PduR_IsSmSrcRomUsedOfRmSrcRom(rmSrcIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	   949      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   950        PduR_SmSrcRomIdxOfRmSrcRomType smSrcRomIdx = PduR_GetSmSrcRomIdxOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   951        PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   952        PduR_GetSmSrcFilterFctPtr(PduR_GetSmSrcFilterFctPtrIdxOfSmSrcRom(smSrcRomIdx, memIdx), memIdx) (smSrcRomIdx, info, memIdx);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   953      }
; ..\component\PduR\Implementation\PduR_RmIf.c	   954  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   955  
; ..\component\PduR\Implementation\PduR_RmIf.c	   956      /* #20 For each destination of 1:N Routing */
; ..\component\PduR\Implementation\PduR_RmIf.c	   957      for(rmDestIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx); rmDestIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcIdx); rmDestIdx++)
	movh.a	a15,#@his(PduR_RmSrcRom)
	lea	a15,[a15]@los(PduR_RmSrcRom)
	addsc.a	a15,a15,d4,#2
.L84:
	mov	d8,#1
	mov.aa	a12,a4
.L85:
	ld.bu	d9,[a15]2
.L124:
	j	.L7
.L8:

; ..\component\PduR\Implementation\PduR_RmIf.c	   958      {
; ..\component\PduR\Implementation\PduR_RmIf.c	   959  # if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   960        /* #30 If Routing path group is enabled */
; ..\component\PduR\Implementation\PduR_RmIf.c	   961        if(PduR_IsDestPduEnabled(rmDestIdx) == TRUE)
; ..\component\PduR\Implementation\PduR_RmIf.c	   962  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   963        {
; ..\component\PduR\Implementation\PduR_RmIf.c	   964  # if (PDUR_SMDATAPLANEROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   965          PduR_RmGDestRomIterType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   966          PduR_FilterReturnType filterResult = PDUR_FILTER_PASS;
; ..\component\PduR\Implementation\PduR_RmIf.c	   967          /* #40 If Switching manager destination filter function passes or is not configured */
; ..\component\PduR\Implementation\PduR_RmIf.c	   968          if(PduR_IsSmGDestRomUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	   969          {
; ..\component\PduR\Implementation\PduR_RmIf.c	   970            PduR_SmGDestRomIdxOfRmGDestRomType smGDestRomIdx = PduR_GetSmGDestRomIdxOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   971            PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	   972            filterResult = PduR_GetSmGDestFilterFctPtr(PduR_GetSmGDestFilterFctPtrIdxOfSmGDestRom(smGDestRomIdx, memIdx), memIdx) (smGDestRomIdx, info, memIdx);  /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmIf.c	   973          }
; ..\component\PduR\Implementation\PduR_RmIf.c	   974          if(filterResult == PDUR_FILTER_PASS)
; ..\component\PduR\Implementation\PduR_RmIf.c	   975  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   976          {
; ..\component\PduR\Implementation\PduR_RmIf.c	   977  # if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   978            PduR_DestApplicationManagerRomIdxOfMmRomType destApplicationIdx = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx)));
; ..\component\PduR\Implementation\PduR_RmIf.c	   979            PduR_DestApplicationManagerRomIdxOfMmRomType srcApplicationIdx = PduR_GetDestApplicationManagerRomIdxOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(PduR_GetRmSrcRomIdxOfRmDestRom(rmDestIdx)));
; ..\component\PduR\Implementation\PduR_RmIf.c	   980  
; ..\component\PduR\Implementation\PduR_RmIf.c	   981            /* #50 In IF-cross-core routing use case, write data into multicore queue and return E_OK. Call DET, if queue is already full and return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_RmIf.c	   982            if((srcApplicationIdx != destApplicationIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	   983  #  if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	   984               && (PduR_GetRoutingTypeOfRmDestRom(rmDestIdx) != PDUR_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM)
; ..\component\PduR\Implementation\PduR_RmIf.c	   985  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	   986              )   /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	   987            {
; ..\component\PduR\Implementation\PduR_RmIf.c	   988              PduR_SrcApplicationRomIterType dest2srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationIdx) + (PduR_SrcApplicationRomIterType) srcApplicationIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	   989  
; ..\component\PduR\Implementation\PduR_RmIf.c	   990              if(PduR_McQ_WriteData(PduR_GetMcQBufferRomIdxOfSrcApplicationRom(dest2srcApplicationRomIdx),
; ..\component\PduR\Implementation\PduR_RmIf.c	   991                                    (PduR_RmDestRomEndIdxOfRmSrcRomType) rmDestIdx,
; ..\component\PduR\Implementation\PduR_RmIf.c	   992                                    info,
; ..\component\PduR\Implementation\PduR_RmIf.c	   993                                    PduR_GetPartitionIndexOfCslOfSrcApplicationRom(dest2srcApplicationRomIdx)) == E_OK)     /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	   994              {
; ..\component\PduR\Implementation\PduR_RmIf.c	   995                retVal &= E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	   996              }
; ..\component\PduR\Implementation\PduR_RmIf.c	   997              else
; ..\component\PduR\Implementation\PduR_RmIf.c	   998              {
; ..\component\PduR\Implementation\PduR_RmIf.c	   999                PduR_Det_ReportError(PDUR_FCT_RMIF_ROUTE, PDUR_E_MCQ_QUEUE_OVERFLOW);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1000                retVal &= E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1001              }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1002            }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1003            /* #60 otherwise, call destination Indication function and return it's result */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1004            else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1005  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1006            {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1007              retVal &= PduR_RmIf_ProcessDestPdu(rmDestIdx, info);  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
	mov	d4,d9
	mov.aa	a4,a12
.L126:
	call	PduR_RmIf_ProcessDestPdu
.L127:
	and	d8,d2
.L142:
	add	d9,#1
.L125:
	extr.u	d9,d9,#0,#8
.L7:
	ld.bu	d15,[a15]2
	add	d15,#1
	extr.u	d15,d15,#0,#8
.L143:
	jlt.u	d9,d15,.L8
.L86:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1008            }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1009          }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1010        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1011        /* #70 Otherwise return E_OK */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1012      }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1013    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1014  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1015    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1016    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1017    PDUR_DUMMY_STATEMENT(retVal); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1018  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1019    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1020  }
	mov	d2,d8
	ret
.L78:
	
__PduR_RmIf_RoutePdu_function_end:
	.size	PduR_RmIf_RoutePdu,__PduR_RmIf_RoutePdu_function_end-PduR_RmIf_RoutePdu
.L41:
	; End of function
	
	.sdecl	'.text.PduR_RmIf.PduR_RmIf_ProcessDestPdu',code,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.text.PduR_RmIf.PduR_RmIf_ProcessDestPdu'
	.align	2
	
	.global	PduR_RmIf_ProcessDestPdu

; ..\component\PduR\Implementation\PduR_RmIf.c	  1021  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1022  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1023  #if(PDUR_HASIFROUTINGOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1024  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1025   * PduR_RmIf_ProcessDestPdu
; ..\component\PduR\Implementation\PduR_RmIf.c	  1026   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1027  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1028   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1029   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1030   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1031   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1032   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1033  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_ProcessDestPdu(PduR_RmDestRomIterType rmDestIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; Function PduR_RmIf_ProcessDestPdu
.L28:
PduR_RmIf_ProcessDestPdu:	.type	func

; ..\component\PduR\Implementation\PduR_RmIf.c	  1034  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1035    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
	fcall	.cocofun_2
.L129:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1036  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1037    switch (PduR_GetPduLengthHandlingStrategyOfRmDestRom(rmDestIdx))
	ld.bu	d15,[a15]
.L165:
	jne	d15,#2,.L10
.L166:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1038    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1039  # if(PDUR_EXISTS_SHORTEN_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1040      case PDUR_SHORTEN_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1041        {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1042          if (PduR_RmIf_CheckInfoPointer(info, PDUR_FCT_RMIF_ROUTE) == E_OK)  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1043          {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1044            PduInfoType destPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1045            destPduInfo.SduDataPtr = info->SduDataPtr;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1046            destPduInfo.SduLength = PduR_RmIf_TruncateDlc(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx), info);  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1047            retVal = PduR_RmIf_DispatchDestPdu(rmDestIdx, &destPduInfo);  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1048          }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1049        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1050        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1051  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1052  # if(PDUR_EXISTS_IGNORE_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1053      case PDUR_IGNORE_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1054        {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1055          retVal = PduR_RmIf_DispatchDestPdu(rmDestIdx, info);  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
	j	PduR_RmIf_DispatchDestPdu

; ..\component\PduR\Implementation\PduR_RmIf.c	  1056        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1057        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1058  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1059  # if(PDUR_EXISTS_DISCARD_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1060      case PDUR_DISCARD_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1061        if (PduR_RmIf_CheckInfoPointer(info, PDUR_FCT_RMIF_ROUTE) == E_OK)  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1062        {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1063          if (info->SduLength <= PduR_GetMaxPduLengthOfRmGDestRom(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx)))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1064          {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1065            retVal = PduR_RmIf_DispatchDestPdu(rmDestIdx, info);  /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1066          }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1067        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1068        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1069  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1070      default:   /* COV_PDUR_MISRA */
.L10:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1071        /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1072        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1073    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1074  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1075    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1076  }
	ret
.L98:
	
__PduR_RmIf_ProcessDestPdu_function_end:
	.size	PduR_RmIf_ProcessDestPdu,__PduR_RmIf_ProcessDestPdu_function_end-PduR_RmIf_ProcessDestPdu
.L56:
	; End of function
	
	.sdecl	'.text.PduR_RmIf..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.PduR_RmIf..cocofun_2'
	.align	2
; Function .cocofun_2
.L30:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	mov	d2,#1
	fcall	.cocofun_3
.L183:
	addsc.a	a15,a15,d4,#2
.L184:
	fret
.L71:
	; End of function
	.sdecl	'.text.PduR_RmIf.PduR_RmIf_DispatchDestPdu',code,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.text.PduR_RmIf.PduR_RmIf_DispatchDestPdu'
	.align	2
	
	.global	PduR_RmIf_DispatchDestPdu

; ..\component\PduR\Implementation\PduR_RmIf.c	  1077  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1078  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1079  #if(PDUR_HASIFROUTINGOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1080  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1081   * PduR_RmIf_DispatchDestPdu
; ..\component\PduR\Implementation\PduR_RmIf.c	  1082   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1083  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1084   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1085   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1086   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1087   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1088  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_DispatchDestPdu(PduR_RmDestRomIterType rmDestRomIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; Function PduR_RmIf_DispatchDestPdu
.L32:
PduR_RmIf_DispatchDestPdu:	.type	func

; ..\component\PduR\Implementation\PduR_RmIf.c	  1089  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1090    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
	fcall	.cocofun_2
.L130:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1091    PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1092  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1093    switch (PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx))
	ld.bu	d15,[a15]3
.L148:
	ld.bu	d0,[a15]1
.L133:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1094    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1095  # if (PDUR_EXISTS_IF_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1096      case PDUR_IF_UNBUFFERED_RX_API_FWD_ROUTINGTYPEOFRMDESTROM:
	jeq	d15,#0,.L12
.L149:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1097        PduR_GetUpIfRxIndicationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info);    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1098        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1099        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1100  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1101  # if (PDUR_EXISTS_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1102      case PDUR_IF_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM:
	jeq	d15,d2,.L13
.L150:

; ..\component\PduR\Implementation\PduR_RmIf.c	  1103  #  if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1104        retVal = PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, info, PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx));  /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1105  #  else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1106        retVal = PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, info, FALSE);  /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1107  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1108        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1109  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1110  # if (PDUR_EXISTS_IF_NOBUFFER_GATEWAY_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1111      case PDUR_IF_NOBUFFER_GATEWAY_ROUTINGTYPEOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1112        PduR_RmIf_RxIndicationNoBuffer(rmDestRomIdx, info);    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1113        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1114        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1115  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1116  # if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1117      case PDUR_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1118        retVal = PduR_RmIf_ProcessBufferedRouting(PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx), rmDestRomIdx, rmGDestRomIdx, info);       /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1119        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1120  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1121      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1122        /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1123        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1124    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1125    PDUR_DUMMY_STATEMENT(rmGDestRomIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1126    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1127  }
	ret
.L12:
	mul	d15,d0,#6
	fcall	.cocofun_1
.L151:
	ld.a	a15,[a15]4
.L152:
	ld.bu	d4,[a2]
.L132:
	calli	a15
.L131:
	mov	d2,#0
	ret
.L13:
	mov	d5,#0
	j	PduR_RmIf_MultipleSourceHandler_Transmit
.L88:
	
__PduR_RmIf_DispatchDestPdu_function_end:
	.size	PduR_RmIf_DispatchDestPdu,__PduR_RmIf_DispatchDestPdu_function_end-PduR_RmIf_DispatchDestPdu
.L46:
	; End of function
	
	.calls	'PduR_RmIf_MultipleSourceHandler_Transmit','PduR_Lock_LockRoutingPathByDestPdu'
	.calls	'PduR_RmIf_MultipleSourceHandler_Transmit','__INDIRECT__'
	.calls	'PduR_RmIf_MultipleSourceHandler_Transmit','PduR_Lock_UnlockRoutingPathByDestPdu'
	.calls	'PduR_RmIf_MultipleSourceHandler_TxConfirmation','PduR_Rm_GetSrcDestPdu'
	.calls	'PduR_RmIf_MultipleSourceHandler_TxConfirmation','__INDIRECT__'
	.calls	'PduR_RmIf_MultipleSourceHandler_TxConfirmation','Det_ReportError'
	.calls	'PduR_RmIf_RoutePdu','PduR_RmIf_ProcessDestPdu'
	.calls	'PduR_RmIf_ProcessDestPdu','PduR_RmIf_DispatchDestPdu'
	.calls	'PduR_RmIf_DispatchDestPdu','__INDIRECT__'
	.calls	'PduR_RmIf_DispatchDestPdu','PduR_RmIf_MultipleSourceHandler_Transmit'
	.calls	'PduR_RmIf_MultipleSourceHandler_Transmit','.cocofun_3'
	.calls	'PduR_RmIf_MultipleSourceHandler_Transmit','.cocofun_1'
	.calls	'PduR_RmIf_MultipleSourceHandler_TxConfirmation','.cocofun_3'
	.calls	'PduR_RmIf_ProcessDestPdu','.cocofun_2'
	.calls	'.cocofun_2','.cocofun_3'
	.calls	'PduR_RmIf_DispatchDestPdu','.cocofun_2'
	.calls	'PduR_RmIf_DispatchDestPdu','.cocofun_1'
	.calls	'PduR_RmIf_MultipleSourceHandler_Transmit','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_1','',0
	.calls	'PduR_RmIf_MultipleSourceHandler_TxConfirmation','',8
	.calls	'PduR_RmIf_RoutePdu','',0
	.calls	'PduR_RmIf_ProcessDestPdu','',0
	.calls	'.cocofun_2','',0
	.extern	Det_ReportError
	.extern	PduR_MmRom
	.extern	PduR_RmDestRom
	.extern	PduR_RmGDestRom
	.extern	PduR_RmSrcRom
	.extern	PduR_Rm_GetSrcDestPdu
	.extern	PduR_Lock_LockRoutingPathByDestPdu
	.extern	PduR_Lock_UnlockRoutingPathByDestPdu
	.extern	__INDIRECT__
	.calls	'PduR_RmIf_DispatchDestPdu','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L34:
	.word	28822
	.half	3
	.word	.L35
	.byte	4
.L33:
	.byte	1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L36
	.byte	2
	.byte	'int',0,4,5,3
	.word	138
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	145
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	187
	.byte	7
	.word	187
	.byte	8
	.byte	'__cmpswapw',0
	.word	203
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	208
	.byte	9
	.byte	'value',0
	.word	187
	.byte	9
	.byte	'compare',0
	.word	187
	.byte	0
.L77:
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,10
	.byte	'Det_ReportError',0,1,154,2,32
	.word	265
	.byte	1,1,1,1,11
	.byte	'ModuleId',0,1,154,2,56
	.word	282
	.byte	11
	.byte	'InstanceId',0,1,154,2,72
	.word	265
	.byte	11
	.byte	'ApiId',0,1,154,2,90
	.word	265
	.byte	11
	.byte	'ErrorId',0,1,154,2,103
	.word	265
	.byte	0,7
	.word	265
	.byte	10
	.byte	'PduR_Rm_GetSrcDestPdu',0,2,129,8,33
	.word	265
	.byte	1,1,1,1,11
	.byte	'rmGDestRomIdx',0,2,129,8,79
	.word	265
	.byte	11
	.byte	'rmDestRomIdx',0,2,129,8,151,1
	.word	404
	.byte	0,12
	.byte	'PduR_Lock_LockRoutingPathByDestPdu',0,3,121,23,1,1,1,1,11
	.byte	'rmDestIdx',0,3,121,81
	.word	265
	.byte	0,12
	.byte	'PduR_Lock_UnlockRoutingPathByDestPdu',0,3,134,1,23,1,1,1,1,11
	.byte	'rmDestIdx',0,3,134,1,83
	.word	265
	.byte	0,7
	.word	265
	.byte	13
	.byte	'SduDataPtrType',0,4,196,1,54
	.word	619
	.byte	14,4,197,1,9,8,15
	.byte	'SduDataPtr',0
	.word	624
	.byte	4,2,35,0,15
	.byte	'SduLength',0
	.word	265
	.byte	1,2,35,4,0,3
	.word	648
.L80:
	.byte	7
	.word	694
	.byte	7
	.word	265
	.byte	16
	.byte	'__INDIRECT__',0,5,1,1,1,1,1,17,1,7
	.word	729
	.byte	13
	.byte	'__codeptr',0,5,1,1
	.word	731
	.byte	13
	.byte	'boolean',0,6,101,31
	.word	265
	.byte	13
	.byte	'uint8',0,6,104,31
	.word	265
	.byte	2
	.byte	'short int',0,2,5,13
	.byte	'sint16',0,6,105,31
	.word	784
	.byte	13
	.byte	'uint16',0,6,106,31
	.word	282
	.byte	2
	.byte	'long int',0,4,5,13
	.byte	'sint32',0,6,107,31
	.word	827
	.byte	2
	.byte	'unsigned long int',0,4,7,13
	.byte	'uint32',0,6,108,31
	.word	854
	.byte	13
	.byte	'uint8_least',0,6,111,31
	.word	265
	.byte	13
	.byte	'uint32_least',0,6,115,31
	.word	854
	.byte	2
	.byte	'unsigned long long int',0,8,7,13
	.byte	'uint64',0,6,121,30
	.word	931
	.byte	13
	.byte	'StatusType',0,7,127,23
	.word	265
	.byte	13
	.byte	'Std_ReturnType',0,7,132,1,15
	.word	265
	.byte	14,7,134,1,9,8,15
	.byte	'vendorID',0
	.word	282
	.byte	2,2,35,0,15
	.byte	'moduleID',0
	.word	282
	.byte	2,2,35,2,15
	.byte	'sw_major_version',0
	.word	265
	.byte	1,2,35,4,15
	.byte	'sw_minor_version',0
	.word	265
	.byte	1,2,35,5,15
	.byte	'sw_patch_version',0
	.word	265
	.byte	1,2,35,6,0,13
	.byte	'Std_VersionInfoType',0,7,141,1,3
	.word	1015
	.byte	13
	.byte	'PduIdType',0,8,63,15
	.word	265
	.byte	13
	.byte	'PduLengthType',0,8,65,15
	.word	265
	.byte	13
	.byte	'PduInfoType',0,4,201,1,3
	.word	648
	.byte	18,4,203,1,9,1,19
	.byte	'BUFREQ_OK',0,0,19
	.byte	'BUFREQ_E_NOT_OK',0,1,19
	.byte	'BUFREQ_E_BUSY',0,2,19
	.byte	'BUFREQ_E_OVFL',0,3,0,13
	.byte	'BufReq_ReturnType',0,4,209,1,3
	.word	1226
	.byte	18,4,219,1,9,1,19
	.byte	'TP_DATACONF',0,0,19
	.byte	'TP_DATARETRY',0,1,19
	.byte	'TP_CONFPENDING',0,2,0,13
	.byte	'TpDataStateType',0,4,226,1,3
	.word	1322
	.byte	20
	.byte	'sDet_PCConfigType',0,9,238,1,16,1,15
	.byte	'Det_PCConfigNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'Det_PCConfigType',0,9,241,1,3
	.word	1400
	.byte	18,10,147,1,9,1,19
	.byte	'Default_Init_Task',0,0,19
	.byte	'Default_Init_Task_Trusted',0,1,19
	.byte	'IdleTask_OsCore0',0,2,19
	.byte	'bsw_task',0,3,19
	.byte	'swc_init',0,4,19
	.byte	'swc_task',0,5,19
	.byte	'INVALID_TASK',0,6,19
	.byte	'OS_TASKID_COUNT',0,6,0,13
	.byte	'TaskType',0,10,157,1,3
	.word	1482
	.byte	13
	.byte	'Os_Hal_AddressType',0,11,61,16
	.word	854
	.byte	21,64
	.word	854
	.byte	22,15,0,20
	.byte	'Os_ExceptionContextType_Tag',0,12,71,8,160,1,15
	.byte	'AddressRegisters',0
	.word	1667
	.byte	64,2,35,0,15
	.byte	'DataRegisters',0
	.word	1667
	.byte	64,2,35,64,15
	.byte	'Ra',0
	.word	854
	.byte	4,3,35,128,1,15
	.byte	'Psw',0
	.word	854
	.byte	4,3,35,132,1,15
	.byte	'ExceptionSource',0
	.word	854
	.byte	4,3,35,136,1,15
	.byte	'Pcpn',0
	.word	854
	.byte	4,3,35,140,1,15
	.byte	'Pie',0
	.word	854
	.byte	4,3,35,144,1,15
	.byte	'MpuRegionForStackLow',0
	.word	854
	.byte	4,3,35,148,1,15
	.byte	'MpuRegionForStackUpper',0
	.word	854
	.byte	4,3,35,152,1,15
	.byte	'RawPCXI',0
	.word	854
	.byte	4,3,35,156,1,0,13
	.byte	'Os_ExceptionContextType',0,11,66,44
	.word	1676
	.byte	13
	.byte	'Os_InterruptSourceIdType',0,13,238,1,16
	.word	854
	.byte	13
	.byte	'Os_ExceptionSourceIdType',0,13,246,1,16
	.word	854
	.byte	18,13,161,2,9,1,19
	.byte	'RUNNING',0,0,19
	.byte	'READY',0,1,19
	.byte	'WAITING',0,2,19
	.byte	'SUSPENDED',0,3,0,13
	.byte	'TaskStateType',0,13,175,2,3
	.word	2024
	.byte	13
	.byte	'EventMaskType',0,13,182,2,16
	.word	931
	.byte	13
	.byte	'Os_TickType',0,13,200,2,19
	.word	854
	.byte	13
	.byte	'TickType',0,13,206,2,21
	.word	854
	.byte	14,13,220,2,9,12,15
	.byte	'maxallowedvalue',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'ticksperbase',0
	.word	854
	.byte	4,2,35,4,15
	.byte	'mincycle',0
	.word	854
	.byte	4,2,35,8,0,13
	.byte	'AlarmBaseType',0,13,228,2,2
	.word	2156
	.byte	18,13,128,3,9,1,19
	.byte	'APPLICATION_TERMINATED',0,0,19
	.byte	'APPLICATION_RESTARTING',0,1,19
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,13
	.byte	'ApplicationStateType',0,13,133,3,3
	.word	2251
	.byte	18,13,177,3,9,1,19
	.byte	'OSServiceId_GetApplicationID',0,0,19
	.byte	'OSServiceId_GetISRID',0,1,19
	.byte	'OSServiceId_CallTrustedFunction',0,2,19
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,19
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,19
	.byte	'OSServiceId_CheckObjectAccess',0,5,19
	.byte	'OSServiceId_CheckObjectOwnership',0,6,19
	.byte	'OSServiceId_StartScheduleTableRel',0,7,19
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,19
	.byte	'OSServiceId_StopScheduleTable',0,9,19
	.byte	'OSServiceId_NextScheduleTable',0,10,19
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,19
	.byte	'OSServiceId_SyncScheduleTable',0,12,19
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,19
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,19
	.byte	'OSServiceId_IncrementCounter',0,15,19
	.byte	'OSServiceId_GetCounterValue',0,16,19
	.byte	'OSServiceId_GetElapsedValue',0,17,19
	.byte	'OSServiceId_TerminateApplication',0,18,19
	.byte	'OSServiceId_AllowAccess',0,19,19
	.byte	'OSServiceId_GetApplicationState',0,20,19
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,19
	.byte	'OSServiceId_GetCoreID',0,22,19
	.byte	'OSServiceId_StartCore',0,23,19
	.byte	'OSServiceId_StartNonAutosarCore',0,24,19
	.byte	'OSServiceId_GetSpinlock',0,25,19
	.byte	'OSServiceId_ReleaseSpinlock',0,26,19
	.byte	'OSServiceId_TryToGetSpinlock',0,27,19
	.byte	'OSServiceId_ShutdownAllCores',0,28,19
	.byte	'OSServiceId_ControlIdle',0,29,19
	.byte	'OSServiceId_IocSend',0,30,19
	.byte	'OSServiceId_IocWrite',0,31,19
	.byte	'OSServiceId_IocSendGroup',0,32,19
	.byte	'OSServiceId_IocWriteGroup',0,33,19
	.byte	'OSServiceId_IocReceive',0,34,19
	.byte	'OSServiceId_IocRead',0,35,19
	.byte	'OSServiceId_IocReceiveGroup',0,36,19
	.byte	'OSServiceId_IocReadGroup',0,37,19
	.byte	'OSServiceId_IocEmptyQueue',0,38,19
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,19
	.byte	'OSServiceId_GetExceptionContext',0,160,1,19
	.byte	'OSServiceId_SetExceptionContext',0,161,1,19
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,19
	.byte	'OSServiceId_AppKill',0,163,1,19
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,19
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,19
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,19
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,19
	.byte	'OSServiceId_TimerIsr',0,168,1,19
	.byte	'OSServiceId_IsrWrapper',0,169,1,19
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,19
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,19
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,19
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,19
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,19
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,19
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,19
	.byte	'OSServiceId_GetSemaphore',0,177,1,19
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,19
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,19
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,19
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,19
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,19
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,19
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,19
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,19
	.byte	'OSServiceId_HookCallCallback',0,186,1,19
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,19
	.byte	'OSServiceId_IsInterruptPending',0,188,1,19
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,19
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,19
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,19
	.byte	'OSServiceId_GetCoreStartState',0,192,1,19
	.byte	'OSServiceId_StartOS',0,208,1,19
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,19
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,19
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,19
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,19
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,19
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,19
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,19
	.byte	'OSServiceId_ActivateTask',0,217,1,19
	.byte	'OSServiceId_TerminateTask',0,218,1,19
	.byte	'OSServiceId_ChainTask',0,219,1,19
	.byte	'OSServiceId_GetTaskID',0,220,1,19
	.byte	'OSServiceId_GetTaskState',0,221,1,19
	.byte	'OSServiceId_Schedule',0,222,1,19
	.byte	'OSServiceId_SetEvent',0,223,1,19
	.byte	'OSServiceId_ClearEvent',0,224,1,19
	.byte	'OSServiceId_GetEvent',0,225,1,19
	.byte	'OSServiceId_WaitEvent',0,226,1,19
	.byte	'OSServiceId_GetAlarmBase',0,227,1,19
	.byte	'OSServiceId_GetAlarm',0,228,1,19
	.byte	'OSServiceId_SetRelAlarm',0,229,1,19
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,19
	.byte	'OSServiceId_CancelAlarm',0,231,1,19
	.byte	'OSServiceId_GetResource',0,232,1,19
	.byte	'OSServiceId_ReleaseResource',0,233,1,19
	.byte	'OSSERVICEID_COUNT',0,255,1,0,13
	.byte	'OSServiceIdType',0,13,156,4,3
	.word	2363
	.byte	18,13,172,4,9,2,19
	.byte	'OS_STATUS_OK',0,0,19
	.byte	'OS_STATUS_CALLEVEL',0,2,19
	.byte	'OS_STATUS_LIMIT',0,4,19
	.byte	'OS_STATUS_RESOURCE',0,6,19
	.byte	'OS_STATUS_SERVICEID',0,9,19
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,19
	.byte	'OS_STATUS_MISSINGEND',0,11,19
	.byte	'OS_STATUS_DISABLEDINT',0,12,19
	.byte	'OS_STATUS_STACKFAULT',0,13,19
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,19
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,19
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,19
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,19
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,19
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,19
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,19
	.byte	'OS_STATUS_SPINLOCK',0,21,19
	.byte	'OS_STATUS_CORE',0,22,19
	.byte	'OS_STATUS_OVERFLOW',0,245,1,19
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,19
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,19
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,19
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,19
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,19
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,19
	.byte	'OS_STATUS_API_ERROR',0,252,1,19
	.byte	'OS_STATUS_ASSERTION',0,253,1,19
	.byte	'OS_STATUS_OVERLOAD',0,254,1,19
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,19
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,19
	.byte	'OS_STATUS_ID_1',0,131,2,19
	.byte	'OS_STATUS_UNLOCKED',0,133,2,19
	.byte	'OS_STATUS_STATE_1',0,135,2,19
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,19
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,19
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,19
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,19
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,19
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,19
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,19
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,19
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,19
	.byte	'OS_STATUS_ID_2',0,131,4,19
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,19
	.byte	'OS_STATUS_STATE_2',0,135,4,19
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,19
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,19
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,19
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,19
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,19
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,19
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,19
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,19
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,19
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,19
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,19
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,19
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,19
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,19
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,19
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,19
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,19
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,19
	.byte	'OS_STATUS_STOPPED_1',0,133,10,19
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,19
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,19
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,19
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,19
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,19
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,19
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,19
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,19
	.byte	'OS_STATUS_NEXTED_1',0,133,14,19
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,19
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,19
	.byte	'OS_STATUS_LOCKED',0,129,16,19
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,19
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,19
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,19
	.byte	'OS_STATUS_PRIORITY',0,129,18,19
	.byte	'OS_STATUS_ORDER',0,133,18,19
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,19
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,19
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,19
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,19
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,19
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,13
	.byte	'Os_StatusType',0,13,232,5,3
	.word	5533
	.byte	14,13,133,6,9,4,15
	.byte	'Service',0
	.word	2363
	.byte	1,2,35,0,15
	.byte	'Error',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'DetailedError',0
	.word	5533
	.byte	2,2,35,2,0,13
	.byte	'Os_ErrorInformationType',0,13,143,6,3
	.word	8063
	.byte	18,13,175,6,9,1,19
	.byte	'SCHEDULETABLE_STOPPED',0,0,19
	.byte	'SCHEDULETABLE_NEXT',0,1,19
	.byte	'SCHEDULETABLE_WAITING',0,2,19
	.byte	'SCHEDULETABLE_RUNNING',0,3,19
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,13
	.byte	'ScheduleTableStatusType',0,13,192,6,3
	.word	8158
	.byte	13
	.byte	'Os_AccessCheckAddress',0,13,199,6,29
	.word	854
	.byte	18,13,211,6,9,1,19
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,19
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,19
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,19
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,19
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,19
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,19
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,19
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,19
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,19
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,19
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,19
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,19
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,19
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,19
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,19
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,19
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,19
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,19
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,19
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,13
	.byte	'Os_MemAccessType',0,13,233,6,3
	.word	8362
	.byte	13
	.byte	'Can_IdType',0,14,52,30
	.word	282
	.byte	13
	.byte	'Can_HwHandleType',0,14,55,29
	.word	265
	.byte	13
	.byte	'Can_SduPtrType',0,14,58,45
	.word	619
	.byte	20
	.byte	'Can_PduTypeTag',0,14,61,16,12,15
	.byte	'id',0
	.word	282
	.byte	2,2,35,0,15
	.byte	'length',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'sdu',0
	.word	8935
	.byte	4,2,35,4,15
	.byte	'swPduHandle',0
	.word	265
	.byte	1,2,35,8,0,13
	.byte	'Can_PduType',0,14,67,3
	.word	8958
	.byte	7
	.word	265
	.byte	18,14,77,9,1,19
	.byte	'CAN_CS_UNINIT',0,0,19
	.byte	'CAN_CS_STARTED',0,1,19
	.byte	'CAN_CS_STOPPED',0,2,19
	.byte	'CAN_CS_SLEEP',0,3,0,13
	.byte	'Can_ControllerStateType',0,14,82,3
	.word	9066
	.byte	18,14,84,9,1,19
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,19
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,19
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,13
	.byte	'Can_ErrorStateType',0,14,88,3
	.word	9169
	.byte	13
	.byte	'tCanLLCanIntOld',0,15,161,3,37
	.word	854
	.byte	13
	.byte	'Can_OsIsrType',0,15,167,3,15
	.word	265
	.byte	13
	.byte	'Can_ExternalTickType',0,15,180,3,16
	.word	854
	.byte	21,32
	.word	854
	.byte	22,7,0,13
	.byte	'Can_LoopTimeout_dim_type',0,15,183,3,44
	.word	9353
	.byte	13
	.byte	'Can_ControllerConfigIterType',0,15,192,13,21
	.word	265
	.byte	13
	.byte	'Can_PduOfActiveSendObjectType',0,15,148,14,19
	.word	265
	.byte	13
	.byte	'Can_StateOfActiveSendObjectType',0,15,151,14,16
	.word	282
	.byte	13
	.byte	'Can_BTPType',0,15,154,14,16
	.word	854
	.byte	13
	.byte	'Can_RXBCOfBufferConfigType',0,15,160,14,15
	.word	265
	.byte	13
	.byte	'Can_RXF0COfBufferConfigType',0,15,163,14,16
	.word	854
	.byte	13
	.byte	'Can_RXF1COfBufferConfigType',0,15,166,14,15
	.word	265
	.byte	13
	.byte	'Can_TXBCOfBufferConfigType',0,15,169,14,16
	.word	854
	.byte	13
	.byte	'Can_TXEFCOfBufferConfigType',0,15,172,14,15
	.word	265
	.byte	13
	.byte	'Can_CanIfChannelIdType',0,15,190,14,15
	.word	265
	.byte	13
	.byte	'Can_CanSubSystemBaseAdrType',0,15,193,14,16
	.word	854
	.byte	13
	.byte	'Can_BasisAdrOfControllerConfigType',0,15,196,14,16
	.word	854
	.byte	13
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,15,199,14,15
	.word	265
	.byte	13
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,15,202,14,16
	.word	282
	.byte	13
	.byte	'Can_IsTTCanOfControllerConfigType',0,15,205,14,17
	.word	265
	.byte	13
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,15,208,14,15
	.word	265
	.byte	13
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,15,211,14,15
	.word	265
	.byte	13
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,15,214,14,15
	.word	265
	.byte	13
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,15,220,14,15
	.word	265
	.byte	13
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,15,223,14,15
	.word	265
	.byte	13
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,15,226,14,15
	.word	265
	.byte	13
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,15,232,14,15
	.word	265
	.byte	13
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,15,235,14,15
	.word	265
	.byte	13
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,15,238,14,15
	.word	265
	.byte	13
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,15,241,14,15
	.word	265
	.byte	13
	.byte	'Can_RxSelectionOfControllerConfigType',0,15,244,14,15
	.word	265
	.byte	13
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,15,247,14,15
	.word	265
	.byte	13
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,15,250,14,15
	.word	265
	.byte	13
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,15,253,14,15
	.word	265
	.byte	13
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,15,128,15,15
	.word	265
	.byte	13
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,15,131,15,15
	.word	265
	.byte	13
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,15,134,15,15
	.word	265
	.byte	13
	.byte	'Can_BusOffNotificationOfControllerDataType',0,15,137,15,15
	.word	265
	.byte	13
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,15,140,15,15
	.word	265
	.byte	13
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,15,143,15,15
	.word	265
	.byte	13
	.byte	'Can_IntEnableOfControllerDataType',0,15,146,15,16
	.word	854
	.byte	13
	.byte	'Can_IsBusOffOfControllerDataType',0,15,149,15,17
	.word	265
	.byte	13
	.byte	'Can_LastInitObjectOfControllerDataType',0,15,152,15,15
	.word	265
	.byte	13
	.byte	'Can_LastStateOfControllerDataType',0,15,155,15,15
	.word	265
	.byte	13
	.byte	'Can_LogStatusOfControllerDataType',0,15,158,15,15
	.word	265
	.byte	13
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,15,161,15,15
	.word	265
	.byte	13
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,15,164,15,16
	.word	854
	.byte	13
	.byte	'Can_PrevModeOfControllerDataType',0,15,167,15,15
	.word	265
	.byte	13
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,15,170,15,15
	.word	265
	.byte	13
	.byte	'Can_TXBCROfControllerDataType',0,15,173,15,16
	.word	854
	.byte	13
	.byte	'Can_TXBRPOfControllerDataType',0,15,176,15,16
	.word	854
	.byte	13
	.byte	'Can_FBTPType',0,15,179,15,16
	.word	854
	.byte	13
	.byte	'Can_GFCType',0,15,182,15,15
	.word	265
	.byte	13
	.byte	'Can_INT_PriorityType',0,15,185,15,15
	.word	265
	.byte	13
	.byte	'Can_INT_RoutingGroupType',0,15,188,15,15
	.word	265
	.byte	13
	.byte	'Can_InitObjectBaudrateType',0,15,191,15,16
	.word	282
	.byte	13
	.byte	'Can_InitObjectFdBrsConfigType',0,15,194,15,15
	.word	265
	.byte	13
	.byte	'Can_InitObjectStartIndexType',0,15,197,15,15
	.word	265
	.byte	13
	.byte	'Can_ActiveSendObjectOfMailboxType',0,15,200,15,15
	.word	265
	.byte	13
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,15,203,15,15
	.word	265
	.byte	13
	.byte	'Can_FdPaddingOfMailboxType',0,15,206,15,15
	.word	265
	.byte	13
	.byte	'Can_HwHandleOfMailboxType',0,15,209,15,15
	.word	265
	.byte	13
	.byte	'Can_IDValueOfMailboxType',0,15,212,15,15
	.word	265
	.byte	13
	.byte	'Can_MailboxSizeOfMailboxType',0,15,215,15,15
	.word	265
	.byte	13
	.byte	'Can_MailboxTypeOfMailboxType',0,15,218,15,15
	.word	265
	.byte	13
	.byte	'Can_MaxDataLenOfMailboxType',0,15,221,15,15
	.word	265
	.byte	13
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,15,224,15,15
	.word	265
	.byte	13
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,15,227,15,15
	.word	265
	.byte	13
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,15,230,15,15
	.word	265
	.byte	13
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,15,233,15,15
	.word	265
	.byte	13
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,15,236,15,15
	.word	265
	.byte	13
	.byte	'Can_FLSSAOfSIDFCType',0,15,242,15,15
	.word	265
	.byte	13
	.byte	'Can_LSSOfSIDFCType',0,15,245,15,15
	.word	265
	.byte	13
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,15,248,15,15
	.word	265
	.byte	13
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,15,251,15,15
	.word	265
	.byte	13
	.byte	'Can_SIDFEType',0,15,129,16,16
	.word	854
	.byte	13
	.byte	'Can_SRN_AddressType',0,15,132,16,16
	.word	854
	.byte	13
	.byte	'Can_RXBAOfShmAdrType',0,15,135,16,16
	.word	854
	.byte	13
	.byte	'Can_RXF0AOfShmAdrType',0,15,138,16,16
	.word	854
	.byte	13
	.byte	'Can_RXF1AOfShmAdrType',0,15,141,16,16
	.word	854
	.byte	13
	.byte	'Can_SIDFAOfShmAdrType',0,15,144,16,16
	.word	854
	.byte	13
	.byte	'Can_StartAdrOfShmAdrType',0,15,147,16,16
	.word	854
	.byte	13
	.byte	'Can_StopAdrOfShmAdrType',0,15,150,16,16
	.word	854
	.byte	13
	.byte	'Can_TXBAOfShmAdrType',0,15,153,16,16
	.word	854
	.byte	13
	.byte	'Can_TXEFAOfShmAdrType',0,15,156,16,16
	.word	854
	.byte	13
	.byte	'Can_XIDFAOfShmAdrType',0,15,159,16,16
	.word	854
	.byte	13
	.byte	'Can_F0DSOfShmElementSizeType',0,15,162,16,15
	.word	265
	.byte	13
	.byte	'Can_F1DSOfShmElementSizeType',0,15,165,16,15
	.word	265
	.byte	13
	.byte	'Can_RBDSOfShmElementSizeType',0,15,168,16,15
	.word	265
	.byte	13
	.byte	'Can_TBDSOfShmElementSizeType',0,15,171,16,15
	.word	265
	.byte	13
	.byte	'Can_TEFBDSOfShmElementSizeType',0,15,174,16,15
	.word	265
	.byte	13
	.byte	'Can_TDCRType',0,15,130,17,15
	.word	265
	.byte	13
	.byte	'Can_XIDAMType',0,15,133,17,16
	.word	854
	.byte	13
	.byte	'Can_FLESAOfXIDFCType',0,15,136,17,15
	.word	265
	.byte	13
	.byte	'Can_LSEOfXIDFCType',0,15,139,17,15
	.word	265
	.byte	13
	.byte	'Can_EIDFE_0OfXIDFEType',0,15,142,17,15
	.word	265
	.byte	13
	.byte	'Can_EIDFE_1OfXIDFEType',0,15,145,17,15
	.word	265
	.byte	20
	.byte	'sCan_ActiveSendObjectType',0,15,161,17,16,4,15
	.byte	'StateOfActiveSendObject',0
	.word	282
	.byte	2,2,35,0,15
	.byte	'PduOfActiveSendObject',0
	.word	265
	.byte	1,2,35,2,0,13
	.byte	'Can_ActiveSendObjectType',0,15,165,17,3
	.word	13161
	.byte	20
	.byte	'sCan_BufferConfigType',0,15,168,17,16,12,15
	.byte	'RXF0COfBufferConfig',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'TXBCOfBufferConfig',0
	.word	854
	.byte	4,2,35,4,15
	.byte	'RXBCOfBufferConfig',0
	.word	265
	.byte	1,2,35,8,15
	.byte	'RXF1COfBufferConfig',0
	.word	265
	.byte	1,2,35,9,15
	.byte	'TXEFCOfBufferConfig',0
	.word	265
	.byte	1,2,35,10,0,13
	.byte	'Can_BufferConfigType',0,15,175,17,3
	.word	13292
	.byte	20
	.byte	'sCan_ControllerConfigType',0,15,178,17,16,28,15
	.byte	'BasisAdrOfControllerConfig',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	282
	.byte	2,2,35,4,15
	.byte	'IsTTCanOfControllerConfig',0
	.word	265
	.byte	1,2,35,6,15
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	265
	.byte	1,2,35,7,15
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	265
	.byte	1,2,35,8,15
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	265
	.byte	1,2,35,9,15
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	265
	.byte	1,2,35,10,15
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	265
	.byte	1,2,35,11,15
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	265
	.byte	1,2,35,12,15
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	265
	.byte	1,2,35,13,15
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	265
	.byte	1,2,35,14,15
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	265
	.byte	1,2,35,15,15
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	265
	.byte	1,2,35,16,15
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	265
	.byte	1,2,35,17,15
	.byte	'RxSelectionOfControllerConfig',0
	.word	265
	.byte	1,2,35,18,15
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	265
	.byte	1,2,35,19,15
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	265
	.byte	1,2,35,20,15
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	265
	.byte	1,2,35,21,15
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	265
	.byte	1,2,35,22,15
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	265
	.byte	1,2,35,23,15
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	265
	.byte	1,2,35,24,0,13
	.byte	'Can_ControllerConfigType',0,15,201,17,3
	.word	13494
	.byte	20
	.byte	'sCan_ControllerDataType',0,15,204,17,16,64,15
	.byte	'IntEnableOfControllerData',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	854
	.byte	4,2,35,4,15
	.byte	'TXBCROfControllerData',0
	.word	854
	.byte	4,2,35,8,15
	.byte	'TXBRPOfControllerData',0
	.word	854
	.byte	4,2,35,12,15
	.byte	'BusOffNotificationOfControllerData',0
	.word	265
	.byte	1,2,35,16,15
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	265
	.byte	1,2,35,17,15
	.byte	'CanInterruptCounterOfControllerData',0
	.word	265
	.byte	1,2,35,18,15
	.byte	'IsBusOffOfControllerData',0
	.word	265
	.byte	1,2,35,19,15
	.byte	'LastInitObjectOfControllerData',0
	.word	265
	.byte	1,2,35,20,15
	.byte	'LastStateOfControllerData',0
	.word	265
	.byte	1,2,35,21,15
	.byte	'LogStatusOfControllerData',0
	.word	265
	.byte	1,2,35,22,15
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	265
	.byte	1,2,35,23,15
	.byte	'PrevModeOfControllerData',0
	.word	265
	.byte	1,2,35,24,15
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	265
	.byte	1,2,35,25,15
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	854
	.byte	4,2,35,26,15
	.byte	'LoopTimeoutOfControllerData',0
	.word	9362
	.byte	32,2,35,30,0,13
	.byte	'Can_ControllerDataType',0,15,222,17,3
	.word	14487
	.byte	21,32
	.word	854
	.byte	22,7,0,20
	.byte	'sCan_MailboxType',0,15,225,17,16,12,15
	.byte	'ActiveSendObjectOfMailbox',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'FdPaddingOfMailbox',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'HwHandleOfMailbox',0
	.word	265
	.byte	1,2,35,3,15
	.byte	'IDValueOfMailbox',0
	.word	265
	.byte	1,2,35,4,15
	.byte	'MailboxSizeOfMailbox',0
	.word	265
	.byte	1,2,35,5,15
	.byte	'MailboxTypeOfMailbox',0
	.word	265
	.byte	1,2,35,6,15
	.byte	'MaxDataLenOfMailbox',0
	.word	265
	.byte	1,2,35,7,15
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	265
	.byte	1,2,35,8,0,13
	.byte	'Can_MailboxType',0,15,236,17,3
	.word	15203
	.byte	20
	.byte	'sCan_MemorySectionInfoType',0,15,239,17,16,1,15
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'Can_MemorySectionInfoType',0,15,242,17,3
	.word	15533
	.byte	20
	.byte	'sCan_MemorySectionObjectsType',0,15,245,17,16,4,15
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	265
	.byte	1,2,35,2,0,13
	.byte	'Can_MemorySectionObjectsType',0,15,250,17,3
	.word	15649
	.byte	20
	.byte	'sCan_SIDFCType',0,15,253,17,16,4,15
	.byte	'FLSSAOfSIDFC',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'LSSOfSIDFC',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	265
	.byte	1,2,35,3,0,13
	.byte	'Can_SIDFCType',0,15,131,18,3
	.word	15855
	.byte	20
	.byte	'sCan_ShmAdrType',0,15,134,18,16,36,15
	.byte	'RXBAOfShmAdr',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'RXF0AOfShmAdr',0
	.word	854
	.byte	4,2,35,4,15
	.byte	'RXF1AOfShmAdr',0
	.word	854
	.byte	4,2,35,8,15
	.byte	'SIDFAOfShmAdr',0
	.word	854
	.byte	4,2,35,12,15
	.byte	'StartAdrOfShmAdr',0
	.word	854
	.byte	4,2,35,16,15
	.byte	'StopAdrOfShmAdr',0
	.word	854
	.byte	4,2,35,20,15
	.byte	'TXBAOfShmAdr',0
	.word	854
	.byte	4,2,35,24,15
	.byte	'TXEFAOfShmAdr',0
	.word	854
	.byte	4,2,35,28,15
	.byte	'XIDFAOfShmAdr',0
	.word	854
	.byte	4,2,35,32,0,13
	.byte	'Can_ShmAdrType',0,15,145,18,3
	.word	16000
	.byte	20
	.byte	'sCan_ShmElementSizeType',0,15,148,18,16,6,15
	.byte	'F0DSOfShmElementSize',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'F1DSOfShmElementSize',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'RBDSOfShmElementSize',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'TBDSOfShmElementSize',0
	.word	265
	.byte	1,2,35,3,15
	.byte	'TEFBDSOfShmElementSize',0
	.word	265
	.byte	1,2,35,4,0,13
	.byte	'Can_ShmElementSizeType',0,15,155,18,3
	.word	16257
	.byte	20
	.byte	'sCan_XIDFCType',0,15,158,18,16,2,15
	.byte	'FLESAOfXIDFC',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'LSEOfXIDFC',0
	.word	265
	.byte	1,2,35,1,0,13
	.byte	'Can_XIDFCType',0,15,162,18,3
	.word	16472
	.byte	20
	.byte	'sCan_XIDFEType',0,15,165,18,16,2,15
	.byte	'EIDFE_0OfXIDFE',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'EIDFE_1OfXIDFE',0
	.word	265
	.byte	1,2,35,1,0,13
	.byte	'Can_XIDFEType',0,15,169,18,3
	.word	16559
	.byte	20
	.byte	'sCan_PCConfigType',0,15,143,19,16,1,15
	.byte	'Can_PCConfigNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'Can_PCConfigType',0,15,146,19,3
	.word	16652
	.byte	13
	.byte	'Can_ConfigType',0,15,148,19,26
	.word	16652
	.byte	6
	.word	854
	.byte	6
	.word	854
	.byte	6
	.word	1667
	.byte	20
	.byte	'tElmTypeTag',0,16,145,9,25,72,15
	.byte	'E0',0
	.word	16758
	.byte	4,2,35,0,15
	.byte	'E1',0
	.word	16763
	.byte	4,2,35,4,15
	.byte	'data',0
	.word	16768
	.byte	64,2,35,8,0,6
	.word	16773
	.byte	13
	.byte	'tElmType',0,16,162,9,3
	.word	16830
	.byte	6
	.word	854
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	14,16,224,9,5,4,23
	.byte	'ID',0,4
	.word	16853
	.byte	29,3,2,35,0,23
	.byte	'RTR',0,1
	.word	16858
	.byte	1,2,2,35,3,23
	.byte	'XTD',0,1
	.word	16863
	.byte	1,1,2,35,3,23
	.byte	'ESI',0,1
	.word	16868
	.byte	1,0,2,35,3,0,6
	.word	854
	.byte	24,16,222,9,3,4,15
	.byte	'b0',0
	.word	16873
	.byte	4,2,35,0,15
	.byte	'B0',0
	.word	16939
	.byte	4,2,35,0,0,6
	.word	282
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	14,16,235,9,5,4,23
	.byte	'RXTS',0,2
	.word	16975
	.byte	16,0,2,35,0,23
	.byte	'DLC',0,1
	.word	16980
	.byte	4,4,2,35,2,23
	.byte	'BRS',0,1
	.word	16985
	.byte	1,3,2,35,2,23
	.byte	'FDF',0,1
	.word	16990
	.byte	1,2,2,35,2,23
	.byte	'r0',0,1
	.word	16995
	.byte	2,0,2,35,2,23
	.byte	'FIDX',0,1
	.word	17000
	.byte	7,1,2,35,3,23
	.byte	'ANMF',0,1
	.word	17005
	.byte	1,0,2,35,3,0,6
	.word	282
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	6
	.word	265
	.byte	14,16,245,9,5,4,23
	.byte	'r1',0,2
	.word	17124
	.byte	16,0,2,35,0,23
	.byte	'DLC',0,1
	.word	17129
	.byte	4,4,2,35,2,23
	.byte	'BRS',0,1
	.word	17134
	.byte	1,3,2,35,2,23
	.byte	'FDF',0,1
	.word	17139
	.byte	1,2,2,35,2,23
	.byte	'r0',0,1
	.word	17144
	.byte	1,1,2,35,2,23
	.byte	'EFC',0,1
	.word	17149
	.byte	1,0,2,35,2,23
	.byte	'MM',0,1
	.word	17154
	.byte	8,0,2,35,3,0,24,16,233,9,3,4,15
	.byte	'rb1',0
	.word	17010
	.byte	4,2,35,0,15
	.byte	'tb1',0
	.word	17159
	.byte	4,2,35,0,15
	.byte	'B1',0
	.word	854
	.byte	4,2,35,0,0,6
	.word	1667
	.byte	20
	.byte	'tCanChipMsgPtrTag',0,16,220,9,25,72,15
	.byte	'uB0',0
	.word	16944
	.byte	4,2,35,0,15
	.byte	'uB1',0
	.word	17268
	.byte	4,2,35,4,15
	.byte	'data',0
	.word	17313
	.byte	64,2,35,8,0,6
	.word	17318
	.byte	13
	.byte	'tCanChipMsgPtr',0,16,134,10,3
	.word	17383
	.byte	14,16,141,10,3,4,23
	.byte	'FnFL',0,1
	.word	265
	.byte	7,1,2,35,0,23
	.byte	'r2',0,1
	.word	265
	.byte	1,0,2,35,0,23
	.byte	'FnGI',0,1
	.word	265
	.byte	6,2,2,35,1,23
	.byte	'r1',0,4
	.word	854
	.byte	10,8,2,35,0,23
	.byte	'FnF',0,1
	.word	265
	.byte	1,7,2,35,3,23
	.byte	'RFnL',0,1
	.word	265
	.byte	1,6,2,35,3,23
	.byte	'r0',0,1
	.word	265
	.byte	6,0,2,35,3,0,25
	.byte	'tRXFnSTag',0,16,138,10,15,4,15
	.byte	'R',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17412
	.byte	4,2,35,0,0,13
	.byte	'tRXFnS',0,16,151,10,3
	.word	17524
	.byte	14,16,156,10,3,4,26,1
	.word	265
	.byte	2,6,2,35,0,23
	.byte	'FOSA',0,2
	.word	282
	.byte	14,0,2,35,0,23
	.byte	'F0S',0,1
	.word	265
	.byte	7,1,2,35,2,26,1
	.word	265
	.byte	1,0,2,35,2,23
	.byte	'F0WM',0,1
	.word	265
	.byte	7,1,2,35,3,26,1
	.word	265
	.byte	1,0,2,35,3,0,25
	.byte	'tRXFnCTag',0,16,153,10,15,4,15
	.byte	'R',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17579
	.byte	4,2,35,0,0,13
	.byte	'tRXFnC',0,16,165,10,3
	.word	17666
	.byte	14,16,171,10,3,4,23
	.byte	'F0DS',0,1
	.word	265
	.byte	3,5,2,35,0,26,1
	.word	265
	.byte	1,4,2,35,0,23
	.byte	'F1DS',0,1
	.word	265
	.byte	3,1,2,35,0,26,1
	.word	265
	.byte	1,0,2,35,0,23
	.byte	'RBDS',0,1
	.word	265
	.byte	3,5,2,35,1,26,4
	.word	854
	.byte	21,0,2,35,0,0,25
	.byte	'tRXESCTag',0,16,168,10,15,4,15
	.byte	'R',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17721
	.byte	4,2,35,0,0,13
	.byte	'tRXESC',0,16,180,10,3
	.word	17809
	.byte	14,16,185,10,3,4,23
	.byte	'TFFL',0,1
	.word	265
	.byte	6,2,2,35,0,26,1
	.word	265
	.byte	2,0,2,35,0,23
	.byte	'TFGI',0,1
	.word	265
	.byte	5,3,2,35,1,26,1
	.word	265
	.byte	3,0,2,35,1,23
	.byte	'TFQPI',0,1
	.word	265
	.byte	5,3,2,35,2,23
	.byte	'TFQF',0,1
	.word	265
	.byte	1,2,2,35,2,26,2
	.word	282
	.byte	10,0,2,35,2,0,25
	.byte	'tTXFQSTag',0,16,182,10,15,4,15
	.byte	'R',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	17864
	.byte	4,2,35,0,0,13
	.byte	'tTXFQS',0,16,195,10,3
	.word	17969
	.byte	14,16,200,10,3,4,23
	.byte	'EFFL',0,1
	.word	265
	.byte	6,2,2,35,0,23
	.byte	'r1',0,1
	.word	265
	.byte	2,0,2,35,0,23
	.byte	'EFGI',0,1
	.word	265
	.byte	5,3,2,35,1,26,4
	.word	854
	.byte	11,8,2,35,0,23
	.byte	'EFF',0,1
	.word	265
	.byte	1,7,2,35,3,23
	.byte	'TEFL',0,1
	.word	265
	.byte	1,6,2,35,3,23
	.byte	'r0',0,1
	.word	265
	.byte	6,0,2,35,3,0,25
	.byte	'tTXEFSTag',0,16,197,10,15,4,15
	.byte	'R',0
	.word	854
	.byte	4,2,35,0,15
	.byte	'B',0
	.word	18024
	.byte	4,2,35,0,0,13
	.byte	'tTXEFS',0,16,210,10,3
	.word	18133
	.byte	13
	.byte	'CanIf_TxBufferSizeType',0,17,184,1,15
	.word	265
	.byte	18,18,189,2,9,1,19
	.byte	'CANIF_CS_UNINIT',0,0,19
	.byte	'CANIF_CS_STOPPED',0,1,19
	.byte	'CANIF_CS_STARTED',0,2,19
	.byte	'CANIF_CS_SLEEP',0,3,0,13
	.byte	'CanIf_ControllerModeType',0,18,195,2,3
	.word	18220
	.byte	18,18,215,2,9,1,19
	.byte	'CANIF_GET_OFFLINE',0,0,19
	.byte	'CANIF_GET_RX_ONLINE',0,1,19
	.byte	'CANIF_GET_TX_ONLINE',0,2,19
	.byte	'CANIF_GET_ONLINE',0,3,19
	.byte	'CANIF_GET_OFFLINE_ACTIVE',0,4,19
	.byte	'CANIF_GET_OFFLINE_ACTIVE_RX_ONLINE',0,5,19
	.byte	'CANIF_NO_MODE_PDU_GET_MODE_TYPE_END',0,6,0,13
	.byte	'CanIf_PduGetModeType',0,18,228,2,3
	.word	18334
	.byte	18,18,231,2,9,1,19
	.byte	'CANIF_RxBasicCANMailbox',0,0,19
	.byte	'CANIF_RxFullCANMailbox',0,1,19
	.byte	'CANIF_TxBasicCANMailbox',0,2,19
	.byte	'CANIF_TxFullCANMailbox',0,3,19
	.byte	'CANIF_UnusedCANMailbox',0,4,0,13
	.byte	'CanIf_MailBoxTypeType',0,18,238,2,3
	.word	18556
	.byte	18,18,241,2,9,1,19
	.byte	'CanIf_SimpleRxIndicationLayout',0,0,19
	.byte	'CanIf_AdvancedRxIndicationLayout',0,1,19
	.byte	'CanIf_NmOsekRxIndicationLayout',0,2,19
	.byte	'CanIf_CddRxIndicationLayout',0,3,0,13
	.byte	'CanIf_RxIndicationLayoutType',0,18,247,2,3
	.word	18721
	.byte	27,1,1,5
	.word	265
	.byte	0,7
	.word	18897
	.byte	13
	.byte	'CanIf_TxConfirmationFctType',0,18,175,3,9
	.word	18906
	.byte	3
	.word	265
	.byte	7
	.word	18948
	.byte	27,1,1,5
	.word	265
	.byte	5
	.word	18953
	.byte	0,7
	.word	18958
	.byte	13
	.byte	'CanIf_SimpleRxIndicationFctType',0,18,181,3,9
	.word	18972
	.byte	3
	.word	648
	.byte	7
	.word	19018
	.byte	27,1,1,5
	.word	265
	.byte	5
	.word	19023
	.byte	0,7
	.word	19028
	.byte	13
	.byte	'CanIf_AdvancedRxIndicationFctType',0,18,186,3,9
	.word	19042
	.byte	27,1,1,5
	.word	265
	.byte	5
	.word	18953
	.byte	5
	.word	282
	.byte	0,7
	.word	19090
	.byte	13
	.byte	'CanIf_NmOsekRxIndicationFctType',0,18,190,3,9
	.word	19109
	.byte	27,1,1,5
	.word	265
	.byte	5
	.word	19023
	.byte	5
	.word	282
	.byte	0,7
	.word	19155
	.byte	13
	.byte	'CanIf_CddRxIndicationFctType',0,18,194,3,9
	.word	19174
	.byte	27,1,1,5
	.word	265
	.byte	5
	.word	18220
	.byte	0,7
	.word	19217
	.byte	13
	.byte	'CanIf_CtrlModeIndicationFctType',0,18,198,3,9
	.word	19231
	.byte	13
	.byte	'CanIf_BusOffNotificationFctType',0,18,202,3,9
	.word	18906
	.byte	24,18,203,4,9,4,15
	.byte	'eSimpleRxIndicationType',0
	.word	18977
	.byte	4,2,35,0,15
	.byte	'eAdvancedRxIndicationType',0
	.word	19047
	.byte	4,2,35,0,15
	.byte	'eNmOsekRxIndicationType',0
	.word	19114
	.byte	4,2,35,0,15
	.byte	'eCddRxIndicationType',0
	.word	19179
	.byte	4,2,35,0,0,13
	.byte	'CanIf_RxIndicationFctType',0,18,209,4,3
	.word	19318
	.byte	7
	.word	18958
	.byte	7
	.word	19028
	.byte	7
	.word	19090
	.byte	7
	.word	19155
	.byte	20
	.byte	'sCanIf_TxQueueBaseType',0,18,222,4,16,1,15
	.byte	'eSduLength',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'CanIf_TxQueueBaseType',0,18,228,4,3
	.word	19511
	.byte	20
	.byte	'sCanIf_TxQueueBaseWithDataType',0,18,231,4,16,1,15
	.byte	'eBaseParams',0
	.word	19511
	.byte	1,2,35,0,0,13
	.byte	'CanIf_TxQueueBaseWithDataType',0,18,237,4,3
	.word	19592
	.byte	20
	.byte	'sCanIf_TxPrioByCanIdByteQueueType',0,18,242,4,16,2,15
	.byte	'eQueueParams',0
	.word	19592
	.byte	1,2,35,0,15
	.byte	'eQueued',0
	.word	265
	.byte	1,2,35,1,0,13
	.byte	'CanIf_TxPrioByCanIdByteQueueType',0,18,246,4,3
	.word	19690
	.byte	20
	.byte	'sCanIf_TxBufferPrioByCanIdBaseType',0,18,128,5,16,1,15
	.byte	'eQueueCounter',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'CanIf_TxBufferPrioByCanIdBaseType',0,18,131,5,3
	.word	19812
	.byte	13
	.byte	'CanIf_MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,17,138,9,15
	.word	265
	.byte	13
	.byte	'CanIf_MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,17,141,9,15
	.word	265
	.byte	13
	.byte	'CanIf_CtrlStatesIdxOfMailBoxConfigType',0,17,150,9,15
	.word	265
	.byte	13
	.byte	'CanIf_PduIdFirstOfMailBoxConfigType',0,17,153,9,15
	.word	265
	.byte	13
	.byte	'CanIf_PduIdLastOfMailBoxConfigType',0,17,156,9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxBufferCfgIdxOfMailBoxConfigType',0,17,159,9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxBufferHandlingTypeOfMailBoxConfigType',0,17,165,9,15
	.word	265
	.byte	13
	.byte	'CanIf_MailBoxConfigIdxOfMappedTxBuffersConfigType',0,17,168,9,15
	.word	265
	.byte	13
	.byte	'CanIf_RxIndicationFctListIdxOfRxPduConfigType',0,17,171,9,15
	.word	265
	.byte	13
	.byte	'CanIf_RxPduCanIdOfRxPduConfigType',0,17,174,9,15
	.word	265
	.byte	13
	.byte	'CanIf_RxPduDlcOfRxPduConfigType',0,17,177,9,15
	.word	265
	.byte	13
	.byte	'CanIf_RxPduMaskOfRxPduConfigType',0,17,180,9,16
	.word	282
	.byte	13
	.byte	'CanIf_UpperPduIdOfRxPduConfigType',0,17,183,9,19
	.word	265
	.byte	13
	.byte	'CanIf_TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,17,231,9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,17,234
	.byte	9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfigType',0,17,237
	.byte	9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,17
	.byte	240,9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdusType',0,17,243,9,15
	.word	265
	.byte	13
	.byte	'CanIf_CanIdOfTxPduConfigType',0,17,246,9,16
	.word	282
	.byte	13
	.byte	'CanIf_CtrlStatesIdxOfTxPduConfigType',0,17,249,9,15
	.word	265
	.byte	13
	.byte	'CanIf_IsTxPduTruncationOfTxPduConfigType',0,17,252,9,17
	.word	265
	.byte	13
	.byte	'CanIf_MailBoxConfigIdxOfTxPduConfigType',0,17,255,9,15
	.word	265
	.byte	13
	.byte	'CanIf_TxConfirmationFctListIdxOfTxPduConfigType',0,17,130,10,15
	.word	265
	.byte	13
	.byte	'CanIf_TxPduLengthOfTxPduConfigType',0,17,133,10,15
	.word	265
	.byte	13
	.byte	'CanIf_UpperLayerTxPduIdOfTxPduConfigType',0,17,136,10,19
	.word	265
	.byte	13
	.byte	'CanIf_TxQueueIdxOfTxPduQueueIndexType',0,17,139,10,15
	.word	265
	.byte	13
	.byte	'CanIf_TxQueueIndex2DataStartStopIdxOfTxPduQueueIndexType',0,17,142,10,15
	.word	265
	.byte	13
	.byte	'CanIf_TxQueueDataType',0,17,151,10,15
	.word	265
	.byte	13
	.byte	'CanIf_TxQueueDataEndIdxOfTxQueueIndex2DataStartStopType',0,17,154,10,15
	.word	265
	.byte	13
	.byte	'CanIf_TxQueueDataLengthOfTxQueueIndex2DataStartStopType',0,17,157,10,15
	.word	265
	.byte	13
	.byte	'CanIf_TxQueueDataStartIdxOfTxQueueIndex2DataStartStopType',0,17,160,10,15
	.word	265
	.byte	20
	.byte	'sCanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,17,183,10,16,2,15
	.byte	'MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	265
	.byte	1,2,35,1,0,13
	.byte	'CanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,17,187,10,3
	.word	21751
	.byte	20
	.byte	'sCanIf_CtrlStatesType',0,17,190,10,16,2,15
	.byte	'CtrlModeOfCtrlStates',0
	.word	18220
	.byte	1,2,35,0,15
	.byte	'PduModeOfCtrlStates',0
	.word	18334
	.byte	1,2,35,1,0,13
	.byte	'CanIf_CtrlStatesType',0,17,194,10,3
	.word	22002
	.byte	20
	.byte	'sCanIf_MailBoxConfigType',0,17,200,10,16,6,15
	.byte	'CtrlStatesIdxOfMailBoxConfig',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'PduIdFirstOfMailBoxConfig',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'PduIdLastOfMailBoxConfig',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'TxBufferCfgIdxOfMailBoxConfig',0
	.word	265
	.byte	1,2,35,3,15
	.byte	'TxBufferHandlingTypeOfMailBoxConfig',0
	.word	265
	.byte	1,2,35,4,15
	.byte	'MailBoxTypeOfMailBoxConfig',0
	.word	18556
	.byte	1,2,35,5,0,13
	.byte	'CanIf_MailBoxConfigType',0,17,208,10,3
	.word	22120
	.byte	20
	.byte	'sCanIf_MappedTxBuffersConfigType',0,17,214,10,16,1,15
	.byte	'MailBoxConfigIdxOfMappedTxBuffersConfig',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'CanIf_MappedTxBuffersConfigType',0,17,217,10,3
	.word	22412
	.byte	20
	.byte	'sCanIf_RxIndicationFctListType',0,17,220,10,16,8,15
	.byte	'RxIndicationFctOfRxIndicationFctList',0
	.word	19318
	.byte	4,2,35,0,15
	.byte	'RxIndicationLayoutOfRxIndicationFctList',0
	.word	18721
	.byte	1,2,35,4,0,13
	.byte	'CanIf_RxIndicationFctListType',0,17,224,10,3
	.word	22542
	.byte	20
	.byte	'sCanIf_RxPduConfigType',0,17,230,10,16,6,15
	.byte	'RxPduMaskOfRxPduConfig',0
	.word	282
	.byte	2,2,35,0,15
	.byte	'UpperPduIdOfRxPduConfig',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'RxIndicationFctListIdxOfRxPduConfig',0
	.word	265
	.byte	1,2,35,3,15
	.byte	'RxPduCanIdOfRxPduConfig',0
	.word	265
	.byte	1,2,35,4,15
	.byte	'RxPduDlcOfRxPduConfig',0
	.word	265
	.byte	1,2,35,5,0,13
	.byte	'CanIf_RxPduConfigType',0,17,237,10,3
	.word	22714
	.byte	20
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueConfigType',0,17,245,10,16,4,15
	.byte	'TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	265
	.byte	1,2,35,3,0,13
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueConfigType',0,17,251,10,3
	.word	22949
	.byte	20
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,17,129,11,16,1,15
	.byte	'TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdus',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,17,132,11,3
	.word	23406
	.byte	20
	.byte	'sCanIf_TxPduConfigType',0,17,140,11,16,8,15
	.byte	'CanIdOfTxPduConfig',0
	.word	282
	.byte	2,2,35,0,15
	.byte	'UpperLayerTxPduIdOfTxPduConfig',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'IsTxPduTruncationOfTxPduConfig',0
	.word	265
	.byte	1,2,35,3,15
	.byte	'CtrlStatesIdxOfTxPduConfig',0
	.word	265
	.byte	1,2,35,4,15
	.byte	'MailBoxConfigIdxOfTxPduConfig',0
	.word	265
	.byte	1,2,35,5,15
	.byte	'TxConfirmationFctListIdxOfTxPduConfig',0
	.word	265
	.byte	1,2,35,6,15
	.byte	'TxPduLengthOfTxPduConfig',0
	.word	265
	.byte	1,2,35,7,0,13
	.byte	'CanIf_TxPduConfigType',0,17,149,11,3
	.word	23591
	.byte	20
	.byte	'sCanIf_TxPduQueueIndexType',0,17,155,11,16,2,15
	.byte	'TxQueueIdxOfTxPduQueueIndex',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'TxQueueIndex2DataStartStopIdxOfTxPduQueueIndex',0
	.word	265
	.byte	1,2,35,1,0,13
	.byte	'CanIf_TxPduQueueIndexType',0,17,159,11,3
	.word	23916
	.byte	20
	.byte	'sCanIf_TxQueueIndex2DataStartStopType',0,17,166,11,16,4,15
	.byte	'TxQueueDataEndIdxOfTxQueueIndex2DataStartStop',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'TxQueueDataLengthOfTxQueueIndex2DataStartStop',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'TxQueueDataStartIdxOfTxQueueIndex2DataStartStop',0
	.word	265
	.byte	1,2,35,2,0,13
	.byte	'CanIf_TxQueueIndex2DataStartStopType',0,17,171,11,3
	.word	24078
	.byte	20
	.byte	'CanIf_CtrlStatesStructSTag',0,17,183,11,16,2,15
	.byte	'CT_testCANFDdbc_2c920817',0
	.word	22002
	.byte	2,2,35,0,0,13
	.byte	'CanIf_CtrlStatesStructSType',0,17,186,11,3
	.word	24336
	.byte	20
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSTag',0,17,189,11,16,1,15
	.byte	'CHNL_7a25eeb6',0
	.word	19812
	.byte	1,2,35,0,0,13
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSType',0,17,192,11,3
	.word	24441
	.byte	20
	.byte	'CanIf_TxQueueStructSTag',0,17,195,11,16,6,15
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	19690
	.byte	2,2,35,0,15
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	19690
	.byte	2,2,35,2,15
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	19690
	.byte	2,2,35,4,0,13
	.byte	'CanIf_TxQueueStructSType',0,17,200,11,3
	.word	24561
	.byte	21,32
	.word	265
	.byte	22,31,0,21,8
	.word	265
	.byte	22,7,0,21,64
	.word	265
	.byte	22,63,0,20
	.byte	'CanIf_TxQueueDataStructSTag',0,17,203,11,16,104,15
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	24765
	.byte	32,2,35,0,15
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	24774
	.byte	8,2,35,32,15
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	24783
	.byte	64,2,35,40,0,13
	.byte	'CanIf_TxQueueDataStructSType',0,17,208,11,3
	.word	24792
	.byte	20
	.byte	'sCanIf_PCConfigType',0,17,189,12,16,1,15
	.byte	'CanIf_PCConfigNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'CanIf_PCConfigType',0,17,192,12,3
	.word	25004
	.byte	28,1,1,7
	.word	25092
	.byte	13
	.byte	'PduR_LockFunctionType',0,19,218,8,9
	.word	25095
	.byte	29
	.word	265
	.byte	1,1,5
	.word	265
	.byte	5
	.word	19023
	.byte	0,7
	.word	25131
	.byte	13
	.byte	'PduR_TransmitFctPtrType',0,19,222,8,9
	.word	25149
	.byte	13
	.byte	'PduR_IfRxIndicationType',0,19,224,8,9
	.word	19042
	.byte	13
	.byte	'PduR_IfTxConfirmationFctPtrType',0,19,225,8,9
	.word	18906
	.byte	13
	.byte	'PduR_RmDestRomIterType',0,19,153,9,21
	.word	265
	.byte	13
	.byte	'PduR_RmGDestRomIterType',0,19,156,9,21
	.word	265
	.byte	13
	.byte	'PduR_RmSrcRomIterType',0,19,159,9,21
	.word	265
	.byte	13
	.byte	'PduR_hasIfRoutingOfGeneralPropertiesRomType',0,19,207,9,17
	.word	265
	.byte	13
	.byte	'PduR_InitializedType',0,19,210,9,17
	.word	265
	.byte	13
	.byte	'PduR_DestApplicationManagerRomIdxOfMmRomType',0,19,219,9,15
	.word	265
	.byte	13
	.byte	'PduR_MaskedBitsOfMmRomType',0,19,225,9,15
	.word	265
	.byte	13
	.byte	'PduR_RmGDestRomStartIdxOfMmRomType',0,19,231,9,15
	.word	265
	.byte	13
	.byte	'PduR_MmRomIndType',0,19,240,9,15
	.word	265
	.byte	13
	.byte	'PduR_PartitionSNVOfPartitionIdentifiersType',0,19,246,9,16
	.word	854
	.byte	13
	.byte	'PduR_PduLengthHandlingStrategyOfRmDestRomType',0,19,252,9,15
	.word	265
	.byte	13
	.byte	'PduR_RmGDestRomIdxOfRmDestRomType',0,19,255,9,15
	.word	265
	.byte	13
	.byte	'PduR_RmSrcRomIdxOfRmDestRomType',0,19,130,10,15
	.word	265
	.byte	13
	.byte	'PduR_RoutingTypeOfRmDestRomType',0,19,133,10,15
	.word	265
	.byte	13
	.byte	'PduR_DestHndOfRmGDestRomType',0,19,136,10,15
	.word	265
	.byte	13
	.byte	'PduR_DirectionOfRmGDestRomType',0,19,139,10,15
	.word	265
	.byte	13
	.byte	'PduR_MaxPduLengthOfRmGDestRomType',0,19,145,10,15
	.word	265
	.byte	13
	.byte	'PduR_MmRomIdxOfRmGDestRomType',0,19,148,10,15
	.word	265
	.byte	13
	.byte	'PduR_PartitionIndexOfCslOfRmGDestRomType',0,19,151,10,15
	.word	265
	.byte	13
	.byte	'PduR_RmDestRomIdxOfRmGDestRomType',0,19,157,10,15
	.word	265
	.byte	13
	.byte	'PduR_MmRomIdxOfRmSrcRomType',0,19,166,10,15
	.word	265
	.byte	13
	.byte	'PduR_PartitionIndexOfCslOfRmSrcRomType',0,19,169,10,15
	.word	265
	.byte	13
	.byte	'PduR_RmDestRomStartIdxOfRmSrcRomType',0,19,178,10,15
	.word	265
	.byte	13
	.byte	'PduR_SrcHndOfRmSrcRomType',0,19,181,10,15
	.word	265
	.byte	13
	.byte	'PduR_RmTransmitFctPtrIdxOfTx2LoType',0,19,250,10,15
	.word	265
	.byte	13
	.byte	'PduR_PartitionIndexOfCslOfTxIf2UpType',0,19,253,10,15
	.word	265
	.byte	13
	.byte	'PduR_RmGDestRomIdxOfTxIf2UpType',0,19,128,11,15
	.word	265
	.byte	13
	.byte	'PduR_TxConfirmationUsedOfTxIf2UpType',0,19,131,11,17
	.word	265
	.byte	13
	.byte	'PduR_RmTransmitFctPtrType',0,19,144,11,9
	.word	25149
	.byte	20
	.byte	'sPduR_DestApplicationManagerRomType',0,19,182,11,16,1,15
	.byte	'PduR_DestApplicationManagerRomNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_DestApplicationManagerRomType',0,19,185,11,3
	.word	26467
	.byte	20
	.byte	'sPduR_ExclusiveAreaRomType',0,19,188,11,16,8,15
	.byte	'LockOfExclusiveAreaRom',0
	.word	25100
	.byte	4,2,35,0,15
	.byte	'UnlockOfExclusiveAreaRom',0
	.word	25100
	.byte	4,2,35,4,0,13
	.byte	'PduR_ExclusiveAreaRomType',0,19,192,11,3
	.word	26603
	.byte	7
	.word	25092
	.byte	20
	.byte	'sPduR_GeneralPropertiesRomType',0,19,195,11,16,1,15
	.byte	'hasIfRoutingOfGeneralPropertiesRom',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_GeneralPropertiesRomType',0,19,198,11,3
	.word	26743
	.byte	20
	.byte	'sPduR_LockRomType',0,19,201,11,16,1,15
	.byte	'PduR_LockRomNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_LockRomType',0,19,204,11,3
	.word	26864
	.byte	20
	.byte	'sPduR_MmRomType',0,19,207,11,16,16,15
	.byte	'DestApplicationManagerRomIdxOfMmRom',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'MaskedBitsOfMmRom',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'RmGDestRomStartIdxOfMmRom',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'UpIfRxIndicationFctPtrOfMmRom',0
	.word	25187
	.byte	4,2,35,4,15
	.byte	'UpIfTxConfirmationFctPtrOfMmRom',0
	.word	25220
	.byte	4,2,35,8,15
	.byte	'LoIfTransmitFctPtrOfMmRom',0
	.word	25154
	.byte	4,2,35,12,0,13
	.byte	'PduR_MmRomType',0,19,215,11,3
	.word	26946
	.byte	7
	.word	19028
	.byte	7
	.word	18897
	.byte	7
	.word	25131
	.byte	20
	.byte	'sPduR_PartitionIdentifiersType',0,19,218,11,16,4,15
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	854
	.byte	4,2,35,0,0,13
	.byte	'PduR_PartitionIdentifiersType',0,19,221,11,3
	.word	27230
	.byte	20
	.byte	'sPduR_RmDestRomType',0,19,224,11,16,4,15
	.byte	'PduLengthHandlingStrategyOfRmDestRom',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'RmGDestRomIdxOfRmDestRom',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'RmSrcRomIdxOfRmDestRom',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'RoutingTypeOfRmDestRom',0
	.word	265
	.byte	1,2,35,3,0,13
	.byte	'PduR_RmDestRomType',0,19,230,11,3
	.word	27351
	.byte	20
	.byte	'sPduR_RmGDestRomType',0,19,233,11,16,6,15
	.byte	'DestHndOfRmGDestRom',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'DirectionOfRmGDestRom',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'MaxPduLengthOfRmGDestRom',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'MmRomIdxOfRmGDestRom',0
	.word	265
	.byte	1,2,35,3,15
	.byte	'PartitionIndexOfCslOfRmGDestRom',0
	.word	265
	.byte	1,2,35,4,15
	.byte	'RmDestRomIdxOfRmGDestRom',0
	.word	265
	.byte	1,2,35,5,0,13
	.byte	'PduR_RmGDestRomType',0,19,241,11,3
	.word	27550
	.byte	20
	.byte	'sPduR_RmSrcRomType',0,19,244,11,16,4,15
	.byte	'MmRomIdxOfRmSrcRom',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'PartitionIndexOfCslOfRmSrcRom',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'RmDestRomStartIdxOfRmSrcRom',0
	.word	265
	.byte	1,2,35,2,15
	.byte	'SrcHndOfRmSrcRom',0
	.word	265
	.byte	1,2,35,3,0,13
	.byte	'PduR_RmSrcRomType',0,19,250,11,3
	.word	27806
	.byte	20
	.byte	'sPduR_RxIf2DestType',0,19,253,11,16,1,15
	.byte	'PduR_RxIf2DestNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_RxIf2DestType',0,19,128,12,3
	.word	27989
	.byte	20
	.byte	'sPduR_SrcApplicationRomType',0,19,131,12,16,1,15
	.byte	'PduR_SrcApplicationRomNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_SrcApplicationRomType',0,19,134,12,3
	.word	28077
	.byte	20
	.byte	'sPduR_Tx2LoType',0,19,137,12,16,1,15
	.byte	'RmTransmitFctPtrIdxOfTx2Lo',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_Tx2LoType',0,19,140,12,3
	.word	28189
	.byte	20
	.byte	'sPduR_TxIf2UpType',0,19,143,12,16,4,15
	.byte	'TxConfirmationUsedOfTxIf2Up',0
	.word	265
	.byte	1,2,35,0,15
	.byte	'PartitionIndexOfCslOfTxIf2Up',0
	.word	265
	.byte	1,2,35,1,15
	.byte	'RmGDestRomIdxOfTxIf2Up',0
	.word	265
	.byte	1,2,35,2,0,13
	.byte	'PduR_TxIf2UpType',0,19,148,12,3
	.word	28272
	.byte	7
	.word	265
	.byte	13
	.byte	'PduR_InitializedPtrType',0,19,169,12,66
	.word	28430
	.byte	20
	.byte	'sPduR_PCPartitionConfigType',0,19,217,12,16,4,15
	.byte	'InitializedOfPCPartitionConfig',0
	.word	28435
	.byte	4,2,35,0,0,13
	.byte	'PduR_PCPartitionConfigType',0,19,220,12,3
	.word	28468
	.byte	7
	.word	265
	.byte	20
	.byte	'sPduR_PCConfigType',0,19,235,12,16,1,15
	.byte	'PduR_PCConfigNeverUsed',0
	.word	265
	.byte	1,2,35,0,0,13
	.byte	'PduR_PCConfigType',0,19,238,12,3
	.word	28584
	.byte	21,32
	.word	26946
	.byte	22,1,0,3
	.word	28669
	.byte	30
	.byte	'PduR_MmRom',0,19,192,13,42
	.word	28678
	.byte	1,1,21,16
	.word	27351
	.byte	22,3,0,3
	.word	28705
	.byte	30
	.byte	'PduR_RmDestRom',0,19,235,13,46
	.word	28714
	.byte	1,1,21,24
	.word	27550
	.byte	22,3,0,3
	.word	28745
	.byte	30
	.byte	'PduR_RmGDestRom',0,19,132,14,47
	.word	28754
	.byte	1,1,21,16
	.word	27806
	.byte	22,3,0,3
	.word	28786
	.byte	30
	.byte	'PduR_RmSrcRom',0,19,155,14,45
	.word	28795
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L35:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,11
	.byte	5,0,3,8,58,15,59,15,57,15,73,19,0,0,12,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,13,22,0
	.byte	3,8,58,15,59,15,57,15,73,19,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15,13,0,3,8,73,19,11,15,56,9,0,0,16
	.byte	46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,17,21,0,54,15,0,0,18,4,1,58,15,59,15,57,15,11,15,0,0
	.byte	19,40,0,3,8,28,13,0,0,20,19,1,3,8,58,15,59,15,57,15,11,15,0,0,21,1,1,11,15,73,19,0,0,22,33,0,47,15,0,0
	.byte	23,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,23,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,26,13,0,11,15,73,19,13,15,12,15,56,9,0,0,27,21,1,54,15,39,12,0,0,28,21,0,54,15,39,12
	.byte	0,0,29,21,1,73,19,54,15,39,12,0,0,30,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L36:
	.word	.L135-.L134
.L134:
	.half	3
	.word	.L137-.L136
.L136:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation',0,0
	.byte	'Det.h',0,1,0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR.h',0,0,0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_Lock.h',0,0,0,0
	.byte	'ComStack_Types.h',0,2,0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0
	.byte	'Platform_Types.h',0,2,0,0
	.byte	'Std_Types.h',0,2,0,0
	.byte	'ComStack_Cfg.h',0,3,0,0
	.byte	'Det_Cfg.h',0,3,0,0
	.byte	'Os_Types_Lcfg.h',0,3,0,0
	.byte	'Os_Hal_Os_Types.h',0,4,0,0
	.byte	'Os_Hal_OsInt.h',0,4,0,0
	.byte	'Os_Types.h',0,4,0,0
	.byte	'Can_DrvGeneralTypes.h',0,3,0,0
	.byte	'Can_Cfg.h',0,3,0,0
	.byte	'Can.h',0,5,0,0
	.byte	'CanIf_Cfg.h',0,3,0,0
	.byte	'CanIf_Types.h',0,6,0,0
	.byte	'PduR_Lcfg.h',0,3,0,0,0
.L137:
.L135:
	.sdecl	'.debug_info',debug,cluster('PduR_RmIf_RoutePdu')
	.sect	'.debug_info'
.L37:
	.word	288
	.half	3
	.word	.L38
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L40,.L39
	.byte	2
	.word	.L33
	.byte	3
	.byte	'PduR_RmIf_RoutePdu',0,1,169,7,33
	.word	.L77
	.byte	1,1,1
	.word	.L26,.L78,.L25
	.byte	4
	.byte	'rmSrcIdx',0,1,169,7,74
	.word	.L77,.L79
	.byte	4
	.byte	'info',0,1,169,7,132,1
	.word	.L80,.L81
	.byte	5
	.word	.L26,.L78
	.byte	6
	.byte	'retVal',0,1,172,7,18
	.word	.L77,.L82
	.byte	7
	.word	.L83
	.byte	6
	.byte	'rmDestIdx',0,1,176,7,28
	.word	.L77,.L87
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_RmIf_RoutePdu')
	.sect	'.debug_abbrev'
.L38:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_RmIf_RoutePdu')
	.sect	'.debug_line'
.L39:
	.word	.L139-.L138
.L138:
	.half	3
	.word	.L141-.L140
.L140:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L141:
	.byte	5,21,7,0,5,2
	.word	.L26
	.byte	3,188,7,1,5,25,9
	.half	.L84-.L26
	.byte	3,111,1,5,33,3,125,1,5,21,9
	.half	.L85-.L84
	.byte	3,20,1,5,123,9
	.half	.L124-.L85
	.byte	1,5,59,9
	.half	.L8-.L124
	.byte	3,50,1,5,20,9
	.half	.L127-.L8
	.byte	1,5,134,1,9
	.half	.L142-.L127
	.byte	3,78,1,5,80,9
	.half	.L7-.L142
	.byte	1,5,123,9
	.half	.L143-.L7
	.byte	1,5,3,7,9
	.half	.L86-.L143
	.byte	3,62,1,5,1,3,1,1,7,9
	.half	.L41-.L86
	.byte	0,1,1
.L139:
	.sdecl	'.debug_ranges',debug,cluster('PduR_RmIf_RoutePdu')
	.sect	'.debug_ranges'
.L40:
	.word	-1,.L26,0,.L41-.L26,0,0
.L83:
	.word	-1,.L26,0,.L84-.L26,.L85-.L26,.L86-.L26,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.debug_info'
.L42:
	.word	297
	.half	3
	.word	.L43
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L45,.L44
	.byte	2
	.word	.L33
	.byte	3
	.byte	'PduR_RmIf_DispatchDestPdu',0,1,192,8,33
	.word	.L77
	.byte	1,1,1
	.word	.L32,.L88,.L31
	.byte	4
	.byte	'rmDestRomIdx',0,1,192,8,82
	.word	.L77,.L89
	.byte	4
	.byte	'info',0,1,192,8,144,1
	.word	.L80,.L90
	.byte	5
	.word	.L32,.L88
	.byte	6
	.byte	'retVal',0,1,194,8,18
	.word	.L77,.L91
	.byte	6
	.byte	'rmGDestRomIdx',0,1,195,8,37
	.word	.L77,.L92
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.debug_line'
.L44:
	.word	.L145-.L144
.L144:
	.half	3
	.word	.L147-.L146
.L146:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L147:
	.byte	5,25,7,0,5,2
	.word	.L32
	.byte	3,193,8,1,5,11,9
	.half	.L130-.L32
	.byte	3,3,1,5,53,9
	.half	.L148-.L130
	.byte	3,126,1,5,10,9
	.half	.L133-.L148
	.byte	3,5,1,7,9
	.half	.L149-.L133
	.byte	3,6,1,5,1,7,9
	.half	.L150-.L149
	.byte	3,25,1,5,91,7,9
	.half	.L12-.L150
	.byte	3,98,1,5,7,9
	.half	.L151-.L12
	.byte	1,5,91,9
	.half	.L152-.L151
	.byte	1,5,135,1,9
	.half	.L132-.L152
	.byte	1,5,14,9
	.half	.L131-.L132
	.byte	3,1,1,5,1,3,29,1,5,77,7,9
	.half	.L13-.L131
	.byte	3,107,1,5,1,9
	.half	.L46-.L13
	.byte	3,21,0,1,1
.L145:
	.sdecl	'.debug_ranges',debug,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.debug_ranges'
.L45:
	.word	-1,.L32,0,.L46-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.debug_info'
.L47:
	.word	310
	.half	3
	.word	.L48
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L50,.L49
	.byte	2
	.word	.L33
	.byte	3
	.byte	'PduR_RmIf_MultipleSourceHandler_TxConfirmation',0,1,199,4,23,1,1,1
	.word	.L24,.L93,.L23
	.byte	4
	.byte	'rmGDestRomIdx',0,1,199,4,102
	.word	.L77,.L94
	.byte	5
	.word	.L24,.L93
	.byte	6
	.byte	'rmDestRomIdx',0,1,201,4,26
	.word	.L77,.L95
	.byte	5
	.word	.L96,.L3
	.byte	6
	.byte	'rmSrcRomIdx',0,1,212,4,39
	.word	.L77,.L97
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.debug_abbrev'
.L48:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.debug_line'
.L49:
	.word	.L154-.L153
.L153:
	.half	3
	.word	.L156-.L155
.L155:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L156:
	.byte	5,23,7,0,5,2
	.word	.L24
	.byte	3,198,4,1,5,44,9
	.half	.L119-.L24
	.byte	3,5,1,5,3,9
	.half	.L120-.L119
	.byte	1,5,53,7,9
	.half	.L96-.L120
	.byte	3,8,1,5,10,9
	.half	.L122-.L96
	.byte	3,3,1,5,7,9
	.half	.L123-.L122
	.byte	1,5,17,7,9
	.half	.L157-.L123
	.byte	3,2,1,5,9,9
	.half	.L158-.L157
	.byte	1,5,13,7,9
	.half	.L159-.L158
	.byte	3,5,1,5,95,9
	.half	.L160-.L159
	.byte	1,5,5,9
	.half	.L3-.L160
	.byte	3,41,1,5,1,9
	.half	.L4-.L3
	.byte	3,2,1,7,9
	.half	.L51-.L4
	.byte	0,1,1
.L154:
	.sdecl	'.debug_ranges',debug,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.debug_ranges'
.L50:
	.word	-1,.L24,0,.L51-.L24,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.debug_info'
.L52:
	.word	262
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L33
	.byte	3
	.byte	'PduR_RmIf_ProcessDestPdu',0,1,137,8,33
	.word	.L77
	.byte	1,1,1
	.word	.L28,.L98,.L27
	.byte	4
	.byte	'rmDestIdx',0,1,137,8,81
	.word	.L77,.L99
	.byte	4
	.byte	'info',0,1,137,8,140,1
	.word	.L80,.L100
	.byte	5
	.word	.L101
	.byte	6
	.byte	'retVal',0,1,139,8,18
	.word	.L77,.L102
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.debug_line'
.L54:
	.word	.L162-.L161
.L161:
	.half	3
	.word	.L164-.L163
.L163:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L164:
	.byte	5,25,7,0,5,2
	.word	.L28
	.byte	3,138,8,1,5,11,9
	.half	.L129-.L28
	.byte	3,2,1,5,3,9
	.half	.L165-.L129
	.byte	1,5,55,7,9
	.half	.L166-.L165
	.byte	3,18,1,5,1,7,9
	.half	.L10-.L166
	.byte	3,21,1,7,9
	.half	.L56-.L10
	.byte	0,1,1
.L162:
	.sdecl	'.debug_ranges',debug,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L28,0,.L56-.L28,0,0
.L101:
	.word	-1,.L28,0,.L98-.L28,-1,.L30,0,.L71-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.debug_info'
.L57:
	.word	339
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L33
	.byte	3
	.byte	'PduR_RmIf_MultipleSourceHandler_Transmit',0,1,166,3,46
	.word	.L77
	.byte	1,1
	.word	.L18,.L103,.L17
	.byte	4
	.byte	'rmDestRomIdx',0,1,166,3,110
	.word	.L77,.L104
	.byte	4
	.byte	'info',0,1,166,3,172,1
	.word	.L80,.L105
	.byte	4
	.byte	'useLock',0,1,166,3,186,1
	.word	.L77,.L106
	.byte	5
	.word	.L18,.L103
	.byte	6
	.byte	'retVal',0,1,168,3,18
	.word	.L77,.L107
	.byte	7
	.word	.L108
	.byte	6
	.byte	'rmGDestRomIdx',0,1,171,3,39
	.word	.L77,.L111
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.debug_line'
.L59:
	.word	.L168-.L167
.L167:
	.half	3
	.word	.L170-.L169
.L169:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L170:
	.byte	5,46,7,0,5,2
	.word	.L18
	.byte	3,165,3,1,5,38,9
	.half	.L115-.L18
	.byte	3,3,1,5,55,9
	.half	.L109-.L115
	.byte	3,2,1,5,96,9
	.half	.L113-.L109
	.byte	3,30,1,5,16,9
	.half	.L114-.L113
	.byte	1,5,96,9
	.half	.L171-.L114
	.byte	1,5,140,1,9
	.half	.L172-.L171
	.byte	1,5,14,9
	.half	.L117-.L172
	.byte	1,5,40,9
	.half	.L110-.L117
	.byte	3,3,1,5,3,9
	.half	.L118-.L110
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L61-.L118
	.byte	0,1,1
.L168:
	.sdecl	'.debug_ranges',debug,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L18,0,.L61-.L18,0,0
.L108:
	.word	-1,.L18,.L109-.L18,.L110-.L18,-1,.L20,0,.L76-.L20,-1,.L22,0,.L66-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L62:
	.word	173
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L33
	.byte	3
	.byte	'.cocofun_1',0,1,166,3,46,1
	.word	.L22,.L66,.L21
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L64:
	.word	.L174-.L173
.L173:
	.half	3
	.word	.L176-.L175
.L175:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L176:
	.byte	5,96,7,0,5,2
	.word	.L22
	.byte	3,200,3,1,5,16,9
	.half	.L177-.L22
	.byte	1,9
	.half	.L66-.L177
	.byte	0,1,1,5,91,0,5,2
	.word	.L22
	.byte	3,200,8,1,5,7,9
	.half	.L177-.L22
	.byte	1,5,16,9
	.half	.L178-.L177
	.byte	3,128,123,1,7,9
	.half	.L66-.L178
	.byte	0,1,1
.L174:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L22,0,.L66-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L67:
	.word	173
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L33
	.byte	3
	.byte	'.cocofun_2',0,1,137,8,33,1
	.word	.L30,.L71,.L29
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L69:
	.word	.L180-.L179
.L179:
	.half	3
	.word	.L182-.L181
.L181:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L182:
	.byte	5,25,7,0,5,2
	.word	.L30
	.byte	3,138,8,1,5,11,3,2,1,9
	.half	.L71-.L30
	.byte	0,1,1,5,25,0,5,2
	.word	.L30
	.byte	3,193,8,1,5,11,3,75,1,5,53,9
	.half	.L183-.L30
	.byte	3,54,1,5,11,9
	.half	.L184-.L183
	.byte	3,74,1,7,9
	.half	.L71-.L184
	.byte	0,1,1
.L180:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L30,0,.L71-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L72:
	.word	173
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L33
	.byte	3
	.byte	'.cocofun_3',0,1,166,3,46,1
	.word	.L20,.L76,.L19
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L74:
	.word	.L186-.L185
.L185:
	.half	3
	.word	.L188-.L187
.L187:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmIf.c',0,0,0,0,0
.L188:
	.byte	5,55,7,0,5,2
	.word	.L20
	.byte	3,170,3,1,9
	.half	.L76-.L20
	.byte	0,1,1,5,53,0,5,2
	.word	.L20
	.byte	3,211,4,1,5,55,9
	.half	.L189-.L20
	.byte	3,215,126,1,7,9
	.half	.L76-.L189
	.byte	0,1,1,5,11,0,5,2
	.word	.L20
	.byte	3,140,8,1,5,55,9
	.half	.L189-.L20
	.byte	3,158,123,1,7,9
	.half	.L76-.L189
	.byte	0,1,1,5,53,0,5,2
	.word	.L20
	.byte	3,194,8,1,5,55,9
	.half	.L189-.L20
	.byte	3,232,122,1,7,9
	.half	.L76-.L189
	.byte	0,1,1
.L186:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L20,0,.L76-.L20,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L21:
	.word	-1,.L22,0,.L66-.L22
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L29:
	.word	-1,.L30,0,.L71-.L30
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L19:
	.word	-1,.L20,0,.L76-.L20
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L32,0,.L88-.L32
	.half	2
	.byte	138,0
	.word	0,0
.L90:
	.word	-1,.L32,.L20-.L32,.L76-.L32
	.half	1
	.byte	100
	.word	.L30-.L32,.L71-.L32
	.half	1
	.byte	100
	.word	.L22-.L32,.L66-.L32
	.half	1
	.byte	100
	.word	.L130-.L32,.L131-.L32
	.half	1
	.byte	100
	.word	.L13-.L32,.L88-.L32
	.half	1
	.byte	100
	.word	0,0
.L91:
	.word	-1,.L32,.L20-.L32,.L76-.L32
	.half	1
	.byte	82
	.word	.L30-.L32,.L71-.L32
	.half	1
	.byte	82
	.word	.L22-.L32,.L66-.L32
	.half	1
	.byte	82
	.word	.L130-.L32,.L131-.L32
	.half	1
	.byte	82
	.word	.L13-.L32,.L88-.L32
	.half	1
	.byte	82
	.word	0,0
.L89:
	.word	-1,.L32,.L20-.L32,.L76-.L32
	.half	1
	.byte	84
	.word	.L30-.L32,.L71-.L32
	.half	1
	.byte	84
	.word	.L22-.L32,.L66-.L32
	.half	1
	.byte	84
	.word	.L130-.L32,.L132-.L32
	.half	1
	.byte	84
	.word	.L13-.L32,.L88-.L32
	.half	1
	.byte	84
	.word	0,0
.L92:
	.word	-1,.L32,.L22-.L32,.L66-.L32
	.half	5
	.byte	144,32,157,32,0
	.word	.L133-.L32,.L131-.L32
	.half	5
	.byte	144,32,157,32,0
	.word	.L13-.L32,.L88-.L32
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.debug_loc'
.L17:
	.word	-1,.L18,0,.L103-.L18
	.half	2
	.byte	138,0
	.word	0,0
.L105:
	.word	-1,.L18,0,.L112-.L18
	.half	1
	.byte	100
	.word	.L20-.L18,.L76-.L18
	.half	1
	.byte	108
	.word	.L22-.L18,.L66-.L18
	.half	1
	.byte	108
	.word	.L115-.L18,.L103-.L18
	.half	1
	.byte	108
	.word	.L116-.L18,.L117-.L18
	.half	1
	.byte	100
	.word	0,0
.L107:
	.word	-1,.L18,.L117-.L18,.L118-.L18
	.half	1
	.byte	82
	.word	.L110-.L18,.L103-.L18
	.half	1
	.byte	95
	.word	0,0
.L104:
	.word	-1,.L18,0,.L112-.L18
	.half	1
	.byte	84
	.word	.L20-.L18,.L76-.L18
	.half	1
	.byte	88
	.word	.L22-.L18,.L66-.L18
	.half	1
	.byte	88
	.word	.L115-.L18,.L103-.L18
	.half	1
	.byte	88
	.word	0,0
.L111:
	.word	-1,.L18,.L113-.L18,.L114-.L18
	.half	1
	.byte	95
	.word	0,0
.L106:
	.word	-1,.L18,0,.L112-.L18
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.debug_loc'
.L23:
	.word	-1,.L24,0,.L119-.L24
	.half	2
	.byte	138,0
	.word	.L119-.L24,.L3-.L24
	.half	2
	.byte	138,8
	.word	.L3-.L24,.L3-.L24
	.half	2
	.byte	138,0
	.word	.L3-.L24,.L5-.L24
	.half	2
	.byte	138,8
	.word	.L5-.L24,.L5-.L24
	.half	2
	.byte	138,0
	.word	.L5-.L24,.L93-.L24
	.half	2
	.byte	138,8
	.word	.L93-.L24,.L93-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L95:
	.word	-1,.L24,.L20-.L24,.L76-.L24
	.half	2
	.byte	145,120
	.word	0,.L93-.L24
	.half	2
	.byte	145,120
	.word	0,0
.L94:
	.word	-1,.L24,0,.L120-.L24
	.half	1
	.byte	84
	.word	.L20-.L24,.L76-.L24
	.half	1
	.byte	88
	.word	.L121-.L24,.L93-.L24
	.half	1
	.byte	88
	.word	0,0
.L97:
	.word	-1,.L24,.L122-.L24,.L123-.L24
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.debug_loc'
.L27:
	.word	-1,.L28,0,.L98-.L28
	.half	2
	.byte	138,0
	.word	0,0
.L100:
	.word	-1,.L28,.L128-.L28,.L76-.L28
	.half	1
	.byte	100
	.word	.L30-.L28,.L71-.L28
	.half	1
	.byte	100
	.word	.L129-.L28,.L98-.L28
	.half	1
	.byte	100
	.word	0,0
.L102:
	.word	-1,.L28,.L128-.L28,.L76-.L28
	.half	1
	.byte	82
	.word	.L30-.L28,.L71-.L28
	.half	1
	.byte	82
	.word	.L129-.L28,.L98-.L28
	.half	1
	.byte	82
	.word	0,0
.L99:
	.word	-1,.L28,.L128-.L28,.L76-.L28
	.half	1
	.byte	84
	.word	.L30-.L28,.L71-.L28
	.half	1
	.byte	84
	.word	.L129-.L28,.L98-.L28
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_RmIf_RoutePdu')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L26,0,.L78-.L26
	.half	2
	.byte	138,0
	.word	0,0
.L81:
	.word	-1,.L26,0,.L8-.L26
	.half	1
	.byte	100
	.word	.L85-.L26,.L78-.L26
	.half	1
	.byte	108
	.word	.L126-.L26,.L127-.L26
	.half	1
	.byte	100
	.word	0,0
.L82:
	.word	-1,.L26,.L85-.L26,.L78-.L26
	.half	1
	.byte	88
	.word	0,0
.L87:
	.word	-1,.L26,.L124-.L26,.L125-.L26
	.half	1
	.byte	89
	.word	.L126-.L26,.L127-.L26
	.half	1
	.byte	84
	.word	.L7-.L26,.L78-.L26
	.half	1
	.byte	89
	.word	0,0
.L79:
	.word	-1,.L26,0,.L8-.L26
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L190:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('PduR_RmIf_MultipleSourceHandler_Transmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L190,.L18,.L103-.L18
	.sdecl	'.debug_frame',debug,cluster('PduR_RmIf_MultipleSourceHandler_TxConfirmation')
	.sect	'.debug_frame'
	.word	68
	.word	.L190,.L24,.L93-.L24
	.byte	4
	.word	(.L119-.L24)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L3-.L119)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L5-.L3)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L93-.L5)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('PduR_RmIf_RoutePdu')
	.sect	'.debug_frame'
	.word	12
	.word	.L190,.L26,.L78-.L26
	.sdecl	'.debug_frame',debug,cluster('PduR_RmIf_ProcessDestPdu')
	.sect	'.debug_frame'
	.word	12
	.word	.L190,.L28,.L98-.L28
	.sdecl	'.debug_frame',debug,cluster('PduR_RmIf_DispatchDestPdu')
	.sect	'.debug_frame'
	.word	12
	.word	.L190,.L32,.L88-.L32
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L191:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L191,.L20,.L76-.L20
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L191,.L22,.L66-.L22
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L191,.L30,.L71-.L30
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\PduR\Implementation\PduR_RmIf.c	  1128  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1129  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1130  #if ((PDUR_EXISTS_DISCARD_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON) || (PDUR_EXISTS_SHORTEN_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1131  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1132   * PduR_RmIf_CheckInfoPointer
; ..\component\PduR\Implementation\PduR_RmIf.c	  1133   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1134  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1135   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1136   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1137   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1138   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1139  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_CheckInfoPointer(P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, uint8 apiId)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1140  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1141    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1142    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1143  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1144    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1145  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1146    /* Check parameter 'info' */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1147    if(info == NULL_PTR)  /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1148    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1149      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1150    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1151    else if(info->SduDataPtr == NULL_PTR) /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1152    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1153      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1154    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1155    else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1156  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1157    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1158      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1159    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1160    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1161  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1162    if(errorId != PDUR_E_NO_ERROR)        /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1163    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1164      PduR_Det_ReportError(apiId, errorId);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1165    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1166  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1167    PDUR_DUMMY_STATEMENT(errorId);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1168    PDUR_DUMMY_STATEMENT(apiId);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1169  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1170    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1171  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1172  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1173  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1174  #if (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1175  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1176   * PduR_RmIf_ProcessBufferedRouting
; ..\component\PduR\Implementation\PduR_RmIf.c	  1177   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1178  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1179   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1180   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1181   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1182   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1183   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1184   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1185  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_ProcessBufferedRouting(PduR_RmSrcRomIterType rmSrcIdx, PduR_RmDestRomIterType rmDestIdx, PduR_RmGDestRomIterType rmGDestRomIdx,
; ..\component\PduR\Implementation\PduR_RmIf.c	  1186                                                                                P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1187  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1188    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1189  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1190  # if (PDUR_TRIGGERTRANSMITSUPPORTEDOFRMSRCROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1191    if(PduR_IsTriggerTransmitSupportedOfRmSrcRom(rmSrcIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1192    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1193      uint8 sduData[PDUR_MAX_TRIGGER_TRANSMIT_PDU_SIZE] = { 0u };
; ..\component\PduR\Implementation\PduR_RmIf.c	  1194      PduInfoType pduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1195      pduInfo.SduDataPtr = sduData;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1196      pduInfo.SduLength = PduR_GetMaxPduLengthOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1197  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1198      retVal &= PduR_GetUpIfTriggerTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), &pduInfo);        /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1199      PduR_RmIf_Forward2Buffer(rmDestIdx, &pduInfo);  /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1200    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1201    else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1202  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1203    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1204      PduR_RmIf_Forward2Buffer(rmDestIdx, info);      /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1205      retVal &= E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1206    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1207  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1208  # if ((PDUR_EXISTS_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM == STD_ON) && (PDUR_TXCONFIRMATIONSUPPORTEDOFRMSRCROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1209    if(PduR_GetPduRDestPduProcessingOfRmGDestRom(rmGDestRomIdx) == PDUR_DEFERRED_PDURDESTPDUPROCESSINGOFRMGDESTROM)   /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1210    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1211      /* Call upper layer confirmation immediately */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1212      if(PduR_IsTxConfirmationSupportedOfRmSrcRom(rmSrcIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1213      {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1214        PduR_GetUpIfTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx));       /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1215      }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1216    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1217  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1218  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1219    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1220    PDUR_DUMMY_STATEMENT(rmGDestRomIdx);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1221  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1222    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1223  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1224  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1225  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1226  #if (PDUR_EXISTS_TRIGGER_TRANSMIT_QUEUEDATAPROVISIONTYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1227  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1228   * PduR_RmIf_TriggerTransmit
; ..\component\PduR\Implementation\PduR_RmIf.c	  1229   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1230  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1231   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1232   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1233   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1234   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1235   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1236   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1237  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmIf_TriggerTransmit(PduR_RmDestRomIterType rmDestIdx, CONSTP2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1238  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1239    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1240    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1241    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1242  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1243    /* Check parameter 'info' */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1244    if(info == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1245    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1246      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1247    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1248    else if(info->SduDataPtr == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1249    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1250      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1251    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1252    else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1253  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1254    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1255      PduR_Lock_LockRoutingPathByDestPdu(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1256      {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1257        PduR_RmGDestRomIterType rmGDestIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1258        PduInfoType queuedPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1259        PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1260  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1261        if(PduR_QAL_Get(rmGDestIdx, &rmDestRomIdx, &queuedPduInfo) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1262        {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1263          if(info->SduLength >= queuedPduInfo.SduLength)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1264          {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1265            info->SduLength = queuedPduInfo.SduLength; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1266            PduR_Core_MemCpyRamToRam(info->SduDataPtr, queuedPduInfo.SduDataPtr, queuedPduInfo.SduLength);  /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */ /* SBSW_PDUR_MEM_CPY_FIFOMGR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1267            retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1268          }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1269        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1270      }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1271      PduR_Lock_UnlockRoutingPathByDestPdu(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1272    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1273    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1274  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1275    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1276    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1277      PduR_Det_ReportError(PDUR_FCT_RMIF_TXTT, errorId);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1278    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1279  # else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1280    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1281  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1282    return retVal;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1283  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1284  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1285  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1286  #if(PDUR_HASIFTXFIFOOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1287  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1288   * PduR_RmIf_TxConfirmation
; ..\component\PduR\Implementation\PduR_RmIf.c	  1289   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1290  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1291   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1292   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1293   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1294   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1295  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmIf_TxConfirmation(PduR_RmGDestRomIdxOfTxIf2UpType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1296  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1297    PduR_Lock_LockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1298    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1299      switch (PduR_GetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx)))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1300      {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1301        case PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1302          PduR_RmIf_TxConfirmation_StateHandler_RM_TX_IDLE((PduR_RmGDestRomIterType) rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1303          break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1304        case PDUR_RM_TX_ACTIVE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1305          PduR_RmIf_TxConfirmation_StateHandler_RM_TX_ACTIVE((PduR_RmGDestRomIterType) rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1306          break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1307        default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1308          /* If state is out-of-bounds: do nothing. */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1309          break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1310      }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1311    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1312    PduR_Lock_UnlockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1313  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1314  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1315  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1316  #if(PDUR_HASIFTXFIFOOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1317  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1318   * PduR_RmIf_TxConfirmation_StateHandler_RM_TX_ACTIVE
; ..\component\PduR\Implementation\PduR_RmIf.c	  1319   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1320  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1321   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1322   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1323   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1324   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1325   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1326   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1327   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1328   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1329  FUNC(void, PDUR_CODE) PduR_RmIf_TxConfirmation_StateHandler_RM_TX_ACTIVE(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1330  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1331    PduInfoType destPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1332    PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1333  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1334    PduR_QAL_Remove(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1335  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1336    if(PduR_QAL_Get(rmGDestRomIdx, &rmDestRomIdx, &destPduInfo) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1337    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1338      if(E_OK != PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, &destPduInfo, TRUE))    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1339      {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1340        PduR_QAL_Flush(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1341        PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx));      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1342        PduR_Det_ReportError(PDUR_FCT_RMIF_TXCONF, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1343      }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1344    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1345    else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1346    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1347      PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx));      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1348    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1349  }       /* PRQA S 6050 */ /* MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1350  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1351  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1352  #if(PDUR_HASIFTXFIFOOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1353  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1354   * PduR_RmIf_TxConfirmation_StateHandler_RM_TX_IDLE
; ..\component\PduR\Implementation\PduR_RmIf.c	  1355   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1356  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1357   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1358   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1359   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1360   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1361  FUNC(void, PDUR_CODE) PduR_RmIf_TxConfirmation_StateHandler_RM_TX_IDLE(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1362  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1363    PduR_QAL_Flush(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1364    PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx));      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1365  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1366  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1367    PduR_Rm_MultipleSourceHandler_Reset(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1368  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1369    PduR_Det_ReportError(PDUR_FCT_RMIF_TXCONF, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1370  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1371  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1372  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1373  #if(PDUR_EXISTS_SHORTEN_PDULENGTHHANDLINGSTRATEGYOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1374  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1375   * PduR_RmIf_TruncateDlc
; ..\component\PduR\Implementation\PduR_RmIf.c	  1376   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1377  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1378   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1379   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1380   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1381   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1382  LOCAL_INLINE FUNC(PduLengthType, PDUR_CODE) PduR_RmIf_TruncateDlc(PduR_RmGDestRomIterType rmGDest, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1383  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1384    /* if the length is shorter or equal use the provided length */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1385    PduLengthType dataLengthcopy = info->SduLength;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1386    /* MaxPduLength of no buffer routings is set to the maximum allowed value for this datatype, thus disabling this check */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1387    if(info->SduLength > PduR_GetMaxPduLengthOfRmGDestRom(rmGDest))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1388    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1389      /* if the provided length is greater than the maximum buffer size the value is truncated to this value. */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1390      dataLengthcopy = PduR_GetMaxPduLengthOfRmGDestRom(rmGDest);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1391    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1392    PDUR_DUMMY_STATEMENT(rmGDest);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1393    return dataLengthcopy;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1394  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1395  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1396  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1397  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1398   * PduR_QAL_Put
; ..\component\PduR\Implementation\PduR_RmIf.c	  1399   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1400  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1401   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1402   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1403   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1404   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1405  #if ((PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) || (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1406  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_QAL_Put(PduR_RmGDestRomIterType rmGDestRomIdx, PduR_RmDestRomIterType rmDestRomIdx, PduLengthType pduLength, SduDataPtrType sduDataPtr)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1407  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1408    return PduR_GetPutFctPtrOfQueueFctPtrRom(PduR_GetQueueFctPtrRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx))) (rmGDestRomIdx, rmDestRomIdx, pduLength, sduDataPtr); /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1409  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1410  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1411  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1412  #if ((PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) || (PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1413  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1414   * PduR_QAL_Get
; ..\component\PduR\Implementation\PduR_RmIf.c	  1415   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1416  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1417   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1418   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1419   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1420   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1421  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_QAL_Get(PduR_RmGDestRomIterType rmGDestRomIdx, P2VAR(PduR_RmDestRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1422  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1423    return PduR_GetGetFctPtrOfQueueFctPtrRom(PduR_GetQueueFctPtrRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx))) (rmGDestRomIdx, rmDestRomIdx, info); /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1424  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1425  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1426  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1427  #if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1428  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1429   * PduR_QAL_Remove
; ..\component\PduR\Implementation\PduR_RmIf.c	  1430   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1431  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1432   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1433   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1434   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1435   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1436  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_QAL_Remove(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1437  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1438    PduR_GetRemoveFctPtrOfQueueFctPtrRom(PduR_GetQueueFctPtrRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx))) (rmGDestRomIdx); /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1439  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1440  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1441  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1442  #if ((PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) && (PDUR_DEFERREDEVENTCACHEROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1443  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1444   * PduR_QAL_GetFillLevel
; ..\component\PduR\Implementation\PduR_RmIf.c	  1445   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1446  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1447   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1448   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1449   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1450   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1451  LOCAL_INLINE FUNC(uint16, PDUR_CODE) PduR_QAL_GetFillLevel(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1452  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1453    return PduR_GetGetFillLevelFctPtrOfQueueFctPtrRom(PduR_GetQueueFctPtrRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx))) (rmGDestRomIdx); /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1454  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1455  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1456  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1457  #if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1458  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1459   * PduR_QAL_Flush
; ..\component\PduR\Implementation\PduR_RmIf.c	  1460   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1461  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1462   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1463   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1464   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1465   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1466  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_QAL_Flush(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1467  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1468    PduR_GetFlushFctPtrOfQueueFctPtrRom(PduR_GetQueueFctPtrRomIdxOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx))) (rmGDestRomIdx); /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1469  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1470  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1471  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1472  #if((PDUR_MAIN_FUNCTION == STD_ON) && (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1473  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1474   * PduR_RmIf_MainFunction
; ..\component\PduR\Implementation\PduR_RmIf.c	  1475   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1476  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1477   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1478   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1479   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1480   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1481   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1482   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1483   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1484   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1485  FUNC(void, PDUR_CODE) PduR_RmIf_MainFunction(PduR_RmGDestRomIterType rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1486  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1487    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1488  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1489    /* #10 If Pdu is a deferred IF-Pdu and processing is required */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1490    if(PduR_IsRmBufferedIfPropertiesRomUsedOfRmGDestRom(rmGDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1491        && (PduR_GetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), memIdx) == PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM))      /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1492    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1493      PduR_Lock_LockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1494      {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1495        switch (PduR_GetDirectionOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1496        {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1497  # if(PDUR_EXISTS_TX_DIRECTIONOFRMGDESTROM == STD_ON)    /* COV_PDUR_VAR_NO_RX_ONLY_CONFIG */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1498            /* #20 If direction of global dest Pdu is TX */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1499          case PDUR_TX_DIRECTIONOFRMGDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1500          {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1501            PduInfoType destPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1502            PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1503  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1504            /* #30 Get buffered PduInfo and trigger the transmission on the destination buses */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1505            if(PduR_QAL_Get(rmGDestRomIdx, &rmDestRomIdx, &destPduInfo) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1506            {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1507              Std_ReturnType retValTransmit = E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1508  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1509  #  if(PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1510              if(PduR_GetQueueTypeOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), memIdx) == PDUR_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM)      /* COV_PDUR_FEATURE_ALWAYS_TRUE */ /* PRQA S 2995, 2996, 2991 */ /* MD_PduR_2995_2996, MD_PduR_2995_2996, MD_PduR_2991 */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1511              {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1512                retValTransmit = PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, &destPduInfo, FALSE);     /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1513                PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_ACTIVE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1514                if(retValTransmit != E_OK)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1515                {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1516                  PduR_Det_ReportError(PDUR_FCT_MAINFUNCTION_TX, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1517                  PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1518                }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1519              }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1520  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1521  #  if((PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON) && (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1522              else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1523  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1524  #  if (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1525              {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1526                retValTransmit = PduR_RmIf_MultipleSourceHandler_Transmit(rmDestRomIdx, &destPduInfo, TRUE);      /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */ /* PRQA S 2880 */ /* MD_PduR_2880 */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1527                /* #40 Reset routing if transmit failed and release the TxBuffer */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1528                if(retValTransmit == E_OK)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1529                {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1530                  PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_ACTIVE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1531                }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1532                else
; ..\component\PduR\Implementation\PduR_RmIf.c	  1533                {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1534                  PduR_QAL_Flush(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1535                  PduR_Det_ReportError(PDUR_FCT_MAINFUNCTION_TX, PDUR_E_PDU_INSTANCES_LOST);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1536                  PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestRomIdx), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1537                }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1538              }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1539  #  endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1540            }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1541            break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1542          }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1543  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1544  # if((PDUR_EXISTS_RX_DIRECTIONOFRMGDESTROM == STD_ON) && (PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1545            /* #50 If direction of global dest Pdu is RX, get buffered PduInfo and call upper layer IF Rx Indication function */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1546          case PDUR_RX_DIRECTIONOFRMGDESTROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1547          {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1548            PduInfoType destPduInfo;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1549            PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1550  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1551            while(PduR_QAL_Get(rmGDestRomIdx, &rmDestRomIdx, &destPduInfo) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1552            {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1553              PduR_GetUpIfRxIndicationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), &destPduInfo);        /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1554              PduR_QAL_Remove(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1555            }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1556            break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1557          }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1558  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1559          default:       /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1560            /* Will never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1561            break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1562        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1563      }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1564      PduR_Lock_UnlockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1565    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1566  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1567  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1568  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1569  #if ((PDUR_RPGROM == STD_ON) && (PDUR_EXISTS_IF_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1570  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1571   * PduR_RmIf_DisableRoutingAction
; ..\component\PduR\Implementation\PduR_RmIf.c	  1572   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1573  /*!
; ..\component\PduR\Implementation\PduR_RmIf.c	  1574   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmIf.c	  1575   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1576   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1577   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1578   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1579   *
; ..\component\PduR\Implementation\PduR_RmIf.c	  1580   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmIf.c	  1581  FUNC(void, PDUR_CODE) PduR_RmIf_DisableRoutingAction(PduR_RmDestRomIterType rmDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1582  {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1583    PduR_RmGDestRomIterType rmGDestIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1584    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1585  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1586    switch (PduR_GetQueueTypeOfRmBufferedIfPropertiesRom(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestIdx), memIdx))
; ..\component\PduR\Implementation\PduR_RmIf.c	  1587    {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1588  # if(PDUR_EXISTS_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1589      case PDUR_SINGLE_BUFFER_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1590        {
; ..\component\PduR\Implementation\PduR_RmIf.c	  1591          PDUR_DUMMY_STATEMENT(rmGDestIdx);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1592        }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1593        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1594  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1595  # if(PDUR_EXISTS_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1596      case PDUR_FIFO_QUEUETYPEOFRMBUFFEREDIFPROPERTIESROM:
; ..\component\PduR\Implementation\PduR_RmIf.c	  1597        PduR_QAL_Flush(rmGDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1598        PduR_SetIfSmStateOfRmBufferedIfPropertiesRam(PduR_GetRmBufferedIfPropertiesRomIdxOfRmGDestRom(rmGDestIdx), PDUR_RM_TX_IDLE_IFSMSTATEOFRMBUFFEREDIFPROPERTIESRAM, memIdx);    /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1599        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1600  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1601      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1602        /* Nothing to do: This should never be reached */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1603        break;
; ..\component\PduR\Implementation\PduR_RmIf.c	  1604    }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1605  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1606  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmIf.c	  1607    PduR_Rm_MultipleSourceHandler_Reset(rmGDestIdx);
; ..\component\PduR\Implementation\PduR_RmIf.c	  1608  # endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1609  }
; ..\component\PduR\Implementation\PduR_RmIf.c	  1610  #endif
; ..\component\PduR\Implementation\PduR_RmIf.c	  1611  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1612  #define PDUR_STOP_SEC_CODE
; ..\component\PduR\Implementation\PduR_RmIf.c	  1613  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_RmIf.c	  1614  
; ..\component\PduR\Implementation\PduR_RmIf.c	  1615  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmIf.c	  1616   *  END OF FILE: PduR_RmIf.c
; ..\component\PduR\Implementation\PduR_RmIf.c	  1617   *********************************************************************************************************************/

	; Module end
