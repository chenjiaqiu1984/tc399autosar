	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\PduR\\Implementation\\.PduR_McQ.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\PduR\\Implementation\\PduR_McQ.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\PduR\\Implementation\\PduR_McQ.src ..\\component\\PduR\\Implementation\\PduR_McQ.c"
	.compiler_name		"ctc"
	;source	'..\\component\\PduR\\Implementation\\PduR_McQ.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	28224
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\component\\PduR\\Implementation\\PduR_McQ.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'int',0,4,5,3
	.word	137
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	144
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	186
	.byte	7
	.word	186
	.byte	8
	.byte	'__cmpswapw',0
	.word	202
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	207
	.byte	9
	.byte	'value',0
	.word	186
	.byte	9
	.byte	'compare',0
	.word	186
	.byte	0,10,1,7
	.word	264
	.byte	11
	.byte	'__codeptr',0,1,1,1
	.word	266
	.byte	2
	.byte	'unsigned char',0,1,8,11
	.byte	'boolean',0,2,101,31
	.word	289
	.byte	11
	.byte	'uint8',0,2,104,31
	.word	289
	.byte	2
	.byte	'short int',0,2,5,11
	.byte	'sint16',0,2,105,31
	.word	336
	.byte	2
	.byte	'unsigned short int',0,2,7,11
	.byte	'uint16',0,2,106,31
	.word	364
	.byte	2
	.byte	'long int',0,4,5,11
	.byte	'sint32',0,2,107,31
	.word	401
	.byte	2
	.byte	'unsigned long int',0,4,7,11
	.byte	'uint32',0,2,108,31
	.word	428
	.byte	11
	.byte	'uint8_least',0,2,111,31
	.word	289
	.byte	11
	.byte	'uint32_least',0,2,115,31
	.word	428
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,2,121,30
	.word	505
	.byte	11
	.byte	'StatusType',0,3,127,23
	.word	289
	.byte	11
	.byte	'Std_ReturnType',0,3,132,1,15
	.word	289
	.byte	12,3,134,1,9,8,13
	.byte	'vendorID',0
	.word	364
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	364
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	289
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	289
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	289
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,3,141,1,3
	.word	589
	.byte	11
	.byte	'PduIdType',0,4,63,15
	.word	289
	.byte	11
	.byte	'PduLengthType',0,4,65,15
	.word	289
	.byte	7
	.word	289
	.byte	11
	.byte	'SduDataPtrType',0,5,196,1,54
	.word	779
	.byte	12,5,197,1,9,8,13
	.byte	'SduDataPtr',0
	.word	784
	.byte	4,2,35,0,13
	.byte	'SduLength',0
	.word	289
	.byte	1,2,35,4,0,11
	.byte	'PduInfoType',0,5,201,1,3
	.word	808
	.byte	7
	.word	289
	.byte	14,5,203,1,9,1,15
	.byte	'BUFREQ_OK',0,0,15
	.byte	'BUFREQ_E_NOT_OK',0,1,15
	.byte	'BUFREQ_E_BUSY',0,2,15
	.byte	'BUFREQ_E_OVFL',0,3,0,11
	.byte	'BufReq_ReturnType',0,5,209,1,3
	.word	880
	.byte	14,5,219,1,9,1,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,5,226,1,3
	.word	976
	.byte	16
	.byte	'sDet_PCConfigType',0,6,238,1,16,1,13
	.byte	'Det_PCConfigNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'Det_PCConfigType',0,6,241,1,3
	.word	1054
	.byte	14,7,148,1,9,1,15
	.byte	'Default_Init_Task',0,0,15
	.byte	'Default_Init_Task_Trusted',0,1,15
	.byte	'IdleTask_OsCore0',0,2,15
	.byte	'bsw_task',0,3,15
	.byte	'swc_init',0,4,15
	.byte	'swc_task',0,5,15
	.byte	'INVALID_TASK',0,6,15
	.byte	'OS_TASKID_COUNT',0,6,0,11
	.byte	'TaskType',0,7,158,1,3
	.word	1136
	.byte	11
	.byte	'Os_Hal_AddressType',0,8,61,16
	.word	428
	.byte	17,64
	.word	428
	.byte	18,15,0,16
	.byte	'Os_ExceptionContextType_Tag',0,9,71,8,160,1,13
	.byte	'AddressRegisters',0
	.word	1321
	.byte	64,2,35,0,13
	.byte	'DataRegisters',0
	.word	1321
	.byte	64,2,35,64,13
	.byte	'Ra',0
	.word	428
	.byte	4,3,35,128,1,13
	.byte	'Psw',0
	.word	428
	.byte	4,3,35,132,1,13
	.byte	'ExceptionSource',0
	.word	428
	.byte	4,3,35,136,1,13
	.byte	'Pcpn',0
	.word	428
	.byte	4,3,35,140,1,13
	.byte	'Pie',0
	.word	428
	.byte	4,3,35,144,1,13
	.byte	'MpuRegionForStackLow',0
	.word	428
	.byte	4,3,35,148,1,13
	.byte	'MpuRegionForStackUpper',0
	.word	428
	.byte	4,3,35,152,1,13
	.byte	'RawPCXI',0
	.word	428
	.byte	4,3,35,156,1,0,11
	.byte	'Os_ExceptionContextType',0,8,66,44
	.word	1330
	.byte	11
	.byte	'Os_InterruptSourceIdType',0,10,238,1,16
	.word	428
	.byte	11
	.byte	'Os_ExceptionSourceIdType',0,10,246,1,16
	.word	428
	.byte	14,10,161,2,9,1,15
	.byte	'RUNNING',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'SUSPENDED',0,3,0,11
	.byte	'TaskStateType',0,10,175,2,3
	.word	1678
	.byte	11
	.byte	'EventMaskType',0,10,182,2,16
	.word	505
	.byte	11
	.byte	'Os_TickType',0,10,200,2,19
	.word	428
	.byte	11
	.byte	'TickType',0,10,206,2,21
	.word	428
	.byte	12,10,220,2,9,12,13
	.byte	'maxallowedvalue',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	428
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	428
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,228,2,2
	.word	1810
	.byte	14,10,128,3,9,1,15
	.byte	'APPLICATION_TERMINATED',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,11
	.byte	'ApplicationStateType',0,10,133,3,3
	.word	1905
	.byte	14,10,177,3,9,1,15
	.byte	'OSServiceId_GetApplicationID',0,0,15
	.byte	'OSServiceId_GetISRID',0,1,15
	.byte	'OSServiceId_CallTrustedFunction',0,2,15
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,15
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,15
	.byte	'OSServiceId_CheckObjectAccess',0,5,15
	.byte	'OSServiceId_CheckObjectOwnership',0,6,15
	.byte	'OSServiceId_StartScheduleTableRel',0,7,15
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,15
	.byte	'OSServiceId_StopScheduleTable',0,9,15
	.byte	'OSServiceId_NextScheduleTable',0,10,15
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,15
	.byte	'OSServiceId_SyncScheduleTable',0,12,15
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,15
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,15
	.byte	'OSServiceId_IncrementCounter',0,15,15
	.byte	'OSServiceId_GetCounterValue',0,16,15
	.byte	'OSServiceId_GetElapsedValue',0,17,15
	.byte	'OSServiceId_TerminateApplication',0,18,15
	.byte	'OSServiceId_AllowAccess',0,19,15
	.byte	'OSServiceId_GetApplicationState',0,20,15
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,15
	.byte	'OSServiceId_GetCoreID',0,22,15
	.byte	'OSServiceId_StartCore',0,23,15
	.byte	'OSServiceId_StartNonAutosarCore',0,24,15
	.byte	'OSServiceId_GetSpinlock',0,25,15
	.byte	'OSServiceId_ReleaseSpinlock',0,26,15
	.byte	'OSServiceId_TryToGetSpinlock',0,27,15
	.byte	'OSServiceId_ShutdownAllCores',0,28,15
	.byte	'OSServiceId_ControlIdle',0,29,15
	.byte	'OSServiceId_IocSend',0,30,15
	.byte	'OSServiceId_IocWrite',0,31,15
	.byte	'OSServiceId_IocSendGroup',0,32,15
	.byte	'OSServiceId_IocWriteGroup',0,33,15
	.byte	'OSServiceId_IocReceive',0,34,15
	.byte	'OSServiceId_IocRead',0,35,15
	.byte	'OSServiceId_IocReceiveGroup',0,36,15
	.byte	'OSServiceId_IocReadGroup',0,37,15
	.byte	'OSServiceId_IocEmptyQueue',0,38,15
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,15
	.byte	'OSServiceId_GetExceptionContext',0,160,1,15
	.byte	'OSServiceId_SetExceptionContext',0,161,1,15
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,15
	.byte	'OSServiceId_AppKill',0,163,1,15
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,15
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,15
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,15
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,15
	.byte	'OSServiceId_TimerIsr',0,168,1,15
	.byte	'OSServiceId_IsrWrapper',0,169,1,15
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,15
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,15
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,15
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,15
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,15
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,15
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,15
	.byte	'OSServiceId_GetSemaphore',0,177,1,15
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,15
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,15
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,15
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,15
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,15
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,15
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,15
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,15
	.byte	'OSServiceId_HookCallCallback',0,186,1,15
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,15
	.byte	'OSServiceId_IsInterruptPending',0,188,1,15
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,15
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,15
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,15
	.byte	'OSServiceId_GetCoreStartState',0,192,1,15
	.byte	'OSServiceId_StartOS',0,208,1,15
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,15
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,15
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,15
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,15
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,15
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,15
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,15
	.byte	'OSServiceId_ActivateTask',0,217,1,15
	.byte	'OSServiceId_TerminateTask',0,218,1,15
	.byte	'OSServiceId_ChainTask',0,219,1,15
	.byte	'OSServiceId_GetTaskID',0,220,1,15
	.byte	'OSServiceId_GetTaskState',0,221,1,15
	.byte	'OSServiceId_Schedule',0,222,1,15
	.byte	'OSServiceId_SetEvent',0,223,1,15
	.byte	'OSServiceId_ClearEvent',0,224,1,15
	.byte	'OSServiceId_GetEvent',0,225,1,15
	.byte	'OSServiceId_WaitEvent',0,226,1,15
	.byte	'OSServiceId_GetAlarmBase',0,227,1,15
	.byte	'OSServiceId_GetAlarm',0,228,1,15
	.byte	'OSServiceId_SetRelAlarm',0,229,1,15
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,15
	.byte	'OSServiceId_CancelAlarm',0,231,1,15
	.byte	'OSServiceId_GetResource',0,232,1,15
	.byte	'OSServiceId_ReleaseResource',0,233,1,15
	.byte	'OSSERVICEID_COUNT',0,255,1,0,11
	.byte	'OSServiceIdType',0,10,156,4,3
	.word	2017
	.byte	14,10,172,4,9,2,15
	.byte	'OS_STATUS_OK',0,0,15
	.byte	'OS_STATUS_CALLEVEL',0,2,15
	.byte	'OS_STATUS_LIMIT',0,4,15
	.byte	'OS_STATUS_RESOURCE',0,6,15
	.byte	'OS_STATUS_SERVICEID',0,9,15
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,15
	.byte	'OS_STATUS_MISSINGEND',0,11,15
	.byte	'OS_STATUS_DISABLEDINT',0,12,15
	.byte	'OS_STATUS_STACKFAULT',0,13,15
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,15
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,15
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,15
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,15
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,15
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,15
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,15
	.byte	'OS_STATUS_SPINLOCK',0,21,15
	.byte	'OS_STATUS_CORE',0,22,15
	.byte	'OS_STATUS_OVERFLOW',0,245,1,15
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,15
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,15
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,15
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,15
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,15
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,15
	.byte	'OS_STATUS_API_ERROR',0,252,1,15
	.byte	'OS_STATUS_ASSERTION',0,253,1,15
	.byte	'OS_STATUS_OVERLOAD',0,254,1,15
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,15
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,15
	.byte	'OS_STATUS_ID_1',0,131,2,15
	.byte	'OS_STATUS_UNLOCKED',0,133,2,15
	.byte	'OS_STATUS_STATE_1',0,135,2,15
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,15
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,15
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,15
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,15
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,15
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,15
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,15
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,15
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,15
	.byte	'OS_STATUS_ID_2',0,131,4,15
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,15
	.byte	'OS_STATUS_STATE_2',0,135,4,15
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,15
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,15
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,15
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,15
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,15
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,15
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,15
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,15
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,15
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,15
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,15
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,15
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,15
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,15
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,15
	.byte	'OS_STATUS_STOPPED_1',0,133,10,15
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,15
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,15
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,15
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,15
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,15
	.byte	'OS_STATUS_NEXTED_1',0,133,14,15
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,15
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,15
	.byte	'OS_STATUS_LOCKED',0,129,16,15
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,15
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,15
	.byte	'OS_STATUS_PRIORITY',0,129,18,15
	.byte	'OS_STATUS_ORDER',0,133,18,15
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,15
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,15
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,15
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,11
	.byte	'Os_StatusType',0,10,232,5,3
	.word	5187
	.byte	12,10,133,6,9,4,13
	.byte	'Service',0
	.word	2017
	.byte	1,2,35,0,13
	.byte	'Error',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'DetailedError',0
	.word	5187
	.byte	2,2,35,2,0,11
	.byte	'Os_ErrorInformationType',0,10,143,6,3
	.word	7717
	.byte	14,10,175,6,9,1,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,192,6,3
	.word	7812
	.byte	11
	.byte	'Os_AccessCheckAddress',0,10,199,6,29
	.word	428
	.byte	14,10,211,6,9,1,15
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,15
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,15
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,15
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,15
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,15
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,15
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,15
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,15
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,15
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,15
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,15
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,15
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,15
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,15
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,15
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,15
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,15
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,15
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,15
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,11
	.byte	'Os_MemAccessType',0,10,233,6,3
	.word	8016
	.byte	11
	.byte	'Can_IdType',0,11,52,30
	.word	364
	.byte	11
	.byte	'Can_HwHandleType',0,11,55,29
	.word	289
	.byte	11
	.byte	'Can_SduPtrType',0,11,58,45
	.word	779
	.byte	16
	.byte	'Can_PduTypeTag',0,11,61,16,12,13
	.byte	'id',0
	.word	364
	.byte	2,2,35,0,13
	.byte	'length',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'sdu',0
	.word	8589
	.byte	4,2,35,4,13
	.byte	'swPduHandle',0
	.word	289
	.byte	1,2,35,8,0,11
	.byte	'Can_PduType',0,11,67,3
	.word	8612
	.byte	7
	.word	289
	.byte	14,11,77,9,1,15
	.byte	'CAN_CS_UNINIT',0,0,15
	.byte	'CAN_CS_STARTED',0,1,15
	.byte	'CAN_CS_STOPPED',0,2,15
	.byte	'CAN_CS_SLEEP',0,3,0,11
	.byte	'Can_ControllerStateType',0,11,82,3
	.word	8720
	.byte	14,11,84,9,1,15
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,15
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,15
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,11
	.byte	'Can_ErrorStateType',0,11,88,3
	.word	8823
	.byte	11
	.byte	'tCanLLCanIntOld',0,12,161,3,37
	.word	428
	.byte	11
	.byte	'Can_OsIsrType',0,12,167,3,15
	.word	289
	.byte	11
	.byte	'Can_ExternalTickType',0,12,180,3,16
	.word	428
	.byte	17,32
	.word	428
	.byte	18,7,0,11
	.byte	'Can_LoopTimeout_dim_type',0,12,183,3,44
	.word	9007
	.byte	11
	.byte	'Can_ControllerConfigIterType',0,12,192,13,21
	.word	289
	.byte	11
	.byte	'Can_PduOfActiveSendObjectType',0,12,148,14,19
	.word	289
	.byte	11
	.byte	'Can_StateOfActiveSendObjectType',0,12,151,14,16
	.word	364
	.byte	11
	.byte	'Can_BTPType',0,12,154,14,16
	.word	428
	.byte	11
	.byte	'Can_RXBCOfBufferConfigType',0,12,160,14,15
	.word	289
	.byte	11
	.byte	'Can_RXF0COfBufferConfigType',0,12,163,14,16
	.word	428
	.byte	11
	.byte	'Can_RXF1COfBufferConfigType',0,12,166,14,15
	.word	289
	.byte	11
	.byte	'Can_TXBCOfBufferConfigType',0,12,169,14,16
	.word	428
	.byte	11
	.byte	'Can_TXEFCOfBufferConfigType',0,12,172,14,15
	.word	289
	.byte	11
	.byte	'Can_CanIfChannelIdType',0,12,190,14,15
	.word	289
	.byte	11
	.byte	'Can_CanSubSystemBaseAdrType',0,12,193,14,16
	.word	428
	.byte	11
	.byte	'Can_BasisAdrOfControllerConfigType',0,12,196,14,16
	.word	428
	.byte	11
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,12,199,14,15
	.word	289
	.byte	11
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,12,202,14,16
	.word	364
	.byte	11
	.byte	'Can_IsTTCanOfControllerConfigType',0,12,205,14,17
	.word	289
	.byte	11
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,12,208,14,15
	.word	289
	.byte	11
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,12,211,14,15
	.word	289
	.byte	11
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,12,214,14,15
	.word	289
	.byte	11
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,12,220,14,15
	.word	289
	.byte	11
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,12,223,14,15
	.word	289
	.byte	11
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,12,226,14,15
	.word	289
	.byte	11
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,12,232,14,15
	.word	289
	.byte	11
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,12,235,14,15
	.word	289
	.byte	11
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,12,238,14,15
	.word	289
	.byte	11
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,12,241,14,15
	.word	289
	.byte	11
	.byte	'Can_RxSelectionOfControllerConfigType',0,12,244,14,15
	.word	289
	.byte	11
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,12,247,14,15
	.word	289
	.byte	11
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,12,250,14,15
	.word	289
	.byte	11
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,12,253,14,15
	.word	289
	.byte	11
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,12,128,15,15
	.word	289
	.byte	11
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,12,131,15,15
	.word	289
	.byte	11
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,12,134,15,15
	.word	289
	.byte	11
	.byte	'Can_BusOffNotificationOfControllerDataType',0,12,137,15,15
	.word	289
	.byte	11
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,12,140,15,15
	.word	289
	.byte	11
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,12,143,15,15
	.word	289
	.byte	11
	.byte	'Can_IntEnableOfControllerDataType',0,12,146,15,16
	.word	428
	.byte	11
	.byte	'Can_IsBusOffOfControllerDataType',0,12,149,15,17
	.word	289
	.byte	11
	.byte	'Can_LastInitObjectOfControllerDataType',0,12,152,15,15
	.word	289
	.byte	11
	.byte	'Can_LastStateOfControllerDataType',0,12,155,15,15
	.word	289
	.byte	11
	.byte	'Can_LogStatusOfControllerDataType',0,12,158,15,15
	.word	289
	.byte	11
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,12,161,15,15
	.word	289
	.byte	11
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,12,164,15,16
	.word	428
	.byte	11
	.byte	'Can_PrevModeOfControllerDataType',0,12,167,15,15
	.word	289
	.byte	11
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,12,170,15,15
	.word	289
	.byte	11
	.byte	'Can_TXBCROfControllerDataType',0,12,173,15,16
	.word	428
	.byte	11
	.byte	'Can_TXBRPOfControllerDataType',0,12,176,15,16
	.word	428
	.byte	11
	.byte	'Can_FBTPType',0,12,179,15,16
	.word	428
	.byte	11
	.byte	'Can_GFCType',0,12,182,15,15
	.word	289
	.byte	11
	.byte	'Can_INT_PriorityType',0,12,185,15,15
	.word	289
	.byte	11
	.byte	'Can_INT_RoutingGroupType',0,12,188,15,15
	.word	289
	.byte	11
	.byte	'Can_InitObjectBaudrateType',0,12,191,15,16
	.word	364
	.byte	11
	.byte	'Can_InitObjectFdBrsConfigType',0,12,194,15,15
	.word	289
	.byte	11
	.byte	'Can_InitObjectStartIndexType',0,12,197,15,15
	.word	289
	.byte	11
	.byte	'Can_ActiveSendObjectOfMailboxType',0,12,200,15,15
	.word	289
	.byte	11
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,12,203,15,15
	.word	289
	.byte	11
	.byte	'Can_FdPaddingOfMailboxType',0,12,206,15,15
	.word	289
	.byte	11
	.byte	'Can_HwHandleOfMailboxType',0,12,209,15,15
	.word	289
	.byte	11
	.byte	'Can_IDValueOfMailboxType',0,12,212,15,15
	.word	289
	.byte	11
	.byte	'Can_MailboxSizeOfMailboxType',0,12,215,15,15
	.word	289
	.byte	11
	.byte	'Can_MailboxTypeOfMailboxType',0,12,218,15,15
	.word	289
	.byte	11
	.byte	'Can_MaxDataLenOfMailboxType',0,12,221,15,15
	.word	289
	.byte	11
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,12,224,15,15
	.word	289
	.byte	11
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,12,227,15,15
	.word	289
	.byte	11
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,12,230,15,15
	.word	289
	.byte	11
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,12,233,15,15
	.word	289
	.byte	11
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,12,236,15,15
	.word	289
	.byte	11
	.byte	'Can_FLSSAOfSIDFCType',0,12,242,15,15
	.word	289
	.byte	11
	.byte	'Can_LSSOfSIDFCType',0,12,245,15,15
	.word	289
	.byte	11
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,12,248,15,15
	.word	289
	.byte	11
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,12,251,15,15
	.word	289
	.byte	11
	.byte	'Can_SIDFEType',0,12,129,16,16
	.word	428
	.byte	11
	.byte	'Can_SRN_AddressType',0,12,132,16,16
	.word	428
	.byte	11
	.byte	'Can_RXBAOfShmAdrType',0,12,135,16,16
	.word	428
	.byte	11
	.byte	'Can_RXF0AOfShmAdrType',0,12,138,16,16
	.word	428
	.byte	11
	.byte	'Can_RXF1AOfShmAdrType',0,12,141,16,16
	.word	428
	.byte	11
	.byte	'Can_SIDFAOfShmAdrType',0,12,144,16,16
	.word	428
	.byte	11
	.byte	'Can_StartAdrOfShmAdrType',0,12,147,16,16
	.word	428
	.byte	11
	.byte	'Can_StopAdrOfShmAdrType',0,12,150,16,16
	.word	428
	.byte	11
	.byte	'Can_TXBAOfShmAdrType',0,12,153,16,16
	.word	428
	.byte	11
	.byte	'Can_TXEFAOfShmAdrType',0,12,156,16,16
	.word	428
	.byte	11
	.byte	'Can_XIDFAOfShmAdrType',0,12,159,16,16
	.word	428
	.byte	11
	.byte	'Can_F0DSOfShmElementSizeType',0,12,162,16,15
	.word	289
	.byte	11
	.byte	'Can_F1DSOfShmElementSizeType',0,12,165,16,15
	.word	289
	.byte	11
	.byte	'Can_RBDSOfShmElementSizeType',0,12,168,16,15
	.word	289
	.byte	11
	.byte	'Can_TBDSOfShmElementSizeType',0,12,171,16,15
	.word	289
	.byte	11
	.byte	'Can_TEFBDSOfShmElementSizeType',0,12,174,16,15
	.word	289
	.byte	11
	.byte	'Can_TDCRType',0,12,130,17,15
	.word	289
	.byte	11
	.byte	'Can_XIDAMType',0,12,133,17,16
	.word	428
	.byte	11
	.byte	'Can_FLESAOfXIDFCType',0,12,136,17,15
	.word	289
	.byte	11
	.byte	'Can_LSEOfXIDFCType',0,12,139,17,15
	.word	289
	.byte	11
	.byte	'Can_EIDFE_0OfXIDFEType',0,12,142,17,15
	.word	289
	.byte	11
	.byte	'Can_EIDFE_1OfXIDFEType',0,12,145,17,15
	.word	289
	.byte	16
	.byte	'sCan_ActiveSendObjectType',0,12,161,17,16,4,13
	.byte	'StateOfActiveSendObject',0
	.word	364
	.byte	2,2,35,0,13
	.byte	'PduOfActiveSendObject',0
	.word	289
	.byte	1,2,35,2,0,11
	.byte	'Can_ActiveSendObjectType',0,12,165,17,3
	.word	12815
	.byte	16
	.byte	'sCan_BufferConfigType',0,12,168,17,16,12,13
	.byte	'RXF0COfBufferConfig',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'TXBCOfBufferConfig',0
	.word	428
	.byte	4,2,35,4,13
	.byte	'RXBCOfBufferConfig',0
	.word	289
	.byte	1,2,35,8,13
	.byte	'RXF1COfBufferConfig',0
	.word	289
	.byte	1,2,35,9,13
	.byte	'TXEFCOfBufferConfig',0
	.word	289
	.byte	1,2,35,10,0,11
	.byte	'Can_BufferConfigType',0,12,175,17,3
	.word	12946
	.byte	16
	.byte	'sCan_ControllerConfigType',0,12,178,17,16,28,13
	.byte	'BasisAdrOfControllerConfig',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	364
	.byte	2,2,35,4,13
	.byte	'IsTTCanOfControllerConfig',0
	.word	289
	.byte	1,2,35,6,13
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	289
	.byte	1,2,35,7,13
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	289
	.byte	1,2,35,8,13
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	289
	.byte	1,2,35,9,13
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	289
	.byte	1,2,35,10,13
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	289
	.byte	1,2,35,11,13
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	289
	.byte	1,2,35,12,13
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	289
	.byte	1,2,35,13,13
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	289
	.byte	1,2,35,14,13
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	289
	.byte	1,2,35,15,13
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	289
	.byte	1,2,35,16,13
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	289
	.byte	1,2,35,17,13
	.byte	'RxSelectionOfControllerConfig',0
	.word	289
	.byte	1,2,35,18,13
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	289
	.byte	1,2,35,19,13
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	289
	.byte	1,2,35,20,13
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	289
	.byte	1,2,35,21,13
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	289
	.byte	1,2,35,22,13
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	289
	.byte	1,2,35,23,13
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	289
	.byte	1,2,35,24,0,11
	.byte	'Can_ControllerConfigType',0,12,201,17,3
	.word	13148
	.byte	16
	.byte	'sCan_ControllerDataType',0,12,204,17,16,64,13
	.byte	'IntEnableOfControllerData',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	428
	.byte	4,2,35,4,13
	.byte	'TXBCROfControllerData',0
	.word	428
	.byte	4,2,35,8,13
	.byte	'TXBRPOfControllerData',0
	.word	428
	.byte	4,2,35,12,13
	.byte	'BusOffNotificationOfControllerData',0
	.word	289
	.byte	1,2,35,16,13
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	289
	.byte	1,2,35,17,13
	.byte	'CanInterruptCounterOfControllerData',0
	.word	289
	.byte	1,2,35,18,13
	.byte	'IsBusOffOfControllerData',0
	.word	289
	.byte	1,2,35,19,13
	.byte	'LastInitObjectOfControllerData',0
	.word	289
	.byte	1,2,35,20,13
	.byte	'LastStateOfControllerData',0
	.word	289
	.byte	1,2,35,21,13
	.byte	'LogStatusOfControllerData',0
	.word	289
	.byte	1,2,35,22,13
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	289
	.byte	1,2,35,23,13
	.byte	'PrevModeOfControllerData',0
	.word	289
	.byte	1,2,35,24,13
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	289
	.byte	1,2,35,25,13
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	428
	.byte	4,2,35,26,13
	.byte	'LoopTimeoutOfControllerData',0
	.word	9016
	.byte	32,2,35,30,0,11
	.byte	'Can_ControllerDataType',0,12,222,17,3
	.word	14141
	.byte	17,32
	.word	428
	.byte	18,7,0,16
	.byte	'sCan_MailboxType',0,12,225,17,16,12,13
	.byte	'ActiveSendObjectOfMailbox',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'FdPaddingOfMailbox',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'HwHandleOfMailbox',0
	.word	289
	.byte	1,2,35,3,13
	.byte	'IDValueOfMailbox',0
	.word	289
	.byte	1,2,35,4,13
	.byte	'MailboxSizeOfMailbox',0
	.word	289
	.byte	1,2,35,5,13
	.byte	'MailboxTypeOfMailbox',0
	.word	289
	.byte	1,2,35,6,13
	.byte	'MaxDataLenOfMailbox',0
	.word	289
	.byte	1,2,35,7,13
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	289
	.byte	1,2,35,8,0,11
	.byte	'Can_MailboxType',0,12,236,17,3
	.word	14857
	.byte	16
	.byte	'sCan_MemorySectionInfoType',0,12,239,17,16,1,13
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'Can_MemorySectionInfoType',0,12,242,17,3
	.word	15187
	.byte	16
	.byte	'sCan_MemorySectionObjectsType',0,12,245,17,16,4,13
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	289
	.byte	1,2,35,2,0,11
	.byte	'Can_MemorySectionObjectsType',0,12,250,17,3
	.word	15303
	.byte	16
	.byte	'sCan_SIDFCType',0,12,253,17,16,4,13
	.byte	'FLSSAOfSIDFC',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'LSSOfSIDFC',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	289
	.byte	1,2,35,3,0,11
	.byte	'Can_SIDFCType',0,12,131,18,3
	.word	15509
	.byte	16
	.byte	'sCan_ShmAdrType',0,12,134,18,16,36,13
	.byte	'RXBAOfShmAdr',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'RXF0AOfShmAdr',0
	.word	428
	.byte	4,2,35,4,13
	.byte	'RXF1AOfShmAdr',0
	.word	428
	.byte	4,2,35,8,13
	.byte	'SIDFAOfShmAdr',0
	.word	428
	.byte	4,2,35,12,13
	.byte	'StartAdrOfShmAdr',0
	.word	428
	.byte	4,2,35,16,13
	.byte	'StopAdrOfShmAdr',0
	.word	428
	.byte	4,2,35,20,13
	.byte	'TXBAOfShmAdr',0
	.word	428
	.byte	4,2,35,24,13
	.byte	'TXEFAOfShmAdr',0
	.word	428
	.byte	4,2,35,28,13
	.byte	'XIDFAOfShmAdr',0
	.word	428
	.byte	4,2,35,32,0,11
	.byte	'Can_ShmAdrType',0,12,145,18,3
	.word	15654
	.byte	16
	.byte	'sCan_ShmElementSizeType',0,12,148,18,16,6,13
	.byte	'F0DSOfShmElementSize',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'F1DSOfShmElementSize',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'RBDSOfShmElementSize',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'TBDSOfShmElementSize',0
	.word	289
	.byte	1,2,35,3,13
	.byte	'TEFBDSOfShmElementSize',0
	.word	289
	.byte	1,2,35,4,0,11
	.byte	'Can_ShmElementSizeType',0,12,155,18,3
	.word	15911
	.byte	16
	.byte	'sCan_XIDFCType',0,12,158,18,16,2,13
	.byte	'FLESAOfXIDFC',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'LSEOfXIDFC',0
	.word	289
	.byte	1,2,35,1,0,11
	.byte	'Can_XIDFCType',0,12,162,18,3
	.word	16126
	.byte	16
	.byte	'sCan_XIDFEType',0,12,165,18,16,2,13
	.byte	'EIDFE_0OfXIDFE',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'EIDFE_1OfXIDFE',0
	.word	289
	.byte	1,2,35,1,0,11
	.byte	'Can_XIDFEType',0,12,169,18,3
	.word	16213
	.byte	16
	.byte	'sCan_PCConfigType',0,12,143,19,16,1,13
	.byte	'Can_PCConfigNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'Can_PCConfigType',0,12,146,19,3
	.word	16306
	.byte	11
	.byte	'Can_ConfigType',0,12,148,19,26
	.word	16306
	.byte	6
	.word	428
	.byte	6
	.word	428
	.byte	6
	.word	1321
	.byte	16
	.byte	'tElmTypeTag',0,13,145,9,25,72,13
	.byte	'E0',0
	.word	16412
	.byte	4,2,35,0,13
	.byte	'E1',0
	.word	16417
	.byte	4,2,35,4,13
	.byte	'data',0
	.word	16422
	.byte	64,2,35,8,0,6
	.word	16427
	.byte	11
	.byte	'tElmType',0,13,162,9,3
	.word	16484
	.byte	6
	.word	428
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	12,13,224,9,5,4,19
	.byte	'ID',0,4
	.word	16507
	.byte	29,3,2,35,0,19
	.byte	'RTR',0,1
	.word	16512
	.byte	1,2,2,35,3,19
	.byte	'XTD',0,1
	.word	16517
	.byte	1,1,2,35,3,19
	.byte	'ESI',0,1
	.word	16522
	.byte	1,0,2,35,3,0,6
	.word	428
	.byte	20,13,222,9,3,4,13
	.byte	'b0',0
	.word	16527
	.byte	4,2,35,0,13
	.byte	'B0',0
	.word	16593
	.byte	4,2,35,0,0,6
	.word	364
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	12,13,235,9,5,4,19
	.byte	'RXTS',0,2
	.word	16629
	.byte	16,0,2,35,0,19
	.byte	'DLC',0,1
	.word	16634
	.byte	4,4,2,35,2,19
	.byte	'BRS',0,1
	.word	16639
	.byte	1,3,2,35,2,19
	.byte	'FDF',0,1
	.word	16644
	.byte	1,2,2,35,2,19
	.byte	'r0',0,1
	.word	16649
	.byte	2,0,2,35,2,19
	.byte	'FIDX',0,1
	.word	16654
	.byte	7,1,2,35,3,19
	.byte	'ANMF',0,1
	.word	16659
	.byte	1,0,2,35,3,0,6
	.word	364
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	6
	.word	289
	.byte	12,13,245,9,5,4,19
	.byte	'r1',0,2
	.word	16778
	.byte	16,0,2,35,0,19
	.byte	'DLC',0,1
	.word	16783
	.byte	4,4,2,35,2,19
	.byte	'BRS',0,1
	.word	16788
	.byte	1,3,2,35,2,19
	.byte	'FDF',0,1
	.word	16793
	.byte	1,2,2,35,2,19
	.byte	'r0',0,1
	.word	16798
	.byte	1,1,2,35,2,19
	.byte	'EFC',0,1
	.word	16803
	.byte	1,0,2,35,2,19
	.byte	'MM',0,1
	.word	16808
	.byte	8,0,2,35,3,0,20,13,233,9,3,4,13
	.byte	'rb1',0
	.word	16664
	.byte	4,2,35,0,13
	.byte	'tb1',0
	.word	16813
	.byte	4,2,35,0,13
	.byte	'B1',0
	.word	428
	.byte	4,2,35,0,0,6
	.word	1321
	.byte	16
	.byte	'tCanChipMsgPtrTag',0,13,220,9,25,72,13
	.byte	'uB0',0
	.word	16598
	.byte	4,2,35,0,13
	.byte	'uB1',0
	.word	16922
	.byte	4,2,35,4,13
	.byte	'data',0
	.word	16967
	.byte	64,2,35,8,0,6
	.word	16972
	.byte	11
	.byte	'tCanChipMsgPtr',0,13,134,10,3
	.word	17037
	.byte	12,13,141,10,3,4,19
	.byte	'FnFL',0,1
	.word	289
	.byte	7,1,2,35,0,19
	.byte	'r2',0,1
	.word	289
	.byte	1,0,2,35,0,19
	.byte	'FnGI',0,1
	.word	289
	.byte	6,2,2,35,1,19
	.byte	'r1',0,4
	.word	428
	.byte	10,8,2,35,0,19
	.byte	'FnF',0,1
	.word	289
	.byte	1,7,2,35,3,19
	.byte	'RFnL',0,1
	.word	289
	.byte	1,6,2,35,3,19
	.byte	'r0',0,1
	.word	289
	.byte	6,0,2,35,3,0,21
	.byte	'tRXFnSTag',0,13,138,10,15,4,13
	.byte	'R',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17066
	.byte	4,2,35,0,0,11
	.byte	'tRXFnS',0,13,151,10,3
	.word	17178
	.byte	12,13,156,10,3,4,22,1
	.word	289
	.byte	2,6,2,35,0,19
	.byte	'FOSA',0,2
	.word	364
	.byte	14,0,2,35,0,19
	.byte	'F0S',0,1
	.word	289
	.byte	7,1,2,35,2,22,1
	.word	289
	.byte	1,0,2,35,2,19
	.byte	'F0WM',0,1
	.word	289
	.byte	7,1,2,35,3,22,1
	.word	289
	.byte	1,0,2,35,3,0,21
	.byte	'tRXFnCTag',0,13,153,10,15,4,13
	.byte	'R',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17233
	.byte	4,2,35,0,0,11
	.byte	'tRXFnC',0,13,165,10,3
	.word	17320
	.byte	12,13,171,10,3,4,19
	.byte	'F0DS',0,1
	.word	289
	.byte	3,5,2,35,0,22,1
	.word	289
	.byte	1,4,2,35,0,19
	.byte	'F1DS',0,1
	.word	289
	.byte	3,1,2,35,0,22,1
	.word	289
	.byte	1,0,2,35,0,19
	.byte	'RBDS',0,1
	.word	289
	.byte	3,5,2,35,1,22,4
	.word	428
	.byte	21,0,2,35,0,0,21
	.byte	'tRXESCTag',0,13,168,10,15,4,13
	.byte	'R',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17375
	.byte	4,2,35,0,0,11
	.byte	'tRXESC',0,13,180,10,3
	.word	17463
	.byte	12,13,185,10,3,4,19
	.byte	'TFFL',0,1
	.word	289
	.byte	6,2,2,35,0,22,1
	.word	289
	.byte	2,0,2,35,0,19
	.byte	'TFGI',0,1
	.word	289
	.byte	5,3,2,35,1,22,1
	.word	289
	.byte	3,0,2,35,1,19
	.byte	'TFQPI',0,1
	.word	289
	.byte	5,3,2,35,2,19
	.byte	'TFQF',0,1
	.word	289
	.byte	1,2,2,35,2,22,2
	.word	364
	.byte	10,0,2,35,2,0,21
	.byte	'tTXFQSTag',0,13,182,10,15,4,13
	.byte	'R',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17518
	.byte	4,2,35,0,0,11
	.byte	'tTXFQS',0,13,195,10,3
	.word	17623
	.byte	12,13,200,10,3,4,19
	.byte	'EFFL',0,1
	.word	289
	.byte	6,2,2,35,0,19
	.byte	'r1',0,1
	.word	289
	.byte	2,0,2,35,0,19
	.byte	'EFGI',0,1
	.word	289
	.byte	5,3,2,35,1,22,4
	.word	428
	.byte	11,8,2,35,0,19
	.byte	'EFF',0,1
	.word	289
	.byte	1,7,2,35,3,19
	.byte	'TEFL',0,1
	.word	289
	.byte	1,6,2,35,3,19
	.byte	'r0',0,1
	.word	289
	.byte	6,0,2,35,3,0,21
	.byte	'tTXEFSTag',0,13,197,10,15,4,13
	.byte	'R',0
	.word	428
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17678
	.byte	4,2,35,0,0,11
	.byte	'tTXEFS',0,13,210,10,3
	.word	17787
	.byte	11
	.byte	'CanIf_TxBufferSizeType',0,14,184,1,15
	.word	289
	.byte	14,15,189,2,9,1,15
	.byte	'CANIF_CS_UNINIT',0,0,15
	.byte	'CANIF_CS_STOPPED',0,1,15
	.byte	'CANIF_CS_STARTED',0,2,15
	.byte	'CANIF_CS_SLEEP',0,3,0,11
	.byte	'CanIf_ControllerModeType',0,15,195,2,3
	.word	17874
	.byte	14,15,215,2,9,1,15
	.byte	'CANIF_GET_OFFLINE',0,0,15
	.byte	'CANIF_GET_RX_ONLINE',0,1,15
	.byte	'CANIF_GET_TX_ONLINE',0,2,15
	.byte	'CANIF_GET_ONLINE',0,3,15
	.byte	'CANIF_GET_OFFLINE_ACTIVE',0,4,15
	.byte	'CANIF_GET_OFFLINE_ACTIVE_RX_ONLINE',0,5,15
	.byte	'CANIF_NO_MODE_PDU_GET_MODE_TYPE_END',0,6,0,11
	.byte	'CanIf_PduGetModeType',0,15,228,2,3
	.word	17988
	.byte	14,15,231,2,9,1,15
	.byte	'CANIF_RxBasicCANMailbox',0,0,15
	.byte	'CANIF_RxFullCANMailbox',0,1,15
	.byte	'CANIF_TxBasicCANMailbox',0,2,15
	.byte	'CANIF_TxFullCANMailbox',0,3,15
	.byte	'CANIF_UnusedCANMailbox',0,4,0,11
	.byte	'CanIf_MailBoxTypeType',0,15,238,2,3
	.word	18210
	.byte	14,15,241,2,9,1,15
	.byte	'CanIf_SimpleRxIndicationLayout',0,0,15
	.byte	'CanIf_AdvancedRxIndicationLayout',0,1,15
	.byte	'CanIf_NmOsekRxIndicationLayout',0,2,15
	.byte	'CanIf_CddRxIndicationLayout',0,3,0,11
	.byte	'CanIf_RxIndicationLayoutType',0,15,247,2,3
	.word	18375
	.byte	23,1,1,5
	.word	289
	.byte	0,7
	.word	18551
	.byte	11
	.byte	'CanIf_TxConfirmationFctType',0,15,175,3,9
	.word	18560
	.byte	3
	.word	289
	.byte	7
	.word	18602
	.byte	23,1,1,5
	.word	289
	.byte	5
	.word	18607
	.byte	0,7
	.word	18612
	.byte	11
	.byte	'CanIf_SimpleRxIndicationFctType',0,15,181,3,9
	.word	18626
	.byte	3
	.word	808
	.byte	7
	.word	18672
	.byte	23,1,1,5
	.word	289
	.byte	5
	.word	18677
	.byte	0,7
	.word	18682
	.byte	11
	.byte	'CanIf_AdvancedRxIndicationFctType',0,15,186,3,9
	.word	18696
	.byte	23,1,1,5
	.word	289
	.byte	5
	.word	18607
	.byte	5
	.word	364
	.byte	0,7
	.word	18744
	.byte	11
	.byte	'CanIf_NmOsekRxIndicationFctType',0,15,190,3,9
	.word	18763
	.byte	23,1,1,5
	.word	289
	.byte	5
	.word	18677
	.byte	5
	.word	364
	.byte	0,7
	.word	18809
	.byte	11
	.byte	'CanIf_CddRxIndicationFctType',0,15,194,3,9
	.word	18828
	.byte	23,1,1,5
	.word	289
	.byte	5
	.word	17874
	.byte	0,7
	.word	18871
	.byte	11
	.byte	'CanIf_CtrlModeIndicationFctType',0,15,198,3,9
	.word	18885
	.byte	11
	.byte	'CanIf_BusOffNotificationFctType',0,15,202,3,9
	.word	18560
	.byte	20,15,203,4,9,4,13
	.byte	'eSimpleRxIndicationType',0
	.word	18631
	.byte	4,2,35,0,13
	.byte	'eAdvancedRxIndicationType',0
	.word	18701
	.byte	4,2,35,0,13
	.byte	'eNmOsekRxIndicationType',0
	.word	18768
	.byte	4,2,35,0,13
	.byte	'eCddRxIndicationType',0
	.word	18833
	.byte	4,2,35,0,0,11
	.byte	'CanIf_RxIndicationFctType',0,15,209,4,3
	.word	18972
	.byte	7
	.word	18612
	.byte	7
	.word	18682
	.byte	7
	.word	18744
	.byte	7
	.word	18809
	.byte	16
	.byte	'sCanIf_TxQueueBaseType',0,15,222,4,16,1,13
	.byte	'eSduLength',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxQueueBaseType',0,15,228,4,3
	.word	19165
	.byte	16
	.byte	'sCanIf_TxQueueBaseWithDataType',0,15,231,4,16,1,13
	.byte	'eBaseParams',0
	.word	19165
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxQueueBaseWithDataType',0,15,237,4,3
	.word	19246
	.byte	16
	.byte	'sCanIf_TxPrioByCanIdByteQueueType',0,15,242,4,16,2,13
	.byte	'eQueueParams',0
	.word	19246
	.byte	1,2,35,0,13
	.byte	'eQueued',0
	.word	289
	.byte	1,2,35,1,0,11
	.byte	'CanIf_TxPrioByCanIdByteQueueType',0,15,246,4,3
	.word	19344
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdBaseType',0,15,128,5,16,1,13
	.byte	'eQueueCounter',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdBaseType',0,15,131,5,3
	.word	19466
	.byte	11
	.byte	'CanIf_MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,14,138,9,15
	.word	289
	.byte	11
	.byte	'CanIf_MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,14,141,9,15
	.word	289
	.byte	11
	.byte	'CanIf_CtrlStatesIdxOfMailBoxConfigType',0,14,150,9,15
	.word	289
	.byte	11
	.byte	'CanIf_PduIdFirstOfMailBoxConfigType',0,14,153,9,15
	.word	289
	.byte	11
	.byte	'CanIf_PduIdLastOfMailBoxConfigType',0,14,156,9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxBufferCfgIdxOfMailBoxConfigType',0,14,159,9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxBufferHandlingTypeOfMailBoxConfigType',0,14,165,9,15
	.word	289
	.byte	11
	.byte	'CanIf_MailBoxConfigIdxOfMappedTxBuffersConfigType',0,14,168,9,15
	.word	289
	.byte	11
	.byte	'CanIf_RxIndicationFctListIdxOfRxPduConfigType',0,14,171,9,15
	.word	289
	.byte	11
	.byte	'CanIf_RxPduCanIdOfRxPduConfigType',0,14,174,9,15
	.word	289
	.byte	11
	.byte	'CanIf_RxPduDlcOfRxPduConfigType',0,14,177,9,15
	.word	289
	.byte	11
	.byte	'CanIf_RxPduMaskOfRxPduConfigType',0,14,180,9,16
	.word	364
	.byte	11
	.byte	'CanIf_UpperPduIdOfRxPduConfigType',0,14,183,9,19
	.word	289
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14,231,9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14,234
	.byte	9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfigType',0,14,237
	.byte	9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14
	.byte	240,9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,243,9,15
	.word	289
	.byte	11
	.byte	'CanIf_CanIdOfTxPduConfigType',0,14,246,9,16
	.word	364
	.byte	11
	.byte	'CanIf_CtrlStatesIdxOfTxPduConfigType',0,14,249,9,15
	.word	289
	.byte	11
	.byte	'CanIf_IsTxPduTruncationOfTxPduConfigType',0,14,252,9,17
	.word	289
	.byte	11
	.byte	'CanIf_MailBoxConfigIdxOfTxPduConfigType',0,14,255,9,15
	.word	289
	.byte	11
	.byte	'CanIf_TxConfirmationFctListIdxOfTxPduConfigType',0,14,130,10,15
	.word	289
	.byte	11
	.byte	'CanIf_TxPduLengthOfTxPduConfigType',0,14,133,10,15
	.word	289
	.byte	11
	.byte	'CanIf_UpperLayerTxPduIdOfTxPduConfigType',0,14,136,10,19
	.word	289
	.byte	11
	.byte	'CanIf_TxQueueIdxOfTxPduQueueIndexType',0,14,139,10,15
	.word	289
	.byte	11
	.byte	'CanIf_TxQueueIndex2DataStartStopIdxOfTxPduQueueIndexType',0,14,142,10,15
	.word	289
	.byte	11
	.byte	'CanIf_TxQueueDataType',0,14,151,10,15
	.word	289
	.byte	11
	.byte	'CanIf_TxQueueDataEndIdxOfTxQueueIndex2DataStartStopType',0,14,154,10,15
	.word	289
	.byte	11
	.byte	'CanIf_TxQueueDataLengthOfTxQueueIndex2DataStartStopType',0,14,157,10,15
	.word	289
	.byte	11
	.byte	'CanIf_TxQueueDataStartIdxOfTxQueueIndex2DataStartStopType',0,14,160,10,15
	.word	289
	.byte	16
	.byte	'sCanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,14,183,10,16,2,13
	.byte	'MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	289
	.byte	1,2,35,1,0,11
	.byte	'CanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,14,187,10,3
	.word	21405
	.byte	16
	.byte	'sCanIf_CtrlStatesType',0,14,190,10,16,2,13
	.byte	'CtrlModeOfCtrlStates',0
	.word	17874
	.byte	1,2,35,0,13
	.byte	'PduModeOfCtrlStates',0
	.word	17988
	.byte	1,2,35,1,0,11
	.byte	'CanIf_CtrlStatesType',0,14,194,10,3
	.word	21656
	.byte	16
	.byte	'sCanIf_MailBoxConfigType',0,14,200,10,16,6,13
	.byte	'CtrlStatesIdxOfMailBoxConfig',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'PduIdFirstOfMailBoxConfig',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'PduIdLastOfMailBoxConfig',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'TxBufferCfgIdxOfMailBoxConfig',0
	.word	289
	.byte	1,2,35,3,13
	.byte	'TxBufferHandlingTypeOfMailBoxConfig',0
	.word	289
	.byte	1,2,35,4,13
	.byte	'MailBoxTypeOfMailBoxConfig',0
	.word	18210
	.byte	1,2,35,5,0,11
	.byte	'CanIf_MailBoxConfigType',0,14,208,10,3
	.word	21774
	.byte	16
	.byte	'sCanIf_MappedTxBuffersConfigType',0,14,214,10,16,1,13
	.byte	'MailBoxConfigIdxOfMappedTxBuffersConfig',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'CanIf_MappedTxBuffersConfigType',0,14,217,10,3
	.word	22066
	.byte	16
	.byte	'sCanIf_RxIndicationFctListType',0,14,220,10,16,8,13
	.byte	'RxIndicationFctOfRxIndicationFctList',0
	.word	18972
	.byte	4,2,35,0,13
	.byte	'RxIndicationLayoutOfRxIndicationFctList',0
	.word	18375
	.byte	1,2,35,4,0,11
	.byte	'CanIf_RxIndicationFctListType',0,14,224,10,3
	.word	22196
	.byte	16
	.byte	'sCanIf_RxPduConfigType',0,14,230,10,16,6,13
	.byte	'RxPduMaskOfRxPduConfig',0
	.word	364
	.byte	2,2,35,0,13
	.byte	'UpperPduIdOfRxPduConfig',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'RxIndicationFctListIdxOfRxPduConfig',0
	.word	289
	.byte	1,2,35,3,13
	.byte	'RxPduCanIdOfRxPduConfig',0
	.word	289
	.byte	1,2,35,4,13
	.byte	'RxPduDlcOfRxPduConfig',0
	.word	289
	.byte	1,2,35,5,0,11
	.byte	'CanIf_RxPduConfigType',0,14,237,10,3
	.word	22368
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueConfigType',0,14,245,10,16,4,13
	.byte	'TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	289
	.byte	1,2,35,3,0,11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueConfigType',0,14,251,10,3
	.word	22603
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,129,11,16,1,13
	.byte	'TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdus',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,132,11,3
	.word	23060
	.byte	16
	.byte	'sCanIf_TxPduConfigType',0,14,140,11,16,8,13
	.byte	'CanIdOfTxPduConfig',0
	.word	364
	.byte	2,2,35,0,13
	.byte	'UpperLayerTxPduIdOfTxPduConfig',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'IsTxPduTruncationOfTxPduConfig',0
	.word	289
	.byte	1,2,35,3,13
	.byte	'CtrlStatesIdxOfTxPduConfig',0
	.word	289
	.byte	1,2,35,4,13
	.byte	'MailBoxConfigIdxOfTxPduConfig',0
	.word	289
	.byte	1,2,35,5,13
	.byte	'TxConfirmationFctListIdxOfTxPduConfig',0
	.word	289
	.byte	1,2,35,6,13
	.byte	'TxPduLengthOfTxPduConfig',0
	.word	289
	.byte	1,2,35,7,0,11
	.byte	'CanIf_TxPduConfigType',0,14,149,11,3
	.word	23245
	.byte	16
	.byte	'sCanIf_TxPduQueueIndexType',0,14,155,11,16,2,13
	.byte	'TxQueueIdxOfTxPduQueueIndex',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'TxQueueIndex2DataStartStopIdxOfTxPduQueueIndex',0
	.word	289
	.byte	1,2,35,1,0,11
	.byte	'CanIf_TxPduQueueIndexType',0,14,159,11,3
	.word	23570
	.byte	16
	.byte	'sCanIf_TxQueueIndex2DataStartStopType',0,14,166,11,16,4,13
	.byte	'TxQueueDataEndIdxOfTxQueueIndex2DataStartStop',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'TxQueueDataLengthOfTxQueueIndex2DataStartStop',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'TxQueueDataStartIdxOfTxQueueIndex2DataStartStop',0
	.word	289
	.byte	1,2,35,2,0,11
	.byte	'CanIf_TxQueueIndex2DataStartStopType',0,14,171,11,3
	.word	23732
	.byte	16
	.byte	'CanIf_CtrlStatesStructSTag',0,14,183,11,16,2,13
	.byte	'CT_testCANFDdbc_2c920817',0
	.word	21656
	.byte	2,2,35,0,0,11
	.byte	'CanIf_CtrlStatesStructSType',0,14,186,11,3
	.word	23990
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSTag',0,14,189,11,16,1,13
	.byte	'CHNL_7a25eeb6',0
	.word	19466
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSType',0,14,192,11,3
	.word	24095
	.byte	16
	.byte	'CanIf_TxQueueStructSTag',0,14,195,11,16,6,13
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	19344
	.byte	2,2,35,0,13
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	19344
	.byte	2,2,35,2,13
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	19344
	.byte	2,2,35,4,0,11
	.byte	'CanIf_TxQueueStructSType',0,14,200,11,3
	.word	24215
	.byte	17,32
	.word	289
	.byte	18,31,0,17,8
	.word	289
	.byte	18,7,0,17,64
	.word	289
	.byte	18,63,0,16
	.byte	'CanIf_TxQueueDataStructSTag',0,14,203,11,16,104,13
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	24419
	.byte	32,2,35,0,13
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	24428
	.byte	8,2,35,32,13
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	24437
	.byte	64,2,35,40,0,11
	.byte	'CanIf_TxQueueDataStructSType',0,14,208,11,3
	.word	24446
	.byte	16
	.byte	'sCanIf_PCConfigType',0,14,189,12,16,1,13
	.byte	'CanIf_PCConfigNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'CanIf_PCConfigType',0,14,192,12,3
	.word	24658
	.byte	24,1,1,7
	.word	24746
	.byte	11
	.byte	'PduR_LockFunctionType',0,16,218,8,9
	.word	24749
	.byte	25
	.word	289
	.byte	1,1,5
	.word	289
	.byte	5
	.word	18677
	.byte	0,7
	.word	24785
	.byte	11
	.byte	'PduR_TransmitFctPtrType',0,16,222,8,9
	.word	24803
	.byte	11
	.byte	'PduR_IfRxIndicationType',0,16,224,8,9
	.word	18696
	.byte	11
	.byte	'PduR_IfTxConfirmationFctPtrType',0,16,225,8,9
	.word	18560
	.byte	11
	.byte	'PduR_hasIfRoutingOfGeneralPropertiesRomType',0,16,207,9,17
	.word	289
	.byte	11
	.byte	'PduR_InitializedType',0,16,210,9,17
	.word	289
	.byte	11
	.byte	'PduR_DestApplicationManagerRomIdxOfMmRomType',0,16,219,9,15
	.word	289
	.byte	11
	.byte	'PduR_MaskedBitsOfMmRomType',0,16,225,9,15
	.word	289
	.byte	11
	.byte	'PduR_RmGDestRomStartIdxOfMmRomType',0,16,231,9,15
	.word	289
	.byte	11
	.byte	'PduR_MmRomIndType',0,16,240,9,15
	.word	289
	.byte	11
	.byte	'PduR_PartitionSNVOfPartitionIdentifiersType',0,16,246,9,16
	.word	428
	.byte	11
	.byte	'PduR_PduLengthHandlingStrategyOfRmDestRomType',0,16,252,9,15
	.word	289
	.byte	11
	.byte	'PduR_RmGDestRomIdxOfRmDestRomType',0,16,255,9,15
	.word	289
	.byte	11
	.byte	'PduR_RmSrcRomIdxOfRmDestRomType',0,16,130,10,15
	.word	289
	.byte	11
	.byte	'PduR_RoutingTypeOfRmDestRomType',0,16,133,10,15
	.word	289
	.byte	11
	.byte	'PduR_DestHndOfRmGDestRomType',0,16,136,10,15
	.word	289
	.byte	11
	.byte	'PduR_DirectionOfRmGDestRomType',0,16,139,10,15
	.word	289
	.byte	11
	.byte	'PduR_MaxPduLengthOfRmGDestRomType',0,16,145,10,15
	.word	289
	.byte	11
	.byte	'PduR_MmRomIdxOfRmGDestRomType',0,16,148,10,15
	.word	289
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfRmGDestRomType',0,16,151,10,15
	.word	289
	.byte	11
	.byte	'PduR_RmDestRomIdxOfRmGDestRomType',0,16,157,10,15
	.word	289
	.byte	11
	.byte	'PduR_MmRomIdxOfRmSrcRomType',0,16,166,10,15
	.word	289
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfRmSrcRomType',0,16,169,10,15
	.word	289
	.byte	11
	.byte	'PduR_RmDestRomStartIdxOfRmSrcRomType',0,16,178,10,15
	.word	289
	.byte	11
	.byte	'PduR_SrcHndOfRmSrcRomType',0,16,181,10,15
	.word	289
	.byte	11
	.byte	'PduR_RmTransmitFctPtrIdxOfTx2LoType',0,16,250,10,15
	.word	289
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfTxIf2UpType',0,16,253,10,15
	.word	289
	.byte	11
	.byte	'PduR_RmGDestRomIdxOfTxIf2UpType',0,16,128,11,15
	.word	289
	.byte	11
	.byte	'PduR_TxConfirmationUsedOfTxIf2UpType',0,16,131,11,17
	.word	289
	.byte	11
	.byte	'PduR_RmTransmitFctPtrType',0,16,144,11,9
	.word	24803
	.byte	16
	.byte	'sPduR_DestApplicationManagerRomType',0,16,182,11,16,1,13
	.byte	'PduR_DestApplicationManagerRomNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_DestApplicationManagerRomType',0,16,185,11,3
	.word	26025
	.byte	16
	.byte	'sPduR_ExclusiveAreaRomType',0,16,188,11,16,8,13
	.byte	'LockOfExclusiveAreaRom',0
	.word	24754
	.byte	4,2,35,0,13
	.byte	'UnlockOfExclusiveAreaRom',0
	.word	24754
	.byte	4,2,35,4,0,11
	.byte	'PduR_ExclusiveAreaRomType',0,16,192,11,3
	.word	26161
	.byte	7
	.word	24746
	.byte	16
	.byte	'sPduR_GeneralPropertiesRomType',0,16,195,11,16,1,13
	.byte	'hasIfRoutingOfGeneralPropertiesRom',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_GeneralPropertiesRomType',0,16,198,11,3
	.word	26301
	.byte	16
	.byte	'sPduR_LockRomType',0,16,201,11,16,1,13
	.byte	'PduR_LockRomNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_LockRomType',0,16,204,11,3
	.word	26422
	.byte	16
	.byte	'sPduR_MmRomType',0,16,207,11,16,16,13
	.byte	'DestApplicationManagerRomIdxOfMmRom',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'MaskedBitsOfMmRom',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'RmGDestRomStartIdxOfMmRom',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'UpIfRxIndicationFctPtrOfMmRom',0
	.word	24841
	.byte	4,2,35,4,13
	.byte	'UpIfTxConfirmationFctPtrOfMmRom',0
	.word	24874
	.byte	4,2,35,8,13
	.byte	'LoIfTransmitFctPtrOfMmRom',0
	.word	24808
	.byte	4,2,35,12,0,11
	.byte	'PduR_MmRomType',0,16,215,11,3
	.word	26504
	.byte	7
	.word	18682
	.byte	7
	.word	18551
	.byte	7
	.word	24785
	.byte	16
	.byte	'sPduR_PartitionIdentifiersType',0,16,218,11,16,4,13
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	428
	.byte	4,2,35,0,0,11
	.byte	'PduR_PartitionIdentifiersType',0,16,221,11,3
	.word	26788
	.byte	16
	.byte	'sPduR_RmDestRomType',0,16,224,11,16,4,13
	.byte	'PduLengthHandlingStrategyOfRmDestRom',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'RmGDestRomIdxOfRmDestRom',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'RmSrcRomIdxOfRmDestRom',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'RoutingTypeOfRmDestRom',0
	.word	289
	.byte	1,2,35,3,0,11
	.byte	'PduR_RmDestRomType',0,16,230,11,3
	.word	26909
	.byte	16
	.byte	'sPduR_RmGDestRomType',0,16,233,11,16,6,13
	.byte	'DestHndOfRmGDestRom',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'DirectionOfRmGDestRom',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'MaxPduLengthOfRmGDestRom',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'MmRomIdxOfRmGDestRom',0
	.word	289
	.byte	1,2,35,3,13
	.byte	'PartitionIndexOfCslOfRmGDestRom',0
	.word	289
	.byte	1,2,35,4,13
	.byte	'RmDestRomIdxOfRmGDestRom',0
	.word	289
	.byte	1,2,35,5,0,11
	.byte	'PduR_RmGDestRomType',0,16,241,11,3
	.word	27108
	.byte	16
	.byte	'sPduR_RmSrcRomType',0,16,244,11,16,4,13
	.byte	'MmRomIdxOfRmSrcRom',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'PartitionIndexOfCslOfRmSrcRom',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'RmDestRomStartIdxOfRmSrcRom',0
	.word	289
	.byte	1,2,35,2,13
	.byte	'SrcHndOfRmSrcRom',0
	.word	289
	.byte	1,2,35,3,0,11
	.byte	'PduR_RmSrcRomType',0,16,250,11,3
	.word	27364
	.byte	16
	.byte	'sPduR_RxIf2DestType',0,16,253,11,16,1,13
	.byte	'PduR_RxIf2DestNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_RxIf2DestType',0,16,128,12,3
	.word	27547
	.byte	16
	.byte	'sPduR_SrcApplicationRomType',0,16,131,12,16,1,13
	.byte	'PduR_SrcApplicationRomNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_SrcApplicationRomType',0,16,134,12,3
	.word	27635
	.byte	16
	.byte	'sPduR_Tx2LoType',0,16,137,12,16,1,13
	.byte	'RmTransmitFctPtrIdxOfTx2Lo',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_Tx2LoType',0,16,140,12,3
	.word	27747
	.byte	16
	.byte	'sPduR_TxIf2UpType',0,16,143,12,16,4,13
	.byte	'TxConfirmationUsedOfTxIf2Up',0
	.word	289
	.byte	1,2,35,0,13
	.byte	'PartitionIndexOfCslOfTxIf2Up',0
	.word	289
	.byte	1,2,35,1,13
	.byte	'RmGDestRomIdxOfTxIf2Up',0
	.word	289
	.byte	1,2,35,2,0,11
	.byte	'PduR_TxIf2UpType',0,16,148,12,3
	.word	27830
	.byte	7
	.word	289
	.byte	11
	.byte	'PduR_InitializedPtrType',0,16,169,12,66
	.word	27988
	.byte	16
	.byte	'sPduR_PCPartitionConfigType',0,16,217,12,16,4,13
	.byte	'InitializedOfPCPartitionConfig',0
	.word	27993
	.byte	4,2,35,0,0,11
	.byte	'PduR_PCPartitionConfigType',0,16,220,12,3
	.word	28026
	.byte	7
	.word	289
	.byte	16
	.byte	'sPduR_PCConfigType',0,16,235,12,16,1,13
	.byte	'PduR_PCConfigNeverUsed',0
	.word	289
	.byte	1,2,35,0,0,11
	.byte	'PduR_PCConfigType',0,16,238,12,3
	.word	28142
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8,58,15,59,15,57,15,73,19,0,0,12,19,1
	.byte	58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40
	.byte	0,3,8,28,13,0,0,16,19,1,3,8,58,15,59,15,57,15,11,15,0,0,17,1,1,11,15,73,19,0,0,18,33,0,47,15,0,0,19,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,20,23,1,58,15,59,15,57,15,11,15,0,0,21,23,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,22,13,0,11,15,73,19,13,15,12,15,56,9,0,0,23,21,1,54,15,39,12,0,0,24,21,0,54,15,39,12,0,0
	.byte	25,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation',0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_McQ.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,1,0,0
	.byte	'Det_Cfg.h',0,2,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Hal_Os_Types.h',0,3,0,0
	.byte	'Os_Hal_OsInt.h',0,3,0,0
	.byte	'Os_Types.h',0,3,0,0
	.byte	'Can_DrvGeneralTypes.h',0,2,0,0
	.byte	'Can_Cfg.h',0,2,0,0
	.byte	'Can.h',0,4,0,0
	.byte	'CanIf_Cfg.h',0,2,0,0
	.byte	'CanIf_Types.h',0,5,0,0
	.byte	'PduR_Lcfg.h',0,2,0,0,0
.L9:
.L7:

; ..\component\PduR\Implementation\PduR_McQ.c	     1  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	     2   *  COPYRIGHT
; ..\component\PduR\Implementation\PduR_McQ.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_McQ.c	     4   *  \verbatim
; ..\component\PduR\Implementation\PduR_McQ.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\PduR\Implementation\PduR_McQ.c	     6   *
; ..\component\PduR\Implementation\PduR_McQ.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_McQ.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\PduR\Implementation\PduR_McQ.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_McQ.c	    10   *  \endverbatim
; ..\component\PduR\Implementation\PduR_McQ.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_McQ.c	    12   *  FILE DESCRIPTION
; ..\component\PduR\Implementation\PduR_McQ.c	    13   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_McQ.c	    14   *         File:  PduR_McQ.c
; ..\component\PduR\Implementation\PduR_McQ.c	    15   *      Project:  Gw_AsrPduRCfg5
; ..\component\PduR\Implementation\PduR_McQ.c	    16   *       Module:  MICROSAR PDU Router
; ..\component\PduR\Implementation\PduR_McQ.c	    17   *    Generator:  Configurator 5
; ..\component\PduR\Implementation\PduR_McQ.c	    18   *
; ..\component\PduR\Implementation\PduR_McQ.c	    19   *  Description:  Vector implementation of AUTOSAR PDU Router
; ..\component\PduR\Implementation\PduR_McQ.c	    20   *
; ..\component\PduR\Implementation\PduR_McQ.c	    21   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    22  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    23   *  REVISION HISTORY
; ..\component\PduR\Implementation\PduR_McQ.c	    24   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_McQ.c	    25   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_McQ.c	    26   *
; ..\component\PduR\Implementation\PduR_McQ.c	    27   *  FILE VERSION
; ..\component\PduR\Implementation\PduR_McQ.c	    28   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_McQ.c	    29   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_McQ.c	    30   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    31  
; ..\component\PduR\Implementation\PduR_McQ.c	    32  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    33   * LOCAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR_McQ.c	    34   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    35  
; ..\component\PduR\Implementation\PduR_McQ.c	    36  
; ..\component\PduR\Implementation\PduR_McQ.c	    37  #define PDUR_MCQ_SOURCE
; ..\component\PduR\Implementation\PduR_McQ.c	    38  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    39   * INCLUDES
; ..\component\PduR\Implementation\PduR_McQ.c	    40   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    41  #include "PduR.h"
; ..\component\PduR\Implementation\PduR_McQ.c	    42  #include "PduR_McQ.h"
; ..\component\PduR\Implementation\PduR_McQ.c	    43  #include "PduR_RmIf.h"
; ..\component\PduR\Implementation\PduR_McQ.c	    44  #include "SchM_PduR.h"
; ..\component\PduR\Implementation\PduR_McQ.c	    45  #if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	    46  # include "Det.h"
; ..\component\PduR\Implementation\PduR_McQ.c	    47  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	    48  
; ..\component\PduR\Implementation\PduR_McQ.c	    49  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    50   *  LOCAL CONSTANT MACROS
; ..\component\PduR\Implementation\PduR_McQ.c	    51   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    52  
; ..\component\PduR\Implementation\PduR_McQ.c	    53  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    54   *  LOCAL FUNCTION MACROS
; ..\component\PduR\Implementation\PduR_McQ.c	    55   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    56  
; ..\component\PduR\Implementation\PduR_McQ.c	    57  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    58   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\PduR\Implementation\PduR_McQ.c	    59   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    60  
; ..\component\PduR\Implementation\PduR_McQ.c	    61  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    62   *  LOCAL DATA PROTOTYPES
; ..\component\PduR\Implementation\PduR_McQ.c	    63   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    64  
; ..\component\PduR\Implementation\PduR_McQ.c	    65  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    66   *  GLOBAL DATA
; ..\component\PduR\Implementation\PduR_McQ.c	    67   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    68  
; ..\component\PduR\Implementation\PduR_McQ.c	    69  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    70   *  LOCAL FUNCTION PROTOTYPES
; ..\component\PduR\Implementation\PduR_McQ.c	    71   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    72  #define PDUR_START_SEC_CODE
; ..\component\PduR\Implementation\PduR_McQ.c	    73  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_McQ.c	    74  
; ..\component\PduR\Implementation\PduR_McQ.c	    75  
; ..\component\PduR\Implementation\PduR_McQ.c	    76  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	    77  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    78   * PduR_McQ_GetMcQBufferArrayRamReadIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	    79   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    80  /*! \brief      Gets the current read idx for the McQ buffer.
; ..\component\PduR\Implementation\PduR_McQ.c	    81   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	    82   *  \param[in]  mcqBufferRomIdx    id of the McQ Buffer
; ..\component\PduR\Implementation\PduR_McQ.c	    83   *  \param[in]  memIdx             memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	    84   *  \return     the read index
; ..\component\PduR\Implementation\PduR_McQ.c	    85   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	    86   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    87  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamReadIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	    88  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	    89  
; ..\component\PduR\Implementation\PduR_McQ.c	    90  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	    91  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	    92   * PduR_McQ_GetMcQBufferArrayRamWriteIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	    93   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	    94  /*! \brief      Sets the current write idx for the McQ buffer.
; ..\component\PduR\Implementation\PduR_McQ.c	    95   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	    96   *  \param[in]  mcqBufferRomIdx    id of the McQ Buffer
; ..\component\PduR\Implementation\PduR_McQ.c	    97   *  \param[in]  memIdx             memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	    98   *  \return     the write index
; ..\component\PduR\Implementation\PduR_McQ.c	    99   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   100   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   101  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamWriteIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   102  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   103  
; ..\component\PduR\Implementation\PduR_McQ.c	   104  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   105  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   106   * PduR_McQ_GetMcQBufferArrayRamPendingReadIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	   107   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   108  /*! \brief      Get the current Read idx for the pending McQ buffer.
; ..\component\PduR\Implementation\PduR_McQ.c	   109   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   110   *  \param[in]  mcqBufferRomIdx    id of the McQ Buffer
; ..\component\PduR\Implementation\PduR_McQ.c	   111   *  \param[in]  memIdx             memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   112   *  \return     the read index
; ..\component\PduR\Implementation\PduR_McQ.c	   113   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   114   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   115  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamPendingReadIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamPendingReadIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   116  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   117  
; ..\component\PduR\Implementation\PduR_McQ.c	   118  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   119  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   120   * PduR_McQ_GetMcQBufferArrayRamPendingWriteIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	   121   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   122  /*! \brief      Set the current Write idx for the pending McQ buffer.
; ..\component\PduR\Implementation\PduR_McQ.c	   123   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   124   *  \param[in]  mcqBufferRomIdx    id of the McQ Buffer
; ..\component\PduR\Implementation\PduR_McQ.c	   125   *  \return     the read index
; ..\component\PduR\Implementation\PduR_McQ.c	   126   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   127   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   128  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamPendingWriteIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamPendingWriteIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   129  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   130  
; ..\component\PduR\Implementation\PduR_McQ.c	   131  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   132  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   133   * PduR_McQ_GetTxConfirmationSize
; ..\component\PduR\Implementation\PduR_McQ.c	   134   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   135  /*! \brief      This function returns the size of the TxConfirmation Handle which will be put in the McQ.
; ..\component\PduR\Implementation\PduR_McQ.c	   136   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   137   *  \return     the size
; ..\component\PduR\Implementation\PduR_McQ.c	   138   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   139   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   140  LOCAL_INLINE FUNC(uint8, PDUR_CODE) PduR_McQ_GetTxConfirmationSize(void);
; ..\component\PduR\Implementation\PduR_McQ.c	   141  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   142  
; ..\component\PduR\Implementation\PduR_McQ.c	   143  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   144  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   145   * PduR_McQ_GetDataHeaderSize
; ..\component\PduR\Implementation\PduR_McQ.c	   146   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   147  /*! \brief      This function returns the size of the header which is put in front of the Pdu in the McQ.
; ..\component\PduR\Implementation\PduR_McQ.c	   148   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   149   *  \return     the header size
; ..\component\PduR\Implementation\PduR_McQ.c	   150   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   151   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   152  LOCAL_INLINE FUNC(uint8, PDUR_CODE) PduR_McQ_GetDataHeaderSize(void);
; ..\component\PduR\Implementation\PduR_McQ.c	   153  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   154  
; ..\component\PduR\Implementation\PduR_McQ.c	   155  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   156  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   157   * PduR_McQ_WriteUnusedHeader
; ..\component\PduR\Implementation\PduR_McQ.c	   158   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   159  /*! \brief      This function write an unused value to the write position.
; ..\component\PduR\Implementation\PduR_McQ.c	   160   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   161   *  \param[in]  writeIdx  Index to the position in the queue where the unused Entry shall be written
; ..\component\PduR\Implementation\PduR_McQ.c	   162   *  \param[in]  memIdx    memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   163   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   164   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   165  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_WriteUnusedHeader(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   166  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   167  
; ..\component\PduR\Implementation\PduR_McQ.c	   168  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   169  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   170   * PduR_McQ_SerializeData
; ..\component\PduR\Implementation\PduR_McQ.c	   171   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   172  /*! \brief      This function serializes the parameter into the queue starting at the writeIdx position.
; ..\component\PduR\Implementation\PduR_McQ.c	   173   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   174   *  \param[in]  writeIdx      Index to the position in the queue where the data shall be written
; ..\component\PduR\Implementation\PduR_McQ.c	   175   *  \param[in]  rmDestRomIdx  internal Handle Id of the Pdu to be serialized
; ..\component\PduR\Implementation\PduR_McQ.c	   176   *  \param[in]  data          pointer to the data to be serialized
; ..\component\PduR\Implementation\PduR_McQ.c	   177   *  \param[in]  memIdx        memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   178   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   179   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   180  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_SerializeData(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, PduR_RmDestRomEndIdxOfRmSrcRomType rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   181                                                            CONSTP2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   182  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   183  
; ..\component\PduR\Implementation\PduR_McQ.c	   184  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   185  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   186   * PduR_McQ_SerializeTxConfirmation
; ..\component\PduR\Implementation\PduR_McQ.c	   187   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   188  /*! \brief      This function serializes the tx Confirmation handle into the queue starting at the writeIdx position.
; ..\component\PduR\Implementation\PduR_McQ.c	   189   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   190   *  \param[in]  writeIdx      Index to the position in the queue where the data shall be written
; ..\component\PduR\Implementation\PduR_McQ.c	   191   *  \param[in]  rmSrcRomIdx   internal Handle Id of the Pdu to be serialized
; ..\component\PduR\Implementation\PduR_McQ.c	   192   *  \param[in]  memIdx        memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   193   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   194   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   195  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_SerializeTxConfirmation(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   196  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   197  
; ..\component\PduR\Implementation\PduR_McQ.c	   198  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   199  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   200   * PduR_McQ_GetWriteIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   201   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   202  /*! \brief      Returns a valid write Idx if the data fits into the buffer
; ..\component\PduR\Implementation\PduR_McQ.c	   203   *  \details    -
; ..\component\PduR\Implementation\PduR_McQ.c	   204   *  \param[in]  mcqBufferRomIdx      Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   205   *  \param[out] writeIdx             The returned writeIdx. Only valid for successful return value.
; ..\component\PduR\Implementation\PduR_McQ.c	   206   *  \param[in]  pduLengthWithHeader  length of the data to be put into the queue
; ..\component\PduR\Implementation\PduR_McQ.c	   207   *  \param[in]  memIdx               memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   208   *  \return     E_OK                Data fits into the buffer.
; ..\component\PduR\Implementation\PduR_McQ.c	   209   *              E_NOT_OK            Data does not fit into the buffer.
; ..\component\PduR\Implementation\PduR_McQ.c	   210   *  \pre        -
; ..\component\PduR\Implementation\PduR_McQ.c	   211   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   212  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_McQ_GetWriteIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   213                                                                    P2VAR(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType, AUTOMATIC, PDUR_APPL_DATA) writeIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   214                                                                    PduLengthType pduLengthWithHeader,
; ..\component\PduR\Implementation\PduR_McQ.c	   215                                                                    PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   216  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   217  
; ..\component\PduR\Implementation\PduR_McQ.c	   218  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   219  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   220   * PduR_McQ_DeserializeData
; ..\component\PduR\Implementation\PduR_McQ.c	   221   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   222  /*! \brief       This function deserializes the data which can be found at the readIdx position.
; ..\component\PduR\Implementation\PduR_McQ.c	   223   *  \details     -
; ..\component\PduR\Implementation\PduR_McQ.c	   224   *  \param[in]   readIdx       Index to the position in the queue where the data shall be read
; ..\component\PduR\Implementation\PduR_McQ.c	   225   *  \param[out]  rmDestRomIdx  Internal Handle Id of the deserialized Pdu
; ..\component\PduR\Implementation\PduR_McQ.c	   226   *  \param[out]  data          Data of the deserialized Pdu
; ..\component\PduR\Implementation\PduR_McQ.c	   227   *  \param[in]   memIdx        memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   228   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   229   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   230  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_DeserializeData(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   231                                                              P2VAR(PduR_RmDestRomEndIdxOfRmSrcRomType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   232                                                              P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data,
; ..\component\PduR\Implementation\PduR_McQ.c	   233                                                              PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   234  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   235  
; ..\component\PduR\Implementation\PduR_McQ.c	   236  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   237  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   238   * PduR_McQ_UpdateWriteIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   239   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   240  /*! \brief       Update the write pointer after a successful write operation.
; ..\component\PduR\Implementation\PduR_McQ.c	   241   *  \details -
; ..\component\PduR\Implementation\PduR_McQ.c	   242   *  \param[in]   mcQBufferRomIdx              Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   243   *  \param[in]   memIdx                       memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   244   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   245   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_McQ.c	   246   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   247   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   248   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   249  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_UpdateWriteIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   250  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   251  
; ..\component\PduR\Implementation\PduR_McQ.c	   252  #if(PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   253  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   254   * PduR_McQ_ReadTxConfirmation
; ..\component\PduR\Implementation\PduR_McQ.c	   255   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   256  /*! \brief       This function deserializes the tx confirmation handle which can be found at the readIdx position.
; ..\component\PduR\Implementation\PduR_McQ.c	   257   *  \details     -
; ..\component\PduR\Implementation\PduR_McQ.c	   258   *  \param[in]   mcQBufferRomIdx        Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   259   *  \param[in]   readIdx       Index to the position in the queue where the data shall be read
; ..\component\PduR\Implementation\PduR_McQ.c	   260   *  \param[in]   memIdx        memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   261   *  \return      the RmSrcRomIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   262   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   263   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   264  LOCAL_INLINE FUNC(PduR_RmSrcRomIdxOfRmDestRomType, PDUR_CODE) PduR_McQ_ReadTxConfirmation(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   265                                                                                            PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   266                                                                                            PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   267  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   268  
; ..\component\PduR\Implementation\PduR_McQ.c	   269  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   270  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   271   * PduR_McQ_ReadData
; ..\component\PduR\Implementation\PduR_McQ.c	   272   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   273  /*! \brief       Read data from the multicore queue.
; ..\component\PduR\Implementation\PduR_McQ.c	   274   *  \details -
; ..\component\PduR\Implementation\PduR_McQ.c	   275   *  \param[in]   mcQBufferRomIdx          Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   276   *  \param[in]   readIdx                  Index to the position in the queue where the data shall be read
; ..\component\PduR\Implementation\PduR_McQ.c	   277   *  \param[out]  rmDestRomIdx             Index to the destination Pdu to be queued
; ..\component\PduR\Implementation\PduR_McQ.c	   278   *  \param[out]  data                     pointer to the data
; ..\component\PduR\Implementation\PduR_McQ.c	   279   *  \param[in]   memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   280   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   281   *  \context     TASK
; ..\component\PduR\Implementation\PduR_McQ.c	   282   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   283   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   284   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   285  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_ReadData(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   286                                                       PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   287                                                       P2VAR(PduR_RmDestRomEndIdxOfRmSrcRomType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   288                                                       P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data,
; ..\component\PduR\Implementation\PduR_McQ.c	   289                                                       PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   290  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   291  
; ..\component\PduR\Implementation\PduR_McQ.c	   292  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   293  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   294   * PduR_McQ_GetReadIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   295   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   296  /*! \brief       Get a valid readIdx.
; ..\component\PduR\Implementation\PduR_McQ.c	   297   *  \details -
; ..\component\PduR\Implementation\PduR_McQ.c	   298   *  \param[in]   mcqBufferRomIdx          Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   299   *  \param[out]  readIdx                  the valid readIdx.
; ..\component\PduR\Implementation\PduR_McQ.c	   300   *  \param[in]   memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   301   *  \return      E_OK                     Some data is available to be read.
; ..\component\PduR\Implementation\PduR_McQ.c	   302   *               E_NOT_OK                 No data is available to be read.
; ..\component\PduR\Implementation\PduR_McQ.c	   303   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   304   *  \context     TASK
; ..\component\PduR\Implementation\PduR_McQ.c	   305   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   306   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   307   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   308  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_McQ_GetReadIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   309                                                                   P2VAR(PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType, AUTOMATIC, PDUR_APPL_DATA) readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   310                                                                   PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   311  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   312  
; ..\component\PduR\Implementation\PduR_McQ.c	   313  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   314  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   315   * PduR_McQ_UpdateReadIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   316   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   317  /*! \brief       Update the read pointer after a successful read operation.
; ..\component\PduR\Implementation\PduR_McQ.c	   318   *  \details -
; ..\component\PduR\Implementation\PduR_McQ.c	   319   *  \param[in]   mcQBufferRomIdx        Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   320   *  \param[in]   memIdx                 memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   321   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   322   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_McQ.c	   323   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   324   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   325   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   326  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_UpdateReadIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   327  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   328  
; ..\component\PduR\Implementation\PduR_McQ.c	   329  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   330  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   331   * PduR_McQBufferArrayRamWrite
; ..\component\PduR\Implementation\PduR_McQ.c	   332   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   333  /*! \brief       Write the provided byte into the McQBufferArrayRam
; ..\component\PduR\Implementation\PduR_McQ.c	   334   *  \details -
; ..\component\PduR\Implementation\PduR_McQ.c	   335   *  \param[in]   writeIdx               Index of McQBufferArrayRam
; ..\component\PduR\Implementation\PduR_McQ.c	   336   *  \param[in]   byteToBeWritten        Byte to be written into the McQBufferArrayRam
; ..\component\PduR\Implementation\PduR_McQ.c	   337   *  \param[in]   memIdx                 memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   338   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   339   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_McQ.c	   340   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   341   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   342   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   343  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQBufferArrayRamWrite(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, uint8 byteToBeWritten, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   344  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   345  
; ..\component\PduR\Implementation\PduR_McQ.c	   346  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   347  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   348   * PduR_SetMcQBufferArrayRamPendingReadIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   349   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   350  /*! \brief       Set the provided readIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   351   *  \details -
; ..\component\PduR\Implementation\PduR_McQ.c	   352   *  \param[in]   mcQBufferRomIdx         Id of the queue to be used
; ..\component\PduR\Implementation\PduR_McQ.c	   353   *  \param[in]   readIdx                 Value of the read index
; ..\component\PduR\Implementation\PduR_McQ.c	   354   *  \param[in]   memIdx                  memory section index
; ..\component\PduR\Implementation\PduR_McQ.c	   355   *  \pre         -
; ..\component\PduR\Implementation\PduR_McQ.c	   356   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_McQ.c	   357   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   358   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_McQ.c	   359   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   360  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_SetMcQBufferArrayRamPendingReadIdx(PduR_McQBufferRomIterType mcQBufferRomIdx, PduR_McQBufferArrayRamPendingReadIdxOfMcQBufferRamType readIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   361  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   362  
; ..\component\PduR\Implementation\PduR_McQ.c	   363  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   364   *  LOCAL FUNCTIONS
; ..\component\PduR\Implementation\PduR_McQ.c	   365   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   366  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   367  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   368   * PduR_McQ_Init
; ..\component\PduR\Implementation\PduR_McQ.c	   369   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   370  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   371   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   372   *
; ..\component\PduR\Implementation\PduR_McQ.c	   373   *
; ..\component\PduR\Implementation\PduR_McQ.c	   374   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   375  FUNC(void, PDUR_CODE) PduR_McQ_Init(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   376  {
; ..\component\PduR\Implementation\PduR_McQ.c	   377    PduR_McQBufferRomIterType mcqBufferRomIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   378    for(mcqBufferRomIdx = 0u; mcqBufferRomIdx < PduR_GetSizeOfMcQBufferRom(memIdx); mcqBufferRomIdx++)
; ..\component\PduR\Implementation\PduR_McQ.c	   379    {
; ..\component\PduR\Implementation\PduR_McQ.c	   380      PduR_McQBufferArrayRamStartIdxOfMcQBufferRomType startIdxOfBuffer = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   381  
; ..\component\PduR\Implementation\PduR_McQ.c	   382      PduR_SetMcQBufferArrayRamPendingWriteIdxOfMcQBufferRam(mcqBufferRomIdx, startIdxOfBuffer, memIdx);  /* SBSW_PDUR_CSL02 */
; ..\component\PduR\Implementation\PduR_McQ.c	   383      PduR_SetMcQBufferArrayRamPendingReadIdx(mcqBufferRomIdx, startIdxOfBuffer, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   384      PduR_SetMcQBufferArrayRamReadIdxOfMcQBufferRam(mcqBufferRomIdx, startIdxOfBuffer, memIdx);  /* SBSW_PDUR_CSL02 */
; ..\component\PduR\Implementation\PduR_McQ.c	   385      PduR_SetMcQBufferArrayRamWriteIdxOfMcQBufferRam(mcqBufferRomIdx, startIdxOfBuffer, memIdx); /* SBSW_PDUR_CSL02 */
; ..\component\PduR\Implementation\PduR_McQ.c	   386    }
; ..\component\PduR\Implementation\PduR_McQ.c	   387  }
; ..\component\PduR\Implementation\PduR_McQ.c	   388  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   389  
; ..\component\PduR\Implementation\PduR_McQ.c	   390  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   391  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   392   * PduR_McQ_WriteTxConfirmation
; ..\component\PduR\Implementation\PduR_McQ.c	   393   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   394  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   395   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   396   *
; ..\component\PduR\Implementation\PduR_McQ.c	   397   *
; ..\component\PduR\Implementation\PduR_McQ.c	   398   *
; ..\component\PduR\Implementation\PduR_McQ.c	   399   *
; ..\component\PduR\Implementation\PduR_McQ.c	   400   *
; ..\component\PduR\Implementation\PduR_McQ.c	   401   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   402  FUNC(Std_ReturnType, PDUR_CODE) PduR_McQ_WriteTxConfirmation(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx, PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   403  {
; ..\component\PduR\Implementation\PduR_McQ.c	   404    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_McQ.c	   405    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   406  
; ..\component\PduR\Implementation\PduR_McQ.c	   407    SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR_McQ.c	   408    /* #10 If confirmation fits into the multicore queue */
; ..\component\PduR\Implementation\PduR_McQ.c	   409    if(PduR_McQ_GetWriteIdx(mcQBufferRomIdx, &writeIdx, PduR_McQ_GetTxConfirmationSize(), memIdx) == E_OK)        /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   410    {
; ..\component\PduR\Implementation\PduR_McQ.c	   411      /* #20 Serialize tx Confirmation handle into the queue starting at the writeIdx position */
; ..\component\PduR\Implementation\PduR_McQ.c	   412      PduR_McQ_SerializeTxConfirmation(writeIdx, rmSrcRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   413  
; ..\component\PduR\Implementation\PduR_McQ.c	   414      /* #30 Update writeIdx and return E_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   415      PduR_McQ_UpdateWriteIdx(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   416      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   417    }
; ..\component\PduR\Implementation\PduR_McQ.c	   418    /* #40 Otherwise return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   419    else
; ..\component\PduR\Implementation\PduR_McQ.c	   420    {
; ..\component\PduR\Implementation\PduR_McQ.c	   421      retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   422    }
; ..\component\PduR\Implementation\PduR_McQ.c	   423    SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR_McQ.c	   424    return retVal;
; ..\component\PduR\Implementation\PduR_McQ.c	   425  }
; ..\component\PduR\Implementation\PduR_McQ.c	   426  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   427  
; ..\component\PduR\Implementation\PduR_McQ.c	   428  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   429  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   430   * PduR_McQ_WriteData
; ..\component\PduR\Implementation\PduR_McQ.c	   431   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   432  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   433   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   434   *
; ..\component\PduR\Implementation\PduR_McQ.c	   435   *
; ..\component\PduR\Implementation\PduR_McQ.c	   436   *
; ..\component\PduR\Implementation\PduR_McQ.c	   437   *
; ..\component\PduR\Implementation\PduR_McQ.c	   438   *
; ..\component\PduR\Implementation\PduR_McQ.c	   439   *
; ..\component\PduR\Implementation\PduR_McQ.c	   440   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   441  FUNC(Std_ReturnType, PDUR_CODE) PduR_McQ_WriteData(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx, PduR_RmDestRomEndIdxOfRmSrcRomType rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   442                                                     CONSTP2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   443  {
; ..\component\PduR\Implementation\PduR_McQ.c	   444    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_McQ.c	   445    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_McQ.c	   446    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   447  
; ..\component\PduR\Implementation\PduR_McQ.c	   448    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_McQ.c	   449    /* #10 Check input parameters */
; ..\component\PduR\Implementation\PduR_McQ.c	   450  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR_McQ.c	   451    if(data == NULL_PTR)
; ..\component\PduR\Implementation\PduR_McQ.c	   452    {
; ..\component\PduR\Implementation\PduR_McQ.c	   453      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_McQ.c	   454    }
; ..\component\PduR\Implementation\PduR_McQ.c	   455    else if(data->SduDataPtr == NULL_PTR)
; ..\component\PduR\Implementation\PduR_McQ.c	   456    {
; ..\component\PduR\Implementation\PduR_McQ.c	   457      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_McQ.c	   458    }
; ..\component\PduR\Implementation\PduR_McQ.c	   459    /* #20 If no error occurred */
; ..\component\PduR\Implementation\PduR_McQ.c	   460    else
; ..\component\PduR\Implementation\PduR_McQ.c	   461  # endif
; ..\component\PduR\Implementation\PduR_McQ.c	   462    {
; ..\component\PduR\Implementation\PduR_McQ.c	   463      SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR_McQ.c	   464      /* #30 If data fits into the multicore queue, serialize data, update write index and return E_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   465      if(PduR_McQ_GetWriteIdx(mcQBufferRomIdx, &writeIdx, data->SduLength + PduR_McQ_GetDataHeaderSize(), memIdx) == E_OK)        /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   466      {
; ..\component\PduR\Implementation\PduR_McQ.c	   467        PduR_McQ_SerializeData(writeIdx, rmDestRomIdx, data, memIdx);     /* SBSW_PDUR_FCT_CALL_P2CONST */
; ..\component\PduR\Implementation\PduR_McQ.c	   468        PduR_McQ_UpdateWriteIdx(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   469        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   470      }
; ..\component\PduR\Implementation\PduR_McQ.c	   471      /* #40 Otherwise return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   472      else
; ..\component\PduR\Implementation\PduR_McQ.c	   473      {
; ..\component\PduR\Implementation\PduR_McQ.c	   474        retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   475      }
; ..\component\PduR\Implementation\PduR_McQ.c	   476      SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\component\PduR\Implementation\PduR_McQ.c	   477    }
; ..\component\PduR\Implementation\PduR_McQ.c	   478  /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_McQ.c	   479  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   480    /* #50 Otherwise, report DET error */
; ..\component\PduR\Implementation\PduR_McQ.c	   481    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR_McQ.c	   482    {
; ..\component\PduR\Implementation\PduR_McQ.c	   483      PduR_Det_ReportError(PDUR_MCQ_WRITE_DATA, errorId);
; ..\component\PduR\Implementation\PduR_McQ.c	   484    }
; ..\component\PduR\Implementation\PduR_McQ.c	   485  # endif
; ..\component\PduR\Implementation\PduR_McQ.c	   486    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_McQ.c	   487  
; ..\component\PduR\Implementation\PduR_McQ.c	   488    return retVal;
; ..\component\PduR\Implementation\PduR_McQ.c	   489  }
; ..\component\PduR\Implementation\PduR_McQ.c	   490  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   491  
; ..\component\PduR\Implementation\PduR_McQ.c	   492  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   493  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   494   * PduR_McQ_GetWriteIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   495   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   496  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   497   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   498   *
; ..\component\PduR\Implementation\PduR_McQ.c	   499   *
; ..\component\PduR\Implementation\PduR_McQ.c	   500   *
; ..\component\PduR\Implementation\PduR_McQ.c	   501   *
; ..\component\PduR\Implementation\PduR_McQ.c	   502   *
; ..\component\PduR\Implementation\PduR_McQ.c	   503   *
; ..\component\PduR\Implementation\PduR_McQ.c	   504   *
; ..\component\PduR\Implementation\PduR_McQ.c	   505   *
; ..\component\PduR\Implementation\PduR_McQ.c	   506   *
; ..\component\PduR\Implementation\PduR_McQ.c	   507   *
; ..\component\PduR\Implementation\PduR_McQ.c	   508   *
; ..\component\PduR\Implementation\PduR_McQ.c	   509   *
; ..\component\PduR\Implementation\PduR_McQ.c	   510   *
; ..\component\PduR\Implementation\PduR_McQ.c	   511   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   512  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_McQ_GetWriteIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   513                                                                    P2VAR(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType, AUTOMATIC, PDUR_APPL_DATA) writeIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   514                                                                    PduLengthType pduLengthWithHeader,
; ..\component\PduR\Implementation\PduR_McQ.c	   515                                                                    PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   516  {
; ..\component\PduR\Implementation\PduR_McQ.c	   517    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_McQ.c	   518  
; ..\component\PduR\Implementation\PduR_McQ.c	   519    PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType readIdx = PduR_McQ_GetMcQBufferArrayRamReadIdxSafe(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   520    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType localWriteIdx = PduR_McQ_GetMcQBufferArrayRamWriteIdxSafe(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   521  
; ..\component\PduR\Implementation\PduR_McQ.c	   522    PduR_McQBufferArrayRamStartIdxOfMcQBufferRomType startIdxOfBuffer = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   523    PduR_McQBufferArrayRamEndIdxOfMcQBufferRomType endIdxOfBuffer = PduR_GetMcQBufferArrayRamEndIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx) - 1u;  /* ComStackLibs EndIdx is actually the first out of bounds index */
; ..\component\PduR\Implementation\PduR_McQ.c	   524  
; ..\component\PduR\Implementation\PduR_McQ.c	   525    /* #10 If buffer is full, return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   526    if(((localWriteIdx + 1u) == readIdx) || ((readIdx == startIdxOfBuffer) && (localWriteIdx == endIdxOfBuffer)))
; ..\component\PduR\Implementation\PduR_McQ.c	   527    {
; ..\component\PduR\Implementation\PduR_McQ.c	   528      /* Buffer is full */
; ..\component\PduR\Implementation\PduR_McQ.c	   529      retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   530    }
; ..\component\PduR\Implementation\PduR_McQ.c	   531    /* #20 else if write index < read index */
; ..\component\PduR\Implementation\PduR_McQ.c	   532    else if(localWriteIdx < readIdx)      /* write is possible until read Idx is reached. Could be too small though */
; ..\component\PduR\Implementation\PduR_McQ.c	   533    {
; ..\component\PduR\Implementation\PduR_McQ.c	   534      PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType linearBufferSize = readIdx - localWriteIdx - 1u;
; ..\component\PduR\Implementation\PduR_McQ.c	   535      /* #30 If multicore queue has enough space */
; ..\component\PduR\Implementation\PduR_McQ.c	   536      if(linearBufferSize >= pduLengthWithHeader)
; ..\component\PduR\Implementation\PduR_McQ.c	   537      {
; ..\component\PduR\Implementation\PduR_McQ.c	   538        *writeIdx = localWriteIdx;        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   539        /* #40 Set write index to internal write index and increase pending-write-index to next slot */
; ..\component\PduR\Implementation\PduR_McQ.c	   540        PduR_SetMcQBufferArrayRamPendingWriteIdxOfMcQBufferRam(mcqBufferRomIdx, localWriteIdx + pduLengthWithHeader, memIdx);     /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   541        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   542      }
; ..\component\PduR\Implementation\PduR_McQ.c	   543      /* #50 Otherwise, return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   544      else
; ..\component\PduR\Implementation\PduR_McQ.c	   545      {
; ..\component\PduR\Implementation\PduR_McQ.c	   546        retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   547      }
; ..\component\PduR\Implementation\PduR_McQ.c	   548    }
; ..\component\PduR\Implementation\PduR_McQ.c	   549    /* #60 else */
; ..\component\PduR\Implementation\PduR_McQ.c	   550    else
; ..\component\PduR\Implementation\PduR_McQ.c	   551    {     /* readIdx < localWriteIdx OR readIdx == localWriteIdx */
; ..\component\PduR\Implementation\PduR_McQ.c	   552      PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType linearBufferSizeAtEnd;
; ..\component\PduR\Implementation\PduR_McQ.c	   553      PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType linearBufferSizeAtFront;
; ..\component\PduR\Implementation\PduR_McQ.c	   554  
; ..\component\PduR\Implementation\PduR_McQ.c	   555      linearBufferSizeAtEnd = (localWriteIdx == endIdxOfBuffer) ? 0u : (endIdxOfBuffer - localWriteIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   556      linearBufferSizeAtFront = (readIdx == startIdxOfBuffer) ? 0u : (readIdx - startIdxOfBuffer - 1u);
; ..\component\PduR\Implementation\PduR_McQ.c	   557      /* #70 If there is enough space at the end of the queue, set write index to internal write index and increase pending-write-index to next slot and return E_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   558      if(linearBufferSizeAtEnd >= pduLengthWithHeader)
; ..\component\PduR\Implementation\PduR_McQ.c	   559      {
; ..\component\PduR\Implementation\PduR_McQ.c	   560        *writeIdx = localWriteIdx;        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   561        /* Update write Idx */
; ..\component\PduR\Implementation\PduR_McQ.c	   562        PduR_SetMcQBufferArrayRamPendingWriteIdxOfMcQBufferRam(mcqBufferRomIdx, localWriteIdx + pduLengthWithHeader, memIdx);     /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   563        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   564      }
; ..\component\PduR\Implementation\PduR_McQ.c	   565      /* #80 Otherwise, if there is enough space at the beginning of the queue */
; ..\component\PduR\Implementation\PduR_McQ.c	   566      else if(linearBufferSizeAtFront >= pduLengthWithHeader)
; ..\component\PduR\Implementation\PduR_McQ.c	   567      {
; ..\component\PduR\Implementation\PduR_McQ.c	   568        /* #90 Mark remaining bytes at end as unused */
; ..\component\PduR\Implementation\PduR_McQ.c	   569        PduR_McQ_WriteUnusedHeader(localWriteIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   570  
; ..\component\PduR\Implementation\PduR_McQ.c	   571        /* #100 Set write index to start index and increase pending-write-index to next slot */
; ..\component\PduR\Implementation\PduR_McQ.c	   572        *writeIdx = startIdxOfBuffer;     /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   573  
; ..\component\PduR\Implementation\PduR_McQ.c	   574        /* Update write Idx */
; ..\component\PduR\Implementation\PduR_McQ.c	   575        PduR_SetMcQBufferArrayRamPendingWriteIdxOfMcQBufferRam(mcqBufferRomIdx, (PduR_McQBufferArrayRamPendingWriteIdxOfMcQBufferRamType) startIdxOfBuffer + pduLengthWithHeader, memIdx);        /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   576  
; ..\component\PduR\Implementation\PduR_McQ.c	   577        /* #110 Return E_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   578        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   579      }
; ..\component\PduR\Implementation\PduR_McQ.c	   580      /* #120 Otherwise, return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   581      else
; ..\component\PduR\Implementation\PduR_McQ.c	   582      {
; ..\component\PduR\Implementation\PduR_McQ.c	   583        /* neither fits at the end nor the beginning: do nothing */
; ..\component\PduR\Implementation\PduR_McQ.c	   584        retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   585      }
; ..\component\PduR\Implementation\PduR_McQ.c	   586    }
; ..\component\PduR\Implementation\PduR_McQ.c	   587  
; ..\component\PduR\Implementation\PduR_McQ.c	   588    return retVal;
; ..\component\PduR\Implementation\PduR_McQ.c	   589  }
; ..\component\PduR\Implementation\PduR_McQ.c	   590  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   591  
; ..\component\PduR\Implementation\PduR_McQ.c	   592  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   593  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   594   * PduR_McQ_GetDataHeaderSize
; ..\component\PduR\Implementation\PduR_McQ.c	   595   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   596  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   597   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   598   *
; ..\component\PduR\Implementation\PduR_McQ.c	   599   *
; ..\component\PduR\Implementation\PduR_McQ.c	   600   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   601  LOCAL_INLINE FUNC(uint8, PDUR_CODE) PduR_McQ_GetDataHeaderSize(void)
; ..\component\PduR\Implementation\PduR_McQ.c	   602  {
; ..\component\PduR\Implementation\PduR_McQ.c	   603    return PDUR_MCQ_SIZE_OF_HEADER + sizeof(PduR_RmDestRomEndIdxOfRmSrcRomType) + sizeof(PduLengthType);
; ..\component\PduR\Implementation\PduR_McQ.c	   604  }
; ..\component\PduR\Implementation\PduR_McQ.c	   605  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   606  
; ..\component\PduR\Implementation\PduR_McQ.c	   607  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   608  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   609   * PduR_McQ_GetTxConfirmationSize
; ..\component\PduR\Implementation\PduR_McQ.c	   610   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   611  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   612   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   613   *
; ..\component\PduR\Implementation\PduR_McQ.c	   614   *
; ..\component\PduR\Implementation\PduR_McQ.c	   615   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   616  LOCAL_INLINE FUNC(uint8, PDUR_CODE) PduR_McQ_GetTxConfirmationSize(void)
; ..\component\PduR\Implementation\PduR_McQ.c	   617  {
; ..\component\PduR\Implementation\PduR_McQ.c	   618    return PDUR_MCQ_SIZE_OF_HEADER + sizeof(PduR_RmSrcRomIdxOfRmDestRomType);
; ..\component\PduR\Implementation\PduR_McQ.c	   619  }
; ..\component\PduR\Implementation\PduR_McQ.c	   620  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   621  
; ..\component\PduR\Implementation\PduR_McQ.c	   622  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   623  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   624   * PduR_McQ_WriteUnusedHeader
; ..\component\PduR\Implementation\PduR_McQ.c	   625   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   626  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   627   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   628   *
; ..\component\PduR\Implementation\PduR_McQ.c	   629   *
; ..\component\PduR\Implementation\PduR_McQ.c	   630   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   631  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_WriteUnusedHeader(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   632  {
; ..\component\PduR\Implementation\PduR_McQ.c	   633    PduR_McQBufferArrayRamWrite(writeIdx, PDUR_MCQ_UNUSED_HEADER, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   634  }
; ..\component\PduR\Implementation\PduR_McQ.c	   635  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   636  
; ..\component\PduR\Implementation\PduR_McQ.c	   637  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   638  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   639   * PduR_McQ_SerializeData
; ..\component\PduR\Implementation\PduR_McQ.c	   640   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   641  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   642   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   643   *
; ..\component\PduR\Implementation\PduR_McQ.c	   644   *
; ..\component\PduR\Implementation\PduR_McQ.c	   645   *
; ..\component\PduR\Implementation\PduR_McQ.c	   646   *
; ..\component\PduR\Implementation\PduR_McQ.c	   647   *
; ..\component\PduR\Implementation\PduR_McQ.c	   648   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   649  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_SerializeData(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, PduR_RmDestRomEndIdxOfRmSrcRomType rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   650                                                            CONSTP2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   651  {
; ..\component\PduR\Implementation\PduR_McQ.c	   652    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdxIntern = writeIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   653    /* #10 Set Header Value */
; ..\component\PduR\Implementation\PduR_McQ.c	   654    PduR_McQBufferArrayRamWrite(writeIdxIntern, PDUR_MCQ_DATA_HEADER, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   655    writeIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   656    /* #20 Serialize rmDestRomIdx */
; ..\component\PduR\Implementation\PduR_McQ.c	   657    {
; ..\component\PduR\Implementation\PduR_McQ.c	   658      uint8 rmDestRomIterator = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   659      PduR_RmDestRomEndIdxOfRmSrcRomType tempRmDestRomIdx = rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   660      uint8 shiftOperand = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   661      for(; rmDestRomIterator < sizeof(PduR_RmDestRomEndIdxOfRmSrcRomType); rmDestRomIterator++)
; ..\component\PduR\Implementation\PduR_McQ.c	   662      {
; ..\component\PduR\Implementation\PduR_McQ.c	   663        tempRmDestRomIdx = tempRmDestRomIdx >> shiftOperand;      /* PRQA S 2985 */ /* MD_PduR_2985 */
; ..\component\PduR\Implementation\PduR_McQ.c	   664        PduR_McQBufferArrayRamWrite(writeIdxIntern, (uint8) tempRmDestRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   665        shiftOperand = 8u;        /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_McQ.c	   666        writeIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   667      }
; ..\component\PduR\Implementation\PduR_McQ.c	   668    }
; ..\component\PduR\Implementation\PduR_McQ.c	   669    /* #30 Serialize PduLengthType */
; ..\component\PduR\Implementation\PduR_McQ.c	   670    {
; ..\component\PduR\Implementation\PduR_McQ.c	   671      uint8 pduLengthTypeIterator = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   672      PduLengthType tempPduLength = data->SduLength;
; ..\component\PduR\Implementation\PduR_McQ.c	   673      for(; pduLengthTypeIterator < sizeof(PduLengthType); pduLengthTypeIterator++)
; ..\component\PduR\Implementation\PduR_McQ.c	   674      {
; ..\component\PduR\Implementation\PduR_McQ.c	   675        PduR_McQBufferArrayRamWrite(writeIdxIntern, (uint8) tempPduLength, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   676        tempPduLength = tempPduLength >> 8u;      /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_McQ.c	   677        writeIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   678      }
; ..\component\PduR\Implementation\PduR_McQ.c	   679    }
; ..\component\PduR\Implementation\PduR_McQ.c	   680    /* #40 Serialize Payload */
; ..\component\PduR\Implementation\PduR_McQ.c	   681    if((writeIdxIntern + data->SduLength) < PduR_GetSizeOfMcQBufferArrayRam(memIdx))    /* COV_PDUR_VAR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_McQ.c	   682    {
; ..\component\PduR\Implementation\PduR_McQ.c	   683      VStdMemCpyRamToRam(PduR_GetAddrMcQBufferArrayRam(writeIdxIntern, memIdx), data->SduDataPtr, data->SduLength);       /* SBSW_PDUR_MCQ_RAMARRAY_RTCHECK_FCTCALL */ /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */
; ..\component\PduR\Implementation\PduR_McQ.c	   684    }
; ..\component\PduR\Implementation\PduR_McQ.c	   685    else
; ..\component\PduR\Implementation\PduR_McQ.c	   686    {
; ..\component\PduR\Implementation\PduR_McQ.c	   687      PduR_Det_ReportError(PDUR_MCQ_WRITE_DATA, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_McQ.c	   688    }
; ..\component\PduR\Implementation\PduR_McQ.c	   689  }
; ..\component\PduR\Implementation\PduR_McQ.c	   690  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   691  
; ..\component\PduR\Implementation\PduR_McQ.c	   692  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   693  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   694   * PduR_McQ_SerializeTxConfirmation
; ..\component\PduR\Implementation\PduR_McQ.c	   695   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   696  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   697   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   698   *
; ..\component\PduR\Implementation\PduR_McQ.c	   699   *
; ..\component\PduR\Implementation\PduR_McQ.c	   700   *
; ..\component\PduR\Implementation\PduR_McQ.c	   701   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   702  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_SerializeTxConfirmation(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   703  {
; ..\component\PduR\Implementation\PduR_McQ.c	   704    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdxIntern = writeIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   705    /* #10 Set Header Value */
; ..\component\PduR\Implementation\PduR_McQ.c	   706    PduR_McQBufferArrayRamWrite(writeIdxIntern, PDUR_MCQ_TXCONFIRMATION_HEADER, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   707    writeIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   708    /* #20 Serialize rmSrcRomIdx */
; ..\component\PduR\Implementation\PduR_McQ.c	   709    {
; ..\component\PduR\Implementation\PduR_McQ.c	   710      uint8 rmSrcRomIterator = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   711      uint8 shiftOperand = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   712      PduR_RmSrcRomIdxOfRmDestRomType tempRmSrcRomIdx = rmSrcRomIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   713      for(; rmSrcRomIterator < sizeof(PduR_RmSrcRomIdxOfRmDestRomType); rmSrcRomIterator++)
; ..\component\PduR\Implementation\PduR_McQ.c	   714      {
; ..\component\PduR\Implementation\PduR_McQ.c	   715        tempRmSrcRomIdx = tempRmSrcRomIdx >> shiftOperand;        /* PRQA S 2985 */ /* MD_PduR_2985 */
; ..\component\PduR\Implementation\PduR_McQ.c	   716        PduR_McQBufferArrayRamWrite(writeIdxIntern, (uint8) tempRmSrcRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   717        shiftOperand = 8u;        /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_McQ.c	   718        writeIdxIntern++; /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_McQ.c	   719      }
; ..\component\PduR\Implementation\PduR_McQ.c	   720    }
; ..\component\PduR\Implementation\PduR_McQ.c	   721  }
; ..\component\PduR\Implementation\PduR_McQ.c	   722  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   723  
; ..\component\PduR\Implementation\PduR_McQ.c	   724  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   725  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   726   * PduR_McQ_DeserializeData
; ..\component\PduR\Implementation\PduR_McQ.c	   727   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   728  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   729   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   730   *
; ..\component\PduR\Implementation\PduR_McQ.c	   731   *
; ..\component\PduR\Implementation\PduR_McQ.c	   732   *
; ..\component\PduR\Implementation\PduR_McQ.c	   733   *
; ..\component\PduR\Implementation\PduR_McQ.c	   734   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   735  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_DeserializeData(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   736                                                              P2VAR(PduR_RmDestRomEndIdxOfRmSrcRomType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   737                                                              P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data,
; ..\component\PduR\Implementation\PduR_McQ.c	   738                                                              PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   739  {
; ..\component\PduR\Implementation\PduR_McQ.c	   740    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType readIdxIntern = readIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   741    /* skip Header */
; ..\component\PduR\Implementation\PduR_McQ.c	   742    readIdxIntern += PDUR_MCQ_SIZE_OF_HEADER;
; ..\component\PduR\Implementation\PduR_McQ.c	   743    /* #10 Deserialize rmDestRomIdx */
; ..\component\PduR\Implementation\PduR_McQ.c	   744    {
; ..\component\PduR\Implementation\PduR_McQ.c	   745      uint8 rmDestRomIterator = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   746      PduR_RmDestRomEndIdxOfRmSrcRomType tempRmDestRomIdx = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   747      uint8 offset = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   748      for(; rmDestRomIterator < sizeof(PduR_RmDestRomEndIdxOfRmSrcRomType); rmDestRomIterator++)
; ..\component\PduR\Implementation\PduR_McQ.c	   749      {
; ..\component\PduR\Implementation\PduR_McQ.c	   750        tempRmDestRomIdx = tempRmDestRomIdx | (((PduR_RmDestRomEndIdxOfRmSrcRomType) PduR_GetMcQBufferArrayRam(readIdxIntern, memIdx)) << offset);        /* PRQA S 2985 */ /* MD_PduR_2985 */
; ..\component\PduR\Implementation\PduR_McQ.c	   751        offset += 8u;     /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_McQ.c	   752        readIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   753      }
; ..\component\PduR\Implementation\PduR_McQ.c	   754      *rmDestRomIdx = tempRmDestRomIdx;   /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   755    }
; ..\component\PduR\Implementation\PduR_McQ.c	   756    /* #20 Deserialize PduLengthType */
; ..\component\PduR\Implementation\PduR_McQ.c	   757    {
; ..\component\PduR\Implementation\PduR_McQ.c	   758      uint8 pduLengthTypeIterator = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   759      PduLengthType tempPduLength = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   760      uint8 offset = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   761      for(; pduLengthTypeIterator < sizeof(PduLengthType); pduLengthTypeIterator++)
; ..\component\PduR\Implementation\PduR_McQ.c	   762      {
; ..\component\PduR\Implementation\PduR_McQ.c	   763        tempPduLength = tempPduLength | (((PduLengthType) PduR_GetMcQBufferArrayRam(readIdxIntern, memIdx)) << offset);
; ..\component\PduR\Implementation\PduR_McQ.c	   764        offset += 8u;
; ..\component\PduR\Implementation\PduR_McQ.c	   765        readIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   766      }
; ..\component\PduR\Implementation\PduR_McQ.c	   767      data->SduLength = tempPduLength;    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   768    }
; ..\component\PduR\Implementation\PduR_McQ.c	   769    /* #30 Return pointer point to payload */
; ..\component\PduR\Implementation\PduR_McQ.c	   770    data->SduDataPtr = PduR_GetAddrMcQBufferArrayRam(readIdxIntern, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   771  }
; ..\component\PduR\Implementation\PduR_McQ.c	   772  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   773  
; ..\component\PduR\Implementation\PduR_McQ.c	   774  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   775  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   776   * PduR_McQ_ReadTxConfirmation
; ..\component\PduR\Implementation\PduR_McQ.c	   777   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   778  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   779   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   780   *
; ..\component\PduR\Implementation\PduR_McQ.c	   781   *
; ..\component\PduR\Implementation\PduR_McQ.c	   782   *
; ..\component\PduR\Implementation\PduR_McQ.c	   783   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   784  LOCAL_INLINE FUNC(PduR_RmSrcRomIdxOfRmDestRomType, PDUR_CODE) PduR_McQ_ReadTxConfirmation(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   785                                                                                            PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   786                                                                                            PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   787  {
; ..\component\PduR\Implementation\PduR_McQ.c	   788    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType readIdxIntern = readIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   789    /* skip Header */
; ..\component\PduR\Implementation\PduR_McQ.c	   790    readIdxIntern += PDUR_MCQ_SIZE_OF_HEADER;
; ..\component\PduR\Implementation\PduR_McQ.c	   791    /* #10 Deserialize rmSrcRomIdx */
; ..\component\PduR\Implementation\PduR_McQ.c	   792    {
; ..\component\PduR\Implementation\PduR_McQ.c	   793      uint8 rmSrcRomIterator = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   794      PduR_RmSrcRomIdxOfRmDestRomType tempRmSrcRomIdx = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   795      uint8 offset = 0u;
; ..\component\PduR\Implementation\PduR_McQ.c	   796      for(; rmSrcRomIterator < sizeof(PduR_RmSrcRomIdxOfRmDestRomType); rmSrcRomIterator++)
; ..\component\PduR\Implementation\PduR_McQ.c	   797      {
; ..\component\PduR\Implementation\PduR_McQ.c	   798        tempRmSrcRomIdx = tempRmSrcRomIdx | (((PduR_RmSrcRomIdxOfRmDestRomType) PduR_GetMcQBufferArrayRam(readIdxIntern, memIdx)) << offset);     /* PRQA S 2985 */ /* MD_PduR_2985 */
; ..\component\PduR\Implementation\PduR_McQ.c	   799        offset += 8u;     /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_McQ.c	   800        readIdxIntern++;
; ..\component\PduR\Implementation\PduR_McQ.c	   801      }
; ..\component\PduR\Implementation\PduR_McQ.c	   802  
; ..\component\PduR\Implementation\PduR_McQ.c	   803      /* #20 Set pending-read-idx to next element to be read */
; ..\component\PduR\Implementation\PduR_McQ.c	   804      PduR_SetMcQBufferArrayRamPendingReadIdx(mcQBufferRomIdx, readIdxIntern, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   805      return tempRmSrcRomIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   806    }
; ..\component\PduR\Implementation\PduR_McQ.c	   807  }
; ..\component\PduR\Implementation\PduR_McQ.c	   808  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   809  
; ..\component\PduR\Implementation\PduR_McQ.c	   810  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   811  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   812   * PduR_McQ_ReadData
; ..\component\PduR\Implementation\PduR_McQ.c	   813   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   814  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   815   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   816   *
; ..\component\PduR\Implementation\PduR_McQ.c	   817   *
; ..\component\PduR\Implementation\PduR_McQ.c	   818   *
; ..\component\PduR\Implementation\PduR_McQ.c	   819   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   820  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_ReadData(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   821                                                       PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   822                                                       P2VAR(PduR_RmDestRomEndIdxOfRmSrcRomType, AUTOMATIC, PDUR_APPL_DATA) rmDestRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   823                                                       P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) data,
; ..\component\PduR\Implementation\PduR_McQ.c	   824                                                       PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   825  {
; ..\component\PduR\Implementation\PduR_McQ.c	   826    /* #10 Deserialize Data */
; ..\component\PduR\Implementation\PduR_McQ.c	   827    PduR_McQ_DeserializeData(readIdx, rmDestRomIdx, data, memIdx);        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   828    /* #20 Set the returned ReadIdx as pending ReadIdx: the readIdx will be set to this value if the read is finished */
; ..\component\PduR\Implementation\PduR_McQ.c	   829    PduR_SetMcQBufferArrayRamPendingReadIdx(mcQBufferRomIdx, readIdx + PduR_McQ_GetDataHeaderSize() + data->SduLength, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   830  }
; ..\component\PduR\Implementation\PduR_McQ.c	   831  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   832  
; ..\component\PduR\Implementation\PduR_McQ.c	   833  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   834  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   835   * PduR_McQ_GetReadIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   836   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   837  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   838   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   839   *
; ..\component\PduR\Implementation\PduR_McQ.c	   840   *
; ..\component\PduR\Implementation\PduR_McQ.c	   841   *
; ..\component\PduR\Implementation\PduR_McQ.c	   842   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   843  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_McQ_GetReadIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   844                                                                   P2VAR(PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType, AUTOMATIC, PDUR_APPL_DATA) readIdx,
; ..\component\PduR\Implementation\PduR_McQ.c	   845                                                                   PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   846  {
; ..\component\PduR\Implementation\PduR_McQ.c	   847    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_McQ.c	   848  
; ..\component\PduR\Implementation\PduR_McQ.c	   849    PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType localReadIdx = PduR_McQ_GetMcQBufferArrayRamReadIdxSafe(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   850    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx = PduR_McQ_GetMcQBufferArrayRamWriteIdxSafe(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   851  
; ..\component\PduR\Implementation\PduR_McQ.c	   852    /* #10 If multicore Queue is empty, return E_NOT_OK */
; ..\component\PduR\Implementation\PduR_McQ.c	   853    if(localReadIdx == writeIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   854    {
; ..\component\PduR\Implementation\PduR_McQ.c	   855      retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   856    }
; ..\component\PduR\Implementation\PduR_McQ.c	   857    /* #20 If the current element is marked with the unused pattern, return the start index of the queue, otherwise return the stored read index */
; ..\component\PduR\Implementation\PduR_McQ.c	   858    else
; ..\component\PduR\Implementation\PduR_McQ.c	   859    {
; ..\component\PduR\Implementation\PduR_McQ.c	   860      if(PduR_GetMcQBufferArrayRam(localReadIdx, memIdx) == PDUR_MCQ_UNUSED_HEADER)
; ..\component\PduR\Implementation\PduR_McQ.c	   861      {   /* adjust localReadIdx if the end of the buffer is not used */
; ..\component\PduR\Implementation\PduR_McQ.c	   862        localReadIdx = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   863      }
; ..\component\PduR\Implementation\PduR_McQ.c	   864      *readIdx = localReadIdx;    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   865      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_McQ.c	   866    }
; ..\component\PduR\Implementation\PduR_McQ.c	   867  
; ..\component\PduR\Implementation\PduR_McQ.c	   868    return retVal;
; ..\component\PduR\Implementation\PduR_McQ.c	   869  }
; ..\component\PduR\Implementation\PduR_McQ.c	   870  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   871  
; ..\component\PduR\Implementation\PduR_McQ.c	   872  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   873  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   874   * PduR_McQ_UpdateReadIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   875   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   876  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   877   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   878   *
; ..\component\PduR\Implementation\PduR_McQ.c	   879   *
; ..\component\PduR\Implementation\PduR_McQ.c	   880   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   881  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_UpdateReadIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   882  {
; ..\component\PduR\Implementation\PduR_McQ.c	   883    PduR_SetMcQBufferArrayRamReadIdxOfMcQBufferRam(mcQBufferRomIdx, PduR_McQ_GetMcQBufferArrayRamPendingReadIdxSafe(mcQBufferRomIdx, memIdx), memIdx);      /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   884  }
; ..\component\PduR\Implementation\PduR_McQ.c	   885  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   886  
; ..\component\PduR\Implementation\PduR_McQ.c	   887  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   888  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   889   * PduR_McQBufferArrayRamWrite
; ..\component\PduR\Implementation\PduR_McQ.c	   890   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   891  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   892   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   893   *
; ..\component\PduR\Implementation\PduR_McQ.c	   894   *
; ..\component\PduR\Implementation\PduR_McQ.c	   895   */
; ..\component\PduR\Implementation\PduR_McQ.c	   896  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQBufferArrayRamWrite(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx, uint8 byteToBeWritten, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   897  {
; ..\component\PduR\Implementation\PduR_McQ.c	   898    if(writeIdx < PduR_GetSizeOfMcQBufferArrayRam(memIdx))      /* COV_PDUR_VAR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_McQ.c	   899    {
; ..\component\PduR\Implementation\PduR_McQ.c	   900      PduR_SetMcQBufferArrayRam(writeIdx, byteToBeWritten, memIdx);       /* SBSW_PDUR_MCQ_RAMARRAY_RTCHECK */
; ..\component\PduR\Implementation\PduR_McQ.c	   901    }
; ..\component\PduR\Implementation\PduR_McQ.c	   902    else
; ..\component\PduR\Implementation\PduR_McQ.c	   903    {
; ..\component\PduR\Implementation\PduR_McQ.c	   904      PduR_Det_ReportError(PDUR_MCQ_WRITE_DATA, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_McQ.c	   905    }
; ..\component\PduR\Implementation\PduR_McQ.c	   906  }
; ..\component\PduR\Implementation\PduR_McQ.c	   907  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   908  
; ..\component\PduR\Implementation\PduR_McQ.c	   909  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   910  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   911   * PduR_McQ_UpdateWriteIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   912   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   913  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   914   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   915   *
; ..\component\PduR\Implementation\PduR_McQ.c	   916   *
; ..\component\PduR\Implementation\PduR_McQ.c	   917   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   918  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_McQ_UpdateWriteIdx(PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   919  {
; ..\component\PduR\Implementation\PduR_McQ.c	   920    PduR_SetMcQBufferArrayRamWriteIdxOfMcQBufferRam(mcQBufferRomIdx, PduR_McQ_GetMcQBufferArrayRamPendingWriteIdxSafe(mcQBufferRomIdx, memIdx), memIdx);    /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   921  }
; ..\component\PduR\Implementation\PduR_McQ.c	   922  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   923  
; ..\component\PduR\Implementation\PduR_McQ.c	   924  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   925  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   926   * PduR_SetMcQBufferArrayRamPendingReadIdx
; ..\component\PduR\Implementation\PduR_McQ.c	   927   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   928  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   929   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   930   *
; ..\component\PduR\Implementation\PduR_McQ.c	   931   *
; ..\component\PduR\Implementation\PduR_McQ.c	   932   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   933  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_SetMcQBufferArrayRamPendingReadIdx(PduR_McQBufferRomIterType mcQBufferRomIdx, PduR_McQBufferArrayRamPendingReadIdxOfMcQBufferRamType readIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   934  {
; ..\component\PduR\Implementation\PduR_McQ.c	   935    if(readIdx < PduR_GetMcQBufferArrayRamEndIdxOfMcQBufferRom(mcQBufferRomIdx, memIdx))  /* COV_PDUR_VAR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_McQ.c	   936    {
; ..\component\PduR\Implementation\PduR_McQ.c	   937      PduR_SetMcQBufferArrayRamPendingReadIdxOfMcQBufferRam(mcQBufferRomIdx, readIdx, memIdx);    /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_McQ.c	   938    }
; ..\component\PduR\Implementation\PduR_McQ.c	   939    else
; ..\component\PduR\Implementation\PduR_McQ.c	   940    {
; ..\component\PduR\Implementation\PduR_McQ.c	   941      PduR_Det_ReportError(PDUR_MCQ_PENDING_READ_IDX, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_McQ.c	   942    }
; ..\component\PduR\Implementation\PduR_McQ.c	   943  }
; ..\component\PduR\Implementation\PduR_McQ.c	   944  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	   945  
; ..\component\PduR\Implementation\PduR_McQ.c	   946  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	   947  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	   948   * PduR_McQ_MainFunction
; ..\component\PduR\Implementation\PduR_McQ.c	   949   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   950  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	   951   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	   952   *
; ..\component\PduR\Implementation\PduR_McQ.c	   953   *
; ..\component\PduR\Implementation\PduR_McQ.c	   954   *
; ..\component\PduR\Implementation\PduR_McQ.c	   955   *
; ..\component\PduR\Implementation\PduR_McQ.c	   956   *
; ..\component\PduR\Implementation\PduR_McQ.c	   957   *
; ..\component\PduR\Implementation\PduR_McQ.c	   958   *
; ..\component\PduR\Implementation\PduR_McQ.c	   959   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	   960  FUNC(void, PDUR_CODE) PduR_McQ_MainFunction(PduR_DestApplicationManagerRomIdxOfMmRomType destApplicationManagerRomIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	   961  {
; ..\component\PduR\Implementation\PduR_McQ.c	   962    PduR_SrcApplicationRomEndIdxOfDestApplicationManagerRomType srcApplicationRomIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   963  
; ..\component\PduR\Implementation\PduR_McQ.c	   964    /* #10 For each configured MultiCore Queues */
; ..\component\PduR\Implementation\PduR_McQ.c	   965    for(srcApplicationRomIdx = PduR_GetSrcApplicationRomStartIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx < PduR_GetSrcApplicationRomEndIdxOfDestApplicationManagerRom(destApplicationManagerRomIdx); srcApplicationRomIdx++)
; ..\component\PduR\Implementation\PduR_McQ.c	   966    {
; ..\component\PduR\Implementation\PduR_McQ.c	   967      if(PduR_IsMcQBufferRomUsedOfSrcApplicationRom(srcApplicationRomIdx))
; ..\component\PduR\Implementation\PduR_McQ.c	   968      {
; ..\component\PduR\Implementation\PduR_McQ.c	   969        PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType readIdx = 0;
; ..\component\PduR\Implementation\PduR_McQ.c	   970        PduR_McQBufferRomIdxOfSrcApplicationRomType mcQBufferRomIdx = PduR_GetMcQBufferRomIdxOfSrcApplicationRom(srcApplicationRomIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   971        PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfSrcApplicationRom(srcApplicationRomIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   972  
; ..\component\PduR\Implementation\PduR_McQ.c	   973        /* Max. number of bytes to be read before stalling to next main function call */
; ..\component\PduR\Implementation\PduR_McQ.c	   974        PduR_McQBufferArrayRamLengthOfMcQBufferRomType readThreshold = PduR_GetMcQBufferArrayRamLengthOfMcQBufferRom(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   975        PduLengthType numberOfReadBytes = 0;
; ..\component\PduR\Implementation\PduR_McQ.c	   976  
; ..\component\PduR\Implementation\PduR_McQ.c	   977        /* #20 While MultiCore Queue has stored elements */
; ..\component\PduR\Implementation\PduR_McQ.c	   978        while(PduR_McQ_GetReadIdx(mcQBufferRomIdx, &readIdx, memIdx) == E_OK)     /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_McQ.c	   979        {
; ..\component\PduR\Implementation\PduR_McQ.c	   980          switch (PduR_GetMcQBufferArrayRam(readIdx, memIdx))
; ..\component\PduR\Implementation\PduR_McQ.c	   981          {
; ..\component\PduR\Implementation\PduR_McQ.c	   982              /* #30 If element is type of data, read Pdu, dispatch If-Pdu to destination and update read Index */
; ..\component\PduR\Implementation\PduR_McQ.c	   983            case PDUR_MCQ_DATA_HEADER:
; ..\component\PduR\Implementation\PduR_McQ.c	   984            {
; ..\component\PduR\Implementation\PduR_McQ.c	   985              PduR_RmDestRomEndIdxOfRmSrcRomType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	   986              PduInfoType info;
; ..\component\PduR\Implementation\PduR_McQ.c	   987  
; ..\component\PduR\Implementation\PduR_McQ.c	   988              PduR_McQ_ReadData(mcQBufferRomIdx, readIdx, &rmDestRomIdx, &info, memIdx);  /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_McQ.c	   989              (void) PduR_RmIf_ProcessDestPdu(rmDestRomIdx, &info);    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_McQ.c	   990              PduR_McQ_UpdateReadIdx(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   991  
; ..\component\PduR\Implementation\PduR_McQ.c	   992              numberOfReadBytes += ((PduLengthType) PduR_McQ_GetDataHeaderSize()) + info.SduLength;
; ..\component\PduR\Implementation\PduR_McQ.c	   993              break;
; ..\component\PduR\Implementation\PduR_McQ.c	   994            }
; ..\component\PduR\Implementation\PduR_McQ.c	   995              /* #40 If element is type of TxConfirmation, read confirmation from Queue, update read Index and call upper layer confirmation */
; ..\component\PduR\Implementation\PduR_McQ.c	   996            case PDUR_MCQ_TXCONFIRMATION_HEADER:
; ..\component\PduR\Implementation\PduR_McQ.c	   997            {
; ..\component\PduR\Implementation\PduR_McQ.c	   998              PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx = PduR_McQ_ReadTxConfirmation(mcQBufferRomIdx, readIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	   999              PduR_McQ_UpdateReadIdx(mcQBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1000              PduR_GetUpIfTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcRomIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcRomIdx));   /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_McQ.c	  1001  
; ..\component\PduR\Implementation\PduR_McQ.c	  1002              numberOfReadBytes += ((PduLengthType) PduR_McQ_GetTxConfirmationSize());
; ..\component\PduR\Implementation\PduR_McQ.c	  1003              break;
; ..\component\PduR\Implementation\PduR_McQ.c	  1004            }
; ..\component\PduR\Implementation\PduR_McQ.c	  1005              /* #50 Report an error otherwise */
; ..\component\PduR\Implementation\PduR_McQ.c	  1006            default:     /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_McQ.c	  1007              PduR_Det_ReportError(PDUR_MCQ_MAINFUNCTION, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_McQ.c	  1008              /* Nothing to do: When Det report error is switched off */
; ..\component\PduR\Implementation\PduR_McQ.c	  1009              break;
; ..\component\PduR\Implementation\PduR_McQ.c	  1010          }
; ..\component\PduR\Implementation\PduR_McQ.c	  1011  
; ..\component\PduR\Implementation\PduR_McQ.c	  1012          /* #60 If number of read bytes increases the the queue size, stall processing to next main function call */
; ..\component\PduR\Implementation\PduR_McQ.c	  1013          if(numberOfReadBytes > readThreshold)   /* COV_PDUR_MCQ_MAIN_FUNCTION_THRESHOLD */
; ..\component\PduR\Implementation\PduR_McQ.c	  1014          {
; ..\component\PduR\Implementation\PduR_McQ.c	  1015            break;
; ..\component\PduR\Implementation\PduR_McQ.c	  1016          }
; ..\component\PduR\Implementation\PduR_McQ.c	  1017        }
; ..\component\PduR\Implementation\PduR_McQ.c	  1018      }
; ..\component\PduR\Implementation\PduR_McQ.c	  1019    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1020  }       /* PRQA S 6080, 6050 */ /* MD_MSR_STMIF, MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR_McQ.c	  1021  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1022  
; ..\component\PduR\Implementation\PduR_McQ.c	  1023  
; ..\component\PduR\Implementation\PduR_McQ.c	  1024  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1025  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	  1026   * PduR_McQ_GetMcQBufferArrayRamReadIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	  1027   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1028  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	  1029   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	  1030   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1031   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1032   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1033  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamReadIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	  1034  {
; ..\component\PduR\Implementation\PduR_McQ.c	  1035    PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType readIdx = PduR_GetMcQBufferArrayRamReadIdxOfMcQBufferRam(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1036  
; ..\component\PduR\Implementation\PduR_McQ.c	  1037  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1038    PduR_McQBufferArrayRamStartIdxOfMcQBufferRomType startIdxOfQueue = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1039    PduR_McQBufferArrayRamEndIdxOfMcQBufferRomType     endIdxOfQueue = PduR_GetMcQBufferArrayRamEndIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1040  
; ..\component\PduR\Implementation\PduR_McQ.c	  1041    if(readIdx >= endIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1042    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1043      readIdx = ((PduR_McQBufferArrayRamReadIdxOfMcQBufferRamType) endIdxOfQueue) - 1u;
; ..\component\PduR\Implementation\PduR_McQ.c	  1044      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQREADIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1045    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1046    if(readIdx < startIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1047    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1048      readIdx = startIdxOfQueue;
; ..\component\PduR\Implementation\PduR_McQ.c	  1049      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQREADIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1050    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1051  # endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1052  
; ..\component\PduR\Implementation\PduR_McQ.c	  1053    return readIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	  1054  }
; ..\component\PduR\Implementation\PduR_McQ.c	  1055  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1056  
; ..\component\PduR\Implementation\PduR_McQ.c	  1057  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1058  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	  1059   * PduR_McQ_GetMcQBufferArrayRamWriteIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	  1060   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1061  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	  1062   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	  1063   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1064   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1065   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1066  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamWriteIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	  1067  {
; ..\component\PduR\Implementation\PduR_McQ.c	  1068    PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType writeIdx = PduR_GetMcQBufferArrayRamWriteIdxOfMcQBufferRam(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1069  
; ..\component\PduR\Implementation\PduR_McQ.c	  1070  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1071    PduR_McQBufferArrayRamStartIdxOfMcQBufferRomType startIdxOfQueue = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1072    PduR_McQBufferArrayRamEndIdxOfMcQBufferRomType     endIdxOfQueue = PduR_GetMcQBufferArrayRamEndIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1073  
; ..\component\PduR\Implementation\PduR_McQ.c	  1074    if(writeIdx >= endIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1075    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1076      writeIdx = ((PduR_McQBufferArrayRamWriteIdxOfMcQBufferRamType) endIdxOfQueue) - 1u;
; ..\component\PduR\Implementation\PduR_McQ.c	  1077      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQWRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1078    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1079    if(writeIdx < startIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1080    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1081      writeIdx = startIdxOfQueue;
; ..\component\PduR\Implementation\PduR_McQ.c	  1082      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQWRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1083    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1084  # endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1085  
; ..\component\PduR\Implementation\PduR_McQ.c	  1086    return writeIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	  1087  }
; ..\component\PduR\Implementation\PduR_McQ.c	  1088  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1089  
; ..\component\PduR\Implementation\PduR_McQ.c	  1090  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1091  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	  1092   * PduR_McQ_GetMcQBufferArrayRamPendingReadIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	  1093   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1094  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	  1095   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	  1096   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1097   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1098   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1099  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamPendingReadIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamPendingReadIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	  1100  {
; ..\component\PduR\Implementation\PduR_McQ.c	  1101    PduR_McQBufferArrayRamPendingReadIdxOfMcQBufferRamType readIdx = PduR_GetMcQBufferArrayRamPendingReadIdxOfMcQBufferRam(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1102  
; ..\component\PduR\Implementation\PduR_McQ.c	  1103  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1104    PduR_McQBufferArrayRamStartIdxOfMcQBufferRomType startIdxOfQueue = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1105    PduR_McQBufferArrayRamEndIdxOfMcQBufferRomType     endIdxOfQueue = PduR_GetMcQBufferArrayRamEndIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1106  
; ..\component\PduR\Implementation\PduR_McQ.c	  1107    if(readIdx >= endIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1108    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1109      readIdx = ((PduR_McQBufferArrayRamPendingReadIdxOfMcQBufferRamType) endIdxOfQueue) - 1u;
; ..\component\PduR\Implementation\PduR_McQ.c	  1110      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQPENDINGREADIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1111    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1112    if(readIdx < startIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1113    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1114      readIdx = startIdxOfQueue;
; ..\component\PduR\Implementation\PduR_McQ.c	  1115      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQPENDINGREADIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1116    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1117  # endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1118  
; ..\component\PduR\Implementation\PduR_McQ.c	  1119    return readIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	  1120  }
; ..\component\PduR\Implementation\PduR_McQ.c	  1121  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1122  
; ..\component\PduR\Implementation\PduR_McQ.c	  1123  #if (PDUR_MCQBUFFERROM == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1124  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	  1125   * PduR_McQ_GetMcQBufferArrayRamPendingWriteIdxSafe
; ..\component\PduR\Implementation\PduR_McQ.c	  1126   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1127  /*!
; ..\component\PduR\Implementation\PduR_McQ.c	  1128   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_McQ.c	  1129   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1130   *
; ..\component\PduR\Implementation\PduR_McQ.c	  1131   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_McQ.c	  1132  LOCAL_INLINE FUNC(PduR_McQBufferArrayRamPendingWriteIdxOfMcQBufferRamType, PDUR_CODE) PduR_McQ_GetMcQBufferArrayRamPendingWriteIdxSafe(PduR_McQBufferRomIdxOfSrcApplicationRomType mcqBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_McQ.c	  1133  {
; ..\component\PduR\Implementation\PduR_McQ.c	  1134    PduR_McQBufferArrayRamPendingWriteIdxOfMcQBufferRamType writeIdx = PduR_GetMcQBufferArrayRamPendingWriteIdxOfMcQBufferRam(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1135  
; ..\component\PduR\Implementation\PduR_McQ.c	  1136  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_McQ.c	  1137    PduR_McQBufferArrayRamStartIdxOfMcQBufferRomType startIdxOfQueue = PduR_GetMcQBufferArrayRamStartIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1138    PduR_McQBufferArrayRamEndIdxOfMcQBufferRomType endIdxOfQueue   = PduR_GetMcQBufferArrayRamEndIdxOfMcQBufferRom(mcqBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_McQ.c	  1139  
; ..\component\PduR\Implementation\PduR_McQ.c	  1140    if(writeIdx >= endIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1141    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1142      writeIdx = ((PduR_McQBufferArrayRamPendingWriteIdxOfMcQBufferRamType) endIdxOfQueue) - 1u;
; ..\component\PduR\Implementation\PduR_McQ.c	  1143      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQPENDINGWRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1144    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1145    if(writeIdx < startIdxOfQueue) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_McQ.c	  1146    {
; ..\component\PduR\Implementation\PduR_McQ.c	  1147      writeIdx = startIdxOfQueue;
; ..\component\PduR\Implementation\PduR_McQ.c	  1148      PduR_ReportRuntimeDetError(PDUR_FCT_GETMCQPENDINGWRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_McQ.c	  1149    }
; ..\component\PduR\Implementation\PduR_McQ.c	  1150  # endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1151  
; ..\component\PduR\Implementation\PduR_McQ.c	  1152    return writeIdx;
; ..\component\PduR\Implementation\PduR_McQ.c	  1153  }
; ..\component\PduR\Implementation\PduR_McQ.c	  1154  #endif
; ..\component\PduR\Implementation\PduR_McQ.c	  1155  
; ..\component\PduR\Implementation\PduR_McQ.c	  1156  #define PDUR_STOP_SEC_CODE
; ..\component\PduR\Implementation\PduR_McQ.c	  1157  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_McQ.c	  1158  
; ..\component\PduR\Implementation\PduR_McQ.c	  1159  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_McQ.c	  1160   *  END OF FILE: PduR_McQ.c
; ..\component\PduR\Implementation\PduR_McQ.c	  1161   *********************************************************************************************************************/

	; Module end
