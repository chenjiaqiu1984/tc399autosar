	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\PduR\\Implementation\\.PduR_Bm.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\PduR\\Implementation\\PduR_Bm.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\PduR\\Implementation\\PduR_Bm.src ..\\component\\PduR\\Implementation\\PduR_Bm.c"
	.compiler_name		"ctc"
	;source	'..\\component\\PduR\\Implementation\\PduR_Bm.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	28223
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\component\\PduR\\Implementation\\PduR_Bm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'int',0,4,5,3
	.word	136
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	143
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	185
	.byte	7
	.word	185
	.byte	8
	.byte	'__cmpswapw',0
	.word	201
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	206
	.byte	9
	.byte	'value',0
	.word	185
	.byte	9
	.byte	'compare',0
	.word	185
	.byte	0,10,1,7
	.word	263
	.byte	11
	.byte	'__codeptr',0,1,1,1
	.word	265
	.byte	2
	.byte	'unsigned char',0,1,8,11
	.byte	'boolean',0,2,101,31
	.word	288
	.byte	11
	.byte	'uint8',0,2,104,31
	.word	288
	.byte	2
	.byte	'short int',0,2,5,11
	.byte	'sint16',0,2,105,31
	.word	335
	.byte	2
	.byte	'unsigned short int',0,2,7,11
	.byte	'uint16',0,2,106,31
	.word	363
	.byte	2
	.byte	'long int',0,4,5,11
	.byte	'sint32',0,2,107,31
	.word	400
	.byte	2
	.byte	'unsigned long int',0,4,7,11
	.byte	'uint32',0,2,108,31
	.word	427
	.byte	11
	.byte	'uint8_least',0,2,111,31
	.word	288
	.byte	11
	.byte	'uint32_least',0,2,115,31
	.word	427
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,2,121,30
	.word	504
	.byte	11
	.byte	'StatusType',0,3,127,23
	.word	288
	.byte	11
	.byte	'Std_ReturnType',0,3,132,1,15
	.word	288
	.byte	12,3,134,1,9,8,13
	.byte	'vendorID',0
	.word	363
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	363
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	288
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	288
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	288
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,3,141,1,3
	.word	588
	.byte	11
	.byte	'PduIdType',0,4,63,15
	.word	288
	.byte	11
	.byte	'PduLengthType',0,4,65,15
	.word	288
	.byte	7
	.word	288
	.byte	11
	.byte	'SduDataPtrType',0,5,196,1,54
	.word	778
	.byte	12,5,197,1,9,8,13
	.byte	'SduDataPtr',0
	.word	783
	.byte	4,2,35,0,13
	.byte	'SduLength',0
	.word	288
	.byte	1,2,35,4,0,11
	.byte	'PduInfoType',0,5,201,1,3
	.word	807
	.byte	7
	.word	288
	.byte	14,5,203,1,9,1,15
	.byte	'BUFREQ_OK',0,0,15
	.byte	'BUFREQ_E_NOT_OK',0,1,15
	.byte	'BUFREQ_E_BUSY',0,2,15
	.byte	'BUFREQ_E_OVFL',0,3,0,11
	.byte	'BufReq_ReturnType',0,5,209,1,3
	.word	879
	.byte	14,5,219,1,9,1,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,5,226,1,3
	.word	975
	.byte	16
	.byte	'sDet_PCConfigType',0,6,238,1,16,1,13
	.byte	'Det_PCConfigNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'Det_PCConfigType',0,6,241,1,3
	.word	1053
	.byte	14,7,147,1,9,1,15
	.byte	'Default_Init_Task',0,0,15
	.byte	'Default_Init_Task_Trusted',0,1,15
	.byte	'IdleTask_OsCore0',0,2,15
	.byte	'bsw_task',0,3,15
	.byte	'swc_init',0,4,15
	.byte	'swc_task',0,5,15
	.byte	'INVALID_TASK',0,6,15
	.byte	'OS_TASKID_COUNT',0,6,0,11
	.byte	'TaskType',0,7,157,1,3
	.word	1135
	.byte	11
	.byte	'Os_Hal_AddressType',0,8,61,16
	.word	427
	.byte	17,64
	.word	427
	.byte	18,15,0,16
	.byte	'Os_ExceptionContextType_Tag',0,9,71,8,160,1,13
	.byte	'AddressRegisters',0
	.word	1320
	.byte	64,2,35,0,13
	.byte	'DataRegisters',0
	.word	1320
	.byte	64,2,35,64,13
	.byte	'Ra',0
	.word	427
	.byte	4,3,35,128,1,13
	.byte	'Psw',0
	.word	427
	.byte	4,3,35,132,1,13
	.byte	'ExceptionSource',0
	.word	427
	.byte	4,3,35,136,1,13
	.byte	'Pcpn',0
	.word	427
	.byte	4,3,35,140,1,13
	.byte	'Pie',0
	.word	427
	.byte	4,3,35,144,1,13
	.byte	'MpuRegionForStackLow',0
	.word	427
	.byte	4,3,35,148,1,13
	.byte	'MpuRegionForStackUpper',0
	.word	427
	.byte	4,3,35,152,1,13
	.byte	'RawPCXI',0
	.word	427
	.byte	4,3,35,156,1,0,11
	.byte	'Os_ExceptionContextType',0,8,66,44
	.word	1329
	.byte	11
	.byte	'Os_InterruptSourceIdType',0,10,238,1,16
	.word	427
	.byte	11
	.byte	'Os_ExceptionSourceIdType',0,10,246,1,16
	.word	427
	.byte	14,10,161,2,9,1,15
	.byte	'RUNNING',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'SUSPENDED',0,3,0,11
	.byte	'TaskStateType',0,10,175,2,3
	.word	1677
	.byte	11
	.byte	'EventMaskType',0,10,182,2,16
	.word	504
	.byte	11
	.byte	'Os_TickType',0,10,200,2,19
	.word	427
	.byte	11
	.byte	'TickType',0,10,206,2,21
	.word	427
	.byte	12,10,220,2,9,12,13
	.byte	'maxallowedvalue',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	427
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	427
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,228,2,2
	.word	1809
	.byte	14,10,128,3,9,1,15
	.byte	'APPLICATION_TERMINATED',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,11
	.byte	'ApplicationStateType',0,10,133,3,3
	.word	1904
	.byte	14,10,177,3,9,1,15
	.byte	'OSServiceId_GetApplicationID',0,0,15
	.byte	'OSServiceId_GetISRID',0,1,15
	.byte	'OSServiceId_CallTrustedFunction',0,2,15
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,15
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,15
	.byte	'OSServiceId_CheckObjectAccess',0,5,15
	.byte	'OSServiceId_CheckObjectOwnership',0,6,15
	.byte	'OSServiceId_StartScheduleTableRel',0,7,15
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,15
	.byte	'OSServiceId_StopScheduleTable',0,9,15
	.byte	'OSServiceId_NextScheduleTable',0,10,15
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,15
	.byte	'OSServiceId_SyncScheduleTable',0,12,15
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,15
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,15
	.byte	'OSServiceId_IncrementCounter',0,15,15
	.byte	'OSServiceId_GetCounterValue',0,16,15
	.byte	'OSServiceId_GetElapsedValue',0,17,15
	.byte	'OSServiceId_TerminateApplication',0,18,15
	.byte	'OSServiceId_AllowAccess',0,19,15
	.byte	'OSServiceId_GetApplicationState',0,20,15
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,15
	.byte	'OSServiceId_GetCoreID',0,22,15
	.byte	'OSServiceId_StartCore',0,23,15
	.byte	'OSServiceId_StartNonAutosarCore',0,24,15
	.byte	'OSServiceId_GetSpinlock',0,25,15
	.byte	'OSServiceId_ReleaseSpinlock',0,26,15
	.byte	'OSServiceId_TryToGetSpinlock',0,27,15
	.byte	'OSServiceId_ShutdownAllCores',0,28,15
	.byte	'OSServiceId_ControlIdle',0,29,15
	.byte	'OSServiceId_IocSend',0,30,15
	.byte	'OSServiceId_IocWrite',0,31,15
	.byte	'OSServiceId_IocSendGroup',0,32,15
	.byte	'OSServiceId_IocWriteGroup',0,33,15
	.byte	'OSServiceId_IocReceive',0,34,15
	.byte	'OSServiceId_IocRead',0,35,15
	.byte	'OSServiceId_IocReceiveGroup',0,36,15
	.byte	'OSServiceId_IocReadGroup',0,37,15
	.byte	'OSServiceId_IocEmptyQueue',0,38,15
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,15
	.byte	'OSServiceId_GetExceptionContext',0,160,1,15
	.byte	'OSServiceId_SetExceptionContext',0,161,1,15
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,15
	.byte	'OSServiceId_AppKill',0,163,1,15
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,15
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,15
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,15
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,15
	.byte	'OSServiceId_TimerIsr',0,168,1,15
	.byte	'OSServiceId_IsrWrapper',0,169,1,15
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,15
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,15
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,15
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,15
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,15
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,15
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,15
	.byte	'OSServiceId_GetSemaphore',0,177,1,15
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,15
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,15
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,15
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,15
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,15
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,15
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,15
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,15
	.byte	'OSServiceId_HookCallCallback',0,186,1,15
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,15
	.byte	'OSServiceId_IsInterruptPending',0,188,1,15
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,15
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,15
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,15
	.byte	'OSServiceId_GetCoreStartState',0,192,1,15
	.byte	'OSServiceId_StartOS',0,208,1,15
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,15
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,15
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,15
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,15
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,15
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,15
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,15
	.byte	'OSServiceId_ActivateTask',0,217,1,15
	.byte	'OSServiceId_TerminateTask',0,218,1,15
	.byte	'OSServiceId_ChainTask',0,219,1,15
	.byte	'OSServiceId_GetTaskID',0,220,1,15
	.byte	'OSServiceId_GetTaskState',0,221,1,15
	.byte	'OSServiceId_Schedule',0,222,1,15
	.byte	'OSServiceId_SetEvent',0,223,1,15
	.byte	'OSServiceId_ClearEvent',0,224,1,15
	.byte	'OSServiceId_GetEvent',0,225,1,15
	.byte	'OSServiceId_WaitEvent',0,226,1,15
	.byte	'OSServiceId_GetAlarmBase',0,227,1,15
	.byte	'OSServiceId_GetAlarm',0,228,1,15
	.byte	'OSServiceId_SetRelAlarm',0,229,1,15
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,15
	.byte	'OSServiceId_CancelAlarm',0,231,1,15
	.byte	'OSServiceId_GetResource',0,232,1,15
	.byte	'OSServiceId_ReleaseResource',0,233,1,15
	.byte	'OSSERVICEID_COUNT',0,255,1,0,11
	.byte	'OSServiceIdType',0,10,156,4,3
	.word	2016
	.byte	14,10,172,4,9,2,15
	.byte	'OS_STATUS_OK',0,0,15
	.byte	'OS_STATUS_CALLEVEL',0,2,15
	.byte	'OS_STATUS_LIMIT',0,4,15
	.byte	'OS_STATUS_RESOURCE',0,6,15
	.byte	'OS_STATUS_SERVICEID',0,9,15
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,15
	.byte	'OS_STATUS_MISSINGEND',0,11,15
	.byte	'OS_STATUS_DISABLEDINT',0,12,15
	.byte	'OS_STATUS_STACKFAULT',0,13,15
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,15
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,15
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,15
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,15
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,15
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,15
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,15
	.byte	'OS_STATUS_SPINLOCK',0,21,15
	.byte	'OS_STATUS_CORE',0,22,15
	.byte	'OS_STATUS_OVERFLOW',0,245,1,15
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,15
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,15
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,15
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,15
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,15
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,15
	.byte	'OS_STATUS_API_ERROR',0,252,1,15
	.byte	'OS_STATUS_ASSERTION',0,253,1,15
	.byte	'OS_STATUS_OVERLOAD',0,254,1,15
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,15
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,15
	.byte	'OS_STATUS_ID_1',0,131,2,15
	.byte	'OS_STATUS_UNLOCKED',0,133,2,15
	.byte	'OS_STATUS_STATE_1',0,135,2,15
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,15
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,15
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,15
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,15
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,15
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,15
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,15
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,15
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,15
	.byte	'OS_STATUS_ID_2',0,131,4,15
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,15
	.byte	'OS_STATUS_STATE_2',0,135,4,15
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,15
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,15
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,15
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,15
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,15
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,15
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,15
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,15
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,15
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,15
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,15
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,15
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,15
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,15
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,15
	.byte	'OS_STATUS_STOPPED_1',0,133,10,15
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,15
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,15
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,15
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,15
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,15
	.byte	'OS_STATUS_NEXTED_1',0,133,14,15
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,15
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,15
	.byte	'OS_STATUS_LOCKED',0,129,16,15
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,15
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,15
	.byte	'OS_STATUS_PRIORITY',0,129,18,15
	.byte	'OS_STATUS_ORDER',0,133,18,15
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,15
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,15
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,15
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,11
	.byte	'Os_StatusType',0,10,232,5,3
	.word	5186
	.byte	12,10,133,6,9,4,13
	.byte	'Service',0
	.word	2016
	.byte	1,2,35,0,13
	.byte	'Error',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'DetailedError',0
	.word	5186
	.byte	2,2,35,2,0,11
	.byte	'Os_ErrorInformationType',0,10,143,6,3
	.word	7716
	.byte	14,10,175,6,9,1,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,192,6,3
	.word	7811
	.byte	11
	.byte	'Os_AccessCheckAddress',0,10,199,6,29
	.word	427
	.byte	14,10,211,6,9,1,15
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,15
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,15
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,15
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,15
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,15
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,15
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,15
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,15
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,15
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,15
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,15
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,15
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,15
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,15
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,15
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,15
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,15
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,15
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,15
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,11
	.byte	'Os_MemAccessType',0,10,233,6,3
	.word	8015
	.byte	11
	.byte	'Can_IdType',0,11,52,30
	.word	363
	.byte	11
	.byte	'Can_HwHandleType',0,11,55,29
	.word	288
	.byte	11
	.byte	'Can_SduPtrType',0,11,58,45
	.word	778
	.byte	16
	.byte	'Can_PduTypeTag',0,11,61,16,12,13
	.byte	'id',0
	.word	363
	.byte	2,2,35,0,13
	.byte	'length',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'sdu',0
	.word	8588
	.byte	4,2,35,4,13
	.byte	'swPduHandle',0
	.word	288
	.byte	1,2,35,8,0,11
	.byte	'Can_PduType',0,11,67,3
	.word	8611
	.byte	7
	.word	288
	.byte	14,11,77,9,1,15
	.byte	'CAN_CS_UNINIT',0,0,15
	.byte	'CAN_CS_STARTED',0,1,15
	.byte	'CAN_CS_STOPPED',0,2,15
	.byte	'CAN_CS_SLEEP',0,3,0,11
	.byte	'Can_ControllerStateType',0,11,82,3
	.word	8719
	.byte	14,11,84,9,1,15
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,15
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,15
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,11
	.byte	'Can_ErrorStateType',0,11,88,3
	.word	8822
	.byte	11
	.byte	'tCanLLCanIntOld',0,12,161,3,37
	.word	427
	.byte	11
	.byte	'Can_OsIsrType',0,12,167,3,15
	.word	288
	.byte	11
	.byte	'Can_ExternalTickType',0,12,180,3,16
	.word	427
	.byte	17,32
	.word	427
	.byte	18,7,0,11
	.byte	'Can_LoopTimeout_dim_type',0,12,183,3,44
	.word	9006
	.byte	11
	.byte	'Can_ControllerConfigIterType',0,12,192,13,21
	.word	288
	.byte	11
	.byte	'Can_PduOfActiveSendObjectType',0,12,148,14,19
	.word	288
	.byte	11
	.byte	'Can_StateOfActiveSendObjectType',0,12,151,14,16
	.word	363
	.byte	11
	.byte	'Can_BTPType',0,12,154,14,16
	.word	427
	.byte	11
	.byte	'Can_RXBCOfBufferConfigType',0,12,160,14,15
	.word	288
	.byte	11
	.byte	'Can_RXF0COfBufferConfigType',0,12,163,14,16
	.word	427
	.byte	11
	.byte	'Can_RXF1COfBufferConfigType',0,12,166,14,15
	.word	288
	.byte	11
	.byte	'Can_TXBCOfBufferConfigType',0,12,169,14,16
	.word	427
	.byte	11
	.byte	'Can_TXEFCOfBufferConfigType',0,12,172,14,15
	.word	288
	.byte	11
	.byte	'Can_CanIfChannelIdType',0,12,190,14,15
	.word	288
	.byte	11
	.byte	'Can_CanSubSystemBaseAdrType',0,12,193,14,16
	.word	427
	.byte	11
	.byte	'Can_BasisAdrOfControllerConfigType',0,12,196,14,16
	.word	427
	.byte	11
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,12,199,14,15
	.word	288
	.byte	11
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,12,202,14,16
	.word	363
	.byte	11
	.byte	'Can_IsTTCanOfControllerConfigType',0,12,205,14,17
	.word	288
	.byte	11
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,12,208,14,15
	.word	288
	.byte	11
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,12,211,14,15
	.word	288
	.byte	11
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,12,214,14,15
	.word	288
	.byte	11
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,12,220,14,15
	.word	288
	.byte	11
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,12,223,14,15
	.word	288
	.byte	11
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,12,226,14,15
	.word	288
	.byte	11
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,12,232,14,15
	.word	288
	.byte	11
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,12,235,14,15
	.word	288
	.byte	11
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,12,238,14,15
	.word	288
	.byte	11
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,12,241,14,15
	.word	288
	.byte	11
	.byte	'Can_RxSelectionOfControllerConfigType',0,12,244,14,15
	.word	288
	.byte	11
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,12,247,14,15
	.word	288
	.byte	11
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,12,250,14,15
	.word	288
	.byte	11
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,12,253,14,15
	.word	288
	.byte	11
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,12,128,15,15
	.word	288
	.byte	11
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,12,131,15,15
	.word	288
	.byte	11
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,12,134,15,15
	.word	288
	.byte	11
	.byte	'Can_BusOffNotificationOfControllerDataType',0,12,137,15,15
	.word	288
	.byte	11
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,12,140,15,15
	.word	288
	.byte	11
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,12,143,15,15
	.word	288
	.byte	11
	.byte	'Can_IntEnableOfControllerDataType',0,12,146,15,16
	.word	427
	.byte	11
	.byte	'Can_IsBusOffOfControllerDataType',0,12,149,15,17
	.word	288
	.byte	11
	.byte	'Can_LastInitObjectOfControllerDataType',0,12,152,15,15
	.word	288
	.byte	11
	.byte	'Can_LastStateOfControllerDataType',0,12,155,15,15
	.word	288
	.byte	11
	.byte	'Can_LogStatusOfControllerDataType',0,12,158,15,15
	.word	288
	.byte	11
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,12,161,15,15
	.word	288
	.byte	11
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,12,164,15,16
	.word	427
	.byte	11
	.byte	'Can_PrevModeOfControllerDataType',0,12,167,15,15
	.word	288
	.byte	11
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,12,170,15,15
	.word	288
	.byte	11
	.byte	'Can_TXBCROfControllerDataType',0,12,173,15,16
	.word	427
	.byte	11
	.byte	'Can_TXBRPOfControllerDataType',0,12,176,15,16
	.word	427
	.byte	11
	.byte	'Can_FBTPType',0,12,179,15,16
	.word	427
	.byte	11
	.byte	'Can_GFCType',0,12,182,15,15
	.word	288
	.byte	11
	.byte	'Can_INT_PriorityType',0,12,185,15,15
	.word	288
	.byte	11
	.byte	'Can_INT_RoutingGroupType',0,12,188,15,15
	.word	288
	.byte	11
	.byte	'Can_InitObjectBaudrateType',0,12,191,15,16
	.word	363
	.byte	11
	.byte	'Can_InitObjectFdBrsConfigType',0,12,194,15,15
	.word	288
	.byte	11
	.byte	'Can_InitObjectStartIndexType',0,12,197,15,15
	.word	288
	.byte	11
	.byte	'Can_ActiveSendObjectOfMailboxType',0,12,200,15,15
	.word	288
	.byte	11
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,12,203,15,15
	.word	288
	.byte	11
	.byte	'Can_FdPaddingOfMailboxType',0,12,206,15,15
	.word	288
	.byte	11
	.byte	'Can_HwHandleOfMailboxType',0,12,209,15,15
	.word	288
	.byte	11
	.byte	'Can_IDValueOfMailboxType',0,12,212,15,15
	.word	288
	.byte	11
	.byte	'Can_MailboxSizeOfMailboxType',0,12,215,15,15
	.word	288
	.byte	11
	.byte	'Can_MailboxTypeOfMailboxType',0,12,218,15,15
	.word	288
	.byte	11
	.byte	'Can_MaxDataLenOfMailboxType',0,12,221,15,15
	.word	288
	.byte	11
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,12,224,15,15
	.word	288
	.byte	11
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,12,227,15,15
	.word	288
	.byte	11
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,12,230,15,15
	.word	288
	.byte	11
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,12,233,15,15
	.word	288
	.byte	11
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,12,236,15,15
	.word	288
	.byte	11
	.byte	'Can_FLSSAOfSIDFCType',0,12,242,15,15
	.word	288
	.byte	11
	.byte	'Can_LSSOfSIDFCType',0,12,245,15,15
	.word	288
	.byte	11
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,12,248,15,15
	.word	288
	.byte	11
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,12,251,15,15
	.word	288
	.byte	11
	.byte	'Can_SIDFEType',0,12,129,16,16
	.word	427
	.byte	11
	.byte	'Can_SRN_AddressType',0,12,132,16,16
	.word	427
	.byte	11
	.byte	'Can_RXBAOfShmAdrType',0,12,135,16,16
	.word	427
	.byte	11
	.byte	'Can_RXF0AOfShmAdrType',0,12,138,16,16
	.word	427
	.byte	11
	.byte	'Can_RXF1AOfShmAdrType',0,12,141,16,16
	.word	427
	.byte	11
	.byte	'Can_SIDFAOfShmAdrType',0,12,144,16,16
	.word	427
	.byte	11
	.byte	'Can_StartAdrOfShmAdrType',0,12,147,16,16
	.word	427
	.byte	11
	.byte	'Can_StopAdrOfShmAdrType',0,12,150,16,16
	.word	427
	.byte	11
	.byte	'Can_TXBAOfShmAdrType',0,12,153,16,16
	.word	427
	.byte	11
	.byte	'Can_TXEFAOfShmAdrType',0,12,156,16,16
	.word	427
	.byte	11
	.byte	'Can_XIDFAOfShmAdrType',0,12,159,16,16
	.word	427
	.byte	11
	.byte	'Can_F0DSOfShmElementSizeType',0,12,162,16,15
	.word	288
	.byte	11
	.byte	'Can_F1DSOfShmElementSizeType',0,12,165,16,15
	.word	288
	.byte	11
	.byte	'Can_RBDSOfShmElementSizeType',0,12,168,16,15
	.word	288
	.byte	11
	.byte	'Can_TBDSOfShmElementSizeType',0,12,171,16,15
	.word	288
	.byte	11
	.byte	'Can_TEFBDSOfShmElementSizeType',0,12,174,16,15
	.word	288
	.byte	11
	.byte	'Can_TDCRType',0,12,130,17,15
	.word	288
	.byte	11
	.byte	'Can_XIDAMType',0,12,133,17,16
	.word	427
	.byte	11
	.byte	'Can_FLESAOfXIDFCType',0,12,136,17,15
	.word	288
	.byte	11
	.byte	'Can_LSEOfXIDFCType',0,12,139,17,15
	.word	288
	.byte	11
	.byte	'Can_EIDFE_0OfXIDFEType',0,12,142,17,15
	.word	288
	.byte	11
	.byte	'Can_EIDFE_1OfXIDFEType',0,12,145,17,15
	.word	288
	.byte	16
	.byte	'sCan_ActiveSendObjectType',0,12,161,17,16,4,13
	.byte	'StateOfActiveSendObject',0
	.word	363
	.byte	2,2,35,0,13
	.byte	'PduOfActiveSendObject',0
	.word	288
	.byte	1,2,35,2,0,11
	.byte	'Can_ActiveSendObjectType',0,12,165,17,3
	.word	12814
	.byte	16
	.byte	'sCan_BufferConfigType',0,12,168,17,16,12,13
	.byte	'RXF0COfBufferConfig',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'TXBCOfBufferConfig',0
	.word	427
	.byte	4,2,35,4,13
	.byte	'RXBCOfBufferConfig',0
	.word	288
	.byte	1,2,35,8,13
	.byte	'RXF1COfBufferConfig',0
	.word	288
	.byte	1,2,35,9,13
	.byte	'TXEFCOfBufferConfig',0
	.word	288
	.byte	1,2,35,10,0,11
	.byte	'Can_BufferConfigType',0,12,175,17,3
	.word	12945
	.byte	16
	.byte	'sCan_ControllerConfigType',0,12,178,17,16,28,13
	.byte	'BasisAdrOfControllerConfig',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	363
	.byte	2,2,35,4,13
	.byte	'IsTTCanOfControllerConfig',0
	.word	288
	.byte	1,2,35,6,13
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	288
	.byte	1,2,35,7,13
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	288
	.byte	1,2,35,8,13
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	288
	.byte	1,2,35,9,13
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	288
	.byte	1,2,35,10,13
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	288
	.byte	1,2,35,11,13
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	288
	.byte	1,2,35,12,13
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	288
	.byte	1,2,35,13,13
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	288
	.byte	1,2,35,14,13
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	288
	.byte	1,2,35,15,13
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	288
	.byte	1,2,35,16,13
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	288
	.byte	1,2,35,17,13
	.byte	'RxSelectionOfControllerConfig',0
	.word	288
	.byte	1,2,35,18,13
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	288
	.byte	1,2,35,19,13
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	288
	.byte	1,2,35,20,13
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	288
	.byte	1,2,35,21,13
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	288
	.byte	1,2,35,22,13
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	288
	.byte	1,2,35,23,13
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	288
	.byte	1,2,35,24,0,11
	.byte	'Can_ControllerConfigType',0,12,201,17,3
	.word	13147
	.byte	16
	.byte	'sCan_ControllerDataType',0,12,204,17,16,64,13
	.byte	'IntEnableOfControllerData',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	427
	.byte	4,2,35,4,13
	.byte	'TXBCROfControllerData',0
	.word	427
	.byte	4,2,35,8,13
	.byte	'TXBRPOfControllerData',0
	.word	427
	.byte	4,2,35,12,13
	.byte	'BusOffNotificationOfControllerData',0
	.word	288
	.byte	1,2,35,16,13
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	288
	.byte	1,2,35,17,13
	.byte	'CanInterruptCounterOfControllerData',0
	.word	288
	.byte	1,2,35,18,13
	.byte	'IsBusOffOfControllerData',0
	.word	288
	.byte	1,2,35,19,13
	.byte	'LastInitObjectOfControllerData',0
	.word	288
	.byte	1,2,35,20,13
	.byte	'LastStateOfControllerData',0
	.word	288
	.byte	1,2,35,21,13
	.byte	'LogStatusOfControllerData',0
	.word	288
	.byte	1,2,35,22,13
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	288
	.byte	1,2,35,23,13
	.byte	'PrevModeOfControllerData',0
	.word	288
	.byte	1,2,35,24,13
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	288
	.byte	1,2,35,25,13
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	427
	.byte	4,2,35,26,13
	.byte	'LoopTimeoutOfControllerData',0
	.word	9015
	.byte	32,2,35,30,0,11
	.byte	'Can_ControllerDataType',0,12,222,17,3
	.word	14140
	.byte	17,32
	.word	427
	.byte	18,7,0,16
	.byte	'sCan_MailboxType',0,12,225,17,16,12,13
	.byte	'ActiveSendObjectOfMailbox',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'FdPaddingOfMailbox',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'HwHandleOfMailbox',0
	.word	288
	.byte	1,2,35,3,13
	.byte	'IDValueOfMailbox',0
	.word	288
	.byte	1,2,35,4,13
	.byte	'MailboxSizeOfMailbox',0
	.word	288
	.byte	1,2,35,5,13
	.byte	'MailboxTypeOfMailbox',0
	.word	288
	.byte	1,2,35,6,13
	.byte	'MaxDataLenOfMailbox',0
	.word	288
	.byte	1,2,35,7,13
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	288
	.byte	1,2,35,8,0,11
	.byte	'Can_MailboxType',0,12,236,17,3
	.word	14856
	.byte	16
	.byte	'sCan_MemorySectionInfoType',0,12,239,17,16,1,13
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'Can_MemorySectionInfoType',0,12,242,17,3
	.word	15186
	.byte	16
	.byte	'sCan_MemorySectionObjectsType',0,12,245,17,16,4,13
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	288
	.byte	1,2,35,2,0,11
	.byte	'Can_MemorySectionObjectsType',0,12,250,17,3
	.word	15302
	.byte	16
	.byte	'sCan_SIDFCType',0,12,253,17,16,4,13
	.byte	'FLSSAOfSIDFC',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'LSSOfSIDFC',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	288
	.byte	1,2,35,3,0,11
	.byte	'Can_SIDFCType',0,12,131,18,3
	.word	15508
	.byte	16
	.byte	'sCan_ShmAdrType',0,12,134,18,16,36,13
	.byte	'RXBAOfShmAdr',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'RXF0AOfShmAdr',0
	.word	427
	.byte	4,2,35,4,13
	.byte	'RXF1AOfShmAdr',0
	.word	427
	.byte	4,2,35,8,13
	.byte	'SIDFAOfShmAdr',0
	.word	427
	.byte	4,2,35,12,13
	.byte	'StartAdrOfShmAdr',0
	.word	427
	.byte	4,2,35,16,13
	.byte	'StopAdrOfShmAdr',0
	.word	427
	.byte	4,2,35,20,13
	.byte	'TXBAOfShmAdr',0
	.word	427
	.byte	4,2,35,24,13
	.byte	'TXEFAOfShmAdr',0
	.word	427
	.byte	4,2,35,28,13
	.byte	'XIDFAOfShmAdr',0
	.word	427
	.byte	4,2,35,32,0,11
	.byte	'Can_ShmAdrType',0,12,145,18,3
	.word	15653
	.byte	16
	.byte	'sCan_ShmElementSizeType',0,12,148,18,16,6,13
	.byte	'F0DSOfShmElementSize',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'F1DSOfShmElementSize',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'RBDSOfShmElementSize',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'TBDSOfShmElementSize',0
	.word	288
	.byte	1,2,35,3,13
	.byte	'TEFBDSOfShmElementSize',0
	.word	288
	.byte	1,2,35,4,0,11
	.byte	'Can_ShmElementSizeType',0,12,155,18,3
	.word	15910
	.byte	16
	.byte	'sCan_XIDFCType',0,12,158,18,16,2,13
	.byte	'FLESAOfXIDFC',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'LSEOfXIDFC',0
	.word	288
	.byte	1,2,35,1,0,11
	.byte	'Can_XIDFCType',0,12,162,18,3
	.word	16125
	.byte	16
	.byte	'sCan_XIDFEType',0,12,165,18,16,2,13
	.byte	'EIDFE_0OfXIDFE',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'EIDFE_1OfXIDFE',0
	.word	288
	.byte	1,2,35,1,0,11
	.byte	'Can_XIDFEType',0,12,169,18,3
	.word	16212
	.byte	16
	.byte	'sCan_PCConfigType',0,12,143,19,16,1,13
	.byte	'Can_PCConfigNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'Can_PCConfigType',0,12,146,19,3
	.word	16305
	.byte	11
	.byte	'Can_ConfigType',0,12,148,19,26
	.word	16305
	.byte	6
	.word	427
	.byte	6
	.word	427
	.byte	6
	.word	1320
	.byte	16
	.byte	'tElmTypeTag',0,13,145,9,25,72,13
	.byte	'E0',0
	.word	16411
	.byte	4,2,35,0,13
	.byte	'E1',0
	.word	16416
	.byte	4,2,35,4,13
	.byte	'data',0
	.word	16421
	.byte	64,2,35,8,0,6
	.word	16426
	.byte	11
	.byte	'tElmType',0,13,162,9,3
	.word	16483
	.byte	6
	.word	427
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	12,13,224,9,5,4,19
	.byte	'ID',0,4
	.word	16506
	.byte	29,3,2,35,0,19
	.byte	'RTR',0,1
	.word	16511
	.byte	1,2,2,35,3,19
	.byte	'XTD',0,1
	.word	16516
	.byte	1,1,2,35,3,19
	.byte	'ESI',0,1
	.word	16521
	.byte	1,0,2,35,3,0,6
	.word	427
	.byte	20,13,222,9,3,4,13
	.byte	'b0',0
	.word	16526
	.byte	4,2,35,0,13
	.byte	'B0',0
	.word	16592
	.byte	4,2,35,0,0,6
	.word	363
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	12,13,235,9,5,4,19
	.byte	'RXTS',0,2
	.word	16628
	.byte	16,0,2,35,0,19
	.byte	'DLC',0,1
	.word	16633
	.byte	4,4,2,35,2,19
	.byte	'BRS',0,1
	.word	16638
	.byte	1,3,2,35,2,19
	.byte	'FDF',0,1
	.word	16643
	.byte	1,2,2,35,2,19
	.byte	'r0',0,1
	.word	16648
	.byte	2,0,2,35,2,19
	.byte	'FIDX',0,1
	.word	16653
	.byte	7,1,2,35,3,19
	.byte	'ANMF',0,1
	.word	16658
	.byte	1,0,2,35,3,0,6
	.word	363
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	6
	.word	288
	.byte	12,13,245,9,5,4,19
	.byte	'r1',0,2
	.word	16777
	.byte	16,0,2,35,0,19
	.byte	'DLC',0,1
	.word	16782
	.byte	4,4,2,35,2,19
	.byte	'BRS',0,1
	.word	16787
	.byte	1,3,2,35,2,19
	.byte	'FDF',0,1
	.word	16792
	.byte	1,2,2,35,2,19
	.byte	'r0',0,1
	.word	16797
	.byte	1,1,2,35,2,19
	.byte	'EFC',0,1
	.word	16802
	.byte	1,0,2,35,2,19
	.byte	'MM',0,1
	.word	16807
	.byte	8,0,2,35,3,0,20,13,233,9,3,4,13
	.byte	'rb1',0
	.word	16663
	.byte	4,2,35,0,13
	.byte	'tb1',0
	.word	16812
	.byte	4,2,35,0,13
	.byte	'B1',0
	.word	427
	.byte	4,2,35,0,0,6
	.word	1320
	.byte	16
	.byte	'tCanChipMsgPtrTag',0,13,220,9,25,72,13
	.byte	'uB0',0
	.word	16597
	.byte	4,2,35,0,13
	.byte	'uB1',0
	.word	16921
	.byte	4,2,35,4,13
	.byte	'data',0
	.word	16966
	.byte	64,2,35,8,0,6
	.word	16971
	.byte	11
	.byte	'tCanChipMsgPtr',0,13,134,10,3
	.word	17036
	.byte	12,13,141,10,3,4,19
	.byte	'FnFL',0,1
	.word	288
	.byte	7,1,2,35,0,19
	.byte	'r2',0,1
	.word	288
	.byte	1,0,2,35,0,19
	.byte	'FnGI',0,1
	.word	288
	.byte	6,2,2,35,1,19
	.byte	'r1',0,4
	.word	427
	.byte	10,8,2,35,0,19
	.byte	'FnF',0,1
	.word	288
	.byte	1,7,2,35,3,19
	.byte	'RFnL',0,1
	.word	288
	.byte	1,6,2,35,3,19
	.byte	'r0',0,1
	.word	288
	.byte	6,0,2,35,3,0,21
	.byte	'tRXFnSTag',0,13,138,10,15,4,13
	.byte	'R',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17065
	.byte	4,2,35,0,0,11
	.byte	'tRXFnS',0,13,151,10,3
	.word	17177
	.byte	12,13,156,10,3,4,22,1
	.word	288
	.byte	2,6,2,35,0,19
	.byte	'FOSA',0,2
	.word	363
	.byte	14,0,2,35,0,19
	.byte	'F0S',0,1
	.word	288
	.byte	7,1,2,35,2,22,1
	.word	288
	.byte	1,0,2,35,2,19
	.byte	'F0WM',0,1
	.word	288
	.byte	7,1,2,35,3,22,1
	.word	288
	.byte	1,0,2,35,3,0,21
	.byte	'tRXFnCTag',0,13,153,10,15,4,13
	.byte	'R',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17232
	.byte	4,2,35,0,0,11
	.byte	'tRXFnC',0,13,165,10,3
	.word	17319
	.byte	12,13,171,10,3,4,19
	.byte	'F0DS',0,1
	.word	288
	.byte	3,5,2,35,0,22,1
	.word	288
	.byte	1,4,2,35,0,19
	.byte	'F1DS',0,1
	.word	288
	.byte	3,1,2,35,0,22,1
	.word	288
	.byte	1,0,2,35,0,19
	.byte	'RBDS',0,1
	.word	288
	.byte	3,5,2,35,1,22,4
	.word	427
	.byte	21,0,2,35,0,0,21
	.byte	'tRXESCTag',0,13,168,10,15,4,13
	.byte	'R',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17374
	.byte	4,2,35,0,0,11
	.byte	'tRXESC',0,13,180,10,3
	.word	17462
	.byte	12,13,185,10,3,4,19
	.byte	'TFFL',0,1
	.word	288
	.byte	6,2,2,35,0,22,1
	.word	288
	.byte	2,0,2,35,0,19
	.byte	'TFGI',0,1
	.word	288
	.byte	5,3,2,35,1,22,1
	.word	288
	.byte	3,0,2,35,1,19
	.byte	'TFQPI',0,1
	.word	288
	.byte	5,3,2,35,2,19
	.byte	'TFQF',0,1
	.word	288
	.byte	1,2,2,35,2,22,2
	.word	363
	.byte	10,0,2,35,2,0,21
	.byte	'tTXFQSTag',0,13,182,10,15,4,13
	.byte	'R',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17517
	.byte	4,2,35,0,0,11
	.byte	'tTXFQS',0,13,195,10,3
	.word	17622
	.byte	12,13,200,10,3,4,19
	.byte	'EFFL',0,1
	.word	288
	.byte	6,2,2,35,0,19
	.byte	'r1',0,1
	.word	288
	.byte	2,0,2,35,0,19
	.byte	'EFGI',0,1
	.word	288
	.byte	5,3,2,35,1,22,4
	.word	427
	.byte	11,8,2,35,0,19
	.byte	'EFF',0,1
	.word	288
	.byte	1,7,2,35,3,19
	.byte	'TEFL',0,1
	.word	288
	.byte	1,6,2,35,3,19
	.byte	'r0',0,1
	.word	288
	.byte	6,0,2,35,3,0,21
	.byte	'tTXEFSTag',0,13,197,10,15,4,13
	.byte	'R',0
	.word	427
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17677
	.byte	4,2,35,0,0,11
	.byte	'tTXEFS',0,13,210,10,3
	.word	17786
	.byte	11
	.byte	'CanIf_TxBufferSizeType',0,14,184,1,15
	.word	288
	.byte	14,15,189,2,9,1,15
	.byte	'CANIF_CS_UNINIT',0,0,15
	.byte	'CANIF_CS_STOPPED',0,1,15
	.byte	'CANIF_CS_STARTED',0,2,15
	.byte	'CANIF_CS_SLEEP',0,3,0,11
	.byte	'CanIf_ControllerModeType',0,15,195,2,3
	.word	17873
	.byte	14,15,215,2,9,1,15
	.byte	'CANIF_GET_OFFLINE',0,0,15
	.byte	'CANIF_GET_RX_ONLINE',0,1,15
	.byte	'CANIF_GET_TX_ONLINE',0,2,15
	.byte	'CANIF_GET_ONLINE',0,3,15
	.byte	'CANIF_GET_OFFLINE_ACTIVE',0,4,15
	.byte	'CANIF_GET_OFFLINE_ACTIVE_RX_ONLINE',0,5,15
	.byte	'CANIF_NO_MODE_PDU_GET_MODE_TYPE_END',0,6,0,11
	.byte	'CanIf_PduGetModeType',0,15,228,2,3
	.word	17987
	.byte	14,15,231,2,9,1,15
	.byte	'CANIF_RxBasicCANMailbox',0,0,15
	.byte	'CANIF_RxFullCANMailbox',0,1,15
	.byte	'CANIF_TxBasicCANMailbox',0,2,15
	.byte	'CANIF_TxFullCANMailbox',0,3,15
	.byte	'CANIF_UnusedCANMailbox',0,4,0,11
	.byte	'CanIf_MailBoxTypeType',0,15,238,2,3
	.word	18209
	.byte	14,15,241,2,9,1,15
	.byte	'CanIf_SimpleRxIndicationLayout',0,0,15
	.byte	'CanIf_AdvancedRxIndicationLayout',0,1,15
	.byte	'CanIf_NmOsekRxIndicationLayout',0,2,15
	.byte	'CanIf_CddRxIndicationLayout',0,3,0,11
	.byte	'CanIf_RxIndicationLayoutType',0,15,247,2,3
	.word	18374
	.byte	23,1,1,5
	.word	288
	.byte	0,7
	.word	18550
	.byte	11
	.byte	'CanIf_TxConfirmationFctType',0,15,175,3,9
	.word	18559
	.byte	3
	.word	288
	.byte	7
	.word	18601
	.byte	23,1,1,5
	.word	288
	.byte	5
	.word	18606
	.byte	0,7
	.word	18611
	.byte	11
	.byte	'CanIf_SimpleRxIndicationFctType',0,15,181,3,9
	.word	18625
	.byte	3
	.word	807
	.byte	7
	.word	18671
	.byte	23,1,1,5
	.word	288
	.byte	5
	.word	18676
	.byte	0,7
	.word	18681
	.byte	11
	.byte	'CanIf_AdvancedRxIndicationFctType',0,15,186,3,9
	.word	18695
	.byte	23,1,1,5
	.word	288
	.byte	5
	.word	18606
	.byte	5
	.word	363
	.byte	0,7
	.word	18743
	.byte	11
	.byte	'CanIf_NmOsekRxIndicationFctType',0,15,190,3,9
	.word	18762
	.byte	23,1,1,5
	.word	288
	.byte	5
	.word	18676
	.byte	5
	.word	363
	.byte	0,7
	.word	18808
	.byte	11
	.byte	'CanIf_CddRxIndicationFctType',0,15,194,3,9
	.word	18827
	.byte	23,1,1,5
	.word	288
	.byte	5
	.word	17873
	.byte	0,7
	.word	18870
	.byte	11
	.byte	'CanIf_CtrlModeIndicationFctType',0,15,198,3,9
	.word	18884
	.byte	11
	.byte	'CanIf_BusOffNotificationFctType',0,15,202,3,9
	.word	18559
	.byte	20,15,203,4,9,4,13
	.byte	'eSimpleRxIndicationType',0
	.word	18630
	.byte	4,2,35,0,13
	.byte	'eAdvancedRxIndicationType',0
	.word	18700
	.byte	4,2,35,0,13
	.byte	'eNmOsekRxIndicationType',0
	.word	18767
	.byte	4,2,35,0,13
	.byte	'eCddRxIndicationType',0
	.word	18832
	.byte	4,2,35,0,0,11
	.byte	'CanIf_RxIndicationFctType',0,15,209,4,3
	.word	18971
	.byte	7
	.word	18611
	.byte	7
	.word	18681
	.byte	7
	.word	18743
	.byte	7
	.word	18808
	.byte	16
	.byte	'sCanIf_TxQueueBaseType',0,15,222,4,16,1,13
	.byte	'eSduLength',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxQueueBaseType',0,15,228,4,3
	.word	19164
	.byte	16
	.byte	'sCanIf_TxQueueBaseWithDataType',0,15,231,4,16,1,13
	.byte	'eBaseParams',0
	.word	19164
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxQueueBaseWithDataType',0,15,237,4,3
	.word	19245
	.byte	16
	.byte	'sCanIf_TxPrioByCanIdByteQueueType',0,15,242,4,16,2,13
	.byte	'eQueueParams',0
	.word	19245
	.byte	1,2,35,0,13
	.byte	'eQueued',0
	.word	288
	.byte	1,2,35,1,0,11
	.byte	'CanIf_TxPrioByCanIdByteQueueType',0,15,246,4,3
	.word	19343
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdBaseType',0,15,128,5,16,1,13
	.byte	'eQueueCounter',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdBaseType',0,15,131,5,3
	.word	19465
	.byte	11
	.byte	'CanIf_MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,14,138,9,15
	.word	288
	.byte	11
	.byte	'CanIf_MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,14,141,9,15
	.word	288
	.byte	11
	.byte	'CanIf_CtrlStatesIdxOfMailBoxConfigType',0,14,150,9,15
	.word	288
	.byte	11
	.byte	'CanIf_PduIdFirstOfMailBoxConfigType',0,14,153,9,15
	.word	288
	.byte	11
	.byte	'CanIf_PduIdLastOfMailBoxConfigType',0,14,156,9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxBufferCfgIdxOfMailBoxConfigType',0,14,159,9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxBufferHandlingTypeOfMailBoxConfigType',0,14,165,9,15
	.word	288
	.byte	11
	.byte	'CanIf_MailBoxConfigIdxOfMappedTxBuffersConfigType',0,14,168,9,15
	.word	288
	.byte	11
	.byte	'CanIf_RxIndicationFctListIdxOfRxPduConfigType',0,14,171,9,15
	.word	288
	.byte	11
	.byte	'CanIf_RxPduCanIdOfRxPduConfigType',0,14,174,9,15
	.word	288
	.byte	11
	.byte	'CanIf_RxPduDlcOfRxPduConfigType',0,14,177,9,15
	.word	288
	.byte	11
	.byte	'CanIf_RxPduMaskOfRxPduConfigType',0,14,180,9,16
	.word	363
	.byte	11
	.byte	'CanIf_UpperPduIdOfRxPduConfigType',0,14,183,9,19
	.word	288
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14,231,9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14,234
	.byte	9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfigType',0,14,237
	.byte	9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14
	.byte	240,9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,243,9,15
	.word	288
	.byte	11
	.byte	'CanIf_CanIdOfTxPduConfigType',0,14,246,9,16
	.word	363
	.byte	11
	.byte	'CanIf_CtrlStatesIdxOfTxPduConfigType',0,14,249,9,15
	.word	288
	.byte	11
	.byte	'CanIf_IsTxPduTruncationOfTxPduConfigType',0,14,252,9,17
	.word	288
	.byte	11
	.byte	'CanIf_MailBoxConfigIdxOfTxPduConfigType',0,14,255,9,15
	.word	288
	.byte	11
	.byte	'CanIf_TxConfirmationFctListIdxOfTxPduConfigType',0,14,130,10,15
	.word	288
	.byte	11
	.byte	'CanIf_TxPduLengthOfTxPduConfigType',0,14,133,10,15
	.word	288
	.byte	11
	.byte	'CanIf_UpperLayerTxPduIdOfTxPduConfigType',0,14,136,10,19
	.word	288
	.byte	11
	.byte	'CanIf_TxQueueIdxOfTxPduQueueIndexType',0,14,139,10,15
	.word	288
	.byte	11
	.byte	'CanIf_TxQueueIndex2DataStartStopIdxOfTxPduQueueIndexType',0,14,142,10,15
	.word	288
	.byte	11
	.byte	'CanIf_TxQueueDataType',0,14,151,10,15
	.word	288
	.byte	11
	.byte	'CanIf_TxQueueDataEndIdxOfTxQueueIndex2DataStartStopType',0,14,154,10,15
	.word	288
	.byte	11
	.byte	'CanIf_TxQueueDataLengthOfTxQueueIndex2DataStartStopType',0,14,157,10,15
	.word	288
	.byte	11
	.byte	'CanIf_TxQueueDataStartIdxOfTxQueueIndex2DataStartStopType',0,14,160,10,15
	.word	288
	.byte	16
	.byte	'sCanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,14,183,10,16,2,13
	.byte	'MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	288
	.byte	1,2,35,1,0,11
	.byte	'CanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,14,187,10,3
	.word	21404
	.byte	16
	.byte	'sCanIf_CtrlStatesType',0,14,190,10,16,2,13
	.byte	'CtrlModeOfCtrlStates',0
	.word	17873
	.byte	1,2,35,0,13
	.byte	'PduModeOfCtrlStates',0
	.word	17987
	.byte	1,2,35,1,0,11
	.byte	'CanIf_CtrlStatesType',0,14,194,10,3
	.word	21655
	.byte	16
	.byte	'sCanIf_MailBoxConfigType',0,14,200,10,16,6,13
	.byte	'CtrlStatesIdxOfMailBoxConfig',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'PduIdFirstOfMailBoxConfig',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'PduIdLastOfMailBoxConfig',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'TxBufferCfgIdxOfMailBoxConfig',0
	.word	288
	.byte	1,2,35,3,13
	.byte	'TxBufferHandlingTypeOfMailBoxConfig',0
	.word	288
	.byte	1,2,35,4,13
	.byte	'MailBoxTypeOfMailBoxConfig',0
	.word	18209
	.byte	1,2,35,5,0,11
	.byte	'CanIf_MailBoxConfigType',0,14,208,10,3
	.word	21773
	.byte	16
	.byte	'sCanIf_MappedTxBuffersConfigType',0,14,214,10,16,1,13
	.byte	'MailBoxConfigIdxOfMappedTxBuffersConfig',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'CanIf_MappedTxBuffersConfigType',0,14,217,10,3
	.word	22065
	.byte	16
	.byte	'sCanIf_RxIndicationFctListType',0,14,220,10,16,8,13
	.byte	'RxIndicationFctOfRxIndicationFctList',0
	.word	18971
	.byte	4,2,35,0,13
	.byte	'RxIndicationLayoutOfRxIndicationFctList',0
	.word	18374
	.byte	1,2,35,4,0,11
	.byte	'CanIf_RxIndicationFctListType',0,14,224,10,3
	.word	22195
	.byte	16
	.byte	'sCanIf_RxPduConfigType',0,14,230,10,16,6,13
	.byte	'RxPduMaskOfRxPduConfig',0
	.word	363
	.byte	2,2,35,0,13
	.byte	'UpperPduIdOfRxPduConfig',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'RxIndicationFctListIdxOfRxPduConfig',0
	.word	288
	.byte	1,2,35,3,13
	.byte	'RxPduCanIdOfRxPduConfig',0
	.word	288
	.byte	1,2,35,4,13
	.byte	'RxPduDlcOfRxPduConfig',0
	.word	288
	.byte	1,2,35,5,0,11
	.byte	'CanIf_RxPduConfigType',0,14,237,10,3
	.word	22367
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueConfigType',0,14,245,10,16,4,13
	.byte	'TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	288
	.byte	1,2,35,3,0,11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueConfigType',0,14,251,10,3
	.word	22602
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,129,11,16,1,13
	.byte	'TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdus',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,132,11,3
	.word	23059
	.byte	16
	.byte	'sCanIf_TxPduConfigType',0,14,140,11,16,8,13
	.byte	'CanIdOfTxPduConfig',0
	.word	363
	.byte	2,2,35,0,13
	.byte	'UpperLayerTxPduIdOfTxPduConfig',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'IsTxPduTruncationOfTxPduConfig',0
	.word	288
	.byte	1,2,35,3,13
	.byte	'CtrlStatesIdxOfTxPduConfig',0
	.word	288
	.byte	1,2,35,4,13
	.byte	'MailBoxConfigIdxOfTxPduConfig',0
	.word	288
	.byte	1,2,35,5,13
	.byte	'TxConfirmationFctListIdxOfTxPduConfig',0
	.word	288
	.byte	1,2,35,6,13
	.byte	'TxPduLengthOfTxPduConfig',0
	.word	288
	.byte	1,2,35,7,0,11
	.byte	'CanIf_TxPduConfigType',0,14,149,11,3
	.word	23244
	.byte	16
	.byte	'sCanIf_TxPduQueueIndexType',0,14,155,11,16,2,13
	.byte	'TxQueueIdxOfTxPduQueueIndex',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'TxQueueIndex2DataStartStopIdxOfTxPduQueueIndex',0
	.word	288
	.byte	1,2,35,1,0,11
	.byte	'CanIf_TxPduQueueIndexType',0,14,159,11,3
	.word	23569
	.byte	16
	.byte	'sCanIf_TxQueueIndex2DataStartStopType',0,14,166,11,16,4,13
	.byte	'TxQueueDataEndIdxOfTxQueueIndex2DataStartStop',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'TxQueueDataLengthOfTxQueueIndex2DataStartStop',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'TxQueueDataStartIdxOfTxQueueIndex2DataStartStop',0
	.word	288
	.byte	1,2,35,2,0,11
	.byte	'CanIf_TxQueueIndex2DataStartStopType',0,14,171,11,3
	.word	23731
	.byte	16
	.byte	'CanIf_CtrlStatesStructSTag',0,14,183,11,16,2,13
	.byte	'CT_testCANFDdbc_2c920817',0
	.word	21655
	.byte	2,2,35,0,0,11
	.byte	'CanIf_CtrlStatesStructSType',0,14,186,11,3
	.word	23989
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSTag',0,14,189,11,16,1,13
	.byte	'CHNL_7a25eeb6',0
	.word	19465
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSType',0,14,192,11,3
	.word	24094
	.byte	16
	.byte	'CanIf_TxQueueStructSTag',0,14,195,11,16,6,13
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	19343
	.byte	2,2,35,0,13
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	19343
	.byte	2,2,35,2,13
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	19343
	.byte	2,2,35,4,0,11
	.byte	'CanIf_TxQueueStructSType',0,14,200,11,3
	.word	24214
	.byte	17,32
	.word	288
	.byte	18,31,0,17,8
	.word	288
	.byte	18,7,0,17,64
	.word	288
	.byte	18,63,0,16
	.byte	'CanIf_TxQueueDataStructSTag',0,14,203,11,16,104,13
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	24418
	.byte	32,2,35,0,13
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	24427
	.byte	8,2,35,32,13
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	24436
	.byte	64,2,35,40,0,11
	.byte	'CanIf_TxQueueDataStructSType',0,14,208,11,3
	.word	24445
	.byte	16
	.byte	'sCanIf_PCConfigType',0,14,189,12,16,1,13
	.byte	'CanIf_PCConfigNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'CanIf_PCConfigType',0,14,192,12,3
	.word	24657
	.byte	24,1,1,7
	.word	24745
	.byte	11
	.byte	'PduR_LockFunctionType',0,16,218,8,9
	.word	24748
	.byte	25
	.word	288
	.byte	1,1,5
	.word	288
	.byte	5
	.word	18676
	.byte	0,7
	.word	24784
	.byte	11
	.byte	'PduR_TransmitFctPtrType',0,16,222,8,9
	.word	24802
	.byte	11
	.byte	'PduR_IfRxIndicationType',0,16,224,8,9
	.word	18695
	.byte	11
	.byte	'PduR_IfTxConfirmationFctPtrType',0,16,225,8,9
	.word	18559
	.byte	11
	.byte	'PduR_hasIfRoutingOfGeneralPropertiesRomType',0,16,207,9,17
	.word	288
	.byte	11
	.byte	'PduR_InitializedType',0,16,210,9,17
	.word	288
	.byte	11
	.byte	'PduR_DestApplicationManagerRomIdxOfMmRomType',0,16,219,9,15
	.word	288
	.byte	11
	.byte	'PduR_MaskedBitsOfMmRomType',0,16,225,9,15
	.word	288
	.byte	11
	.byte	'PduR_RmGDestRomStartIdxOfMmRomType',0,16,231,9,15
	.word	288
	.byte	11
	.byte	'PduR_MmRomIndType',0,16,240,9,15
	.word	288
	.byte	11
	.byte	'PduR_PartitionSNVOfPartitionIdentifiersType',0,16,246,9,16
	.word	427
	.byte	11
	.byte	'PduR_PduLengthHandlingStrategyOfRmDestRomType',0,16,252,9,15
	.word	288
	.byte	11
	.byte	'PduR_RmGDestRomIdxOfRmDestRomType',0,16,255,9,15
	.word	288
	.byte	11
	.byte	'PduR_RmSrcRomIdxOfRmDestRomType',0,16,130,10,15
	.word	288
	.byte	11
	.byte	'PduR_RoutingTypeOfRmDestRomType',0,16,133,10,15
	.word	288
	.byte	11
	.byte	'PduR_DestHndOfRmGDestRomType',0,16,136,10,15
	.word	288
	.byte	11
	.byte	'PduR_DirectionOfRmGDestRomType',0,16,139,10,15
	.word	288
	.byte	11
	.byte	'PduR_MaxPduLengthOfRmGDestRomType',0,16,145,10,15
	.word	288
	.byte	11
	.byte	'PduR_MmRomIdxOfRmGDestRomType',0,16,148,10,15
	.word	288
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfRmGDestRomType',0,16,151,10,15
	.word	288
	.byte	11
	.byte	'PduR_RmDestRomIdxOfRmGDestRomType',0,16,157,10,15
	.word	288
	.byte	11
	.byte	'PduR_MmRomIdxOfRmSrcRomType',0,16,166,10,15
	.word	288
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfRmSrcRomType',0,16,169,10,15
	.word	288
	.byte	11
	.byte	'PduR_RmDestRomStartIdxOfRmSrcRomType',0,16,178,10,15
	.word	288
	.byte	11
	.byte	'PduR_SrcHndOfRmSrcRomType',0,16,181,10,15
	.word	288
	.byte	11
	.byte	'PduR_RmTransmitFctPtrIdxOfTx2LoType',0,16,250,10,15
	.word	288
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfTxIf2UpType',0,16,253,10,15
	.word	288
	.byte	11
	.byte	'PduR_RmGDestRomIdxOfTxIf2UpType',0,16,128,11,15
	.word	288
	.byte	11
	.byte	'PduR_TxConfirmationUsedOfTxIf2UpType',0,16,131,11,17
	.word	288
	.byte	11
	.byte	'PduR_RmTransmitFctPtrType',0,16,144,11,9
	.word	24802
	.byte	16
	.byte	'sPduR_DestApplicationManagerRomType',0,16,182,11,16,1,13
	.byte	'PduR_DestApplicationManagerRomNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_DestApplicationManagerRomType',0,16,185,11,3
	.word	26024
	.byte	16
	.byte	'sPduR_ExclusiveAreaRomType',0,16,188,11,16,8,13
	.byte	'LockOfExclusiveAreaRom',0
	.word	24753
	.byte	4,2,35,0,13
	.byte	'UnlockOfExclusiveAreaRom',0
	.word	24753
	.byte	4,2,35,4,0,11
	.byte	'PduR_ExclusiveAreaRomType',0,16,192,11,3
	.word	26160
	.byte	7
	.word	24745
	.byte	16
	.byte	'sPduR_GeneralPropertiesRomType',0,16,195,11,16,1,13
	.byte	'hasIfRoutingOfGeneralPropertiesRom',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_GeneralPropertiesRomType',0,16,198,11,3
	.word	26300
	.byte	16
	.byte	'sPduR_LockRomType',0,16,201,11,16,1,13
	.byte	'PduR_LockRomNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_LockRomType',0,16,204,11,3
	.word	26421
	.byte	16
	.byte	'sPduR_MmRomType',0,16,207,11,16,16,13
	.byte	'DestApplicationManagerRomIdxOfMmRom',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'MaskedBitsOfMmRom',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'RmGDestRomStartIdxOfMmRom',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'UpIfRxIndicationFctPtrOfMmRom',0
	.word	24840
	.byte	4,2,35,4,13
	.byte	'UpIfTxConfirmationFctPtrOfMmRom',0
	.word	24873
	.byte	4,2,35,8,13
	.byte	'LoIfTransmitFctPtrOfMmRom',0
	.word	24807
	.byte	4,2,35,12,0,11
	.byte	'PduR_MmRomType',0,16,215,11,3
	.word	26503
	.byte	7
	.word	18681
	.byte	7
	.word	18550
	.byte	7
	.word	24784
	.byte	16
	.byte	'sPduR_PartitionIdentifiersType',0,16,218,11,16,4,13
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	427
	.byte	4,2,35,0,0,11
	.byte	'PduR_PartitionIdentifiersType',0,16,221,11,3
	.word	26787
	.byte	16
	.byte	'sPduR_RmDestRomType',0,16,224,11,16,4,13
	.byte	'PduLengthHandlingStrategyOfRmDestRom',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'RmGDestRomIdxOfRmDestRom',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'RmSrcRomIdxOfRmDestRom',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'RoutingTypeOfRmDestRom',0
	.word	288
	.byte	1,2,35,3,0,11
	.byte	'PduR_RmDestRomType',0,16,230,11,3
	.word	26908
	.byte	16
	.byte	'sPduR_RmGDestRomType',0,16,233,11,16,6,13
	.byte	'DestHndOfRmGDestRom',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'DirectionOfRmGDestRom',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'MaxPduLengthOfRmGDestRom',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'MmRomIdxOfRmGDestRom',0
	.word	288
	.byte	1,2,35,3,13
	.byte	'PartitionIndexOfCslOfRmGDestRom',0
	.word	288
	.byte	1,2,35,4,13
	.byte	'RmDestRomIdxOfRmGDestRom',0
	.word	288
	.byte	1,2,35,5,0,11
	.byte	'PduR_RmGDestRomType',0,16,241,11,3
	.word	27107
	.byte	16
	.byte	'sPduR_RmSrcRomType',0,16,244,11,16,4,13
	.byte	'MmRomIdxOfRmSrcRom',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'PartitionIndexOfCslOfRmSrcRom',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'RmDestRomStartIdxOfRmSrcRom',0
	.word	288
	.byte	1,2,35,2,13
	.byte	'SrcHndOfRmSrcRom',0
	.word	288
	.byte	1,2,35,3,0,11
	.byte	'PduR_RmSrcRomType',0,16,250,11,3
	.word	27363
	.byte	16
	.byte	'sPduR_RxIf2DestType',0,16,253,11,16,1,13
	.byte	'PduR_RxIf2DestNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_RxIf2DestType',0,16,128,12,3
	.word	27546
	.byte	16
	.byte	'sPduR_SrcApplicationRomType',0,16,131,12,16,1,13
	.byte	'PduR_SrcApplicationRomNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_SrcApplicationRomType',0,16,134,12,3
	.word	27634
	.byte	16
	.byte	'sPduR_Tx2LoType',0,16,137,12,16,1,13
	.byte	'RmTransmitFctPtrIdxOfTx2Lo',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_Tx2LoType',0,16,140,12,3
	.word	27746
	.byte	16
	.byte	'sPduR_TxIf2UpType',0,16,143,12,16,4,13
	.byte	'TxConfirmationUsedOfTxIf2Up',0
	.word	288
	.byte	1,2,35,0,13
	.byte	'PartitionIndexOfCslOfTxIf2Up',0
	.word	288
	.byte	1,2,35,1,13
	.byte	'RmGDestRomIdxOfTxIf2Up',0
	.word	288
	.byte	1,2,35,2,0,11
	.byte	'PduR_TxIf2UpType',0,16,148,12,3
	.word	27829
	.byte	7
	.word	288
	.byte	11
	.byte	'PduR_InitializedPtrType',0,16,169,12,66
	.word	27987
	.byte	16
	.byte	'sPduR_PCPartitionConfigType',0,16,217,12,16,4,13
	.byte	'InitializedOfPCPartitionConfig',0
	.word	27992
	.byte	4,2,35,0,0,11
	.byte	'PduR_PCPartitionConfigType',0,16,220,12,3
	.word	28025
	.byte	7
	.word	288
	.byte	16
	.byte	'sPduR_PCConfigType',0,16,235,12,16,1,13
	.byte	'PduR_PCConfigNeverUsed',0
	.word	288
	.byte	1,2,35,0,0,11
	.byte	'PduR_PCConfigType',0,16,238,12,3
	.word	28141
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8,58,15,59,15,57,15,73,19,0,0,12,19,1
	.byte	58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40
	.byte	0,3,8,28,13,0,0,16,19,1,3,8,58,15,59,15,57,15,11,15,0,0,17,1,1,11,15,73,19,0,0,18,33,0,47,15,0,0,19,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,20,23,1,58,15,59,15,57,15,11,15,0,0,21,23,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,22,13,0,11,15,73,19,13,15,12,15,56,9,0,0,23,21,1,54,15,39,12,0,0,24,21,0,54,15,39,12,0,0
	.byte	25,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation',0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_Bm.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,1,0,0
	.byte	'Det_Cfg.h',0,2,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Hal_Os_Types.h',0,3,0,0
	.byte	'Os_Hal_OsInt.h',0,3,0,0
	.byte	'Os_Types.h',0,3,0,0
	.byte	'Can_DrvGeneralTypes.h',0,2,0,0
	.byte	'Can_Cfg.h',0,2,0,0
	.byte	'Can.h',0,4,0,0
	.byte	'CanIf_Cfg.h',0,2,0,0
	.byte	'CanIf_Types.h',0,5,0,0
	.byte	'PduR_Lcfg.h',0,2,0,0,0
.L9:
.L7:

; ..\component\PduR\Implementation\PduR_Bm.c	     1  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	     2   *  COPYRIGHT
; ..\component\PduR\Implementation\PduR_Bm.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_Bm.c	     4   *  \verbatim
; ..\component\PduR\Implementation\PduR_Bm.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\PduR\Implementation\PduR_Bm.c	     6   *
; ..\component\PduR\Implementation\PduR_Bm.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_Bm.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\PduR\Implementation\PduR_Bm.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_Bm.c	    10   *  \endverbatim
; ..\component\PduR\Implementation\PduR_Bm.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_Bm.c	    12   *  FILE DESCRIPTION
; ..\component\PduR\Implementation\PduR_Bm.c	    13   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_Bm.c	    14   *         File:  PduR_Bm.c
; ..\component\PduR\Implementation\PduR_Bm.c	    15   *      Project:  Gw_AsrPduRCfg5
; ..\component\PduR\Implementation\PduR_Bm.c	    16   *       Module:  MICROSAR PDU Router
; ..\component\PduR\Implementation\PduR_Bm.c	    17   *    Generator:  Configurator 5
; ..\component\PduR\Implementation\PduR_Bm.c	    18   *
; ..\component\PduR\Implementation\PduR_Bm.c	    19   *  Description:  Vector implementation of AUTOSAR PDU Router
; ..\component\PduR\Implementation\PduR_Bm.c	    20   *
; ..\component\PduR\Implementation\PduR_Bm.c	    21   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    22  
; ..\component\PduR\Implementation\PduR_Bm.c	    23  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    24   *  REVISION HISTORY
; ..\component\PduR\Implementation\PduR_Bm.c	    25   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_Bm.c	    26   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_Bm.c	    27   *
; ..\component\PduR\Implementation\PduR_Bm.c	    28   *  FILE VERSION
; ..\component\PduR\Implementation\PduR_Bm.c	    29   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_Bm.c	    30   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_Bm.c	    31   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    32  
; ..\component\PduR\Implementation\PduR_Bm.c	    33  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    34   * LOCAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR_Bm.c	    35   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    36  
; ..\component\PduR\Implementation\PduR_Bm.c	    37  
; ..\component\PduR\Implementation\PduR_Bm.c	    38  #define PDUR_BM_SOURCE
; ..\component\PduR\Implementation\PduR_Bm.c	    39  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    40   * INCLUDES
; ..\component\PduR\Implementation\PduR_Bm.c	    41   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    42  #include "PduR.h"
; ..\component\PduR\Implementation\PduR_Bm.c	    43  #include "PduR_Bm.h"
; ..\component\PduR\Implementation\PduR_Bm.c	    44  #include "PduR_Lock.h"
; ..\component\PduR\Implementation\PduR_Bm.c	    45  
; ..\component\PduR\Implementation\PduR_Bm.c	    46  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    47   *  LOCAL CONSTANT MACROS
; ..\component\PduR\Implementation\PduR_Bm.c	    48   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    49  
; ..\component\PduR\Implementation\PduR_Bm.c	    50  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    51   *  LOCAL FUNCTION MACROS
; ..\component\PduR\Implementation\PduR_Bm.c	    52   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    53  #define PduR_Core_MemCpyRamToRam(d, s, l)    VStdMemCpyRamToRam((d), (s), (l))
; ..\component\PduR\Implementation\PduR_Bm.c	    54  #define PduR_Core_MemCpyRomToRam(d, s, l)    VStdMemCpyRomToRam((d), (s), (l))
; ..\component\PduR\Implementation\PduR_Bm.c	    55  
; ..\component\PduR\Implementation\PduR_Bm.c	    56  # if(PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	    57  #  define PduR_Bm_GetLengthOfBmTxBuffer(Index, memIdx)                       (PduR_GetBmTxBufferArrayRamLengthOfBmTxBufferRom(Index, memIdx) - (PduR_BmTxBufferArrayRamIterType) 1u)
; ..\component\PduR\Implementation\PduR_Bm.c	    58  #  define PduR_Bm_GetInboundBmTxBufferArrayEndIdxOfBmTxBuffer(Index, memIdx) (PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(Index, memIdx) - (PduR_BmTxBufferArrayRamIterType) 1u)
; ..\component\PduR\Implementation\PduR_Bm.c	    59  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	    60  
; ..\component\PduR\Implementation\PduR_Bm.c	    61  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    62   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\PduR\Implementation\PduR_Bm.c	    63   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    64  
; ..\component\PduR\Implementation\PduR_Bm.c	    65  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    66   *  LOCAL DATA PROTOTYPES
; ..\component\PduR\Implementation\PduR_Bm.c	    67   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    68  
; ..\component\PduR\Implementation\PduR_Bm.c	    69  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    70   *  GLOBAL DATA
; ..\component\PduR\Implementation\PduR_Bm.c	    71   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    72  
; ..\component\PduR\Implementation\PduR_Bm.c	    73  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    74   *  LOCAL FUNCTION PROTOTYPES
; ..\component\PduR\Implementation\PduR_Bm.c	    75   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    76  #define PDUR_START_SEC_CODE
; ..\component\PduR\Implementation\PduR_Bm.c	    77  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_Bm.c	    78  
; ..\component\PduR\Implementation\PduR_Bm.c	    79  #if(PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	    80  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    81   * PduR_Bm_Init_TxBuffer
; ..\component\PduR\Implementation\PduR_Bm.c	    82   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    83  /*! \brief      This function initializes the BufferManager TxBuffer
; ..\component\PduR\Implementation\PduR_Bm.c	    84   *  \details     -
; ..\component\PduR\Implementation\PduR_Bm.c	    85   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	    86   *  \pre        PduR_InitMemory() has been executed, if the start up code does not initialize variables.
; ..\component\PduR\Implementation\PduR_Bm.c	    87   *  \note       The function must be called on task level and has not to be interrupted.
; ..\component\PduR\Implementation\PduR_Bm.c	    88   *              by other administrative function calls.
; ..\component\PduR\Implementation\PduR_Bm.c	    89   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    90  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Init_TxBuffer(PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	    91  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	    92  
; ..\component\PduR\Implementation\PduR_Bm.c	    93  #if(PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	    94  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	    95   * PduR_Bm_Init_TxBufferInstance
; ..\component\PduR\Implementation\PduR_Bm.c	    96   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	    97  /*! \brief      This function initializes the BufferManager TxBuffer Instance
; ..\component\PduR\Implementation\PduR_Bm.c	    98   *  \details     -
; ..\component\PduR\Implementation\PduR_Bm.c	    99   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   100   *  \pre        PduR_InitMemory() has been executed, if the start up code does not initialize variables.
; ..\component\PduR\Implementation\PduR_Bm.c	   101   *  \note       The function must be called on task level and has not to be interrupted.
; ..\component\PduR\Implementation\PduR_Bm.c	   102   *              by other administrative function calls.
; ..\component\PduR\Implementation\PduR_Bm.c	   103   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   104  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Init_TxBufferInstance(PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   105  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   106  
; ..\component\PduR\Implementation\PduR_Bm.c	   107  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   108  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   109   * PduR_Bm_Put_Between_WriteIdx_EndIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   110   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   111  /*! \brief      The WriteId leading. Add data up to the buffer end.
; ..\component\PduR\Implementation\PduR_Bm.c	   112   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   113   *  \param[in]  bmTxBufferRomIdx  read index in the transport protocol Tx buffer
; ..\component\PduR\Implementation\PduR_Bm.c	   114   *  \param[in]  pduLength                length to copy
; ..\component\PduR\Implementation\PduR_Bm.c	   115   *  \param[in]  sduDataPtr               data pointer
; ..\component\PduR\Implementation\PduR_Bm.c	   116   *  \param[in]  memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   117   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   118   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   119  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Put_Between_WriteIdx_EndIdx(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   120                                                                         CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   121  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   122  
; ..\component\PduR\Implementation\PduR_Bm.c	   123  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   124  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   125   * PduR_Bm_Put_Between_WriteIdx_ReadIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   126   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   127  /*! \brief      The WriteId lagging the ReadIdx. Add data to the buffer in this range.
; ..\component\PduR\Implementation\PduR_Bm.c	   128   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   129   *  \param[in]  bmTxBufferRomIdx  read index in the transport protocol Tx buffer
; ..\component\PduR\Implementation\PduR_Bm.c	   130   *  \param[in]  pduLength                length to copy
; ..\component\PduR\Implementation\PduR_Bm.c	   131   *  \param[in]  sduDataPtr               data pointer
; ..\component\PduR\Implementation\PduR_Bm.c	   132   *  \param[in]  memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   133   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   134   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   135  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Put_Between_WriteIdx_ReadIdx(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   136                                                                          CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   137  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   138  
; ..\component\PduR\Implementation\PduR_Bm.c	   139  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   140  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   141   * PduR_Bm_PutData_StateHandler_BUFFER_READ4WRITE
; ..\component\PduR\Implementation\PduR_Bm.c	   142   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   143  /*! \brief      Helper function which handles the BUFFER_READ4WRITE state.
; ..\component\PduR\Implementation\PduR_Bm.c	   144   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   145   *  \param[in]  bmTxBufferRomIdx         read index in the transport protocol Tx buffer
; ..\component\PduR\Implementation\PduR_Bm.c	   146   *  \param[in]  pduLength                length to copy
; ..\component\PduR\Implementation\PduR_Bm.c	   147   *  \param[in]  sduDataPtr               data pointer
; ..\component\PduR\Implementation\PduR_Bm.c	   148   *  \param[in]  memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   149   *  \return     BUFREQ_OK                State change action was successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   150   *              BUFREQ_E_NOT_OK          State change action was not successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   151   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   152   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   153  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_PutData_StateHandler_BUFFER_READ4WRITE(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   154                                                                                                 CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   155  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   156  
; ..\component\PduR\Implementation\PduR_Bm.c	   157  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   158  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   159   * PduR_Bm_PutData_StateHandler_BUFFER_EMPTY_OR_WRITE4READ
; ..\component\PduR\Implementation\PduR_Bm.c	   160   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   161  /*! \brief      Helper function which handles the EMPTY or WRITE4READ state.
; ..\component\PduR\Implementation\PduR_Bm.c	   162   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   163   *  \param[in]  bmTxBufferRomIdx         buffer index
; ..\component\PduR\Implementation\PduR_Bm.c	   164   *  \param[in]  pduLength                length to copy
; ..\component\PduR\Implementation\PduR_Bm.c	   165   *  \param[in]  sduDataPtr               data pointer
; ..\component\PduR\Implementation\PduR_Bm.c	   166   *  \param[in]  memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   167   *  \return     BUFREQ_OK                State change action was successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   168   *              BUFREQ_E_NOT_OK          State change action was not successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   169   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   170   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   171  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_PutData_StateHandler_BUFFER_EMPTY_OR_WRITE4READ(PduR_BmTxBufferRomIterType bmTxBufferRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   172                                                                                                          PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   173                                                                                                          CONST(SduDataPtrType, AUTOMATIC) sduDataPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	   174                                                                                                          PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   175  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   176  
; ..\component\PduR\Implementation\PduR_Bm.c	   177  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   178  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   179   * PduR_Bm_Get_Between_ReadIdx_WriteIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   180   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   181  /*! \brief      The ReadIdx lagging the WriteIdx. Get data in this range.
; ..\component\PduR\Implementation\PduR_Bm.c	   182   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   183   *  \param[in]  bmTxBufferInstanceRomIdx instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   184   *  \param[in]  pduLength                length to copy.
; ..\component\PduR\Implementation\PduR_Bm.c	   185   *  \param[in]  sduDataPtr               data pointer.
; ..\component\PduR\Implementation\PduR_Bm.c	   186   *  \param[in]  memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   187   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   188   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   189  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Get_Between_ReadIdx_WriteIdx(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   190                                                                          PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   191                                                                          CONST(SduDataPtrType, AUTOMATIC) sduDataPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	   192                                                                          PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   193  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   194  
; ..\component\PduR\Implementation\PduR_Bm.c	   195  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   196  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   197   * PduR_Bm_Get_Between_ReadIdx_EndIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   198   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   199  /*! \brief      The ReadIdx is leading. Get data up to the buffer end.
; ..\component\PduR\Implementation\PduR_Bm.c	   200   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   201   *  \param[in]  bmTxBufferInstanceRomIdx instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   202   *  \param[in]  pduLength                length to copy.
; ..\component\PduR\Implementation\PduR_Bm.c	   203   *  \param[in]  sduDataPtr               data pointer.
; ..\component\PduR\Implementation\PduR_Bm.c	   204   *  \param[in]  memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   205   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   206   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   207  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Get_Between_ReadIdx_EndIdx(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   208                                                                        CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   209  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   210  
; ..\component\PduR\Implementation\PduR_Bm.c	   211  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   212  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   213   * PduR_Bm_GetData_StateHandler_BUFFER_WRITE4READ
; ..\component\PduR\Implementation\PduR_Bm.c	   214   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   215  /*! \brief      Helper function which handles the BUFFER_WRITE4READ state.
; ..\component\PduR\Implementation\PduR_Bm.c	   216   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   217   *  \param[in]  bmTxBufferInstanceRomIdx instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   218   *  \param[in]  pduLength              length to copy.
; ..\component\PduR\Implementation\PduR_Bm.c	   219   *  \param[in]  sduDataPtr             data pointer.
; ..\component\PduR\Implementation\PduR_Bm.c	   220   *  \param[in]  memIdx                 memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   221   *  \return     BUFREQ_OK              State change action was successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   222   *              BUFREQ_E_NOT_OK        State change action was not successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   223   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   224   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   225  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_GetData_StateHandler_BUFFER_WRITE4READ(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   226                                                                                                 CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   227  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   228  
; ..\component\PduR\Implementation\PduR_Bm.c	   229  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   230  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   231   * PduR_Bm_GetData_StateHandler_BUFFER_FULL_OR_READ4WRITE
; ..\component\PduR\Implementation\PduR_Bm.c	   232   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   233  /*! \brief      Helper function which handles the BUFFER_FULL and READ4WRITE state.
; ..\component\PduR\Implementation\PduR_Bm.c	   234   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   235   *  \param[in]  bmTxBufferInstanceRomIdx instance Idx
; ..\component\PduR\Implementation\PduR_Bm.c	   236   *  \param[in]  pduLength              length to copy
; ..\component\PduR\Implementation\PduR_Bm.c	   237   *  \param[in]  sduDataPtr             data pointer
; ..\component\PduR\Implementation\PduR_Bm.c	   238   *  \param[in]  memIdx                 memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   239   *  \return     BUFREQ_OK              State change action was successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   240   *              BUFREQ_E_NOT_OK        State change action was not successful.
; ..\component\PduR\Implementation\PduR_Bm.c	   241   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   242   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   243  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_GetData_StateHandler_BUFFER_FULL_OR_READ4WRITE(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   244                                                                                                         PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   245                                                                                                         CONST(SduDataPtrType, AUTOMATIC) sduDataPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	   246                                                                                                         PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   247  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   248  
; ..\component\PduR\Implementation\PduR_Bm.c	   249  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   250  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   251   * PduR_Bm_Switch_WriteIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   252   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   253  /*! \brief      Set WriteIdx to buffer start Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   254   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   255   *  \param[in]  bmTxBufferRomIdx   read index in the transport protocol Tx buffer.
; ..\component\PduR\Implementation\PduR_Bm.c	   256   *  \param[in]  memIdx             memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   257   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   258   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   259  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Switch_WriteIdx(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   260  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   261  
; ..\component\PduR\Implementation\PduR_Bm.c	   262  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   263  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   264   * PduR_Bm_GetLinearBufferSize
; ..\component\PduR\Implementation\PduR_Bm.c	   265   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   266  /*! \brief      Get the free buffer size which is available without doing a wrap around.
; ..\component\PduR\Implementation\PduR_Bm.c	   267   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   268   *  \param[in]  bmTxBufferRomIdx  index to the BmTxBuffer element
; ..\component\PduR\Implementation\PduR_Bm.c	   269   *  \param[in]  memIdx            memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   270   *  \return     the calculated free buffer size
; ..\component\PduR\Implementation\PduR_Bm.c	   271   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   272   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   273  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamIterType, PDUR_CODE) PduR_Bm_GetLinearBufferSize(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   274  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   275  
; ..\component\PduR\Implementation\PduR_Bm.c	   276  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   277  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   278   * PduR_Bm_Switch_InstanceReadIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   279   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   280  /*! \brief     Helper function to perform a wrap around for the instance specific read idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   281   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   282   *  \param[in] bmTxBufferInstanceRomIdx instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   283   *  \param[in] memIdx                   memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   284   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   285   *  \note      get data from buffer.
; ..\component\PduR\Implementation\PduR_Bm.c	   286   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   287  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Switch_InstanceReadIdx(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   288  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   289  
; ..\component\PduR\Implementation\PduR_Bm.c	   290  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   291  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   292   * PduR_Bm_PutData_WithWrapAround
; ..\component\PduR\Implementation\PduR_Bm.c	   293   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   294  /*! \brief      Perform wrap around handling for WriteIdx.
; ..\component\PduR\Implementation\PduR_Bm.c	   295   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   296   *  \param[in]  bmTxBufferRomIdx  read index in the transport protocol Tx buffer.
; ..\component\PduR\Implementation\PduR_Bm.c	   297   *  \param[in]  pduLength              length to copy.
; ..\component\PduR\Implementation\PduR_Bm.c	   298   *  \param[in]  sduDataPtr              data pointer.
; ..\component\PduR\Implementation\PduR_Bm.c	   299   *  \param[in]  memIdx                  memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   300   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   301  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   302  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_PutData_WithWrapAround(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength, SduDataPtrType sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   303  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   304  
; ..\component\PduR\Implementation\PduR_Bm.c	   305  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   306  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   307   * PduR_Bm_GetData_WithWrapAround
; ..\component\PduR\Implementation\PduR_Bm.c	   308   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   309  /*! \brief      Perform a wrap around handling for instance ReadIdx.
; ..\component\PduR\Implementation\PduR_Bm.c	   310   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   311   *  \param[in]  bmTxBufferInstanceRomIdx  instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   312   *  \param[in]  pduLength              length to copy.
; ..\component\PduR\Implementation\PduR_Bm.c	   313   *  \param[in]  sduDataPtr             data pointer.
; ..\component\PduR\Implementation\PduR_Bm.c	   314   *  \param[in]  memIdx                 memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   315   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   316   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   317  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_GetData_WithWrapAround(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   318                                                                        SduDataPtrType sduDataPtr, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   319  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   320  
; ..\component\PduR\Implementation\PduR_Bm.c	   321  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   322  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   323   * PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam
; ..\component\PduR\Implementation\PduR_Bm.c	   324   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   325  /*! \brief      Get BmTxBufferArrayRamRead Idx Of BmTxBufferRam
; ..\component\PduR\Implementation\PduR_Bm.c	   326   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   327   *  \param[in]  bmTxBufferRomIdx Buffer Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   328   *  \return     Buffer read index
; ..\component\PduR\Implementation\PduR_Bm.c	   329   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   330   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   331  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferRamType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam (PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   332  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   333  
; ..\component\PduR\Implementation\PduR_Bm.c	   334  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   335  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   336   * PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamSafe
; ..\component\PduR\Implementation\PduR_Bm.c	   337   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   338  /*! \brief      Get BmTxBufferArrayRamRead Idx Of BmTxBufferInstanceRam with safe check
; ..\component\PduR\Implementation\PduR_Bm.c	   339   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   340   *  \param[in]  bmTxBufferInstanceRomIdx Buffer instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   341   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   342   *  \return     Buffer instance read index
; ..\component\PduR\Implementation\PduR_Bm.c	   343   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   344   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   345  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamSafe(PduR_BmTxBufferInstanceRamIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   346                                                                                                                                                          PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   347  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   348  
; ..\component\PduR\Implementation\PduR_Bm.c	   349  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   350  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   351   * PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe
; ..\component\PduR\Implementation\PduR_Bm.c	   352   **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   353  /*! \brief      Get BmTxBufferArrayRamWrite Idx Of BmTxBufferRam with safe check
; ..\component\PduR\Implementation\PduR_Bm.c	   354   *  \details    -
; ..\component\PduR\Implementation\PduR_Bm.c	   355   *  \param[in]  bmTxBufferRomIdx Buffer Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   356   *  \param[in]  memIdx  memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   357   *  \return     Buffer write index
; ..\component\PduR\Implementation\PduR_Bm.c	   358   *  \pre        -
; ..\component\PduR\Implementation\PduR_Bm.c	   359   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   360  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   361  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   362  
; ..\component\PduR\Implementation\PduR_Bm.c	   363  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   364  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   365   * PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked
; ..\component\PduR\Implementation\PduR_Bm.c	   366   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   367  /*! \brief       This function returns the currently read BmTxBufferArrayRamReadIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   368   *  \details     -
; ..\component\PduR\Implementation\PduR_Bm.c	   369   *  \param[in]   bmTxBufferInstanceRomIdx   instance Idx.
; ..\component\PduR\Implementation\PduR_Bm.c	   370   *  \param[out]  bmTxBufferArrayRamReadIdx  The BmTxBufferArrayRam read index
; ..\component\PduR\Implementation\PduR_Bm.c	   371   *  \param[in]   memIdx                     memory section index
; ..\component\PduR\Implementation\PduR_Bm.c	   372   *  \return      E_OK                       the read BmTxBufferArrayRamReadIdx is valid and can be used
; ..\component\PduR\Implementation\PduR_Bm.c	   373   *               E_NOT_OK                   the read BmTxBufferArrayRamReadIdx is invalid and can not be used
; ..\component\PduR\Implementation\PduR_Bm.c	   374   *  \pre         -
; ..\component\PduR\Implementation\PduR_Bm.c	   375   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_Bm.c	   376   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_Bm.c	   377   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_Bm.c	   378   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   379  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   380                                                                                                                     PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType* bmTxBufferArrayRamReadIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   381                                                                                                                     PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   382  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   383  
; ..\component\PduR\Implementation\PduR_Bm.c	   384  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   385   *  LOCAL FUNCTIONS
; ..\component\PduR\Implementation\PduR_Bm.c	   386   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   387  
; ..\component\PduR\Implementation\PduR_Bm.c	   388  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   389  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   390   * PduR_Bm_Init_TxBuffer
; ..\component\PduR\Implementation\PduR_Bm.c	   391   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   392  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   393   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   394   *
; ..\component\PduR\Implementation\PduR_Bm.c	   395   *
; ..\component\PduR\Implementation\PduR_Bm.c	   396   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   397  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Init_TxBuffer(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   398  {
; ..\component\PduR\Implementation\PduR_Bm.c	   399    PduR_BmTxBufferRomIterType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   400    for(bmTxBufferRomIdx = 0u; bmTxBufferRomIdx < PduR_GetSizeOfBmTxBufferRam(memIdx); bmTxBufferRomIdx++)
; ..\component\PduR\Implementation\PduR_Bm.c	   401    {
; ..\component\PduR\Implementation\PduR_Bm.c	   402      PduR_Bm_ResetTxBuffer(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   403    }
; ..\component\PduR\Implementation\PduR_Bm.c	   404  }
; ..\component\PduR\Implementation\PduR_Bm.c	   405  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   406  
; ..\component\PduR\Implementation\PduR_Bm.c	   407  #if(PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   408  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   409   * PduR_Bm_Init_TxBufferInstance
; ..\component\PduR\Implementation\PduR_Bm.c	   410   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   411  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   412   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   413   *
; ..\component\PduR\Implementation\PduR_Bm.c	   414   *
; ..\component\PduR\Implementation\PduR_Bm.c	   415   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   416  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Init_TxBufferInstance(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   417  {
; ..\component\PduR\Implementation\PduR_Bm.c	   418    PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   419    for(bmTxBufferInstanceRomIdx = 0u; bmTxBufferInstanceRomIdx < PduR_GetSizeOfBmTxBufferInstanceRam(memIdx); bmTxBufferInstanceRomIdx++)
; ..\component\PduR\Implementation\PduR_Bm.c	   420    {
; ..\component\PduR\Implementation\PduR_Bm.c	   421      PduR_Bm_ResetTxBufferInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   422    }
; ..\component\PduR\Implementation\PduR_Bm.c	   423  }
; ..\component\PduR\Implementation\PduR_Bm.c	   424  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   425  
; ..\component\PduR\Implementation\PduR_Bm.c	   426  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   427  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   428   * PduR_Bm_PutData_StateHandler_BUFFER_EMPTY_OR_WRITE4READ
; ..\component\PduR\Implementation\PduR_Bm.c	   429   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   430  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   431   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   432   *
; ..\component\PduR\Implementation\PduR_Bm.c	   433   *
; ..\component\PduR\Implementation\PduR_Bm.c	   434   *
; ..\component\PduR\Implementation\PduR_Bm.c	   435   *
; ..\component\PduR\Implementation\PduR_Bm.c	   436   *
; ..\component\PduR\Implementation\PduR_Bm.c	   437   *
; ..\component\PduR\Implementation\PduR_Bm.c	   438   *
; ..\component\PduR\Implementation\PduR_Bm.c	   439   *
; ..\component\PduR\Implementation\PduR_Bm.c	   440   *
; ..\component\PduR\Implementation\PduR_Bm.c	   441   *
; ..\component\PduR\Implementation\PduR_Bm.c	   442   *
; ..\component\PduR\Implementation\PduR_Bm.c	   443   *
; ..\component\PduR\Implementation\PduR_Bm.c	   444   *
; ..\component\PduR\Implementation\PduR_Bm.c	   445   *
; ..\component\PduR\Implementation\PduR_Bm.c	   446   *
; ..\component\PduR\Implementation\PduR_Bm.c	   447   *
; ..\component\PduR\Implementation\PduR_Bm.c	   448   *
; ..\component\PduR\Implementation\PduR_Bm.c	   449   *
; ..\component\PduR\Implementation\PduR_Bm.c	   450   *
; ..\component\PduR\Implementation\PduR_Bm.c	   451   *
; ..\component\PduR\Implementation\PduR_Bm.c	   452   *
; ..\component\PduR\Implementation\PduR_Bm.c	   453   *
; ..\component\PduR\Implementation\PduR_Bm.c	   454   *
; ..\component\PduR\Implementation\PduR_Bm.c	   455   *
; ..\component\PduR\Implementation\PduR_Bm.c	   456   *
; ..\component\PduR\Implementation\PduR_Bm.c	   457   *
; ..\component\PduR\Implementation\PduR_Bm.c	   458   *
; ..\component\PduR\Implementation\PduR_Bm.c	   459   *
; ..\component\PduR\Implementation\PduR_Bm.c	   460   *
; ..\component\PduR\Implementation\PduR_Bm.c	   461   *
; ..\component\PduR\Implementation\PduR_Bm.c	   462   *
; ..\component\PduR\Implementation\PduR_Bm.c	   463   *
; ..\component\PduR\Implementation\PduR_Bm.c	   464   *
; ..\component\PduR\Implementation\PduR_Bm.c	   465   *
; ..\component\PduR\Implementation\PduR_Bm.c	   466   *
; ..\component\PduR\Implementation\PduR_Bm.c	   467   *
; ..\component\PduR\Implementation\PduR_Bm.c	   468   *
; ..\component\PduR\Implementation\PduR_Bm.c	   469   *
; ..\component\PduR\Implementation\PduR_Bm.c	   470   *
; ..\component\PduR\Implementation\PduR_Bm.c	   471   *
; ..\component\PduR\Implementation\PduR_Bm.c	   472   *
; ..\component\PduR\Implementation\PduR_Bm.c	   473   *
; ..\component\PduR\Implementation\PduR_Bm.c	   474   *
; ..\component\PduR\Implementation\PduR_Bm.c	   475   *
; ..\component\PduR\Implementation\PduR_Bm.c	   476   *
; ..\component\PduR\Implementation\PduR_Bm.c	   477   *
; ..\component\PduR\Implementation\PduR_Bm.c	   478   *
; ..\component\PduR\Implementation\PduR_Bm.c	   479   *
; ..\component\PduR\Implementation\PduR_Bm.c	   480   *
; ..\component\PduR\Implementation\PduR_Bm.c	   481   *
; ..\component\PduR\Implementation\PduR_Bm.c	   482   *
; ..\component\PduR\Implementation\PduR_Bm.c	   483   *
; ..\component\PduR\Implementation\PduR_Bm.c	   484   *
; ..\component\PduR\Implementation\PduR_Bm.c	   485   *
; ..\component\PduR\Implementation\PduR_Bm.c	   486   *
; ..\component\PduR\Implementation\PduR_Bm.c	   487   *
; ..\component\PduR\Implementation\PduR_Bm.c	   488   *
; ..\component\PduR\Implementation\PduR_Bm.c	   489   *
; ..\component\PduR\Implementation\PduR_Bm.c	   490   *
; ..\component\PduR\Implementation\PduR_Bm.c	   491   *
; ..\component\PduR\Implementation\PduR_Bm.c	   492   *
; ..\component\PduR\Implementation\PduR_Bm.c	   493   *
; ..\component\PduR\Implementation\PduR_Bm.c	   494   *
; ..\component\PduR\Implementation\PduR_Bm.c	   495   *
; ..\component\PduR\Implementation\PduR_Bm.c	   496   *
; ..\component\PduR\Implementation\PduR_Bm.c	   497   *
; ..\component\PduR\Implementation\PduR_Bm.c	   498   *
; ..\component\PduR\Implementation\PduR_Bm.c	   499   *
; ..\component\PduR\Implementation\PduR_Bm.c	   500   *
; ..\component\PduR\Implementation\PduR_Bm.c	   501   *
; ..\component\PduR\Implementation\PduR_Bm.c	   502   *
; ..\component\PduR\Implementation\PduR_Bm.c	   503   *
; ..\component\PduR\Implementation\PduR_Bm.c	   504   *
; ..\component\PduR\Implementation\PduR_Bm.c	   505   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   506  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_PutData_StateHandler_BUFFER_EMPTY_OR_WRITE4READ(PduR_BmTxBufferRomIterType bmTxBufferRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   507                                                                                                          PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   508                                                                                                          CONST(SduDataPtrType, AUTOMATIC) sduDataPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	   509                                                                                                          PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   510  {
; ..\component\PduR\Implementation\PduR_Bm.c	   511    BufReq_ReturnType retVal = BUFREQ_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   512    PduR_BmTxBufferArrayRamIterType bmLinearBufferSize = PduR_Bm_GetLinearBufferSize(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   513  
; ..\component\PduR\Implementation\PduR_Bm.c	   514    if(bmLinearBufferSize > pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   515    {
; ..\component\PduR\Implementation\PduR_Bm.c	   516      PduR_Bm_Put_Between_WriteIdx_EndIdx(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   517    }
; ..\component\PduR\Implementation\PduR_Bm.c	   518    else if(bmLinearBufferSize == pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   519    {
; ..\component\PduR\Implementation\PduR_Bm.c	   520      PduR_Bm_Put_Between_WriteIdx_EndIdx(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   521      if (PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx) != PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)) /* COV_PDUR_IF_ONLY */
; ..\component\PduR\Implementation\PduR_Bm.c	   522      {
; ..\component\PduR\Implementation\PduR_Bm.c	   523        PduR_Bm_Switch_WriteIdx(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   524      }
; ..\component\PduR\Implementation\PduR_Bm.c	   525    }
; ..\component\PduR\Implementation\PduR_Bm.c	   526    else if(PduR_Bm_GetTotalBufferSize(bmTxBufferRomIdx, memIdx) >= pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   527    {
; ..\component\PduR\Implementation\PduR_Bm.c	   528      PduR_Bm_PutData_WithWrapAround(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   529    }
; ..\component\PduR\Implementation\PduR_Bm.c	   530    else
; ..\component\PduR\Implementation\PduR_Bm.c	   531    {
; ..\component\PduR\Implementation\PduR_Bm.c	   532      /* Tp will never request more buffer than the PDUR has provided */
; ..\component\PduR\Implementation\PduR_Bm.c	   533      retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	   534    }
; ..\component\PduR\Implementation\PduR_Bm.c	   535    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	   536  }
; ..\component\PduR\Implementation\PduR_Bm.c	   537  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   538  
; ..\component\PduR\Implementation\PduR_Bm.c	   539  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   540  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   541   * PduR_Bm_EnableBmTxBufferInstance
; ..\component\PduR\Implementation\PduR_Bm.c	   542   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   543  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   544   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   545   *
; ..\component\PduR\Implementation\PduR_Bm.c	   546   *
; ..\component\PduR\Implementation\PduR_Bm.c	   547   *
; ..\component\PduR\Implementation\PduR_Bm.c	   548   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   549  FUNC(void, PDUR_CODE) PduR_Bm_EnableBmTxBufferInstance(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   550  {
; ..\component\PduR\Implementation\PduR_Bm.c	   551    if(bmTxBufferInstanceRomIdx > PduR_GetBmTxBufferInstanceRomEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx))   /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	   552    {
; ..\component\PduR\Implementation\PduR_Bm.c	   553      PduR_Det_ReportError(PDUR_RMTP_ASSIGNASSOCIATEDBUFFER2DESTINATION, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_Bm.c	   554    }
; ..\component\PduR\Implementation\PduR_Bm.c	   555    else
; ..\component\PduR\Implementation\PduR_Bm.c	   556    {
; ..\component\PduR\Implementation\PduR_Bm.c	   557      PduR_SetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   558    }
; ..\component\PduR\Implementation\PduR_Bm.c	   559  }
; ..\component\PduR\Implementation\PduR_Bm.c	   560  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   561  
; ..\component\PduR\Implementation\PduR_Bm.c	   562  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   563  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   564   * PduR_Bm_GetLinearBufferSize
; ..\component\PduR\Implementation\PduR_Bm.c	   565   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   566  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   567   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   568   *
; ..\component\PduR\Implementation\PduR_Bm.c	   569   *
; ..\component\PduR\Implementation\PduR_Bm.c	   570   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   571  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamIterType, PDUR_CODE) PduR_Bm_GetLinearBufferSize(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   572  {
; ..\component\PduR\Implementation\PduR_Bm.c	   573    PduR_BmTxBufferArrayRamIterType retVal = 0u;  /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   574    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferRamType bmTxBufferArrayRamReadIdxOfBmTxBufferRam = PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   575    PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType bmTxBufferArrayRamWriteIdxOfBmTxBufferRam = PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   576  
; ..\component\PduR\Implementation\PduR_Bm.c	   577    switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferRam(bmTxBufferRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	   578    {
; ..\component\PduR\Implementation\PduR_Bm.c	   579      case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	   580      {
; ..\component\PduR\Implementation\PduR_Bm.c	   581        if (PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx) == bmTxBufferArrayRamReadIdxOfBmTxBufferRam)
; ..\component\PduR\Implementation\PduR_Bm.c	   582        {
; ..\component\PduR\Implementation\PduR_Bm.c	   583          retVal = PduR_Bm_GetInboundBmTxBufferArrayEndIdxOfBmTxBuffer(bmTxBufferRomIdx, memIdx) - bmTxBufferArrayRamWriteIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	   584        }
; ..\component\PduR\Implementation\PduR_Bm.c	   585        else
; ..\component\PduR\Implementation\PduR_Bm.c	   586        {
; ..\component\PduR\Implementation\PduR_Bm.c	   587          retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamWriteIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	   588        }
; ..\component\PduR\Implementation\PduR_Bm.c	   589        break;
; ..\component\PduR\Implementation\PduR_Bm.c	   590      }
; ..\component\PduR\Implementation\PduR_Bm.c	   591      case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	   592      {
; ..\component\PduR\Implementation\PduR_Bm.c	   593        retVal = ((PduR_BmTxBufferArrayRamIterType) bmTxBufferArrayRamReadIdxOfBmTxBufferRam - (PduR_BmTxBufferArrayRamIterType) 1u) - bmTxBufferArrayRamWriteIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	   594        break;
; ..\component\PduR\Implementation\PduR_Bm.c	   595      }
; ..\component\PduR\Implementation\PduR_Bm.c	   596      case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERRAM:      /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	   597      {
; ..\component\PduR\Implementation\PduR_Bm.c	   598        retVal = 0u;
; ..\component\PduR\Implementation\PduR_Bm.c	   599        break;
; ..\component\PduR\Implementation\PduR_Bm.c	   600      }
; ..\component\PduR\Implementation\PduR_Bm.c	   601      case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	   602      {
; ..\component\PduR\Implementation\PduR_Bm.c	   603        if (PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx) == bmTxBufferArrayRamReadIdxOfBmTxBufferRam)
; ..\component\PduR\Implementation\PduR_Bm.c	   604        {
; ..\component\PduR\Implementation\PduR_Bm.c	   605          retVal = PduR_Bm_GetInboundBmTxBufferArrayEndIdxOfBmTxBuffer(bmTxBufferRomIdx, memIdx) - bmTxBufferArrayRamWriteIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	   606        }
; ..\component\PduR\Implementation\PduR_Bm.c	   607        else
; ..\component\PduR\Implementation\PduR_Bm.c	   608        {
; ..\component\PduR\Implementation\PduR_Bm.c	   609          retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamWriteIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	   610        }
; ..\component\PduR\Implementation\PduR_Bm.c	   611        break;
; ..\component\PduR\Implementation\PduR_Bm.c	   612      }
; ..\component\PduR\Implementation\PduR_Bm.c	   613      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	   614        break;
; ..\component\PduR\Implementation\PduR_Bm.c	   615    }
; ..\component\PduR\Implementation\PduR_Bm.c	   616    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	   617  }
; ..\component\PduR\Implementation\PduR_Bm.c	   618  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   619  
; ..\component\PduR\Implementation\PduR_Bm.c	   620  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   621  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   622   * PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamSafe
; ..\component\PduR\Implementation\PduR_Bm.c	   623   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   624  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   625   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   626   *
; ..\component\PduR\Implementation\PduR_Bm.c	   627   *
; ..\component\PduR\Implementation\PduR_Bm.c	   628   *
; ..\component\PduR\Implementation\PduR_Bm.c	   629   *
; ..\component\PduR\Implementation\PduR_Bm.c	   630   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   631  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamSafe(PduR_BmTxBufferInstanceRamIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   632                                                                                                                                                          PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   633  {
; ..\component\PduR\Implementation\PduR_Bm.c	   634    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx = PduR_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   635  
; ..\component\PduR\Implementation\PduR_Bm.c	   636  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   637    PduR_BmTxBufferRomIdxOfBmTxBufferInstanceRomType bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   638    PduR_BmTxBufferArrayRamStartIdxOfBmTxBufferRomType startIdxOfBuffer = PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   639    PduR_BmTxBufferArrayRamEndIdxOfBmTxBufferRomType endIdxOfBuffer = PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   640  
; ..\component\PduR\Implementation\PduR_Bm.c	   641    if((bmTxBufferArrayRamReadIdx >= endIdxOfBuffer) && (bmTxBufferArrayRamReadIdx != PDUR_NO_BMTXBUFFERARRAYRAMREADIDXOFBMTXBUFFERINSTANCERAM)) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_Bm.c	   642    {
; ..\component\PduR\Implementation\PduR_Bm.c	   643      bmTxBufferArrayRamReadIdx = ((PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType) endIdxOfBuffer) - 1u;
; ..\component\PduR\Implementation\PduR_Bm.c	   644      PduR_ReportRuntimeDetError(PDUR_FCT_GW_BUFMGR_GET_READIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_Bm.c	   645    }
; ..\component\PduR\Implementation\PduR_Bm.c	   646    if((bmTxBufferArrayRamReadIdx < startIdxOfBuffer) && (bmTxBufferArrayRamReadIdx != PDUR_NO_BMTXBUFFERARRAYRAMREADIDXOFBMTXBUFFERINSTANCERAM)) /* PRQA S 2995 */ /* MD_PduR_2995_2996 */ /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_Bm.c	   647    {
; ..\component\PduR\Implementation\PduR_Bm.c	   648      bmTxBufferArrayRamReadIdx = startIdxOfBuffer;
; ..\component\PduR\Implementation\PduR_Bm.c	   649      PduR_ReportRuntimeDetError(PDUR_FCT_GW_BUFMGR_GET_READIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_Bm.c	   650    }
; ..\component\PduR\Implementation\PduR_Bm.c	   651  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	   652  
; ..\component\PduR\Implementation\PduR_Bm.c	   653    return bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   654  }
; ..\component\PduR\Implementation\PduR_Bm.c	   655  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	   656  
; ..\component\PduR\Implementation\PduR_Bm.c	   657  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   658  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   659   * PduR_Bm_GetData
; ..\component\PduR\Implementation\PduR_Bm.c	   660   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   661  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   662   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   663   *
; ..\component\PduR\Implementation\PduR_Bm.c	   664   *
; ..\component\PduR\Implementation\PduR_Bm.c	   665   *
; ..\component\PduR\Implementation\PduR_Bm.c	   666   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   667  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_GetData(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength, CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx) /* PRQA S 1505 */ /* MD_PduR_1505 */
; ..\component\PduR\Implementation\PduR_Bm.c	   668  {
; ..\component\PduR\Implementation\PduR_Bm.c	   669    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   670    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   671  
; ..\component\PduR\Implementation\PduR_Bm.c	   672    if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_Bm.c	   673    {
; ..\component\PduR\Implementation\PduR_Bm.c	   674      switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, bmTxBufferArrayRamReadIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	   675      {
; ..\component\PduR\Implementation\PduR_Bm.c	   676        case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	   677        {
; ..\component\PduR\Implementation\PduR_Bm.c	   678          retVal = PduR_Bm_GetData_StateHandler_BUFFER_WRITE4READ(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   679          break;
; ..\component\PduR\Implementation\PduR_Bm.c	   680        }
; ..\component\PduR\Implementation\PduR_Bm.c	   681        case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	   682        case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	   683        {
; ..\component\PduR\Implementation\PduR_Bm.c	   684          retVal = PduR_Bm_GetData_StateHandler_BUFFER_FULL_OR_READ4WRITE(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   685          break;
; ..\component\PduR\Implementation\PduR_Bm.c	   686        }
; ..\component\PduR\Implementation\PduR_Bm.c	   687        case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:     /* COV_PDUR_ONLY_TT_SINGLE_BUFFER */
; ..\component\PduR\Implementation\PduR_Bm.c	   688        {
; ..\component\PduR\Implementation\PduR_Bm.c	   689          if(pduLength == 0u)
; ..\component\PduR\Implementation\PduR_Bm.c	   690          {
; ..\component\PduR\Implementation\PduR_Bm.c	   691            retVal = BUFREQ_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	   692          }
; ..\component\PduR\Implementation\PduR_Bm.c	   693          else
; ..\component\PduR\Implementation\PduR_Bm.c	   694          {
; ..\component\PduR\Implementation\PduR_Bm.c	   695            /* nothing to do no data available */
; ..\component\PduR\Implementation\PduR_Bm.c	   696            retVal = BUFREQ_E_BUSY;
; ..\component\PduR\Implementation\PduR_Bm.c	   697          }
; ..\component\PduR\Implementation\PduR_Bm.c	   698          break;
; ..\component\PduR\Implementation\PduR_Bm.c	   699        }
; ..\component\PduR\Implementation\PduR_Bm.c	   700        default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	   701          break;
; ..\component\PduR\Implementation\PduR_Bm.c	   702      }
; ..\component\PduR\Implementation\PduR_Bm.c	   703    }
; ..\component\PduR\Implementation\PduR_Bm.c	   704  
; ..\component\PduR\Implementation\PduR_Bm.c	   705    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	   706  }
; ..\component\PduR\Implementation\PduR_Bm.c	   707  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   708  
; ..\component\PduR\Implementation\PduR_Bm.c	   709  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   710  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   711   * PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe
; ..\component\PduR\Implementation\PduR_Bm.c	   712   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   713  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   714   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   715   *
; ..\component\PduR\Implementation\PduR_Bm.c	   716   *
; ..\component\PduR\Implementation\PduR_Bm.c	   717   *
; ..\component\PduR\Implementation\PduR_Bm.c	   718   *
; ..\component\PduR\Implementation\PduR_Bm.c	   719   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   720  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   721  {
; ..\component\PduR\Implementation\PduR_Bm.c	   722    PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType bmTxBufferArrayRamWriteIdxOfBmTxBufferRam = PduR_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   723  
; ..\component\PduR\Implementation\PduR_Bm.c	   724  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   725    PduR_BmTxBufferArrayRamStartIdxOfBmTxBufferRomType startIdxOfBuffer = PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   726    PduR_BmTxBufferArrayRamEndIdxOfBmTxBufferRomType endIdxOfBuffer = PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   727  
; ..\component\PduR\Implementation\PduR_Bm.c	   728    if(bmTxBufferArrayRamWriteIdxOfBmTxBufferRam > endIdxOfBuffer) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_Bm.c	   729    {
; ..\component\PduR\Implementation\PduR_Bm.c	   730      bmTxBufferArrayRamWriteIdxOfBmTxBufferRam = ((PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType) endIdxOfBuffer) - 1u;
; ..\component\PduR\Implementation\PduR_Bm.c	   731      PduR_ReportRuntimeDetError(PDUR_FCT_GW_BUFMGR_GET_WRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_Bm.c	   732    }
; ..\component\PduR\Implementation\PduR_Bm.c	   733    if(bmTxBufferArrayRamWriteIdxOfBmTxBufferRam < startIdxOfBuffer) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_Bm.c	   734    {
; ..\component\PduR\Implementation\PduR_Bm.c	   735      bmTxBufferArrayRamWriteIdxOfBmTxBufferRam = startIdxOfBuffer;
; ..\component\PduR\Implementation\PduR_Bm.c	   736      PduR_ReportRuntimeDetError(PDUR_FCT_GW_BUFMGR_GET_WRITEIDX, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_Bm.c	   737    }
; ..\component\PduR\Implementation\PduR_Bm.c	   738  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	   739  
; ..\component\PduR\Implementation\PduR_Bm.c	   740    return bmTxBufferArrayRamWriteIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	   741  }
; ..\component\PduR\Implementation\PduR_Bm.c	   742  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   743  
; ..\component\PduR\Implementation\PduR_Bm.c	   744  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   745  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   746   * PduR_Bm_Get_Between_ReadIdx_WriteIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   747   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   748  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   749   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   750   *
; ..\component\PduR\Implementation\PduR_Bm.c	   751   *
; ..\component\PduR\Implementation\PduR_Bm.c	   752   *
; ..\component\PduR\Implementation\PduR_Bm.c	   753   *
; ..\component\PduR\Implementation\PduR_Bm.c	   754   *
; ..\component\PduR\Implementation\PduR_Bm.c	   755   *
; ..\component\PduR\Implementation\PduR_Bm.c	   756   *
; ..\component\PduR\Implementation\PduR_Bm.c	   757   *
; ..\component\PduR\Implementation\PduR_Bm.c	   758   *
; ..\component\PduR\Implementation\PduR_Bm.c	   759   *
; ..\component\PduR\Implementation\PduR_Bm.c	   760   *
; ..\component\PduR\Implementation\PduR_Bm.c	   761   *
; ..\component\PduR\Implementation\PduR_Bm.c	   762   *
; ..\component\PduR\Implementation\PduR_Bm.c	   763   *
; ..\component\PduR\Implementation\PduR_Bm.c	   764   *
; ..\component\PduR\Implementation\PduR_Bm.c	   765   *
; ..\component\PduR\Implementation\PduR_Bm.c	   766   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   767  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Get_Between_ReadIdx_WriteIdx(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   768                                                                          PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   769                                                                          CONST(SduDataPtrType, AUTOMATIC) sduDataPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	   770                                                                          PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   771  {
; ..\component\PduR\Implementation\PduR_Bm.c	   772    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   773    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   774  
; ..\component\PduR\Implementation\PduR_Bm.c	   775    if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_Bm.c	   776    {
; ..\component\PduR\Implementation\PduR_Bm.c	   777      /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	   778      if((bmTxBufferArrayRamReadIdx + pduLength) > PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx), memIdx))   /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	   779      {
; ..\component\PduR\Implementation\PduR_Bm.c	   780        errorId = PDUR_E_FATAL;
; ..\component\PduR\Implementation\PduR_Bm.c	   781      }
; ..\component\PduR\Implementation\PduR_Bm.c	   782      else
; ..\component\PduR\Implementation\PduR_Bm.c	   783      {
; ..\component\PduR\Implementation\PduR_Bm.c	   784        /* Dequeue Data */
; ..\component\PduR\Implementation\PduR_Bm.c	   785        PduR_Core_MemCpyRamToRam(sduDataPtr, PduR_GetAddrBmTxBufferArrayRam(bmTxBufferArrayRamReadIdx, memIdx), pduLength);        /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */ /* SBSW_PDUR_MEM_CPY_RAM2RAM */
; ..\component\PduR\Implementation\PduR_Bm.c	   786        PduR_SetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, bmTxBufferArrayRamReadIdx + pduLength, memIdx); /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   787      }
; ..\component\PduR\Implementation\PduR_Bm.c	   788    }
; ..\component\PduR\Implementation\PduR_Bm.c	   789    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	   790    # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   791    if(errorId != PDUR_E_NO_ERROR)        /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	   792    {
; ..\component\PduR\Implementation\PduR_Bm.c	   793      PduR_Det_ReportError(PDUR_FCT_GW_BUFMGR_GET_BETWEEN_READIDX_WRITEIDX, errorId);
; ..\component\PduR\Implementation\PduR_Bm.c	   794    }
; ..\component\PduR\Implementation\PduR_Bm.c	   795    # endif
; ..\component\PduR\Implementation\PduR_Bm.c	   796    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_Bm.c	   797  }
; ..\component\PduR\Implementation\PduR_Bm.c	   798  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   799  
; ..\component\PduR\Implementation\PduR_Bm.c	   800  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   801  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   802   * PduR_Bm_GetData_StateHandler_BUFFER_FULL_OR_READ4WRITE
; ..\component\PduR\Implementation\PduR_Bm.c	   803   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   804  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   805  * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   806   *
; ..\component\PduR\Implementation\PduR_Bm.c	   807   *
; ..\component\PduR\Implementation\PduR_Bm.c	   808   *
; ..\component\PduR\Implementation\PduR_Bm.c	   809   *
; ..\component\PduR\Implementation\PduR_Bm.c	   810   *
; ..\component\PduR\Implementation\PduR_Bm.c	   811   *
; ..\component\PduR\Implementation\PduR_Bm.c	   812   *
; ..\component\PduR\Implementation\PduR_Bm.c	   813   *
; ..\component\PduR\Implementation\PduR_Bm.c	   814   *
; ..\component\PduR\Implementation\PduR_Bm.c	   815   *
; ..\component\PduR\Implementation\PduR_Bm.c	   816   *
; ..\component\PduR\Implementation\PduR_Bm.c	   817   *
; ..\component\PduR\Implementation\PduR_Bm.c	   818   *
; ..\component\PduR\Implementation\PduR_Bm.c	   819   *
; ..\component\PduR\Implementation\PduR_Bm.c	   820   *
; ..\component\PduR\Implementation\PduR_Bm.c	   821   *
; ..\component\PduR\Implementation\PduR_Bm.c	   822   *
; ..\component\PduR\Implementation\PduR_Bm.c	   823   *
; ..\component\PduR\Implementation\PduR_Bm.c	   824   *
; ..\component\PduR\Implementation\PduR_Bm.c	   825   *
; ..\component\PduR\Implementation\PduR_Bm.c	   826   *
; ..\component\PduR\Implementation\PduR_Bm.c	   827   *
; ..\component\PduR\Implementation\PduR_Bm.c	   828   *
; ..\component\PduR\Implementation\PduR_Bm.c	   829   *
; ..\component\PduR\Implementation\PduR_Bm.c	   830   *
; ..\component\PduR\Implementation\PduR_Bm.c	   831   *
; ..\component\PduR\Implementation\PduR_Bm.c	   832   *
; ..\component\PduR\Implementation\PduR_Bm.c	   833   *
; ..\component\PduR\Implementation\PduR_Bm.c	   834   *
; ..\component\PduR\Implementation\PduR_Bm.c	   835   *
; ..\component\PduR\Implementation\PduR_Bm.c	   836   *
; ..\component\PduR\Implementation\PduR_Bm.c	   837   *
; ..\component\PduR\Implementation\PduR_Bm.c	   838   *
; ..\component\PduR\Implementation\PduR_Bm.c	   839   *
; ..\component\PduR\Implementation\PduR_Bm.c	   840   *
; ..\component\PduR\Implementation\PduR_Bm.c	   841   *
; ..\component\PduR\Implementation\PduR_Bm.c	   842   *
; ..\component\PduR\Implementation\PduR_Bm.c	   843   *
; ..\component\PduR\Implementation\PduR_Bm.c	   844   *
; ..\component\PduR\Implementation\PduR_Bm.c	   845   *
; ..\component\PduR\Implementation\PduR_Bm.c	   846   *
; ..\component\PduR\Implementation\PduR_Bm.c	   847   *
; ..\component\PduR\Implementation\PduR_Bm.c	   848   *
; ..\component\PduR\Implementation\PduR_Bm.c	   849   *
; ..\component\PduR\Implementation\PduR_Bm.c	   850   *
; ..\component\PduR\Implementation\PduR_Bm.c	   851   *
; ..\component\PduR\Implementation\PduR_Bm.c	   852   *
; ..\component\PduR\Implementation\PduR_Bm.c	   853   *
; ..\component\PduR\Implementation\PduR_Bm.c	   854   *
; ..\component\PduR\Implementation\PduR_Bm.c	   855   *
; ..\component\PduR\Implementation\PduR_Bm.c	   856   *
; ..\component\PduR\Implementation\PduR_Bm.c	   857   *
; ..\component\PduR\Implementation\PduR_Bm.c	   858   *
; ..\component\PduR\Implementation\PduR_Bm.c	   859   *
; ..\component\PduR\Implementation\PduR_Bm.c	   860   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   861  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_GetData_StateHandler_BUFFER_FULL_OR_READ4WRITE(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	   862                                                                                                         PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   863                                                                                                         CONST(SduDataPtrType, AUTOMATIC) sduDataPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	   864                                                                                                         PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   865  {
; ..\component\PduR\Implementation\PduR_Bm.c	   866    BufReq_ReturnType retVal = BUFREQ_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   867    PduR_BmTxBufferArrayRamIterType bmLinearDataSizeInstance =  PduR_Bm_GetLinearDataSizeInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   868    PduR_BmTxBufferArrayRamIterType bmTotalDataSizeInstance = PduR_Bm_GetTotalDataSizeInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   869    
; ..\component\PduR\Implementation\PduR_Bm.c	   870    /* main Tx buffer element */
; ..\component\PduR\Implementation\PduR_Bm.c	   871    if (bmLinearDataSizeInstance == pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   872    {
; ..\component\PduR\Implementation\PduR_Bm.c	   873      if(bmLinearDataSizeInstance == bmTotalDataSizeInstance) /* COV_PDUR_IF_ONLY */
; ..\component\PduR\Implementation\PduR_Bm.c	   874      {
; ..\component\PduR\Implementation\PduR_Bm.c	   875        PduR_Bm_Get_Between_ReadIdx_EndIdx(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   876      }
; ..\component\PduR\Implementation\PduR_Bm.c	   877      else
; ..\component\PduR\Implementation\PduR_Bm.c	   878      {
; ..\component\PduR\Implementation\PduR_Bm.c	   879        PduR_Bm_Get_Between_ReadIdx_EndIdx(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   880        PduR_Bm_Switch_InstanceReadIdx(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   881      }
; ..\component\PduR\Implementation\PduR_Bm.c	   882    }
; ..\component\PduR\Implementation\PduR_Bm.c	   883    else if(bmLinearDataSizeInstance > pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   884    {
; ..\component\PduR\Implementation\PduR_Bm.c	   885      PduR_Bm_Get_Between_ReadIdx_EndIdx(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx);        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   886    }
; ..\component\PduR\Implementation\PduR_Bm.c	   887    else if(bmTotalDataSizeInstance >= pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   888    {
; ..\component\PduR\Implementation\PduR_Bm.c	   889      PduR_Bm_GetData_WithWrapAround(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx);        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   890    }
; ..\component\PduR\Implementation\PduR_Bm.c	   891    else
; ..\component\PduR\Implementation\PduR_Bm.c	   892    {
; ..\component\PduR\Implementation\PduR_Bm.c	   893      retVal = BUFREQ_E_BUSY;
; ..\component\PduR\Implementation\PduR_Bm.c	   894    }
; ..\component\PduR\Implementation\PduR_Bm.c	   895    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	   896  }
; ..\component\PduR\Implementation\PduR_Bm.c	   897  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   898  
; ..\component\PduR\Implementation\PduR_Bm.c	   899  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   900  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   901   * PduR_Bm_Get_Between_ReadIdx_EndIdx
; ..\component\PduR\Implementation\PduR_Bm.c	   902   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   903  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   904   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   905   *
; ..\component\PduR\Implementation\PduR_Bm.c	   906   *
; ..\component\PduR\Implementation\PduR_Bm.c	   907   *
; ..\component\PduR\Implementation\PduR_Bm.c	   908   *
; ..\component\PduR\Implementation\PduR_Bm.c	   909   *
; ..\component\PduR\Implementation\PduR_Bm.c	   910   *
; ..\component\PduR\Implementation\PduR_Bm.c	   911   *
; ..\component\PduR\Implementation\PduR_Bm.c	   912   *
; ..\component\PduR\Implementation\PduR_Bm.c	   913   *
; ..\component\PduR\Implementation\PduR_Bm.c	   914   *
; ..\component\PduR\Implementation\PduR_Bm.c	   915   *
; ..\component\PduR\Implementation\PduR_Bm.c	   916   *
; ..\component\PduR\Implementation\PduR_Bm.c	   917   *
; ..\component\PduR\Implementation\PduR_Bm.c	   918   *
; ..\component\PduR\Implementation\PduR_Bm.c	   919   *
; ..\component\PduR\Implementation\PduR_Bm.c	   920   *
; ..\component\PduR\Implementation\PduR_Bm.c	   921   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   922  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Get_Between_ReadIdx_EndIdx(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   923                                                                        CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   924  {
; ..\component\PduR\Implementation\PduR_Bm.c	   925    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   926    PduR_BmTxBufferRomIdxOfBmTxBufferInstanceRomType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   927    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	   928  
; ..\component\PduR\Implementation\PduR_Bm.c	   929    if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_Bm.c	   930    {
; ..\component\PduR\Implementation\PduR_Bm.c	   931      /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	   932      if((bmTxBufferArrayRamReadIdx + pduLength) > (PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx), memIdx)))   /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	   933      {
; ..\component\PduR\Implementation\PduR_Bm.c	   934        errorId = PDUR_E_FATAL;
; ..\component\PduR\Implementation\PduR_Bm.c	   935      }
; ..\component\PduR\Implementation\PduR_Bm.c	   936      else
; ..\component\PduR\Implementation\PduR_Bm.c	   937      {
; ..\component\PduR\Implementation\PduR_Bm.c	   938        /* Dequeue Data */
; ..\component\PduR\Implementation\PduR_Bm.c	   939        PduR_Core_MemCpyRamToRam(sduDataPtr, PduR_GetAddrBmTxBufferArrayRam(bmTxBufferArrayRamReadIdx, memIdx), pduLength);        /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */ /* SBSW_PDUR_MEM_CPY_RAM2RAM */
; ..\component\PduR\Implementation\PduR_Bm.c	   940        bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   941  
; ..\component\PduR\Implementation\PduR_Bm.c	   942        if ((bmTxBufferArrayRamReadIdx + pduLength) == PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	   943        {
; ..\component\PduR\Implementation\PduR_Bm.c	   944          PduR_SetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   945        }
; ..\component\PduR\Implementation\PduR_Bm.c	   946        else
; ..\component\PduR\Implementation\PduR_Bm.c	   947        {
; ..\component\PduR\Implementation\PduR_Bm.c	   948          PduR_SetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, (bmTxBufferArrayRamReadIdx + pduLength), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   949        }
; ..\component\PduR\Implementation\PduR_Bm.c	   950      }
; ..\component\PduR\Implementation\PduR_Bm.c	   951    }
; ..\component\PduR\Implementation\PduR_Bm.c	   952    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	   953  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   954    if(errorId != PDUR_E_NO_ERROR)        /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	   955    {
; ..\component\PduR\Implementation\PduR_Bm.c	   956      PduR_Det_ReportError(PDUR_FCT_GW_BUFMGR_GET_BETWEEN_READIDX_ENDIDX, errorId);
; ..\component\PduR\Implementation\PduR_Bm.c	   957    }
; ..\component\PduR\Implementation\PduR_Bm.c	   958  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	   959    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_Bm.c	   960  }
; ..\component\PduR\Implementation\PduR_Bm.c	   961  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	   962  
; ..\component\PduR\Implementation\PduR_Bm.c	   963  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	   964  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	   965   * PduR_Bm_GetData_StateHandler_BUFFER_WRITE4READ
; ..\component\PduR\Implementation\PduR_Bm.c	   966   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   967  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	   968   *Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	   969   *
; ..\component\PduR\Implementation\PduR_Bm.c	   970   *
; ..\component\PduR\Implementation\PduR_Bm.c	   971   *
; ..\component\PduR\Implementation\PduR_Bm.c	   972   *
; ..\component\PduR\Implementation\PduR_Bm.c	   973   *
; ..\component\PduR\Implementation\PduR_Bm.c	   974   *
; ..\component\PduR\Implementation\PduR_Bm.c	   975   *
; ..\component\PduR\Implementation\PduR_Bm.c	   976   *
; ..\component\PduR\Implementation\PduR_Bm.c	   977   *
; ..\component\PduR\Implementation\PduR_Bm.c	   978   *
; ..\component\PduR\Implementation\PduR_Bm.c	   979   *
; ..\component\PduR\Implementation\PduR_Bm.c	   980   *
; ..\component\PduR\Implementation\PduR_Bm.c	   981   *
; ..\component\PduR\Implementation\PduR_Bm.c	   982   *
; ..\component\PduR\Implementation\PduR_Bm.c	   983   *
; ..\component\PduR\Implementation\PduR_Bm.c	   984   *
; ..\component\PduR\Implementation\PduR_Bm.c	   985   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	   986  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_GetData_StateHandler_BUFFER_WRITE4READ(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	   987                                                                                                 CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	   988  {
; ..\component\PduR\Implementation\PduR_Bm.c	   989    BufReq_ReturnType retVal = BUFREQ_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	   990    PduR_BmTxBufferArrayRamIterType bmLinearDataSizeInstance =  PduR_Bm_GetLinearDataSizeInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	   991  
; ..\component\PduR\Implementation\PduR_Bm.c	   992    if(bmLinearDataSizeInstance >= pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	   993    {
; ..\component\PduR\Implementation\PduR_Bm.c	   994      PduR_Bm_Get_Between_ReadIdx_WriteIdx(bmTxBufferInstanceRomIdx, pduLength, sduDataPtr, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	   995    }
; ..\component\PduR\Implementation\PduR_Bm.c	   996    else
; ..\component\PduR\Implementation\PduR_Bm.c	   997    {
; ..\component\PduR\Implementation\PduR_Bm.c	   998      /* not enough data available */
; ..\component\PduR\Implementation\PduR_Bm.c	   999      retVal = BUFREQ_E_BUSY;
; ..\component\PduR\Implementation\PduR_Bm.c	  1000    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1001    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1002  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1003  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1004  
; ..\component\PduR\Implementation\PduR_Bm.c	  1005  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1006  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1007   * PduR_Bm_Put_Between_WriteIdx_ReadIdx
; ..\component\PduR\Implementation\PduR_Bm.c	  1008   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1009  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1010   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1011   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1012   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1013   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1014   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1015   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1016   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1017   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1018   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1019   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1020   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1021   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1022   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1023   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1024   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1025   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1026   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1027  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Put_Between_WriteIdx_ReadIdx(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength, CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx)     /* PRQA S 3673 */ /* MD_MSR_Rule8.13 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1028  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1029    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1030    PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType bmTxBufferArrayRamWriteIdxOfBmTxBufferRam = PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1031  
; ..\component\PduR\Implementation\PduR_Bm.c	  1032    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	  1033    if((bmTxBufferArrayRamWriteIdxOfBmTxBufferRam + pduLength) > PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx))      /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	  1034    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1035      errorId = PDUR_E_FATAL;
; ..\component\PduR\Implementation\PduR_Bm.c	  1036    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1037    else
; ..\component\PduR\Implementation\PduR_Bm.c	  1038    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1039      /* Dequeue Data */
; ..\component\PduR\Implementation\PduR_Bm.c	  1040      PduR_Core_MemCpyRamToRam(PduR_GetAddrBmTxBufferArrayRam(bmTxBufferArrayRamWriteIdxOfBmTxBufferRam, memIdx), sduDataPtr, pduLength);        /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */ /* SBSW_PDUR_MEM_CPY_RAM2RAM */
; ..\component\PduR\Implementation\PduR_Bm.c	  1041      PduR_SetBmTxBufferArrayRamWriteIdxOfBmTxBufferRam(bmTxBufferRomIdx, (bmTxBufferArrayRamWriteIdxOfBmTxBufferRam + pduLength), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1042    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1043    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	  1044  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1045    if(errorId != PDUR_E_NO_ERROR)        /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	  1046    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1047      PduR_Det_ReportError(PDUR_FCT_GW_BUFMGR_PUT_BETWEEN_WRITEIDX_READIDX, errorId);
; ..\component\PduR\Implementation\PduR_Bm.c	  1048    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1049  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1050    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_Bm.c	  1051  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1052  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1053  
; ..\component\PduR\Implementation\PduR_Bm.c	  1054  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1055  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1056   * PduR_Bm_PutData_StateHandler_BUFFER_READ4WRITE
; ..\component\PduR\Implementation\PduR_Bm.c	  1057   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1058  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1059  * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1060   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1061   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1062   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1063   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1064   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1065   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1066   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1067   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1068   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1069   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1070   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1071   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1072   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1073   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1074   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1075   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1076   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1077  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_PutData_StateHandler_BUFFER_READ4WRITE(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	  1078                                                                                                 CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1079  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1080    BufReq_ReturnType retVal = BUFREQ_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1081    PduR_BmTxBufferArrayRamIterType bmLinearBufferSize = PduR_Bm_GetLinearBufferSize(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1082  
; ..\component\PduR\Implementation\PduR_Bm.c	  1083    if(bmLinearBufferSize >= pduLength)
; ..\component\PduR\Implementation\PduR_Bm.c	  1084    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1085      PduR_Bm_Put_Between_WriteIdx_ReadIdx(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx);       /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1086    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1087    else
; ..\component\PduR\Implementation\PduR_Bm.c	  1088    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1089      /* Not enough free buffer space available. Tp will never request more buffer than the PDUR has provided */
; ..\component\PduR\Implementation\PduR_Bm.c	  1090      retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1091    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1092    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1093  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1094  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1095  
; ..\component\PduR\Implementation\PduR_Bm.c	  1096  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1097  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1098   * PduR_Bm_Put_Between_WriteIdx_EndIdx
; ..\component\PduR\Implementation\PduR_Bm.c	  1099   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1100  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1101   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1102   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1103   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1104   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1105   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1106   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1107   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1108   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1109   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1110   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1111   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1112   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1113   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1114   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1115   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1116   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1117   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1118   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1119   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1120   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1121   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1122   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1123   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1124   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1125   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1126   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1127   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1128   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1129   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1130   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1131  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Put_Between_WriteIdx_EndIdx(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength, CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx)      /* PRQA S 3673 */ /* MD_MSR_Rule8.13 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1132  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1133    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1134    PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType bmTxBufferArrayRamWriteIdxOfBmTxBufferRam = PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1135  
; ..\component\PduR\Implementation\PduR_Bm.c	  1136    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	  1137    if((bmTxBufferArrayRamWriteIdxOfBmTxBufferRam + pduLength) > (PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)))     /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	  1138    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1139      errorId = PDUR_E_FATAL;
; ..\component\PduR\Implementation\PduR_Bm.c	  1140    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1141    else
; ..\component\PduR\Implementation\PduR_Bm.c	  1142    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1143      /* Enqueue Data */
; ..\component\PduR\Implementation\PduR_Bm.c	  1144      PduR_Core_MemCpyRamToRam(PduR_GetAddrBmTxBufferArrayRam(bmTxBufferArrayRamWriteIdxOfBmTxBufferRam, memIdx), sduDataPtr, pduLength);        /* PRQA S 0315 */ /* MD_MSR_VStdLibCopy */ /* SBSW_PDUR_MEM_CPY_RAM2RAM */
; ..\component\PduR\Implementation\PduR_Bm.c	  1145      PduR_SetBmTxBufferArrayRamWriteIdxOfBmTxBufferRam(bmTxBufferRomIdx, (bmTxBufferArrayRamWriteIdxOfBmTxBufferRam + pduLength), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1146    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1147    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_Bm.c	  1148  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1149    if(errorId != PDUR_E_NO_ERROR)        /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_Bm.c	  1150    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1151      PduR_Det_ReportError(PDUR_FCT_GW_BUFMGR_PUT_BETWEEN_WRITEIDX_ENDIDX, errorId);
; ..\component\PduR\Implementation\PduR_Bm.c	  1152    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1153  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1154    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_Bm.c	  1155  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1156  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1157  
; ..\component\PduR\Implementation\PduR_Bm.c	  1158  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1159  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1160   * PduR_Bm_Switch_WriteIdx
; ..\component\PduR\Implementation\PduR_Bm.c	  1161   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1162  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1163   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1164   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1165   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1166   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1167   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1168   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1169   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1170   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1171   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1172   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1173   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1174   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1175   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1176   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1177   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1178   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1179   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1180   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1181   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1182  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Switch_WriteIdx(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1183  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1184    PduR_SetBmTxBufferArrayRamWriteIdxOfBmTxBufferRam(bmTxBufferRomIdx, PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1185  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1186  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1187  
; ..\component\PduR\Implementation\PduR_Bm.c	  1188  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1189  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1190   * PduR_Bm_Switch_InstanceReadIdx
; ..\component\PduR\Implementation\PduR_Bm.c	  1191   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1192  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1193   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1194   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1195   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1196   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1197   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1198  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_Switch_InstanceReadIdx(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1199  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1200    /* main Tx buffer element */
; ..\component\PduR\Implementation\PduR_Bm.c	  1201    PduR_BmTxBufferRomIdxOfBmTxBufferInstanceRomType bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1202    PduR_SetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx), memIdx);       /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1203  
; ..\component\PduR\Implementation\PduR_Bm.c	  1204    PDUR_DUMMY_STATEMENT(bmTxBufferRomIdx);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_Bm.c	  1205  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1206  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1207  
; ..\component\PduR\Implementation\PduR_Bm.c	  1208  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1209  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1210   * PduR_Bm_PutData_WithWrapAround
; ..\component\PduR\Implementation\PduR_Bm.c	  1211   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1212  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1213   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1214   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1215   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1216   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1217   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1218   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1219   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1220   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1221   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1222   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1223   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1224   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1225   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1226   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1227   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1228   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1229   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1230  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_PutData_WithWrapAround(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength, SduDataPtrType sduDataPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1231  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1232    PduLengthType pduLengthHead, pduLengthTail;
; ..\component\PduR\Implementation\PduR_Bm.c	  1233    /* The caller guarantees that the return value of GetLinearBufferSize is smaller than PduLengthType, otherwise a wraparound is not needed. */
; ..\component\PduR\Implementation\PduR_Bm.c	  1234    pduLengthTail = (PduLengthType) PduR_Bm_GetLinearBufferSize(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1235    pduLengthHead = pduLength - pduLengthTail;
; ..\component\PduR\Implementation\PduR_Bm.c	  1236    PduR_Bm_Put_Between_WriteIdx_EndIdx(bmTxBufferRomIdx, pduLengthTail, sduDataPtr, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1237    PduR_Bm_Switch_WriteIdx(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1238    PduR_Bm_Put_Between_WriteIdx_ReadIdx(bmTxBufferRomIdx, pduLengthHead, &sduDataPtr[pduLengthTail], memIdx);     /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1239  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1240  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1241  
; ..\component\PduR\Implementation\PduR_Bm.c	  1242  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1243  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1244   * PduR_Bm_GetData_WithWrapAround
; ..\component\PduR\Implementation\PduR_Bm.c	  1245   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1246  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1247   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1248   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1249   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1250   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1251   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1252   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1253   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1254   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1255   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1256   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1257   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1258   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1259   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1260   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1261   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1262   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1263  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_Bm_GetData_WithWrapAround(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduLengthType pduLength, SduDataPtrType sduDataPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1264  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1265    PduLengthType pduLengthHead, pduLengthTail;
; ..\component\PduR\Implementation\PduR_Bm.c	  1266    /* The caller guarantees that the return value of GetLinearDataSizeInstance is smaller than PduLengthType, otherwise a wraparound is not needed. */
; ..\component\PduR\Implementation\PduR_Bm.c	  1267    pduLengthTail = (PduLengthType) PduR_Bm_GetLinearDataSizeInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1268    pduLengthHead = pduLength - pduLengthTail;
; ..\component\PduR\Implementation\PduR_Bm.c	  1269    PduR_Bm_Get_Between_ReadIdx_EndIdx(bmTxBufferInstanceRomIdx, pduLengthTail, sduDataPtr, memIdx);        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1270    PduR_Bm_Switch_InstanceReadIdx(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1271    PduR_Bm_Get_Between_ReadIdx_WriteIdx(bmTxBufferInstanceRomIdx, pduLengthHead, &sduDataPtr[pduLengthTail], memIdx);    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1272  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1273  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1274  
; ..\component\PduR\Implementation\PduR_Bm.c	  1275  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1276   *  GLOBAL FUNCTIONS
; ..\component\PduR\Implementation\PduR_Bm.c	  1277   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1278  
; ..\component\PduR\Implementation\PduR_Bm.c	  1279  #if(PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1280  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1281   * PduR_Bm_Init
; ..\component\PduR\Implementation\PduR_Bm.c	  1282   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1283  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1284   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1285   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1286   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1287   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1288  FUNC(void, PDUR_CODE) PduR_Bm_Init(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1289  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1290    /* Init Buffer manager */
; ..\component\PduR\Implementation\PduR_Bm.c	  1291    PduR_Bm_Init_TxBuffer(memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1292    PduR_Bm_Init_TxBufferInstance(memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1293  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1294  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1295  
; ..\component\PduR\Implementation\PduR_Bm.c	  1296  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1297  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1298   * PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam
; ..\component\PduR\Implementation\PduR_Bm.c	  1299   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1300  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1301   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1302   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1303   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1304   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1305   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1306   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1307   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1308   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1309  LOCAL_INLINE FUNC(PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferRamType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1310  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1311    PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1312    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType slowestInstanceReadIndex = PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1313    PduR_BmTxBufferArrayRamIterType maxTotalDataSizeInstance = 0;
; ..\component\PduR\Implementation\PduR_Bm.c	  1314  
; ..\component\PduR\Implementation\PduR_Bm.c	  1315    for(bmTxBufferInstanceRomIdx = PduR_GetBmTxBufferInstanceRomStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1316        bmTxBufferInstanceRomIdx < PduR_GetBmTxBufferInstanceRomEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx); bmTxBufferInstanceRomIdx++)
; ..\component\PduR\Implementation\PduR_Bm.c	  1317    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1318      PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx = 0;
; ..\component\PduR\Implementation\PduR_Bm.c	  1319  
; ..\component\PduR\Implementation\PduR_Bm.c	  1320      if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* PRQA S 2991 */ /* MD_PduR_2991 */ /* COV_PDUR_IF_ONLY */ /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1321      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1322        PduR_BmTxBufferArrayRamIterType bmTotalDataSizeInstance = PduR_Bm_GetTotalDataSizeInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1323  
; ..\component\PduR\Implementation\PduR_Bm.c	  1324        if(bmTotalDataSizeInstance >= maxTotalDataSizeInstance) /* COV_PDUR_IF_ONLY */
; ..\component\PduR\Implementation\PduR_Bm.c	  1325        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1326          maxTotalDataSizeInstance = bmTotalDataSizeInstance;   /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1327          slowestInstanceReadIndex = bmTxBufferArrayRamReadIdx; /* maximum amount of data -> slowest read instance */
; ..\component\PduR\Implementation\PduR_Bm.c	  1328        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1329      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1330    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1331    return slowestInstanceReadIndex;
; ..\component\PduR\Implementation\PduR_Bm.c	  1332  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1333  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1334  
; ..\component\PduR\Implementation\PduR_Bm.c	  1335  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1336  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1337   * PduR_Bm_GetPduRBufferStateOfBmTxBufferInstanceRam
; ..\component\PduR\Implementation\PduR_Bm.c	  1338   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1339  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1340   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1341   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1342   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1343   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1344   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1345  FUNC(PduR_PduRBufferStateOfBmTxBufferInstanceRamType, PDUR_CODE) PduR_Bm_GetPduRBufferStateOfBmTxBufferInstanceRam(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	  1346                                                                                                                     PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	  1347                                                                                                                     PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1348  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1349    PduR_PduRBufferStateOfBmTxBufferInstanceRamType retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1350  
; ..\component\PduR\Implementation\PduR_Bm.c	  1351    PduR_BmTxBufferRomIdxOfBmTxBufferInstanceRomType bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1352    PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType bmTxBufferArrayRamWriteIdx = PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1353    PduR_BmTxBufferArrayRamStartIdxOfBmTxBufferRomType bmTxBufferArrayRamStartIdx = PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1354  
; ..\component\PduR\Implementation\PduR_Bm.c	  1355    if(bmTxBufferArrayRamReadIdx == bmTxBufferArrayRamWriteIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1356    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1357      retVal = PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1358    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1359    else if (bmTxBufferArrayRamReadIdx == (bmTxBufferArrayRamWriteIdx + 1u))
; ..\component\PduR\Implementation\PduR_Bm.c	  1360    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1361      retVal = PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1362    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1363    else if ((bmTxBufferArrayRamStartIdx == bmTxBufferArrayRamReadIdx) && (PduR_Bm_GetInboundBmTxBufferArrayEndIdxOfBmTxBuffer(bmTxBufferRomIdx, memIdx) == bmTxBufferArrayRamWriteIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1364    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1365      retVal = PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1366    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1367    else if (bmTxBufferArrayRamReadIdx > bmTxBufferArrayRamWriteIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1368    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1369      retVal = PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1370    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1371    else /* (bmTxBufferArrayRamReadIdx < bmTxBufferArrayRamWriteIdx) */
; ..\component\PduR\Implementation\PduR_Bm.c	  1372    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1373      retVal = PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1374    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1375  
; ..\component\PduR\Implementation\PduR_Bm.c	  1376    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1377  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1378  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1379  
; ..\component\PduR\Implementation\PduR_Bm.c	  1380  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1381  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1382   * PduR_Bm_GetPduRBufferStateOfBmTxBufferRam
; ..\component\PduR\Implementation\PduR_Bm.c	  1383   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1384  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1385   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1386   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1387   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1388   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1389   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1390  FUNC(PduR_PduRBufferStateOfBmTxBufferRamType, PDUR_CODE) PduR_Bm_GetPduRBufferStateOfBmTxBufferRam (PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1391      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1392        PduR_PduRBufferStateOfBmTxBufferRamType retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1393  
; ..\component\PduR\Implementation\PduR_Bm.c	  1394        PduR_BmTxBufferArrayRamWriteIdxOfBmTxBufferRamType bmTxBufferArrayRamWriteIdx = PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1395        PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx = PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1396        PduR_BmTxBufferArrayRamStartIdxOfBmTxBufferRomType bmTxBufferArrayRamStartIdx = PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1397  
; ..\component\PduR\Implementation\PduR_Bm.c	  1398        if(bmTxBufferArrayRamReadIdx == bmTxBufferArrayRamWriteIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1399        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1400          retVal = PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERRAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1401        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1402        else if (bmTxBufferArrayRamReadIdx == (bmTxBufferArrayRamWriteIdx + 1u))
; ..\component\PduR\Implementation\PduR_Bm.c	  1403        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1404          retVal = PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERRAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1405        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1406        else if ((bmTxBufferArrayRamStartIdx == bmTxBufferArrayRamReadIdx) && (PduR_Bm_GetInboundBmTxBufferArrayEndIdxOfBmTxBuffer(bmTxBufferRomIdx, memIdx) == bmTxBufferArrayRamWriteIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1407        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1408          retVal = PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERRAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1409        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1410        else if (bmTxBufferArrayRamReadIdx > bmTxBufferArrayRamWriteIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1411        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1412          retVal = PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERRAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1413        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1414        else /* (bmTxBufferArrayRamReadIdx < bmTxBufferArrayRamWriteIdx) */
; ..\component\PduR\Implementation\PduR_Bm.c	  1415        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1416          retVal = PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERRAM;
; ..\component\PduR\Implementation\PduR_Bm.c	  1417        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1418  
; ..\component\PduR\Implementation\PduR_Bm.c	  1419        return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1420      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1421  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1422  
; ..\component\PduR\Implementation\PduR_Bm.c	  1423  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1424  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1425   * PduR_Bm_PutData
; ..\component\PduR\Implementation\PduR_Bm.c	  1426   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1427  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1428   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1429   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1430   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1431   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1432   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1433  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_PutData(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduLengthType pduLength, CONST(SduDataPtrType, AUTOMATIC) sduDataPtr, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1434  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1435    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1436  
; ..\component\PduR\Implementation\PduR_Bm.c	  1437    switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferRam(bmTxBufferRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1438    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1439      case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1440      case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1441      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1442        retVal = PduR_Bm_PutData_StateHandler_BUFFER_EMPTY_OR_WRITE4READ(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1443        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1444      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1445      case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1446      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1447        retVal = PduR_Bm_PutData_StateHandler_BUFFER_READ4WRITE(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx);       /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1448        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1449      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1450      case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1451      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1452        if(pduLength == 0u)
; ..\component\PduR\Implementation\PduR_Bm.c	  1453        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1454          retVal = BUFREQ_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1455        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1456        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1457      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1458      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	  1459        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1460    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1461  
; ..\component\PduR\Implementation\PduR_Bm.c	  1462    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1463  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1464  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1465  
; ..\component\PduR\Implementation\PduR_Bm.c	  1466  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1467  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1468   * PduR_Bm_PutDataAsPtr
; ..\component\PduR\Implementation\PduR_Bm.c	  1469   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1470  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1471   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1472   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1473   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1474   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1475  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_PutDataAsPtr(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, PduR_MemIdxType memIdx)      /* COV_PDUR_IF_ONLY */
; ..\component\PduR\Implementation\PduR_Bm.c	  1476  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1477    info->SduDataPtr = PduR_GetAddrBmTxBufferArrayRam(PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx), memIdx);      /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1478    info->SduLength = (PduLengthType) PduR_Bm_GetLinearBufferSize(bmTxBufferRomIdx, memIdx);    /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1479    return PduR_Bm_PutData(bmTxBufferRomIdx, info->SduLength, info->SduDataPtr, memIdx);        /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1480  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1481  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1482  
; ..\component\PduR\Implementation\PduR_Bm.c	  1483  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1484  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1485   * PduR_Bm_ResetTxBuffer
; ..\component\PduR\Implementation\PduR_Bm.c	  1486   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1487  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1488   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1489   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1490   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1491   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1492   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1493   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1494   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1495   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1496   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1497   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1498   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1499  FUNC(void, PDUR_CODE) PduR_Bm_ResetTxBuffer(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1500  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1501    PduR_SetRxLengthOfBmTxBufferRam(bmTxBufferRomIdx, 0u, memIdx);   /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1502    PduR_SetAllocatedOfBmTxBufferRam(bmTxBufferRomIdx, FALSE, memIdx); /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1503    PduR_SetBmTxBufferArrayRamWriteIdxOfBmTxBufferRam(bmTxBufferRomIdx, (PduR_GetBmTxBufferArrayRamStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)), memIdx);     /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1504  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1505  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1506  
; ..\component\PduR\Implementation\PduR_Bm.c	  1507  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1508  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1509    PduR_Bm_ResetTxBufferInstance
; ..\component\PduR\Implementation\PduR_Bm.c	  1510  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1511  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1512   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1513   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1514   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1515    *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1516  FUNC(void, PDUR_CODE) PduR_Bm_ResetTxBufferInstance(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1517  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1518    PduR_SetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, PDUR_NO_BMTXBUFFERARRAYRAMREADIDXOFBMTXBUFFERINSTANCERAM, memIdx); /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */ /* PRQA S 2841 */ /* MD_PduR_2841 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1519  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1520  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1521  
; ..\component\PduR\Implementation\PduR_Bm.c	  1522  #if ((PDUR_BMTXBUFFERRAM == STD_ON) && (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_Bm.c	  1523  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1524   * PduR_Bm_GetTotalDataSize
; ..\component\PduR\Implementation\PduR_Bm.c	  1525   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1526  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1527   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1528   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1529   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1530   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1531  FUNC(PduR_BmTxBufferArrayRamIterType, PDUR_CODE) PduR_Bm_GetTotalDataSize(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx) /* PRQA S 1505 */ /* MD_PduR_1505 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1532  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1533    PduR_BmTxBufferArrayRamIterType retVal = 0u;  /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1534    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferRamType bmTxBufferArrayRamReadIdxOfBmTxBufferRam = PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1535  
; ..\component\PduR\Implementation\PduR_Bm.c	  1536    switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferRam(bmTxBufferRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1537    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1538      case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERRAM:        /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1539      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1540        retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamReadIdxOfBmTxBufferRam;
; ..\component\PduR\Implementation\PduR_Bm.c	  1541        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1542      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1543      case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERRAM: /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1544      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1545        retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_GetBmTxBufferArrayRamLengthOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)) - 
; ..\component\PduR\Implementation\PduR_Bm.c	  1546                 ((PduR_BmTxBufferArrayRamIterType) bmTxBufferArrayRamReadIdxOfBmTxBufferRam - PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx));
; ..\component\PduR\Implementation\PduR_Bm.c	  1547        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1548      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1549      case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1550      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1551        retVal = PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1552        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1553      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1554      case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1555      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1556        retVal = 0u;
; ..\component\PduR\Implementation\PduR_Bm.c	  1557        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1558      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1559      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	  1560        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1561    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1562    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1563  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1564  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1565  
; ..\component\PduR\Implementation\PduR_Bm.c	  1566  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1567  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1568   * PduR_Bm_GetLinearDataSizeInstance
; ..\component\PduR\Implementation\PduR_Bm.c	  1569   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1570  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1571   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1572   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1573   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1574   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1575  FUNC(PduR_BmTxBufferArrayRamIterType, PDUR_CODE) PduR_Bm_GetLinearDataSizeInstance(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx) /* PRQA S 1505 */ /* MD_PduR_1505 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1576  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1577    PduR_BmTxBufferArrayRamIterType retVal = 0u;  /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1578    PduR_BmTxBufferRomIterType bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1579    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1580  
; ..\component\PduR\Implementation\PduR_Bm.c	  1581    if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_Bm.c	  1582    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1583      switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, bmTxBufferArrayRamReadIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1584      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1585        case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1586        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1587          retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1588          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1589        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1590        case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1591        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1592          retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1593          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1594        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1595        case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1596        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1597          if ((PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx) + 1u) == bmTxBufferArrayRamReadIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1598          {/* first full condition */
; ..\component\PduR\Implementation\PduR_Bm.c	  1599            retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_GetBmTxBufferArrayRamEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1600          }
; ..\component\PduR\Implementation\PduR_Bm.c	  1601          else
; ..\component\PduR\Implementation\PduR_Bm.c	  1602          {/* second full condition */
; ..\component\PduR\Implementation\PduR_Bm.c	  1603            retVal = PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1604          }
; ..\component\PduR\Implementation\PduR_Bm.c	  1605          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1606        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1607        case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:     /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1608        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1609          retVal = 0u;
; ..\component\PduR\Implementation\PduR_Bm.c	  1610          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1611        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1612        default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	  1613          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1614      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1615    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1616    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1617  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1618  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1619  
; ..\component\PduR\Implementation\PduR_Bm.c	  1620  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1621  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1622   * PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked
; ..\component\PduR\Implementation\PduR_Bm.c	  1623   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1624  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1625   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1626   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1627   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1628   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1629  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	  1630                                                                                                                     PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType* bmTxBufferArrayRamReadIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	  1631                                                                                                                     PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1632  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1633    Std_ReturnType retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1634    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType readBmTxBufferArrayRamReadIdx = PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamSafe(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1635  
; ..\component\PduR\Implementation\PduR_Bm.c	  1636    if (readBmTxBufferArrayRamReadIdx == PDUR_NO_BMTXBUFFERARRAYRAMREADIDXOFBMTXBUFFERINSTANCERAM)
; ..\component\PduR\Implementation\PduR_Bm.c	  1637    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1638      retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1639    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1640    else
; ..\component\PduR\Implementation\PduR_Bm.c	  1641    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1642      *bmTxBufferArrayRamReadIdx = readBmTxBufferArrayRamReadIdx; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1643      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1644    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1645  
; ..\component\PduR\Implementation\PduR_Bm.c	  1646    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1647  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1648  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1649  
; ..\component\PduR\Implementation\PduR_Bm.c	  1650  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1651  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1652   * PduR_Bm_GetTotalBufferSize
; ..\component\PduR\Implementation\PduR_Bm.c	  1653   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1654  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1655   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1656   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1657   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1658   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1659  FUNC(PduR_BmTxBufferArrayRamIterType, PDUR_CODE) PduR_Bm_GetTotalBufferSize(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_MemIdxType memIdx)        /* PRQA S 1505 */ /* MD_PduR_1505 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1660  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1661    PduR_BmTxBufferArrayRamIterType retVal = 0u;  /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1662  
; ..\component\PduR\Implementation\PduR_Bm.c	  1663    switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferRam(bmTxBufferRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1664    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1665      case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1666      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1667        retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx)) - (((PduR_BmTxBufferArrayRamIterType) PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx)) - PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx));
; ..\component\PduR\Implementation\PduR_Bm.c	  1668        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1669      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1670      case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERRAM:        /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1671      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1672        retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferRam(bmTxBufferRomIdx, memIdx)) - (PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx) - ((PduR_BmTxBufferArrayRamIterType) 1u));
; ..\component\PduR\Implementation\PduR_Bm.c	  1673        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1674      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1675      case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERRAM:      /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1676      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1677        retVal = 0u;
; ..\component\PduR\Implementation\PduR_Bm.c	  1678        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1679      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1680      case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERRAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1681      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1682        retVal = PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1683        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1684      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1685      default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	  1686        break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1687    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1688    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1689  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1690  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1691  
; ..\component\PduR\Implementation\PduR_Bm.c	  1692  #if (PDUR_BMTXBUFFERRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1693  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1694   * PduR_Bm_GetTotalDataSizeInstance
; ..\component\PduR\Implementation\PduR_Bm.c	  1695   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1696  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1697   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1698   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1699   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1700   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1701  FUNC(PduR_BmTxBufferArrayRamIterType, PDUR_CODE) PduR_Bm_GetTotalDataSizeInstance(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx)  /* PRQA S 1505 */ /* MD_PduR_1505 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1702  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1703    PduR_BmTxBufferArrayRamIterType retVal = 0u;  /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1704    PduR_BmTxBufferRomIterType bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1705    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx = PduR_Bm_GetBmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamSafe(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1706  
; ..\component\PduR\Implementation\PduR_Bm.c	  1707    if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* COV_PDUR_ROBUSTNESS */ /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1708    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1709      switch (PduR_Bm_GetPduRBufferStateOfBmTxBufferInstanceRam(bmTxBufferInstanceRomIdx, bmTxBufferArrayRamReadIdx, memIdx))
; ..\component\PduR\Implementation\PduR_Bm.c	  1710      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1711        case PDUR_BUFFER_WRITE4READ_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:        /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1712        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1713          retVal = ((PduR_BmTxBufferArrayRamIterType) PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx)) - bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1714          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1715        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1716        case PDUR_BUFFER_READ4WRITE_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1717        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1718            retVal =
; ..\component\PduR\Implementation\PduR_Bm.c	  1719              ((PduR_BmTxBufferArrayRamIterType) PduR_GetBmTxBufferArrayRamLengthOfBmTxBufferRom(PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx), memIdx)) -
; ..\component\PduR\Implementation\PduR_Bm.c	  1720              (((PduR_BmTxBufferArrayRamIterType) bmTxBufferArrayRamReadIdx) - PduR_Bm_GetBmTxBufferArrayRamWriteIdxOfBmTxBufferRamSafe(bmTxBufferRomIdx, memIdx));
; ..\component\PduR\Implementation\PduR_Bm.c	  1721          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1722        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1723        case PDUR_BUFFER_FULL_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:
; ..\component\PduR\Implementation\PduR_Bm.c	  1724        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1725          retVal = PduR_Bm_GetLengthOfBmTxBuffer(PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx), memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1726          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1727        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1728        case PDUR_BUFFER_EMPTY_PDURBUFFERSTATEOFBMTXBUFFERINSTANCERAM:     /* COV_PDUR_BUFFER_CALCULATION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1729        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1730          retVal = 0u;
; ..\component\PduR\Implementation\PduR_Bm.c	  1731          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1732        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1733        default:   /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	  1734          break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1735      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1736    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1737    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1738  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1739  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1740  
; ..\component\PduR\Implementation\PduR_Bm.c	  1741  #if (PDUR_BMTXBUFFERRAM == STD_ON )
; ..\component\PduR\Implementation\PduR_Bm.c	  1742  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1743   * PduR_Bm_AllocateTxBuffer
; ..\component\PduR\Implementation\PduR_Bm.c	  1744   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1745  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1746   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1747   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1748   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1749   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1750   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1751   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1752   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1753   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1754  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_Bm_AllocateTxBuffer(PduR_FmFifoRomIterType fmFifoRomIdx,
; ..\component\PduR\Implementation\PduR_Bm.c	  1755                                                              PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_Bm.c	  1756                                                              PduLengthType optimalBufferSize,
; ..\component\PduR\Implementation\PduR_Bm.c	  1757                                                              PduLengthType minimumBufferSize,
; ..\component\PduR\Implementation\PduR_Bm.c	  1758                                                              P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr,
; ..\component\PduR\Implementation\PduR_Bm.c	  1759                                                              P2VAR(PduR_BmTxBufferRomIdxOfBmTxBufferIndRomType, AUTOMATIC, PDUR_APPL_DATA) allocatedTxBufferIdxPtr,
; ..\component\PduR\Implementation\PduR_Bm.c	  1760                                                              PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_Bm.c	  1761  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1762    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1763    /* Get the assigned FifoElement */
; ..\component\PduR\Implementation\PduR_Bm.c	  1764    PduR_BmTxBufferRomIdxOfBmTxBufferIndRomType lastSuitableBmTxBufferRomIdx = 0u; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_Bm.c	  1765    boolean lastSuitableBmTxBufferRomIdxFound = FALSE;
; ..\component\PduR\Implementation\PduR_Bm.c	  1766    PduR_BmTxBufferIndRomIterType bmTxBufferRomIndIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1767  
; ..\component\PduR\Implementation\PduR_Bm.c	  1768    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1769      PduR_BmTxBufferIndRomIterType bmTxBufferRomIndStartId = PduR_GetBmTxBufferIndRomStartIdxOfFmFifoRom(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1770      PduR_BmTxBufferIndRomIterType bmTxBufferRomIndEndIdx = PduR_GetBmTxBufferIndRomEndIdxOfFmFifoRom(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1771  
; ..\component\PduR\Implementation\PduR_Bm.c	  1772  # if (PDUR_SPINLOCKRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1773      PduR_Lock_LockBuffersByFmFifo(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1774  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1775      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1776        for(bmTxBufferRomIndIdx = bmTxBufferRomIndStartId; bmTxBufferRomIndIdx < bmTxBufferRomIndEndIdx; bmTxBufferRomIndIdx++) /* COV_PDUR_ONLY_SHARED_OR_DEDICATED_BUFFER */
; ..\component\PduR\Implementation\PduR_Bm.c	  1777        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1778          PduR_BmTxBufferRomIdxOfBmTxBufferIndRomType bmTxBufferRomIdx = PduR_GetBmTxBufferRomIdxOfBmTxBufferIndRom(bmTxBufferRomIndIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1779          /* Buffer available? */
; ..\component\PduR\Implementation\PduR_Bm.c	  1780          if(!PduR_IsAllocatedOfBmTxBufferRam(bmTxBufferRomIdx, memIdx)) /* COV_PDUR_ONLY_SHARED_OR_DEDICATED_BUFFER */
; ..\component\PduR\Implementation\PduR_Bm.c	  1781          {
; ..\component\PduR\Implementation\PduR_Bm.c	  1782            if(PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx) >= (PduR_BmTxBufferArrayRamIterType) optimalBufferSize) /* COV_PDUR_IF_SDU_LENGTH_HANDLING */
; ..\component\PduR\Implementation\PduR_Bm.c	  1783            {
; ..\component\PduR\Implementation\PduR_Bm.c	  1784              /* Initialize buffer and assign to FifoElement */
; ..\component\PduR\Implementation\PduR_Bm.c	  1785              PduR_SetAllocatedOfBmTxBufferRam(bmTxBufferRomIdx, TRUE, memIdx);     /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1786              PduR_SetRxLengthOfBmTxBufferRam(bmTxBufferRomIdx, pduLength, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1787              *allocatedTxBufferIdxPtr = bmTxBufferRomIdx; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1788              /* Assign amount of available buffer */
; ..\component\PduR\Implementation\PduR_Bm.c	  1789              *bufferSizePtr = (PduLengthType) PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1790              retVal = BUFREQ_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1791              break;
; ..\component\PduR\Implementation\PduR_Bm.c	  1792            }
; ..\component\PduR\Implementation\PduR_Bm.c	  1793            else if(PduR_Bm_GetLengthOfBmTxBuffer(bmTxBufferRomIdx, memIdx) >= (PduR_BmTxBufferArrayRamIterType) minimumBufferSize) /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_Bm.c	  1794            {
; ..\component\PduR\Implementation\PduR_Bm.c	  1795              /* This buffer is not large enough to hold the complete message but the buffer is available and could be used in case no other buffer is available. Reason: the buffer is large enough to hold at least one tpChunk. */
; ..\component\PduR\Implementation\PduR_Bm.c	  1796              lastSuitableBmTxBufferRomIdx = bmTxBufferRomIdx; /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1797              lastSuitableBmTxBufferRomIdxFound = TRUE;        /* PRQA S 2983 */ /* MD_PduR_2983 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1798            }
; ..\component\PduR\Implementation\PduR_Bm.c	  1799            else
; ..\component\PduR\Implementation\PduR_Bm.c	  1800            {
; ..\component\PduR\Implementation\PduR_Bm.c	  1801              /* nothing to be done */
; ..\component\PduR\Implementation\PduR_Bm.c	  1802            }
; ..\component\PduR\Implementation\PduR_Bm.c	  1803          }
; ..\component\PduR\Implementation\PduR_Bm.c	  1804        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1805        /* No suitable buffer found which is large enough to store the full TP PDU. Use ring buffer mechanism (routing-on-the-fly) instead. */
; ..\component\PduR\Implementation\PduR_Bm.c	  1806        if(retVal != BUFREQ_OK) /* COV_PDUR_IF_SDU_LENGTH_HANDLING */
; ..\component\PduR\Implementation\PduR_Bm.c	  1807        {
; ..\component\PduR\Implementation\PduR_Bm.c	  1808          /* The received TP PDU is larger than the largest available TP buffer element. The routing is executed using a ring buffer mechanism (routing on the fly) that allows a smaller receive buffer. */
; ..\component\PduR\Implementation\PduR_Bm.c	  1809          if(lastSuitableBmTxBufferRomIdxFound == TRUE) /* COV_PDUR_IF_SDU_LENGTH_HANDLING */
; ..\component\PduR\Implementation\PduR_Bm.c	  1810          {
; ..\component\PduR\Implementation\PduR_Bm.c	  1811            /* Routing is possible, but the gateway will use the ring-buffer mechanism to perform routing. Routing must not be 1:N routing. */
; ..\component\PduR\Implementation\PduR_Bm.c	  1812            /* Initialize buffer and assign to FifoElement */
; ..\component\PduR\Implementation\PduR_Bm.c	  1813            PduR_SetAllocatedOfBmTxBufferRam(lastSuitableBmTxBufferRomIdx, TRUE, memIdx);     /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1814            PduR_SetRxLengthOfBmTxBufferRam(lastSuitableBmTxBufferRomIdx, pduLength, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_Bm.c	  1815            *allocatedTxBufferIdxPtr = lastSuitableBmTxBufferRomIdx; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1816            /* Assign amount of available buffer */
; ..\component\PduR\Implementation\PduR_Bm.c	  1817            *bufferSizePtr = (PduLengthType) PduR_Bm_GetTotalBufferSize(lastSuitableBmTxBufferRomIdx, memIdx); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_Bm.c	  1818            retVal = BUFREQ_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1819          }
; ..\component\PduR\Implementation\PduR_Bm.c	  1820          else
; ..\component\PduR\Implementation\PduR_Bm.c	  1821          {
; ..\component\PduR\Implementation\PduR_Bm.c	  1822            /* Currently no buffer is available that would allow routing of a routing relation with the configured chunk size. 1:N routing relations can only be routed if a buffer of the I-PDU size is available. 1:1 routing relation can be routed principally but not at the current time. Prevented by validation! */
; ..\component\PduR\Implementation\PduR_Bm.c	  1823            retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_Bm.c	  1824          }
; ..\component\PduR\Implementation\PduR_Bm.c	  1825        }
; ..\component\PduR\Implementation\PduR_Bm.c	  1826      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1827  # if (PDUR_SPINLOCKRAM == STD_ON)
; ..\component\PduR\Implementation\PduR_Bm.c	  1828      PduR_Lock_UnlockBuffersByFmFifo(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1829  # endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1830    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1831    return retVal;
; ..\component\PduR\Implementation\PduR_Bm.c	  1832  }       /* PRQA S 6060, 6080 */ /* MD_MSR_STPAR, MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_Bm.c	  1833  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1834  
; ..\component\PduR\Implementation\PduR_Bm.c	  1835  #if (PDUR_BMTXBUFFERRAM == STD_ON )
; ..\component\PduR\Implementation\PduR_Bm.c	  1836  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1837   * PduR_Bm_CopyDataAsPtr
; ..\component\PduR\Implementation\PduR_Bm.c	  1838   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1839  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1840   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1841   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1842   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1843   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1844  FUNC(void, PDUR_CODE) PduR_Bm_CopyDataAsPtr(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, PduR_BmTxBufferArrayRamIterType length, PduR_MemIdxType memIdx)    /* COV_PDUR_ONLY_TT_SINGLE_BUFFER */
; ..\component\PduR\Implementation\PduR_Bm.c	  1845  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1846    PduR_BmTxBufferArrayRamIterType bmLinearDataSizeInstance;
; ..\component\PduR\Implementation\PduR_Bm.c	  1847    PduR_BmTxBufferArrayRamReadIdxOfBmTxBufferInstanceRamType bmTxBufferArrayRamReadIdx;
; ..\component\PduR\Implementation\PduR_Bm.c	  1848  
; ..\component\PduR\Implementation\PduR_Bm.c	  1849    if(PduR_Bm_GetBmTxBufferArrayRamReadIdxByBmTxBufferInstanceRomIdxChecked(bmTxBufferInstanceRomIdx, &bmTxBufferArrayRamReadIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_Bm.c	  1850    {
; ..\component\PduR\Implementation\PduR_Bm.c	  1851      info->SduDataPtr = PduR_GetAddrBmTxBufferArrayRam(bmTxBufferArrayRamReadIdx, memIdx);        /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1852      bmLinearDataSizeInstance = PduR_Bm_GetLinearDataSizeInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1853  
; ..\component\PduR\Implementation\PduR_Bm.c	  1854      if(length > bmLinearDataSizeInstance)      /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_Bm.c	  1855      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1856        info->SduLength = (PduLengthType) bmLinearDataSizeInstance;      /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1857      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1858      else
; ..\component\PduR\Implementation\PduR_Bm.c	  1859      {
; ..\component\PduR\Implementation\PduR_Bm.c	  1860        info->SduLength = (PduLengthType) length;   /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_Bm.c	  1861      }
; ..\component\PduR\Implementation\PduR_Bm.c	  1862    }
; ..\component\PduR\Implementation\PduR_Bm.c	  1863  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1864  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1865  
; ..\component\PduR\Implementation\PduR_Bm.c	  1866  #if (PDUR_BMTXBUFFERRAM == STD_ON )
; ..\component\PduR\Implementation\PduR_Bm.c	  1867  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1868   * PduR_Bm_GetActualPduLengthToBeRouted
; ..\component\PduR\Implementation\PduR_Bm.c	  1869   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1870  /*!
; ..\component\PduR\Implementation\PduR_Bm.c	  1871   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_Bm.c	  1872   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1873   *
; ..\component\PduR\Implementation\PduR_Bm.c	  1874   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1875  FUNC(PduLengthType, PDUR_CODE) PduR_Bm_GetActualPduLengthToBeRouted(PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx, PduR_MemIdxType memIdx)     /* COV_PDUR_IF_ONLY */
; ..\component\PduR\Implementation\PduR_Bm.c	  1876  {
; ..\component\PduR\Implementation\PduR_Bm.c	  1877    return PduR_GetRxLengthOfBmTxBufferRam(PduR_GetBmTxBufferRomIdxOfBmTxBufferInstanceRom(bmTxBufferInstanceRomIdx, memIdx), memIdx);
; ..\component\PduR\Implementation\PduR_Bm.c	  1878  }
; ..\component\PduR\Implementation\PduR_Bm.c	  1879  
; ..\component\PduR\Implementation\PduR_Bm.c	  1880  #endif
; ..\component\PduR\Implementation\PduR_Bm.c	  1881  
; ..\component\PduR\Implementation\PduR_Bm.c	  1882  #define PDUR_STOP_SEC_CODE
; ..\component\PduR\Implementation\PduR_Bm.c	  1883  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_Bm.c	  1884  
; ..\component\PduR\Implementation\PduR_Bm.c	  1885  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1886   * GLOBAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR_Bm.c	  1887   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_Bm.c	  1888  /* *INDENT-OFF* */
; ..\component\PduR\Implementation\PduR_Bm.c	  1889  
; ..\component\PduR\Implementation\PduR_Bm.c	  1890  /* module specific MISRA deviations:
; ..\component\PduR\Implementation\PduR_Bm.c	  1891       MD_PduR_2841: Dereference of an invalid pointer value.
; ..\component\PduR\Implementation\PduR_Bm.c	  1892       Reason:       QAC cannot determine whether the pointer value is correct. The callers of this function guarantee, that the index is always in bound.
; ..\component\PduR\Implementation\PduR_Bm.c	  1893       Risk:         No risk.
; ..\component\PduR\Implementation\PduR_Bm.c	  1894       Prevention:   No prevention necessary.
; ..\component\PduR\Implementation\PduR_Bm.c	  1895  */
; ..\component\PduR\Implementation\PduR_Bm.c	  1896  
; ..\component\PduR\Implementation\PduR_Bm.c	  1897  /* *INDENT-ON* */
; ..\component\PduR\Implementation\PduR_Bm.c	  1898  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_Bm.c	  1899   *  END OF FILE: PduR_Bm.c
; ..\component\PduR\Implementation\PduR_Bm.c	  1900   *********************************************************************************************************************/

	; Module end
