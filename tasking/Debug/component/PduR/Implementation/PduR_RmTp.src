	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\PduR\\Implementation\\.PduR_RmTp.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\PduR\\Implementation\\PduR_RmTp.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\PduR\\Implementation\\PduR_RmTp.src ..\\component\\PduR\\Implementation\\PduR_RmTp.c"
	.compiler_name		"ctc"
	;source	'..\\component\\PduR\\Implementation\\PduR_RmTp.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	28225
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmTp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'int',0,4,5,3
	.word	138
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	145
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	187
	.byte	7
	.word	187
	.byte	8
	.byte	'__cmpswapw',0
	.word	203
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	208
	.byte	9
	.byte	'value',0
	.word	187
	.byte	9
	.byte	'compare',0
	.word	187
	.byte	0,10,1,7
	.word	265
	.byte	11
	.byte	'__codeptr',0,1,1,1
	.word	267
	.byte	2
	.byte	'unsigned char',0,1,8,11
	.byte	'boolean',0,2,101,31
	.word	290
	.byte	11
	.byte	'uint8',0,2,104,31
	.word	290
	.byte	2
	.byte	'short int',0,2,5,11
	.byte	'sint16',0,2,105,31
	.word	337
	.byte	2
	.byte	'unsigned short int',0,2,7,11
	.byte	'uint16',0,2,106,31
	.word	365
	.byte	2
	.byte	'long int',0,4,5,11
	.byte	'sint32',0,2,107,31
	.word	402
	.byte	2
	.byte	'unsigned long int',0,4,7,11
	.byte	'uint32',0,2,108,31
	.word	429
	.byte	11
	.byte	'uint8_least',0,2,111,31
	.word	290
	.byte	11
	.byte	'uint32_least',0,2,115,31
	.word	429
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,2,121,30
	.word	506
	.byte	11
	.byte	'StatusType',0,3,127,23
	.word	290
	.byte	11
	.byte	'Std_ReturnType',0,3,132,1,15
	.word	290
	.byte	12,3,134,1,9,8,13
	.byte	'vendorID',0
	.word	365
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	365
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	290
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	290
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	290
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,3,141,1,3
	.word	590
	.byte	11
	.byte	'PduIdType',0,4,63,15
	.word	290
	.byte	11
	.byte	'PduLengthType',0,4,65,15
	.word	290
	.byte	7
	.word	290
	.byte	11
	.byte	'SduDataPtrType',0,5,196,1,54
	.word	780
	.byte	12,5,197,1,9,8,13
	.byte	'SduDataPtr',0
	.word	785
	.byte	4,2,35,0,13
	.byte	'SduLength',0
	.word	290
	.byte	1,2,35,4,0,11
	.byte	'PduInfoType',0,5,201,1,3
	.word	809
	.byte	7
	.word	290
	.byte	14,5,203,1,9,1,15
	.byte	'BUFREQ_OK',0,0,15
	.byte	'BUFREQ_E_NOT_OK',0,1,15
	.byte	'BUFREQ_E_BUSY',0,2,15
	.byte	'BUFREQ_E_OVFL',0,3,0,11
	.byte	'BufReq_ReturnType',0,5,209,1,3
	.word	881
	.byte	14,5,219,1,9,1,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,5,226,1,3
	.word	977
	.byte	16
	.byte	'sDet_PCConfigType',0,6,238,1,16,1,13
	.byte	'Det_PCConfigNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'Det_PCConfigType',0,6,241,1,3
	.word	1055
	.byte	14,7,147,1,9,1,15
	.byte	'Default_Init_Task',0,0,15
	.byte	'Default_Init_Task_Trusted',0,1,15
	.byte	'IdleTask_OsCore0',0,2,15
	.byte	'bsw_task',0,3,15
	.byte	'swc_init',0,4,15
	.byte	'swc_task',0,5,15
	.byte	'INVALID_TASK',0,6,15
	.byte	'OS_TASKID_COUNT',0,6,0,11
	.byte	'TaskType',0,7,157,1,3
	.word	1137
	.byte	11
	.byte	'Os_Hal_AddressType',0,8,61,16
	.word	429
	.byte	17,64
	.word	429
	.byte	18,15,0,16
	.byte	'Os_ExceptionContextType_Tag',0,9,71,8,160,1,13
	.byte	'AddressRegisters',0
	.word	1322
	.byte	64,2,35,0,13
	.byte	'DataRegisters',0
	.word	1322
	.byte	64,2,35,64,13
	.byte	'Ra',0
	.word	429
	.byte	4,3,35,128,1,13
	.byte	'Psw',0
	.word	429
	.byte	4,3,35,132,1,13
	.byte	'ExceptionSource',0
	.word	429
	.byte	4,3,35,136,1,13
	.byte	'Pcpn',0
	.word	429
	.byte	4,3,35,140,1,13
	.byte	'Pie',0
	.word	429
	.byte	4,3,35,144,1,13
	.byte	'MpuRegionForStackLow',0
	.word	429
	.byte	4,3,35,148,1,13
	.byte	'MpuRegionForStackUpper',0
	.word	429
	.byte	4,3,35,152,1,13
	.byte	'RawPCXI',0
	.word	429
	.byte	4,3,35,156,1,0,11
	.byte	'Os_ExceptionContextType',0,8,66,44
	.word	1331
	.byte	11
	.byte	'Os_InterruptSourceIdType',0,10,238,1,16
	.word	429
	.byte	11
	.byte	'Os_ExceptionSourceIdType',0,10,246,1,16
	.word	429
	.byte	14,10,161,2,9,1,15
	.byte	'RUNNING',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'SUSPENDED',0,3,0,11
	.byte	'TaskStateType',0,10,175,2,3
	.word	1679
	.byte	11
	.byte	'EventMaskType',0,10,182,2,16
	.word	506
	.byte	11
	.byte	'Os_TickType',0,10,200,2,19
	.word	429
	.byte	11
	.byte	'TickType',0,10,206,2,21
	.word	429
	.byte	12,10,220,2,9,12,13
	.byte	'maxallowedvalue',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	429
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	429
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,228,2,2
	.word	1811
	.byte	14,10,128,3,9,1,15
	.byte	'APPLICATION_TERMINATED',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,11
	.byte	'ApplicationStateType',0,10,133,3,3
	.word	1906
	.byte	14,10,177,3,9,1,15
	.byte	'OSServiceId_GetApplicationID',0,0,15
	.byte	'OSServiceId_GetISRID',0,1,15
	.byte	'OSServiceId_CallTrustedFunction',0,2,15
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,15
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,15
	.byte	'OSServiceId_CheckObjectAccess',0,5,15
	.byte	'OSServiceId_CheckObjectOwnership',0,6,15
	.byte	'OSServiceId_StartScheduleTableRel',0,7,15
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,15
	.byte	'OSServiceId_StopScheduleTable',0,9,15
	.byte	'OSServiceId_NextScheduleTable',0,10,15
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,15
	.byte	'OSServiceId_SyncScheduleTable',0,12,15
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,15
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,15
	.byte	'OSServiceId_IncrementCounter',0,15,15
	.byte	'OSServiceId_GetCounterValue',0,16,15
	.byte	'OSServiceId_GetElapsedValue',0,17,15
	.byte	'OSServiceId_TerminateApplication',0,18,15
	.byte	'OSServiceId_AllowAccess',0,19,15
	.byte	'OSServiceId_GetApplicationState',0,20,15
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,15
	.byte	'OSServiceId_GetCoreID',0,22,15
	.byte	'OSServiceId_StartCore',0,23,15
	.byte	'OSServiceId_StartNonAutosarCore',0,24,15
	.byte	'OSServiceId_GetSpinlock',0,25,15
	.byte	'OSServiceId_ReleaseSpinlock',0,26,15
	.byte	'OSServiceId_TryToGetSpinlock',0,27,15
	.byte	'OSServiceId_ShutdownAllCores',0,28,15
	.byte	'OSServiceId_ControlIdle',0,29,15
	.byte	'OSServiceId_IocSend',0,30,15
	.byte	'OSServiceId_IocWrite',0,31,15
	.byte	'OSServiceId_IocSendGroup',0,32,15
	.byte	'OSServiceId_IocWriteGroup',0,33,15
	.byte	'OSServiceId_IocReceive',0,34,15
	.byte	'OSServiceId_IocRead',0,35,15
	.byte	'OSServiceId_IocReceiveGroup',0,36,15
	.byte	'OSServiceId_IocReadGroup',0,37,15
	.byte	'OSServiceId_IocEmptyQueue',0,38,15
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,15
	.byte	'OSServiceId_GetExceptionContext',0,160,1,15
	.byte	'OSServiceId_SetExceptionContext',0,161,1,15
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,15
	.byte	'OSServiceId_AppKill',0,163,1,15
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,15
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,15
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,15
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,15
	.byte	'OSServiceId_TimerIsr',0,168,1,15
	.byte	'OSServiceId_IsrWrapper',0,169,1,15
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,15
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,15
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,15
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,15
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,15
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,15
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,15
	.byte	'OSServiceId_GetSemaphore',0,177,1,15
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,15
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,15
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,15
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,15
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,15
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,15
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,15
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,15
	.byte	'OSServiceId_HookCallCallback',0,186,1,15
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,15
	.byte	'OSServiceId_IsInterruptPending',0,188,1,15
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,15
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,15
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,15
	.byte	'OSServiceId_GetCoreStartState',0,192,1,15
	.byte	'OSServiceId_StartOS',0,208,1,15
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,15
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,15
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,15
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,15
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,15
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,15
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,15
	.byte	'OSServiceId_ActivateTask',0,217,1,15
	.byte	'OSServiceId_TerminateTask',0,218,1,15
	.byte	'OSServiceId_ChainTask',0,219,1,15
	.byte	'OSServiceId_GetTaskID',0,220,1,15
	.byte	'OSServiceId_GetTaskState',0,221,1,15
	.byte	'OSServiceId_Schedule',0,222,1,15
	.byte	'OSServiceId_SetEvent',0,223,1,15
	.byte	'OSServiceId_ClearEvent',0,224,1,15
	.byte	'OSServiceId_GetEvent',0,225,1,15
	.byte	'OSServiceId_WaitEvent',0,226,1,15
	.byte	'OSServiceId_GetAlarmBase',0,227,1,15
	.byte	'OSServiceId_GetAlarm',0,228,1,15
	.byte	'OSServiceId_SetRelAlarm',0,229,1,15
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,15
	.byte	'OSServiceId_CancelAlarm',0,231,1,15
	.byte	'OSServiceId_GetResource',0,232,1,15
	.byte	'OSServiceId_ReleaseResource',0,233,1,15
	.byte	'OSSERVICEID_COUNT',0,255,1,0,11
	.byte	'OSServiceIdType',0,10,156,4,3
	.word	2018
	.byte	14,10,172,4,9,2,15
	.byte	'OS_STATUS_OK',0,0,15
	.byte	'OS_STATUS_CALLEVEL',0,2,15
	.byte	'OS_STATUS_LIMIT',0,4,15
	.byte	'OS_STATUS_RESOURCE',0,6,15
	.byte	'OS_STATUS_SERVICEID',0,9,15
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,15
	.byte	'OS_STATUS_MISSINGEND',0,11,15
	.byte	'OS_STATUS_DISABLEDINT',0,12,15
	.byte	'OS_STATUS_STACKFAULT',0,13,15
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,15
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,15
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,15
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,15
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,15
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,15
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,15
	.byte	'OS_STATUS_SPINLOCK',0,21,15
	.byte	'OS_STATUS_CORE',0,22,15
	.byte	'OS_STATUS_OVERFLOW',0,245,1,15
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,15
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,15
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,15
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,15
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,15
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,15
	.byte	'OS_STATUS_API_ERROR',0,252,1,15
	.byte	'OS_STATUS_ASSERTION',0,253,1,15
	.byte	'OS_STATUS_OVERLOAD',0,254,1,15
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,15
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,15
	.byte	'OS_STATUS_ID_1',0,131,2,15
	.byte	'OS_STATUS_UNLOCKED',0,133,2,15
	.byte	'OS_STATUS_STATE_1',0,135,2,15
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,15
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,15
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,15
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,15
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,15
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,15
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,15
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,15
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,15
	.byte	'OS_STATUS_ID_2',0,131,4,15
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,15
	.byte	'OS_STATUS_STATE_2',0,135,4,15
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,15
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,15
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,15
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,15
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,15
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,15
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,15
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,15
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,15
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,15
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,15
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,15
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,15
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,15
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,15
	.byte	'OS_STATUS_STOPPED_1',0,133,10,15
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,15
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,15
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,15
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,15
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,15
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,15
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,15
	.byte	'OS_STATUS_NEXTED_1',0,133,14,15
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,15
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,15
	.byte	'OS_STATUS_LOCKED',0,129,16,15
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,15
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,15
	.byte	'OS_STATUS_PRIORITY',0,129,18,15
	.byte	'OS_STATUS_ORDER',0,133,18,15
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,15
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,15
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,15
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,15
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,11
	.byte	'Os_StatusType',0,10,232,5,3
	.word	5188
	.byte	12,10,133,6,9,4,13
	.byte	'Service',0
	.word	2018
	.byte	1,2,35,0,13
	.byte	'Error',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'DetailedError',0
	.word	5188
	.byte	2,2,35,2,0,11
	.byte	'Os_ErrorInformationType',0,10,143,6,3
	.word	7718
	.byte	14,10,175,6,9,1,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,192,6,3
	.word	7813
	.byte	11
	.byte	'Os_AccessCheckAddress',0,10,199,6,29
	.word	429
	.byte	14,10,211,6,9,1,15
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,15
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,15
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,15
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,15
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,15
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,15
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,15
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,15
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,15
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,15
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,15
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,15
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,15
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,15
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,15
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,15
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,15
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,15
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,15
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,11
	.byte	'Os_MemAccessType',0,10,233,6,3
	.word	8017
	.byte	11
	.byte	'Can_IdType',0,11,52,30
	.word	365
	.byte	11
	.byte	'Can_HwHandleType',0,11,55,29
	.word	290
	.byte	11
	.byte	'Can_SduPtrType',0,11,58,45
	.word	780
	.byte	16
	.byte	'Can_PduTypeTag',0,11,61,16,12,13
	.byte	'id',0
	.word	365
	.byte	2,2,35,0,13
	.byte	'length',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'sdu',0
	.word	8590
	.byte	4,2,35,4,13
	.byte	'swPduHandle',0
	.word	290
	.byte	1,2,35,8,0,11
	.byte	'Can_PduType',0,11,67,3
	.word	8613
	.byte	7
	.word	290
	.byte	14,11,77,9,1,15
	.byte	'CAN_CS_UNINIT',0,0,15
	.byte	'CAN_CS_STARTED',0,1,15
	.byte	'CAN_CS_STOPPED',0,2,15
	.byte	'CAN_CS_SLEEP',0,3,0,11
	.byte	'Can_ControllerStateType',0,11,82,3
	.word	8721
	.byte	14,11,84,9,1,15
	.byte	'CAN_ERRORSTATE_ACTIVE',0,0,15
	.byte	'CAN_ERRORSTATE_PASSIVE',0,1,15
	.byte	'CAN_ERRORSTATE_BUSOFF',0,2,0,11
	.byte	'Can_ErrorStateType',0,11,88,3
	.word	8824
	.byte	11
	.byte	'tCanLLCanIntOld',0,12,161,3,37
	.word	429
	.byte	11
	.byte	'Can_OsIsrType',0,12,167,3,15
	.word	290
	.byte	11
	.byte	'Can_ExternalTickType',0,12,180,3,16
	.word	429
	.byte	17,32
	.word	429
	.byte	18,7,0,11
	.byte	'Can_LoopTimeout_dim_type',0,12,183,3,44
	.word	9008
	.byte	11
	.byte	'Can_ControllerConfigIterType',0,12,192,13,21
	.word	290
	.byte	11
	.byte	'Can_PduOfActiveSendObjectType',0,12,148,14,19
	.word	290
	.byte	11
	.byte	'Can_StateOfActiveSendObjectType',0,12,151,14,16
	.word	365
	.byte	11
	.byte	'Can_BTPType',0,12,154,14,16
	.word	429
	.byte	11
	.byte	'Can_RXBCOfBufferConfigType',0,12,160,14,15
	.word	290
	.byte	11
	.byte	'Can_RXF0COfBufferConfigType',0,12,163,14,16
	.word	429
	.byte	11
	.byte	'Can_RXF1COfBufferConfigType',0,12,166,14,15
	.word	290
	.byte	11
	.byte	'Can_TXBCOfBufferConfigType',0,12,169,14,16
	.word	429
	.byte	11
	.byte	'Can_TXEFCOfBufferConfigType',0,12,172,14,15
	.word	290
	.byte	11
	.byte	'Can_CanIfChannelIdType',0,12,190,14,15
	.word	290
	.byte	11
	.byte	'Can_CanSubSystemBaseAdrType',0,12,193,14,16
	.word	429
	.byte	11
	.byte	'Can_BasisAdrOfControllerConfigType',0,12,196,14,16
	.word	429
	.byte	11
	.byte	'Can_CanControllerDefaultBaudrateIdxOfControllerConfigType',0,12,199,14,15
	.word	290
	.byte	11
	.byte	'Can_CanControllerDefaultBaudrateOfControllerConfigType',0,12,202,14,16
	.word	365
	.byte	11
	.byte	'Can_IsTTCanOfControllerConfigType',0,12,205,14,17
	.word	290
	.byte	11
	.byte	'Can_MailboxRxBasicEndIdxOfControllerConfigType',0,12,208,14,15
	.word	290
	.byte	11
	.byte	'Can_MailboxRxBasicLengthOfControllerConfigType',0,12,211,14,15
	.word	290
	.byte	11
	.byte	'Can_MailboxRxBasicStartIdxOfControllerConfigType',0,12,214,14,15
	.word	290
	.byte	11
	.byte	'Can_MailboxTxBasicEndIdxOfControllerConfigType',0,12,220,14,15
	.word	290
	.byte	11
	.byte	'Can_MailboxTxBasicLengthOfControllerConfigType',0,12,223,14,15
	.word	290
	.byte	11
	.byte	'Can_MailboxTxBasicStartIdxOfControllerConfigType',0,12,226,14,15
	.word	290
	.byte	11
	.byte	'Can_RxBasicHwStartOfControllerConfigType',0,12,232,14,15
	.word	290
	.byte	11
	.byte	'Can_RxBasicHwStopOfControllerConfigType',0,12,235,14,15
	.word	290
	.byte	11
	.byte	'Can_RxFullHwStartOfControllerConfigType',0,12,238,14,15
	.word	290
	.byte	11
	.byte	'Can_RxFullHwStopOfControllerConfigType',0,12,241,14,15
	.word	290
	.byte	11
	.byte	'Can_RxSelectionOfControllerConfigType',0,12,244,14,15
	.word	290
	.byte	11
	.byte	'Can_TxBasicHwStartOfControllerConfigType',0,12,247,14,15
	.word	290
	.byte	11
	.byte	'Can_TxBasicHwStopOfControllerConfigType',0,12,250,14,15
	.word	290
	.byte	11
	.byte	'Can_TxFullHwStartOfControllerConfigType',0,12,253,14,15
	.word	290
	.byte	11
	.byte	'Can_TxFullHwStopOfControllerConfigType',0,12,128,15,15
	.word	290
	.byte	11
	.byte	'Can_UnusedHwStartOfControllerConfigType',0,12,131,15,15
	.word	290
	.byte	11
	.byte	'Can_UnusedHwStopOfControllerConfigType',0,12,134,15,15
	.word	290
	.byte	11
	.byte	'Can_BusOffNotificationOfControllerDataType',0,12,137,15,15
	.word	290
	.byte	11
	.byte	'Can_BusOffTransitionRequestOfControllerDataType',0,12,140,15,15
	.word	290
	.byte	11
	.byte	'Can_CanInterruptCounterOfControllerDataType',0,12,143,15,15
	.word	290
	.byte	11
	.byte	'Can_IntEnableOfControllerDataType',0,12,146,15,16
	.word	429
	.byte	11
	.byte	'Can_IsBusOffOfControllerDataType',0,12,149,15,17
	.word	290
	.byte	11
	.byte	'Can_LastInitObjectOfControllerDataType',0,12,152,15,15
	.word	290
	.byte	11
	.byte	'Can_LastStateOfControllerDataType',0,12,155,15,15
	.word	290
	.byte	11
	.byte	'Can_LogStatusOfControllerDataType',0,12,158,15,15
	.word	290
	.byte	11
	.byte	'Can_ModeTransitionRequestOfControllerDataType',0,12,161,15,15
	.word	290
	.byte	11
	.byte	'Can_NonFdObjectsPendingFlagOfControllerDataType',0,12,164,15,16
	.word	429
	.byte	11
	.byte	'Can_PrevModeOfControllerDataType',0,12,167,15,15
	.word	290
	.byte	11
	.byte	'Can_RamCheckTransitionRequestOfControllerDataType',0,12,170,15,15
	.word	290
	.byte	11
	.byte	'Can_TXBCROfControllerDataType',0,12,173,15,16
	.word	429
	.byte	11
	.byte	'Can_TXBRPOfControllerDataType',0,12,176,15,16
	.word	429
	.byte	11
	.byte	'Can_FBTPType',0,12,179,15,16
	.word	429
	.byte	11
	.byte	'Can_GFCType',0,12,182,15,15
	.word	290
	.byte	11
	.byte	'Can_INT_PriorityType',0,12,185,15,15
	.word	290
	.byte	11
	.byte	'Can_INT_RoutingGroupType',0,12,188,15,15
	.word	290
	.byte	11
	.byte	'Can_InitObjectBaudrateType',0,12,191,15,16
	.word	365
	.byte	11
	.byte	'Can_InitObjectFdBrsConfigType',0,12,194,15,15
	.word	290
	.byte	11
	.byte	'Can_InitObjectStartIndexType',0,12,197,15,15
	.word	290
	.byte	11
	.byte	'Can_ActiveSendObjectOfMailboxType',0,12,200,15,15
	.word	290
	.byte	11
	.byte	'Can_ControllerConfigIdxOfMailboxType',0,12,203,15,15
	.word	290
	.byte	11
	.byte	'Can_FdPaddingOfMailboxType',0,12,206,15,15
	.word	290
	.byte	11
	.byte	'Can_HwHandleOfMailboxType',0,12,209,15,15
	.word	290
	.byte	11
	.byte	'Can_IDValueOfMailboxType',0,12,212,15,15
	.word	290
	.byte	11
	.byte	'Can_MailboxSizeOfMailboxType',0,12,215,15,15
	.word	290
	.byte	11
	.byte	'Can_MailboxTypeOfMailboxType',0,12,218,15,15
	.word	290
	.byte	11
	.byte	'Can_MaxDataLenOfMailboxType',0,12,221,15,15
	.word	290
	.byte	11
	.byte	'Can_MemorySectionsIndexOfMailboxType',0,12,224,15,15
	.word	290
	.byte	11
	.byte	'Can_MemorySectionStartOfMemorySectionInfoType',0,12,227,15,15
	.word	290
	.byte	11
	.byte	'Can_HwHandleOfMemorySectionObjectsType',0,12,230,15,15
	.word	290
	.byte	11
	.byte	'Can_MailboxElementOfMemorySectionObjectsType',0,12,233,15,15
	.word	290
	.byte	11
	.byte	'Can_MailboxHandleOfMemorySectionObjectsType',0,12,236,15,15
	.word	290
	.byte	11
	.byte	'Can_FLSSAOfSIDFCType',0,12,242,15,15
	.word	290
	.byte	11
	.byte	'Can_LSSOfSIDFCType',0,12,245,15,15
	.word	290
	.byte	11
	.byte	'Can_SIDFEEndIdxOfSIDFCType',0,12,248,15,15
	.word	290
	.byte	11
	.byte	'Can_SIDFEStartIdxOfSIDFCType',0,12,251,15,15
	.word	290
	.byte	11
	.byte	'Can_SIDFEType',0,12,129,16,16
	.word	429
	.byte	11
	.byte	'Can_SRN_AddressType',0,12,132,16,16
	.word	429
	.byte	11
	.byte	'Can_RXBAOfShmAdrType',0,12,135,16,16
	.word	429
	.byte	11
	.byte	'Can_RXF0AOfShmAdrType',0,12,138,16,16
	.word	429
	.byte	11
	.byte	'Can_RXF1AOfShmAdrType',0,12,141,16,16
	.word	429
	.byte	11
	.byte	'Can_SIDFAOfShmAdrType',0,12,144,16,16
	.word	429
	.byte	11
	.byte	'Can_StartAdrOfShmAdrType',0,12,147,16,16
	.word	429
	.byte	11
	.byte	'Can_StopAdrOfShmAdrType',0,12,150,16,16
	.word	429
	.byte	11
	.byte	'Can_TXBAOfShmAdrType',0,12,153,16,16
	.word	429
	.byte	11
	.byte	'Can_TXEFAOfShmAdrType',0,12,156,16,16
	.word	429
	.byte	11
	.byte	'Can_XIDFAOfShmAdrType',0,12,159,16,16
	.word	429
	.byte	11
	.byte	'Can_F0DSOfShmElementSizeType',0,12,162,16,15
	.word	290
	.byte	11
	.byte	'Can_F1DSOfShmElementSizeType',0,12,165,16,15
	.word	290
	.byte	11
	.byte	'Can_RBDSOfShmElementSizeType',0,12,168,16,15
	.word	290
	.byte	11
	.byte	'Can_TBDSOfShmElementSizeType',0,12,171,16,15
	.word	290
	.byte	11
	.byte	'Can_TEFBDSOfShmElementSizeType',0,12,174,16,15
	.word	290
	.byte	11
	.byte	'Can_TDCRType',0,12,130,17,15
	.word	290
	.byte	11
	.byte	'Can_XIDAMType',0,12,133,17,16
	.word	429
	.byte	11
	.byte	'Can_FLESAOfXIDFCType',0,12,136,17,15
	.word	290
	.byte	11
	.byte	'Can_LSEOfXIDFCType',0,12,139,17,15
	.word	290
	.byte	11
	.byte	'Can_EIDFE_0OfXIDFEType',0,12,142,17,15
	.word	290
	.byte	11
	.byte	'Can_EIDFE_1OfXIDFEType',0,12,145,17,15
	.word	290
	.byte	16
	.byte	'sCan_ActiveSendObjectType',0,12,161,17,16,4,13
	.byte	'StateOfActiveSendObject',0
	.word	365
	.byte	2,2,35,0,13
	.byte	'PduOfActiveSendObject',0
	.word	290
	.byte	1,2,35,2,0,11
	.byte	'Can_ActiveSendObjectType',0,12,165,17,3
	.word	12816
	.byte	16
	.byte	'sCan_BufferConfigType',0,12,168,17,16,12,13
	.byte	'RXF0COfBufferConfig',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'TXBCOfBufferConfig',0
	.word	429
	.byte	4,2,35,4,13
	.byte	'RXBCOfBufferConfig',0
	.word	290
	.byte	1,2,35,8,13
	.byte	'RXF1COfBufferConfig',0
	.word	290
	.byte	1,2,35,9,13
	.byte	'TXEFCOfBufferConfig',0
	.word	290
	.byte	1,2,35,10,0,11
	.byte	'Can_BufferConfigType',0,12,175,17,3
	.word	12947
	.byte	16
	.byte	'sCan_ControllerConfigType',0,12,178,17,16,28,13
	.byte	'BasisAdrOfControllerConfig',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'CanControllerDefaultBaudrateOfControllerConfig',0
	.word	365
	.byte	2,2,35,4,13
	.byte	'IsTTCanOfControllerConfig',0
	.word	290
	.byte	1,2,35,6,13
	.byte	'CanControllerDefaultBaudrateIdxOfControllerConfig',0
	.word	290
	.byte	1,2,35,7,13
	.byte	'MailboxRxBasicEndIdxOfControllerConfig',0
	.word	290
	.byte	1,2,35,8,13
	.byte	'MailboxRxBasicLengthOfControllerConfig',0
	.word	290
	.byte	1,2,35,9,13
	.byte	'MailboxRxBasicStartIdxOfControllerConfig',0
	.word	290
	.byte	1,2,35,10,13
	.byte	'MailboxTxBasicEndIdxOfControllerConfig',0
	.word	290
	.byte	1,2,35,11,13
	.byte	'MailboxTxBasicLengthOfControllerConfig',0
	.word	290
	.byte	1,2,35,12,13
	.byte	'MailboxTxBasicStartIdxOfControllerConfig',0
	.word	290
	.byte	1,2,35,13,13
	.byte	'RxBasicHwStartOfControllerConfig',0
	.word	290
	.byte	1,2,35,14,13
	.byte	'RxBasicHwStopOfControllerConfig',0
	.word	290
	.byte	1,2,35,15,13
	.byte	'RxFullHwStartOfControllerConfig',0
	.word	290
	.byte	1,2,35,16,13
	.byte	'RxFullHwStopOfControllerConfig',0
	.word	290
	.byte	1,2,35,17,13
	.byte	'RxSelectionOfControllerConfig',0
	.word	290
	.byte	1,2,35,18,13
	.byte	'TxBasicHwStartOfControllerConfig',0
	.word	290
	.byte	1,2,35,19,13
	.byte	'TxBasicHwStopOfControllerConfig',0
	.word	290
	.byte	1,2,35,20,13
	.byte	'TxFullHwStartOfControllerConfig',0
	.word	290
	.byte	1,2,35,21,13
	.byte	'TxFullHwStopOfControllerConfig',0
	.word	290
	.byte	1,2,35,22,13
	.byte	'UnusedHwStartOfControllerConfig',0
	.word	290
	.byte	1,2,35,23,13
	.byte	'UnusedHwStopOfControllerConfig',0
	.word	290
	.byte	1,2,35,24,0,11
	.byte	'Can_ControllerConfigType',0,12,201,17,3
	.word	13149
	.byte	16
	.byte	'sCan_ControllerDataType',0,12,204,17,16,64,13
	.byte	'IntEnableOfControllerData',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'NonFdObjectsPendingFlagOfControllerData',0
	.word	429
	.byte	4,2,35,4,13
	.byte	'TXBCROfControllerData',0
	.word	429
	.byte	4,2,35,8,13
	.byte	'TXBRPOfControllerData',0
	.word	429
	.byte	4,2,35,12,13
	.byte	'BusOffNotificationOfControllerData',0
	.word	290
	.byte	1,2,35,16,13
	.byte	'BusOffTransitionRequestOfControllerData',0
	.word	290
	.byte	1,2,35,17,13
	.byte	'CanInterruptCounterOfControllerData',0
	.word	290
	.byte	1,2,35,18,13
	.byte	'IsBusOffOfControllerData',0
	.word	290
	.byte	1,2,35,19,13
	.byte	'LastInitObjectOfControllerData',0
	.word	290
	.byte	1,2,35,20,13
	.byte	'LastStateOfControllerData',0
	.word	290
	.byte	1,2,35,21,13
	.byte	'LogStatusOfControllerData',0
	.word	290
	.byte	1,2,35,22,13
	.byte	'ModeTransitionRequestOfControllerData',0
	.word	290
	.byte	1,2,35,23,13
	.byte	'PrevModeOfControllerData',0
	.word	290
	.byte	1,2,35,24,13
	.byte	'RamCheckTransitionRequestOfControllerData',0
	.word	290
	.byte	1,2,35,25,13
	.byte	'CanInterruptOldStatusOfControllerData',0
	.word	429
	.byte	4,2,35,26,13
	.byte	'LoopTimeoutOfControllerData',0
	.word	9017
	.byte	32,2,35,30,0,11
	.byte	'Can_ControllerDataType',0,12,222,17,3
	.word	14142
	.byte	17,32
	.word	429
	.byte	18,7,0,16
	.byte	'sCan_MailboxType',0,12,225,17,16,12,13
	.byte	'ActiveSendObjectOfMailbox',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'ControllerConfigIdxOfMailbox',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'FdPaddingOfMailbox',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'HwHandleOfMailbox',0
	.word	290
	.byte	1,2,35,3,13
	.byte	'IDValueOfMailbox',0
	.word	290
	.byte	1,2,35,4,13
	.byte	'MailboxSizeOfMailbox',0
	.word	290
	.byte	1,2,35,5,13
	.byte	'MailboxTypeOfMailbox',0
	.word	290
	.byte	1,2,35,6,13
	.byte	'MaxDataLenOfMailbox',0
	.word	290
	.byte	1,2,35,7,13
	.byte	'MemorySectionsIndexOfMailbox',0
	.word	290
	.byte	1,2,35,8,0,11
	.byte	'Can_MailboxType',0,12,236,17,3
	.word	14858
	.byte	16
	.byte	'sCan_MemorySectionInfoType',0,12,239,17,16,1,13
	.byte	'MemorySectionStartOfMemorySectionInfo',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'Can_MemorySectionInfoType',0,12,242,17,3
	.word	15188
	.byte	16
	.byte	'sCan_MemorySectionObjectsType',0,12,245,17,16,4,13
	.byte	'HwHandleOfMemorySectionObjects',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'MailboxElementOfMemorySectionObjects',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'MailboxHandleOfMemorySectionObjects',0
	.word	290
	.byte	1,2,35,2,0,11
	.byte	'Can_MemorySectionObjectsType',0,12,250,17,3
	.word	15304
	.byte	16
	.byte	'sCan_SIDFCType',0,12,253,17,16,4,13
	.byte	'FLSSAOfSIDFC',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'LSSOfSIDFC',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'SIDFEEndIdxOfSIDFC',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'SIDFEStartIdxOfSIDFC',0
	.word	290
	.byte	1,2,35,3,0,11
	.byte	'Can_SIDFCType',0,12,131,18,3
	.word	15510
	.byte	16
	.byte	'sCan_ShmAdrType',0,12,134,18,16,36,13
	.byte	'RXBAOfShmAdr',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'RXF0AOfShmAdr',0
	.word	429
	.byte	4,2,35,4,13
	.byte	'RXF1AOfShmAdr',0
	.word	429
	.byte	4,2,35,8,13
	.byte	'SIDFAOfShmAdr',0
	.word	429
	.byte	4,2,35,12,13
	.byte	'StartAdrOfShmAdr',0
	.word	429
	.byte	4,2,35,16,13
	.byte	'StopAdrOfShmAdr',0
	.word	429
	.byte	4,2,35,20,13
	.byte	'TXBAOfShmAdr',0
	.word	429
	.byte	4,2,35,24,13
	.byte	'TXEFAOfShmAdr',0
	.word	429
	.byte	4,2,35,28,13
	.byte	'XIDFAOfShmAdr',0
	.word	429
	.byte	4,2,35,32,0,11
	.byte	'Can_ShmAdrType',0,12,145,18,3
	.word	15655
	.byte	16
	.byte	'sCan_ShmElementSizeType',0,12,148,18,16,6,13
	.byte	'F0DSOfShmElementSize',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'F1DSOfShmElementSize',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'RBDSOfShmElementSize',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'TBDSOfShmElementSize',0
	.word	290
	.byte	1,2,35,3,13
	.byte	'TEFBDSOfShmElementSize',0
	.word	290
	.byte	1,2,35,4,0,11
	.byte	'Can_ShmElementSizeType',0,12,155,18,3
	.word	15912
	.byte	16
	.byte	'sCan_XIDFCType',0,12,158,18,16,2,13
	.byte	'FLESAOfXIDFC',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'LSEOfXIDFC',0
	.word	290
	.byte	1,2,35,1,0,11
	.byte	'Can_XIDFCType',0,12,162,18,3
	.word	16127
	.byte	16
	.byte	'sCan_XIDFEType',0,12,165,18,16,2,13
	.byte	'EIDFE_0OfXIDFE',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'EIDFE_1OfXIDFE',0
	.word	290
	.byte	1,2,35,1,0,11
	.byte	'Can_XIDFEType',0,12,169,18,3
	.word	16214
	.byte	16
	.byte	'sCan_PCConfigType',0,12,143,19,16,1,13
	.byte	'Can_PCConfigNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'Can_PCConfigType',0,12,146,19,3
	.word	16307
	.byte	11
	.byte	'Can_ConfigType',0,12,148,19,26
	.word	16307
	.byte	6
	.word	429
	.byte	6
	.word	429
	.byte	6
	.word	1322
	.byte	16
	.byte	'tElmTypeTag',0,13,145,9,25,72,13
	.byte	'E0',0
	.word	16413
	.byte	4,2,35,0,13
	.byte	'E1',0
	.word	16418
	.byte	4,2,35,4,13
	.byte	'data',0
	.word	16423
	.byte	64,2,35,8,0,6
	.word	16428
	.byte	11
	.byte	'tElmType',0,13,162,9,3
	.word	16485
	.byte	6
	.word	429
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	12,13,224,9,5,4,19
	.byte	'ID',0,4
	.word	16508
	.byte	29,3,2,35,0,19
	.byte	'RTR',0,1
	.word	16513
	.byte	1,2,2,35,3,19
	.byte	'XTD',0,1
	.word	16518
	.byte	1,1,2,35,3,19
	.byte	'ESI',0,1
	.word	16523
	.byte	1,0,2,35,3,0,6
	.word	429
	.byte	20,13,222,9,3,4,13
	.byte	'b0',0
	.word	16528
	.byte	4,2,35,0,13
	.byte	'B0',0
	.word	16594
	.byte	4,2,35,0,0,6
	.word	365
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	12,13,235,9,5,4,19
	.byte	'RXTS',0,2
	.word	16630
	.byte	16,0,2,35,0,19
	.byte	'DLC',0,1
	.word	16635
	.byte	4,4,2,35,2,19
	.byte	'BRS',0,1
	.word	16640
	.byte	1,3,2,35,2,19
	.byte	'FDF',0,1
	.word	16645
	.byte	1,2,2,35,2,19
	.byte	'r0',0,1
	.word	16650
	.byte	2,0,2,35,2,19
	.byte	'FIDX',0,1
	.word	16655
	.byte	7,1,2,35,3,19
	.byte	'ANMF',0,1
	.word	16660
	.byte	1,0,2,35,3,0,6
	.word	365
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	6
	.word	290
	.byte	12,13,245,9,5,4,19
	.byte	'r1',0,2
	.word	16779
	.byte	16,0,2,35,0,19
	.byte	'DLC',0,1
	.word	16784
	.byte	4,4,2,35,2,19
	.byte	'BRS',0,1
	.word	16789
	.byte	1,3,2,35,2,19
	.byte	'FDF',0,1
	.word	16794
	.byte	1,2,2,35,2,19
	.byte	'r0',0,1
	.word	16799
	.byte	1,1,2,35,2,19
	.byte	'EFC',0,1
	.word	16804
	.byte	1,0,2,35,2,19
	.byte	'MM',0,1
	.word	16809
	.byte	8,0,2,35,3,0,20,13,233,9,3,4,13
	.byte	'rb1',0
	.word	16665
	.byte	4,2,35,0,13
	.byte	'tb1',0
	.word	16814
	.byte	4,2,35,0,13
	.byte	'B1',0
	.word	429
	.byte	4,2,35,0,0,6
	.word	1322
	.byte	16
	.byte	'tCanChipMsgPtrTag',0,13,220,9,25,72,13
	.byte	'uB0',0
	.word	16599
	.byte	4,2,35,0,13
	.byte	'uB1',0
	.word	16923
	.byte	4,2,35,4,13
	.byte	'data',0
	.word	16968
	.byte	64,2,35,8,0,6
	.word	16973
	.byte	11
	.byte	'tCanChipMsgPtr',0,13,134,10,3
	.word	17038
	.byte	12,13,141,10,3,4,19
	.byte	'FnFL',0,1
	.word	290
	.byte	7,1,2,35,0,19
	.byte	'r2',0,1
	.word	290
	.byte	1,0,2,35,0,19
	.byte	'FnGI',0,1
	.word	290
	.byte	6,2,2,35,1,19
	.byte	'r1',0,4
	.word	429
	.byte	10,8,2,35,0,19
	.byte	'FnF',0,1
	.word	290
	.byte	1,7,2,35,3,19
	.byte	'RFnL',0,1
	.word	290
	.byte	1,6,2,35,3,19
	.byte	'r0',0,1
	.word	290
	.byte	6,0,2,35,3,0,21
	.byte	'tRXFnSTag',0,13,138,10,15,4,13
	.byte	'R',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17067
	.byte	4,2,35,0,0,11
	.byte	'tRXFnS',0,13,151,10,3
	.word	17179
	.byte	12,13,156,10,3,4,22,1
	.word	290
	.byte	2,6,2,35,0,19
	.byte	'FOSA',0,2
	.word	365
	.byte	14,0,2,35,0,19
	.byte	'F0S',0,1
	.word	290
	.byte	7,1,2,35,2,22,1
	.word	290
	.byte	1,0,2,35,2,19
	.byte	'F0WM',0,1
	.word	290
	.byte	7,1,2,35,3,22,1
	.word	290
	.byte	1,0,2,35,3,0,21
	.byte	'tRXFnCTag',0,13,153,10,15,4,13
	.byte	'R',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17234
	.byte	4,2,35,0,0,11
	.byte	'tRXFnC',0,13,165,10,3
	.word	17321
	.byte	12,13,171,10,3,4,19
	.byte	'F0DS',0,1
	.word	290
	.byte	3,5,2,35,0,22,1
	.word	290
	.byte	1,4,2,35,0,19
	.byte	'F1DS',0,1
	.word	290
	.byte	3,1,2,35,0,22,1
	.word	290
	.byte	1,0,2,35,0,19
	.byte	'RBDS',0,1
	.word	290
	.byte	3,5,2,35,1,22,4
	.word	429
	.byte	21,0,2,35,0,0,21
	.byte	'tRXESCTag',0,13,168,10,15,4,13
	.byte	'R',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17376
	.byte	4,2,35,0,0,11
	.byte	'tRXESC',0,13,180,10,3
	.word	17464
	.byte	12,13,185,10,3,4,19
	.byte	'TFFL',0,1
	.word	290
	.byte	6,2,2,35,0,22,1
	.word	290
	.byte	2,0,2,35,0,19
	.byte	'TFGI',0,1
	.word	290
	.byte	5,3,2,35,1,22,1
	.word	290
	.byte	3,0,2,35,1,19
	.byte	'TFQPI',0,1
	.word	290
	.byte	5,3,2,35,2,19
	.byte	'TFQF',0,1
	.word	290
	.byte	1,2,2,35,2,22,2
	.word	365
	.byte	10,0,2,35,2,0,21
	.byte	'tTXFQSTag',0,13,182,10,15,4,13
	.byte	'R',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17519
	.byte	4,2,35,0,0,11
	.byte	'tTXFQS',0,13,195,10,3
	.word	17624
	.byte	12,13,200,10,3,4,19
	.byte	'EFFL',0,1
	.word	290
	.byte	6,2,2,35,0,19
	.byte	'r1',0,1
	.word	290
	.byte	2,0,2,35,0,19
	.byte	'EFGI',0,1
	.word	290
	.byte	5,3,2,35,1,22,4
	.word	429
	.byte	11,8,2,35,0,19
	.byte	'EFF',0,1
	.word	290
	.byte	1,7,2,35,3,19
	.byte	'TEFL',0,1
	.word	290
	.byte	1,6,2,35,3,19
	.byte	'r0',0,1
	.word	290
	.byte	6,0,2,35,3,0,21
	.byte	'tTXEFSTag',0,13,197,10,15,4,13
	.byte	'R',0
	.word	429
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17679
	.byte	4,2,35,0,0,11
	.byte	'tTXEFS',0,13,210,10,3
	.word	17788
	.byte	11
	.byte	'CanIf_TxBufferSizeType',0,14,184,1,15
	.word	290
	.byte	14,15,189,2,9,1,15
	.byte	'CANIF_CS_UNINIT',0,0,15
	.byte	'CANIF_CS_STOPPED',0,1,15
	.byte	'CANIF_CS_STARTED',0,2,15
	.byte	'CANIF_CS_SLEEP',0,3,0,11
	.byte	'CanIf_ControllerModeType',0,15,195,2,3
	.word	17875
	.byte	14,15,215,2,9,1,15
	.byte	'CANIF_GET_OFFLINE',0,0,15
	.byte	'CANIF_GET_RX_ONLINE',0,1,15
	.byte	'CANIF_GET_TX_ONLINE',0,2,15
	.byte	'CANIF_GET_ONLINE',0,3,15
	.byte	'CANIF_GET_OFFLINE_ACTIVE',0,4,15
	.byte	'CANIF_GET_OFFLINE_ACTIVE_RX_ONLINE',0,5,15
	.byte	'CANIF_NO_MODE_PDU_GET_MODE_TYPE_END',0,6,0,11
	.byte	'CanIf_PduGetModeType',0,15,228,2,3
	.word	17989
	.byte	14,15,231,2,9,1,15
	.byte	'CANIF_RxBasicCANMailbox',0,0,15
	.byte	'CANIF_RxFullCANMailbox',0,1,15
	.byte	'CANIF_TxBasicCANMailbox',0,2,15
	.byte	'CANIF_TxFullCANMailbox',0,3,15
	.byte	'CANIF_UnusedCANMailbox',0,4,0,11
	.byte	'CanIf_MailBoxTypeType',0,15,238,2,3
	.word	18211
	.byte	14,15,241,2,9,1,15
	.byte	'CanIf_SimpleRxIndicationLayout',0,0,15
	.byte	'CanIf_AdvancedRxIndicationLayout',0,1,15
	.byte	'CanIf_NmOsekRxIndicationLayout',0,2,15
	.byte	'CanIf_CddRxIndicationLayout',0,3,0,11
	.byte	'CanIf_RxIndicationLayoutType',0,15,247,2,3
	.word	18376
	.byte	23,1,1,5
	.word	290
	.byte	0,7
	.word	18552
	.byte	11
	.byte	'CanIf_TxConfirmationFctType',0,15,175,3,9
	.word	18561
	.byte	3
	.word	290
	.byte	7
	.word	18603
	.byte	23,1,1,5
	.word	290
	.byte	5
	.word	18608
	.byte	0,7
	.word	18613
	.byte	11
	.byte	'CanIf_SimpleRxIndicationFctType',0,15,181,3,9
	.word	18627
	.byte	3
	.word	809
	.byte	7
	.word	18673
	.byte	23,1,1,5
	.word	290
	.byte	5
	.word	18678
	.byte	0,7
	.word	18683
	.byte	11
	.byte	'CanIf_AdvancedRxIndicationFctType',0,15,186,3,9
	.word	18697
	.byte	23,1,1,5
	.word	290
	.byte	5
	.word	18608
	.byte	5
	.word	365
	.byte	0,7
	.word	18745
	.byte	11
	.byte	'CanIf_NmOsekRxIndicationFctType',0,15,190,3,9
	.word	18764
	.byte	23,1,1,5
	.word	290
	.byte	5
	.word	18678
	.byte	5
	.word	365
	.byte	0,7
	.word	18810
	.byte	11
	.byte	'CanIf_CddRxIndicationFctType',0,15,194,3,9
	.word	18829
	.byte	23,1,1,5
	.word	290
	.byte	5
	.word	17875
	.byte	0,7
	.word	18872
	.byte	11
	.byte	'CanIf_CtrlModeIndicationFctType',0,15,198,3,9
	.word	18886
	.byte	11
	.byte	'CanIf_BusOffNotificationFctType',0,15,202,3,9
	.word	18561
	.byte	20,15,203,4,9,4,13
	.byte	'eSimpleRxIndicationType',0
	.word	18632
	.byte	4,2,35,0,13
	.byte	'eAdvancedRxIndicationType',0
	.word	18702
	.byte	4,2,35,0,13
	.byte	'eNmOsekRxIndicationType',0
	.word	18769
	.byte	4,2,35,0,13
	.byte	'eCddRxIndicationType',0
	.word	18834
	.byte	4,2,35,0,0,11
	.byte	'CanIf_RxIndicationFctType',0,15,209,4,3
	.word	18973
	.byte	7
	.word	18613
	.byte	7
	.word	18683
	.byte	7
	.word	18745
	.byte	7
	.word	18810
	.byte	16
	.byte	'sCanIf_TxQueueBaseType',0,15,222,4,16,1,13
	.byte	'eSduLength',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxQueueBaseType',0,15,228,4,3
	.word	19166
	.byte	16
	.byte	'sCanIf_TxQueueBaseWithDataType',0,15,231,4,16,1,13
	.byte	'eBaseParams',0
	.word	19166
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxQueueBaseWithDataType',0,15,237,4,3
	.word	19247
	.byte	16
	.byte	'sCanIf_TxPrioByCanIdByteQueueType',0,15,242,4,16,2,13
	.byte	'eQueueParams',0
	.word	19247
	.byte	1,2,35,0,13
	.byte	'eQueued',0
	.word	290
	.byte	1,2,35,1,0,11
	.byte	'CanIf_TxPrioByCanIdByteQueueType',0,15,246,4,3
	.word	19345
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdBaseType',0,15,128,5,16,1,13
	.byte	'eQueueCounter',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdBaseType',0,15,131,5,3
	.word	19467
	.byte	11
	.byte	'CanIf_MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,14,138,9,15
	.word	290
	.byte	11
	.byte	'CanIf_MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfigType',0,14,141,9,15
	.word	290
	.byte	11
	.byte	'CanIf_CtrlStatesIdxOfMailBoxConfigType',0,14,150,9,15
	.word	290
	.byte	11
	.byte	'CanIf_PduIdFirstOfMailBoxConfigType',0,14,153,9,15
	.word	290
	.byte	11
	.byte	'CanIf_PduIdLastOfMailBoxConfigType',0,14,156,9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxBufferCfgIdxOfMailBoxConfigType',0,14,159,9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxBufferHandlingTypeOfMailBoxConfigType',0,14,165,9,15
	.word	290
	.byte	11
	.byte	'CanIf_MailBoxConfigIdxOfMappedTxBuffersConfigType',0,14,168,9,15
	.word	290
	.byte	11
	.byte	'CanIf_RxIndicationFctListIdxOfRxPduConfigType',0,14,171,9,15
	.word	290
	.byte	11
	.byte	'CanIf_RxPduCanIdOfRxPduConfigType',0,14,174,9,15
	.word	290
	.byte	11
	.byte	'CanIf_RxPduDlcOfRxPduConfigType',0,14,177,9,15
	.word	290
	.byte	11
	.byte	'CanIf_RxPduMaskOfRxPduConfigType',0,14,180,9,16
	.word	365
	.byte	11
	.byte	'CanIf_UpperPduIdOfRxPduConfigType',0,14,183,9,19
	.word	290
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14,231,9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14,234
	.byte	9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfigType',0,14,237
	.byte	9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfigType',0,14
	.byte	240,9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,243,9,15
	.word	290
	.byte	11
	.byte	'CanIf_CanIdOfTxPduConfigType',0,14,246,9,16
	.word	365
	.byte	11
	.byte	'CanIf_CtrlStatesIdxOfTxPduConfigType',0,14,249,9,15
	.word	290
	.byte	11
	.byte	'CanIf_IsTxPduTruncationOfTxPduConfigType',0,14,252,9,17
	.word	290
	.byte	11
	.byte	'CanIf_MailBoxConfigIdxOfTxPduConfigType',0,14,255,9,15
	.word	290
	.byte	11
	.byte	'CanIf_TxConfirmationFctListIdxOfTxPduConfigType',0,14,130,10,15
	.word	290
	.byte	11
	.byte	'CanIf_TxPduLengthOfTxPduConfigType',0,14,133,10,15
	.word	290
	.byte	11
	.byte	'CanIf_UpperLayerTxPduIdOfTxPduConfigType',0,14,136,10,19
	.word	290
	.byte	11
	.byte	'CanIf_TxQueueIdxOfTxPduQueueIndexType',0,14,139,10,15
	.word	290
	.byte	11
	.byte	'CanIf_TxQueueIndex2DataStartStopIdxOfTxPduQueueIndexType',0,14,142,10,15
	.word	290
	.byte	11
	.byte	'CanIf_TxQueueDataType',0,14,151,10,15
	.word	290
	.byte	11
	.byte	'CanIf_TxQueueDataEndIdxOfTxQueueIndex2DataStartStopType',0,14,154,10,15
	.word	290
	.byte	11
	.byte	'CanIf_TxQueueDataLengthOfTxQueueIndex2DataStartStopType',0,14,157,10,15
	.word	290
	.byte	11
	.byte	'CanIf_TxQueueDataStartIdxOfTxQueueIndex2DataStartStopType',0,14,160,10,15
	.word	290
	.byte	16
	.byte	'sCanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,14,183,10,16,2,13
	.byte	'MappedTxBuffersConfigEndIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'MappedTxBuffersConfigStartIdxOfCanIfCtrlId2MappedTxBuffersConfig',0
	.word	290
	.byte	1,2,35,1,0,11
	.byte	'CanIf_CanIfCtrlId2MappedTxBuffersConfigType',0,14,187,10,3
	.word	21406
	.byte	16
	.byte	'sCanIf_CtrlStatesType',0,14,190,10,16,2,13
	.byte	'CtrlModeOfCtrlStates',0
	.word	17875
	.byte	1,2,35,0,13
	.byte	'PduModeOfCtrlStates',0
	.word	17989
	.byte	1,2,35,1,0,11
	.byte	'CanIf_CtrlStatesType',0,14,194,10,3
	.word	21657
	.byte	16
	.byte	'sCanIf_MailBoxConfigType',0,14,200,10,16,6,13
	.byte	'CtrlStatesIdxOfMailBoxConfig',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'PduIdFirstOfMailBoxConfig',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'PduIdLastOfMailBoxConfig',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'TxBufferCfgIdxOfMailBoxConfig',0
	.word	290
	.byte	1,2,35,3,13
	.byte	'TxBufferHandlingTypeOfMailBoxConfig',0
	.word	290
	.byte	1,2,35,4,13
	.byte	'MailBoxTypeOfMailBoxConfig',0
	.word	18211
	.byte	1,2,35,5,0,11
	.byte	'CanIf_MailBoxConfigType',0,14,208,10,3
	.word	21775
	.byte	16
	.byte	'sCanIf_MappedTxBuffersConfigType',0,14,214,10,16,1,13
	.byte	'MailBoxConfigIdxOfMappedTxBuffersConfig',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'CanIf_MappedTxBuffersConfigType',0,14,217,10,3
	.word	22067
	.byte	16
	.byte	'sCanIf_RxIndicationFctListType',0,14,220,10,16,8,13
	.byte	'RxIndicationFctOfRxIndicationFctList',0
	.word	18973
	.byte	4,2,35,0,13
	.byte	'RxIndicationLayoutOfRxIndicationFctList',0
	.word	18376
	.byte	1,2,35,4,0,11
	.byte	'CanIf_RxIndicationFctListType',0,14,224,10,3
	.word	22197
	.byte	16
	.byte	'sCanIf_RxPduConfigType',0,14,230,10,16,6,13
	.byte	'RxPduMaskOfRxPduConfig',0
	.word	365
	.byte	2,2,35,0,13
	.byte	'UpperPduIdOfRxPduConfig',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'RxIndicationFctListIdxOfRxPduConfig',0
	.word	290
	.byte	1,2,35,3,13
	.byte	'RxPduCanIdOfRxPduConfig',0
	.word	290
	.byte	1,2,35,4,13
	.byte	'RxPduDlcOfRxPduConfig',0
	.word	290
	.byte	1,2,35,5,0,11
	.byte	'CanIf_RxPduConfigType',0,14,237,10,3
	.word	22369
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueConfigType',0,14,245,10,16,4,13
	.byte	'TxBufferPrioByCanIdBaseIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusEndIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusLengthOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'TxBufferPrioByCanIdByteQueueMappedTxPdusStartIdxOfTxBufferPrioByCanIdByteQueueConfig',0
	.word	290
	.byte	1,2,35,3,0,11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueConfigType',0,14,251,10,3
	.word	22604
	.byte	16
	.byte	'sCanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,129,11,16,1,13
	.byte	'TxPduConfigIdxOfTxBufferPrioByCanIdByteQueueMappedTxPdus',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdByteQueueMappedTxPdusType',0,14,132,11,3
	.word	23061
	.byte	16
	.byte	'sCanIf_TxPduConfigType',0,14,140,11,16,8,13
	.byte	'CanIdOfTxPduConfig',0
	.word	365
	.byte	2,2,35,0,13
	.byte	'UpperLayerTxPduIdOfTxPduConfig',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'IsTxPduTruncationOfTxPduConfig',0
	.word	290
	.byte	1,2,35,3,13
	.byte	'CtrlStatesIdxOfTxPduConfig',0
	.word	290
	.byte	1,2,35,4,13
	.byte	'MailBoxConfigIdxOfTxPduConfig',0
	.word	290
	.byte	1,2,35,5,13
	.byte	'TxConfirmationFctListIdxOfTxPduConfig',0
	.word	290
	.byte	1,2,35,6,13
	.byte	'TxPduLengthOfTxPduConfig',0
	.word	290
	.byte	1,2,35,7,0,11
	.byte	'CanIf_TxPduConfigType',0,14,149,11,3
	.word	23246
	.byte	16
	.byte	'sCanIf_TxPduQueueIndexType',0,14,155,11,16,2,13
	.byte	'TxQueueIdxOfTxPduQueueIndex',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'TxQueueIndex2DataStartStopIdxOfTxPduQueueIndex',0
	.word	290
	.byte	1,2,35,1,0,11
	.byte	'CanIf_TxPduQueueIndexType',0,14,159,11,3
	.word	23571
	.byte	16
	.byte	'sCanIf_TxQueueIndex2DataStartStopType',0,14,166,11,16,4,13
	.byte	'TxQueueDataEndIdxOfTxQueueIndex2DataStartStop',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'TxQueueDataLengthOfTxQueueIndex2DataStartStop',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'TxQueueDataStartIdxOfTxQueueIndex2DataStartStop',0
	.word	290
	.byte	1,2,35,2,0,11
	.byte	'CanIf_TxQueueIndex2DataStartStopType',0,14,171,11,3
	.word	23733
	.byte	16
	.byte	'CanIf_CtrlStatesStructSTag',0,14,183,11,16,2,13
	.byte	'CT_testCANFDdbc_2c920817',0
	.word	21657
	.byte	2,2,35,0,0,11
	.byte	'CanIf_CtrlStatesStructSType',0,14,186,11,3
	.word	23991
	.byte	16
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSTag',0,14,189,11,16,1,13
	.byte	'CHNL_7a25eeb6',0
	.word	19467
	.byte	1,2,35,0,0,11
	.byte	'CanIf_TxBufferPrioByCanIdBaseStructSType',0,14,192,11,3
	.word	24096
	.byte	16
	.byte	'CanIf_TxQueueStructSTag',0,14,195,11,16,6,13
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	19345
	.byte	2,2,35,0,13
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	19345
	.byte	2,2,35,2,13
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	19345
	.byte	2,2,35,4,0,11
	.byte	'CanIf_TxQueueStructSType',0,14,200,11,3
	.word	24216
	.byte	17,32
	.word	290
	.byte	18,31,0,17,8
	.word	290
	.byte	18,7,0,17,64
	.word	290
	.byte	18,63,0,16
	.byte	'CanIf_TxQueueDataStructSTag',0,14,203,11,16,104,13
	.byte	'TxMessage3_otestCANFDdbc_547b0ac5_Tx',0
	.word	24420
	.byte	32,2,35,0,13
	.byte	'TxMessage22_otestCANFDdbc_f66bbf36_Tx',0
	.word	24429
	.byte	8,2,35,32,13
	.byte	'TxMessage1_otestCANFDdbc_815f4c47_Tx',0
	.word	24438
	.byte	64,2,35,40,0,11
	.byte	'CanIf_TxQueueDataStructSType',0,14,208,11,3
	.word	24447
	.byte	16
	.byte	'sCanIf_PCConfigType',0,14,189,12,16,1,13
	.byte	'CanIf_PCConfigNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'CanIf_PCConfigType',0,14,192,12,3
	.word	24659
	.byte	24,1,1,7
	.word	24747
	.byte	11
	.byte	'PduR_LockFunctionType',0,16,218,8,9
	.word	24750
	.byte	25
	.word	290
	.byte	1,1,5
	.word	290
	.byte	5
	.word	18678
	.byte	0,7
	.word	24786
	.byte	11
	.byte	'PduR_TransmitFctPtrType',0,16,222,8,9
	.word	24804
	.byte	11
	.byte	'PduR_IfRxIndicationType',0,16,224,8,9
	.word	18697
	.byte	11
	.byte	'PduR_IfTxConfirmationFctPtrType',0,16,225,8,9
	.word	18561
	.byte	11
	.byte	'PduR_hasIfRoutingOfGeneralPropertiesRomType',0,16,207,9,17
	.word	290
	.byte	11
	.byte	'PduR_InitializedType',0,16,210,9,17
	.word	290
	.byte	11
	.byte	'PduR_DestApplicationManagerRomIdxOfMmRomType',0,16,219,9,15
	.word	290
	.byte	11
	.byte	'PduR_MaskedBitsOfMmRomType',0,16,225,9,15
	.word	290
	.byte	11
	.byte	'PduR_RmGDestRomStartIdxOfMmRomType',0,16,231,9,15
	.word	290
	.byte	11
	.byte	'PduR_MmRomIndType',0,16,240,9,15
	.word	290
	.byte	11
	.byte	'PduR_PartitionSNVOfPartitionIdentifiersType',0,16,246,9,16
	.word	429
	.byte	11
	.byte	'PduR_PduLengthHandlingStrategyOfRmDestRomType',0,16,252,9,15
	.word	290
	.byte	11
	.byte	'PduR_RmGDestRomIdxOfRmDestRomType',0,16,255,9,15
	.word	290
	.byte	11
	.byte	'PduR_RmSrcRomIdxOfRmDestRomType',0,16,130,10,15
	.word	290
	.byte	11
	.byte	'PduR_RoutingTypeOfRmDestRomType',0,16,133,10,15
	.word	290
	.byte	11
	.byte	'PduR_DestHndOfRmGDestRomType',0,16,136,10,15
	.word	290
	.byte	11
	.byte	'PduR_DirectionOfRmGDestRomType',0,16,139,10,15
	.word	290
	.byte	11
	.byte	'PduR_MaxPduLengthOfRmGDestRomType',0,16,145,10,15
	.word	290
	.byte	11
	.byte	'PduR_MmRomIdxOfRmGDestRomType',0,16,148,10,15
	.word	290
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfRmGDestRomType',0,16,151,10,15
	.word	290
	.byte	11
	.byte	'PduR_RmDestRomIdxOfRmGDestRomType',0,16,157,10,15
	.word	290
	.byte	11
	.byte	'PduR_MmRomIdxOfRmSrcRomType',0,16,166,10,15
	.word	290
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfRmSrcRomType',0,16,169,10,15
	.word	290
	.byte	11
	.byte	'PduR_RmDestRomStartIdxOfRmSrcRomType',0,16,178,10,15
	.word	290
	.byte	11
	.byte	'PduR_SrcHndOfRmSrcRomType',0,16,181,10,15
	.word	290
	.byte	11
	.byte	'PduR_RmTransmitFctPtrIdxOfTx2LoType',0,16,250,10,15
	.word	290
	.byte	11
	.byte	'PduR_PartitionIndexOfCslOfTxIf2UpType',0,16,253,10,15
	.word	290
	.byte	11
	.byte	'PduR_RmGDestRomIdxOfTxIf2UpType',0,16,128,11,15
	.word	290
	.byte	11
	.byte	'PduR_TxConfirmationUsedOfTxIf2UpType',0,16,131,11,17
	.word	290
	.byte	11
	.byte	'PduR_RmTransmitFctPtrType',0,16,144,11,9
	.word	24804
	.byte	16
	.byte	'sPduR_DestApplicationManagerRomType',0,16,182,11,16,1,13
	.byte	'PduR_DestApplicationManagerRomNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_DestApplicationManagerRomType',0,16,185,11,3
	.word	26026
	.byte	16
	.byte	'sPduR_ExclusiveAreaRomType',0,16,188,11,16,8,13
	.byte	'LockOfExclusiveAreaRom',0
	.word	24755
	.byte	4,2,35,0,13
	.byte	'UnlockOfExclusiveAreaRom',0
	.word	24755
	.byte	4,2,35,4,0,11
	.byte	'PduR_ExclusiveAreaRomType',0,16,192,11,3
	.word	26162
	.byte	7
	.word	24747
	.byte	16
	.byte	'sPduR_GeneralPropertiesRomType',0,16,195,11,16,1,13
	.byte	'hasIfRoutingOfGeneralPropertiesRom',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_GeneralPropertiesRomType',0,16,198,11,3
	.word	26302
	.byte	16
	.byte	'sPduR_LockRomType',0,16,201,11,16,1,13
	.byte	'PduR_LockRomNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_LockRomType',0,16,204,11,3
	.word	26423
	.byte	16
	.byte	'sPduR_MmRomType',0,16,207,11,16,16,13
	.byte	'DestApplicationManagerRomIdxOfMmRom',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'MaskedBitsOfMmRom',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'RmGDestRomStartIdxOfMmRom',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'UpIfRxIndicationFctPtrOfMmRom',0
	.word	24842
	.byte	4,2,35,4,13
	.byte	'UpIfTxConfirmationFctPtrOfMmRom',0
	.word	24875
	.byte	4,2,35,8,13
	.byte	'LoIfTransmitFctPtrOfMmRom',0
	.word	24809
	.byte	4,2,35,12,0,11
	.byte	'PduR_MmRomType',0,16,215,11,3
	.word	26505
	.byte	7
	.word	18683
	.byte	7
	.word	18552
	.byte	7
	.word	24786
	.byte	16
	.byte	'sPduR_PartitionIdentifiersType',0,16,218,11,16,4,13
	.byte	'PartitionSNVOfPartitionIdentifiers',0
	.word	429
	.byte	4,2,35,0,0,11
	.byte	'PduR_PartitionIdentifiersType',0,16,221,11,3
	.word	26789
	.byte	16
	.byte	'sPduR_RmDestRomType',0,16,224,11,16,4,13
	.byte	'PduLengthHandlingStrategyOfRmDestRom',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'RmGDestRomIdxOfRmDestRom',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'RmSrcRomIdxOfRmDestRom',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'RoutingTypeOfRmDestRom',0
	.word	290
	.byte	1,2,35,3,0,11
	.byte	'PduR_RmDestRomType',0,16,230,11,3
	.word	26910
	.byte	16
	.byte	'sPduR_RmGDestRomType',0,16,233,11,16,6,13
	.byte	'DestHndOfRmGDestRom',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'DirectionOfRmGDestRom',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'MaxPduLengthOfRmGDestRom',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'MmRomIdxOfRmGDestRom',0
	.word	290
	.byte	1,2,35,3,13
	.byte	'PartitionIndexOfCslOfRmGDestRom',0
	.word	290
	.byte	1,2,35,4,13
	.byte	'RmDestRomIdxOfRmGDestRom',0
	.word	290
	.byte	1,2,35,5,0,11
	.byte	'PduR_RmGDestRomType',0,16,241,11,3
	.word	27109
	.byte	16
	.byte	'sPduR_RmSrcRomType',0,16,244,11,16,4,13
	.byte	'MmRomIdxOfRmSrcRom',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'PartitionIndexOfCslOfRmSrcRom',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'RmDestRomStartIdxOfRmSrcRom',0
	.word	290
	.byte	1,2,35,2,13
	.byte	'SrcHndOfRmSrcRom',0
	.word	290
	.byte	1,2,35,3,0,11
	.byte	'PduR_RmSrcRomType',0,16,250,11,3
	.word	27365
	.byte	16
	.byte	'sPduR_RxIf2DestType',0,16,253,11,16,1,13
	.byte	'PduR_RxIf2DestNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_RxIf2DestType',0,16,128,12,3
	.word	27548
	.byte	16
	.byte	'sPduR_SrcApplicationRomType',0,16,131,12,16,1,13
	.byte	'PduR_SrcApplicationRomNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_SrcApplicationRomType',0,16,134,12,3
	.word	27636
	.byte	16
	.byte	'sPduR_Tx2LoType',0,16,137,12,16,1,13
	.byte	'RmTransmitFctPtrIdxOfTx2Lo',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_Tx2LoType',0,16,140,12,3
	.word	27748
	.byte	16
	.byte	'sPduR_TxIf2UpType',0,16,143,12,16,4,13
	.byte	'TxConfirmationUsedOfTxIf2Up',0
	.word	290
	.byte	1,2,35,0,13
	.byte	'PartitionIndexOfCslOfTxIf2Up',0
	.word	290
	.byte	1,2,35,1,13
	.byte	'RmGDestRomIdxOfTxIf2Up',0
	.word	290
	.byte	1,2,35,2,0,11
	.byte	'PduR_TxIf2UpType',0,16,148,12,3
	.word	27831
	.byte	7
	.word	290
	.byte	11
	.byte	'PduR_InitializedPtrType',0,16,169,12,66
	.word	27989
	.byte	16
	.byte	'sPduR_PCPartitionConfigType',0,16,217,12,16,4,13
	.byte	'InitializedOfPCPartitionConfig',0
	.word	27994
	.byte	4,2,35,0,0,11
	.byte	'PduR_PCPartitionConfigType',0,16,220,12,3
	.word	28027
	.byte	7
	.word	290
	.byte	16
	.byte	'sPduR_PCConfigType',0,16,235,12,16,1,13
	.byte	'PduR_PCConfigNeverUsed',0
	.word	290
	.byte	1,2,35,0,0,11
	.byte	'PduR_PCConfigType',0,16,238,12,3
	.word	28143
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8,58,15,59,15,57,15,73,19,0,0,12,19,1
	.byte	58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40
	.byte	0,3,8,28,13,0,0,16,19,1,3,8,58,15,59,15,57,15,11,15,0,0,17,1,1,11,15,73,19,0,0,18,33,0,47,15,0,0,19,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,20,23,1,58,15,59,15,57,15,11,15,0,0,21,23,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,22,13,0,11,15,73,19,13,15,12,15,56,9,0,0,23,21,1,54,15,39,12,0,0,24,21,0,54,15,39,12,0,0
	.byte	25,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation',0,0
	.byte	'..\\component\\PduR\\Implementation\\PduR_RmTp.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,1,0,0
	.byte	'Det_Cfg.h',0,2,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Hal_Os_Types.h',0,3,0,0
	.byte	'Os_Hal_OsInt.h',0,3,0,0
	.byte	'Os_Types.h',0,3,0,0
	.byte	'Can_DrvGeneralTypes.h',0,2,0,0
	.byte	'Can_Cfg.h',0,2,0,0
	.byte	'Can.h',0,4,0,0
	.byte	'CanIf_Cfg.h',0,2,0,0
	.byte	'CanIf_Types.h',0,5,0,0
	.byte	'PduR_Lcfg.h',0,2,0,0,0
.L9:
.L7:

; ..\component\PduR\Implementation\PduR_RmTp.c	     1  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	     2   *  COPYRIGHT
; ..\component\PduR\Implementation\PduR_RmTp.c	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmTp.c	     4   *  \verbatim
; ..\component\PduR\Implementation\PduR_RmTp.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\PduR\Implementation\PduR_RmTp.c	     6   *
; ..\component\PduR\Implementation\PduR_RmTp.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_RmTp.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\PduR\Implementation\PduR_RmTp.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\PduR\Implementation\PduR_RmTp.c	    10   *  \endverbatim
; ..\component\PduR\Implementation\PduR_RmTp.c	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmTp.c	    12   *  FILE DESCRIPTION
; ..\component\PduR\Implementation\PduR_RmTp.c	    13   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmTp.c	    14   *         File:  PduR_RmTp.c
; ..\component\PduR\Implementation\PduR_RmTp.c	    15   *      Project:  Gw_AsrPduRCfg5
; ..\component\PduR\Implementation\PduR_RmTp.c	    16   *       Module:  MICROSAR PDU Router
; ..\component\PduR\Implementation\PduR_RmTp.c	    17   *    Generator:  Configurator 5
; ..\component\PduR\Implementation\PduR_RmTp.c	    18   *
; ..\component\PduR\Implementation\PduR_RmTp.c	    19   *  Description:  Vector implementation of AUTOSAR PDU Router
; ..\component\PduR\Implementation\PduR_RmTp.c	    20   *
; ..\component\PduR\Implementation\PduR_RmTp.c	    21   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    22  
; ..\component\PduR\Implementation\PduR_RmTp.c	    23  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    24   *  REVISION HISTORY
; ..\component\PduR\Implementation\PduR_RmTp.c	    25   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmTp.c	    26   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_RmTp.c	    27   *
; ..\component\PduR\Implementation\PduR_RmTp.c	    28   *  FILE VERSION
; ..\component\PduR\Implementation\PduR_RmTp.c	    29   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\PduR\Implementation\PduR_RmTp.c	    30   *  Refer to the module's header file.
; ..\component\PduR\Implementation\PduR_RmTp.c	    31   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    32  
; ..\component\PduR\Implementation\PduR_RmTp.c	    33  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    34   * LOCAL MISRA / PCLINT JUSTIFICATION
; ..\component\PduR\Implementation\PduR_RmTp.c	    35   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    36  /* PRQA  S 3673 EOF */ /* MD_MSR_Rule8.13 */
; ..\component\PduR\Implementation\PduR_RmTp.c	    37  /* PRQA  S 0789 EOF */ /* MD_PduR_DistinctIdentifiers */
; ..\component\PduR\Implementation\PduR_RmTp.c	    38  
; ..\component\PduR\Implementation\PduR_RmTp.c	    39  #define PDUR_RMTP_SOURCE
; ..\component\PduR\Implementation\PduR_RmTp.c	    40  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    41   * INCLUDES
; ..\component\PduR\Implementation\PduR_RmTp.c	    42   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    43  #include "PduR.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    44  #include "PduR_Bm.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    45  #include "PduR_Fm.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    46  #include "PduR_Lock.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    47  #include "PduR_RmTp.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    48  #include "PduR_RmTp_TxInst.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    49  #if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	    50  # include "Det.h"
; ..\component\PduR\Implementation\PduR_RmTp.c	    51  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	    52  
; ..\component\PduR\Implementation\PduR_RmTp.c	    53  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    54   *  LOCAL CONSTANT MACROS
; ..\component\PduR\Implementation\PduR_RmTp.c	    55   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    56  
; ..\component\PduR\Implementation\PduR_RmTp.c	    57  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    58   *  LOCAL FUNCTION MACROS
; ..\component\PduR\Implementation\PduR_RmTp.c	    59   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    60  
; ..\component\PduR\Implementation\PduR_RmTp.c	    61  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    62   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\PduR\Implementation\PduR_RmTp.c	    63   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    64  
; ..\component\PduR\Implementation\PduR_RmTp.c	    65  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    66   *  LOCAL DATA PROTOTYPES
; ..\component\PduR\Implementation\PduR_RmTp.c	    67   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    68  
; ..\component\PduR\Implementation\PduR_RmTp.c	    69  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    70   *  GLOBAL DATA
; ..\component\PduR\Implementation\PduR_RmTp.c	    71   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    72  
; ..\component\PduR\Implementation\PduR_RmTp.c	    73  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    74   *  LOCAL FUNCTION PROTOTYPES
; ..\component\PduR\Implementation\PduR_RmTp.c	    75   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    76  #define PDUR_START_SEC_CODE
; ..\component\PduR\Implementation\PduR_RmTp.c	    77  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_RmTp.c	    78  
; ..\component\PduR\Implementation\PduR_RmTp.c	    79  #if(PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	    80  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    81   * PduR_RmTp_GetFmFifoElementRamIdxOfRmBufferedTpPropertiesSafe
; ..\component\PduR\Implementation\PduR_RmTp.c	    82   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    83  /*! \brief      Gets the current idx for the FIFO element.
; ..\component\PduR\Implementation\PduR_RmTp.c	    84   *  \details    -
; ..\component\PduR\Implementation\PduR_RmTp.c	    85   *  \param[in]  bufferedTpPropertiesRomIdx    id of the buffered TP property
; ..\component\PduR\Implementation\PduR_RmTp.c	    86   *  \param[in]  memIdx                        memory section index
; ..\component\PduR\Implementation\PduR_RmTp.c	    87   *  \return     the index
; ..\component\PduR\Implementation\PduR_RmTp.c	    88   *  \pre        -
; ..\component\PduR\Implementation\PduR_RmTp.c	    89   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    90  LOCAL_INLINE FUNC(PduR_FmFifoElementRamIdxOfRmBufferedTpPropertiesRamType, PDUR_CODE) PduR_RmTp_GetFmFifoElementRamIdxOfRmBufferedTpPropertiesSafe(PduR_RmBufferedTpPropertiesRomIdxOfRmSrcRomType bufferedTpPropertiesRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	    91  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	    92  
; ..\component\PduR\Implementation\PduR_RmTp.c	    93  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	    94  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	    95   * PduR_RmTp_ThresholdReached
; ..\component\PduR\Implementation\PduR_RmTp.c	    96   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	    97  /*! \brief      This function calculates the fill level and returns true if the configured threshold is reached.
; ..\component\PduR\Implementation\PduR_RmTp.c	    98   *  \details    -
; ..\component\PduR\Implementation\PduR_RmTp.c	    99   *  \param[in]  rmSrcIdx   Routing Manager Src Index
; ..\component\PduR\Implementation\PduR_RmTp.c	   100   *  \return                E_OK:     If threshold is reached.
; ..\component\PduR\Implementation\PduR_RmTp.c	   101   *                         E_NOT_OK: If threshold is not reached.
; ..\component\PduR\Implementation\PduR_RmTp.c	   102   *  \pre        -
; ..\component\PduR\Implementation\PduR_RmTp.c	   103   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   104  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_ThresholdReached(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   105  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   106  
; ..\component\PduR\Implementation\PduR_RmTp.c	   107  #if(PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   108  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   109     PduR_RmTp_MultipleSourceHandler_Transmit
; ..\component\PduR\Implementation\PduR_RmTp.c	   110  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   111  /*! \brief       The function is called by the PduR to trigger the transmission on the destination buses in case of a
; ..\component\PduR\Implementation\PduR_RmTp.c	   112   *                FanIn Transport Protocol Routing.
; ..\component\PduR\Implementation\PduR_RmTp.c	   113   *   \details     The PDU Router evaluates the Gw I-PDU handle and performs appropriate handle and port conversion.
; ..\component\PduR\Implementation\PduR_RmTp.c	   114   *                The call is routed to multiple TP module using the appropriate I-PDU handle of the destination layer.
; ..\component\PduR\Implementation\PduR_RmTp.c	   115   *   \param[in]   rmDestRomIdx             ID of the transmitted GwTp I-PDU.
; ..\component\PduR\Implementation\PduR_RmTp.c	   116   *   \param[in]   info                     the pointer to the data
; ..\component\PduR\Implementation\PduR_RmTp.c	   117   *   \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   118   *   \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   119   *   \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   120   *   \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   121  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   122  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_MultipleSourceHandler_Transmit(PduR_RmDestRomIterType rmDestRomIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info);
; ..\component\PduR\Implementation\PduR_RmTp.c	   123  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   124  
; ..\component\PduR\Implementation\PduR_RmTp.c	   125  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   126  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   127    PduR_RmTp_CopyTxData
; ..\component\PduR\Implementation\PduR_RmTp.c	   128  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   129  /*! \brief      This function is called by the PduR GwTp to query the transmit data of an I-PDU segment.
; ..\component\PduR\Implementation\PduR_RmTp.c	   130   *  \details    Each call to this function copies the next part of the transmit.
; ..\component\PduR\Implementation\PduR_RmTp.c	   131   *  \param[in]      rmGDestRomIdx       ID of the GwTp I-PDU that will be transmitted.
; ..\component\PduR\Implementation\PduR_RmTp.c	   132   *  \param[in]      info              Pointer to the destination buffer and the number of bytes to copy.
; ..\component\PduR\Implementation\PduR_RmTp.c	   133   *                                In case of gateway the PDU Router module will copy otherwise the source upper layer
; ..\component\PduR\Implementation\PduR_RmTp.c	   134   *                                module will copy the data. If not enough transmit data is available, no data is copied.
; ..\component\PduR\Implementation\PduR_RmTp.c	   135   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   136   *                                A copy size of 0 can be used to indicate state changes in the retry parameter.
; ..\component\PduR\Implementation\PduR_RmTp.c	   137   *  \param[in]  retry             not supported
; ..\component\PduR\Implementation\PduR_RmTp.c	   138   *  \param[out] availableDataPtr  Indicates the remaining number of bytes that are available in the PduR Tx buffer.
; ..\component\PduR\Implementation\PduR_RmTp.c	   139   *                                AvailableTxDataCntPtr can be used by TP modules that support dynamic payload lengths
; ..\component\PduR\Implementation\PduR_RmTp.c	   140   *                                (e.g. Iso FrTp) to determine the size of the following CFs.
; ..\component\PduR\Implementation\PduR_RmTp.c	   141   *  \return     BufReq_ReturnType
; ..\component\PduR\Implementation\PduR_RmTp.c	   142   *              BUFREQ_OK         The data has been copied to the transmit buffer successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   143   *              BUFREQ_E_NOT_OK   PduR_Init() has not been called
; ..\component\PduR\Implementation\PduR_RmTp.c	   144   *                                or the GwTpTxPduId is not valid
; ..\component\PduR\Implementation\PduR_RmTp.c	   145   *                                or the GwTpTxPduId is not forwarded in this identity
; ..\component\PduR\Implementation\PduR_RmTp.c	   146   *                                or the info is not valid
; ..\component\PduR\Implementation\PduR_RmTp.c	   147   *                                or the request was not accepted by the upper layer and no data has been copied.
; ..\component\PduR\Implementation\PduR_RmTp.c	   148   *              BUFREQ_E_BUSY     The request cannot be processed because the TX data is not available
; ..\component\PduR\Implementation\PduR_RmTp.c	   149   *                                and no data has been copied. The TP layer might retry later the copy process.
; ..\component\PduR\Implementation\PduR_RmTp.c	   150   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   151   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   152   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   153   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   154   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   155  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   156  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyTxData(PduR_RmGDestRomIdxOfTxTp2SrcType rmGDestRomIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	   157                                                                       P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	   158                                                                       P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   159  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   160  
; ..\component\PduR\Implementation\PduR_RmTp.c	   161  #if (PDUR_METADATA_SUPPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   162  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   163   * PduR_RmTp_StartOfReceptionQueueMetaData
; ..\component\PduR\Implementation\PduR_RmTp.c	   164   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   165  /*! \brief         This function writes meta data to the Tp buffer and adjusts the info->SduLength
; ..\component\PduR\Implementation\PduR_RmTp.c	   166   *                 if meta data is used.
; ..\component\PduR\Implementation\PduR_RmTp.c	   167   *  \details       -
; ..\component\PduR\Implementation\PduR_RmTp.c	   168   *  \param[in]     rmSrcIdx         Routing Manager Src Index
; ..\component\PduR\Implementation\PduR_RmTp.c	   169   *  \param[in]     pduLength        meta data length. (Meta data length are constant ROM)
; ..\component\PduR\Implementation\PduR_RmTp.c	   170   *  \param[in,out] sduDataPtr       Meta Data pointer .
; ..\component\PduR\Implementation\PduR_RmTp.c	   171   *  \param[out]    bufferSizePtr    pointer to data structure which will be used to return the size of the Pdu which
; ..\component\PduR\Implementation\PduR_RmTp.c	   172                                      can be copied to the buffer.
; ..\component\PduR\Implementation\PduR_RmTp.c	   173   *  \return        BUFREQ_OK        Buffer request was successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   174   *                 BUFREQ_E_NOT_OK  Currently no buffer available
; ..\component\PduR\Implementation\PduR_RmTp.c	   175   *  \pre           -
; ..\component\PduR\Implementation\PduR_RmTp.c	   176   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   177  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReceptionQueueMetaData(PduR_RmSrcRomIterType rmSrcIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	   178                                                                                          PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	   179                                                                                          SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   180  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   181  
; ..\component\PduR\Implementation\PduR_RmTp.c	   182  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   183  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   184   * PduR_RmTp_AssignAssociatedBuffer2Destination
; ..\component\PduR\Implementation\PduR_RmTp.c	   185   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   186  /*! \brief       Assign the associated buffer to the destinations before the Transmit function is called.
; ..\component\PduR\Implementation\PduR_RmTp.c	   187   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   188   *  \param[in]   bmTxBufferRomIdx      Index of the Tx buffer
; ..\component\PduR\Implementation\PduR_RmTp.c	   189   *  \param[in]   rmSrcIdx              Routing Manager Src Index
; ..\component\PduR\Implementation\PduR_RmTp.c	   190   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   191   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   192   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   193   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   194   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   195  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_AssignAssociatedBuffer2Destination(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   196  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   197  
; ..\component\PduR\Implementation\PduR_RmTp.c	   198  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   199  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   200   * PduR_RmTp_TriggerTransmissionOfDestinations
; ..\component\PduR\Implementation\PduR_RmTp.c	   201   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   202  /*! \brief       Trigger the transmission on all destinations if they are enabled, except for those which are unbuffered
; ..\component\PduR\Implementation\PduR_RmTp.c	   203   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   204   *  \param[in]   rmSrcIdx       Routing Manager Src Index
; ..\component\PduR\Implementation\PduR_RmTp.c	   205   *  \return      E_OK           Transmission was successful on at least one destination
; ..\component\PduR\Implementation\PduR_RmTp.c	   206   *               E_NOT_OK       Transmission was not successful on any destination
; ..\component\PduR\Implementation\PduR_RmTp.c	   207   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   208   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   209   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   210   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   211   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   212  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_TriggerTransmissionOfDestinations(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   213  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   214  
; ..\component\PduR\Implementation\PduR_RmTp.c	   215  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   216  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   217   * PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx
; ..\component\PduR\Implementation\PduR_RmTp.c	   218   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   219  /*! \brief       This function returns the currently written FmFifoElement index of this source Pdu.
; ..\component\PduR\Implementation\PduR_RmTp.c	   220   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   221   *  \param[in]   rmSrcIdx            Routing Manager Src Index
; ..\component\PduR\Implementation\PduR_RmTp.c	   222   *  \param[out]  fmFifoElementRamIdx fifo element index
; ..\component\PduR\Implementation\PduR_RmTp.c	   223   *  \return      E_OK                the read fmFifoElementRamIdx is valid and can be used
; ..\component\PduR\Implementation\PduR_RmTp.c	   224   *               E_NOT_OK            the read fmFifoElementRamIdx is invalid and can not be used
; ..\component\PduR\Implementation\PduR_RmTp.c	   225   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   226   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   227   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   228   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   229   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   230  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx(PduR_RmSrcRomIterType rmSrcIdx, P2VAR(PduR_FmFifoElementRamIterType, AUTOMATIC, PDUR_APPL_DATA) fmFifoElementRamIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   231  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   232  
; ..\component\PduR\Implementation\PduR_RmTp.c	   233  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   234  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   235   * PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx
; ..\component\PduR\Implementation\PduR_RmTp.c	   236   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   237  /*! \brief       This function returns the currently written bmTxBuffer index of this source Pdu.
; ..\component\PduR\Implementation\PduR_RmTp.c	   238   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   239   *  \param[in]   rmSrcIdx            Routing Manager Src Index
; ..\component\PduR\Implementation\PduR_RmTp.c	   240   *  \param[out]  bmTxBufferRomIdx    tx buffer index
; ..\component\PduR\Implementation\PduR_RmTp.c	   241   *  \return      E_OK                the read bmTxBufferRomIdx is valid and can be used
; ..\component\PduR\Implementation\PduR_RmTp.c	   242   *               E_NOT_OK            the read bmTxBufferRomIdx is invalid and can not be used
; ..\component\PduR\Implementation\PduR_RmTp.c	   243   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   244   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   245   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   246   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   247   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   248  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx(PduR_RmSrcRomIterType rmSrcIdx, P2VAR(PduR_BmTxBufferRomIterType, AUTOMATIC, PDUR_APPL_DATA) bmTxBufferRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   249  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   250  
; ..\component\PduR\Implementation\PduR_RmTp.c	   251  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   252  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   253   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   254   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   255  /*! \brief This function is called if the transmission is finished o set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   256   *         trigger the next pending routing
; ..\component\PduR\Implementation\PduR_RmTp.c	   257   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   258   *  \param[in]   fmFifoRomIdx fifo id
; ..\component\PduR\Implementation\PduR_RmTp.c	   259   *  \param[out]  result   result of the transmission.
; ..\component\PduR\Implementation\PduR_RmTp.c	   260   *               E_OK     successful
; ..\component\PduR\Implementation\PduR_RmTp.c	   261   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   262   *  \param[in]   memIdx  memory section index
; ..\component\PduR\Implementation\PduR_RmTp.c	   263   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   264   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   265   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   266   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   267   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   268  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   269  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   270  
; ..\component\PduR\Implementation\PduR_RmTp.c	   271  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   272  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   273   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   274   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   275  /*! \brief This function is called if the transmission is finished o set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   276   *         trigger the next pending routing
; ..\component\PduR\Implementation\PduR_RmTp.c	   277   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   278   *  \param[in]   fmFifoRomIdx fifo id
; ..\component\PduR\Implementation\PduR_RmTp.c	   279   *  \param[out]  result   result of the transmission.
; ..\component\PduR\Implementation\PduR_RmTp.c	   280   *               E_OK     successful
; ..\component\PduR\Implementation\PduR_RmTp.c	   281   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   282   *  \param[in]   memIdx  memory section index
; ..\component\PduR\Implementation\PduR_RmTp.c	   283   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   284   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   285   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   286   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   287   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   288  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   289  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   290  
; ..\component\PduR\Implementation\PduR_RmTp.c	   291  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   292  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   293   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	   294   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   295  /*! \brief This function is called if the transmission is finished o set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   296   *         trigger the next pending routing
; ..\component\PduR\Implementation\PduR_RmTp.c	   297   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   298   *  \param[in]   fmFifoRomIdx fifo id
; ..\component\PduR\Implementation\PduR_RmTp.c	   299   *  \param[out]  result   result of the transmission.
; ..\component\PduR\Implementation\PduR_RmTp.c	   300   *               E_OK     successful
; ..\component\PduR\Implementation\PduR_RmTp.c	   301   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   302   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   303   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   304   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   305   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   306   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   307  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler_FatalError(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   308  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   309  
; ..\component\PduR\Implementation\PduR_RmTp.c	   310  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   311  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   312   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	   313   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   314  /*! \brief       Helper function which checks if the Pdu from this rmSrc is ready to transmit depending on the TpTxSm state.
; ..\component\PduR\Implementation\PduR_RmTp.c	   315   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   316   *  \param[in]   memIdx memory section index
; ..\component\PduR\Implementation\PduR_RmTp.c	   317   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   318   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   319   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   320   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   321   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   322  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE)PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler(PduR_FmFifoRamIterType fmFifoRomIdx, PduR_RmSrcRomIterType rmSrcIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   323  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   324  
; ..\component\PduR\Implementation\PduR_RmTp.c	   325  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   326  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   327   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_RM_TX_IDLE_OR_RM_TX_RECEPTION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   328   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   329  /*! \brief This function is called to check if the threshold is reached and the transmission could be triggered
; ..\component\PduR\Implementation\PduR_RmTp.c	   330   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   331   *  \param[in]     rmSrcIdx Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   332   *  \pre           -
; ..\component\PduR\Implementation\PduR_RmTp.c	   333   *  \context       TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   334   *  \reentrant     TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   335   *  \synchronous   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   336   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   337  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_RM_TX_IDLE_OR_RM_TX_RECEPTION_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   338  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   339  
; ..\component\PduR\Implementation\PduR_RmTp.c	   340  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   341  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   342   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_NoAction
; ..\component\PduR\Implementation\PduR_RmTp.c	   343   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   344  /*! \brief        This function is called if nothing shall be done.
; ..\component\PduR\Implementation\PduR_RmTp.c	   345   *  \details      -
; ..\component\PduR\Implementation\PduR_RmTp.c	   346   *  \param[in]    rmSrcIdx Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   347   *  \pre          -
; ..\component\PduR\Implementation\PduR_RmTp.c	   348   *  \context      TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   349   *  \reentrant    TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   350   *  \synchronous  TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   351   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   352  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_NoAction(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   353  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   354  
; ..\component\PduR\Implementation\PduR_RmTp.c	   355  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   356  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   357   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	   358   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   359  /*! \brief        This function is called if the TpTx state is in an invalid state. This shall not happen during normal operation
; ..\component\PduR\Implementation\PduR_RmTp.c	   360   *  \details      -
; ..\component\PduR\Implementation\PduR_RmTp.c	   361   *  \param[in]    rmSrcIdx Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   362   *  \pre          -
; ..\component\PduR\Implementation\PduR_RmTp.c	   363   *  \context      TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   364   *  \reentrant    TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   365   *  \synchronous  TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   366   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   367  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_FatalError(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   368  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   369  
; ..\component\PduR\Implementation\PduR_RmTp.c	   370  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   371  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   372   * PduR_RmTp_CopyRxData_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	   373   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   374  /*! \brief       Helper function which copies the rx data from this rmSrc depending on the TpRxSm state.
; ..\component\PduR\Implementation\PduR_RmTp.c	   375   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   376   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   377   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   378   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   379   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   380   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   381  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CONST) PduR_RmTp_CopyRxData_TpRxSmStateHandler(PduR_RmSrcRomIdxOfRxTp2DestType rmSrcIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   382  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   383  
; ..\component\PduR\Implementation\PduR_RmTp.c	   384  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   385  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   386    PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   387  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   388  /*! \brief     This function is called by the PduR if data has to be copied to the tx buffer
; ..\component\PduR\Implementation\PduR_RmTp.c	   389   *  \details   Several calls may be made during one transportation of an I-PDU.
; ..\component\PduR\Implementation\PduR_RmTp.c	   390   *             Rx State machine in state "Active"
; ..\component\PduR\Implementation\PduR_RmTp.c	   391   *  \param[in]  rmSrcIdx          Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   392    * \param[in] pduLength         length to copy.
; ..\component\PduR\Implementation\PduR_RmTp.c	   393   *  \param[in] sduDataPtr        data pointer (containing the data to be copied by PDU Router module in case of gateway
; ..\component\PduR\Implementation\PduR_RmTp.c	   394   *                               or upper layer module in case of reception).
; ..\component\PduR\Implementation\PduR_RmTp.c	   395   *  \param[out] bufferSizePtr     Available receive buffer after data has been copied.
; ..\component\PduR\Implementation\PduR_RmTp.c	   396   *  \return    BufReq_ReturnType
; ..\component\PduR\Implementation\PduR_RmTp.c	   397   *             BUFREQ_OK         Copy data were successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   398   *             BUFREQ_E_NOT_OK   Copy data fails.
; ..\component\PduR\Implementation\PduR_RmTp.c	   399   *             BUFREQ_E_BUSY     Currently no buffer of the requested size is available.
; ..\component\PduR\Implementation\PduR_RmTp.c	   400   *                               It's up the requester to retry request for a certain time.
; ..\component\PduR\Implementation\PduR_RmTp.c	   401   *                               The request was not accepted by the upper layer.
; ..\component\PduR\Implementation\PduR_RmTp.c	   402   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   403   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   404   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   405   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   406   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   407  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   408  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	   409                                                                                          SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   410  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   411  
; ..\component\PduR\Implementation\PduR_RmTp.c	   412  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   413  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   414    PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ABORTED
; ..\component\PduR\Implementation\PduR_RmTp.c	   415  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   416  /*! \brief     This function is called if data has to be copied to the tx buffer but the routing is
; ..\component\PduR\Implementation\PduR_RmTp.c	   417   *             already aborted.
; ..\component\PduR\Implementation\PduR_RmTp.c	   418   *  \details   Rx State machine in state "Aborted"
; ..\component\PduR\Implementation\PduR_RmTp.c	   419   *  \param[in]  rmSrcIdx           Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   420   *  \param[in] pduLength         length to copy.
; ..\component\PduR\Implementation\PduR_RmTp.c	   421   *  \param[in] sduDataPtr        data pointer (containing the data to be copied by PDU Router module in case of gateway
; ..\component\PduR\Implementation\PduR_RmTp.c	   422   *                               or upper layer module in case of reception).
; ..\component\PduR\Implementation\PduR_RmTp.c	   423   *  \param[out] bufferSizePtr     Available receive buffer after data has been copied.
; ..\component\PduR\Implementation\PduR_RmTp.c	   424   *  \return    BufReq_ReturnType
; ..\component\PduR\Implementation\PduR_RmTp.c	   425   *             BUFREQ_E_NOT_OK   Copy data fails because routing is already aborted.
; ..\component\PduR\Implementation\PduR_RmTp.c	   426   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   427   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   428   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   429   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   430   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   431  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   432  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ABORTED(PduR_RmSrcRomIterType rmSrcIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	   433                                                                                           SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   434  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   435  
; ..\component\PduR\Implementation\PduR_RmTp.c	   436  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   437  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   438    PduR_RmTp_CopyRxData_TpRxSmStateHandler_UnexpectedCall
; ..\component\PduR\Implementation\PduR_RmTp.c	   439  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   440  /*! \brief       This function is called by the PduR if data has to be to copied to the tx buffer unexpectedly.
; ..\component\PduR\Implementation\PduR_RmTp.c	   441   *  \details     Rx State machine in state "Idle"
; ..\component\PduR\Implementation\PduR_RmTp.c	   442   *  \param[in]   rmSrcIdx          Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   443    * \param[in]   pduLength         length to copy.
; ..\component\PduR\Implementation\PduR_RmTp.c	   444   *  \param[in]   sduDataPtr        data pointer (containing the data to be copied by PDU Router module in case of gateway
; ..\component\PduR\Implementation\PduR_RmTp.c	   445   *                                 or upper layer module in case of reception).
; ..\component\PduR\Implementation\PduR_RmTp.c	   446   *  \param[out]  bufferSizePtr     Available receive buffer after data has been copied.
; ..\component\PduR\Implementation\PduR_RmTp.c	   447   *  \return      BufReq_ReturnType
; ..\component\PduR\Implementation\PduR_RmTp.c	   448   *               BUFREQ_E_NOT_OK   Copy data fails because the RxSM is still idle. A StartOfReception is expected.
; ..\component\PduR\Implementation\PduR_RmTp.c	   449   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   450   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   451   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   452   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   453   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   454  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   455  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData_TpRxSmStateHandler_UnexpectedCall(PduR_RmSrcRomIterType rmSrcIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	   456                                                                                            SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   457  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   458  
; ..\component\PduR\Implementation\PduR_RmTp.c	   459  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   460  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   461   * PduR_RmTp_FinishReception_TpTxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	   462   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   463  /*! \brief       Helper function which finishes the reception in the corresponding queue depending on the TpTxSm state.
; ..\component\PduR\Implementation\PduR_RmTp.c	   464   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   465   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   466   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   467   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   468   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   469   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   470  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   471  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   472  
; ..\component\PduR\Implementation\PduR_RmTp.c	   473  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   474  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   475   * PduR_RmTp_FinishReception_TpTxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	   476   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   477  /*! \brief This function is called if the reception is finished to set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   478   *         to trigger the transmission
; ..\component\PduR\Implementation\PduR_RmTp.c	   479   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   480   *  \param[in]   rmSrcIdx Routing Manager source Id.
; ..\component\PduR\Implementation\PduR_RmTp.c	   481   *  \param[out]  result  result of the reception.
; ..\component\PduR\Implementation\PduR_RmTp.c	   482   *               E_OK    successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   483   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   484   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   485   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   486   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   487   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   488   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   489  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_FatalError(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   490  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   491  
; ..\component\PduR\Implementation\PduR_RmTp.c	   492  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   493  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   494   * PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_TRANSMISSION_FINISHED
; ..\component\PduR\Implementation\PduR_RmTp.c	   495   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   496  /*! \brief This function is called if the reception is finished to set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   497   *         to trigger the transmission
; ..\component\PduR\Implementation\PduR_RmTp.c	   498   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   499   *  \param[in]   rmSrcIdx Routing Manager source Id.
; ..\component\PduR\Implementation\PduR_RmTp.c	   500   *  \param[out]  result   result of the reception.
; ..\component\PduR\Implementation\PduR_RmTp.c	   501   *               E_OK     successful
; ..\component\PduR\Implementation\PduR_RmTp.c	   502   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   503   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   504   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   505   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   506   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   507   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   508  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_TRANSMISSION_FINISHED(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   509  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   510  
; ..\component\PduR\Implementation\PduR_RmTp.c	   511  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   512  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   513   * PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   514   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   515  /*! \brief This function is called if the reception is finished to set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   516   *         to trigger the transmissiong
; ..\component\PduR\Implementation\PduR_RmTp.c	   517   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   518   *  \param[in]   rmSrcIdx Routing Manager source Id.
; ..\component\PduR\Implementation\PduR_RmTp.c	   519   *  \param[out]  result   result of the reception.
; ..\component\PduR\Implementation\PduR_RmTp.c	   520   *               E_OK     successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   521   *               E_NO_OK  not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   522   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   523   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   524   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   525   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   526   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   527  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   528  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   529  
; ..\component\PduR\Implementation\PduR_RmTp.c	   530  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   531  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   532   * PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   533   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   534  /*! \brief This function is called if the reception is finished to set the suitable state a and
; ..\component\PduR\Implementation\PduR_RmTp.c	   535   *         to trigger the transmission
; ..\component\PduR\Implementation\PduR_RmTp.c	   536   *  \details -
; ..\component\PduR\Implementation\PduR_RmTp.c	   537   *  \param[in]   rmSrcIdx Routing Manager source Id.
; ..\component\PduR\Implementation\PduR_RmTp.c	   538   *  \param[out]  result  result of the reception.
; ..\component\PduR\Implementation\PduR_RmTp.c	   539   *               E_OK    successful
; ..\component\PduR\Implementation\PduR_RmTp.c	   540   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   541   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   542   *  \context     TASK|ISR1|ISR2.
; ..\component\PduR\Implementation\PduR_RmTp.c	   543   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   544   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   545   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   546  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   547  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   548  
; ..\component\PduR\Implementation\PduR_RmTp.c	   549  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   550  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   551   * PduR_RmTp_CancelReceive_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	   552   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   553  /*! \brief       Helper function which cancels the reception in the corresponding queue depending on the TpRxSm state.
; ..\component\PduR\Implementation\PduR_RmTp.c	   554   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   555   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   556   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   557   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   558   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   559   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   560  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelReceive_TpRxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   561  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   562  
; ..\component\PduR\Implementation\PduR_RmTp.c	   563  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   564  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   565   * PduR_RmTp_CancelReceive_TpRxSmStateHandler_RM_RX_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	   566   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   567  /*! \brief      The function is called to cancel a reception if a routing is disabled.
; ..\component\PduR\Implementation\PduR_RmTp.c	   568   *  \details    -
; ..\component\PduR\Implementation\PduR_RmTp.c	   569   *  \param[in]   rmSrcIdx    Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   570   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   571   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   572   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   573   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   574  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   575  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelReceive_TpRxSmStateHandler_RM_RX_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   576  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   577  
; ..\component\PduR\Implementation\PduR_RmTp.c	   578  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   579  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   580   * PduR_RmTp_CancelReceive_TpRxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	   581   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   582  /*! \brief       If this function is called something went totally wrong.
; ..\component\PduR\Implementation\PduR_RmTp.c	   583   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   584   *  \param[in]   rmSrcIdx   Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   585   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   586   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   587   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   588   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   589  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   590  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelReceive_TpRxSmStateHandler_FatalError(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   591  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   592  
; ..\component\PduR\Implementation\PduR_RmTp.c	   593  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   594  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   595   * PduR_RmTp_TpRxIndication_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	   596   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   597  /*! \brief       Helper function which handels the TpRxIndication for the corresponding queue depending on the TpRxSm state.
; ..\component\PduR\Implementation\PduR_RmTp.c	   598   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   599   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   600   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   601   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   602   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   603   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   604  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication_TpRxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   605  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   606  
; ..\component\PduR\Implementation\PduR_RmTp.c	   607  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   608  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   609   * PduR_RmTp_TpRxIndication_TpRxSmStateHandler_UnexpectedCall
; ..\component\PduR\Implementation\PduR_RmTp.c	   610   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   611  /*! \brief       The function is called by the PduR GwTp to indicate the complete reception of a GwTp SDU
; ..\component\PduR\Implementation\PduR_RmTp.c	   612   *               or to finish the reception if an error occurs.
; ..\component\PduR\Implementation\PduR_RmTp.c	   613   *  \details     Rx State machine in state "Active or Aborted"
; ..\component\PduR\Implementation\PduR_RmTp.c	   614   *  \param[in]   rmSrcIdx             Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   615   *  \param[out]  result                          Result of the TP reception.\n
; ..\component\PduR\Implementation\PduR_RmTp.c	   616   *               E_OK                            The TP reception has been completed successfully.\n
; ..\component\PduR\Implementation\PduR_RmTp.c	   617   *               E_NOT_OK                        The TP reception was failing.
; ..\component\PduR\Implementation\PduR_RmTp.c	   618   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   619   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   620   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   621   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   622   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   623  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   624  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication_TpRxSmStateHandler_UnexpectedCall(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   625  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   626  
; ..\component\PduR\Implementation\PduR_RmTp.c	   627  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   628  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   629   * PduR_RmTp_TpRxIndication_TpRxSmStateHandler_RM_RX_ACTIVE_OR_RM_RX_ABORTED
; ..\component\PduR\Implementation\PduR_RmTp.c	   630   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   631  /*! \brief       The function is called by the PduR GwTp if an indication is called unexpectedly
; ..\component\PduR\Implementation\PduR_RmTp.c	   632   *  \details     Rx State machine in state "Idle"
; ..\component\PduR\Implementation\PduR_RmTp.c	   633   *  \param[in]   rmSrcIdx              Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   634   *  \param[out]  result                Result of the TP reception.\n
; ..\component\PduR\Implementation\PduR_RmTp.c	   635   *               E_OK    successful
; ..\component\PduR\Implementation\PduR_RmTp.c	   636   *               E_NO_OK not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   637   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   638   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   639   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   640   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   641   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   642  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   643  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication_TpRxSmStateHandler_RM_RX_ACTIVE_OR_RM_RX_ABORTED(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   644  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   645  
; ..\component\PduR\Implementation\PduR_RmTp.c	   646  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   647  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   648   * PduR_RmTp_StartOfReception_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	   649   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   650  /*! \brief       Helper function which handels the StartOfReception for the corresponding queue depending on the TpRxSm state.
; ..\component\PduR\Implementation\PduR_RmTp.c	   651   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   652   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   653   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   654   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   655   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   656   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   657  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception_TpRxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, PduLengthType TpSduLength, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   658  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   659  
; ..\component\PduR\Implementation\PduR_RmTp.c	   660  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM  == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   661  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   662   * PduR_RmTp_StartOfReception_TpRxSmStateHandler_RM_RX_IDLE
; ..\component\PduR\Implementation\PduR_RmTp.c	   663   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   664  /*! \brief      The function is called by the PduR GwTp to start a reception of a GwTp SDU
; ..\component\PduR\Implementation\PduR_RmTp.c	   665   *  \details    Rx State machine in state "IDLE" The call is routed to RxSm
; ..\component\PduR\Implementation\PduR_RmTp.c	   666   *  \param[in]     rmSrcIdx                      Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   667   *  \param[in]     info                            Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\component\PduR\Implementation\PduR_RmTp.c	   668   *  \param[in]     TpSduLength       Length of the entire GwTp TP SDU which will be received
; ..\component\PduR\Implementation\PduR_RmTp.c	   669   *  \param[out]    bufferSizePtr                   Pointer to the receive buffer in the receiving module.
; ..\component\PduR\Implementation\PduR_RmTp.c	   670   *  \return      BufReq_ReturnType
; ..\component\PduR\Implementation\PduR_RmTp.c	   671   *               BUFREQ_OK         routing accepted and buffer allocated.
; ..\component\PduR\Implementation\PduR_RmTp.c	   672   *               BUFREQ_E_NOT_OK   routing not accepted (FIFO full) no Tp buffer available.
; ..\component\PduR\Implementation\PduR_RmTp.c	   673   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   674   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   675   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   676   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   677   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   678  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   679  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception_TpRxSmStateHandler_RM_RX_IDLE(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	   680                                                                                              PduLengthType TpSduLength, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   681  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   682  
; ..\component\PduR\Implementation\PduR_RmTp.c	   683  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM  == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   684  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   685   * PduR_RmTp_StartOfReception_TpRxSmStateHandler_UnexpectedCall
; ..\component\PduR\Implementation\PduR_RmTp.c	   686   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   687  /*! \brief      The function is called if the start of reception is called unexpectedly.
; ..\component\PduR\Implementation\PduR_RmTp.c	   688   *  \details    Rx State machine in state "Active or Aborted"
; ..\component\PduR\Implementation\PduR_RmTp.c	   689   *  \param[in]  rmSrcIdx            Routing Manager source Id
; ..\component\PduR\Implementation\PduR_RmTp.c	   690   *  \param[in]  info                Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\component\PduR\Implementation\PduR_RmTp.c	   691   *  \param[in]  TpSduLength         Length of the entire GwTp TP SDU which will be received
; ..\component\PduR\Implementation\PduR_RmTp.c	   692   *  \param[out] bufferSizePtr       Pointer to the receive buffer in the receiving module.
; ..\component\PduR\Implementation\PduR_RmTp.c	   693   *  \return      BufReq_ReturnType
; ..\component\PduR\Implementation\PduR_RmTp.c	   694   *               BUFREQ_E_NOT_OK   unexpected call
; ..\component\PduR\Implementation\PduR_RmTp.c	   695   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   696   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   697   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   698   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   699   *  \trace       SPEC-1096, SPEC-2020151
; ..\component\PduR\Implementation\PduR_RmTp.c	   700  ***********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   701  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception_TpRxSmStateHandler_UnexpectedCall(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	   702                                                                                                  PduLengthType TpSduLength, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr);
; ..\component\PduR\Implementation\PduR_RmTp.c	   703  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   704  
; ..\component\PduR\Implementation\PduR_RmTp.c	   705  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   706  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   707   * PduR_RmTp_ActivateNext
; ..\component\PduR\Implementation\PduR_RmTp.c	   708   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   709  /*! \brief       This function is called to activated the next pending element in the FiFo.
; ..\component\PduR\Implementation\PduR_RmTp.c	   710   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   711   *  \param[in]   fmFifoRamIdx        Index of the destination FIFO.
; ..\component\PduR\Implementation\PduR_RmTp.c	   712   *  \param[in]   memIdx              memory section index
; ..\component\PduR\Implementation\PduR_RmTp.c	   713   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   714   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   715   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   716   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   717   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   718  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_ActivateNext(PduR_FmFifoRamIterType fmFifoRamIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   719  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   720  
; ..\component\PduR\Implementation\PduR_RmTp.c	   721  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   722   /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   723   * PduR_RmTp_CancelTransmitOnDestinations
; ..\component\PduR\Implementation\PduR_RmTp.c	   724   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   725  /*! \brief       This function is called to cancel all destination transmit calls of a source.
; ..\component\PduR\Implementation\PduR_RmTp.c	   726   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   727   *  \param[in]   rmSrcIdx     rmSrc index
; ..\component\PduR\Implementation\PduR_RmTp.c	   728   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   729   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   730   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   731   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   732   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   733  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelTransmitOnDestinations(PduR_RmSrcRomIterType rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   734  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   735  
; ..\component\PduR\Implementation\PduR_RmTp.c	   736  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   737   /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   738   * PduR_RmTp_GetRmSrcRomIdxOfOldestFmFifoElementSafe
; ..\component\PduR\Implementation\PduR_RmTp.c	   739   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   740  /*! \brief       Gets the rmSrc index of the oldest fifo element with optional error detection.
; ..\component\PduR\Implementation\PduR_RmTp.c	   741   *  \details     -
; ..\component\PduR\Implementation\PduR_RmTp.c	   742   *  \param[in]   fmFifoRomIdx fmFifo index
; ..\component\PduR\Implementation\PduR_RmTp.c	   743   *  \param[out]  rmSrcIdx     rmSrc index
; ..\component\PduR\Implementation\PduR_RmTp.c	   744   *  \param[in]   memIdx       memory section index
; ..\component\PduR\Implementation\PduR_RmTp.c	   745   *  \return      E_OK         The read was successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   746   *               E_NOT_OK     The read was not successful.
; ..\component\PduR\Implementation\PduR_RmTp.c	   747   *  \pre         -
; ..\component\PduR\Implementation\PduR_RmTp.c	   748   *  \context     TASK|ISR1|ISR2
; ..\component\PduR\Implementation\PduR_RmTp.c	   749   *  \reentrant   TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   750   *  \synchronous TRUE
; ..\component\PduR\Implementation\PduR_RmTp.c	   751   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   752  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_GetRmSrcRomIdxOfOldestFmFifoElementSafe(PduR_FmFifoRomIterType fmFifoRomIdx, P2VAR(PduR_RmSrcRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmSrcRomIdx, PduR_MemIdxType memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   753  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   754  
; ..\component\PduR\Implementation\PduR_RmTp.c	   755  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   756   *  LOCAL FUNCTIONS
; ..\component\PduR\Implementation\PduR_RmTp.c	   757   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   758  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   759  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   760   * PduR_RmTp_Init
; ..\component\PduR\Implementation\PduR_RmTp.c	   761  **********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   762  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	   763   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	   764   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   765   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   766   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   767  FUNC(void, PDUR_CODE) PduR_RmTp_Init(PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	   768  {
; ..\component\PduR\Implementation\PduR_RmTp.c	   769    {
; ..\component\PduR\Implementation\PduR_RmTp.c	   770      PduR_RmGDestTpTxStateRamIterType rmGDestTpTxStateRamTpIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	   771      for(rmGDestTpTxStateRamTpIdx = 0u; rmGDestTpTxStateRamTpIdx < PduR_GetSizeOfRmGDestTpTxStateRam(memIdx); rmGDestTpTxStateRamTpIdx++)
; ..\component\PduR\Implementation\PduR_RmTp.c	   772      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   773        PduR_SetTpTxInstSmStateOfRmGDestTpTxStateRam(rmGDestTpTxStateRamTpIdx, PDUR_RM_TXINST_IDLE_TPTXINSTSMSTATEOFRMGDESTTPTXSTATERAM, memIdx); /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	   774      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   775    }
; ..\component\PduR\Implementation\PduR_RmTp.c	   776    {
; ..\component\PduR\Implementation\PduR_RmTp.c	   777      PduR_RmBufferedTpPropertiesRomIterType rmBufferedTpPropertiesRamIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	   778      for(rmBufferedTpPropertiesRamIdx = 0u; rmBufferedTpPropertiesRamIdx < PduR_GetSizeOfRmBufferedTpPropertiesRam(memIdx); rmBufferedTpPropertiesRamIdx++)
; ..\component\PduR\Implementation\PduR_RmTp.c	   779      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   780        PduR_SetTpRxSmStateOfRmBufferedTpPropertiesRam(rmBufferedTpPropertiesRamIdx, PDUR_RM_RX_IDLE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM, memIdx);     /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	   781        PduR_SetFmFifoElementRamIdxOfRmBufferedTpPropertiesRam(rmBufferedTpPropertiesRamIdx, PDUR_NO_FMFIFOELEMENTRAMIDXOFRMBUFFEREDTPPROPERTIESRAM, memIdx);     /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	   782      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   783    }
; ..\component\PduR\Implementation\PduR_RmTp.c	   784  }
; ..\component\PduR\Implementation\PduR_RmTp.c	   785  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   786  
; ..\component\PduR\Implementation\PduR_RmTp.c	   787  #if(PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   788  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   789   * PduR_RmTp_MultipleSourceHandler_Transmit
; ..\component\PduR\Implementation\PduR_RmTp.c	   790   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   791  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	   792   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	   793   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   794   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   795   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   796   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   797   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   798   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   799   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   800  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_MultipleSourceHandler_Transmit(PduR_RmDestRomIterType rmDestRomIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)        /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	   801  {
; ..\component\PduR\Implementation\PduR_RmTp.c	   802    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	   803    PduR_Lock_LockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   804    {
; ..\component\PduR\Implementation\PduR_RmTp.c	   805      PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   806  
; ..\component\PduR\Implementation\PduR_RmTp.c	   807  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   808      if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	   809      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   810        PduR_RmGDestNto1InfoRamIdxOfRmGDestRomType rmGDestNto1InfoIdx = PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   811        PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   812  
; ..\component\PduR\Implementation\PduR_RmTp.c	   813        if(!PduR_IsTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, memIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	   814        {
; ..\component\PduR\Implementation\PduR_RmTp.c	   815          PduR_SetRmDestRomIdxOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, (PduR_RmDestRomIdxOfRmGDestNto1InfoRamType) rmDestRomIdx, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	   816          PduR_SetTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, TRUE, memIdx);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	   817  
; ..\component\PduR\Implementation\PduR_RmTp.c	   818          retVal = PduR_GetLoTpTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info);     /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	   819          if(retVal != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	   820          {
; ..\component\PduR\Implementation\PduR_RmTp.c	   821            PduR_Rm_MultipleSourceHandler_Reset(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   822          }
; ..\component\PduR\Implementation\PduR_RmTp.c	   823        }
; ..\component\PduR\Implementation\PduR_RmTp.c	   824      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   825      else
; ..\component\PduR\Implementation\PduR_RmTp.c	   826  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   827      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   828        retVal = PduR_GetLoTpTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx), info);       /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	   829      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   830    }
; ..\component\PduR\Implementation\PduR_RmTp.c	   831    PduR_Lock_UnlockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   832  
; ..\component\PduR\Implementation\PduR_RmTp.c	   833    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	   834  }
; ..\component\PduR\Implementation\PduR_RmTp.c	   835  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   836  
; ..\component\PduR\Implementation\PduR_RmTp.c	   837  #if((PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmTp.c	   838  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   839   * PduR_RmTp_MultipleSourceHandler_TpTxConfirmation
; ..\component\PduR\Implementation\PduR_RmTp.c	   840   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   841  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	   842   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	   843   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   844   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   845   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   846   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   847   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   848   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   849  FUNC(void, PDUR_CODE) PduR_RmTp_MultipleSourceHandler_TpTxConfirmation(PduR_RmGDestRomIdxOfTxTp2SrcType rmGDestRomIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	   850  {
; ..\component\PduR\Implementation\PduR_RmTp.c	   851    PduR_Lock_LockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   852    {
; ..\component\PduR\Implementation\PduR_RmTp.c	   853      PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	   854  
; ..\component\PduR\Implementation\PduR_RmTp.c	   855      if(PduR_Rm_GetSrcDestPdu(rmGDestRomIdx, &rmDestRomIdx) == E_OK)     /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_NO_NTO1_ROUTINGPATHS */
; ..\component\PduR\Implementation\PduR_RmTp.c	   856      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   857  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   858        PduR_Rm_MultipleSourceHandler_Reset(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   859  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   860  
; ..\component\PduR\Implementation\PduR_RmTp.c	   861        switch (PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	   862        {
; ..\component\PduR\Implementation\PduR_RmTp.c	   863  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   864          case PDUR_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmTp.c	   865            PduR_RmTp_TxInst_TxConfirmation(rmGDestRomIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	   866            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	   867  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   868  # if (PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   869          case PDUR_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM:     /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	   870          {
; ..\component\PduR\Implementation\PduR_RmTp.c	   871            PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   872            PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcRomIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcRomIdx), result);   /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	   873          }
; ..\component\PduR\Implementation\PduR_RmTp.c	   874            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	   875  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   876          default:       /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	   877            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	   878        }
; ..\component\PduR\Implementation\PduR_RmTp.c	   879      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   880      else
; ..\component\PduR\Implementation\PduR_RmTp.c	   881      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   882        PduR_Det_ReportError(PDUR_RMTP_MULTIPLESOURCEHANDLER_TPTXCONFIRMATION, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmTp.c	   883      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   884    }
; ..\component\PduR\Implementation\PduR_RmTp.c	   885    PduR_Lock_UnlockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   886  }
; ..\component\PduR\Implementation\PduR_RmTp.c	   887  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   888  
; ..\component\PduR\Implementation\PduR_RmTp.c	   889  #if((PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON) || (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmTp.c	   890  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   891   * PduR_RmTp_MultipleSourceHandler_CopyTxData
; ..\component\PduR\Implementation\PduR_RmTp.c	   892   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   893  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	   894   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	   895   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   896   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   897   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   898   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   899   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   900   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   901  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_MultipleSourceHandler_CopyTxData(PduR_RmGDestRomIdxOfTxTp2SrcType rmGDestRomIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	   902                                                                                P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	   903  {
; ..\component\PduR\Implementation\PduR_RmTp.c	   904    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	   905    PduR_Lock_LockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   906    {
; ..\component\PduR\Implementation\PduR_RmTp.c	   907      PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	   908  
; ..\component\PduR\Implementation\PduR_RmTp.c	   909      if(PduR_Rm_GetSrcDestPdu(rmGDestRomIdx, &rmDestRomIdx) == E_OK)     /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_NO_NTO1_ROUTINGPATHS */
; ..\component\PduR\Implementation\PduR_RmTp.c	   910      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   911  # if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   912        if(PduR_IsDestPduEnabled(rmDestRomIdx) == TRUE)
; ..\component\PduR\Implementation\PduR_RmTp.c	   913  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   914        {
; ..\component\PduR\Implementation\PduR_RmTp.c	   915          switch (PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	   916          {
; ..\component\PduR\Implementation\PduR_RmTp.c	   917  # if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   918            case PDUR_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM:
; ..\component\PduR\Implementation\PduR_RmTp.c	   919              if((retry == NULL_PTR) || (retry->TpDataState != TP_DATARETRY))
; ..\component\PduR\Implementation\PduR_RmTp.c	   920              {
; ..\component\PduR\Implementation\PduR_RmTp.c	   921                retVal = PduR_RmTp_CopyTxData(rmGDestRomIdx, info, retry, availableDataPtr);        /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	   922              }
; ..\component\PduR\Implementation\PduR_RmTp.c	   923              break;
; ..\component\PduR\Implementation\PduR_RmTp.c	   924  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   925  # if (PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   926            case PDUR_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM:   /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	   927            {
; ..\component\PduR\Implementation\PduR_RmTp.c	   928              PduR_RmSrcRomIdxOfRmDestRomType rmSrcRomIdx = PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   929              retVal = PduR_GetUpTpCopyTxDataFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcRomIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcRomIdx), info, retry, availableDataPtr);       /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	   930            }
; ..\component\PduR\Implementation\PduR_RmTp.c	   931              break;
; ..\component\PduR\Implementation\PduR_RmTp.c	   932  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   933            default:     /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	   934              break;
; ..\component\PduR\Implementation\PduR_RmTp.c	   935          }
; ..\component\PduR\Implementation\PduR_RmTp.c	   936        }
; ..\component\PduR\Implementation\PduR_RmTp.c	   937      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   938      else
; ..\component\PduR\Implementation\PduR_RmTp.c	   939      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   940        PduR_Det_ReportError(PDUR_RMTP_MULTIPLESOURCEHANDLER_COPYTXDATA, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmTp.c	   941      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   942    }
; ..\component\PduR\Implementation\PduR_RmTp.c	   943    PduR_Lock_UnlockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   944    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	   945  }
; ..\component\PduR\Implementation\PduR_RmTp.c	   946  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   947  
; ..\component\PduR\Implementation\PduR_RmTp.c	   948  #if((PDUR_TPCANCELTRANSMITSUPPORTEDOFMMROM == STD_ON) && (PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmTp.c	   949  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	   950   * PduR_RmTp_MultipleSourceHandler_CancelTransmit
; ..\component\PduR\Implementation\PduR_RmTp.c	   951   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   952  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	   953   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	   954   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   955   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   956   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   957   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   958   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   959   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   960   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   961   *
; ..\component\PduR\Implementation\PduR_RmTp.c	   962   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	   963  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_MultipleSourceHandler_CancelTransmit(PduR_RmDestRomIterType rmDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	   964  {
; ..\component\PduR\Implementation\PduR_RmTp.c	   965    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	   966    PduR_Lock_LockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   967    {
; ..\component\PduR\Implementation\PduR_RmTp.c	   968      PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   969  
; ..\component\PduR\Implementation\PduR_RmTp.c	   970  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   971      if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	   972      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   973        PduR_RmGDestNto1InfoRamIdxOfRmGDestRomType rmGDestNto1InfoIdx = PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   974        PduR_RmDestRomIterType lastTxdRmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	   975        Std_ReturnType foundSrcPdu = PduR_Rm_GetSrcDestPdu(rmGDestRomIdx, &lastTxdRmDestRomIdx);  /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmTp.c	   976        PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   977  
; ..\component\PduR\Implementation\PduR_RmTp.c	   978        if(PduR_IsTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, memIdx) && (foundSrcPdu == E_OK) && (rmDestRomIdx == lastTxdRmDestRomIdx))   /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	   979        {
; ..\component\PduR\Implementation\PduR_RmTp.c	   980          retVal = PduR_GetLoTpCancelTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx));     /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	   981        }
; ..\component\PduR\Implementation\PduR_RmTp.c	   982        else
; ..\component\PduR\Implementation\PduR_RmTp.c	   983        {
; ..\component\PduR\Implementation\PduR_RmTp.c	   984          PduR_Det_ReportError(PDUR_RMTP_MULTIPLESOURCEHANDLER_CANCELTRANSMIT, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmTp.c	   985        }
; ..\component\PduR\Implementation\PduR_RmTp.c	   986      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   987      else
; ..\component\PduR\Implementation\PduR_RmTp.c	   988  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   989      {
; ..\component\PduR\Implementation\PduR_RmTp.c	   990        retVal = PduR_GetLoTpCancelTransmitFctPtrOfMmRom(PduR_GetMmRomIdxOfRmGDestRom(rmGDestRomIdx)) (PduR_GetDestHndOfRmGDestRom(rmGDestRomIdx));       /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	   991      }
; ..\component\PduR\Implementation\PduR_RmTp.c	   992    }
; ..\component\PduR\Implementation\PduR_RmTp.c	   993    PduR_Lock_UnlockRoutingPathByDestPdu(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	   994    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	   995  }
; ..\component\PduR\Implementation\PduR_RmTp.c	   996  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	   997  
; ..\component\PduR\Implementation\PduR_RmTp.c	   998  #if(PDUR_EXISTS_TP_UNBUFFERED_TX_API_FWD_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	   999  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1000   * PduR_RmTp_Transmit_MultiDest
; ..\component\PduR\Implementation\PduR_RmTp.c	  1001   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1002  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1003   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1004   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1005   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1006   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1007  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_Transmit_MultiDest(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)      /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1008  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1009    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1010    PduR_RmDestRomIterType rmDestIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1011  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1012    for(rmDestIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx); rmDestIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcIdx); rmDestIdx++)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1013    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1014      PduR_RmGDestRomIterType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1015      if(PduR_GetDirectionOfRmGDestRom(rmGDestRomIdx) == PDUR_TX_DIRECTIONOFRMGDESTROM)   /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1016      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1017  # if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1018        if(PduR_IsDestPduEnabled(rmDestIdx) == TRUE)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1019  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1020        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1021          retVal &= PduR_RmTp_MultipleSourceHandler_Transmit(rmDestIdx, info);    /* SBSW_PDUR_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1022        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1023      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1024    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1025  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1026    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1027    PDUR_DUMMY_STATEMENT(info);   /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1028    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1029  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1030  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1031  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1032  #if (PDUR_HASTPTXBUFFEREDFORWARDINGOFGENERALPROPERTIESROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1033  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1034   * PduR_RmTp_UpStartOfReception
; ..\component\PduR\Implementation\PduR_RmTp.c	  1035   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1036  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1037   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1038   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1039   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1040   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1041  FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_UpStartOfReception(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1042  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1043    Std_ReturnType retval = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1044    PduLengthType bufferSizePtr = 0u;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1045    PduLengthType availableDataPtr = 0u;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1046    PduR_Lock_LockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1047    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1048      PduInfoType tempInfo;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1049      tempInfo.SduLength = info->SduLength;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1050      tempInfo.SduDataPtr = info->SduDataPtr;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1051      /* Handle src instance routing state */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1052      if(BUFREQ_OK == PduR_RmTp_StartOfReception(rmSrcIdx, &tempInfo, tempInfo.SduLength, &bufferSizePtr))        /* SBSW_PDUR_EXTERNAL_API_CALL_FORWARDING_ID_AND_PTR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1053      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1054        if(tempInfo.SduLength <= bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1055        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1056          PduInfoType copyInfo;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1057          PduR_BmTxBufferRomIterType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1058          if(PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx(rmSrcIdx, &bmTxBufferRomIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1059          {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1060            PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1061            if(BUFREQ_OK == PduR_Bm_PutDataAsPtr(bmTxBufferRomIdx, &copyInfo, memIdx))    /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */ /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1062            {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1063              copyInfo.SduLength = info->SduLength; /* pointer shall request the transmitted length, not the available length in the buffer */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1064              if(BUFREQ_OK == PduR_GetUpTpCopyTxDataFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), &copyInfo, (P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA)) NULL_PTR, &availableDataPtr))     /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1065              {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1066                if(availableDataPtr == 0u)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1067                {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1068                  PduR_RmTp_TpRxIndication((PduR_RmSrcRomIdxOfRxTp2DestType) rmSrcIdx, E_OK);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1069                  PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), E_OK);       /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1070                  retval = E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1071                }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1072                else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1073                {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1074                  PduR_RmTp_TpRxIndication((PduR_RmSrcRomIdxOfRxTp2DestType) rmSrcIdx, E_NOT_OK);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1075                  PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), E_NOT_OK);   /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1076                }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1077              }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1078              else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1079              {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1080                PduR_RmTp_TpRxIndication((PduR_RmSrcRomIdxOfRxTp2DestType) rmSrcIdx, E_NOT_OK);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1081                PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), E_NOT_OK);     /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1082              }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1083            }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1084            else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1085            {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1086              PduR_RmTp_TpRxIndication((PduR_RmSrcRomIdxOfRxTp2DestType) rmSrcIdx, E_NOT_OK);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1087              PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), E_NOT_OK);       /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1088            }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1089          }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1090        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1091        else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1092        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1093          PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), E_NOT_OK); /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1094        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1095      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1096      else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1097      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1098        PduR_GetUpTpTpTxConfirmationFctPtrOfMmRom(PduR_GetMmRomIdxOfRmSrcRom(rmSrcIdx)) (PduR_GetSrcHndOfRmSrcRom(rmSrcIdx), E_NOT_OK);   /* SBSW_PDUR_API_CALL_FORWARDING_ID_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1099      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1100    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1101    PduR_Lock_UnlockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1102    PDUR_DUMMY_STATEMENT(availableDataPtr);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1103    return retval;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1104  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1105  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1106  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1107  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1108  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1109   * PduR_RmTp_StartOfReception
; ..\component\PduR\Implementation\PduR_RmTp.c	  1110   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1111  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1112   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1113   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1114   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1115   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1116   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1117  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception(PduR_RmSrcRomIterType rmSrcIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,       /* PRQA S 3673 */ /* MD_MSR_Rule8.13 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1118                                                                PduLengthType TpSduLength, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1119  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1120    /* ----- Local Variables ---------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1121    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1122    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1123    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1124  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1125  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1126    /* Check parameter bufferSizePtr */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1127    if(bufferSizePtr == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1128    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1129      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1130    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1131  #  if (PDUR_METADATA_SUPPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1132    else if((PduR_IsMetaDataLengthUsedOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx)) && ((info == NULL_PTR) || (info->SduDataPtr == NULL_PTR) || (info->SduLength < (PduLengthType) PduR_GetMetaDataLengthOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx))))        /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1133    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1134      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1135    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1136  #  endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1137    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1138  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1139    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1140      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1141      PduR_Lock_LockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1142      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1143        /* Handle src instance routing state */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1144        retVal = PduR_RmTp_StartOfReception_TpRxSmStateHandler(rmSrcIdx, info, TpSduLength, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1145      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1146      PduR_Lock_UnlockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1147    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1148  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1149    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1150    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1151      PduR_Det_ReportError(PDUR_FCT_RMTP_SORX, errorId);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1152    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1153  # else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1154    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1155  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1156    PDUR_DUMMY_STATEMENT(memIdx);         /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1157    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1158  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1159  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1160  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1161  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1162  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1163   * PduR_RmTp_StartOfReception_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  1164   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1165    /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1166   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1167   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1168   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1169   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1170  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception_TpRxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1171                                                                                   P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1172                                                                                   PduLengthType TpSduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1173                                                                                   P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1174  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1175    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1176  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1177    switch (PduR_GetTpRxSmStateOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx)))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1178    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1179      case PDUR_RM_RX_IDLE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1180        retVal = PduR_RmTp_StartOfReception_TpRxSmStateHandler_RM_RX_IDLE(rmSrcIdx, info, TpSduLength, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1181        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1182  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1183      case PDUR_RM_RX_ACTIVE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1184        retVal = PduR_RmTp_StartOfReception_TpRxSmStateHandler_UnexpectedCall(rmSrcIdx, info, TpSduLength, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1185        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1186  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1187      case PDUR_RM_RX_ABORTED_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1188        retVal = PduR_RmTp_StartOfReception_TpRxSmStateHandler_UnexpectedCall(rmSrcIdx, info, TpSduLength, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1189        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1190  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1191      default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1192        /* If state is out-of-bounds: do nothing and return negative result. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1193        retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1194        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1195    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1196  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1197    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1198  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1199  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1200  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1201  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM  == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1202  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1203   * PduR_RmTp_StartOfReception_TpRxSmStateHandler_RM_RX_IDLE
; ..\component\PduR\Implementation\PduR_RmTp.c	  1204   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1205  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1206   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1207   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1208   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1209   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1210   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1211   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1212   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1213   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1214   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1215   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1216   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1217   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1218   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1219   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1220  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception_TpRxSmStateHandler_RM_RX_IDLE(PduR_RmSrcRomIterType rmSrcIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1221                                                                                              P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info, PduLengthType TpSduLength, P2VAR(PduLengthType,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1222                                                                                                                                                                                     AUTOMATIC,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1223                                                                                                                                                                                     PDUR_APPL_DATA)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1224                                                                                              bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1225  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1226    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1227    /* Allocate FiFo element */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1228    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1229    PduR_RmBufferedTpPropertiesRomIdxOfRmSrcRomType rmBufferedTpPropertiesRomIdx = PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1230    PduR_FmFifoRomIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(rmBufferedTpPropertiesRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1231    PduR_FmFifoElementRamWriteIdxOfFmFifoRamType fmFifoElementRamWriteIdx = PduR_Fm_GetFmFifoElementRamWriteIdxSafe(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1232  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1233    if(PduR_Fm_IsFifoElementAllocated(fmFifoElementRamWriteIdx, memIdx) != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1234    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1235      PduR_BmTxBufferRomIdxOfBmTxBufferIndRomType allocatedTxBufferIdxPtr = 0u;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1236      PduLengthType tpThreshold = PduR_GetTpThresholdOfRmBufferedTpPropertiesRom(rmBufferedTpPropertiesRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1237      PduLengthType metaDataLength = 0u;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1238  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1239  # if  (PDUR_METADATA_SUPPORT == STD_ON )
; ..\component\PduR\Implementation\PduR_RmTp.c	  1240      if(PduR_IsMetaDataLengthUsedOfRmBufferedTpPropertiesRom(rmBufferedTpPropertiesRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1241      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1242        metaDataLength = PduR_GetMetaDataLengthOfRmBufferedTpPropertiesRom(rmBufferedTpPropertiesRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1243      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1244  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1245  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1246      if(PduR_Bm_AllocateTxBuffer(fmFifoRomIdx, TpSduLength, TpSduLength + metaDataLength, tpThreshold + metaDataLength, bufferSizePtr, &allocatedTxBufferIdxPtr, memIdx) == BUFREQ_OK)  /* PRQA S 2985 */ /* MD_PduR_2985 */ /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1247      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1248        PduR_IncFillLevelOfFmFifoRam(fmFifoRomIdx, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1249        PduR_Fm_IncrementWriteIndex(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1250  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1251        PduR_Fm_AssignTxBuffer2FifoElement(fmFifoElementRamWriteIdx, allocatedTxBufferIdxPtr, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1252        PduR_SetRmDestRomIdxOfFmFifoElementRam(fmFifoElementRamWriteIdx, (PduR_RmDestRomIdxOfFmFifoElementRamType) PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx), memIdx);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1253  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1254        /* Mapping Src Handle and current Fifo element */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1255        PduR_SetFmFifoElementRamIdxOfRmBufferedTpPropertiesRam(rmBufferedTpPropertiesRomIdx, fmFifoElementRamWriteIdx, memIdx);      /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1256  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1257  # if  (PDUR_METADATA_SUPPORT == STD_ON )
; ..\component\PduR\Implementation\PduR_RmTp.c	  1258        if(PduR_IsMetaDataLengthUsedOfRmBufferedTpPropertiesRom(rmBufferedTpPropertiesRomIdx, memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1259            && (PduR_RmTp_StartOfReceptionQueueMetaData(rmSrcIdx, info->SduLength, info->SduDataPtr, bufferSizePtr) != BUFREQ_OK)) /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */ /* COV_PDUR_FATAL_ERROR */ /* PRQA S 3415 */ /* MD_PduR_3415 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1260        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1261          PduR_Det_ReportError(PDUR_RXSM_STARTOFRECEPTION, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1262          retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1263        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1264        else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1265  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1266        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1267          PduR_SetTpRxSmStateOfRmBufferedTpPropertiesRam(rmBufferedTpPropertiesRomIdx, PDUR_RM_RX_ACTIVE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM, memIdx);     /* SBSW_PDUR_IDX_PARAM_INTERNAL_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1268  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1269          if(PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler(fmFifoRomIdx, rmSrcIdx, memIdx) == E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1270          {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1271            retVal = BUFREQ_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1272          }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1273          else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1274          {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1275            PduR_RmTp_TpRxIndication_TpRxSmStateHandler(rmSrcIdx, E_NOT_OK);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1276            retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1277          }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1278        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1279      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1280    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1281    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1282    PDUR_DUMMY_STATEMENT(info);           /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1283    PDUR_DUMMY_STATEMENT(TpSduLength);    /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1284    PDUR_DUMMY_STATEMENT(bufferSizePtr);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1285    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1286  } /* PRQA S 6050 */ /* MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1287  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1288  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1289  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM  == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1290   /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1291   * PduR_RmTp_StartOfReception_TpRxSmStateHandler_UnexpectedCall
; ..\component\PduR\Implementation\PduR_RmTp.c	  1292   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1293  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1294   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1295   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1296   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1297   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1298   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1299   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1300  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReception_TpRxSmStateHandler_UnexpectedCall(PduR_RmSrcRomIterType rmSrcIdx, P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1301                                                                                                  PduLengthType TpSduLength, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1302  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1303    PduR_Det_ReportError(PDUR_FCT_SOR, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1304    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1305    PDUR_DUMMY_STATEMENT(info);           /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1306    PDUR_DUMMY_STATEMENT(TpSduLength);    /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1307    PDUR_DUMMY_STATEMENT(bufferSizePtr);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1308    return BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1309  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1310  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1311  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1312  #if (PDUR_METADATA_SUPPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1313  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1314   * PduR_RmTp_StartOfReceptionQueueMetaData
; ..\component\PduR\Implementation\PduR_RmTp.c	  1315   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1316  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1317   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1318   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1319   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1320   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1321   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1322   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1323  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_StartOfReceptionQueueMetaData(PduR_RmSrcRomIterType rmSrcIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1324                                                                                          PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1325                                                                                          SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1326  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1327    PduLengthType pduLengthIntern = pduLength;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1328    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1329    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1330  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1331    PduR_BmTxBufferArrayRamIterType metadataStartPosition =
; ..\component\PduR\Implementation\PduR_RmTp.c	  1332      pduLengthIntern - (PduR_BmTxBufferArrayRamIterType) PduR_GetMetaDataLengthOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1333  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1334    PduR_BmTxBufferRomIterType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1335    if(PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx(rmSrcIdx, &bmTxBufferRomIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1336    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1337      /* Metadata is appended after the payload data */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1338      /* Length information is used to enqueue the MetaData */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1339      pduLengthIntern = PduR_GetMetaDataLengthOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1340      /* enqueue data will never fail in this context because the buffer is always empty */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1341      retVal = PduR_Bm_PutData(bmTxBufferRomIdx, pduLengthIntern, &sduDataPtr[metadataStartPosition], memIdx); /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1342      *bufferSizePtr = (PduLengthType) PduR_Bm_GetTotalBufferSize(bmTxBufferRomIdx, memIdx);        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1343    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1344    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1345  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1346  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1347  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1348  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1349  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1350   * PduR_RmTp_CopyRxData
; ..\component\PduR\Implementation\PduR_RmTp.c	  1351   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1352  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1353   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1354   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1355   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1356   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1357   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1358  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData(PduR_RmSrcRomIdxOfRxTp2DestType rmSrcIdx, P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1359                                                          P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1360  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1361    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1362    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1363  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1364    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1365  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1366  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1367    /* Check parameter 'info' */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1368    if(info == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1369    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1370      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1371    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1372    else if((info->SduLength > 0u) && (info->SduDataPtr == NULL_PTR))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1373    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1374      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1375    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1376    else if(bufferSizePtr == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1377    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1378      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1379    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1380    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1381  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1382    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1383      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1384      PduR_Lock_LockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1385      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1386        /* Handle src instance routing state */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1387        retVal = PduR_RmTp_CopyRxData_TpRxSmStateHandler(rmSrcIdx, info, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1388      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1389      PduR_Lock_UnlockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1390    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1391    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1392  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1393    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1394    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1395      PduR_Det_ReportError(PDUR_FCT_RMTP_CPYRX, errorId);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1396    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1397  # else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1398    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1399  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1400    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1401  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1402  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1403  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1404  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1405  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1406   * PduR_RmTp_CopyRxData_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  1407   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1408    /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1409   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1410   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1411   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1412   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1413  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CONST) PduR_RmTp_CopyRxData_TpRxSmStateHandler(PduR_RmSrcRomIdxOfRxTp2DestType rmSrcIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1414                                                                              P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1415                                                                              P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1416  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1417    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1418    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1419  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1420    switch (PduR_GetTpRxSmStateOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1421    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1422      case PDUR_RM_RX_IDLE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1423        retVal = PduR_RmTp_CopyRxData_TpRxSmStateHandler_UnexpectedCall((PduR_RmSrcRomIterType) rmSrcIdx, info->SduLength, info->SduDataPtr, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1424        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1425  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1426      case PDUR_RM_RX_ACTIVE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1427        retVal = PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ACTIVE((PduR_RmSrcRomIterType) rmSrcIdx, info->SduLength, info->SduDataPtr, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1428        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1429  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1430      case PDUR_RM_RX_ABORTED_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1431        retVal = PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ABORTED((PduR_RmSrcRomIterType) rmSrcIdx, info->SduLength, info->SduDataPtr, bufferSizePtr); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1432        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1433  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1434      default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1435        /* If state is out-of-bounds: do nothing and return negative result. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1436        retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1437        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1438    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1439  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1440    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1441  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1442  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1443  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1444  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1445  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1446   * PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  1447   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1448  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1449   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1450   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1451   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1452   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1453   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1454   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1455   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1456  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1457                                                                                          SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1458  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1459    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1460    PduR_BmTxBufferRomIterType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1461  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1462    if(PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx(rmSrcIdx, &bmTxBufferRomIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1463    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1464      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1465  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1466      retVal = PduR_Bm_PutData(bmTxBufferRomIdx, pduLength, sduDataPtr, memIdx);        /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1467  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1468      if(retVal == BUFREQ_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1469      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1470        PduR_FmFifoRamIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1471  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1472        if(PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler(fmFifoRomIdx, rmSrcIdx, memIdx) != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1473        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1474          retVal = BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1475        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1476      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1477      *bufferSizePtr = (PduLengthType) PduR_Bm_GetTotalBufferSize(bmTxBufferRomIdx, memIdx);      /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1478    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1479  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1480    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1481  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1482  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1483  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1484  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1485  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1486   * PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ABORTED
; ..\component\PduR\Implementation\PduR_RmTp.c	  1487   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1488  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1489   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1490   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1491   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1492   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1493   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1494  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData_TpRxSmStateHandler_RM_RX_ABORTED(PduR_RmSrcRomIterType rmSrcIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1495                                                                                           SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1496  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1497    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1498    PDUR_DUMMY_STATEMENT(pduLength);      /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1499    PDUR_DUMMY_STATEMENT(sduDataPtr);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1500    PDUR_DUMMY_STATEMENT(bufferSizePtr);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1501    return BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1502  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1503  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1504  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1505  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1506  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1507   * PduR_RmTp_CopyRxData_TpRxSmStateHandler_UnexpectedCall
; ..\component\PduR\Implementation\PduR_RmTp.c	  1508   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1509  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1510   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1511   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1512   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1513   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1514   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1515   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1516  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyRxData_TpRxSmStateHandler_UnexpectedCall(PduR_RmSrcRomIterType rmSrcIdx, PduLengthType pduLength,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1517                                                                                            SduDataPtrType sduDataPtr, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1518  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1519    PduR_Det_ReportError(PDUR_RXSM_COPYRXDATA_UNEXPECTEDCALL, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1520    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1521    PDUR_DUMMY_STATEMENT(pduLength);      /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1522    PDUR_DUMMY_STATEMENT(sduDataPtr);     /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1523    PDUR_DUMMY_STATEMENT(bufferSizePtr);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1524    return BUFREQ_E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1525  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1526  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1527  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1528  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1529  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1530   * PduR_RmTp_AssignAssociatedBuffer2Destination
; ..\component\PduR\Implementation\PduR_RmTp.c	  1531   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1532  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1533   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1534   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1535   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1536   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1537   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1538  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_AssignAssociatedBuffer2Destination(PduR_BmTxBufferRomIterType bmTxBufferRomIdx, PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1539  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1540    PduR_RmDestRomStartIdxOfRmSrcRomType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1541    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1542    PduR_BmTxBufferInstanceRomStartIdxOfBmTxBufferRomType bmTxBufferInstanceRomIdx = PduR_GetBmTxBufferInstanceRomStartIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1543  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1544    for(rmDestRomIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx); (rmDestRomIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcIdx)) && (bmTxBufferInstanceRomIdx < PduR_GetBmTxBufferInstanceRomEndIdxOfBmTxBufferRom(bmTxBufferRomIdx, memIdx)); rmDestRomIdx++) /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1545    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1546      if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM) /* COV_PDUR_ONLY_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1547      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1548        PduR_RmGDestRomIdxOfRmDestRomType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1549        PduR_Bm_EnableBmTxBufferInstance(bmTxBufferRomIdx, bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1550        PduR_SetBmTxBufferInstanceRomIdxOfFmFifoInstanceRam(PduR_GetFmFifoInstanceRomIdxOfRmGDestRom(rmGDestRomIdx), bmTxBufferInstanceRomIdx, memIdx);     /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1551        bmTxBufferInstanceRomIdx++;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1552      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1553    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1554  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1555  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1556  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1557  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1558  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1559   * PduR_RmTp_TpRxIndication
; ..\component\PduR\Implementation\PduR_RmTp.c	  1560   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1561  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1562   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1563   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1564   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1565   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1566   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1567  FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication(PduR_RmSrcRomIdxOfRxTp2DestType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1568  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1569    /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1570    PduR_Lock_LockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1571    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1572      /* Handle src instance routing state */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1573      PduR_RmTp_TpRxIndication_TpRxSmStateHandler(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1574    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1575    PduR_Lock_UnlockRoutingPathBySrcPdu(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1576  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1577  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1578  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1579  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM  == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1580  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1581   * PduR_RmTp_TpRxIndication_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  1582   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1583    /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1584   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1585   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1586   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1587   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1588  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication_TpRxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1589  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1590    switch (PduR_GetTpRxSmStateOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx)))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1591    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1592      case PDUR_RM_RX_IDLE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1593        PduR_RmTp_TpRxIndication_TpRxSmStateHandler_UnexpectedCall((PduR_RmSrcRomIterType) rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1594        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1595  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1596      case PDUR_RM_RX_ACTIVE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1597        PduR_RmTp_TpRxIndication_TpRxSmStateHandler_RM_RX_ACTIVE_OR_RM_RX_ABORTED((PduR_RmSrcRomIterType) rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1598        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1599  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1600      case PDUR_RM_RX_ABORTED_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1601        PduR_RmTp_TpRxIndication_TpRxSmStateHandler_RM_RX_ACTIVE_OR_RM_RX_ABORTED((PduR_RmSrcRomIterType) rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1602        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1603  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1604      default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1605        /* If state is out-of-bounds: do nothing. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1606        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1607    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1608  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1609  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1610  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1611  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1612  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1613   * PduR_RmTp_TpRxIndication_TpRxSmStateHandler_RM_RX_ACTIVE_OR_RM_RX_ABORTED
; ..\component\PduR\Implementation\PduR_RmTp.c	  1614   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1615  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1616   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1617   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1618   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1619   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1620   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1621   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1622   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1623   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1624   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1625  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication_TpRxSmStateHandler_RM_RX_ACTIVE_OR_RM_RX_ABORTED(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1626  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1627    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1628    PduR_FmFifoRamIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1629    PduR_FmFifoElementRamIterType fmFifoElementRamReadIdx = PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1630    PduR_FmFifoElementRamIterType fmFifoElementRamWriteIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1631  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1632    if(PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx(rmSrcIdx, &fmFifoElementRamWriteIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1633    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1634      /* Is this rmSrcIdx Pdu instance the oldest Pdu in the queue? */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1635      if(fmFifoElementRamWriteIdx == fmFifoElementRamReadIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1636      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1637        PduR_RmTp_FinishReception_TpTxSmStateHandler(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1638      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1639      else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1640      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1641        if(result != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1642        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1643          PduR_Fm_ReleaseFifoElement(fmFifoElementRamWriteIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1644        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1645      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1646    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1647  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1648    PduR_SetFmFifoElementRamIdxOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), PDUR_NO_FMFIFOELEMENTRAMIDXOFRMBUFFEREDTPPROPERTIESRAM, memIdx);     /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1649    PduR_SetTpRxSmStateOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), PDUR_RM_RX_IDLE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM, memIdx);     /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1650  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1651  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1652  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1653  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1654  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1655   * PduR_RmTp_TpRxIndication_TpRxSmStateHandler_UnexpectedCall
; ..\component\PduR\Implementation\PduR_RmTp.c	  1656   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1657  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1658   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1659   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1660   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1661   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1662   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1663   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1664  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_TpRxIndication_TpRxSmStateHandler_UnexpectedCall(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1665  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1666    PduR_Det_ReportError(PDUR_RMTP_RXSM_TPRXINDICATION_UNEXPECTEDCALL, PDUR_E_UNEXPECTED_CALL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1667    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1668    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1669  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1670  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1671  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1672  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1673  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1674   * PduR_RmTp_CopyTxData
; ..\component\PduR\Implementation\PduR_RmTp.c	  1675   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1676  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1677   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1678   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1679   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1680   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1681   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1682  LOCAL_INLINE FUNC(BufReq_ReturnType, PDUR_CODE) PduR_RmTp_CopyTxData(PduR_RmGDestRomIdxOfTxTp2SrcType rmGDestRomIdx,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1683                                                                       P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\component\PduR\Implementation\PduR_RmTp.c	  1684                                                                       P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry, P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1685  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1686    BufReq_ReturnType retVal = BUFREQ_E_NOT_OK;   /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1687    uint8 errorId = PDUR_E_NO_ERROR;      /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1688  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1689    /* ----- Development Error Checks ------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1690  # if (PDUR_DEV_ERROR_DETECT == STD_ON)  /* COV_PDUR_VAR_DEV_ERROR_DETECT */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1691    /* parameter 'Handle Id' already checked by the caller API */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1692    /* Check parameter 'info' */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1693    if(info == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1694    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1695      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1696    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1697    else if((info->SduLength > 0u) && (info->SduDataPtr == NULL_PTR))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1698    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1699      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1700    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1701    else if(availableDataPtr == NULL_PTR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1702    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1703      errorId = PDUR_E_PARAM_POINTER;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1704    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1705    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1706  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1707    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1708      /* ----- Implementation ----------------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1709      PduR_Lock_LockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1710      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1711        /* Handle global routing state */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1712        retVal = PduR_RmTp_TxInst_CopyTxData(rmGDestRomIdx, info, retry, availableDataPtr);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1713      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1714      PduR_Lock_UnlockRoutingPathByGDestPdu(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1715      PDUR_DUMMY_STATEMENT(retry);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1716    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1717    /* ----- Development Error Report --------------------------------------- */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1718  # if (PDUR_DEV_ERROR_REPORT == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1719    if(errorId != PDUR_E_NO_ERROR)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1720    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1721      PduR_Det_ReportError(PDUR_FCT_RMTP_CPYTX, errorId);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1722    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1723  # else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1724    PDUR_DUMMY_STATEMENT(errorId);        /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1725  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1726    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1727  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1728  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1729  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1730  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1731  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1732   * PduR_RmTp_ThresholdReached
; ..\component\PduR\Implementation\PduR_RmTp.c	  1733   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1734  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1735   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1736   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1737   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1738   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1739   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1740  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_ThresholdReached(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1741  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1742    /* Trigger transmission if required */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1743    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1744    PduR_BmTxBufferRomIterType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1745  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1746    if(PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx(rmSrcIdx, &bmTxBufferRomIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1747    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1748      PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1749      PduR_BmTxBufferArrayRamIterType availableTotalDataSize = PduR_Bm_GetTotalDataSize(bmTxBufferRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1750  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1751      /* MetaData length is not taken into account to calculate the Threshold */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1752    # if (PDUR_METADATA_SUPPORT == STD_ON )
; ..\component\PduR\Implementation\PduR_RmTp.c	  1753      if(PduR_IsMetaDataLengthUsedOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx))    /* COV_PDUR_FEATURE_ALWAYS_TRUE */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1754      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1755        availableTotalDataSize -= (PduR_BmTxBufferArrayRamIterType) PduR_GetMetaDataLengthOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1756      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1757    # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1758  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1759      /* Threshold reached or reception finished (sub state machine is in IDLE) */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1760      if(availableTotalDataSize >= PduR_GetTpThresholdOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1761      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1762        retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1763      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1764    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1765  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1766    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1767  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1768  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1769  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1770  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1771  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1772   * PduR_RmTp_TriggerTransmissionOfDestinations
; ..\component\PduR\Implementation\PduR_RmTp.c	  1773   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1774  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1775   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1776   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1777   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1778   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1779   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1780   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1781   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1782   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1783  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_TriggerTransmissionOfDestinations(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1784  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1785    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1786     Std_ReturnType retVal_Temp = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1787    PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1788    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1789    PduR_FmFifoRamIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1790    PduR_FmFifoElementRamIterType fmFifoElementRamReadIdx = PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1791    PduR_BmTxBufferRomIterType bmTxBufferRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1792  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1793    if(PduR_Fm_GetCurrentlyUsedBmTxBufferRomIdxByFmFifoElementIdx(fmFifoElementRamReadIdx, &bmTxBufferRomIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1794    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1795      PduR_SetPendingConfirmationsOfFmFifoRam(fmFifoRomIdx, PduR_GetQueuedDestCntOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx), memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1796      /* Assign Tx Buffer */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1797      PduR_RmTp_AssignAssociatedBuffer2Destination(bmTxBufferRomIdx, rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1798  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1799      for(rmDestRomIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx); rmDestRomIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcIdx); rmDestRomIdx++)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1800      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1801        PduR_RmGDestRomIterType rmGDestRomIdx = PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1802  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1803        if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM) /* COV_PDUR_ONLY_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1804        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1805  # if (PDUR_RPGROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1806          if(PduR_IsDestPduEnabled(rmDestRomIdx) == FALSE)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1807          {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1808            PduR_BmTxBufferInstanceRomIterType bmTxBufferInstanceRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1809  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1810            if(PduR_Fm_GetCurrentlyUsedBmTxBufferInstanceIdxByRmGDestIdx(rmGDestRomIdx, &bmTxBufferInstanceRomIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1811            {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1812              PduR_Bm_ResetTxBufferInstance(bmTxBufferInstanceRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1813            }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1814            PduR_RmTp_FinishTransmission_TpTxSmStateHandler(fmFifoRomIdx, E_NOT_OK, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1815            retVal &= E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1816          }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1817          else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1818  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1819          {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1820  # if(PDUR_RMGDESTNTO1INFORAMIDXOFRMGDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1821            if(PduR_IsRmGDestNto1InfoRamUsedOfRmGDestRom(rmGDestRomIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1822            {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1823              PduR_RmGDestNto1InfoRamIdxOfRmGDestRomType rmGDestNto1InfoIdx = PduR_GetRmGDestNto1InfoRamIdxOfRmGDestRom(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1824  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1825              if(!PduR_IsTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, memIdx))  /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1826              {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1827                PduR_SetRmDestRomIdxOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, (PduR_RmDestRomIdxOfRmGDestNto1InfoRamType) rmDestRomIdx, memIdx);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1828                PduR_SetTransmissionActiveOfRmGDestNto1InfoRam(rmGDestNto1InfoIdx, TRUE, memIdx);     /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1829  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1830                retVal_Temp = PduR_RmTp_TxInst_TriggerTransmit(rmDestRomIdx, rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1831                retVal &= retVal_Temp;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1832                if(E_OK != retVal_Temp) /* COV_PDUR_CROSSCORE_ROUTINGS_ONLY */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1833                {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1834                  PduR_Rm_MultipleSourceHandler_Reset(rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1835                }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1836              }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1837            }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1838            else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1839  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1840            {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1841              retVal &= PduR_RmTp_TxInst_TriggerTransmit(rmDestRomIdx, rmGDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1842            }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1843          }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1844        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1845      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1846    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1847    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1848  }       /* PRQA S 6080, 6050 */ /* MD_MSR_STMIF, MD_MSR_STCAL */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1849  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1850  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1851  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1852  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1853   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  1854   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1855    /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1856   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1857   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1858   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1859   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1860  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler(PduR_FmFifoRamIterType fmFifoRomIdx, PduR_RmSrcRomIterType rmSrcIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1861  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1862    Std_ReturnType retVal = E_OK; /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1863    PduR_FmFifoElementRamIterType fmFifoElementRamReadIdx = PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1864    PduR_FmFifoElementRamIterType fmFifoElementRamWriteIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1865  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1866    if(PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx(rmSrcIdx, &fmFifoElementRamWriteIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1867    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1868      /* Is this rmSrcIdx Pdu instance the oldest Pdu in the queue? */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1869      if(fmFifoElementRamWriteIdx == fmFifoElementRamReadIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1870      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1871        switch (PduR_GetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx)))
; ..\component\PduR\Implementation\PduR_RmTp.c	  1872        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1873          case PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1874          case PDUR_RM_TX_RECEPTION_ACTIVE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1875            retVal = PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_RM_TX_IDLE_OR_RM_TX_RECEPTION_ACTIVE(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1876            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1877  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1878          case PDUR_RM_TX_TRANSMISSION_FINISHED_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1879            retVal = PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_FatalError(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1880            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1881  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1882          case PDUR_RM_TX_RECEPTION_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  1883            retVal = PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_NoAction(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1884            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1885  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1886          case PDUR_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1887            retVal = PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_FatalError(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1888            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1889  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1890          default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1891            /* If state is out-of-bounds: do nothing and return with negative result. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1892            retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1893            break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1894        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1895      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1896    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1897  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1898    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1899  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1900  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1901  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1902  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1903  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1904   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_RM_TX_IDLE_OR_RM_TX_RECEPTION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  1905   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1906  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1907   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1908   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1909   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1910   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1911   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1912   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1913   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1914   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1915   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1916   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1917  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_RM_TX_IDLE_OR_RM_TX_RECEPTION_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1918  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1919    Std_ReturnType retVal = E_NOT_OK;     /* PRQA S 2981 */ /* MD_MSR_RetVal */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1920    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1921    PduR_FmFifoRamIterType fmFifoRamIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1922    if(PduR_RmTp_ThresholdReached(rmSrcIdx) == E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1923    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1924      PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRamIdx, PDUR_RM_TX_RECEPTION_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM, memIdx);    /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1925  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1926      retVal = PduR_RmTp_TriggerTransmissionOfDestinations(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1927      if(retVal != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1928      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1929        PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRamIdx, PDUR_RM_TX_RECEPTION_ACTIVE_TPTXSMSTATEOFFMFIFORAM, memIdx);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1930      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1931    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1932    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  1933    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1934      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1935      PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRamIdx, PDUR_RM_TX_RECEPTION_ACTIVE_TPTXSMSTATEOFFMFIFORAM, memIdx);   /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1936    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1937    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1938  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1939  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1940  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1941  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1942  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1943   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_NoAction
; ..\component\PduR\Implementation\PduR_RmTp.c	  1944   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1945  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1946   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1947   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1948   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1949   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1950  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_NoAction(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1951  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1952    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1953    return E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1954  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1955  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1956  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1957  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1958  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1959   * PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	  1960   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1961  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1962   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1963   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1964   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1965   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1966  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_FatalError(PduR_RmSrcRomIterType rmSrcIdx) /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1967  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1968    PduR_Det_ReportError(PDUR_RMTP_TXSM_CHECKREADY2TRANSMIT_FATALERROR, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  1969    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1970    return E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1971  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1972  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1973  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1974  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1975   /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1976   * PduR_RmTp_CancelTransmitOnDestinations
; ..\component\PduR\Implementation\PduR_RmTp.c	  1977   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1978  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  1979   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  1980   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1981   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1982   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  1983   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  1984  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelTransmitOnDestinations(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1985  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1986    PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  1987    for(rmDestRomIdx = PduR_GetRmDestRomStartIdxOfRmSrcRom(rmSrcIdx); rmDestRomIdx < PduR_GetRmDestRomEndIdxOfRmSrcRom(rmSrcIdx); rmDestRomIdx++)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1988    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1989      if(PduR_GetRoutingTypeOfRmDestRom(rmDestRomIdx) == PDUR_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM) /* COV_PDUR_ONLY_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  1990      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  1991        PduR_RmTp_TxInst_CancelTransmit(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx));
; ..\component\PduR\Implementation\PduR_RmTp.c	  1992      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1993    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1994  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  1995  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  1996  
; ..\component\PduR\Implementation\PduR_RmTp.c	  1997  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  1998  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  1999   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  2000   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2001    /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2002   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2003   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2004   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2005   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2006  FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2007  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2008    PduR_DecPendingConfirmationsOfFmFifoRam(fmFifoRomIdx, memIdx);    /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2009  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2010    switch (PduR_GetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	  2011    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2012      case PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2013      case PDUR_RM_TX_RECEPTION_ACTIVE_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2014      case PDUR_RM_TX_TRANSMISSION_FINISHED_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2015        PduR_RmTp_FinishTransmission_TpTxSmStateHandler_FatalError(fmFifoRomIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2016        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2017  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2018      case PDUR_RM_TX_RECEPTION_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  2019        PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE(fmFifoRomIdx, result, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2020        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2021  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2022      case PDUR_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  2023        PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE(fmFifoRomIdx, result, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2024        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2025  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2026      default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2027        /* If state is out-of-bounds: do nothing. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2028        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2029    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2030  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2031  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2032  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2033  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2034  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2035   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  2036   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2037  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2038   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2039   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2040   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2041   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2042   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2043   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2044  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2045  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2046    if(PduR_GetPendingConfirmationsOfFmFifoRam(fmFifoRomIdx, memIdx) == 0u)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2047    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2048      PduR_FmFifoElementRamIterType fmFifoElementRamReadIdx = PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2049  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2050      PduR_Fm_ReleaseFifoElement(fmFifoElementRamReadIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2051  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2052      PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM, memIdx);       /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2053      PduR_RmTp_ActivateNext(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2054    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2055    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2056  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2057  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2058  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2059  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2060  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2061   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  2062   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2063  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2064   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2065   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2066   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2067   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2068   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2069   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2070  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2071  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2072    if(PduR_GetPendingConfirmationsOfFmFifoRam(fmFifoRomIdx, memIdx) == 0u)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2073    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2074      PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PDUR_RM_TX_TRANSMISSION_FINISHED_TPTXSMSTATEOFFMFIFORAM, memIdx);      /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2075      if(result != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2076      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2077        PduR_RmSrcRomIterType rmSrcRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2078  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2079        if(PduR_RmTp_GetRmSrcRomIdxOfOldestFmFifoElementSafe(fmFifoRomIdx, &rmSrcRomIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2080        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2081          PduR_RmTp_CancelReceive_TpRxSmStateHandler(rmSrcRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2082        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2083      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2084    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2085  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2086  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2087  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2088  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2089  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2090   * PduR_RmTp_FinishTransmission_TpTxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	  2091   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2092  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2093   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2094   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2095   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2096   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2097  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishTransmission_TpTxSmStateHandler_FatalError(PduR_FmFifoRomIterType fmFifoRomIdx, Std_ReturnType result)   /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2098  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2099    PduR_Det_ReportError(PDUR_RMTP_TXSM_FINISHTX_FATALERROR, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2100    PDUR_DUMMY_STATEMENT(fmFifoRomIdx);  /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2101    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2102  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2103  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2104  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2105  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2106  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2107   * PduR_RmTp_FinishReception_TpTxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  2108   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2109   /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2110   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2111   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2112   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2113   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2114  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2115  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2116    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2117    PduR_FmFifoRomIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2118  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2119    switch (PduR_GetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, memIdx))
; ..\component\PduR\Implementation\PduR_RmTp.c	  2120    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2121      case PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2122        PduR_RmTp_FinishReception_TpTxSmStateHandler_FatalError(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2123        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2124  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2125      case PDUR_RM_TX_RECEPTION_ACTIVE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  2126        PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_ACTIVE(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2127        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2128  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2129      case PDUR_RM_TX_TRANSMISSION_FINISHED_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  2130        PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_TRANSMISSION_FINISHED(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2131        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2132  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2133      case PDUR_RM_TX_RECEPTION_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  2134        PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2135        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2136  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2137      case PDUR_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2138        PduR_RmTp_FinishReception_TpTxSmStateHandler_FatalError(rmSrcIdx, result);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2139        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2140  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2141      default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2142        /* If state is out-of-bounds: do nothing. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2143        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2144    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2145  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2146  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2147  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2148  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2149  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2150   * PduR_RmTp_FinishReception_TpTxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	  2151   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2152  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2153   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2154   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2155   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2156   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2157  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_FatalError(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result) /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2158  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2159    PduR_Det_ReportError(PDUR_FINISHRECEPTION, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2160    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2161    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2162  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2163  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2164  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2165  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2166  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM  == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2167  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2168   * PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  2169   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2170  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2171   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2172   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2173   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2174   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2175   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2176   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2177   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2178   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2179   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2180  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2181  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2182    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2183    PduR_FmFifoRamIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2184  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2185    if(result == E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2186    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2187      PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PDUR_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM, memIdx);   /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2188  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2189      if(PduR_RmTp_TriggerTransmissionOfDestinations(rmSrcIdx) != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2190      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2191        PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM, memIdx);     /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2192        PduR_RmTp_ActivateNext(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2193      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2194    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2195    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  2196    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2197      PduR_Fm_ReleaseFifoElement(PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2198      PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM, memIdx);     /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2199      PduR_RmTp_ActivateNext(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2200    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2201  }       /* PRQA S 6080 */ /* MD_MSR_STMIF */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2202  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2203  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2204  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2205  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2206   * PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  2207   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2208  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2209   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2210   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2211   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2212   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2213   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2214   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2215  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_RECEPTION_TRANSMISSION_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2216  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2217    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2218    PduR_FmFifoRamIterType fmFifoRamIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2219  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2220    PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRamIdx, PDUR_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM, memIdx);       /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2221  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2222    if(result != E_OK)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2223    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2224      PduR_RmTp_CancelTransmitOnDestinations(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2225    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2226  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2227  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2228  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2229  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2230  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2231   * PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_TRANSMISSION_FINISHED
; ..\component\PduR\Implementation\PduR_RmTp.c	  2232   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2233  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2234   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2235   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2236   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2237   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2238   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2239   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2240  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_FinishReception_TpTxSmStateHandler_RM_TX_TRANSMISSION_FINISHED(PduR_RmSrcRomIterType rmSrcIdx, Std_ReturnType result)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2241  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2242    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2243    PduR_FmFifoRamIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2244  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2245    PduR_Fm_ReleaseFifoElement(PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2246    PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRomIdx, PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM, memIdx); /* SBSW_PDUR_CSL01 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2247    PduR_RmTp_ActivateNext(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2248  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2249    PDUR_DUMMY_STATEMENT(result); /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2250  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2251  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2252  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2253  #if ((PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON) && (PDUR_RPGROM == STD_ON))
; ..\component\PduR\Implementation\PduR_RmTp.c	  2254  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2255   * PduR_RmTp_TpDisableRouting_TpTxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  2256   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2257  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2258   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2259   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2260   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2261   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2262  FUNC(void, PDUR_CODE) PduR_RmTp_TpDisableRouting_TpTxSmStateHandler(PduR_RmDestRomIterType rmDestRomIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2263  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2264    PduR_RmTp_TxInst_CancelTransmit(PduR_GetRmGDestRomIdxOfRmDestRom(rmDestRomIdx));
; ..\component\PduR\Implementation\PduR_RmTp.c	  2265  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2266  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2267  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2268  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2269  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2270   * PduR_RmTp_CancelReceive_TpRxSmStateHandler
; ..\component\PduR\Implementation\PduR_RmTp.c	  2271   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2272    /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2273   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2274   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2275   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2276   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2277  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelReceive_TpRxSmStateHandler(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2278  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2279    switch (PduR_GetTpRxSmStateOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx)))
; ..\component\PduR\Implementation\PduR_RmTp.c	  2280    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2281      case PDUR_RM_RX_IDLE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2282        PduR_RmTp_CancelReceive_TpRxSmStateHandler_FatalError(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2283        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2284  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2285      case PDUR_RM_RX_ACTIVE_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM:
; ..\component\PduR\Implementation\PduR_RmTp.c	  2286        PduR_RmTp_CancelReceive_TpRxSmStateHandler_RM_RX_ACTIVE(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2287        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2288  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2289      case PDUR_RM_RX_ABORTED_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM: /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2290        PduR_RmTp_CancelReceive_TpRxSmStateHandler_FatalError(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2291        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2292  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2293      default: /* COV_PDUR_MISRA */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2294        /* If state is out-of-bounds: do nothing. */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2295        break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2296    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2297  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2298  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2299  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2300  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2301  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2302   * PduR_RmTp_CancelReceive_TpRxSmStateHandler_RM_RX_ACTIVE
; ..\component\PduR\Implementation\PduR_RmTp.c	  2303   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2304  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2305   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2306   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2307   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2308   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2309   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2310  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelReceive_TpRxSmStateHandler_RM_RX_ACTIVE(PduR_RmSrcRomIterType rmSrcIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2311  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2312    PduR_SetTpRxSmStateOfRmBufferedTpPropertiesRam(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), PDUR_RM_RX_ABORTED_TPRXSMSTATEOFRMBUFFEREDTPPROPERTIESRAM, PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx));  /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2313    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2314  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2315  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2316  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2317  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2318  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2319   * PduR_RmTp_CancelReceive_TpRxSmStateHandler_FatalError
; ..\component\PduR\Implementation\PduR_RmTp.c	  2320   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2321  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2322   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2323   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2324   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2325   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2326   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2327  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_CancelReceive_TpRxSmStateHandler_FatalError(PduR_RmSrcRomIterType rmSrcIdx)     /* COV_PDUR_FATAL_ERROR */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2328  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2329    PduR_Det_ReportError(PDUR_RXSM_TPCANCELRECEIVE_FATALERROR, PDUR_E_FATAL);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2330    PDUR_DUMMY_STATEMENT(rmSrcIdx);       /* PRQA S 1338, 2983, 3112 */ /* MD_MSR_DummyStmt */ /* lint -e{438} */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2331  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2332  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2333  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2334  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2335  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2336   * PduR_RmTp_ActivateNext
; ..\component\PduR\Implementation\PduR_RmTp.c	  2337   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2338  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2339   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2340   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2341   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2342   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2343  LOCAL_INLINE FUNC(void, PDUR_CODE) PduR_RmTp_ActivateNext(PduR_FmFifoRamIterType fmFifoRamIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2344  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2345    PduR_FmFifoElementRamIterType fmFifoElementRamReadIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2346    while(PduR_Fm_Peek(fmFifoRamIdx, &fmFifoElementRamReadIdx, memIdx) == E_OK)      /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2347    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2348      PduR_RmSrcRomIterType rmSrcIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2349      PduR_FmFifoElementRamIterType fmFifoElementRamWriteIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2350  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2351      if(PduR_RmTp_GetRmSrcRomIdxOfOldestFmFifoElementSafe(fmFifoRamIdx, &rmSrcIdx, memIdx) == E_NOT_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2352      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2353        /* If the read handle id is erroneous and does not belong to this queue: free this element and look for next  */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2354        PduR_Fm_ReleaseFifoElement(fmFifoElementRamReadIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2355        continue;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2356      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2357  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2358      /* Is Rx already finished? */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2359      if((PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx(rmSrcIdx, &fmFifoElementRamWriteIdx) != E_OK) || (fmFifoElementRamReadIdx != fmFifoElementRamWriteIdx)) /* SBSW_PDUR_STACK_VARIABLE */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2360      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2361        PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRamIdx, PDUR_RM_TX_RECEPTION_FINISHED_TRANSMISSION_ACTIVE_TPTXSMSTATEOFFMFIFORAM, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2362  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2363        if(PduR_RmTp_TriggerTransmissionOfDestinations(rmSrcIdx) != E_OK) /* COV_PDUR_ONLY_DEFERRED_TP_QUEUED_ROUTINGS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2364        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2365          PduR_SetTpTxSmStateOfFmFifoRam(fmFifoRamIdx, PDUR_RM_TX_IDLE_TPTXSMSTATEOFFMFIFORAM, memIdx); /* SBSW_PDUR_CSL03 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2366        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2367  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2368      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2369      else
; ..\component\PduR\Implementation\PduR_RmTp.c	  2370      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2371        (void) PduR_RmTp_CheckReady2Transmit_TpTxSmStateHandler_RM_TX_IDLE_OR_RM_TX_RECEPTION_ACTIVE(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2372      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2373  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2374      break;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2375    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2376  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2377  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2378  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2379  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2380  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2381   * PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx
; ..\component\PduR\Implementation\PduR_RmTp.c	  2382   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2383  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2384   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2385   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2386   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2387   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2388  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx(PduR_RmSrcRomIterType rmSrcIdx, P2VAR(PduR_FmFifoElementRamIterType, AUTOMATIC, PDUR_APPL_DATA) fmFifoElementRamIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2389  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2390    Std_ReturnType retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2391    PduR_MemIdxType memIdx = PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2392    PduR_FmFifoElementRamIterType readFmFifoElementRamIdx = PduR_RmTp_GetFmFifoElementRamIdxOfRmBufferedTpPropertiesSafe(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(rmSrcIdx), memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2393  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2394    if(readFmFifoElementRamIdx == PDUR_NO_FMFIFOELEMENTRAMIDXOFRMBUFFEREDTPPROPERTIESRAM)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2395    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2396      retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2397    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2398    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  2399    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2400      *fmFifoElementRamIdx = readFmFifoElementRamIdx; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2401      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2402    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2403  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2404    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2405  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2406  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2407  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2408  #if (PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2409  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2410   * PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx
; ..\component\PduR\Implementation\PduR_RmTp.c	  2411   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2412  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2413   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2414   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2415   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2416   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2417  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_GetCurrentlyUsedBmTxBufferRamIdxByRmSrcIdx(PduR_RmSrcRomIterType rmSrcIdx, P2VAR(PduR_BmTxBufferRomIterType, AUTOMATIC, PDUR_APPL_DATA) bmTxBufferRomIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2418  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2419    Std_ReturnType retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2420    PduR_FmFifoElementRamIterType fmFifoElementRamWriteIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2421  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2422    if(PduR_RmTp_GetCurrentlyWrittenFmFifoElementRamIdxByRmSrcIdx(rmSrcIdx, &fmFifoElementRamWriteIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2423    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2424      retVal = PduR_Fm_GetCurrentlyUsedBmTxBufferRomIdxByFmFifoElementIdx(fmFifoElementRamWriteIdx, bmTxBufferRomIdx, PduR_GetPartitionIndexOfCslOfRmSrcRom(rmSrcIdx)); /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2425    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2426    else
; ..\component\PduR\Implementation\PduR_RmTp.c	  2427    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2428      retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2429    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2430  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2431    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2432  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2433  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2434  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2435  #if(PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2436  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2437   * PduR_RmTp_GetFmFifoElementRamIdxOfRmBufferedTpPropertiesSafe
; ..\component\PduR\Implementation\PduR_RmTp.c	  2438   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2439  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2440   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2441   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2442   *   -
; ..\component\PduR\Implementation\PduR_RmTp.c	  2443   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2444  LOCAL_INLINE FUNC(PduR_FmFifoElementRamIdxOfRmBufferedTpPropertiesRamType, PDUR_CODE) PduR_RmTp_GetFmFifoElementRamIdxOfRmBufferedTpPropertiesSafe(PduR_RmBufferedTpPropertiesRomIdxOfRmSrcRomType bufferedTpPropertiesRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2445  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2446    PduR_FmFifoElementRamIdxOfRmBufferedTpPropertiesRamType fmFifoElementRamIdx = PduR_GetFmFifoElementRamIdxOfRmBufferedTpPropertiesRam(bufferedTpPropertiesRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2447  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2448  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2449    PduR_FmFifoRamIterType fmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(bufferedTpPropertiesRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2450    PduR_FmFifoElementRamStartIdxOfFmFifoRomType startIdx = PduR_GetFmFifoElementRamStartIdxOfFmFifoRom(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2451    PduR_FmFifoElementRamEndIdxOfFmFifoRomType   endIdx   = PduR_GetFmFifoElementRamEndIdxOfFmFifoRom(fmFifoRomIdx, memIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2452  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2453    if((fmFifoElementRamIdx >= endIdx) && (fmFifoElementRamIdx != PDUR_NO_FMFIFOELEMENTRAMIDXOFRMBUFFEREDTPPROPERTIESRAM)) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2454    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2455      fmFifoElementRamIdx = endIdx - 1u;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2456      PduR_ReportRuntimeDetError(PDUR_FCT_GETCURRENTLYWRITTENFIFOELEMENT, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2457    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2458    if((fmFifoElementRamIdx < startIdx) && (fmFifoElementRamIdx != PDUR_NO_FMFIFOELEMENTRAMIDXOFRMBUFFEREDTPPROPERTIESRAM))  /* COV_PDUR_EXTENDED_ERROR_CHECKS */ /* PRQA S 2995, 2996 */ /* MD_PduR_2995_2996 */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2459    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2460      fmFifoElementRamIdx = startIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2461      PduR_ReportRuntimeDetError(PDUR_FCT_GETCURRENTLYWRITTENFIFOELEMENT, PDUR_E_IDXOUTOFBOUNDS);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2462    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2463  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2464  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2465    return fmFifoElementRamIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2466  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2467  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2468  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2469  #if(PDUR_EXISTS_TP_BUFFERED_ROUTINGTYPEOFRMDESTROM == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2470  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2471   * PduR_RmTp_GetRmSrcRomIdxOfOldestFmFifoElementSafe
; ..\component\PduR\Implementation\PduR_RmTp.c	  2472   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2473  /*!
; ..\component\PduR\Implementation\PduR_RmTp.c	  2474   * Internal comment removed.
; ..\component\PduR\Implementation\PduR_RmTp.c	  2475   *
; ..\component\PduR\Implementation\PduR_RmTp.c	  2476   *   -
; ..\component\PduR\Implementation\PduR_RmTp.c	  2477   *********************************************************************************************************************/
; ..\component\PduR\Implementation\PduR_RmTp.c	  2478  LOCAL_INLINE FUNC(Std_ReturnType, PDUR_CODE) PduR_RmTp_GetRmSrcRomIdxOfOldestFmFifoElementSafe(PduR_FmFifoRomIterType fmFifoRomIdx, P2VAR(PduR_RmSrcRomIterType, AUTOMATIC, PDUR_APPL_DATA) rmSrcRomIdx, PduR_MemIdxType memIdx)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2479  {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2480    Std_ReturnType retVal = E_NOT_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2481    PduR_RmDestRomIterType rmDestRomIdx;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2482  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2483    if(PduR_Fm_GetRmDestRomIdxOfFmFifoElementRamSafe(PduR_Fm_GetFmFifoElementRamReadIdxOfFmFifoRamSafe(fmFifoRomIdx, memIdx), &rmDestRomIdx, memIdx) == E_OK) /* SBSW_PDUR_STACK_VARIABLE */ /* COV_PDUR_ROBUSTNESS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2484    {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2485      PduR_RmSrcRomIterType readRmSrcRomIdx = PduR_GetRmSrcRomIdxOfRmDestRom(rmDestRomIdx);
; ..\component\PduR\Implementation\PduR_RmTp.c	  2486  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2487  # if (PDUR_EXTENDED_ERROR_CHECKS == STD_ON)
; ..\component\PduR\Implementation\PduR_RmTp.c	  2488      if(PduR_IsRmBufferedTpPropertiesRomUsedOfRmSrcRom(readRmSrcRomIdx)) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2489      {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2490  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2491        PduR_FmFifoRomIterType supposedfmFifoRomIdx = PduR_GetFmFifoRomIdxOfRmBufferedTpPropertiesRom(PduR_GetRmBufferedTpPropertiesRomIdxOfRmSrcRom(readRmSrcRomIdx), PduR_GetPartitionIndexOfCslOfRmSrcRom(readRmSrcRomIdx));
; ..\component\PduR\Implementation\PduR_RmTp.c	  2492  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2493        if(supposedfmFifoRomIdx == fmFifoRomIdx) /* COV_PDUR_EXTENDED_ERROR_CHECKS */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2494        {
; ..\component\PduR\Implementation\PduR_RmTp.c	  2495          *rmSrcRomIdx = readRmSrcRomIdx; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2496          retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2497        }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2498      }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2499  # else
; ..\component\PduR\Implementation\PduR_RmTp.c	  2500      *rmSrcRomIdx = readRmSrcRomIdx; /* SBSW_PDUR_VALID_PTR_ENSURED_BY_CALLING_FUNCTION */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2501      retVal = E_OK;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2502  # endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2503    }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2504  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2505    return retVal;
; ..\component\PduR\Implementation\PduR_RmTp.c	  2506  }
; ..\component\PduR\Implementation\PduR_RmTp.c	  2507  #endif
; ..\component\PduR\Implementation\PduR_RmTp.c	  2508  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2509  #define PDUR_STOP_SEC_CODE
; ..\component\PduR\Implementation\PduR_RmTp.c	  2510  #include "PduR_MemMap.h" /* PRQA S 5087 */   /* MD_MSR_MemMap */
; ..\component\PduR\Implementation\PduR_RmTp.c	  2511  
; ..\component\PduR\Implementation\PduR_RmTp.c	  2512  /**********************************************************************************************************************
; ..\component\PduR\Implementation\PduR_RmTp.c	  2513   *  END OF FILE: PduR_RmTp.c
; ..\component\PduR\Implementation\PduR_RmTp.c	  2514   *********************************************************************************************************************/

	; Module end
