	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\Os\\Implementation\\.Os_Event.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\Os\\Implementation\\Os_Event.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\Os\\Implementation\\Os_Event.src ..\\component\\Os\\Implementation\\Os_Event.c"
	.compiler_name		"ctc"
	;source	'..\\component\\Os\\Implementation\\Os_Event.c'

	
$TC162
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_SetEvent')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_SetEvent

; ..\component\Os\Implementation\Os_Event.c	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Event.c	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Event.c	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Event.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Event.c	     6   *
; ..\component\Os\Implementation\Os_Event.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Event.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Event.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Event.c	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Event.c	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Event.c	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Event.c	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Event.c	    14  /**
; ..\component\Os\Implementation\Os_Event.c	    15   * \addtogroup Os_Event
; ..\component\Os\Implementation\Os_Event.c	    16   * \{
; ..\component\Os\Implementation\Os_Event.c	    17   *
; ..\component\Os\Implementation\Os_Event.c	    18   *
; ..\component\Os\Implementation\Os_Event.c	    19   * \file
; ..\component\Os\Implementation\Os_Event.c	    20   * \brief       Implementation of \ref Os_Event.
; ..\component\Os\Implementation\Os_Event.c	    21   *
; ..\component\Os\Implementation\Os_Event.c	    22   *
; ..\component\Os\Implementation\Os_Event.c	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Event.c	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Event.c	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Event.c	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    29  
; ..\component\Os\Implementation\Os_Event.c	    30                                                                                                                          /* PRQA S 0777, 0779, 0828  EOF */ /* MD_MSR_Rule5.1, MD_MSR_Rule5.2, MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Event.c	    31  
; ..\component\Os\Implementation\Os_Event.c	    32  
; ..\component\Os\Implementation\Os_Event.c	    33  #define OS_EVENT_SOURCE
; ..\component\Os\Implementation\Os_Event.c	    34  
; ..\component\Os\Implementation\Os_Event.c	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Event.c	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Event.c	    39  #include "Std_Types.h"
; ..\component\Os\Implementation\Os_Event.c	    40  
; ..\component\Os\Implementation\Os_Event.c	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Event.c	    42  #include "Os_Event.h"
; ..\component\Os\Implementation\Os_Event.c	    43  
; ..\component\Os\Implementation\Os_Event.c	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Event.c	    45  #include "Os_Task.h"
; ..\component\Os\Implementation\Os_Event.c	    46  #include "Os_Task_Lcfg.h"
; ..\component\Os\Implementation\Os_Event.c	    47  
; ..\component\Os\Implementation\Os_Event.c	    48  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Event.c	    49  
; ..\component\Os\Implementation\Os_Event.c	    50  
; ..\component\Os\Implementation\Os_Event.c	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    52   *  LOCAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Event.c	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    54  
; ..\component\Os\Implementation\Os_Event.c	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    56   *  LOCAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Event.c	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    58  
; ..\component\Os\Implementation\Os_Event.c	    59  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    60   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Event.c	    61   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    62  
; ..\component\Os\Implementation\Os_Event.c	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    64   *  LOCAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Event.c	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    66  
; ..\component\Os\Implementation\Os_Event.c	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    68   *  GLOBAL DATA
; ..\component\Os\Implementation\Os_Event.c	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    70  
; ..\component\Os\Implementation\Os_Event.c	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    72   *  LOCAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Event.c	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    74  #define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Event.c	    75  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Event.c	    76  
; ..\component\Os\Implementation\Os_Event.c	    77  
; ..\component\Os\Implementation\Os_Event.c	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	    79   *  Os_EventTriggerSet()
; ..\component\Os\Implementation\Os_Event.c	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    81  /*! \brief          Triggers events.
; ..\component\Os\Implementation\Os_Event.c	    82   *  \details        --no details--
; ..\component\Os\Implementation\Os_Event.c	    83   *
; ..\component\Os\Implementation\Os_Event.c	    84   *  \param[in,out]  Events  The event management object to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Event.c	    85   *  \param[in]      Mask    The bits to set.
; ..\component\Os\Implementation\Os_Event.c	    86   *
; ..\component\Os\Implementation\Os_Event.c	    87   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Event.c	    88   *
; ..\component\Os\Implementation\Os_Event.c	    89   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Event.c	    90   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Event.c	    91   *
; ..\component\Os\Implementation\Os_Event.c	    92   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Event.c	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	    94  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	    95  Os_EventTriggerSet,
; ..\component\Os\Implementation\Os_Event.c	    96  (
; ..\component\Os\Implementation\Os_Event.c	    97    P2VAR(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events,
; ..\component\Os\Implementation\Os_Event.c	    98    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	    99  ));
; ..\component\Os\Implementation\Os_Event.c	   100  
; ..\component\Os\Implementation\Os_Event.c	   101  
; ..\component\Os\Implementation\Os_Event.c	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   103   *  Os_EventTriggerGet()
; ..\component\Os\Implementation\Os_Event.c	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   105  /*! \brief          Returns events which have been triggered.
; ..\component\Os\Implementation\Os_Event.c	   106   *  \details        --no details--
; ..\component\Os\Implementation\Os_Event.c	   107   *
; ..\component\Os\Implementation\Os_Event.c	   108   *  \param[out]     Events  The event management object to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Event.c	   109   *
; ..\component\Os\Implementation\Os_Event.c	   110   *  \return         Event mask containing triggered events.
; ..\component\Os\Implementation\Os_Event.c	   111   *
; ..\component\Os\Implementation\Os_Event.c	   112   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Event.c	   113   *
; ..\component\Os\Implementation\Os_Event.c	   114   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Event.c	   115   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Event.c	   116   *
; ..\component\Os\Implementation\Os_Event.c	   117   *  \pre            Concurrent access to given object shall be prevented on platforms with less than 64 bits or caller
; ..\component\Os\Implementation\Os_Event.c	   118   *                  has to ensure consistent read.
; ..\component\Os\Implementation\Os_Event.c	   119   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   120  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE EventMaskType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   121  Os_EventTriggerGet,
; ..\component\Os\Implementation\Os_Event.c	   122  (
; ..\component\Os\Implementation\Os_Event.c	   123    P2CONST(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events
; ..\component\Os\Implementation\Os_Event.c	   124  ));
; ..\component\Os\Implementation\Os_Event.c	   125  
; ..\component\Os\Implementation\Os_Event.c	   126  
; ..\component\Os\Implementation\Os_Event.c	   127  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   128   *  Os_EventTriggerClear()
; ..\component\Os\Implementation\Os_Event.c	   129   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   130  /*! \brief          Clear events from event trigger mask.
; ..\component\Os\Implementation\Os_Event.c	   131   *  \details        --no details--
; ..\component\Os\Implementation\Os_Event.c	   132   *
; ..\component\Os\Implementation\Os_Event.c	   133   *  \param[in,out]  Events  The event management object to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Event.c	   134   *  \param[in]      Mask    The bits to clear.
; ..\component\Os\Implementation\Os_Event.c	   135  
; ..\component\Os\Implementation\Os_Event.c	   136   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Event.c	   137   *
; ..\component\Os\Implementation\Os_Event.c	   138   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Event.c	   139   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Event.c	   140   *
; ..\component\Os\Implementation\Os_Event.c	   141   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Event.c	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   143  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   144  Os_EventTriggerClear,
; ..\component\Os\Implementation\Os_Event.c	   145  (
; ..\component\Os\Implementation\Os_Event.c	   146    P2VAR(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events,
; ..\component\Os\Implementation\Os_Event.c	   147    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   148  ));
; ..\component\Os\Implementation\Os_Event.c	   149  
; ..\component\Os\Implementation\Os_Event.c	   150  
; ..\component\Os\Implementation\Os_Event.c	   151  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   152   *  Os_EventWaitEventTriggered()
; ..\component\Os\Implementation\Os_Event.c	   153   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   154  /*! \brief          Returns whether waiting events are triggered (!0) or not (0).
; ..\component\Os\Implementation\Os_Event.c	   155   *  \details        --no details--
; ..\component\Os\Implementation\Os_Event.c	   156   *
; ..\component\Os\Implementation\Os_Event.c	   157   *  \param[in,out]  Events  The event management object to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Event.c	   158   *
; ..\component\Os\Implementation\Os_Event.c	   159   *  \retval         0       No wait event is triggered.
; ..\component\Os\Implementation\Os_Event.c	   160   *  \retval         !0      At least one wait event is triggered.
; ..\component\Os\Implementation\Os_Event.c	   161   *
; ..\component\Os\Implementation\Os_Event.c	   162   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Event.c	   163   *
; ..\component\Os\Implementation\Os_Event.c	   164   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Event.c	   165   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Event.c	   166   *
; ..\component\Os\Implementation\Os_Event.c	   167   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Event.c	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   169  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE EventMaskType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   170  Os_EventWaitEventTriggered,
; ..\component\Os\Implementation\Os_Event.c	   171  (
; ..\component\Os\Implementation\Os_Event.c	   172    P2CONST(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events
; ..\component\Os\Implementation\Os_Event.c	   173  ));
; ..\component\Os\Implementation\Os_Event.c	   174  
; ..\component\Os\Implementation\Os_Event.c	   175  
; ..\component\Os\Implementation\Os_Event.c	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   177   *  Os_EventWaitSet()
; ..\component\Os\Implementation\Os_Event.c	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   179  /*! \brief          Sets the wait events.
; ..\component\Os\Implementation\Os_Event.c	   180   *  \details        --no details--
; ..\component\Os\Implementation\Os_Event.c	   181   *
; ..\component\Os\Implementation\Os_Event.c	   182   *  \param[in,out]  Events  The event management object to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Event.c	   183   *  \param[in]      Mask    The events to wait for.
; ..\component\Os\Implementation\Os_Event.c	   184   *
; ..\component\Os\Implementation\Os_Event.c	   185   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Event.c	   186   *
; ..\component\Os\Implementation\Os_Event.c	   187   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Event.c	   188   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Event.c	   189   *
; ..\component\Os\Implementation\Os_Event.c	   190   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Event.c	   191   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   192  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   193  Os_EventWaitSet,
; ..\component\Os\Implementation\Os_Event.c	   194  (
; ..\component\Os\Implementation\Os_Event.c	   195    P2VAR(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events,
; ..\component\Os\Implementation\Os_Event.c	   196    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   197  ));
; ..\component\Os\Implementation\Os_Event.c	   198  
; ..\component\Os\Implementation\Os_Event.c	   199  
; ..\component\Os\Implementation\Os_Event.c	   200  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   201   *  Os_EventIsEnabled()
; ..\component\Os\Implementation\Os_Event.c	   202   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   203  /*! \brief          Returns whether event API is enabled (!0) or not (0).
; ..\component\Os\Implementation\Os_Event.c	   204   *  \details        --no details--
; ..\component\Os\Implementation\Os_Event.c	   205   *
; ..\component\Os\Implementation\Os_Event.c	   206   *  \retval         !0    Event API is enabled.
; ..\component\Os\Implementation\Os_Event.c	   207   *  \retval         0     Event API is disabled.
; ..\component\Os\Implementation\Os_Event.c	   208   *
; ..\component\Os\Implementation\Os_Event.c	   209   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Event.c	   210   *
; ..\component\Os\Implementation\Os_Event.c	   211   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Event.c	   212   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Event.c	   213   *
; ..\component\Os\Implementation\Os_Event.c	   214   *  \pre            -
; ..\component\Os\Implementation\Os_Event.c	   215   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   216  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_EventIsEnabled,
; ..\component\Os\Implementation\Os_Event.c	   217  (
; ..\component\Os\Implementation\Os_Event.c	   218    void
; ..\component\Os\Implementation\Os_Event.c	   219  ));
; ..\component\Os\Implementation\Os_Event.c	   220  
; ..\component\Os\Implementation\Os_Event.c	   221  
; ..\component\Os\Implementation\Os_Event.c	   222  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   223   *  LOCAL FUNCTIONS
; ..\component\Os\Implementation\Os_Event.c	   224   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   225  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   226   *  Os_EventTriggerSet()
; ..\component\Os\Implementation\Os_Event.c	   227   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   228  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   229  Os_EventTriggerSet,
; ..\component\Os\Implementation\Os_Event.c	   230  (
; ..\component\Os\Implementation\Os_Event.c	   231    P2VAR(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events,
; ..\component\Os\Implementation\Os_Event.c	   232    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   233  ))
; ..\component\Os\Implementation\Os_Event.c	   234  {
; ..\component\Os\Implementation\Os_Event.c	   235    Events->Triggered |= Mask;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   236  }
; ..\component\Os\Implementation\Os_Event.c	   237  
; ..\component\Os\Implementation\Os_Event.c	   238  
; ..\component\Os\Implementation\Os_Event.c	   239  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   240   *  Os_EventTriggerGet()
; ..\component\Os\Implementation\Os_Event.c	   241   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   242  OS_FUNC_ATTRIBUTE_DEFINITION( OS_LOCAL_INLINE EventMaskType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   243  Os_EventTriggerGet,
; ..\component\Os\Implementation\Os_Event.c	   244  (
; ..\component\Os\Implementation\Os_Event.c	   245    P2CONST(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events
; ..\component\Os\Implementation\Os_Event.c	   246  ))
; ..\component\Os\Implementation\Os_Event.c	   247  {
; ..\component\Os\Implementation\Os_Event.c	   248    return Events->Triggered;
; ..\component\Os\Implementation\Os_Event.c	   249  }
; ..\component\Os\Implementation\Os_Event.c	   250  
; ..\component\Os\Implementation\Os_Event.c	   251  
; ..\component\Os\Implementation\Os_Event.c	   252  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   253   *  Os_EventTriggerClear()
; ..\component\Os\Implementation\Os_Event.c	   254   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   255  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   256  Os_EventTriggerClear,
; ..\component\Os\Implementation\Os_Event.c	   257  (
; ..\component\Os\Implementation\Os_Event.c	   258    P2VAR(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events,
; ..\component\Os\Implementation\Os_Event.c	   259    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   260  ))
; ..\component\Os\Implementation\Os_Event.c	   261  {
; ..\component\Os\Implementation\Os_Event.c	   262    Events->Triggered &= (~Mask);                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   263  }
; ..\component\Os\Implementation\Os_Event.c	   264  
; ..\component\Os\Implementation\Os_Event.c	   265  
; ..\component\Os\Implementation\Os_Event.c	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   267   *  Os_EventWaitEventTriggered()
; ..\component\Os\Implementation\Os_Event.c	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   269  /*!
; ..\component\Os\Implementation\Os_Event.c	   270   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   271   *
; ..\component\Os\Implementation\Os_Event.c	   272   *
; ..\component\Os\Implementation\Os_Event.c	   273   *
; ..\component\Os\Implementation\Os_Event.c	   274   */
; ..\component\Os\Implementation\Os_Event.c	   275  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE EventMaskType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   276  Os_EventWaitEventTriggered,
; ..\component\Os\Implementation\Os_Event.c	   277  (
; ..\component\Os\Implementation\Os_Event.c	   278    P2CONST(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events
; ..\component\Os\Implementation\Os_Event.c	   279  ))
; ..\component\Os\Implementation\Os_Event.c	   280  {
; ..\component\Os\Implementation\Os_Event.c	   281    /* Both event trigger and waiting are declared volatile. As the fetch order of the arguments of a bitwise 'and'
; ..\component\Os\Implementation\Os_Event.c	   282     * is undefined, a local snapshot of the mask has to be created. This snapshot is used to calculate the
; ..\component\Os\Implementation\Os_Event.c	   283     * 'and' (found by IAR compiler 1.20.01.445 for RH850). */
; ..\component\Os\Implementation\Os_Event.c	   284    EventMaskType triggerd;
; ..\component\Os\Implementation\Os_Event.c	   285    EventMaskType waiting;
; ..\component\Os\Implementation\Os_Event.c	   286  
; ..\component\Os\Implementation\Os_Event.c	   287    /* #10 Take a snapshot of the event. */
; ..\component\Os\Implementation\Os_Event.c	   288    triggerd = Events->Triggered;
; ..\component\Os\Implementation\Os_Event.c	   289  
; ..\component\Os\Implementation\Os_Event.c	   290    /* #20 Compute the bitwise 'and'. */
; ..\component\Os\Implementation\Os_Event.c	   291    waiting = Events->Waiting;
; ..\component\Os\Implementation\Os_Event.c	   292  
; ..\component\Os\Implementation\Os_Event.c	   293    return (triggerd & waiting);
; ..\component\Os\Implementation\Os_Event.c	   294  }
; ..\component\Os\Implementation\Os_Event.c	   295  
; ..\component\Os\Implementation\Os_Event.c	   296  
; ..\component\Os\Implementation\Os_Event.c	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   298   *  Os_EventWaitSet()
; ..\component\Os\Implementation\Os_Event.c	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Event.c	   301  Os_EventWaitSet,
; ..\component\Os\Implementation\Os_Event.c	   302  (
; ..\component\Os\Implementation\Os_Event.c	   303    P2VAR(Os_EventStateType, AUTOMATIC, OS_VAR_NOINIT) Events,
; ..\component\Os\Implementation\Os_Event.c	   304    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   305  ))
; ..\component\Os\Implementation\Os_Event.c	   306  {
; ..\component\Os\Implementation\Os_Event.c	   307    Events->Waiting = Mask;                                                                                               /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   308  }
; ..\component\Os\Implementation\Os_Event.c	   309  
; ..\component\Os\Implementation\Os_Event.c	   310  
; ..\component\Os\Implementation\Os_Event.c	   311  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   312   *  Os_EventIsEnabled()
; ..\component\Os\Implementation\Os_Event.c	   313   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   314  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,
; ..\component\Os\Implementation\Os_Event.c	   315  OS_ALWAYS_INLINE, Os_EventIsEnabled,
; ..\component\Os\Implementation\Os_Event.c	   316  (
; ..\component\Os\Implementation\Os_Event.c	   317    void
; ..\component\Os\Implementation\Os_Event.c	   318  ))
; ..\component\Os\Implementation\Os_Event.c	   319  {
; ..\component\Os\Implementation\Os_Event.c	   320    return (Os_StdReturnType)(OS_CFG_EVENT == STD_ON);                                                                    /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Event.c	   321  }
; ..\component\Os\Implementation\Os_Event.c	   322  
; ..\component\Os\Implementation\Os_Event.c	   323  
; ..\component\Os\Implementation\Os_Event.c	   324  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   325   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Event.c	   326   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   327  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   328   *  Os_Api_SetEvent()
; ..\component\Os\Implementation\Os_Event.c	   329   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   330  /*!
; ..\component\Os\Implementation\Os_Event.c	   331   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   332   *
; ..\component\Os\Implementation\Os_Event.c	   333   *
; ..\component\Os\Implementation\Os_Event.c	   334   *
; ..\component\Os\Implementation\Os_Event.c	   335   *
; ..\component\Os\Implementation\Os_Event.c	   336   *
; ..\component\Os\Implementation\Os_Event.c	   337   *
; ..\component\Os\Implementation\Os_Event.c	   338   *
; ..\component\Os\Implementation\Os_Event.c	   339   *
; ..\component\Os\Implementation\Os_Event.c	   340   *
; ..\component\Os\Implementation\Os_Event.c	   341   *
; ..\component\Os\Implementation\Os_Event.c	   342   */
; ..\component\Os\Implementation\Os_Event.c	   343  FUNC(Os_StatusType, OS_CODE) Os_Api_SetEvent
; Function Os_Api_SetEvent
.L70:
Os_Api_SetEvent:	.type	func
	mov	d15,d4
.L539:
	mov	e4,d7,d6
.L538:

; ..\component\Os\Implementation\Os_Event.c	   344  (
; ..\component\Os\Implementation\Os_Event.c	   345    TaskType TaskID,
; ..\component\Os\Implementation\Os_Event.c	   346    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   347  )
; ..\component\Os\Implementation\Os_Event.c	   348  {
; ..\component\Os\Implementation\Os_Event.c	   349    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   350  
; ..\component\Os\Implementation\Os_Event.c	   351    /* #10 Perform error checks. */
; ..\component\Os\Implementation\Os_Event.c	   352    if(Os_EventIsEnabled() == 0u)                                                                                         /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   353    {
; ..\component\Os\Implementation\Os_Event.c	   354      status = Os_ErrSetOkInStdStatus(OS_STATUS_EVENT_DISABLED_BY_CONFIG);                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   355    }
; ..\component\Os\Implementation\Os_Event.c	   356    else if(OS_UNLIKELY(Os_TaskCheckId(TaskID) == OS_CHECK_FAILED))
	jlt.u	d15,#6,.L2
.L645:

; ..\component\Os\Implementation\Os_Event.c	   357    {
; ..\component\Os\Implementation\Os_Event.c	   358      status = OS_STATUS_ID_1;
	mov	d9,#259
	j	.L3
.L2:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
	movh.a	a15,#@his(OsCfg_TaskRefs)
	lea	a15,[a15]@los(OsCfg_TaskRefs)
.L646:
	addsc.a	a15,a15,d15,#2
	ld.a	a4,[a15]
.L261:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L540:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a12,d15
.L266:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
	ld.a	a2,[a12]12
.L265:
	ld.hu	d15,[a2]20
.L541:

; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
	and	d15,#3
.L647:

; ..\component\Os\Implementation\Os_Event.c	   359    }
; ..\component\Os\Implementation\Os_Event.c	   360    else
; ..\component\Os\Implementation\Os_Event.c	   361    {
; ..\component\Os\Implementation\Os_Event.c	   362      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Event.c	   363      Os_AppAccessMaskType permittedApplications;
; ..\component\Os\Implementation\Os_Event.c	   364      P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) currentApplication;
; ..\component\Os\Implementation\Os_Event.c	   365      P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) task;
; ..\component\Os\Implementation\Os_Event.c	   366  
; ..\component\Os\Implementation\Os_Event.c	   367      task = Os_TaskId2Task(TaskID);
; ..\component\Os\Implementation\Os_Event.c	   368      currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Event.c	   369      permittedApplications = Os_TaskGetAccessingApplications(task);                                                      /* SBSW_OS_EV_TASKGETACCESSINGAPPLICATIONS_001 */
; ..\component\Os\Implementation\Os_Event.c	   370      currentApplication = Os_ThreadGetCurrentApplication(currentThread);                                                 /* SBSW_OS_EV_THREADGETCURRENTAPPLICATION_001 */
; ..\component\Os\Implementation\Os_Event.c	   371  
; ..\component\Os\Implementation\Os_Event.c	   372      if(OS_UNLIKELY(Os_ThreadCheckCallContext(currentThread, OS_APICONTEXT_SETEVENT) == OS_CHECK_FAILED))                /* SBSW_OS_EV_THREADCHECKCALLCONTEXT_001 */
	jne	d15,#0,.L4
.L648:

; ..\component\Os\Implementation\Os_Event.c	   373      {
; ..\component\Os\Implementation\Os_Event.c	   374        status = OS_STATUS_CALLEVEL;
	mov	d9,#2
	j	.L5
.L4:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a2,[a12]24
.L276:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	fcall	.cocofun_3
.L270:

; ..\component\Os\Implementation\Os_Event.c	   375      }
; ..\component\Os\Implementation\Os_Event.c	   376      else if(OS_UNLIKELY(Os_AppCheckAccess(currentApplication, permittedApplications) == OS_CHECK_FAILED))               /* SBSW_OS_EV_APPCHECKACCESS_001 */
; ..\component\Os\Implementation\Os_Event.c	   377      {
; ..\component\Os\Implementation\Os_Event.c	   378        status = OS_STATUS_ACCESSRIGHTS_1;
; ..\component\Os\Implementation\Os_Event.c	   379      }
; ..\component\Os\Implementation\Os_Event.c	   380      else if(OS_UNLIKELY(Os_ThreadCheckAreInterruptsEnabled(currentThread) == OS_CHECK_FAILED))                          /* SBSW_OS_EV_THREADCHECKAREINTERRUPTSENABLED_001 */
	jeq	d15,#0,.L6
.L649:

; ..\component\Os\Implementation\Os_Event.c	   381      {
; ..\component\Os\Implementation\Os_Event.c	   382        status = OS_STATUS_DISABLEDINT;
	mov	d9,#12
	j	.L7
.L6:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a4]77
.L650:

; ..\component\Os\Implementation\Os_Event.c	   383      }
; ..\component\Os\Implementation\Os_Event.c	   384      else if(OS_UNLIKELY(Os_TaskCheckIsExtendedTask(task) == OS_CHECK_FAILED))                                           /* SBSW_OS_EV_TASKCHECKISEXTENDEDTASK_001 */
	jeq	d15,#1,.L8
.L651:

; ..\component\Os\Implementation\Os_Event.c	   385      {
; ..\component\Os\Implementation\Os_Event.c	   386        status = OS_STATUS_NOEXTENDEDTASK_1;
	mov	d9,#1281
	j	.L9
.L8:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L280:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a15,[a12]20
.L286:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mov.u	d10,#32768
.L652:
	mfcr	d8,#65068
.L555:
	and	d8,d10
.L653:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L290:

; ..\component\Os\Implementation\Os_Event.c	   387      }
; ..\component\Os\Implementation\Os_Event.c	   388      else
; ..\component\Os\Implementation\Os_Event.c	   389      {
; ..\component\Os\Implementation\Os_Event.c	   390        /* #20 If the given task belongs to the local core: */
; ..\component\Os\Implementation\Os_Event.c	   391        if(OS_LIKELY(Os_TaskIsCoreLocal(task) != 0u))                                                                     /* SBSW_OS_EV_TASKISCORELOCAL_001 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */ /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Event.c	   392        {
; ..\component\Os\Implementation\Os_Event.c	   393          P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Event.c	   394          Os_IntStateType interruptState;
; ..\component\Os\Implementation\Os_Event.c	   395  
; ..\component\Os\Implementation\Os_Event.c	   396          core = Os_ThreadGetCore(currentThread);                                                                         /* SBSW_OS_EV_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Event.c	   397  
; ..\component\Os\Implementation\Os_Event.c	   398          /* #30 Suspend interrupts. */
; ..\component\Os\Implementation\Os_Event.c	   399          Os_IntSuspend(&interruptState);                                                                                 /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   400  
; ..\component\Os\Implementation\Os_Event.c	   401          /* #40 Call internal function to set events. */
; ..\component\Os\Implementation\Os_Event.c	   402          status = Os_EventSetLocal(task, Mask);                                                                          /* SBSW_OS_EV_EVENTSETLOCAL_001 */
	call	Os_EventSetLocal
.L542:
	mov	d9,d2
.L556:

; ..\component\Os\Implementation\Os_Event.c	   403  
; ..\component\Os\Implementation\Os_Event.c	   404          /* #50 If the caller is a task and set event leads to a task switch: */
; ..\component\Os\Implementation\Os_Event.c	   405          if(OS_LIKELY(status == OS_STATUS_OK))
	jne	d9,#0,.L10
.L294:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
	ld.hu	d15,[a12]48
.L543:
	mov	d0,#0
.L654:

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	jeq	d15,#1,.L11
.L655:

; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
	mov	d1,#512
.L656:

; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));      (inlined)
	jne	d15,d1,.L12

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L11:
	mov	d0,#1

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L12:

; ..\component\Os\Implementation\Os_Event.c	   406          {
; ..\component\Os\Implementation\Os_Event.c	   407            if(Os_ThreadIsTask(currentThread) != 0u)                                                                      /* SBSW_OS_EV_THREADISTASK_001 */
	jeq	d0,#0,.L13
.L295:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a4,[a15]28
.L300:

; ..\component\Os\Implementation\Os_Scheduler.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Scheduler.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Scheduler.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Scheduler.h	     6   *
; ..\component\Os\Implementation\Os_Scheduler.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Scheduler.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Scheduler.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Scheduler.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Scheduler.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Scheduler.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Scheduler.h	    14  /**
; ..\component\Os\Implementation\Os_Scheduler.h	    15   * \addtogroup Os_Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	    16   *
; ..\component\Os\Implementation\Os_Scheduler.h	    17   * \{
; ..\component\Os\Implementation\Os_Scheduler.h	    18   * \file
; ..\component\Os\Implementation\Os_Scheduler.h	    19   * \brief       Interface implementation of \ref Os_Scheduler.
; ..\component\Os\Implementation\Os_Scheduler.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Scheduler.h	    21   *
; ..\component\Os\Implementation\Os_Scheduler.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Scheduler.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Scheduler.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    28  
; ..\component\Os\Implementation\Os_Scheduler.h	    29  
; ..\component\Os\Implementation\Os_Scheduler.h	    30  #ifndef OS_SCHEDULER_H
; ..\component\Os\Implementation\Os_Scheduler.h	    31  # define OS_SCHEDULER_H
; ..\component\Os\Implementation\Os_Scheduler.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Scheduler.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Scheduler.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Scheduler.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    38  
; ..\component\Os\Implementation\Os_Scheduler.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Scheduler.h	    40  # include "Os_Scheduler_Types.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    41  # include "Os_SchedulerInt.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    42  # include "Os_Scheduler_Lcfg.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    43  
; ..\component\Os\Implementation\Os_Scheduler.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Scheduler.h	    45  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    46  # include "Os_BitArray.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    47  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    48  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    49  # include "Os_PriorityQueue.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    50  
; ..\component\Os\Implementation\Os_Scheduler.h	    51  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Scheduler.h	    52  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    53  
; ..\component\Os\Implementation\Os_Scheduler.h	    54  
; ..\component\Os\Implementation\Os_Scheduler.h	    55  
; ..\component\Os\Implementation\Os_Scheduler.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    57   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Scheduler.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    59  
; ..\component\Os\Implementation\Os_Scheduler.h	    60  
; ..\component\Os\Implementation\Os_Scheduler.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    62   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Scheduler.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    64  
; ..\component\Os\Implementation\Os_Scheduler.h	    65  
; ..\component\Os\Implementation\Os_Scheduler.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    67   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Scheduler.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    69  
; ..\component\Os\Implementation\Os_Scheduler.h	    70  
; ..\component\Os\Implementation\Os_Scheduler.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    72   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Scheduler.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    74  
; ..\component\Os\Implementation\Os_Scheduler.h	    75  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    76   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Scheduler.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    78  
; ..\component\Os\Implementation\Os_Scheduler.h	    79  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Scheduler.h	    80  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Scheduler.h	    81  
; ..\component\Os\Implementation\Os_Scheduler.h	    82  
; ..\component\Os\Implementation\Os_Scheduler.h	    83  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    84   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Scheduler.h	    85   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    86  
; ..\component\Os\Implementation\Os_Scheduler.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    88   *  Os_SchedulerIsRoundRobinEnabled()
; ..\component\Os\Implementation\Os_Scheduler.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Scheduler.h	    91  Os_SchedulerIsRoundRobinEnabled,
; ..\component\Os\Implementation\Os_Scheduler.h	    92  ( void ))
; ..\component\Os\Implementation\Os_Scheduler.h	    93  {
; ..\component\Os\Implementation\Os_Scheduler.h	    94    return (Os_StdReturnType)(OS_CFG_SCHEDULE_ROUND_ROB_ENABLED == STD_ON);                                               /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Scheduler.h	    95  }
; ..\component\Os\Implementation\Os_Scheduler.h	    96  
; ..\component\Os\Implementation\Os_Scheduler.h	    97  
; ..\component\Os\Implementation\Os_Scheduler.h	    98  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    99   *  Os_SchedulerPriorityIsHigher()
; ..\component\Os\Implementation\Os_Scheduler.h	   100   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   101  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   102  OS_ALWAYS_INLINE, Os_SchedulerPriorityIsHigher,
; ..\component\Os\Implementation\Os_Scheduler.h	   103  (
; ..\component\Os\Implementation\Os_Scheduler.h	   104    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   105    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   106  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   107  {
; ..\component\Os\Implementation\Os_Scheduler.h	   108     return ((PrioX) < (PrioY));                                                                                          /* PRQA S 4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Scheduler.h	   109  }
; ..\component\Os\Implementation\Os_Scheduler.h	   110  
; ..\component\Os\Implementation\Os_Scheduler.h	   111  
; ..\component\Os\Implementation\Os_Scheduler.h	   112  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   113   *  Os_SchedulerPriorityIsHigherOrEqual()
; ..\component\Os\Implementation\Os_Scheduler.h	   114   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   115  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   116  OS_ALWAYS_INLINE,  Os_SchedulerPriorityIsHigherOrEqual,
; ..\component\Os\Implementation\Os_Scheduler.h	   117  (
; ..\component\Os\Implementation\Os_Scheduler.h	   118    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   119    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   120  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   121  {
; ..\component\Os\Implementation\Os_Scheduler.h	   122    return (Os_StdReturnType)((PrioX) <= (PrioY));                                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Scheduler.h	   123  }
; ..\component\Os\Implementation\Os_Scheduler.h	   124  
; ..\component\Os\Implementation\Os_Scheduler.h	   125  
; ..\component\Os\Implementation\Os_Scheduler.h	   126  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   127   *  Os_SchedulerPriorityIsLower()
; ..\component\Os\Implementation\Os_Scheduler.h	   128   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   129  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Scheduler.h	   130  OS_ALWAYS_INLINE, Os_SchedulerPriorityIsLower,
; ..\component\Os\Implementation\Os_Scheduler.h	   131  (
; ..\component\Os\Implementation\Os_Scheduler.h	   132    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   133    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   134  ))                                                                                                                      /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Scheduler.h	   135  {
; ..\component\Os\Implementation\Os_Scheduler.h	   136    return (!Os_SchedulerPriorityIsHigherOrEqual(PrioX, PrioY));                                                          /* PRQA S 4116, 4404, 4558 */ /* MD_Os_Rule10.1_4116, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Scheduler.h	   137  }
; ..\component\Os\Implementation\Os_Scheduler.h	   138  
; ..\component\Os\Implementation\Os_Scheduler.h	   139  
; ..\component\Os\Implementation\Os_Scheduler.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   141   *  Os_SchedulerGetCurrentTask()
; ..\component\Os\Implementation\Os_Scheduler.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   143  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   144  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_SchedulerGetCurrentTask,
; ..\component\Os\Implementation\Os_Scheduler.h	   145  (
; ..\component\Os\Implementation\Os_Scheduler.h	   146    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	   147  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   148  {
; ..\component\Os\Implementation\Os_Scheduler.h	   149    return Scheduler->Dyn->CurrentTask;
; ..\component\Os\Implementation\Os_Scheduler.h	   150  }
; ..\component\Os\Implementation\Os_Scheduler.h	   151  
; ..\component\Os\Implementation\Os_Scheduler.h	   152  
; ..\component\Os\Implementation\Os_Scheduler.h	   153  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   154   *  Os_SchedulerTaskSwitchIsNeeded()
; ..\component\Os\Implementation\Os_Scheduler.h	   155   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   156  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   157  OS_CODE, OS_ALWAYS_INLINE, Os_SchedulerTaskSwitchIsNeeded,
; ..\component\Os\Implementation\Os_Scheduler.h	   158  (
; ..\component\Os\Implementation\Os_Scheduler.h	   159    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	   160  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   161  {
; ..\component\Os\Implementation\Os_Scheduler.h	   162    return (Os_StdReturnType)(Scheduler->Dyn->CurrentTask != Scheduler->Dyn->NextTask);                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.a	a15,[a4]12
.L657:
	ld.a	a2,[a15]12
.L658:
	ld.a	a15,[a15]4
.L659:

; ..\component\Os\Implementation\Os_Event.c	   408            {
; ..\component\Os\Implementation\Os_Event.c	   409              P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) scheduler;
; ..\component\Os\Implementation\Os_Event.c	   410  
; ..\component\Os\Implementation\Os_Event.c	   411              scheduler = Os_CoreGetScheduler(core);                                                                      /* SBSW_OS_EV_COREGETSCHEDULER_001 */
; ..\component\Os\Implementation\Os_Event.c	   412  
; ..\component\Os\Implementation\Os_Event.c	   413              if(Os_SchedulerTaskSwitchIsNeeded(scheduler) != 0u)                                                         /* SBSW_OS_EV_SCHEDULERTASKSWITCHISNEEDED_001 */
	jeq.a	a2,a15,.L14
.L305:
	call	Os_SchedulerInternalSchedule
.L544:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   341  }
; ..\component\Os\Implementation\Os_Task.h	   342  
; ..\component\Os\Implementation\Os_Task.h	   343  
; ..\component\Os\Implementation\Os_Task.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   345   *  Os_TaskIsWaiting()
; ..\component\Os\Implementation\Os_Task.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32, OS_CODE, OS_ALWAYS_INLINE,                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   348  Os_TaskIsWaiting,
; ..\component\Os\Implementation\Os_Task.h	   349  (
; ..\component\Os\Implementation\Os_Task.h	   350    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   351  ))
; ..\component\Os\Implementation\Os_Task.h	   352  {
; ..\component\Os\Implementation\Os_Task.h	   353    return ((uint32)(Os_TaskGetDyn(Task)->State == WAITING));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   354  }
; ..\component\Os\Implementation\Os_Task.h	   355  
; ..\component\Os\Implementation\Os_Task.h	   356  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   357   *  Os_TaskIsSuspended
; ..\component\Os\Implementation\Os_Task.h	   358   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   359  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   360  Os_TaskIsSuspended,
; ..\component\Os\Implementation\Os_Task.h	   361  (
; ..\component\Os\Implementation\Os_Task.h	   362    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   363  ))
; ..\component\Os\Implementation\Os_Task.h	   364  {
; ..\component\Os\Implementation\Os_Task.h	   365    return ((Os_StdReturnType)(Os_TaskGetDyn(Task)->State == SUSPENDED));                                                 /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   366  }
; ..\component\Os\Implementation\Os_Task.h	   367  
; ..\component\Os\Implementation\Os_Task.h	   368  
; ..\component\Os\Implementation\Os_Task.h	   369  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   370   *  Os_TaskSwitch()
; ..\component\Os\Implementation\Os_Task.h	   371   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   372  /*!
; ..\component\Os\Implementation\Os_Task.h	   373   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   374   *
; ..\component\Os\Implementation\Os_Task.h	   375   *
; ..\component\Os\Implementation\Os_Task.h	   376   *
; ..\component\Os\Implementation\Os_Task.h	   377   *
; ..\component\Os\Implementation\Os_Task.h	   378   *
; ..\component\Os\Implementation\Os_Task.h	   379   */
; ..\component\Os\Implementation\Os_Task.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   381  Os_TaskSwitch,
; ..\component\Os\Implementation\Os_Task.h	   382  (
; ..\component\Os\Implementation\Os_Task.h	   383    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler,
; ..\component\Os\Implementation\Os_Task.h	   384    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CallerThread
; ..\component\Os\Implementation\Os_Task.h	   385  ))
; ..\component\Os\Implementation\Os_Task.h	   386  {
; ..\component\Os\Implementation\Os_Task.h	   387    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   388    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   389  
; ..\component\Os\Implementation\Os_Task.h	   390    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   391    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   392  
; ..\component\Os\Implementation\Os_Task.h	   393    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   394    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
	mov.aa	a13,a2
.L313:

; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    16   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    20   * \file       Os_Hal_Core_162_P.h
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    21   * \brief      Primitives function implementation for TriCore Processor Core TC1.6.2P
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    30  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    31  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    32  #ifndef OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    33  # define OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    34  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    40  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    42  # include "Os_Hal_Core_162_PInt.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    43  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    45  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    47  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    48  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    49   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    50   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    54   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    55   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    56  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    57  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    58  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    59   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    60   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    61  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    62  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    63   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    64   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    65  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    67  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    68   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    69   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    70  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    71  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    72  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    73  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    74  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    75  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    76   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    78   
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    80   *  Os_Hal_CoreStart()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    82  /*!
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    83   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    84   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    85   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    88   */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    89  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    90  Os_Hal_CoreStart,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    91  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    92    P2CONST(Os_Hal_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    93  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    95    /* #10 Write the foreign PC with the startup code symbol for core 1. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    96    *((volatile uint32*)Core->ProgramCounterRegister) = (uint32)(Core->StartLabelAddress);                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_PC */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    97  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    98    /* #20 Reset the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    99    *((volatile uint32*)Core->DBGSRRegister) = OS_HAL_DBGSR_START_CORE;                                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_DBGSR */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   100    
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   101    /* #30 Release the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   102    *((volatile uint32*)Core->SYSCON_CORECON_Register) &= ~OS_HAL_SYSCON_BHALT_MASK;                                               /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_SYSCON_CORECON */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   105  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   106  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   107   *  Os_Hal_InitializeAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   108   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   109  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   110  Os_Hal_InitializeAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   111  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   112    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   113  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   114  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   115    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   116    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   117    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   118    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   119    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   120    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   121  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   122  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   123  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   124  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   125   *  Os_Hal_InitializeAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   126   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   127  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   128  Os_Hal_InitializeAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   129  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   130    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   131  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   132  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   133    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   134    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   135    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   136    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   137    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   138    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   139  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   140  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   141  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   143   *  Os_Hal_InitializeAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   146  Os_Hal_InitializeAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   147  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   148    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   149  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   150  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   151    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   152    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   153    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   154    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   155    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   156    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   157  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   159  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   161   *  Os_Hal_ReadModifyAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   164  Os_Hal_ReadModifyAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   165  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   166    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   167    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   168    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   169  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   170  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   171    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   172    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   173      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   174        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   175        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   176      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   177        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   178        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   179      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   180        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   181        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   182      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   183        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   184        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   185      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   186        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   187        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   188      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   189        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   190        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   191      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   192        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   193    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   194  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   195  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   196  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   197  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   198   *  Os_Hal_ReadModifyAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   201  Os_Hal_ReadModifyAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   202  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   203    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   204    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   205    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   206  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   207  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   208    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   209    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   210      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   211        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   212        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   213      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   214        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   215        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   216      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   217        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   218        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   219      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   220        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   221        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   222      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   223        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   224        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   225      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   226        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   227        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   228      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   229        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   230    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   232  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   233  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   235   *  Os_Hal_ReadModifyAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   237  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   238  Os_Hal_ReadModifyAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   239  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   240    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   241    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   242    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   243  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   244  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   245    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   246    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   247      case 0:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   248        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   249        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   250      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   251        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   252        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   253      case 2:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   254        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   255        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   256      case 3:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   257        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   258        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   259      case 4:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   260        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   261        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   262      case 5:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   263        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   264        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   265      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   266        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   267    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   268  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   269  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   270  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   271   *  Os_Hal_ContextPreparePRS()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   272   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   273  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   274  Os_Hal_ContextPreparePRS,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   275  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   276    CONST(uint32, AUTOMATIC) PcxiAddr,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   277    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   278  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   279  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   280    *(uint32*)(PcxiAddr + OS_HAL_CSA_PSW_OFFSET) |= CurrentConfig->ProtectionSet;                                         /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   281  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   282  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   284   *  Os_Hal_CoreGetId()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CorePhysicalIdType, OS_CODE,                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   287  OS_ALWAYS_INLINE, Os_Hal_CoreGetId,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   288  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   289    void
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   290  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   291  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   292    return (Os_CorePhysicalIdType)Os_Hal_Mfcr(OS_HAL_CORE_ID_REGISTER);
	mfcr	d15,#65052
.L331:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
	fcall	.cocofun_2
.L325:

; ..\component\Os\Implementation\Os_Stack.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Stack.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Stack.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Stack.h	     6   *
; ..\component\Os\Implementation\Os_Stack.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Stack.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Stack.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Stack.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Stack.h	    14  /**
; ..\component\Os\Implementation\Os_Stack.h	    15   * \addtogroup Os_Stack
; ..\component\Os\Implementation\Os_Stack.h	    16   * \{
; ..\component\Os\Implementation\Os_Stack.h	    17   *
; ..\component\Os\Implementation\Os_Stack.h	    18   * \file
; ..\component\Os\Implementation\Os_Stack.h	    19   * \brief       External interface to \ref Os_Stack.
; ..\component\Os\Implementation\Os_Stack.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Stack.h	    21   *
; ..\component\Os\Implementation\Os_Stack.h	    22   *
; ..\component\Os\Implementation\Os_Stack.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Stack.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Stack.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    29  
; ..\component\Os\Implementation\Os_Stack.h	    30  #ifndef OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    31  # define OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Stack.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Stack.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Stack.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Stack.h	    38  
; ..\component\Os\Implementation\Os_Stack.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Stack.h	    40  # include "Os_Stack_Cfg.h"
; ..\component\Os\Implementation\Os_Stack.h	    41  # include "Os_StackInt.h"
; ..\component\Os\Implementation\Os_Stack.h	    42  
; ..\component\Os\Implementation\Os_Stack.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    44  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Stack.h	    45  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Stack.h	    46  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    47  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Stack.h	    48  
; ..\component\Os\Implementation\Os_Stack.h	    49  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    50  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    51  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Stack.h	    52  
; ..\component\Os\Implementation\Os_Stack.h	    53  
; ..\component\Os\Implementation\Os_Stack.h	    54  
; ..\component\Os\Implementation\Os_Stack.h	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    56   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Stack.h	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    58  
; ..\component\Os\Implementation\Os_Stack.h	    59  
; ..\component\Os\Implementation\Os_Stack.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    61   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Stack.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    63  
; ..\component\Os\Implementation\Os_Stack.h	    64  
; ..\component\Os\Implementation\Os_Stack.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    68  
; ..\component\Os\Implementation\Os_Stack.h	    69  
; ..\component\Os\Implementation\Os_Stack.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    73  
; ..\component\Os\Implementation\Os_Stack.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Stack.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Stack.h	    76  
; ..\component\Os\Implementation\Os_Stack.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Stack.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    81   *  Os_StackIsModuleEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    83  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    84  OS_ALWAYS_INLINE, Os_StackIsModuleEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    85  {
; ..\component\Os\Implementation\Os_Stack.h	    86    return (Os_StdReturnType)(OS_CFG_STACKMODULE == STD_ON);                                                              /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    87  }
; ..\component\Os\Implementation\Os_Stack.h	    88  
; ..\component\Os\Implementation\Os_Stack.h	    89  
; ..\component\Os\Implementation\Os_Stack.h	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    91   *  Os_StackIsMeasurementEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    94  OS_ALWAYS_INLINE, Os_StackIsMeasurementEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    95  {
; ..\component\Os\Implementation\Os_Stack.h	    96    return (Os_StdReturnType)(OS_CFG_STACKMEASUREMENT == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    97  }
; ..\component\Os\Implementation\Os_Stack.h	    98  
; ..\component\Os\Implementation\Os_Stack.h	    99  
; ..\component\Os\Implementation\Os_Stack.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   101   *  Os_StackIsMonitoringEnabled()
; ..\component\Os\Implementation\Os_Stack.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   104  OS_ALWAYS_INLINE, Os_StackIsMonitoringEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	   105  {
; ..\component\Os\Implementation\Os_Stack.h	   106    return (Os_StdReturnType)(OS_CFG_STACKMONITORING  == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   107  }
; ..\component\Os\Implementation\Os_Stack.h	   108  
; ..\component\Os\Implementation\Os_Stack.h	   109  
; ..\component\Os\Implementation\Os_Stack.h	   110  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   111   *  Os_StackInit()
; ..\component\Os\Implementation\Os_Stack.h	   112   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   113  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   114  Os_StackInit,
; ..\component\Os\Implementation\Os_Stack.h	   115  (
; ..\component\Os\Implementation\Os_Stack.h	   116    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack
; ..\component\Os\Implementation\Os_Stack.h	   117  ))
; ..\component\Os\Implementation\Os_Stack.h	   118  {
; ..\component\Os\Implementation\Os_Stack.h	   119  
; ..\component\Os\Implementation\Os_Stack.h	   120    if(Os_StackIsModuleEnabled() != 0u)                                                                                   /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   121    {
; ..\component\Os\Implementation\Os_Stack.h	   122      FUNC(void, OS_CODE) Os_StackInitInternal                                                                            /* PRQA S 3449, 3451 */ /* MD_Os_Rule8.5_3449, MD_Os_Rule8.5_3451 */
; ..\component\Os\Implementation\Os_Stack.h	   123      (P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack);
; ..\component\Os\Implementation\Os_Stack.h	   124  
; ..\component\Os\Implementation\Os_Stack.h	   125      Os_StackInitInternal(Stack);                                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Stack.h	   126    }
; ..\component\Os\Implementation\Os_Stack.h	   127  }
; ..\component\Os\Implementation\Os_Stack.h	   128  
; ..\component\Os\Implementation\Os_Stack.h	   129  
; ..\component\Os\Implementation\Os_Stack.h	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   131   *  Os_StackOverflowCheck()
; ..\component\Os\Implementation\Os_Stack.h	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   133  /*!
; ..\component\Os\Implementation\Os_Stack.h	   134   * Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   135   *
; ..\component\Os\Implementation\Os_Stack.h	   136   *
; ..\component\Os\Implementation\Os_Stack.h	   137   */
; ..\component\Os\Implementation\Os_Stack.h	   138  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   139  Os_StackOverflowCheck,( void ))
; ..\component\Os\Implementation\Os_Stack.h	   140  {
; ..\component\Os\Implementation\Os_Stack.h	   141    /* #10 Report protection error if the stack's last element is not equal to the fill pattern. */
; ..\component\Os\Implementation\Os_Stack.h	   142    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   143    {
; ..\component\Os\Implementation\Os_Stack.h	   144      P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) stack;
; ..\component\Os\Implementation\Os_Stack.h	   145      P2VAR(Os_Hal_StackType, AUTOMATIC, OS_VAR_NOINIT) stackEnd;
; ..\component\Os\Implementation\Os_Stack.h	   146  
; ..\component\Os\Implementation\Os_Stack.h	   147      stack = Os_CoreGetCurrentStack();
; ..\component\Os\Implementation\Os_Stack.h	   148      stackEnd = Os_Hal_StackEndGet(stack->LowAddress, stack->HighAddress);                                               /* SBSW_OS_ST_HAL_STACKENDGET_003 */
; ..\component\Os\Implementation\Os_Stack.h	   149  
; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))
	mov.u	d0,#43690
	ld.w	d15,[a15]
	addih	d0,d0,#43690
.L660:

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
	jeq	d15,d0,.L15
.L661:

; ..\component\Os\Implementation\Os_Stack.h	   151      {
; ..\component\Os\Implementation\Os_Stack.h	   152        /*! Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   153   *
; ..\component\Os\Implementation\Os_Stack.h	   154   *
; ..\component\Os\Implementation\Os_Stack.h	   155   *
; ..\component\Os\Implementation\Os_Stack.h	   156   *
; ..\component\Os\Implementation\Os_Stack.h	   157   *
; ..\component\Os\Implementation\Os_Stack.h	   158   *
; ..\component\Os\Implementation\Os_Stack.h	   159   *
; ..\component\Os\Implementation\Os_Stack.h	   160   *
; ..\component\Os\Implementation\Os_Stack.h	   161   *
; ..\component\Os\Implementation\Os_Stack.h	   162   *
; ..\component\Os\Implementation\Os_Stack.h	   163   *
; ..\component\Os\Implementation\Os_Stack.h	   164   *
; ..\component\Os\Implementation\Os_Stack.h	   165   *
; ..\component\Os\Implementation\Os_Stack.h	   166   *
; ..\component\Os\Implementation\Os_Stack.h	   167   *
; ..\component\Os\Implementation\Os_Stack.h	   168   *
; ..\component\Os\Implementation\Os_Stack.h	   169   *
; ..\component\Os\Implementation\Os_Stack.h	   170         */
; ..\component\Os\Implementation\Os_Stack.h	   171        *stackEnd = OS_HAL_STACK_FILL_PATTERN;                                                                            /* SBSW_OS_ST_HAL_STACKENDGET_002 */
	st.w	[a15],d0
.L662:

; ..\component\Os\Implementation\Os_Stack.h	   172  
; ..\component\Os\Implementation\Os_Stack.h	   173        Os_ErrProtectionError(OS_STATUS_STACKFAULT);
	mov	d4,#13
	call	Os_ErrProtectionError

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
.L15:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L554:
	and	d10,d15
.L346:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
	disable
.L663:

; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
	mfcr	d15,#65028
	or	d15,d15,#256

; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);      (inlined)
	mtcr  #0xFE04, d15
.L664:

; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
	isync
.L665:

; ..\component\Os\Implementation\Os_Task.h	   395    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
	mov.d	d15,a13
.L546:

; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */      (inlined)
	
	mov.a  a8, d15
	
.L350:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L666:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L547:
	insert	d15,d15,#0,#15,#1
.L548:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d10
.L549:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L667:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L334:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   795  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   796  
; ..\component\Os\Implementation\Os_Thread.h	   797  
; ..\component\Os\Implementation\Os_Thread.h	   798  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   799   *  Os_ThreadStartFirst()
; ..\component\Os\Implementation\Os_Thread.h	   800   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   801  /*!
; ..\component\Os\Implementation\Os_Thread.h	   802   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   803   *
; ..\component\Os\Implementation\Os_Thread.h	   804   *
; ..\component\Os\Implementation\Os_Thread.h	   805   *
; ..\component\Os\Implementation\Os_Thread.h	   806   *
; ..\component\Os\Implementation\Os_Thread.h	   807   *
; ..\component\Os\Implementation\Os_Thread.h	   808   *
; ..\component\Os\Implementation\Os_Thread.h	   809   *
; ..\component\Os\Implementation\Os_Thread.h	   810   *
; ..\component\Os\Implementation\Os_Thread.h	   811   */
; ..\component\Os\Implementation\Os_Thread.h	   812  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   813  Os_ThreadStartFirst,
; ..\component\Os\Implementation\Os_Thread.h	   814  (
; ..\component\Os\Implementation\Os_Thread.h	   815    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   816    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   817  ))
; ..\component\Os\Implementation\Os_Thread.h	   818  {
; ..\component\Os\Implementation\Os_Thread.h	   819    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   820    P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   821    P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   822  
; ..\component\Os\Implementation\Os_Thread.h	   823    configTp = Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(Next));                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   824    nextTp = Os_ThreadGetTpConfig(Next);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   825    currentTp = Os_ThreadGetTpConfig(Os_CoreGetThread());                                                                 /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   826  
; ..\component\Os\Implementation\Os_Thread.h	   827    /* #10 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   828    Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                               /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   829  
; ..\component\Os\Implementation\Os_Thread.h	   830    /* #20 Set memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   831    Os_MpSwitchTo(Next->Dyn->MpAccessRights);                                                                             /* SBSW_OS_TRD_MPSWITCHTO_001 */
; ..\component\Os\Implementation\Os_Thread.h	   832  
; ..\component\Os\Implementation\Os_Thread.h	   833    /* #25 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   834    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   835  
; ..\component\Os\Implementation\Os_Thread.h	   836    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   837    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   838  
; ..\component\Os\Implementation\Os_Thread.h	   839    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   840    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   841  
; ..\component\Os\Implementation\Os_Thread.h	   842    /* #50 Update the Msr of the nest thread. */
; ..\component\Os\Implementation\Os_Thread.h	   843    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   844  
; ..\component\Os\Implementation\Os_Thread.h	   845    /* #60 Resume the hardware context of the first thread. */
; ..\component\Os\Implementation\Os_Thread.h	   846    Os_Hal_ContextFirstResume(Next->Context); /* function never returns! */                                               /* SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   847  
; ..\component\Os\Implementation\Os_Thread.h	   848    /* Never reached. */
; ..\component\Os\Implementation\Os_Thread.h	   849    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   850  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   851  
; ..\component\Os\Implementation\Os_Thread.h	   852  
; ..\component\Os\Implementation\Os_Thread.h	   853  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   854   *  Os_ThreadCleanupAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   855   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   856  /*!
; ..\component\Os\Implementation\Os_Thread.h	   857   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   858   *
; ..\component\Os\Implementation\Os_Thread.h	   859   *
; ..\component\Os\Implementation\Os_Thread.h	   860   *
; ..\component\Os\Implementation\Os_Thread.h	   861   *
; ..\component\Os\Implementation\Os_Thread.h	   862   *
; ..\component\Os\Implementation\Os_Thread.h	   863   *
; ..\component\Os\Implementation\Os_Thread.h	   864   *
; ..\component\Os\Implementation\Os_Thread.h	   865   *
; ..\component\Os\Implementation\Os_Thread.h	   866   *
; ..\component\Os\Implementation\Os_Thread.h	   867   *
; ..\component\Os\Implementation\Os_Thread.h	   868   *
; ..\component\Os\Implementation\Os_Thread.h	   869   */
; ..\component\Os\Implementation\Os_Thread.h	   870  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   871  Os_ThreadCleanupAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   872  (
; ..\component\Os\Implementation\Os_Thread.h	   873    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   874    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   875  ))
; ..\component\Os\Implementation\Os_Thread.h	   876  {
; ..\component\Os\Implementation\Os_Thread.h	   877    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   878  
; ..\component\Os\Implementation\Os_Thread.h	   879    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   880  
; ..\component\Os\Implementation\Os_Thread.h	   881    /* Check that the function is not called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   882    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) == 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   883  
; ..\component\Os\Implementation\Os_Thread.h	   884    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   885    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   886  
; ..\component\Os\Implementation\Os_Thread.h	   887    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   888    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   889  
; ..\component\Os\Implementation\Os_Thread.h	   890    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   891    {
; ..\component\Os\Implementation\Os_Thread.h	   892      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   893      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   894      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   895      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   896  
; ..\component\Os\Implementation\Os_Thread.h	   897      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   898      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   899      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   900      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   901      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   902    }
; ..\component\Os\Implementation\Os_Thread.h	   903  
; ..\component\Os\Implementation\Os_Thread.h	   904    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   905    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   906  
; ..\component\Os\Implementation\Os_Thread.h	   907    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   908    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   909  
; ..\component\Os\Implementation\Os_Thread.h	   910    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   911    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   912  
; ..\component\Os\Implementation\Os_Thread.h	   913    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   914    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   915  
; ..\component\Os\Implementation\Os_Thread.h	   916    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   917    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   918  
; ..\component\Os\Implementation\Os_Thread.h	   919    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   920    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   921  
; ..\component\Os\Implementation\Os_Thread.h	   922    /* #80 Cleanup the current hardware context and resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   923    Os_Hal_ContextReturn(current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTRETURN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   924  
; ..\component\Os\Implementation\Os_Thread.h	   925    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   926    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   927  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   928  
; ..\component\Os\Implementation\Os_Thread.h	   929  
; ..\component\Os\Implementation\Os_Thread.h	   930  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   931   *  Os_ThreadKill()
; ..\component\Os\Implementation\Os_Thread.h	   932   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   933  /*!
; ..\component\Os\Implementation\Os_Thread.h	   934   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   935   *
; ..\component\Os\Implementation\Os_Thread.h	   936   *
; ..\component\Os\Implementation\Os_Thread.h	   937   *
; ..\component\Os\Implementation\Os_Thread.h	   938   *
; ..\component\Os\Implementation\Os_Thread.h	   939   *
; ..\component\Os\Implementation\Os_Thread.h	   940   *
; ..\component\Os\Implementation\Os_Thread.h	   941   *
; ..\component\Os\Implementation\Os_Thread.h	   942   *
; ..\component\Os\Implementation\Os_Thread.h	   943   *
; ..\component\Os\Implementation\Os_Thread.h	   944   *
; ..\component\Os\Implementation\Os_Thread.h	   945   *
; ..\component\Os\Implementation\Os_Thread.h	   946   *
; ..\component\Os\Implementation\Os_Thread.h	   947   *
; ..\component\Os\Implementation\Os_Thread.h	   948   */
; ..\component\Os\Implementation\Os_Thread.h	   949  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   950  Os_ThreadKill,
; ..\component\Os\Implementation\Os_Thread.h	   951  (
; ..\component\Os\Implementation\Os_Thread.h	   952    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   953  ))
; ..\component\Os\Implementation\Os_Thread.h	   954  {
; ..\component\Os\Implementation\Os_Thread.h	   955    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   956    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   957  
; ..\component\Os\Implementation\Os_Thread.h	   958    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   959    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   960  
; ..\component\Os\Implementation\Os_Thread.h	   961    /* #30 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   962    Os_ServiceCallForceRelease(&(Thread->Dyn->ServiceCalls));                                                             /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   963  
; ..\component\Os\Implementation\Os_Thread.h	   964    /* #40 Release all locks and resources, which are hold by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   965    Os_ThreadLocksForceRelease(Thread);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   966  
; ..\component\Os\Implementation\Os_Thread.h	   967    /* #50 Reset timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   968    {
; ..\component\Os\Implementation\Os_Thread.h	   969      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   970  
; ..\component\Os\Implementation\Os_Thread.h	   971      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   972  
; ..\component\Os\Implementation\Os_Thread.h	   973      Os_TpThreadKill(currentTp);                                                                                         /* SBSW_OS_TRD_TPTHREADKILL_001 */
; ..\component\Os\Implementation\Os_Thread.h	   974    }
; ..\component\Os\Implementation\Os_Thread.h	   975  
; ..\component\Os\Implementation\Os_Thread.h	   976    /* #60 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   977    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   978  
; ..\component\Os\Implementation\Os_Thread.h	   979  
; ..\component\Os\Implementation\Os_Thread.h	   980    /* #70 If the given thread is not the current thread: */
; ..\component\Os\Implementation\Os_Thread.h	   981    {
; ..\component\Os\Implementation\Os_Thread.h	   982      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   983  
; ..\component\Os\Implementation\Os_Thread.h	   984      current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   985  
; ..\component\Os\Implementation\Os_Thread.h	   986      if(OS_LIKELY(Thread != current))
; ..\component\Os\Implementation\Os_Thread.h	   987      {
; ..\component\Os\Implementation\Os_Thread.h	   988        /* #80 If the given thread is a task: */
; ..\component\Os\Implementation\Os_Thread.h	   989        if(Os_ThreadIsTask(Thread) != 0u)                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   990        {
; ..\component\Os\Implementation\Os_Thread.h	   991          /* #90 Reset its hardware context. */
; ..\component\Os\Implementation\Os_Thread.h	   992          Os_Hal_ContextReset(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTRESET_001 */
; ..\component\Os\Implementation\Os_Thread.h	   993          Os_ThreadInitFpuContext(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   994        }
; ..\component\Os\Implementation\Os_Thread.h	   995        /* #100 Otherwise: */
; ..\component\Os\Implementation\Os_Thread.h	   996        else
; ..\component\Os\Implementation\Os_Thread.h	   997        {
; ..\component\Os\Implementation\Os_Thread.h	   998          Os_Hal_IntStateType currentIntState;
; ..\component\Os\Implementation\Os_Thread.h	   999  
; ..\component\Os\Implementation\Os_Thread.h	  1000          /* #110 Abort the threads context. Execute the return function the next time it will be resumed. */
; ..\component\Os\Implementation\Os_Thread.h	  1001          Os_Hal_ContextAbort(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTABORT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1002  
; ..\component\Os\Implementation\Os_Thread.h	  1003          /* #120 Set the interrupt state for the context used after the abort. */
; ..\component\Os\Implementation\Os_Thread.h	  1004          Os_Hal_IntGetInterruptState(&currentIntState);                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1005          Os_Hal_ContextSetInterruptState(Thread->Context, &currentIntState);                                             /* SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1006        }
; ..\component\Os\Implementation\Os_Thread.h	  1007      }
; ..\component\Os\Implementation\Os_Thread.h	  1008    }
; ..\component\Os\Implementation\Os_Thread.h	  1009  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1010  
; ..\component\Os\Implementation\Os_Thread.h	  1011  
; ..\component\Os\Implementation\Os_Thread.h	  1012  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1013   *  Os_ThreadSwitch()
; ..\component\Os\Implementation\Os_Thread.h	  1014   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1015  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1016   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1017   *
; ..\component\Os\Implementation\Os_Thread.h	  1018   *
; ..\component\Os\Implementation\Os_Thread.h	  1019   *
; ..\component\Os\Implementation\Os_Thread.h	  1020   *
; ..\component\Os\Implementation\Os_Thread.h	  1021   *
; ..\component\Os\Implementation\Os_Thread.h	  1022   *
; ..\component\Os\Implementation\Os_Thread.h	  1023   *
; ..\component\Os\Implementation\Os_Thread.h	  1024   *
; ..\component\Os\Implementation\Os_Thread.h	  1025   *
; ..\component\Os\Implementation\Os_Thread.h	  1026   *
; ..\component\Os\Implementation\Os_Thread.h	  1027   *
; ..\component\Os\Implementation\Os_Thread.h	  1028   */
; ..\component\Os\Implementation\Os_Thread.h	  1029  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1030  Os_ThreadSwitch,
; ..\component\Os\Implementation\Os_Thread.h	  1031  (
; ..\component\Os\Implementation\Os_Thread.h	  1032    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1033    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1034    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1035  ))
; ..\component\Os\Implementation\Os_Thread.h	  1036  {
; ..\component\Os\Implementation\Os_Thread.h	  1037    /* #10 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	  1038    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1039  
; ..\component\Os\Implementation\Os_Thread.h	  1040    /* #15 Store FPU context of current thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1041    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1042  
; ..\component\Os\Implementation\Os_Thread.h	  1043    /* #20 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1044    {
; ..\component\Os\Implementation\Os_Thread.h	  1045      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1046      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1047      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1048      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1049  
; ..\component\Os\Implementation\Os_Thread.h	  1050      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1051      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1052      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1053      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1054      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1055    }
; ..\component\Os\Implementation\Os_Thread.h	  1056  
; ..\component\Os\Implementation\Os_Thread.h	  1057    /* #30 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1058    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1059  
; ..\component\Os\Implementation\Os_Thread.h	  1060    /* #35 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1061    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1062  
; ..\component\Os\Implementation\Os_Thread.h	  1063    /* #40 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1064    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1065  
; ..\component\Os\Implementation\Os_Thread.h	  1066    /* #45 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1067    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1068  
; ..\component\Os\Implementation\Os_Thread.h	  1069    /* #50 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1070    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1071  
; ..\component\Os\Implementation\Os_Thread.h	  1072    /* #60 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1073    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1074  
; ..\component\Os\Implementation\Os_Thread.h	  1075    /* #70 Perform a hardware context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1076    Os_Hal_ContextSwitch(Current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1077  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1078  
; ..\component\Os\Implementation\Os_Thread.h	  1079  
; ..\component\Os\Implementation\Os_Thread.h	  1080  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1081   *  Os_ThreadSuspendAndStart()
; ..\component\Os\Implementation\Os_Thread.h	  1082   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1083  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1084   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1085   *
; ..\component\Os\Implementation\Os_Thread.h	  1086   *
; ..\component\Os\Implementation\Os_Thread.h	  1087   *
; ..\component\Os\Implementation\Os_Thread.h	  1088   *
; ..\component\Os\Implementation\Os_Thread.h	  1089   *
; ..\component\Os\Implementation\Os_Thread.h	  1090   *
; ..\component\Os\Implementation\Os_Thread.h	  1091   *
; ..\component\Os\Implementation\Os_Thread.h	  1092   *
; ..\component\Os\Implementation\Os_Thread.h	  1093   *
; ..\component\Os\Implementation\Os_Thread.h	  1094   *
; ..\component\Os\Implementation\Os_Thread.h	  1095   *
; ..\component\Os\Implementation\Os_Thread.h	  1096   *
; ..\component\Os\Implementation\Os_Thread.h	  1097   *
; ..\component\Os\Implementation\Os_Thread.h	  1098   */
; ..\component\Os\Implementation\Os_Thread.h	  1099  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1100  Os_ThreadSuspendAndStart,
; ..\component\Os\Implementation\Os_Thread.h	  1101  (
; ..\component\Os\Implementation\Os_Thread.h	  1102    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1103    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1104    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1105  ))
; ..\component\Os\Implementation\Os_Thread.h	  1106  {
; ..\component\Os\Implementation\Os_Thread.h	  1107    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1108  
; ..\component\Os\Implementation\Os_Thread.h	  1109    /* #10 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1110    {
; ..\component\Os\Implementation\Os_Thread.h	  1111      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1112      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1113      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1114      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1115  
; ..\component\Os\Implementation\Os_Thread.h	  1116      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1117      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1118      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1119      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1120      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1121    }
; ..\component\Os\Implementation\Os_Thread.h	  1122  
; ..\component\Os\Implementation\Os_Thread.h	  1123    /* #15 Store FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1124    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1125  
; ..\component\Os\Implementation\Os_Thread.h	  1126    /* #20 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1127    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1128  
; ..\component\Os\Implementation\Os_Thread.h	  1129    /* #25 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1130    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1131  
; ..\component\Os\Implementation\Os_Thread.h	  1132    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1133    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1134  
; ..\component\Os\Implementation\Os_Thread.h	  1135    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1136    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1137  
; ..\component\Os\Implementation\Os_Thread.h	  1138    /* #50 Prepare context of next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1139    Os_Hal_ContextInit(Next->ContextConfig, Next->Context);                                                               /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1140  
; ..\component\Os\Implementation\Os_Thread.h	  1141    /* #60 Setup FPU for next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1142    Os_ThreadInitFpu(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1143  
; ..\component\Os\Implementation\Os_Thread.h	  1144    /* #70 Set parameter for the entry function, currently only used for hooks (hook thread pointer). */
; ..\component\Os\Implementation\Os_Thread.h	  1145    Os_Hal_ContextSetParameter(Next->Context, Next);                                                                      /* PRQA S 0315 */ /* MD_Os_Dir1.1_0315 */ /* SBSW_OS_TRD_HAL_CONTEXTSETPARAMETER_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1146  
; ..\component\Os\Implementation\Os_Thread.h	  1147    /* #80 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1148    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1149  
; ..\component\Os\Implementation\Os_Thread.h	  1150    /* #90 Perform context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1151    Os_Hal_ContextCallOnStack(Current->Context, Next->Context);                                                           /* SBSW_OS_TRD_HAL_CONTEXTCALLONSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1152  
; ..\component\Os\Implementation\Os_Thread.h	  1153    /* #100 Restore FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1154    Os_ThreadRestoreFpuContext(Current);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1155  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1156  
; ..\component\Os\Implementation\Os_Thread.h	  1157  
; ..\component\Os\Implementation\Os_Thread.h	  1158  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1159   *  Os_ThreadGetAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1160   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1161  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1162  P2CONST(Os_AccessCheckConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1163  Os_ThreadGetAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1164  (
; ..\component\Os\Implementation\Os_Thread.h	  1165    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1166  ))
; ..\component\Os\Implementation\Os_Thread.h	  1167  {
; ..\component\Os\Implementation\Os_Thread.h	  1168    return Thread->AccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1169  }
; ..\component\Os\Implementation\Os_Thread.h	  1170  
; ..\component\Os\Implementation\Os_Thread.h	  1171  
; ..\component\Os\Implementation\Os_Thread.h	  1172  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1173   *  Os_ThreadGetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1174   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1175  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1176  P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1177  Os_ThreadGetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1178  (
; ..\component\Os\Implementation\Os_Thread.h	  1179    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1180  ))
; ..\component\Os\Implementation\Os_Thread.h	  1181  {
; ..\component\Os\Implementation\Os_Thread.h	  1182    return Thread->Dyn->MpAccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1183  }
; ..\component\Os\Implementation\Os_Thread.h	  1184  
; ..\component\Os\Implementation\Os_Thread.h	  1185  
; ..\component\Os\Implementation\Os_Thread.h	  1186  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1187   *  Os_ThreadSetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1188   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1189  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1190  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1191  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1192  (
; ..\component\Os\Implementation\Os_Thread.h	  1193    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1194    P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST) AccessRights
; ..\component\Os\Implementation\Os_Thread.h	  1195  ))
; ..\component\Os\Implementation\Os_Thread.h	  1196  {
; ..\component\Os\Implementation\Os_Thread.h	  1197    Thread->Dyn->MpAccessRights = AccessRights;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1198  }
; ..\component\Os\Implementation\Os_Thread.h	  1199  
; ..\component\Os\Implementation\Os_Thread.h	  1200  
; ..\component\Os\Implementation\Os_Thread.h	  1201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1202   *  Os_ThreadSetInterruptState()
; ..\component\Os\Implementation\Os_Thread.h	  1203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1204  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1205  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1206  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetInterruptState,
; ..\component\Os\Implementation\Os_Thread.h	  1207  (
; ..\component\Os\Implementation\Os_Thread.h	  1208    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1209    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_CONST) InterruptState
; ..\component\Os\Implementation\Os_Thread.h	  1210  ))
; ..\component\Os\Implementation\Os_Thread.h	  1211  {
; ..\component\Os\Implementation\Os_Thread.h	  1212    Os_Hal_ContextSetInterruptState(Thread->Context, InterruptState);                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1213  }
; ..\component\Os\Implementation\Os_Thread.h	  1214  
; ..\component\Os\Implementation\Os_Thread.h	  1215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1216   *  Os_ThreadCallPreThreadHook()
; ..\component\Os\Implementation\Os_Thread.h	  1217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1218  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1220   *
; ..\component\Os\Implementation\Os_Thread.h	  1221   *
; ..\component\Os\Implementation\Os_Thread.h	  1222   */
; ..\component\Os\Implementation\Os_Thread.h	  1223  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1224  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1225  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCallPreThreadHook,
; ..\component\Os\Implementation\Os_Thread.h	  1226  (
; ..\component\Os\Implementation\Os_Thread.h	  1227    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1228    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1229  ))
; ..\component\Os\Implementation\Os_Thread.h	  1230  {
; ..\component\Os\Implementation\Os_Thread.h	  1231    /* #10 Call the PreThreadHook if requested and configured. */
; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))
	ld.a	a15,[a13]52
.L668:

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
	jz.a	a15,.L16
.L669:

; ..\component\Os\Implementation\Os_Thread.h	  1233    {
; ..\component\Os\Implementation\Os_Thread.h	  1234      Thread->PreThreadHook();                                                                                            /* SBSW_OS_TRD_PRETHREAD_CALLBACK_001 */
	calli	a15

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
.L16:
	fcall	.cocofun_1
.L360:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
	mfcr	d0,#65028
.L670:
	fcall	.cocofun_5
.L368:
	call	Os_Hal_ContextSwitch
.L14:
.L13:
.L10:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L671:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L672:
	insert	d15,d15,#0,#15,#1
.L557:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d8
.L558:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L673:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L9:
.L7:
.L5:
.L3:

; ..\component\Os\Implementation\Os_Event.c	   414              {
; ..\component\Os\Implementation\Os_Event.c	   415                /* #60 Perform a task switch. */
; ..\component\Os\Implementation\Os_Event.c	   416                Os_TaskSwitch(scheduler, currentThread);                                                                  /* SBSW_OS_EV_TASKSWITCH_001 */
; ..\component\Os\Implementation\Os_Event.c	   417              }
; ..\component\Os\Implementation\Os_Event.c	   418            }
; ..\component\Os\Implementation\Os_Event.c	   419          }
; ..\component\Os\Implementation\Os_Event.c	   420  
; ..\component\Os\Implementation\Os_Event.c	   421          /* #70 Resume interrupts. */
; ..\component\Os\Implementation\Os_Event.c	   422          Os_IntResume(&interruptState);                                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   423        }
; ..\component\Os\Implementation\Os_Event.c	   424        /* #80 If the task belongs to a foreign core: */
; ..\component\Os\Implementation\Os_Event.c	   425        else
; ..\component\Os\Implementation\Os_Event.c	   426        {
; ..\component\Os\Implementation\Os_Event.c	   427          P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Event.c	   428          core = Os_TaskGetCore(task);                                                                                    /* SBSW_OS_EV_TASKGETCORE_001 */
; ..\component\Os\Implementation\Os_Event.c	   429  
; ..\component\Os\Implementation\Os_Event.c	   430          /* #90 Signal the responsible core to set events. */
; ..\component\Os\Implementation\Os_Event.c	   431          status = Os_XSigSend_SetEvent(core, currentThread, TaskID, Mask);                                               /* SBSW_OS_EV_XSIGSEND_001 */
; ..\component\Os\Implementation\Os_Event.c	   432        }
; ..\component\Os\Implementation\Os_Event.c	   433      }
; ..\component\Os\Implementation\Os_Event.c	   434    }
; ..\component\Os\Implementation\Os_Event.c	   435  
; ..\component\Os\Implementation\Os_Event.c	   436    return status;
; ..\component\Os\Implementation\Os_Event.c	   437  }                                                                                                                       /* PRQA S 6030, 6050, 6080 */ /* MD_Os_STCYC, MD_Os_STCAL, MD_Os_STMIF */
	mov	d2,d9
	ret
.L255:
	
__Os_Api_SetEvent_function_end:
	.size	Os_Api_SetEvent,__Os_Api_SetEvent_function_end-Os_Api_SetEvent
.L116:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_5')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_5
.L72:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
	insert	d0,d0,#0,#0,#16
.L769:
	or	d15,d0
	st.w	[a15],d15
.L770:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   795  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   796  
; ..\component\Os\Implementation\Os_Thread.h	   797  
; ..\component\Os\Implementation\Os_Thread.h	   798  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   799   *  Os_ThreadStartFirst()
; ..\component\Os\Implementation\Os_Thread.h	   800   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   801  /*!
; ..\component\Os\Implementation\Os_Thread.h	   802   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   803   *
; ..\component\Os\Implementation\Os_Thread.h	   804   *
; ..\component\Os\Implementation\Os_Thread.h	   805   *
; ..\component\Os\Implementation\Os_Thread.h	   806   *
; ..\component\Os\Implementation\Os_Thread.h	   807   *
; ..\component\Os\Implementation\Os_Thread.h	   808   *
; ..\component\Os\Implementation\Os_Thread.h	   809   *
; ..\component\Os\Implementation\Os_Thread.h	   810   *
; ..\component\Os\Implementation\Os_Thread.h	   811   */
; ..\component\Os\Implementation\Os_Thread.h	   812  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   813  Os_ThreadStartFirst,
; ..\component\Os\Implementation\Os_Thread.h	   814  (
; ..\component\Os\Implementation\Os_Thread.h	   815    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   816    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   817  ))
; ..\component\Os\Implementation\Os_Thread.h	   818  {
; ..\component\Os\Implementation\Os_Thread.h	   819    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   820    P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   821    P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   822  
; ..\component\Os\Implementation\Os_Thread.h	   823    configTp = Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(Next));                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   824    nextTp = Os_ThreadGetTpConfig(Next);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   825    currentTp = Os_ThreadGetTpConfig(Os_CoreGetThread());                                                                 /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   826  
; ..\component\Os\Implementation\Os_Thread.h	   827    /* #10 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   828    Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                               /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   829  
; ..\component\Os\Implementation\Os_Thread.h	   830    /* #20 Set memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   831    Os_MpSwitchTo(Next->Dyn->MpAccessRights);                                                                             /* SBSW_OS_TRD_MPSWITCHTO_001 */
; ..\component\Os\Implementation\Os_Thread.h	   832  
; ..\component\Os\Implementation\Os_Thread.h	   833    /* #25 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   834    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   835  
; ..\component\Os\Implementation\Os_Thread.h	   836    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   837    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   838  
; ..\component\Os\Implementation\Os_Thread.h	   839    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   840    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   841  
; ..\component\Os\Implementation\Os_Thread.h	   842    /* #50 Update the Msr of the nest thread. */
; ..\component\Os\Implementation\Os_Thread.h	   843    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   844  
; ..\component\Os\Implementation\Os_Thread.h	   845    /* #60 Resume the hardware context of the first thread. */
; ..\component\Os\Implementation\Os_Thread.h	   846    Os_Hal_ContextFirstResume(Next->Context); /* function never returns! */                                               /* SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   847  
; ..\component\Os\Implementation\Os_Thread.h	   848    /* Never reached. */
; ..\component\Os\Implementation\Os_Thread.h	   849    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   850  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   851  
; ..\component\Os\Implementation\Os_Thread.h	   852  
; ..\component\Os\Implementation\Os_Thread.h	   853  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   854   *  Os_ThreadCleanupAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   855   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   856  /*!
; ..\component\Os\Implementation\Os_Thread.h	   857   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   858   *
; ..\component\Os\Implementation\Os_Thread.h	   859   *
; ..\component\Os\Implementation\Os_Thread.h	   860   *
; ..\component\Os\Implementation\Os_Thread.h	   861   *
; ..\component\Os\Implementation\Os_Thread.h	   862   *
; ..\component\Os\Implementation\Os_Thread.h	   863   *
; ..\component\Os\Implementation\Os_Thread.h	   864   *
; ..\component\Os\Implementation\Os_Thread.h	   865   *
; ..\component\Os\Implementation\Os_Thread.h	   866   *
; ..\component\Os\Implementation\Os_Thread.h	   867   *
; ..\component\Os\Implementation\Os_Thread.h	   868   *
; ..\component\Os\Implementation\Os_Thread.h	   869   */
; ..\component\Os\Implementation\Os_Thread.h	   870  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   871  Os_ThreadCleanupAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   872  (
; ..\component\Os\Implementation\Os_Thread.h	   873    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   874    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   875  ))
; ..\component\Os\Implementation\Os_Thread.h	   876  {
; ..\component\Os\Implementation\Os_Thread.h	   877    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   878  
; ..\component\Os\Implementation\Os_Thread.h	   879    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   880  
; ..\component\Os\Implementation\Os_Thread.h	   881    /* Check that the function is not called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   882    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) == 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   883  
; ..\component\Os\Implementation\Os_Thread.h	   884    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   885    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   886  
; ..\component\Os\Implementation\Os_Thread.h	   887    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   888    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   889  
; ..\component\Os\Implementation\Os_Thread.h	   890    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   891    {
; ..\component\Os\Implementation\Os_Thread.h	   892      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   893      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   894      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   895      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   896  
; ..\component\Os\Implementation\Os_Thread.h	   897      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   898      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   899      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   900      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   901      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   902    }
; ..\component\Os\Implementation\Os_Thread.h	   903  
; ..\component\Os\Implementation\Os_Thread.h	   904    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   905    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   906  
; ..\component\Os\Implementation\Os_Thread.h	   907    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   908    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   909  
; ..\component\Os\Implementation\Os_Thread.h	   910    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   911    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   912  
; ..\component\Os\Implementation\Os_Thread.h	   913    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   914    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   915  
; ..\component\Os\Implementation\Os_Thread.h	   916    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   917    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   918  
; ..\component\Os\Implementation\Os_Thread.h	   919    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   920    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   921  
; ..\component\Os\Implementation\Os_Thread.h	   922    /* #80 Cleanup the current hardware context and resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   923    Os_Hal_ContextReturn(current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTRETURN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   924  
; ..\component\Os\Implementation\Os_Thread.h	   925    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   926    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   927  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   928  
; ..\component\Os\Implementation\Os_Thread.h	   929  
; ..\component\Os\Implementation\Os_Thread.h	   930  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   931   *  Os_ThreadKill()
; ..\component\Os\Implementation\Os_Thread.h	   932   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   933  /*!
; ..\component\Os\Implementation\Os_Thread.h	   934   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   935   *
; ..\component\Os\Implementation\Os_Thread.h	   936   *
; ..\component\Os\Implementation\Os_Thread.h	   937   *
; ..\component\Os\Implementation\Os_Thread.h	   938   *
; ..\component\Os\Implementation\Os_Thread.h	   939   *
; ..\component\Os\Implementation\Os_Thread.h	   940   *
; ..\component\Os\Implementation\Os_Thread.h	   941   *
; ..\component\Os\Implementation\Os_Thread.h	   942   *
; ..\component\Os\Implementation\Os_Thread.h	   943   *
; ..\component\Os\Implementation\Os_Thread.h	   944   *
; ..\component\Os\Implementation\Os_Thread.h	   945   *
; ..\component\Os\Implementation\Os_Thread.h	   946   *
; ..\component\Os\Implementation\Os_Thread.h	   947   *
; ..\component\Os\Implementation\Os_Thread.h	   948   */
; ..\component\Os\Implementation\Os_Thread.h	   949  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   950  Os_ThreadKill,
; ..\component\Os\Implementation\Os_Thread.h	   951  (
; ..\component\Os\Implementation\Os_Thread.h	   952    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   953  ))
; ..\component\Os\Implementation\Os_Thread.h	   954  {
; ..\component\Os\Implementation\Os_Thread.h	   955    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   956    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   957  
; ..\component\Os\Implementation\Os_Thread.h	   958    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   959    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   960  
; ..\component\Os\Implementation\Os_Thread.h	   961    /* #30 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   962    Os_ServiceCallForceRelease(&(Thread->Dyn->ServiceCalls));                                                             /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   963  
; ..\component\Os\Implementation\Os_Thread.h	   964    /* #40 Release all locks and resources, which are hold by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   965    Os_ThreadLocksForceRelease(Thread);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   966  
; ..\component\Os\Implementation\Os_Thread.h	   967    /* #50 Reset timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   968    {
; ..\component\Os\Implementation\Os_Thread.h	   969      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   970  
; ..\component\Os\Implementation\Os_Thread.h	   971      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   972  
; ..\component\Os\Implementation\Os_Thread.h	   973      Os_TpThreadKill(currentTp);                                                                                         /* SBSW_OS_TRD_TPTHREADKILL_001 */
; ..\component\Os\Implementation\Os_Thread.h	   974    }
; ..\component\Os\Implementation\Os_Thread.h	   975  
; ..\component\Os\Implementation\Os_Thread.h	   976    /* #60 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   977    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   978  
; ..\component\Os\Implementation\Os_Thread.h	   979  
; ..\component\Os\Implementation\Os_Thread.h	   980    /* #70 If the given thread is not the current thread: */
; ..\component\Os\Implementation\Os_Thread.h	   981    {
; ..\component\Os\Implementation\Os_Thread.h	   982      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   983  
; ..\component\Os\Implementation\Os_Thread.h	   984      current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   985  
; ..\component\Os\Implementation\Os_Thread.h	   986      if(OS_LIKELY(Thread != current))
; ..\component\Os\Implementation\Os_Thread.h	   987      {
; ..\component\Os\Implementation\Os_Thread.h	   988        /* #80 If the given thread is a task: */
; ..\component\Os\Implementation\Os_Thread.h	   989        if(Os_ThreadIsTask(Thread) != 0u)                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   990        {
; ..\component\Os\Implementation\Os_Thread.h	   991          /* #90 Reset its hardware context. */
; ..\component\Os\Implementation\Os_Thread.h	   992          Os_Hal_ContextReset(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTRESET_001 */
; ..\component\Os\Implementation\Os_Thread.h	   993          Os_ThreadInitFpuContext(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   994        }
; ..\component\Os\Implementation\Os_Thread.h	   995        /* #100 Otherwise: */
; ..\component\Os\Implementation\Os_Thread.h	   996        else
; ..\component\Os\Implementation\Os_Thread.h	   997        {
; ..\component\Os\Implementation\Os_Thread.h	   998          Os_Hal_IntStateType currentIntState;
; ..\component\Os\Implementation\Os_Thread.h	   999  
; ..\component\Os\Implementation\Os_Thread.h	  1000          /* #110 Abort the threads context. Execute the return function the next time it will be resumed. */
; ..\component\Os\Implementation\Os_Thread.h	  1001          Os_Hal_ContextAbort(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTABORT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1002  
; ..\component\Os\Implementation\Os_Thread.h	  1003          /* #120 Set the interrupt state for the context used after the abort. */
; ..\component\Os\Implementation\Os_Thread.h	  1004          Os_Hal_IntGetInterruptState(&currentIntState);                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1005          Os_Hal_ContextSetInterruptState(Thread->Context, &currentIntState);                                             /* SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1006        }
; ..\component\Os\Implementation\Os_Thread.h	  1007      }
; ..\component\Os\Implementation\Os_Thread.h	  1008    }
; ..\component\Os\Implementation\Os_Thread.h	  1009  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1010  
; ..\component\Os\Implementation\Os_Thread.h	  1011  
; ..\component\Os\Implementation\Os_Thread.h	  1012  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1013   *  Os_ThreadSwitch()
; ..\component\Os\Implementation\Os_Thread.h	  1014   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1015  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1016   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1017   *
; ..\component\Os\Implementation\Os_Thread.h	  1018   *
; ..\component\Os\Implementation\Os_Thread.h	  1019   *
; ..\component\Os\Implementation\Os_Thread.h	  1020   *
; ..\component\Os\Implementation\Os_Thread.h	  1021   *
; ..\component\Os\Implementation\Os_Thread.h	  1022   *
; ..\component\Os\Implementation\Os_Thread.h	  1023   *
; ..\component\Os\Implementation\Os_Thread.h	  1024   *
; ..\component\Os\Implementation\Os_Thread.h	  1025   *
; ..\component\Os\Implementation\Os_Thread.h	  1026   *
; ..\component\Os\Implementation\Os_Thread.h	  1027   *
; ..\component\Os\Implementation\Os_Thread.h	  1028   */
; ..\component\Os\Implementation\Os_Thread.h	  1029  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1030  Os_ThreadSwitch,
; ..\component\Os\Implementation\Os_Thread.h	  1031  (
; ..\component\Os\Implementation\Os_Thread.h	  1032    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1033    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1034    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1035  ))
; ..\component\Os\Implementation\Os_Thread.h	  1036  {
; ..\component\Os\Implementation\Os_Thread.h	  1037    /* #10 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	  1038    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1039  
; ..\component\Os\Implementation\Os_Thread.h	  1040    /* #15 Store FPU context of current thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1041    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1042  
; ..\component\Os\Implementation\Os_Thread.h	  1043    /* #20 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1044    {
; ..\component\Os\Implementation\Os_Thread.h	  1045      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1046      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1047      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1048      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1049  
; ..\component\Os\Implementation\Os_Thread.h	  1050      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1051      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1052      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1053      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1054      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1055    }
; ..\component\Os\Implementation\Os_Thread.h	  1056  
; ..\component\Os\Implementation\Os_Thread.h	  1057    /* #30 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1058    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1059  
; ..\component\Os\Implementation\Os_Thread.h	  1060    /* #35 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1061    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1062  
; ..\component\Os\Implementation\Os_Thread.h	  1063    /* #40 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1064    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1065  
; ..\component\Os\Implementation\Os_Thread.h	  1066    /* #45 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1067    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1068  
; ..\component\Os\Implementation\Os_Thread.h	  1069    /* #50 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1070    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1071  
; ..\component\Os\Implementation\Os_Thread.h	  1072    /* #60 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1073    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1074  
; ..\component\Os\Implementation\Os_Thread.h	  1075    /* #70 Perform a hardware context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1076    Os_Hal_ContextSwitch(Current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTSWITCH_001 */
	ld.a	a4,[a12]4
.L771:
	ld.a	a5,[a13]4
	fret
.L156:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_3')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_3
.L74:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a2]16
.L753:

; ..\component\Os\Implementation\Os_Interrupt.h	   218                                                   InterruptState->Os_IntLockingState.SuspendOsCounter  |
	ld.hu	d0,[a2]20
.L754:
	and	d15,#1
.L755:

; ..\component\Os\Implementation\Os_Interrupt.h	   219                                                   InterruptState->Os_IntLockingState.SuspendAllCounter  ) == 0u));
	or	d15,d0
	ld.hu	d0,[a2]18
.L756:
	or	d15,d0
	fret
.L146:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_2')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_2
.L76:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
	movh.a	a2,#@his(OsCfg_CorePhysicalRefs)
.L545:
	lea	a2,[a2]@los(OsCfg_CorePhysicalRefs)
.L745:
	addsc.a	a2,a2,d15,#2
	ld.a	a15,[a2]
.L746:
	ld.a	a15,[a15]24
.L747:

; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
; ..\component\Os\Implementation\Os_Core.h	   536  }
; ..\component\Os\Implementation\Os_Core.h	   537  
; ..\component\Os\Implementation\Os_Core.h	   538  
; ..\component\Os\Implementation\Os_Core.h	   539  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   540   *  Os_CoreGetLastError()
; ..\component\Os\Implementation\Os_Core.h	   541   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   542  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   543  OS_LOCAL_INLINE P2VAR(Os_ErrorType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   544  Os_CoreGetLastError,
; ..\component\Os\Implementation\Os_Core.h	   545  (
; ..\component\Os\Implementation\Os_Core.h	   546    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   547  ))
; ..\component\Os\Implementation\Os_Core.h	   548  {
; ..\component\Os\Implementation\Os_Core.h	   549    return &(Os_CoreAsrGetDyn(Core)->LastError);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   550  }
; ..\component\Os\Implementation\Os_Core.h	   551  
; ..\component\Os\Implementation\Os_Core.h	   552  
; ..\component\Os\Implementation\Os_Core.h	   553  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   554   *  Os_CoreInterruptedThreadsPush()
; ..\component\Os\Implementation\Os_Core.h	   555   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   556  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   557  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPush,
; ..\component\Os\Implementation\Os_Core.h	   558  (
; ..\component\Os\Implementation\Os_Core.h	   559    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   560    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) InterruptedThread
; ..\component\Os\Implementation\Os_Core.h	   561  ))
; ..\component\Os\Implementation\Os_Core.h	   562  {
; ..\component\Os\Implementation\Os_Core.h	   563    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   564  
; ..\component\Os\Implementation\Os_Core.h	   565    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   566  
; ..\component\Os\Implementation\Os_Core.h	   567    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter >= OS_MAX_INTERRUPTEDTHREADS))                                      /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   568    {
; ..\component\Os\Implementation\Os_Core.h	   569      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   570    }
; ..\component\Os\Implementation\Os_Core.h	   571  
; ..\component\Os\Implementation\Os_Core.h	   572    coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter] = InterruptedThread;                                  /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */ /* SBSW_OS_CORE_COREASR_INTERRUPTEDTHREADS_001 */
; ..\component\Os\Implementation\Os_Core.h	   573    coreDyn->InterruptedThreadsCounter++;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   574  }
; ..\component\Os\Implementation\Os_Core.h	   575  
; ..\component\Os\Implementation\Os_Core.h	   576  
; ..\component\Os\Implementation\Os_Core.h	   577  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   578   *  Os_CoreInterruptedThreadsPop()
; ..\component\Os\Implementation\Os_Core.h	   579   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   580  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   581  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   582  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPop,
; ..\component\Os\Implementation\Os_Core.h	   583  (
; ..\component\Os\Implementation\Os_Core.h	   584    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   585  ))
; ..\component\Os\Implementation\Os_Core.h	   586  {
; ..\component\Os\Implementation\Os_Core.h	   587    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   588  
; ..\component\Os\Implementation\Os_Core.h	   589    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   590  
; ..\component\Os\Implementation\Os_Core.h	   591    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter == 0))                                                              /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   592    {
; ..\component\Os\Implementation\Os_Core.h	   593      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   594    }
; ..\component\Os\Implementation\Os_Core.h	   595  
; ..\component\Os\Implementation\Os_Core.h	   596    coreDyn->InterruptedThreadsCounter--;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   597  
; ..\component\Os\Implementation\Os_Core.h	   598    return coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter];
; ..\component\Os\Implementation\Os_Core.h	   599  }
; ..\component\Os\Implementation\Os_Core.h	   600  
; ..\component\Os\Implementation\Os_Core.h	   601  
; ..\component\Os\Implementation\Os_Core.h	   602  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   603   *  Os_CoreThreadGetByContext()
; ..\component\Os\Implementation\Os_Core.h	   604   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   605  /*!
; ..\component\Os\Implementation\Os_Core.h	   606   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   607   *
; ..\component\Os\Implementation\Os_Core.h	   608   *
; ..\component\Os\Implementation\Os_Core.h	   609   *
; ..\component\Os\Implementation\Os_Core.h	   610   */
; ..\component\Os\Implementation\Os_Core.h	   611  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   612  OS_ALWAYS_INLINE, Os_CoreThreadGetByContext,
; ..\component\Os\Implementation\Os_Core.h	   613  (
; ..\component\Os\Implementation\Os_Core.h	   614    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   615    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Core.h	   616  ))
; ..\component\Os\Implementation\Os_Core.h	   617  {
; ..\component\Os\Implementation\Os_Core.h	   618    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Core.h	   619    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) result;
; ..\component\Os\Implementation\Os_Core.h	   620  
; ..\component\Os\Implementation\Os_Core.h	   621    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Core.h	   622  
; ..\component\Os\Implementation\Os_Core.h	   623    /* #10 Check whether the current thread matches the context. */
; ..\component\Os\Implementation\Os_Core.h	   624    if(Os_ThreadIsAnyInitialContext(currentThread, Context) != 0u)                                                        /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_001 */
; ..\component\Os\Implementation\Os_Core.h	   625    {
; ..\component\Os\Implementation\Os_Core.h	   626      result = currentThread;
; ..\component\Os\Implementation\Os_Core.h	   627    }
; ..\component\Os\Implementation\Os_Core.h	   628    /* #20 Otherwise search the list of interrupted threads. */
; ..\component\Os\Implementation\Os_Core.h	   629    else
; ..\component\Os\Implementation\Os_Core.h	   630    {
; ..\component\Os\Implementation\Os_Core.h	   631      P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   632      Os_CoreThreadIdx iterator;
; ..\component\Os\Implementation\Os_Core.h	   633      Os_CoreThreadIdx iteratorEnd;
; ..\component\Os\Implementation\Os_Core.h	   634  
; ..\component\Os\Implementation\Os_Core.h	   635      result = NULL_PTR;
; ..\component\Os\Implementation\Os_Core.h	   636  
; ..\component\Os\Implementation\Os_Core.h	   637      iterator = Os_CoreInterruptedThreadsGetTopIdx(Core);                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   638      iteratorEnd = Os_CoreInterruptedThreadsGetBottomIdx();
; ..\component\Os\Implementation\Os_Core.h	   639  
; ..\component\Os\Implementation\Os_Core.h	   640      while(iterator != iteratorEnd)                                                                                      /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */
; ..\component\Os\Implementation\Os_Core.h	   641      {
; ..\component\Os\Implementation\Os_Core.h	   642        interruptedThread = Os_CoreInterruptedThreadsGet(Core, iterator);                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   643  
; ..\component\Os\Implementation\Os_Core.h	   644        if(Os_ThreadIsAnyInitialContext(interruptedThread, Context) != 0u)                                                /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_002 */
; ..\component\Os\Implementation\Os_Core.h	   645        {
; ..\component\Os\Implementation\Os_Core.h	   646          result = interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   647          break;
; ..\component\Os\Implementation\Os_Core.h	   648        }
; ..\component\Os\Implementation\Os_Core.h	   649  
; ..\component\Os\Implementation\Os_Core.h	   650        iterator = Os_CoreInterruptedThreadsMoveDown(iterator);
; ..\component\Os\Implementation\Os_Core.h	   651      }
; ..\component\Os\Implementation\Os_Core.h	   652    }
; ..\component\Os\Implementation\Os_Core.h	   653  
; ..\component\Os\Implementation\Os_Core.h	   654    return result;
; ..\component\Os\Implementation\Os_Core.h	   655  }
; ..\component\Os\Implementation\Os_Core.h	   656  
; ..\component\Os\Implementation\Os_Core.h	   657  
; ..\component\Os\Implementation\Os_Core.h	   658  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   659   *  Os_CoreInterruptedThreadsGetTopIdx()
; ..\component\Os\Implementation\Os_Core.h	   660   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   661  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   662  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   663  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetTopIdx,
; ..\component\Os\Implementation\Os_Core.h	   664  (
; ..\component\Os\Implementation\Os_Core.h	   665    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   666  ))
; ..\component\Os\Implementation\Os_Core.h	   667  {
; ..\component\Os\Implementation\Os_Core.h	   668    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   669  
; ..\component\Os\Implementation\Os_Core.h	   670    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   671  
; ..\component\Os\Implementation\Os_Core.h	   672    Os_Assert((Os_StdReturnType)(coreDyn->InterruptedThreadsCounter < OS_MAX_INTERRUPTEDTHREADS));                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   673  
; ..\component\Os\Implementation\Os_Core.h	   674    return coreDyn->InterruptedThreadsCounter;
; ..\component\Os\Implementation\Os_Core.h	   675  }
; ..\component\Os\Implementation\Os_Core.h	   676  
; ..\component\Os\Implementation\Os_Core.h	   677  
; ..\component\Os\Implementation\Os_Core.h	   678  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   679   *  Os_CoreInterruptedThreadsGet()
; ..\component\Os\Implementation\Os_Core.h	   680   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   681  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   682  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   683  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGet,
; ..\component\Os\Implementation\Os_Core.h	   684  (
; ..\component\Os\Implementation\Os_Core.h	   685    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   686    Os_CoreThreadIdx Idx
; ..\component\Os\Implementation\Os_Core.h	   687  ))
; ..\component\Os\Implementation\Os_Core.h	   688  {
; ..\component\Os\Implementation\Os_Core.h	   689    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   690  
; ..\component\Os\Implementation\Os_Core.h	   691    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   692  
; ..\component\Os\Implementation\Os_Core.h	   693    if(OS_UNLIKELY((Idx > coreDyn->InterruptedThreadsCounter) || (Idx == 0)))                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   694    {
; ..\component\Os\Implementation\Os_Core.h	   695      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   696    }
; ..\component\Os\Implementation\Os_Core.h	   697  
; ..\component\Os\Implementation\Os_Core.h	   698    return coreDyn->InterruptedThreads[Idx-1];                                                                            /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */
; ..\component\Os\Implementation\Os_Core.h	   699  }
; ..\component\Os\Implementation\Os_Core.h	   700  
; ..\component\Os\Implementation\Os_Core.h	   701  
; ..\component\Os\Implementation\Os_Core.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   703   *  Os_CoreInterruptedThreadsGetBottomIdx()
; ..\component\Os\Implementation\Os_Core.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   705  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   706  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   707  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetBottomIdx, (void))
; ..\component\Os\Implementation\Os_Core.h	   708  {
; ..\component\Os\Implementation\Os_Core.h	   709    return (Os_CoreThreadIdx)0;
; ..\component\Os\Implementation\Os_Core.h	   710  }
; ..\component\Os\Implementation\Os_Core.h	   711  
; ..\component\Os\Implementation\Os_Core.h	   712  
; ..\component\Os\Implementation\Os_Core.h	   713  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   714   *  Os_CoreInterruptedThreadsMoveDown()
; ..\component\Os\Implementation\Os_Core.h	   715   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   716  /*!
; ..\component\Os\Implementation\Os_Core.h	   717   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   718   *
; ..\component\Os\Implementation\Os_Core.h	   719   *
; ..\component\Os\Implementation\Os_Core.h	   720   */
; ..\component\Os\Implementation\Os_Core.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   722  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   723  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsMoveDown,
; ..\component\Os\Implementation\Os_Core.h	   724  (
; ..\component\Os\Implementation\Os_Core.h	   725      Os_CoreThreadIdx Iterator
; ..\component\Os\Implementation\Os_Core.h	   726  ))
; ..\component\Os\Implementation\Os_Core.h	   727  {
; ..\component\Os\Implementation\Os_Core.h	   728    /* #10 Return the decremented iterator. */
; ..\component\Os\Implementation\Os_Core.h	   729    return (Iterator - (Os_CoreThreadIdx)1);
; ..\component\Os\Implementation\Os_Core.h	   730  }
; ..\component\Os\Implementation\Os_Core.h	   731  
; ..\component\Os\Implementation\Os_Core.h	   732  
; ..\component\Os\Implementation\Os_Core.h	   733  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   734   *  Os_CoreSetThread()
; ..\component\Os\Implementation\Os_Core.h	   735   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   736  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   737  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   738  Os_CoreSetThread,
; ..\component\Os\Implementation\Os_Core.h	   739  (
; ..\component\Os\Implementation\Os_Core.h	   740    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Core.h	   741  ))
; ..\component\Os\Implementation\Os_Core.h	   742  {
; ..\component\Os\Implementation\Os_Core.h	   743    Os_Hal_CoreSetThread(Os_SystemGetCore2Thread(Os_SystemGet()), Thread);                                                /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_CORESETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   744  }
; ..\component\Os\Implementation\Os_Core.h	   745  
; ..\component\Os\Implementation\Os_Core.h	   746  
; ..\component\Os\Implementation\Os_Core.h	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   748   *  Os_CoreGetThread()
; ..\component\Os\Implementation\Os_Core.h	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   750  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   751  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   752  OS_ALWAYS_INLINE, Os_CoreGetThread,
; ..\component\Os\Implementation\Os_Core.h	   753  (
; ..\component\Os\Implementation\Os_Core.h	   754    void
; ..\component\Os\Implementation\Os_Core.h	   755  ))
; ..\component\Os\Implementation\Os_Core.h	   756  {
; ..\component\Os\Implementation\Os_Core.h	   757    return Os_Hal_CoreGetThread(Os_SystemGetCore2Thread(Os_SystemGet()));                                                 /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_COREGETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   758  }
; ..\component\Os\Implementation\Os_Core.h	   759  
; ..\component\Os\Implementation\Os_Core.h	   760  
; ..\component\Os\Implementation\Os_Core.h	   761  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   762   *  Os_CoreSetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   763   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   764  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   765  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   766  Os_CoreSetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   767  (
; ..\component\Os\Implementation\Os_Core.h	   768    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack,
; ..\component\Os\Implementation\Os_Core.h	   769    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   770  ))
; ..\component\Os\Implementation\Os_Core.h	   771  {
; ..\component\Os\Implementation\Os_Core.h	   772    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Core.h	   773    {
; ..\component\Os\Implementation\Os_Core.h	   774      Os_CoreAsrGetDyn(Core)->CurrentStack = Stack;                                                                       /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_CORE_COREASRGETDYN_003 */
; ..\component\Os\Implementation\Os_Core.h	   775    }
; ..\component\Os\Implementation\Os_Core.h	   776  }
; ..\component\Os\Implementation\Os_Core.h	   777  
; ..\component\Os\Implementation\Os_Core.h	   778  
; ..\component\Os\Implementation\Os_Core.h	   779  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   780   *  Os_CoreGetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   781   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   782  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   783  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   784  OS_ALWAYS_INLINE, Os_CoreGetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   785  (
; ..\component\Os\Implementation\Os_Core.h	   786    void
; ..\component\Os\Implementation\Os_Core.h	   787  ))
; ..\component\Os\Implementation\Os_Core.h	   788  {
; ..\component\Os\Implementation\Os_Core.h	   789    if(Os_StackIsMonitoringEnabled() == 0u)                                                                               /* COV_OS_INVSTATE */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   790    {
; ..\component\Os\Implementation\Os_Core.h	   791      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   792    }
; ..\component\Os\Implementation\Os_Core.h	   793    return Os_CoreAsrGetDyn(Os_Core2AsrCore(Os_CoreGetCurrentCore()))->CurrentStack;                                      /* SBSW_OS_CORE_CORE2ASRCORE_002 */ /* SBSW_OS_CORE_COREASRGETDYN_002 */
	ld.a	a15,[a15]120
.L748:

; ..\component\Os\Implementation\Os_Stack.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Stack.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Stack.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Stack.h	     6   *
; ..\component\Os\Implementation\Os_Stack.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Stack.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Stack.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Stack.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Stack.h	    14  /**
; ..\component\Os\Implementation\Os_Stack.h	    15   * \addtogroup Os_Stack
; ..\component\Os\Implementation\Os_Stack.h	    16   * \{
; ..\component\Os\Implementation\Os_Stack.h	    17   *
; ..\component\Os\Implementation\Os_Stack.h	    18   * \file
; ..\component\Os\Implementation\Os_Stack.h	    19   * \brief       External interface to \ref Os_Stack.
; ..\component\Os\Implementation\Os_Stack.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Stack.h	    21   *
; ..\component\Os\Implementation\Os_Stack.h	    22   *
; ..\component\Os\Implementation\Os_Stack.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Stack.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Stack.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    29  
; ..\component\Os\Implementation\Os_Stack.h	    30  #ifndef OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    31  # define OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Stack.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Stack.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Stack.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Stack.h	    38  
; ..\component\Os\Implementation\Os_Stack.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Stack.h	    40  # include "Os_Stack_Cfg.h"
; ..\component\Os\Implementation\Os_Stack.h	    41  # include "Os_StackInt.h"
; ..\component\Os\Implementation\Os_Stack.h	    42  
; ..\component\Os\Implementation\Os_Stack.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    44  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Stack.h	    45  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Stack.h	    46  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    47  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Stack.h	    48  
; ..\component\Os\Implementation\Os_Stack.h	    49  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    50  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    51  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Stack.h	    52  
; ..\component\Os\Implementation\Os_Stack.h	    53  
; ..\component\Os\Implementation\Os_Stack.h	    54  
; ..\component\Os\Implementation\Os_Stack.h	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    56   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Stack.h	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    58  
; ..\component\Os\Implementation\Os_Stack.h	    59  
; ..\component\Os\Implementation\Os_Stack.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    61   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Stack.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    63  
; ..\component\Os\Implementation\Os_Stack.h	    64  
; ..\component\Os\Implementation\Os_Stack.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    68  
; ..\component\Os\Implementation\Os_Stack.h	    69  
; ..\component\Os\Implementation\Os_Stack.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    73  
; ..\component\Os\Implementation\Os_Stack.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Stack.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Stack.h	    76  
; ..\component\Os\Implementation\Os_Stack.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Stack.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    81   *  Os_StackIsModuleEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    83  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    84  OS_ALWAYS_INLINE, Os_StackIsModuleEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    85  {
; ..\component\Os\Implementation\Os_Stack.h	    86    return (Os_StdReturnType)(OS_CFG_STACKMODULE == STD_ON);                                                              /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    87  }
; ..\component\Os\Implementation\Os_Stack.h	    88  
; ..\component\Os\Implementation\Os_Stack.h	    89  
; ..\component\Os\Implementation\Os_Stack.h	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    91   *  Os_StackIsMeasurementEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    94  OS_ALWAYS_INLINE, Os_StackIsMeasurementEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    95  {
; ..\component\Os\Implementation\Os_Stack.h	    96    return (Os_StdReturnType)(OS_CFG_STACKMEASUREMENT == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    97  }
; ..\component\Os\Implementation\Os_Stack.h	    98  
; ..\component\Os\Implementation\Os_Stack.h	    99  
; ..\component\Os\Implementation\Os_Stack.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   101   *  Os_StackIsMonitoringEnabled()
; ..\component\Os\Implementation\Os_Stack.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   104  OS_ALWAYS_INLINE, Os_StackIsMonitoringEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	   105  {
; ..\component\Os\Implementation\Os_Stack.h	   106    return (Os_StdReturnType)(OS_CFG_STACKMONITORING  == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   107  }
; ..\component\Os\Implementation\Os_Stack.h	   108  
; ..\component\Os\Implementation\Os_Stack.h	   109  
; ..\component\Os\Implementation\Os_Stack.h	   110  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   111   *  Os_StackInit()
; ..\component\Os\Implementation\Os_Stack.h	   112   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   113  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   114  Os_StackInit,
; ..\component\Os\Implementation\Os_Stack.h	   115  (
; ..\component\Os\Implementation\Os_Stack.h	   116    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack
; ..\component\Os\Implementation\Os_Stack.h	   117  ))
; ..\component\Os\Implementation\Os_Stack.h	   118  {
; ..\component\Os\Implementation\Os_Stack.h	   119  
; ..\component\Os\Implementation\Os_Stack.h	   120    if(Os_StackIsModuleEnabled() != 0u)                                                                                   /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   121    {
; ..\component\Os\Implementation\Os_Stack.h	   122      FUNC(void, OS_CODE) Os_StackInitInternal                                                                            /* PRQA S 3449, 3451 */ /* MD_Os_Rule8.5_3449, MD_Os_Rule8.5_3451 */
; ..\component\Os\Implementation\Os_Stack.h	   123      (P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack);
; ..\component\Os\Implementation\Os_Stack.h	   124  
; ..\component\Os\Implementation\Os_Stack.h	   125      Os_StackInitInternal(Stack);                                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Stack.h	   126    }
; ..\component\Os\Implementation\Os_Stack.h	   127  }
; ..\component\Os\Implementation\Os_Stack.h	   128  
; ..\component\Os\Implementation\Os_Stack.h	   129  
; ..\component\Os\Implementation\Os_Stack.h	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   131   *  Os_StackOverflowCheck()
; ..\component\Os\Implementation\Os_Stack.h	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   133  /*!
; ..\component\Os\Implementation\Os_Stack.h	   134   * Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   135   *
; ..\component\Os\Implementation\Os_Stack.h	   136   *
; ..\component\Os\Implementation\Os_Stack.h	   137   */
; ..\component\Os\Implementation\Os_Stack.h	   138  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   139  Os_StackOverflowCheck,( void ))
; ..\component\Os\Implementation\Os_Stack.h	   140  {
; ..\component\Os\Implementation\Os_Stack.h	   141    /* #10 Report protection error if the stack's last element is not equal to the fill pattern. */
; ..\component\Os\Implementation\Os_Stack.h	   142    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   143    {
; ..\component\Os\Implementation\Os_Stack.h	   144      P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) stack;
; ..\component\Os\Implementation\Os_Stack.h	   145      P2VAR(Os_Hal_StackType, AUTOMATIC, OS_VAR_NOINIT) stackEnd;
; ..\component\Os\Implementation\Os_Stack.h	   146  
; ..\component\Os\Implementation\Os_Stack.h	   147      stack = Os_CoreGetCurrentStack();
; ..\component\Os\Implementation\Os_Stack.h	   148      stackEnd = Os_Hal_StackEndGet(stack->LowAddress, stack->HighAddress);                                               /* SBSW_OS_ST_HAL_STACKENDGET_003 */
	ld.a	a15,[a15]
	fret
.L141:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_1')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_1
.L78:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	ld.a	a15,[a13]20
.L734:
	ld.a	a2,[a13]8
.L735:
	movh	d0,#15
.L736:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
	ld.a	a15,[a15]24
.L737:

; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
; ..\component\Os\Implementation\Os_Core.h	   536  }
; ..\component\Os\Implementation\Os_Core.h	   537  
; ..\component\Os\Implementation\Os_Core.h	   538  
; ..\component\Os\Implementation\Os_Core.h	   539  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   540   *  Os_CoreGetLastError()
; ..\component\Os\Implementation\Os_Core.h	   541   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   542  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   543  OS_LOCAL_INLINE P2VAR(Os_ErrorType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   544  Os_CoreGetLastError,
; ..\component\Os\Implementation\Os_Core.h	   545  (
; ..\component\Os\Implementation\Os_Core.h	   546    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   547  ))
; ..\component\Os\Implementation\Os_Core.h	   548  {
; ..\component\Os\Implementation\Os_Core.h	   549    return &(Os_CoreAsrGetDyn(Core)->LastError);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   550  }
; ..\component\Os\Implementation\Os_Core.h	   551  
; ..\component\Os\Implementation\Os_Core.h	   552  
; ..\component\Os\Implementation\Os_Core.h	   553  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   554   *  Os_CoreInterruptedThreadsPush()
; ..\component\Os\Implementation\Os_Core.h	   555   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   556  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   557  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPush,
; ..\component\Os\Implementation\Os_Core.h	   558  (
; ..\component\Os\Implementation\Os_Core.h	   559    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   560    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) InterruptedThread
; ..\component\Os\Implementation\Os_Core.h	   561  ))
; ..\component\Os\Implementation\Os_Core.h	   562  {
; ..\component\Os\Implementation\Os_Core.h	   563    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   564  
; ..\component\Os\Implementation\Os_Core.h	   565    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   566  
; ..\component\Os\Implementation\Os_Core.h	   567    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter >= OS_MAX_INTERRUPTEDTHREADS))                                      /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   568    {
; ..\component\Os\Implementation\Os_Core.h	   569      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   570    }
; ..\component\Os\Implementation\Os_Core.h	   571  
; ..\component\Os\Implementation\Os_Core.h	   572    coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter] = InterruptedThread;                                  /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */ /* SBSW_OS_CORE_COREASR_INTERRUPTEDTHREADS_001 */
; ..\component\Os\Implementation\Os_Core.h	   573    coreDyn->InterruptedThreadsCounter++;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   574  }
; ..\component\Os\Implementation\Os_Core.h	   575  
; ..\component\Os\Implementation\Os_Core.h	   576  
; ..\component\Os\Implementation\Os_Core.h	   577  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   578   *  Os_CoreInterruptedThreadsPop()
; ..\component\Os\Implementation\Os_Core.h	   579   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   580  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   581  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   582  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPop,
; ..\component\Os\Implementation\Os_Core.h	   583  (
; ..\component\Os\Implementation\Os_Core.h	   584    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   585  ))
; ..\component\Os\Implementation\Os_Core.h	   586  {
; ..\component\Os\Implementation\Os_Core.h	   587    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   588  
; ..\component\Os\Implementation\Os_Core.h	   589    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   590  
; ..\component\Os\Implementation\Os_Core.h	   591    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter == 0))                                                              /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   592    {
; ..\component\Os\Implementation\Os_Core.h	   593      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   594    }
; ..\component\Os\Implementation\Os_Core.h	   595  
; ..\component\Os\Implementation\Os_Core.h	   596    coreDyn->InterruptedThreadsCounter--;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   597  
; ..\component\Os\Implementation\Os_Core.h	   598    return coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter];
; ..\component\Os\Implementation\Os_Core.h	   599  }
; ..\component\Os\Implementation\Os_Core.h	   600  
; ..\component\Os\Implementation\Os_Core.h	   601  
; ..\component\Os\Implementation\Os_Core.h	   602  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   603   *  Os_CoreThreadGetByContext()
; ..\component\Os\Implementation\Os_Core.h	   604   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   605  /*!
; ..\component\Os\Implementation\Os_Core.h	   606   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   607   *
; ..\component\Os\Implementation\Os_Core.h	   608   *
; ..\component\Os\Implementation\Os_Core.h	   609   *
; ..\component\Os\Implementation\Os_Core.h	   610   */
; ..\component\Os\Implementation\Os_Core.h	   611  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   612  OS_ALWAYS_INLINE, Os_CoreThreadGetByContext,
; ..\component\Os\Implementation\Os_Core.h	   613  (
; ..\component\Os\Implementation\Os_Core.h	   614    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   615    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Core.h	   616  ))
; ..\component\Os\Implementation\Os_Core.h	   617  {
; ..\component\Os\Implementation\Os_Core.h	   618    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Core.h	   619    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) result;
; ..\component\Os\Implementation\Os_Core.h	   620  
; ..\component\Os\Implementation\Os_Core.h	   621    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Core.h	   622  
; ..\component\Os\Implementation\Os_Core.h	   623    /* #10 Check whether the current thread matches the context. */
; ..\component\Os\Implementation\Os_Core.h	   624    if(Os_ThreadIsAnyInitialContext(currentThread, Context) != 0u)                                                        /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_001 */
; ..\component\Os\Implementation\Os_Core.h	   625    {
; ..\component\Os\Implementation\Os_Core.h	   626      result = currentThread;
; ..\component\Os\Implementation\Os_Core.h	   627    }
; ..\component\Os\Implementation\Os_Core.h	   628    /* #20 Otherwise search the list of interrupted threads. */
; ..\component\Os\Implementation\Os_Core.h	   629    else
; ..\component\Os\Implementation\Os_Core.h	   630    {
; ..\component\Os\Implementation\Os_Core.h	   631      P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   632      Os_CoreThreadIdx iterator;
; ..\component\Os\Implementation\Os_Core.h	   633      Os_CoreThreadIdx iteratorEnd;
; ..\component\Os\Implementation\Os_Core.h	   634  
; ..\component\Os\Implementation\Os_Core.h	   635      result = NULL_PTR;
; ..\component\Os\Implementation\Os_Core.h	   636  
; ..\component\Os\Implementation\Os_Core.h	   637      iterator = Os_CoreInterruptedThreadsGetTopIdx(Core);                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   638      iteratorEnd = Os_CoreInterruptedThreadsGetBottomIdx();
; ..\component\Os\Implementation\Os_Core.h	   639  
; ..\component\Os\Implementation\Os_Core.h	   640      while(iterator != iteratorEnd)                                                                                      /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */
; ..\component\Os\Implementation\Os_Core.h	   641      {
; ..\component\Os\Implementation\Os_Core.h	   642        interruptedThread = Os_CoreInterruptedThreadsGet(Core, iterator);                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   643  
; ..\component\Os\Implementation\Os_Core.h	   644        if(Os_ThreadIsAnyInitialContext(interruptedThread, Context) != 0u)                                                /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_002 */
; ..\component\Os\Implementation\Os_Core.h	   645        {
; ..\component\Os\Implementation\Os_Core.h	   646          result = interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   647          break;
; ..\component\Os\Implementation\Os_Core.h	   648        }
; ..\component\Os\Implementation\Os_Core.h	   649  
; ..\component\Os\Implementation\Os_Core.h	   650        iterator = Os_CoreInterruptedThreadsMoveDown(iterator);
; ..\component\Os\Implementation\Os_Core.h	   651      }
; ..\component\Os\Implementation\Os_Core.h	   652    }
; ..\component\Os\Implementation\Os_Core.h	   653  
; ..\component\Os\Implementation\Os_Core.h	   654    return result;
; ..\component\Os\Implementation\Os_Core.h	   655  }
; ..\component\Os\Implementation\Os_Core.h	   656  
; ..\component\Os\Implementation\Os_Core.h	   657  
; ..\component\Os\Implementation\Os_Core.h	   658  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   659   *  Os_CoreInterruptedThreadsGetTopIdx()
; ..\component\Os\Implementation\Os_Core.h	   660   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   661  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   662  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   663  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetTopIdx,
; ..\component\Os\Implementation\Os_Core.h	   664  (
; ..\component\Os\Implementation\Os_Core.h	   665    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   666  ))
; ..\component\Os\Implementation\Os_Core.h	   667  {
; ..\component\Os\Implementation\Os_Core.h	   668    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   669  
; ..\component\Os\Implementation\Os_Core.h	   670    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   671  
; ..\component\Os\Implementation\Os_Core.h	   672    Os_Assert((Os_StdReturnType)(coreDyn->InterruptedThreadsCounter < OS_MAX_INTERRUPTEDTHREADS));                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   673  
; ..\component\Os\Implementation\Os_Core.h	   674    return coreDyn->InterruptedThreadsCounter;
; ..\component\Os\Implementation\Os_Core.h	   675  }
; ..\component\Os\Implementation\Os_Core.h	   676  
; ..\component\Os\Implementation\Os_Core.h	   677  
; ..\component\Os\Implementation\Os_Core.h	   678  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   679   *  Os_CoreInterruptedThreadsGet()
; ..\component\Os\Implementation\Os_Core.h	   680   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   681  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   682  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   683  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGet,
; ..\component\Os\Implementation\Os_Core.h	   684  (
; ..\component\Os\Implementation\Os_Core.h	   685    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   686    Os_CoreThreadIdx Idx
; ..\component\Os\Implementation\Os_Core.h	   687  ))
; ..\component\Os\Implementation\Os_Core.h	   688  {
; ..\component\Os\Implementation\Os_Core.h	   689    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   690  
; ..\component\Os\Implementation\Os_Core.h	   691    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   692  
; ..\component\Os\Implementation\Os_Core.h	   693    if(OS_UNLIKELY((Idx > coreDyn->InterruptedThreadsCounter) || (Idx == 0)))                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   694    {
; ..\component\Os\Implementation\Os_Core.h	   695      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   696    }
; ..\component\Os\Implementation\Os_Core.h	   697  
; ..\component\Os\Implementation\Os_Core.h	   698    return coreDyn->InterruptedThreads[Idx-1];                                                                            /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */
; ..\component\Os\Implementation\Os_Core.h	   699  }
; ..\component\Os\Implementation\Os_Core.h	   700  
; ..\component\Os\Implementation\Os_Core.h	   701  
; ..\component\Os\Implementation\Os_Core.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   703   *  Os_CoreInterruptedThreadsGetBottomIdx()
; ..\component\Os\Implementation\Os_Core.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   705  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   706  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   707  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetBottomIdx, (void))
; ..\component\Os\Implementation\Os_Core.h	   708  {
; ..\component\Os\Implementation\Os_Core.h	   709    return (Os_CoreThreadIdx)0;
; ..\component\Os\Implementation\Os_Core.h	   710  }
; ..\component\Os\Implementation\Os_Core.h	   711  
; ..\component\Os\Implementation\Os_Core.h	   712  
; ..\component\Os\Implementation\Os_Core.h	   713  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   714   *  Os_CoreInterruptedThreadsMoveDown()
; ..\component\Os\Implementation\Os_Core.h	   715   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   716  /*!
; ..\component\Os\Implementation\Os_Core.h	   717   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   718   *
; ..\component\Os\Implementation\Os_Core.h	   719   *
; ..\component\Os\Implementation\Os_Core.h	   720   */
; ..\component\Os\Implementation\Os_Core.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   722  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   723  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsMoveDown,
; ..\component\Os\Implementation\Os_Core.h	   724  (
; ..\component\Os\Implementation\Os_Core.h	   725      Os_CoreThreadIdx Iterator
; ..\component\Os\Implementation\Os_Core.h	   726  ))
; ..\component\Os\Implementation\Os_Core.h	   727  {
; ..\component\Os\Implementation\Os_Core.h	   728    /* #10 Return the decremented iterator. */
; ..\component\Os\Implementation\Os_Core.h	   729    return (Iterator - (Os_CoreThreadIdx)1);
; ..\component\Os\Implementation\Os_Core.h	   730  }
; ..\component\Os\Implementation\Os_Core.h	   731  
; ..\component\Os\Implementation\Os_Core.h	   732  
; ..\component\Os\Implementation\Os_Core.h	   733  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   734   *  Os_CoreSetThread()
; ..\component\Os\Implementation\Os_Core.h	   735   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   736  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   737  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   738  Os_CoreSetThread,
; ..\component\Os\Implementation\Os_Core.h	   739  (
; ..\component\Os\Implementation\Os_Core.h	   740    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Core.h	   741  ))
; ..\component\Os\Implementation\Os_Core.h	   742  {
; ..\component\Os\Implementation\Os_Core.h	   743    Os_Hal_CoreSetThread(Os_SystemGetCore2Thread(Os_SystemGet()), Thread);                                                /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_CORESETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   744  }
; ..\component\Os\Implementation\Os_Core.h	   745  
; ..\component\Os\Implementation\Os_Core.h	   746  
; ..\component\Os\Implementation\Os_Core.h	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   748   *  Os_CoreGetThread()
; ..\component\Os\Implementation\Os_Core.h	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   750  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   751  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   752  OS_ALWAYS_INLINE, Os_CoreGetThread,
; ..\component\Os\Implementation\Os_Core.h	   753  (
; ..\component\Os\Implementation\Os_Core.h	   754    void
; ..\component\Os\Implementation\Os_Core.h	   755  ))
; ..\component\Os\Implementation\Os_Core.h	   756  {
; ..\component\Os\Implementation\Os_Core.h	   757    return Os_Hal_CoreGetThread(Os_SystemGetCore2Thread(Os_SystemGet()));                                                 /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_COREGETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   758  }
; ..\component\Os\Implementation\Os_Core.h	   759  
; ..\component\Os\Implementation\Os_Core.h	   760  
; ..\component\Os\Implementation\Os_Core.h	   761  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   762   *  Os_CoreSetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   763   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   764  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   765  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   766  Os_CoreSetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   767  (
; ..\component\Os\Implementation\Os_Core.h	   768    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack,
; ..\component\Os\Implementation\Os_Core.h	   769    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   770  ))
; ..\component\Os\Implementation\Os_Core.h	   771  {
; ..\component\Os\Implementation\Os_Core.h	   772    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Core.h	   773    {
; ..\component\Os\Implementation\Os_Core.h	   774      Os_CoreAsrGetDyn(Core)->CurrentStack = Stack;                                                                       /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_CORE_COREASRGETDYN_003 */
	st.a	[a15]120,a2
.L738:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   795  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   796  
; ..\component\Os\Implementation\Os_Thread.h	   797  
; ..\component\Os\Implementation\Os_Thread.h	   798  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   799   *  Os_ThreadStartFirst()
; ..\component\Os\Implementation\Os_Thread.h	   800   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   801  /*!
; ..\component\Os\Implementation\Os_Thread.h	   802   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   803   *
; ..\component\Os\Implementation\Os_Thread.h	   804   *
; ..\component\Os\Implementation\Os_Thread.h	   805   *
; ..\component\Os\Implementation\Os_Thread.h	   806   *
; ..\component\Os\Implementation\Os_Thread.h	   807   *
; ..\component\Os\Implementation\Os_Thread.h	   808   *
; ..\component\Os\Implementation\Os_Thread.h	   809   *
; ..\component\Os\Implementation\Os_Thread.h	   810   *
; ..\component\Os\Implementation\Os_Thread.h	   811   */
; ..\component\Os\Implementation\Os_Thread.h	   812  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   813  Os_ThreadStartFirst,
; ..\component\Os\Implementation\Os_Thread.h	   814  (
; ..\component\Os\Implementation\Os_Thread.h	   815    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   816    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   817  ))
; ..\component\Os\Implementation\Os_Thread.h	   818  {
; ..\component\Os\Implementation\Os_Thread.h	   819    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   820    P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   821    P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   822  
; ..\component\Os\Implementation\Os_Thread.h	   823    configTp = Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(Next));                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   824    nextTp = Os_ThreadGetTpConfig(Next);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   825    currentTp = Os_ThreadGetTpConfig(Os_CoreGetThread());                                                                 /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   826  
; ..\component\Os\Implementation\Os_Thread.h	   827    /* #10 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   828    Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                               /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   829  
; ..\component\Os\Implementation\Os_Thread.h	   830    /* #20 Set memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   831    Os_MpSwitchTo(Next->Dyn->MpAccessRights);                                                                             /* SBSW_OS_TRD_MPSWITCHTO_001 */
; ..\component\Os\Implementation\Os_Thread.h	   832  
; ..\component\Os\Implementation\Os_Thread.h	   833    /* #25 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   834    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   835  
; ..\component\Os\Implementation\Os_Thread.h	   836    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   837    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   838  
; ..\component\Os\Implementation\Os_Thread.h	   839    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   840    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   841  
; ..\component\Os\Implementation\Os_Thread.h	   842    /* #50 Update the Msr of the nest thread. */
; ..\component\Os\Implementation\Os_Thread.h	   843    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   844  
; ..\component\Os\Implementation\Os_Thread.h	   845    /* #60 Resume the hardware context of the first thread. */
; ..\component\Os\Implementation\Os_Thread.h	   846    Os_Hal_ContextFirstResume(Next->Context); /* function never returns! */                                               /* SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   847  
; ..\component\Os\Implementation\Os_Thread.h	   848    /* Never reached. */
; ..\component\Os\Implementation\Os_Thread.h	   849    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   850  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   851  
; ..\component\Os\Implementation\Os_Thread.h	   852  
; ..\component\Os\Implementation\Os_Thread.h	   853  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   854   *  Os_ThreadCleanupAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   855   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   856  /*!
; ..\component\Os\Implementation\Os_Thread.h	   857   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   858   *
; ..\component\Os\Implementation\Os_Thread.h	   859   *
; ..\component\Os\Implementation\Os_Thread.h	   860   *
; ..\component\Os\Implementation\Os_Thread.h	   861   *
; ..\component\Os\Implementation\Os_Thread.h	   862   *
; ..\component\Os\Implementation\Os_Thread.h	   863   *
; ..\component\Os\Implementation\Os_Thread.h	   864   *
; ..\component\Os\Implementation\Os_Thread.h	   865   *
; ..\component\Os\Implementation\Os_Thread.h	   866   *
; ..\component\Os\Implementation\Os_Thread.h	   867   *
; ..\component\Os\Implementation\Os_Thread.h	   868   *
; ..\component\Os\Implementation\Os_Thread.h	   869   */
; ..\component\Os\Implementation\Os_Thread.h	   870  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   871  Os_ThreadCleanupAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   872  (
; ..\component\Os\Implementation\Os_Thread.h	   873    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   874    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   875  ))
; ..\component\Os\Implementation\Os_Thread.h	   876  {
; ..\component\Os\Implementation\Os_Thread.h	   877    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   878  
; ..\component\Os\Implementation\Os_Thread.h	   879    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   880  
; ..\component\Os\Implementation\Os_Thread.h	   881    /* Check that the function is not called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   882    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) == 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   883  
; ..\component\Os\Implementation\Os_Thread.h	   884    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   885    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   886  
; ..\component\Os\Implementation\Os_Thread.h	   887    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   888    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   889  
; ..\component\Os\Implementation\Os_Thread.h	   890    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   891    {
; ..\component\Os\Implementation\Os_Thread.h	   892      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   893      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   894      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   895      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   896  
; ..\component\Os\Implementation\Os_Thread.h	   897      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   898      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   899      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   900      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   901      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   902    }
; ..\component\Os\Implementation\Os_Thread.h	   903  
; ..\component\Os\Implementation\Os_Thread.h	   904    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   905    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   906  
; ..\component\Os\Implementation\Os_Thread.h	   907    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   908    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   909  
; ..\component\Os\Implementation\Os_Thread.h	   910    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   911    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   912  
; ..\component\Os\Implementation\Os_Thread.h	   913    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   914    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   915  
; ..\component\Os\Implementation\Os_Thread.h	   916    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   917    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   918  
; ..\component\Os\Implementation\Os_Thread.h	   919    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   920    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   921  
; ..\component\Os\Implementation\Os_Thread.h	   922    /* #80 Cleanup the current hardware context and resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   923    Os_Hal_ContextReturn(current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTRETURN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   924  
; ..\component\Os\Implementation\Os_Thread.h	   925    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   926    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   927  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   928  
; ..\component\Os\Implementation\Os_Thread.h	   929  
; ..\component\Os\Implementation\Os_Thread.h	   930  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   931   *  Os_ThreadKill()
; ..\component\Os\Implementation\Os_Thread.h	   932   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   933  /*!
; ..\component\Os\Implementation\Os_Thread.h	   934   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   935   *
; ..\component\Os\Implementation\Os_Thread.h	   936   *
; ..\component\Os\Implementation\Os_Thread.h	   937   *
; ..\component\Os\Implementation\Os_Thread.h	   938   *
; ..\component\Os\Implementation\Os_Thread.h	   939   *
; ..\component\Os\Implementation\Os_Thread.h	   940   *
; ..\component\Os\Implementation\Os_Thread.h	   941   *
; ..\component\Os\Implementation\Os_Thread.h	   942   *
; ..\component\Os\Implementation\Os_Thread.h	   943   *
; ..\component\Os\Implementation\Os_Thread.h	   944   *
; ..\component\Os\Implementation\Os_Thread.h	   945   *
; ..\component\Os\Implementation\Os_Thread.h	   946   *
; ..\component\Os\Implementation\Os_Thread.h	   947   *
; ..\component\Os\Implementation\Os_Thread.h	   948   */
; ..\component\Os\Implementation\Os_Thread.h	   949  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   950  Os_ThreadKill,
; ..\component\Os\Implementation\Os_Thread.h	   951  (
; ..\component\Os\Implementation\Os_Thread.h	   952    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   953  ))
; ..\component\Os\Implementation\Os_Thread.h	   954  {
; ..\component\Os\Implementation\Os_Thread.h	   955    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   956    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   957  
; ..\component\Os\Implementation\Os_Thread.h	   958    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   959    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   960  
; ..\component\Os\Implementation\Os_Thread.h	   961    /* #30 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   962    Os_ServiceCallForceRelease(&(Thread->Dyn->ServiceCalls));                                                             /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   963  
; ..\component\Os\Implementation\Os_Thread.h	   964    /* #40 Release all locks and resources, which are hold by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   965    Os_ThreadLocksForceRelease(Thread);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   966  
; ..\component\Os\Implementation\Os_Thread.h	   967    /* #50 Reset timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   968    {
; ..\component\Os\Implementation\Os_Thread.h	   969      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   970  
; ..\component\Os\Implementation\Os_Thread.h	   971      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   972  
; ..\component\Os\Implementation\Os_Thread.h	   973      Os_TpThreadKill(currentTp);                                                                                         /* SBSW_OS_TRD_TPTHREADKILL_001 */
; ..\component\Os\Implementation\Os_Thread.h	   974    }
; ..\component\Os\Implementation\Os_Thread.h	   975  
; ..\component\Os\Implementation\Os_Thread.h	   976    /* #60 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   977    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   978  
; ..\component\Os\Implementation\Os_Thread.h	   979  
; ..\component\Os\Implementation\Os_Thread.h	   980    /* #70 If the given thread is not the current thread: */
; ..\component\Os\Implementation\Os_Thread.h	   981    {
; ..\component\Os\Implementation\Os_Thread.h	   982      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   983  
; ..\component\Os\Implementation\Os_Thread.h	   984      current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   985  
; ..\component\Os\Implementation\Os_Thread.h	   986      if(OS_LIKELY(Thread != current))
; ..\component\Os\Implementation\Os_Thread.h	   987      {
; ..\component\Os\Implementation\Os_Thread.h	   988        /* #80 If the given thread is a task: */
; ..\component\Os\Implementation\Os_Thread.h	   989        if(Os_ThreadIsTask(Thread) != 0u)                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   990        {
; ..\component\Os\Implementation\Os_Thread.h	   991          /* #90 Reset its hardware context. */
; ..\component\Os\Implementation\Os_Thread.h	   992          Os_Hal_ContextReset(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTRESET_001 */
; ..\component\Os\Implementation\Os_Thread.h	   993          Os_ThreadInitFpuContext(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   994        }
; ..\component\Os\Implementation\Os_Thread.h	   995        /* #100 Otherwise: */
; ..\component\Os\Implementation\Os_Thread.h	   996        else
; ..\component\Os\Implementation\Os_Thread.h	   997        {
; ..\component\Os\Implementation\Os_Thread.h	   998          Os_Hal_IntStateType currentIntState;
; ..\component\Os\Implementation\Os_Thread.h	   999  
; ..\component\Os\Implementation\Os_Thread.h	  1000          /* #110 Abort the threads context. Execute the return function the next time it will be resumed. */
; ..\component\Os\Implementation\Os_Thread.h	  1001          Os_Hal_ContextAbort(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTABORT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1002  
; ..\component\Os\Implementation\Os_Thread.h	  1003          /* #120 Set the interrupt state for the context used after the abort. */
; ..\component\Os\Implementation\Os_Thread.h	  1004          Os_Hal_IntGetInterruptState(&currentIntState);                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1005          Os_Hal_ContextSetInterruptState(Thread->Context, &currentIntState);                                             /* SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1006        }
; ..\component\Os\Implementation\Os_Thread.h	  1007      }
; ..\component\Os\Implementation\Os_Thread.h	  1008    }
; ..\component\Os\Implementation\Os_Thread.h	  1009  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1010  
; ..\component\Os\Implementation\Os_Thread.h	  1011  
; ..\component\Os\Implementation\Os_Thread.h	  1012  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1013   *  Os_ThreadSwitch()
; ..\component\Os\Implementation\Os_Thread.h	  1014   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1015  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1016   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1017   *
; ..\component\Os\Implementation\Os_Thread.h	  1018   *
; ..\component\Os\Implementation\Os_Thread.h	  1019   *
; ..\component\Os\Implementation\Os_Thread.h	  1020   *
; ..\component\Os\Implementation\Os_Thread.h	  1021   *
; ..\component\Os\Implementation\Os_Thread.h	  1022   *
; ..\component\Os\Implementation\Os_Thread.h	  1023   *
; ..\component\Os\Implementation\Os_Thread.h	  1024   *
; ..\component\Os\Implementation\Os_Thread.h	  1025   *
; ..\component\Os\Implementation\Os_Thread.h	  1026   *
; ..\component\Os\Implementation\Os_Thread.h	  1027   *
; ..\component\Os\Implementation\Os_Thread.h	  1028   */
; ..\component\Os\Implementation\Os_Thread.h	  1029  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1030  Os_ThreadSwitch,
; ..\component\Os\Implementation\Os_Thread.h	  1031  (
; ..\component\Os\Implementation\Os_Thread.h	  1032    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1033    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1034    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1035  ))
; ..\component\Os\Implementation\Os_Thread.h	  1036  {
; ..\component\Os\Implementation\Os_Thread.h	  1037    /* #10 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	  1038    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1039  
; ..\component\Os\Implementation\Os_Thread.h	  1040    /* #15 Store FPU context of current thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1041    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1042  
; ..\component\Os\Implementation\Os_Thread.h	  1043    /* #20 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1044    {
; ..\component\Os\Implementation\Os_Thread.h	  1045      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1046      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1047      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1048      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1049  
; ..\component\Os\Implementation\Os_Thread.h	  1050      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1051      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1052      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1053      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1054      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1055    }
; ..\component\Os\Implementation\Os_Thread.h	  1056  
; ..\component\Os\Implementation\Os_Thread.h	  1057    /* #30 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1058    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1059  
; ..\component\Os\Implementation\Os_Thread.h	  1060    /* #35 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1061    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1062  
; ..\component\Os\Implementation\Os_Thread.h	  1063    /* #40 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1064    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1065  
; ..\component\Os\Implementation\Os_Thread.h	  1066    /* #45 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1067    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1068  
; ..\component\Os\Implementation\Os_Thread.h	  1069    /* #50 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1070    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1071  
; ..\component\Os\Implementation\Os_Thread.h	  1072    /* #60 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1073    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
	ld.a	a15,[a13]4
.L739:
	ld.w	d15,[a15]4
	and	d0,d15
	insert	d15,d15,#0,#16,#16
	sh	d0,d0,#12
	sh	d15,#6
.L550:
	or	d0,d15
.L552:
	add	d0,#4
.L551:
	mov.a	a15,d0
.L553:
	ld.w	d15,[a15]
.L740:
	insert	d15,d15,#0,#16,#16
	fret
.L136:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_ClearEvent')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_ClearEvent

; ..\component\Os\Implementation\Os_Event.c	   438  
; ..\component\Os\Implementation\Os_Event.c	   439  
; ..\component\Os\Implementation\Os_Event.c	   440  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   441   *  Os_Api_ClearEvent()
; ..\component\Os\Implementation\Os_Event.c	   442   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   443  /*!
; ..\component\Os\Implementation\Os_Event.c	   444   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   445   *
; ..\component\Os\Implementation\Os_Event.c	   446   *
; ..\component\Os\Implementation\Os_Event.c	   447   *
; ..\component\Os\Implementation\Os_Event.c	   448   *
; ..\component\Os\Implementation\Os_Event.c	   449   *
; ..\component\Os\Implementation\Os_Event.c	   450   */
; ..\component\Os\Implementation\Os_Event.c	   451  FUNC(Os_StatusType, OS_CODE) Os_Api_ClearEvent
; Function Os_Api_ClearEvent
.L80:
Os_Api_ClearEvent:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L559:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L384:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
	ld.a	a2,[a15]12
.L381:
	ld.hu	d15,[a2]20
.L560:

; ..\component\Os\Implementation\Os_Event.c	   452  (
; ..\component\Os\Implementation\Os_Event.c	   453    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   454  )
; ..\component\Os\Implementation\Os_Event.c	   455  {
; ..\component\Os\Implementation\Os_Event.c	   456    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   457    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Event.c	   458    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) task;
; ..\component\Os\Implementation\Os_Event.c	   459  
; ..\component\Os\Implementation\Os_Event.c	   460    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Event.c	   461  
; ..\component\Os\Implementation\Os_Event.c	   462    /* #10 Perform error checks. */
; ..\component\Os\Implementation\Os_Event.c	   463    if(Os_EventIsEnabled() == 0u)                                                                                         /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   464    {
; ..\component\Os\Implementation\Os_Event.c	   465      status = Os_ErrSetOkInStdStatus(OS_STATUS_EVENT_DISABLED_BY_CONFIG);                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   466    }
; ..\component\Os\Implementation\Os_Event.c	   467    else if(OS_UNLIKELY(Os_ThreadCheckCallContext(currentThread, OS_APICONTEXT_CLEAREVENT) == OS_CHECK_FAILED))           /* SBSW_OS_EV_THREADCHECKCALLCONTEXT_001 */
	jnz.t	d15:0,.L18
.L678:

; ..\component\Os\Implementation\Os_Event.c	   468    {
; ..\component\Os\Implementation\Os_Event.c	   469      status = OS_STATUS_CALLEVEL;
; ..\component\Os\Implementation\Os_Event.c	   470    }
; ..\component\Os\Implementation\Os_Event.c	   471    else
; ..\component\Os\Implementation\Os_Event.c	   472    {
; ..\component\Os\Implementation\Os_Event.c	   473      task = Os_TaskThread2Task(currentThread);                                                                           /* SBSW_OS_EV_TASKTHREAD2TASK_001 */
; ..\component\Os\Implementation\Os_Event.c	   474  
; ..\component\Os\Implementation\Os_Event.c	   475      if(OS_UNLIKELY(Os_ThreadCheckAreInterruptsEnabled(currentThread) == OS_CHECK_FAILED))                               /* SBSW_OS_EV_THREADCHECKAREINTERRUPTSENABLED_001 */
; ..\component\Os\Implementation\Os_Event.c	   476      {
; ..\component\Os\Implementation\Os_Event.c	   477        status = OS_STATUS_DISABLEDINT;
; ..\component\Os\Implementation\Os_Event.c	   478      }
; ..\component\Os\Implementation\Os_Event.c	   479      else if(OS_UNLIKELY(Os_TaskCheckIsExtendedTask(task) == OS_CHECK_FAILED))                                           /* SBSW_OS_EV_TASKCHECKISEXTENDEDTASK_002 */
; ..\component\Os\Implementation\Os_Event.c	   480      {
; ..\component\Os\Implementation\Os_Event.c	   481        status = OS_STATUS_NOEXTENDEDTASK_CALLER;
; ..\component\Os\Implementation\Os_Event.c	   482      }
; ..\component\Os\Implementation\Os_Event.c	   483      else
; ..\component\Os\Implementation\Os_Event.c	   484      {
; ..\component\Os\Implementation\Os_Event.c	   485        P2VAR(Os_EventStateType, AUTOMATIC, OS_CONST) event;
; ..\component\Os\Implementation\Os_Event.c	   486        Os_IntStateType interruptState;
; ..\component\Os\Implementation\Os_Event.c	   487  
; ..\component\Os\Implementation\Os_Event.c	   488        event = Os_TaskGetEvent(task);                                                                                    /* SBSW_OS_EV_TASKGETEVENT_001 */
; ..\component\Os\Implementation\Os_Event.c	   489  
; ..\component\Os\Implementation\Os_Event.c	   490        /* #20 Suspend interrupts. */
; ..\component\Os\Implementation\Os_Event.c	   491        Os_IntSuspend(&interruptState);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   492  
; ..\component\Os\Implementation\Os_Event.c	   493        /* #30 In caller's set event mask, clear all bits given in Mask. */
; ..\component\Os\Implementation\Os_Event.c	   494        Os_EventTriggerClear(event, Mask);                                                                                /* SBSW_OS_EV_EVENTTRIGGERCLEAR_001 */
; ..\component\Os\Implementation\Os_Event.c	   495  
; ..\component\Os\Implementation\Os_Event.c	   496        /* #40 Resume interrupts. */
; ..\component\Os\Implementation\Os_Event.c	   497        Os_IntResume(&interruptState);                                                                                    /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   498  
; ..\component\Os\Implementation\Os_Event.c	   499        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Event.c	   500      }
; ..\component\Os\Implementation\Os_Event.c	   501    }
; ..\component\Os\Implementation\Os_Event.c	   502  
; ..\component\Os\Implementation\Os_Event.c	   503    return status;
; ..\component\Os\Implementation\Os_Event.c	   504  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	mov	d2,#2
	ret
.L18:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a2,[a15]24
.L389:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	fcall	.cocofun_3
.L387:
	jeq	d15,#0,.L20
.L679:
	mov	d2,#12
	ret
.L20:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a15]77
.L383:
	jeq	d15,#1,.L22
.L680:
	mov	d2,#1793
	ret
.L22:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a15,[a15]12
.L392:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mfcr	d15,#65068
.L681:
	mov.u	d0,#32768
.L561:
	and	d15,d0
.L682:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L394:
	ld.d	e0,[a15]32
.L683:
	mov	e2,#-1
	xor	d2,d4
	xor	d3,d5
.L684:
	and	d0,d2
	and	d1,d3
	st.d	[a15]32,e0
.L398:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L685:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d0,#65068
.L686:
	insert	d0,d0,#0,#15,#1
.L562:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d0,d15
.L563:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L687:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L404:
	mov	d2,#0
	ret
.L378:
	
__Os_Api_ClearEvent_function_end:
	.size	Os_Api_ClearEvent,__Os_Api_ClearEvent_function_end-Os_Api_ClearEvent
.L121:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_GetEvent')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_GetEvent

; ..\component\Os\Implementation\Os_Event.c	   505  
; ..\component\Os\Implementation\Os_Event.c	   506  
; ..\component\Os\Implementation\Os_Event.c	   507  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   508   *  Os_Api_GetEvent()
; ..\component\Os\Implementation\Os_Event.c	   509   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   510  /*!
; ..\component\Os\Implementation\Os_Event.c	   511   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   512   *
; ..\component\Os\Implementation\Os_Event.c	   513   *
; ..\component\Os\Implementation\Os_Event.c	   514   *
; ..\component\Os\Implementation\Os_Event.c	   515   *
; ..\component\Os\Implementation\Os_Event.c	   516   */
; ..\component\Os\Implementation\Os_Event.c	   517  FUNC(Os_StatusType, OS_CODE) Os_Api_GetEvent
; Function Os_Api_GetEvent
.L82:
Os_Api_GetEvent:	.type	func
	mov.aa	a5,a4
.L566:

; ..\component\Os\Implementation\Os_Event.c	   518  (
; ..\component\Os\Implementation\Os_Event.c	   519    TaskType TaskID,
; ..\component\Os\Implementation\Os_Event.c	   520    EventMaskRefType Mask
; ..\component\Os\Implementation\Os_Event.c	   521  )
; ..\component\Os\Implementation\Os_Event.c	   522  {
; ..\component\Os\Implementation\Os_Event.c	   523    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   524  
; ..\component\Os\Implementation\Os_Event.c	   525    /* #10 Perform error checks. */
; ..\component\Os\Implementation\Os_Event.c	   526    if(Os_EventIsEnabled() == 0u)                                                                                         /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   527    {
; ..\component\Os\Implementation\Os_Event.c	   528      status = Os_ErrSetOkInStdStatus(OS_STATUS_EVENT_DISABLED_BY_CONFIG);                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   529    }
; ..\component\Os\Implementation\Os_Event.c	   530    else if(OS_UNLIKELY(Os_TaskCheckId(TaskID) == OS_CHECK_FAILED))
	jlt.u	d4,#6,.L25
.L692:

; ..\component\Os\Implementation\Os_Event.c	   531    {
; ..\component\Os\Implementation\Os_Event.c	   532      status = OS_STATUS_ID_1;
; ..\component\Os\Implementation\Os_Event.c	   533    }
; ..\component\Os\Implementation\Os_Event.c	   534    else
; ..\component\Os\Implementation\Os_Event.c	   535    {
; ..\component\Os\Implementation\Os_Event.c	   536      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Event.c	   537      Os_AppAccessMaskType permittedApplications;
; ..\component\Os\Implementation\Os_Event.c	   538      P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) currentApplication;
; ..\component\Os\Implementation\Os_Event.c	   539      P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) task;
; ..\component\Os\Implementation\Os_Event.c	   540  
; ..\component\Os\Implementation\Os_Event.c	   541      task = Os_TaskId2Task(TaskID);
; ..\component\Os\Implementation\Os_Event.c	   542      currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Event.c	   543      permittedApplications = Os_TaskGetAccessingApplications(task);                                                      /* SBSW_OS_EV_TASKGETACCESSINGAPPLICATIONS_001 */
; ..\component\Os\Implementation\Os_Event.c	   544      currentApplication = Os_ThreadGetCurrentApplication(currentThread);                                                 /* SBSW_OS_EV_THREADGETCURRENTAPPLICATION_001 */
; ..\component\Os\Implementation\Os_Event.c	   545  
; ..\component\Os\Implementation\Os_Event.c	   546      if(OS_UNLIKELY(Os_ThreadCheckCallContext(currentThread, OS_APICONTEXT_GETEVENT) == OS_CHECK_FAILED))                /* SBSW_OS_EV_THREADCHECKCALLCONTEXT_001 */
; ..\component\Os\Implementation\Os_Event.c	   547      {
; ..\component\Os\Implementation\Os_Event.c	   548        status = OS_STATUS_CALLEVEL;
; ..\component\Os\Implementation\Os_Event.c	   549      }
; ..\component\Os\Implementation\Os_Event.c	   550      else if(OS_UNLIKELY(Os_AppCheckAccess(currentApplication, permittedApplications) == OS_CHECK_FAILED))               /* SBSW_OS_EV_APPCHECKACCESS_001 */
; ..\component\Os\Implementation\Os_Event.c	   551      {
; ..\component\Os\Implementation\Os_Event.c	   552        status = OS_STATUS_ACCESSRIGHTS_1;
; ..\component\Os\Implementation\Os_Event.c	   553      }
; ..\component\Os\Implementation\Os_Event.c	   554      else if(OS_UNLIKELY(Os_ThreadCheckAreInterruptsEnabled(currentThread) == OS_CHECK_FAILED))                          /* SBSW_OS_EV_THREADCHECKAREINTERRUPTSENABLED_001 */
; ..\component\Os\Implementation\Os_Event.c	   555      {
; ..\component\Os\Implementation\Os_Event.c	   556        status = OS_STATUS_DISABLEDINT;
; ..\component\Os\Implementation\Os_Event.c	   557      }
; ..\component\Os\Implementation\Os_Event.c	   558      else if(OS_UNLIKELY(Os_TaskCheckIsExtendedTask(task) == OS_CHECK_FAILED))                                           /* SBSW_OS_EV_TASKCHECKISEXTENDEDTASK_001 */
; ..\component\Os\Implementation\Os_Event.c	   559      {
; ..\component\Os\Implementation\Os_Event.c	   560        status = OS_STATUS_NOEXTENDEDTASK_1;
; ..\component\Os\Implementation\Os_Event.c	   561      }
; ..\component\Os\Implementation\Os_Event.c	   562      else
; ..\component\Os\Implementation\Os_Event.c	   563      {
; ..\component\Os\Implementation\Os_Event.c	   564        /* #20 If the given task belongs to the local core get the event locally. */
; ..\component\Os\Implementation\Os_Event.c	   565        if(OS_LIKELY(Os_TaskIsCoreLocal(task) != 0u))                                                                     /* SBSW_OS_EV_TASKISCORELOCAL_001 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */ /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Event.c	   566        {
; ..\component\Os\Implementation\Os_Event.c	   567          status = Os_EventGetLocal(task, Mask);                                                                          /* SBSW_OS_EV_EVENTGETLOCAL_001 */
; ..\component\Os\Implementation\Os_Event.c	   568        }
; ..\component\Os\Implementation\Os_Event.c	   569        /* #30 Otherwise signal the responsible core to get events. */
; ..\component\Os\Implementation\Os_Event.c	   570        else
; ..\component\Os\Implementation\Os_Event.c	   571        {
; ..\component\Os\Implementation\Os_Event.c	   572          P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Event.c	   573          core = Os_TaskGetCore(task);                                                                                    /* SBSW_OS_EV_TASKGETCORE_001 */
; ..\component\Os\Implementation\Os_Event.c	   574  
; ..\component\Os\Implementation\Os_Event.c	   575          status = Os_XSigSend_GetEvent(core, currentThread, TaskID, Mask);                                               /* SBSW_OS_EV_XSIGSEND_001 */
; ..\component\Os\Implementation\Os_Event.c	   576        }
; ..\component\Os\Implementation\Os_Event.c	   577      }
; ..\component\Os\Implementation\Os_Event.c	   578    }
; ..\component\Os\Implementation\Os_Event.c	   579  
; ..\component\Os\Implementation\Os_Event.c	   580    return status;
; ..\component\Os\Implementation\Os_Event.c	   581  }                                                                                                                       /* PRQA S 6050, 6080 */ /* MD_Os_STCAL, MD_Os_STMIF */
	mov	d2,#259
	ret
.L25:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
	movh.a	a15,#@his(OsCfg_TaskRefs)
	lea	a15,[a15]@los(OsCfg_TaskRefs)
.L693:
	addsc.a	a15,a15,d4,#2
	ld.a	a4,[a15]
.L412:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L564:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L415:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
	ld.a	a2,[a15]12
.L414:
	ld.hu	d15,[a2]20
.L565:

; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
	and	d15,#31
.L694:
	jne	d15,#0,.L27
.L695:
	mov	d2,#2
	ret
.L27:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L421:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	fcall	.cocofun_4
.L418:
	jeq	d15,#0,.L29
.L696:
	mov	d2,#12
	ret
.L29:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a4]77
.L697:
	jeq	d15,#1,.L31
.L698:
	mov	d2,#1281
	ret
.L31:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L423:
	j	Os_EventGetLocal
.L408:
	
__Os_Api_GetEvent_function_end:
	.size	Os_Api_GetEvent,__Os_Api_GetEvent_function_end-Os_Api_GetEvent
.L126:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_4')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_4
.L84:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a15]16
.L761:

; ..\component\Os\Implementation\Os_Interrupt.h	   218                                                   InterruptState->Os_IntLockingState.SuspendOsCounter  |
	ld.hu	d0,[a15]20
.L762:
	and	d15,#1
.L763:

; ..\component\Os\Implementation\Os_Interrupt.h	   219                                                   InterruptState->Os_IntLockingState.SuspendAllCounter  ) == 0u));
	or	d15,d0
	ld.hu	d0,[a15]18
.L764:
	or	d15,d0
	fret
.L151:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_WaitEvent')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_WaitEvent

; ..\component\Os\Implementation\Os_Event.c	   582  
; ..\component\Os\Implementation\Os_Event.c	   583  
; ..\component\Os\Implementation\Os_Event.c	   584  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   585   *  Os_Api_WaitEvent()
; ..\component\Os\Implementation\Os_Event.c	   586   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   587  /*!
; ..\component\Os\Implementation\Os_Event.c	   588   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   589   *
; ..\component\Os\Implementation\Os_Event.c	   590   *
; ..\component\Os\Implementation\Os_Event.c	   591   *
; ..\component\Os\Implementation\Os_Event.c	   592   *
; ..\component\Os\Implementation\Os_Event.c	   593   *
; ..\component\Os\Implementation\Os_Event.c	   594   *
; ..\component\Os\Implementation\Os_Event.c	   595   *
; ..\component\Os\Implementation\Os_Event.c	   596   *
; ..\component\Os\Implementation\Os_Event.c	   597   *
; ..\component\Os\Implementation\Os_Event.c	   598   *
; ..\component\Os\Implementation\Os_Event.c	   599   *
; ..\component\Os\Implementation\Os_Event.c	   600   *
; ..\component\Os\Implementation\Os_Event.c	   601   *
; ..\component\Os\Implementation\Os_Event.c	   602   */
; ..\component\Os\Implementation\Os_Event.c	   603  FUNC(Os_StatusType, OS_CODE) Os_Api_WaitEvent
; Function Os_Api_WaitEvent
.L86:
Os_Api_WaitEvent:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L567:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a12,d15
.L431:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
	ld.a	a2,[a12]12
.L430:
	ld.hu	d15,[a2]20
.L568:

; ..\component\Os\Implementation\Os_Event.c	   604  (
; ..\component\Os\Implementation\Os_Event.c	   605    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   606  )
; ..\component\Os\Implementation\Os_Event.c	   607  {
; ..\component\Os\Implementation\Os_Event.c	   608    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   609    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Event.c	   610  
; ..\component\Os\Implementation\Os_Event.c	   611    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Event.c	   612  
; ..\component\Os\Implementation\Os_Event.c	   613    /* #10 Perform error checks. */
; ..\component\Os\Implementation\Os_Event.c	   614    if(Os_EventIsEnabled() == 0u)                                                                                         /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   615    {
; ..\component\Os\Implementation\Os_Event.c	   616      status = Os_ErrSetOkInStdStatus(OS_STATUS_EVENT_DISABLED_BY_CONFIG);                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   617    }
; ..\component\Os\Implementation\Os_Event.c	   618    else if(OS_UNLIKELY(Os_ThreadCheckCallContext(currentThread, OS_APICONTEXT_WAITEVENT) == OS_CHECK_FAILED))            /* SBSW_OS_EV_THREADCHECKCALLCONTEXT_001 */
	jnz.t	d15:0,.L34
.L703:

; ..\component\Os\Implementation\Os_Event.c	   619    {
; ..\component\Os\Implementation\Os_Event.c	   620      status = OS_STATUS_CALLEVEL;
; ..\component\Os\Implementation\Os_Event.c	   621    }
; ..\component\Os\Implementation\Os_Event.c	   622    else
; ..\component\Os\Implementation\Os_Event.c	   623    {
; ..\component\Os\Implementation\Os_Event.c	   624      P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) currentTask;
; ..\component\Os\Implementation\Os_Event.c	   625  
; ..\component\Os\Implementation\Os_Event.c	   626      currentTask = Os_TaskThread2Task(currentThread);                                                                    /* SBSW_OS_EV_TASKTHREAD2TASK_001 */
; ..\component\Os\Implementation\Os_Event.c	   627  
; ..\component\Os\Implementation\Os_Event.c	   628      if(OS_UNLIKELY(Os_TaskCheckIsExtendedTask(currentTask) == OS_CHECK_FAILED))                                         /* SBSW_OS_EV_TASKCHECKISEXTENDEDTASK_002 */
; ..\component\Os\Implementation\Os_Event.c	   629      {
; ..\component\Os\Implementation\Os_Event.c	   630        status = OS_STATUS_NOEXTENDEDTASK_CALLER;
; ..\component\Os\Implementation\Os_Event.c	   631      }
; ..\component\Os\Implementation\Os_Event.c	   632      else if(OS_UNLIKELY(Os_ThreadCheckResourcesReleased(currentThread) == OS_CHECK_FAILED))                             /* SBSW_OS_EV_THREADCHECKRESOURCESRELEASED_001 */
; ..\component\Os\Implementation\Os_Event.c	   633      {
; ..\component\Os\Implementation\Os_Event.c	   634        status = OS_STATUS_RESOURCE;
; ..\component\Os\Implementation\Os_Event.c	   635      }
; ..\component\Os\Implementation\Os_Event.c	   636      else if(OS_UNLIKELY(Os_ThreadCheckSpinlocksReleased(currentThread) == OS_CHECK_FAILED))                             /* SBSW_OS_EV_THREADCHECKSPINLOCKSRELEASED_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Event.c	   637      {
; ..\component\Os\Implementation\Os_Event.c	   638        status = OS_STATUS_SPINLOCK;
; ..\component\Os\Implementation\Os_Event.c	   639      }
; ..\component\Os\Implementation\Os_Event.c	   640      else if(OS_UNLIKELY(Os_ThreadCheckAreInterruptsEnabled(currentThread) == OS_CHECK_FAILED))                          /* SBSW_OS_EV_THREADCHECKAREINTERRUPTSENABLED_001 */
; ..\component\Os\Implementation\Os_Event.c	   641      {
; ..\component\Os\Implementation\Os_Event.c	   642        status = OS_STATUS_DISABLEDINT;
; ..\component\Os\Implementation\Os_Event.c	   643      }
; ..\component\Os\Implementation\Os_Event.c	   644      else
; ..\component\Os\Implementation\Os_Event.c	   645      {
; ..\component\Os\Implementation\Os_Event.c	   646        P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp =
; ..\component\Os\Implementation\Os_Event.c	   647            Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(currentThread));                                               /* SBSW_OS_TASK_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Event.c	   648        P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) threadTp = Os_ThreadGetTpConfig(currentThread);                 /* SBSW_OS_TASK_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Event.c	   649        P2VAR(Os_EventStateType, AUTOMATIC, OS_CONST) event;
; ..\component\Os\Implementation\Os_Event.c	   650        Os_IntStateType interruptState;
; ..\component\Os\Implementation\Os_Event.c	   651        boolean setWaitState = TRUE;
; ..\component\Os\Implementation\Os_Event.c	   652  
; ..\component\Os\Implementation\Os_Event.c	   653        event = Os_TaskGetEvent(currentTask);                                                                             /* SBSW_OS_EV_TASKGETEVENT_001 */
; ..\component\Os\Implementation\Os_Event.c	   654  
; ..\component\Os\Implementation\Os_Event.c	   655        /* #20 Suspend interrupts. */
; ..\component\Os\Implementation\Os_Event.c	   656        Os_IntSuspend(&interruptState);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   657  
; ..\component\Os\Implementation\Os_Event.c	   658        /* #30 Set task's wait event mask to given Mask. */
; ..\component\Os\Implementation\Os_Event.c	   659        Os_EventWaitSet(event, Mask);                                                                                     /* SBSW_OS_EV_EVENTWAITSET_001 */
; ..\component\Os\Implementation\Os_Event.c	   660  
; ..\component\Os\Implementation\Os_Event.c	   661        /* #40 If the events, the task wants to wait for, are already set: */
; ..\component\Os\Implementation\Os_Event.c	   662        if((Os_EventWaitEventTriggered(event) != 0u))                                                                     /* SBSW_OS_EV_EVENTWAITEVENTTRIGGERED_001 */
; ..\component\Os\Implementation\Os_Event.c	   663        {
; ..\component\Os\Implementation\Os_Event.c	   664          /* #50 If no inter arrival time violation exists,
; ..\component\Os\Implementation\Os_Event.c	   665           * tell timing protection to start task time frame (inter-arrival time). */
; ..\component\Os\Implementation\Os_Event.c	   666          if(OS_LIKELY(Os_TpCheckInterArrival(configTp, threadTp) != OS_CHECK_FAILED))                                    /* SBSW_OS_TASK_TPCHECKINTERARRIVAL_001 */ /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Event.c	   667          {
; ..\component\Os\Implementation\Os_Event.c	   668            /* #60 Tell timing protection to reset execution budget. */
; ..\component\Os\Implementation\Os_Event.c	   669            /* current and next TP config are the same here */
; ..\component\Os\Implementation\Os_Event.c	   670            Os_TpResetAndResume(configTp, threadTp, threadTp, currentThread);                                             /* SBSW_OS_TASK_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Event.c	   671  
; ..\component\Os\Implementation\Os_Event.c	   672            /* #70 Task should not be set into wait state */
; ..\component\Os\Implementation\Os_Event.c	   673            setWaitState = FALSE;
; ..\component\Os\Implementation\Os_Event.c	   674  
; ..\component\Os\Implementation\Os_Event.c	   675            /* #80 Inform the trace object about this. */
; ..\component\Os\Implementation\Os_Event.c	   676            Os_TraceTaskWaitEventNoWait(Os_ThreadGetTrace(currentThread), Mask);                                          /* SBSW_OS_EV_THREADGETTRACE_001 */ /* SBSW_OS_EV_THREADSETTRACE_002 */
; ..\component\Os\Implementation\Os_Event.c	   677          }
; ..\component\Os\Implementation\Os_Event.c	   678        }
; ..\component\Os\Implementation\Os_Event.c	   679  
; ..\component\Os\Implementation\Os_Event.c	   680        /* #90 If the task should be set into wait state */
; ..\component\Os\Implementation\Os_Event.c	   681        if (setWaitState == TRUE)
; ..\component\Os\Implementation\Os_Event.c	   682        {
; ..\component\Os\Implementation\Os_Event.c	   683          /* #100 Put the task into the waiting state. */
; ..\component\Os\Implementation\Os_Event.c	   684          Os_TaskWait(currentTask);                                                                                       /* SBSW_OS_EV_TASKWAIT_001 */
; ..\component\Os\Implementation\Os_Event.c	   685        }
; ..\component\Os\Implementation\Os_Event.c	   686  
; ..\component\Os\Implementation\Os_Event.c	   687        /* #110 Resume interrupts. */
; ..\component\Os\Implementation\Os_Event.c	   688        Os_IntResume(&interruptState);                                                                                    /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   689  
; ..\component\Os\Implementation\Os_Event.c	   690        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Event.c	   691      }
; ..\component\Os\Implementation\Os_Event.c	   692    }
; ..\component\Os\Implementation\Os_Event.c	   693  
; ..\component\Os\Implementation\Os_Event.c	   694    return status;
; ..\component\Os\Implementation\Os_Event.c	   695  }                                                                                                                       /* PRQA S 6050, 6080 */ /* MD_Os_STCAL, MD_Os_STMIF */
	mov	d2,#2
	ret
.L34:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a12]77
.L704:
	jeq	d15,#1,.L36
.L705:
	mov	d2,#1793
	ret
.L36:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
	ld.a	a15,[a2]
.L569:
	mov	d0,#0
.L571:
	mov.aa	a2,a15
.L572:

; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */      (inlined)
	j	.L38
.L39:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a2]8
.L706:

; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
	mov	d1,#0
.L707:

; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	jeq	d15,#0,.L40
.L708:

; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */      (inlined)
	jne	d15,#1,.L41
.L40:
	mov	d1,#1

; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */      (inlined)
.L41:

; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */      (inlined)
	jeq	d1,#0,.L42
.L448:

; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
	mov	d0,#1

; ..\component\Os\Implementation\Os_Thread.h	   460        break;      (inlined)
	j	.L43

; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */      (inlined)
.L42:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
	ld.a	a2,[a2]
.L573:
	ld.a	a2,[a2]

; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */      (inlined)
.L38:
	jnz.a	a2,.L39

; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;      (inlined)
.L43:
	jeq	d0,#0,.L46
.L435:
	mov	d2,#6
	ret

; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */      (inlined)
.L47:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a15]8
.L709:

; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */      (inlined)
	jne	d15,#2,.L48
.L710:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
	mov	d0,#1

; ..\component\Os\Implementation\Os_Thread.h	   499        break;      (inlined)
	j	.L49

; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */      (inlined)
.L48:
	ld.a	a15,[a15]
.L570:
	ld.a	a15,[a15]

; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */      (inlined)
.L46:
	jnz.a	a15,.L47

; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;      (inlined)
.L49:
	jeq	d0,#0,.L50
.L457:
	mov	d2,#21
	ret
.L50:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a12]24
.L469:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	fcall	.cocofun_4
.L467:
	jeq	d15,#0,.L52
.L711:
	mov	d2,#12
	ret
.L52:
	mov	d0,#1

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a15,[a12]12
.L474:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mov.u	d9,#32768
.L712:
	mfcr	d8,#65068
.L584:
	and	d8,d9
.L713:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L475:
	st.d	[a15]24,e4
.L479:
	ld.d	e2,[a15]32
.L576:
	ld.d	e4,[a15]24
.L574:
	and	d2,d4
.L577:
	and	d3,d5
.L485:
	eq	d15,d2,#0
	and.eq	d15,d3,#0
.L714:
	cmovn	d0,d15,#0
.L715:
	jeq	d0,#0,.L55
.L490:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a15,[a12]20
.L495:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a2,[a12]12
.L575:

; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
	mov	d15,#2
.L500:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a15,[a15]28
.L501:
	st.b	[a2]40,d15
.L505:

; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   341  }
; ..\component\Os\Implementation\Os_Task.h	   342  
; ..\component\Os\Implementation\Os_Task.h	   343  
; ..\component\Os\Implementation\Os_Task.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   345   *  Os_TaskIsWaiting()
; ..\component\Os\Implementation\Os_Task.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32, OS_CODE, OS_ALWAYS_INLINE,                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   348  Os_TaskIsWaiting,
; ..\component\Os\Implementation\Os_Task.h	   349  (
; ..\component\Os\Implementation\Os_Task.h	   350    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   351  ))
; ..\component\Os\Implementation\Os_Task.h	   352  {
; ..\component\Os\Implementation\Os_Task.h	   353    return ((uint32)(Os_TaskGetDyn(Task)->State == WAITING));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   354  }
; ..\component\Os\Implementation\Os_Task.h	   355  
; ..\component\Os\Implementation\Os_Task.h	   356  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   357   *  Os_TaskIsSuspended
; ..\component\Os\Implementation\Os_Task.h	   358   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   359  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   360  Os_TaskIsSuspended,
; ..\component\Os\Implementation\Os_Task.h	   361  (
; ..\component\Os\Implementation\Os_Task.h	   362    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   363  ))
; ..\component\Os\Implementation\Os_Task.h	   364  {
; ..\component\Os\Implementation\Os_Task.h	   365    return ((Os_StdReturnType)(Os_TaskGetDyn(Task)->State == SUSPENDED));                                                 /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   366  }
; ..\component\Os\Implementation\Os_Task.h	   367  
; ..\component\Os\Implementation\Os_Task.h	   368  
; ..\component\Os\Implementation\Os_Task.h	   369  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   370   *  Os_TaskSwitch()
; ..\component\Os\Implementation\Os_Task.h	   371   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   372  /*!
; ..\component\Os\Implementation\Os_Task.h	   373   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   374   *
; ..\component\Os\Implementation\Os_Task.h	   375   *
; ..\component\Os\Implementation\Os_Task.h	   376   *
; ..\component\Os\Implementation\Os_Task.h	   377   *
; ..\component\Os\Implementation\Os_Task.h	   378   *
; ..\component\Os\Implementation\Os_Task.h	   379   */
; ..\component\Os\Implementation\Os_Task.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   381  Os_TaskSwitch,
; ..\component\Os\Implementation\Os_Task.h	   382  (
; ..\component\Os\Implementation\Os_Task.h	   383    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler,
; ..\component\Os\Implementation\Os_Task.h	   384    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CallerThread
; ..\component\Os\Implementation\Os_Task.h	   385  ))
; ..\component\Os\Implementation\Os_Task.h	   386  {
; ..\component\Os\Implementation\Os_Task.h	   387    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   388    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   389  
; ..\component\Os\Implementation\Os_Task.h	   390    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   391    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   392  
; ..\component\Os\Implementation\Os_Task.h	   393    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   394    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   395    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
; ..\component\Os\Implementation\Os_Task.h	   396  
; ..\component\Os\Implementation\Os_Task.h	   397    /* #30 Inform trace module. */
; ..\component\Os\Implementation\Os_Task.h	   398    Os_TraceThreadSwitch(Os_TaskGetDyn(Os_TaskThread2Task(CallerThread))->State,  Os_ThreadGetTrace(CallerThread),        /* SBSW_OS_TASK_TRACETHREADSWITCH_001 */ /* SBSW_OS_TASK_TASKGETDYN_003 */ /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   399                         Os_ThreadGetTrace(nextThread));                                                                  /* SBSW_OS_TASK_THREADGETTRACE_001 */
; ..\component\Os\Implementation\Os_Task.h	   400  
; ..\component\Os\Implementation\Os_Task.h	   401    /* #40 Perform thread switch. */
; ..\component\Os\Implementation\Os_Task.h	   402    Os_ThreadSwitch(CallerThread, nextThread, TRUE);                                                                      /* SBSW_OS_TASK_THREADSWITCH_001 */
; ..\component\Os\Implementation\Os_Task.h	   403  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Task.h	   404  
; ..\component\Os\Implementation\Os_Task.h	   405  
; ..\component\Os\Implementation\Os_Task.h	   406  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   407   *  Os_TaskResume()
; ..\component\Os\Implementation\Os_Task.h	   408   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   409  /*!
; ..\component\Os\Implementation\Os_Task.h	   410   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   411   *
; ..\component\Os\Implementation\Os_Task.h	   412   *
; ..\component\Os\Implementation\Os_Task.h	   413   *
; ..\component\Os\Implementation\Os_Task.h	   414   *
; ..\component\Os\Implementation\Os_Task.h	   415   *
; ..\component\Os\Implementation\Os_Task.h	   416   */
; ..\component\Os\Implementation\Os_Task.h	   417  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   418  Os_TaskResume,
; ..\component\Os\Implementation\Os_Task.h	   419  (
; ..\component\Os\Implementation\Os_Task.h	   420    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Task.h	   421  ))
; ..\component\Os\Implementation\Os_Task.h	   422  {
; ..\component\Os\Implementation\Os_Task.h	   423    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   424    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   425  
; ..\component\Os\Implementation\Os_Task.h	   426    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   427    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   428  
; ..\component\Os\Implementation\Os_Task.h	   429    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   430    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   431    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
; ..\component\Os\Implementation\Os_Task.h	   432  
; ..\component\Os\Implementation\Os_Task.h	   433    /* #30 Inform trace module. */
; ..\component\Os\Implementation\Os_Task.h	   434    Os_TraceThreadResetAndResume(Os_ThreadGetTrace(Os_CoreGetThread()), Os_ThreadGetTrace(nextThread));                   /* SBSW_OS_TASK_TRACETHREADRESETANDRESUME_001 */ /* SBSW_OS_TASK_THREADGETTRACE_002 */ /* SBSW_OS_TASK_THREADGETTRACE_001 */
; ..\component\Os\Implementation\Os_Task.h	   435  
; ..\component\Os\Implementation\Os_Task.h	   436    /* #40 Reset the current thread and resume the new one. */
; ..\component\Os\Implementation\Os_Task.h	   437    Os_ThreadResetAndResume(nextThread, TRUE);                                                                            /* SBSW_OS_TASK_THREADRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Task.h	   438  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Task.h	   439  
; ..\component\Os\Implementation\Os_Task.h	   440  
; ..\component\Os\Implementation\Os_Task.h	   441  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   442   *  Os_TaskSuicide()
; ..\component\Os\Implementation\Os_Task.h	   443   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   444  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   445  OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE, Os_TaskSuicide, (void))
; ..\component\Os\Implementation\Os_Task.h	   446  {
; ..\component\Os\Implementation\Os_Task.h	   447    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) currentTask;
; ..\component\Os\Implementation\Os_Task.h	   448  
; ..\component\Os\Implementation\Os_Task.h	   449    currentTask = Os_TaskThread2Task(Os_CoreGetThread());                                                                 /* SBSW_OS_TASK_TASKTHREAD2TASK_001 */
; ..\component\Os\Implementation\Os_Task.h	   450  
; ..\component\Os\Implementation\Os_Task.h	   451    Os_TaskResume(Os_TaskGetScheduler(currentTask));                                                                      /* SBSW_OS_TASK_TASKRESUME_001 */ /* SBSW_OS_TASK_TASKGETSCHEDULER_001 */
; ..\component\Os\Implementation\Os_Task.h	   452  }
; ..\component\Os\Implementation\Os_Task.h	   453  
; ..\component\Os\Implementation\Os_Task.h	   454  
; ..\component\Os\Implementation\Os_Task.h	   455  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   456   *  Os_TaskWait()
; ..\component\Os\Implementation\Os_Task.h	   457   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   458  /*!
; ..\component\Os\Implementation\Os_Task.h	   459   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   460   *
; ..\component\Os\Implementation\Os_Task.h	   461   *
; ..\component\Os\Implementation\Os_Task.h	   462   *
; ..\component\Os\Implementation\Os_Task.h	   463   *
; ..\component\Os\Implementation\Os_Task.h	   464   *
; ..\component\Os\Implementation\Os_Task.h	   465   */
; ..\component\Os\Implementation\Os_Task.h	   466  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   467  Os_TaskWait,
; ..\component\Os\Implementation\Os_Task.h	   468  (
; ..\component\Os\Implementation\Os_Task.h	   469    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   470  ))
; ..\component\Os\Implementation\Os_Task.h	   471  {
; ..\component\Os\Implementation\Os_Task.h	   472    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) scheduler = Os_TaskGetScheduler(Task);                           /* SBSW_OS_FC_PRECONDITION */
	mov.aa	a4,a15
	call	Os_SchedulerRemoveCurrentTask
.L506:
	mov.aa	a4,a15
	call	Os_SchedulerInternalSchedule
.L578:
	mov.aa	a13,a2
.L510:

; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    16   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    20   * \file       Os_Hal_Core_162_P.h
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    21   * \brief      Primitives function implementation for TriCore Processor Core TC1.6.2P
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    30  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    31  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    32  #ifndef OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    33  # define OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    34  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    40  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    42  # include "Os_Hal_Core_162_PInt.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    43  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    45  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    47  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    48  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    49   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    50   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    54   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    55   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    56  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    57  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    58  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    59   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    60   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    61  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    62  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    63   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    64   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    65  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    67  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    68   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    69   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    70  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    71  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    72  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    73  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    74  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    75  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    76   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    78   
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    80   *  Os_Hal_CoreStart()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    82  /*!
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    83   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    84   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    85   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    88   */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    89  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    90  Os_Hal_CoreStart,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    91  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    92    P2CONST(Os_Hal_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    93  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    95    /* #10 Write the foreign PC with the startup code symbol for core 1. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    96    *((volatile uint32*)Core->ProgramCounterRegister) = (uint32)(Core->StartLabelAddress);                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_PC */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    97  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    98    /* #20 Reset the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    99    *((volatile uint32*)Core->DBGSRRegister) = OS_HAL_DBGSR_START_CORE;                                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_DBGSR */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   100    
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   101    /* #30 Release the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   102    *((volatile uint32*)Core->SYSCON_CORECON_Register) &= ~OS_HAL_SYSCON_BHALT_MASK;                                               /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_SYSCON_CORECON */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   105  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   106  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   107   *  Os_Hal_InitializeAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   108   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   109  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   110  Os_Hal_InitializeAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   111  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   112    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   113  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   114  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   115    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   116    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   117    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   118    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   119    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   120    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   121  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   122  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   123  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   124  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   125   *  Os_Hal_InitializeAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   126   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   127  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   128  Os_Hal_InitializeAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   129  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   130    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   131  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   132  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   133    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   134    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   135    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   136    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   137    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   138    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   139  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   140  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   141  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   143   *  Os_Hal_InitializeAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   146  Os_Hal_InitializeAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   147  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   148    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   149  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   150  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   151    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   152    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   153    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   154    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   155    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   156    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   157  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   159  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   161   *  Os_Hal_ReadModifyAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   164  Os_Hal_ReadModifyAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   165  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   166    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   167    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   168    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   169  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   170  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   171    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   172    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   173      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   174        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   175        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   176      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   177        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   178        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   179      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   180        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   181        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   182      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   183        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   184        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   185      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   186        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   187        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   188      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   189        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   190        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   191      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   192        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   193    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   194  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   195  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   196  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   197  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   198   *  Os_Hal_ReadModifyAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   201  Os_Hal_ReadModifyAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   202  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   203    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   204    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   205    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   206  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   207  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   208    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   209    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   210      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   211        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   212        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   213      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   214        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   215        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   216      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   217        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   218        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   219      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   220        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   221        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   222      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   223        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   224        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   225      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   226        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   227        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   228      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   229        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   230    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   232  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   233  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   235   *  Os_Hal_ReadModifyAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   237  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   238  Os_Hal_ReadModifyAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   239  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   240    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   241    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   242    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   243  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   244  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   245    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   246    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   247      case 0:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   248        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   249        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   250      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   251        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   252        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   253      case 2:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   254        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   255        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   256      case 3:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   257        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   258        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   259      case 4:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   260        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   261        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   262      case 5:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   263        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   264        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   265      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   266        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   267    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   268  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   269  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   270  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   271   *  Os_Hal_ContextPreparePRS()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   272   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   273  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   274  Os_Hal_ContextPreparePRS,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   275  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   276    CONST(uint32, AUTOMATIC) PcxiAddr,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   277    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   278  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   279  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   280    *(uint32*)(PcxiAddr + OS_HAL_CSA_PSW_OFFSET) |= CurrentConfig->ProtectionSet;                                         /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   281  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   282  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   284   *  Os_Hal_CoreGetId()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CorePhysicalIdType, OS_CODE,                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   287  OS_ALWAYS_INLINE, Os_Hal_CoreGetId,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   288  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   289    void
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   290  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   291  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   292    return (Os_CorePhysicalIdType)Os_Hal_Mfcr(OS_HAL_CORE_ID_REGISTER);
	mfcr	d15,#65052
.L515:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
	fcall	.cocofun_2
.L514:

; ..\component\Os\Implementation\Os_Stack.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Stack.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Stack.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Stack.h	     6   *
; ..\component\Os\Implementation\Os_Stack.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Stack.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Stack.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Stack.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Stack.h	    14  /**
; ..\component\Os\Implementation\Os_Stack.h	    15   * \addtogroup Os_Stack
; ..\component\Os\Implementation\Os_Stack.h	    16   * \{
; ..\component\Os\Implementation\Os_Stack.h	    17   *
; ..\component\Os\Implementation\Os_Stack.h	    18   * \file
; ..\component\Os\Implementation\Os_Stack.h	    19   * \brief       External interface to \ref Os_Stack.
; ..\component\Os\Implementation\Os_Stack.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Stack.h	    21   *
; ..\component\Os\Implementation\Os_Stack.h	    22   *
; ..\component\Os\Implementation\Os_Stack.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Stack.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Stack.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    29  
; ..\component\Os\Implementation\Os_Stack.h	    30  #ifndef OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    31  # define OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Stack.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Stack.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Stack.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Stack.h	    38  
; ..\component\Os\Implementation\Os_Stack.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Stack.h	    40  # include "Os_Stack_Cfg.h"
; ..\component\Os\Implementation\Os_Stack.h	    41  # include "Os_StackInt.h"
; ..\component\Os\Implementation\Os_Stack.h	    42  
; ..\component\Os\Implementation\Os_Stack.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    44  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Stack.h	    45  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Stack.h	    46  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    47  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Stack.h	    48  
; ..\component\Os\Implementation\Os_Stack.h	    49  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    50  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    51  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Stack.h	    52  
; ..\component\Os\Implementation\Os_Stack.h	    53  
; ..\component\Os\Implementation\Os_Stack.h	    54  
; ..\component\Os\Implementation\Os_Stack.h	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    56   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Stack.h	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    58  
; ..\component\Os\Implementation\Os_Stack.h	    59  
; ..\component\Os\Implementation\Os_Stack.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    61   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Stack.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    63  
; ..\component\Os\Implementation\Os_Stack.h	    64  
; ..\component\Os\Implementation\Os_Stack.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    68  
; ..\component\Os\Implementation\Os_Stack.h	    69  
; ..\component\Os\Implementation\Os_Stack.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    73  
; ..\component\Os\Implementation\Os_Stack.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Stack.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Stack.h	    76  
; ..\component\Os\Implementation\Os_Stack.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Stack.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    81   *  Os_StackIsModuleEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    83  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    84  OS_ALWAYS_INLINE, Os_StackIsModuleEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    85  {
; ..\component\Os\Implementation\Os_Stack.h	    86    return (Os_StdReturnType)(OS_CFG_STACKMODULE == STD_ON);                                                              /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    87  }
; ..\component\Os\Implementation\Os_Stack.h	    88  
; ..\component\Os\Implementation\Os_Stack.h	    89  
; ..\component\Os\Implementation\Os_Stack.h	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    91   *  Os_StackIsMeasurementEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    94  OS_ALWAYS_INLINE, Os_StackIsMeasurementEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    95  {
; ..\component\Os\Implementation\Os_Stack.h	    96    return (Os_StdReturnType)(OS_CFG_STACKMEASUREMENT == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    97  }
; ..\component\Os\Implementation\Os_Stack.h	    98  
; ..\component\Os\Implementation\Os_Stack.h	    99  
; ..\component\Os\Implementation\Os_Stack.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   101   *  Os_StackIsMonitoringEnabled()
; ..\component\Os\Implementation\Os_Stack.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   104  OS_ALWAYS_INLINE, Os_StackIsMonitoringEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	   105  {
; ..\component\Os\Implementation\Os_Stack.h	   106    return (Os_StdReturnType)(OS_CFG_STACKMONITORING  == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   107  }
; ..\component\Os\Implementation\Os_Stack.h	   108  
; ..\component\Os\Implementation\Os_Stack.h	   109  
; ..\component\Os\Implementation\Os_Stack.h	   110  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   111   *  Os_StackInit()
; ..\component\Os\Implementation\Os_Stack.h	   112   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   113  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   114  Os_StackInit,
; ..\component\Os\Implementation\Os_Stack.h	   115  (
; ..\component\Os\Implementation\Os_Stack.h	   116    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack
; ..\component\Os\Implementation\Os_Stack.h	   117  ))
; ..\component\Os\Implementation\Os_Stack.h	   118  {
; ..\component\Os\Implementation\Os_Stack.h	   119  
; ..\component\Os\Implementation\Os_Stack.h	   120    if(Os_StackIsModuleEnabled() != 0u)                                                                                   /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   121    {
; ..\component\Os\Implementation\Os_Stack.h	   122      FUNC(void, OS_CODE) Os_StackInitInternal                                                                            /* PRQA S 3449, 3451 */ /* MD_Os_Rule8.5_3449, MD_Os_Rule8.5_3451 */
; ..\component\Os\Implementation\Os_Stack.h	   123      (P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack);
; ..\component\Os\Implementation\Os_Stack.h	   124  
; ..\component\Os\Implementation\Os_Stack.h	   125      Os_StackInitInternal(Stack);                                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Stack.h	   126    }
; ..\component\Os\Implementation\Os_Stack.h	   127  }
; ..\component\Os\Implementation\Os_Stack.h	   128  
; ..\component\Os\Implementation\Os_Stack.h	   129  
; ..\component\Os\Implementation\Os_Stack.h	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   131   *  Os_StackOverflowCheck()
; ..\component\Os\Implementation\Os_Stack.h	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   133  /*!
; ..\component\Os\Implementation\Os_Stack.h	   134   * Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   135   *
; ..\component\Os\Implementation\Os_Stack.h	   136   *
; ..\component\Os\Implementation\Os_Stack.h	   137   */
; ..\component\Os\Implementation\Os_Stack.h	   138  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   139  Os_StackOverflowCheck,( void ))
; ..\component\Os\Implementation\Os_Stack.h	   140  {
; ..\component\Os\Implementation\Os_Stack.h	   141    /* #10 Report protection error if the stack's last element is not equal to the fill pattern. */
; ..\component\Os\Implementation\Os_Stack.h	   142    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   143    {
; ..\component\Os\Implementation\Os_Stack.h	   144      P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) stack;
; ..\component\Os\Implementation\Os_Stack.h	   145      P2VAR(Os_Hal_StackType, AUTOMATIC, OS_VAR_NOINIT) stackEnd;
; ..\component\Os\Implementation\Os_Stack.h	   146  
; ..\component\Os\Implementation\Os_Stack.h	   147      stack = Os_CoreGetCurrentStack();
; ..\component\Os\Implementation\Os_Stack.h	   148      stackEnd = Os_Hal_StackEndGet(stack->LowAddress, stack->HighAddress);                                               /* SBSW_OS_ST_HAL_STACKENDGET_003 */
; ..\component\Os\Implementation\Os_Stack.h	   149  
; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))
	mov.u	d15,#43690
	ld.w	d0,[a15]
	addih	d15,d15,#43690
.L716:

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
	jeq	d15,d0,.L56
.L717:

; ..\component\Os\Implementation\Os_Stack.h	   151      {
; ..\component\Os\Implementation\Os_Stack.h	   152        /*! Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   153   *
; ..\component\Os\Implementation\Os_Stack.h	   154   *
; ..\component\Os\Implementation\Os_Stack.h	   155   *
; ..\component\Os\Implementation\Os_Stack.h	   156   *
; ..\component\Os\Implementation\Os_Stack.h	   157   *
; ..\component\Os\Implementation\Os_Stack.h	   158   *
; ..\component\Os\Implementation\Os_Stack.h	   159   *
; ..\component\Os\Implementation\Os_Stack.h	   160   *
; ..\component\Os\Implementation\Os_Stack.h	   161   *
; ..\component\Os\Implementation\Os_Stack.h	   162   *
; ..\component\Os\Implementation\Os_Stack.h	   163   *
; ..\component\Os\Implementation\Os_Stack.h	   164   *
; ..\component\Os\Implementation\Os_Stack.h	   165   *
; ..\component\Os\Implementation\Os_Stack.h	   166   *
; ..\component\Os\Implementation\Os_Stack.h	   167   *
; ..\component\Os\Implementation\Os_Stack.h	   168   *
; ..\component\Os\Implementation\Os_Stack.h	   169   *
; ..\component\Os\Implementation\Os_Stack.h	   170         */
; ..\component\Os\Implementation\Os_Stack.h	   171        *stackEnd = OS_HAL_STACK_FILL_PATTERN;                                                                            /* SBSW_OS_ST_HAL_STACKENDGET_002 */
	st.w	[a15],d15
.L718:

; ..\component\Os\Implementation\Os_Stack.h	   172  
; ..\component\Os\Implementation\Os_Stack.h	   173        Os_ErrProtectionError(OS_STATUS_STACKFAULT);
	mov	d4,#13
	call	Os_ErrProtectionError

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
.L56:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L583:
	and	d9,d15
.L521:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
	disable
.L719:

; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
	mfcr	d15,#65028
	or	d15,d15,#256

; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);      (inlined)
	mtcr  #0xFE04, d15
.L720:

; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
	isync
.L721:
	mov.d	d15,a13
.L579:

; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */      (inlined)
	
	mov.a  a8, d15
	
.L523:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L722:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L580:
	insert	d15,d15,#0,#15,#1
.L581:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d9
.L582:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L723:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L516:

; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   795  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   796  
; ..\component\Os\Implementation\Os_Thread.h	   797  
; ..\component\Os\Implementation\Os_Thread.h	   798  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   799   *  Os_ThreadStartFirst()
; ..\component\Os\Implementation\Os_Thread.h	   800   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   801  /*!
; ..\component\Os\Implementation\Os_Thread.h	   802   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   803   *
; ..\component\Os\Implementation\Os_Thread.h	   804   *
; ..\component\Os\Implementation\Os_Thread.h	   805   *
; ..\component\Os\Implementation\Os_Thread.h	   806   *
; ..\component\Os\Implementation\Os_Thread.h	   807   *
; ..\component\Os\Implementation\Os_Thread.h	   808   *
; ..\component\Os\Implementation\Os_Thread.h	   809   *
; ..\component\Os\Implementation\Os_Thread.h	   810   *
; ..\component\Os\Implementation\Os_Thread.h	   811   */
; ..\component\Os\Implementation\Os_Thread.h	   812  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   813  Os_ThreadStartFirst,
; ..\component\Os\Implementation\Os_Thread.h	   814  (
; ..\component\Os\Implementation\Os_Thread.h	   815    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   816    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   817  ))
; ..\component\Os\Implementation\Os_Thread.h	   818  {
; ..\component\Os\Implementation\Os_Thread.h	   819    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   820    P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   821    P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   822  
; ..\component\Os\Implementation\Os_Thread.h	   823    configTp = Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(Next));                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   824    nextTp = Os_ThreadGetTpConfig(Next);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   825    currentTp = Os_ThreadGetTpConfig(Os_CoreGetThread());                                                                 /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   826  
; ..\component\Os\Implementation\Os_Thread.h	   827    /* #10 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   828    Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                               /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   829  
; ..\component\Os\Implementation\Os_Thread.h	   830    /* #20 Set memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   831    Os_MpSwitchTo(Next->Dyn->MpAccessRights);                                                                             /* SBSW_OS_TRD_MPSWITCHTO_001 */
; ..\component\Os\Implementation\Os_Thread.h	   832  
; ..\component\Os\Implementation\Os_Thread.h	   833    /* #25 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   834    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   835  
; ..\component\Os\Implementation\Os_Thread.h	   836    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   837    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   838  
; ..\component\Os\Implementation\Os_Thread.h	   839    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   840    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   841  
; ..\component\Os\Implementation\Os_Thread.h	   842    /* #50 Update the Msr of the nest thread. */
; ..\component\Os\Implementation\Os_Thread.h	   843    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   844  
; ..\component\Os\Implementation\Os_Thread.h	   845    /* #60 Resume the hardware context of the first thread. */
; ..\component\Os\Implementation\Os_Thread.h	   846    Os_Hal_ContextFirstResume(Next->Context); /* function never returns! */                                               /* SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   847  
; ..\component\Os\Implementation\Os_Thread.h	   848    /* Never reached. */
; ..\component\Os\Implementation\Os_Thread.h	   849    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   850  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   851  
; ..\component\Os\Implementation\Os_Thread.h	   852  
; ..\component\Os\Implementation\Os_Thread.h	   853  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   854   *  Os_ThreadCleanupAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   855   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   856  /*!
; ..\component\Os\Implementation\Os_Thread.h	   857   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   858   *
; ..\component\Os\Implementation\Os_Thread.h	   859   *
; ..\component\Os\Implementation\Os_Thread.h	   860   *
; ..\component\Os\Implementation\Os_Thread.h	   861   *
; ..\component\Os\Implementation\Os_Thread.h	   862   *
; ..\component\Os\Implementation\Os_Thread.h	   863   *
; ..\component\Os\Implementation\Os_Thread.h	   864   *
; ..\component\Os\Implementation\Os_Thread.h	   865   *
; ..\component\Os\Implementation\Os_Thread.h	   866   *
; ..\component\Os\Implementation\Os_Thread.h	   867   *
; ..\component\Os\Implementation\Os_Thread.h	   868   *
; ..\component\Os\Implementation\Os_Thread.h	   869   */
; ..\component\Os\Implementation\Os_Thread.h	   870  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   871  Os_ThreadCleanupAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   872  (
; ..\component\Os\Implementation\Os_Thread.h	   873    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   874    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   875  ))
; ..\component\Os\Implementation\Os_Thread.h	   876  {
; ..\component\Os\Implementation\Os_Thread.h	   877    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   878  
; ..\component\Os\Implementation\Os_Thread.h	   879    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   880  
; ..\component\Os\Implementation\Os_Thread.h	   881    /* Check that the function is not called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   882    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) == 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   883  
; ..\component\Os\Implementation\Os_Thread.h	   884    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   885    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   886  
; ..\component\Os\Implementation\Os_Thread.h	   887    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   888    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   889  
; ..\component\Os\Implementation\Os_Thread.h	   890    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   891    {
; ..\component\Os\Implementation\Os_Thread.h	   892      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   893      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   894      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   895      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   896  
; ..\component\Os\Implementation\Os_Thread.h	   897      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   898      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   899      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   900      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   901      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   902    }
; ..\component\Os\Implementation\Os_Thread.h	   903  
; ..\component\Os\Implementation\Os_Thread.h	   904    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   905    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   906  
; ..\component\Os\Implementation\Os_Thread.h	   907    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   908    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   909  
; ..\component\Os\Implementation\Os_Thread.h	   910    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   911    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   912  
; ..\component\Os\Implementation\Os_Thread.h	   913    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   914    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   915  
; ..\component\Os\Implementation\Os_Thread.h	   916    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   917    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   918  
; ..\component\Os\Implementation\Os_Thread.h	   919    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   920    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   921  
; ..\component\Os\Implementation\Os_Thread.h	   922    /* #80 Cleanup the current hardware context and resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   923    Os_Hal_ContextReturn(current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTRETURN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   924  
; ..\component\Os\Implementation\Os_Thread.h	   925    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   926    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   927  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   928  
; ..\component\Os\Implementation\Os_Thread.h	   929  
; ..\component\Os\Implementation\Os_Thread.h	   930  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   931   *  Os_ThreadKill()
; ..\component\Os\Implementation\Os_Thread.h	   932   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   933  /*!
; ..\component\Os\Implementation\Os_Thread.h	   934   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   935   *
; ..\component\Os\Implementation\Os_Thread.h	   936   *
; ..\component\Os\Implementation\Os_Thread.h	   937   *
; ..\component\Os\Implementation\Os_Thread.h	   938   *
; ..\component\Os\Implementation\Os_Thread.h	   939   *
; ..\component\Os\Implementation\Os_Thread.h	   940   *
; ..\component\Os\Implementation\Os_Thread.h	   941   *
; ..\component\Os\Implementation\Os_Thread.h	   942   *
; ..\component\Os\Implementation\Os_Thread.h	   943   *
; ..\component\Os\Implementation\Os_Thread.h	   944   *
; ..\component\Os\Implementation\Os_Thread.h	   945   *
; ..\component\Os\Implementation\Os_Thread.h	   946   *
; ..\component\Os\Implementation\Os_Thread.h	   947   *
; ..\component\Os\Implementation\Os_Thread.h	   948   */
; ..\component\Os\Implementation\Os_Thread.h	   949  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   950  Os_ThreadKill,
; ..\component\Os\Implementation\Os_Thread.h	   951  (
; ..\component\Os\Implementation\Os_Thread.h	   952    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   953  ))
; ..\component\Os\Implementation\Os_Thread.h	   954  {
; ..\component\Os\Implementation\Os_Thread.h	   955    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   956    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   957  
; ..\component\Os\Implementation\Os_Thread.h	   958    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   959    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   960  
; ..\component\Os\Implementation\Os_Thread.h	   961    /* #30 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   962    Os_ServiceCallForceRelease(&(Thread->Dyn->ServiceCalls));                                                             /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   963  
; ..\component\Os\Implementation\Os_Thread.h	   964    /* #40 Release all locks and resources, which are hold by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   965    Os_ThreadLocksForceRelease(Thread);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   966  
; ..\component\Os\Implementation\Os_Thread.h	   967    /* #50 Reset timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   968    {
; ..\component\Os\Implementation\Os_Thread.h	   969      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   970  
; ..\component\Os\Implementation\Os_Thread.h	   971      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   972  
; ..\component\Os\Implementation\Os_Thread.h	   973      Os_TpThreadKill(currentTp);                                                                                         /* SBSW_OS_TRD_TPTHREADKILL_001 */
; ..\component\Os\Implementation\Os_Thread.h	   974    }
; ..\component\Os\Implementation\Os_Thread.h	   975  
; ..\component\Os\Implementation\Os_Thread.h	   976    /* #60 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   977    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   978  
; ..\component\Os\Implementation\Os_Thread.h	   979  
; ..\component\Os\Implementation\Os_Thread.h	   980    /* #70 If the given thread is not the current thread: */
; ..\component\Os\Implementation\Os_Thread.h	   981    {
; ..\component\Os\Implementation\Os_Thread.h	   982      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   983  
; ..\component\Os\Implementation\Os_Thread.h	   984      current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   985  
; ..\component\Os\Implementation\Os_Thread.h	   986      if(OS_LIKELY(Thread != current))
; ..\component\Os\Implementation\Os_Thread.h	   987      {
; ..\component\Os\Implementation\Os_Thread.h	   988        /* #80 If the given thread is a task: */
; ..\component\Os\Implementation\Os_Thread.h	   989        if(Os_ThreadIsTask(Thread) != 0u)                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   990        {
; ..\component\Os\Implementation\Os_Thread.h	   991          /* #90 Reset its hardware context. */
; ..\component\Os\Implementation\Os_Thread.h	   992          Os_Hal_ContextReset(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTRESET_001 */
; ..\component\Os\Implementation\Os_Thread.h	   993          Os_ThreadInitFpuContext(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   994        }
; ..\component\Os\Implementation\Os_Thread.h	   995        /* #100 Otherwise: */
; ..\component\Os\Implementation\Os_Thread.h	   996        else
; ..\component\Os\Implementation\Os_Thread.h	   997        {
; ..\component\Os\Implementation\Os_Thread.h	   998          Os_Hal_IntStateType currentIntState;
; ..\component\Os\Implementation\Os_Thread.h	   999  
; ..\component\Os\Implementation\Os_Thread.h	  1000          /* #110 Abort the threads context. Execute the return function the next time it will be resumed. */
; ..\component\Os\Implementation\Os_Thread.h	  1001          Os_Hal_ContextAbort(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTABORT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1002  
; ..\component\Os\Implementation\Os_Thread.h	  1003          /* #120 Set the interrupt state for the context used after the abort. */
; ..\component\Os\Implementation\Os_Thread.h	  1004          Os_Hal_IntGetInterruptState(&currentIntState);                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1005          Os_Hal_ContextSetInterruptState(Thread->Context, &currentIntState);                                             /* SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1006        }
; ..\component\Os\Implementation\Os_Thread.h	  1007      }
; ..\component\Os\Implementation\Os_Thread.h	  1008    }
; ..\component\Os\Implementation\Os_Thread.h	  1009  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1010  
; ..\component\Os\Implementation\Os_Thread.h	  1011  
; ..\component\Os\Implementation\Os_Thread.h	  1012  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1013   *  Os_ThreadSwitch()
; ..\component\Os\Implementation\Os_Thread.h	  1014   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1015  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1016   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1017   *
; ..\component\Os\Implementation\Os_Thread.h	  1018   *
; ..\component\Os\Implementation\Os_Thread.h	  1019   *
; ..\component\Os\Implementation\Os_Thread.h	  1020   *
; ..\component\Os\Implementation\Os_Thread.h	  1021   *
; ..\component\Os\Implementation\Os_Thread.h	  1022   *
; ..\component\Os\Implementation\Os_Thread.h	  1023   *
; ..\component\Os\Implementation\Os_Thread.h	  1024   *
; ..\component\Os\Implementation\Os_Thread.h	  1025   *
; ..\component\Os\Implementation\Os_Thread.h	  1026   *
; ..\component\Os\Implementation\Os_Thread.h	  1027   *
; ..\component\Os\Implementation\Os_Thread.h	  1028   */
; ..\component\Os\Implementation\Os_Thread.h	  1029  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1030  Os_ThreadSwitch,
; ..\component\Os\Implementation\Os_Thread.h	  1031  (
; ..\component\Os\Implementation\Os_Thread.h	  1032    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1033    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1034    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1035  ))
; ..\component\Os\Implementation\Os_Thread.h	  1036  {
; ..\component\Os\Implementation\Os_Thread.h	  1037    /* #10 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	  1038    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1039  
; ..\component\Os\Implementation\Os_Thread.h	  1040    /* #15 Store FPU context of current thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1041    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1042  
; ..\component\Os\Implementation\Os_Thread.h	  1043    /* #20 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1044    {
; ..\component\Os\Implementation\Os_Thread.h	  1045      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1046      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1047      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1048      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1049  
; ..\component\Os\Implementation\Os_Thread.h	  1050      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1051      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1052      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1053      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1054      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1055    }
; ..\component\Os\Implementation\Os_Thread.h	  1056  
; ..\component\Os\Implementation\Os_Thread.h	  1057    /* #30 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1058    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1059  
; ..\component\Os\Implementation\Os_Thread.h	  1060    /* #35 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1061    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1062  
; ..\component\Os\Implementation\Os_Thread.h	  1063    /* #40 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1064    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1065  
; ..\component\Os\Implementation\Os_Thread.h	  1066    /* #45 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1067    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1068  
; ..\component\Os\Implementation\Os_Thread.h	  1069    /* #50 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1070    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1071  
; ..\component\Os\Implementation\Os_Thread.h	  1072    /* #60 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1073    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1074  
; ..\component\Os\Implementation\Os_Thread.h	  1075    /* #70 Perform a hardware context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1076    Os_Hal_ContextSwitch(Current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1077  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1078  
; ..\component\Os\Implementation\Os_Thread.h	  1079  
; ..\component\Os\Implementation\Os_Thread.h	  1080  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1081   *  Os_ThreadSuspendAndStart()
; ..\component\Os\Implementation\Os_Thread.h	  1082   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1083  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1084   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1085   *
; ..\component\Os\Implementation\Os_Thread.h	  1086   *
; ..\component\Os\Implementation\Os_Thread.h	  1087   *
; ..\component\Os\Implementation\Os_Thread.h	  1088   *
; ..\component\Os\Implementation\Os_Thread.h	  1089   *
; ..\component\Os\Implementation\Os_Thread.h	  1090   *
; ..\component\Os\Implementation\Os_Thread.h	  1091   *
; ..\component\Os\Implementation\Os_Thread.h	  1092   *
; ..\component\Os\Implementation\Os_Thread.h	  1093   *
; ..\component\Os\Implementation\Os_Thread.h	  1094   *
; ..\component\Os\Implementation\Os_Thread.h	  1095   *
; ..\component\Os\Implementation\Os_Thread.h	  1096   *
; ..\component\Os\Implementation\Os_Thread.h	  1097   *
; ..\component\Os\Implementation\Os_Thread.h	  1098   */
; ..\component\Os\Implementation\Os_Thread.h	  1099  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1100  Os_ThreadSuspendAndStart,
; ..\component\Os\Implementation\Os_Thread.h	  1101  (
; ..\component\Os\Implementation\Os_Thread.h	  1102    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1103    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1104    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1105  ))
; ..\component\Os\Implementation\Os_Thread.h	  1106  {
; ..\component\Os\Implementation\Os_Thread.h	  1107    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1108  
; ..\component\Os\Implementation\Os_Thread.h	  1109    /* #10 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1110    {
; ..\component\Os\Implementation\Os_Thread.h	  1111      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1112      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1113      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1114      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1115  
; ..\component\Os\Implementation\Os_Thread.h	  1116      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1117      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1118      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1119      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1120      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1121    }
; ..\component\Os\Implementation\Os_Thread.h	  1122  
; ..\component\Os\Implementation\Os_Thread.h	  1123    /* #15 Store FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1124    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1125  
; ..\component\Os\Implementation\Os_Thread.h	  1126    /* #20 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1127    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1128  
; ..\component\Os\Implementation\Os_Thread.h	  1129    /* #25 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1130    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1131  
; ..\component\Os\Implementation\Os_Thread.h	  1132    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1133    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1134  
; ..\component\Os\Implementation\Os_Thread.h	  1135    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1136    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1137  
; ..\component\Os\Implementation\Os_Thread.h	  1138    /* #50 Prepare context of next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1139    Os_Hal_ContextInit(Next->ContextConfig, Next->Context);                                                               /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1140  
; ..\component\Os\Implementation\Os_Thread.h	  1141    /* #60 Setup FPU for next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1142    Os_ThreadInitFpu(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1143  
; ..\component\Os\Implementation\Os_Thread.h	  1144    /* #70 Set parameter for the entry function, currently only used for hooks (hook thread pointer). */
; ..\component\Os\Implementation\Os_Thread.h	  1145    Os_Hal_ContextSetParameter(Next->Context, Next);                                                                      /* PRQA S 0315 */ /* MD_Os_Dir1.1_0315 */ /* SBSW_OS_TRD_HAL_CONTEXTSETPARAMETER_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1146  
; ..\component\Os\Implementation\Os_Thread.h	  1147    /* #80 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1148    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1149  
; ..\component\Os\Implementation\Os_Thread.h	  1150    /* #90 Perform context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1151    Os_Hal_ContextCallOnStack(Current->Context, Next->Context);                                                           /* SBSW_OS_TRD_HAL_CONTEXTCALLONSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1152  
; ..\component\Os\Implementation\Os_Thread.h	  1153    /* #100 Restore FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1154    Os_ThreadRestoreFpuContext(Current);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1155  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1156  
; ..\component\Os\Implementation\Os_Thread.h	  1157  
; ..\component\Os\Implementation\Os_Thread.h	  1158  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1159   *  Os_ThreadGetAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1160   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1161  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1162  P2CONST(Os_AccessCheckConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1163  Os_ThreadGetAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1164  (
; ..\component\Os\Implementation\Os_Thread.h	  1165    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1166  ))
; ..\component\Os\Implementation\Os_Thread.h	  1167  {
; ..\component\Os\Implementation\Os_Thread.h	  1168    return Thread->AccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1169  }
; ..\component\Os\Implementation\Os_Thread.h	  1170  
; ..\component\Os\Implementation\Os_Thread.h	  1171  
; ..\component\Os\Implementation\Os_Thread.h	  1172  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1173   *  Os_ThreadGetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1174   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1175  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1176  P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1177  Os_ThreadGetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1178  (
; ..\component\Os\Implementation\Os_Thread.h	  1179    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1180  ))
; ..\component\Os\Implementation\Os_Thread.h	  1181  {
; ..\component\Os\Implementation\Os_Thread.h	  1182    return Thread->Dyn->MpAccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1183  }
; ..\component\Os\Implementation\Os_Thread.h	  1184  
; ..\component\Os\Implementation\Os_Thread.h	  1185  
; ..\component\Os\Implementation\Os_Thread.h	  1186  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1187   *  Os_ThreadSetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1188   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1189  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1190  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1191  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1192  (
; ..\component\Os\Implementation\Os_Thread.h	  1193    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1194    P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST) AccessRights
; ..\component\Os\Implementation\Os_Thread.h	  1195  ))
; ..\component\Os\Implementation\Os_Thread.h	  1196  {
; ..\component\Os\Implementation\Os_Thread.h	  1197    Thread->Dyn->MpAccessRights = AccessRights;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1198  }
; ..\component\Os\Implementation\Os_Thread.h	  1199  
; ..\component\Os\Implementation\Os_Thread.h	  1200  
; ..\component\Os\Implementation\Os_Thread.h	  1201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1202   *  Os_ThreadSetInterruptState()
; ..\component\Os\Implementation\Os_Thread.h	  1203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1204  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1205  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1206  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetInterruptState,
; ..\component\Os\Implementation\Os_Thread.h	  1207  (
; ..\component\Os\Implementation\Os_Thread.h	  1208    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1209    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_CONST) InterruptState
; ..\component\Os\Implementation\Os_Thread.h	  1210  ))
; ..\component\Os\Implementation\Os_Thread.h	  1211  {
; ..\component\Os\Implementation\Os_Thread.h	  1212    Os_Hal_ContextSetInterruptState(Thread->Context, InterruptState);                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1213  }
; ..\component\Os\Implementation\Os_Thread.h	  1214  
; ..\component\Os\Implementation\Os_Thread.h	  1215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1216   *  Os_ThreadCallPreThreadHook()
; ..\component\Os\Implementation\Os_Thread.h	  1217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1218  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1220   *
; ..\component\Os\Implementation\Os_Thread.h	  1221   *
; ..\component\Os\Implementation\Os_Thread.h	  1222   */
; ..\component\Os\Implementation\Os_Thread.h	  1223  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1224  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1225  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCallPreThreadHook,
; ..\component\Os\Implementation\Os_Thread.h	  1226  (
; ..\component\Os\Implementation\Os_Thread.h	  1227    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1228    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1229  ))
; ..\component\Os\Implementation\Os_Thread.h	  1230  {
; ..\component\Os\Implementation\Os_Thread.h	  1231    /* #10 Call the PreThreadHook if requested and configured. */
; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))
	ld.a	a15,[a13]52
.L724:

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
	jz.a	a15,.L57
.L725:

; ..\component\Os\Implementation\Os_Thread.h	  1233    {
; ..\component\Os\Implementation\Os_Thread.h	  1234      Thread->PreThreadHook();                                                                                            /* SBSW_OS_TRD_PRETHREAD_CALLBACK_001 */
	calli	a15

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
.L57:
	fcall	.cocofun_1
.L528:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
	mfcr	d0,#65028
.L726:
	fcall	.cocofun_5
.L531:
	call	Os_Hal_ContextSwitch
.L55:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L727:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L728:
	insert	d15,d15,#0,#15,#1
.L585:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d8
.L586:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L729:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L535:
	mov	d2,#0
	ret
.L427:
	
__Os_Api_WaitEvent_function_end:
	.size	Os_Api_WaitEvent,__Os_Api_WaitEvent_function_end-Os_Api_WaitEvent
.L131:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_EventSetLocal')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_EventSetLocal

; ..\component\Os\Implementation\Os_Event.c	   696  
; ..\component\Os\Implementation\Os_Event.c	   697  
; ..\component\Os\Implementation\Os_Event.c	   698  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   699   *  Os_EventSetLocal()
; ..\component\Os\Implementation\Os_Event.c	   700   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   701  /*!
; ..\component\Os\Implementation\Os_Event.c	   702   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   703   *
; ..\component\Os\Implementation\Os_Event.c	   704   *
; ..\component\Os\Implementation\Os_Event.c	   705   *
; ..\component\Os\Implementation\Os_Event.c	   706   *
; ..\component\Os\Implementation\Os_Event.c	   707   *
; ..\component\Os\Implementation\Os_Event.c	   708   *
; ..\component\Os\Implementation\Os_Event.c	   709   */
; ..\component\Os\Implementation\Os_Event.c	   710  FUNC(Os_StatusType, OS_CODE) Os_EventSetLocal
; Function Os_EventSetLocal
.L88:
Os_EventSetLocal:	.type	func
	mov.aa	a5,a4
.L167:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mfcr	d8,#65068
.L616:
	mov.u	d15,#32768
.L588:
	and	d8,d15
.L617:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L168:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a15,[a5]12
.L618:

; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
	ld.bu	d15,[a15]40
.L619:

; ..\component\Os\Implementation\Os_Event.c	   711  (
; ..\component\Os\Implementation\Os_Event.c	   712    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Event.c	   713    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   714  )
; ..\component\Os\Implementation\Os_Event.c	   715  {
; ..\component\Os\Implementation\Os_Event.c	   716    Os_IntStateType intState;
; ..\component\Os\Implementation\Os_Event.c	   717    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   718    P2VAR(Os_EventStateType, AUTOMATIC, OS_CONST) event;
; ..\component\Os\Implementation\Os_Event.c	   719    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) thread;
; ..\component\Os\Implementation\Os_Event.c	   720    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) ownerApplication;
; ..\component\Os\Implementation\Os_Event.c	   721  
; ..\component\Os\Implementation\Os_Event.c	   722    /* #10 If the module is not enabled: KernelPanic. */
; ..\component\Os\Implementation\Os_Event.c	   723    if(Os_EventIsEnabled() == 0u)                                                                                         /* COV_OS_INVSTATE */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   724    {
; ..\component\Os\Implementation\Os_Event.c	   725      Os_ErrKernelPanic();                                                                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   726    }
; ..\component\Os\Implementation\Os_Event.c	   727  
; ..\component\Os\Implementation\Os_Event.c	   728    thread = Os_TaskGetThread(Task);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   729    ownerApplication = Os_ThreadGetOwnerApplication(thread);                                                              /* SBSW_OS_EV_THREADGETOWNERAPPLICATION_002 */
; ..\component\Os\Implementation\Os_Event.c	   730  
; ..\component\Os\Implementation\Os_Event.c	   731    Os_IntSuspend(&intState);                                                                                             /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   732  
; ..\component\Os\Implementation\Os_Event.c	   733    /* #20 Check whether the owner application of the given task is accessible. */
; ..\component\Os\Implementation\Os_Event.c	   734    if(OS_UNLIKELY(Os_AppCheckIsAccessible(ownerApplication) == OS_CHECK_FAILED))                                         /* SBSW_OS_EV_APPCHECKISACCESSIBLE_001 */
; ..\component\Os\Implementation\Os_Event.c	   735    {
; ..\component\Os\Implementation\Os_Event.c	   736      status = OS_STATUS_NOTACCESSIBLE_1;
; ..\component\Os\Implementation\Os_Event.c	   737    }
; ..\component\Os\Implementation\Os_Event.c	   738    else if(OS_UNLIKELY(Os_TaskCheckIsNotSuspended(Task) == OS_CHECK_FAILED))                                             /* SBSW_OS_FC_PRECONDITION */
	jne	d15,#3,.L59
.L620:

; ..\component\Os\Implementation\Os_Event.c	   739    {
; ..\component\Os\Implementation\Os_Event.c	   740      status = OS_STATUS_STATE_1;
	mov	d2,#263
	j	.L60
.L59:
	ld.d	e0,[a15]32
.L621:
	or	d0,d4
	or	d1,d5
	st.d	[a15]32,e0
.L177:
	ld.d	e0,[a15]32
.L589:
	ld.d	e2,[a15]24
.L184:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a15,[a5]12
.L189:
	and	d0,d2
.L590:
	and	d1,d3
.L190:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   341  }
; ..\component\Os\Implementation\Os_Task.h	   342  
; ..\component\Os\Implementation\Os_Task.h	   343  
; ..\component\Os\Implementation\Os_Task.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   345   *  Os_TaskIsWaiting()
; ..\component\Os\Implementation\Os_Task.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32, OS_CODE, OS_ALWAYS_INLINE,                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   348  Os_TaskIsWaiting,
; ..\component\Os\Implementation\Os_Task.h	   349  (
; ..\component\Os\Implementation\Os_Task.h	   350    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   351  ))
; ..\component\Os\Implementation\Os_Task.h	   352  {
; ..\component\Os\Implementation\Os_Task.h	   353    return ((uint32)(Os_TaskGetDyn(Task)->State == WAITING));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
	ld.bu	d15,[+a15]40
.L622:

; ..\component\Os\Implementation\Os_Event.c	   741    }
; ..\component\Os\Implementation\Os_Event.c	   742    else
; ..\component\Os\Implementation\Os_Event.c	   743    {
; ..\component\Os\Implementation\Os_Event.c	   744      EventMaskType waitEventsTriggerd;
; ..\component\Os\Implementation\Os_Event.c	   745  
; ..\component\Os\Implementation\Os_Event.c	   746      event = Os_TaskGetEvent(Task);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   747  
; ..\component\Os\Implementation\Os_Event.c	   748      /* #30 Set task's trigger event mask according to given mask. */
; ..\component\Os\Implementation\Os_Event.c	   749      Os_EventTriggerSet(event, Mask);                                                                                    /* SBSW_OS_EV_EVENTTRIGGERSET_001 */
; ..\component\Os\Implementation\Os_Event.c	   750  
; ..\component\Os\Implementation\Os_Event.c	   751      waitEventsTriggerd = Os_EventWaitEventTriggered(event);                                                             /* SBSW_OS_EV_EVENTWAITEVENTTRIGGERED_001 */
; ..\component\Os\Implementation\Os_Event.c	   752  
; ..\component\Os\Implementation\Os_Event.c	   753      /* #40 If the task has been WAITING for one of the events: resume the task from waiting state. */
; ..\component\Os\Implementation\Os_Event.c	   754      if( (Os_TaskIsWaiting(Task) != 0u) && (waitEventsTriggerd != 0u) )                                                  /* SBSW_OS_FC_PRECONDITION */
	jne	d15,#2,.L61
.L623:
	eq	d15,d0,#0
	and.eq	d15,d1,#0
	jne	d15,#0,.L62
.L194:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
	mov	d15,#1
	st.b	[a15],d15
.L199:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a15,[a5]20
.L624:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a4,[a15]28
.L587:

; ..\component\Os\Implementation\Os_Event.c	   755      {
; ..\component\Os\Implementation\Os_Event.c	   756        Os_TaskLeaveWaitingState(Task);                                                                                   /* SBSW_OS_FC_PRECONDITION */
	call	Os_SchedulerInsert
.L62:
.L61:

; ..\component\Os\Implementation\Os_Event.c	   757  
; ..\component\Os\Implementation\Os_Event.c	   758        /* #50 Inform the trace object about this */
; ..\component\Os\Implementation\Os_Event.c	   759        Os_TraceTaskSetEvent(Os_ThreadGetTrace(thread), Mask, TRUE);                                                      /* SBSW_OS_EV_THREADGETTRACE_001 */ /* SBSW_OS_EV_THREADSETTRACE_001 */
; ..\component\Os\Implementation\Os_Event.c	   760      }
; ..\component\Os\Implementation\Os_Event.c	   761      else
; ..\component\Os\Implementation\Os_Event.c	   762      {
; ..\component\Os\Implementation\Os_Event.c	   763        Os_TraceTaskSetEvent(Os_ThreadGetTrace(thread), Mask, FALSE);                                                     /* SBSW_OS_EV_THREADGETTRACE_001 */ /* SBSW_OS_EV_THREADSETTRACE_001 */
; ..\component\Os\Implementation\Os_Event.c	   764      }
; ..\component\Os\Implementation\Os_Event.c	   765  
; ..\component\Os\Implementation\Os_Event.c	   766      status = OS_STATUS_OK;
	mov	d2,#0
.L60:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L625:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L626:
	insert	d15,d15,#0,#15,#1
.L591:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d8
.L592:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L627:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L206:

; ..\component\Os\Implementation\Os_Event.c	   767    }
; ..\component\Os\Implementation\Os_Event.c	   768  
; ..\component\Os\Implementation\Os_Event.c	   769    Os_IntResume(&intState);                                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Event.c	   770  
; ..\component\Os\Implementation\Os_Event.c	   771    return status;
; ..\component\Os\Implementation\Os_Event.c	   772  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L158:
	
__Os_EventSetLocal_function_end:
	.size	Os_EventSetLocal,__Os_EventSetLocal_function_end-Os_EventSetLocal
.L101:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_EventSetInternal')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_EventSetInternal

; ..\component\Os\Implementation\Os_Event.c	   773  
; ..\component\Os\Implementation\Os_Event.c	   774  
; ..\component\Os\Implementation\Os_Event.c	   775  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   776   *  Os_EventSetInternal()
; ..\component\Os\Implementation\Os_Event.c	   777   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   778  /*!
; ..\component\Os\Implementation\Os_Event.c	   779   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   780   *
; ..\component\Os\Implementation\Os_Event.c	   781   *
; ..\component\Os\Implementation\Os_Event.c	   782   *
; ..\component\Os\Implementation\Os_Event.c	   783   *
; ..\component\Os\Implementation\Os_Event.c	   784   *
; ..\component\Os\Implementation\Os_Event.c	   785   *
; ..\component\Os\Implementation\Os_Event.c	   786   */
; ..\component\Os\Implementation\Os_Event.c	   787  FUNC(Os_StatusType, OS_CODE) Os_EventSetInternal
; Function Os_EventSetInternal
.L90:
Os_EventSetInternal:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L220:

; ..\component\Os\Implementation\Os_Event.c	   788  (
; ..\component\Os\Implementation\Os_Event.c	   789    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Event.c	   790    EventMaskType Mask
; ..\component\Os\Implementation\Os_Event.c	   791  )
; ..\component\Os\Implementation\Os_Event.c	   792  {
; ..\component\Os\Implementation\Os_Event.c	   793    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   794  
; ..\component\Os\Implementation\Os_Event.c	   795    /* #10 If the module is not enabled: KernelPanic. */
; ..\component\Os\Implementation\Os_Event.c	   796    if(Os_EventIsEnabled() == 0u)                                                                                         /* COV_OS_INVSTATE */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   797    {
; ..\component\Os\Implementation\Os_Event.c	   798      Os_ErrKernelPanic();                                                                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   799    }
; ..\component\Os\Implementation\Os_Event.c	   800  
; ..\component\Os\Implementation\Os_Event.c	   801    /* #20 If the given task belongs to the local core, */
; ..\component\Os\Implementation\Os_Event.c	   802    if(OS_LIKELY(Os_TaskIsCoreLocal(Task) != 0u))                                                                         /* SBSW_OS_FC_PRECONDITION */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */ /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Event.c	   803    {
; ..\component\Os\Implementation\Os_Event.c	   804      /* #30 Call local function to set the event. */
; ..\component\Os\Implementation\Os_Event.c	   805      status = Os_EventSetLocal(Task, Mask);                                                                              /* SBSW_OS_EV_EVENTSETLOCAL_001 */
	j	Os_EventSetLocal
.L215:
	
__Os_EventSetInternal_function_end:
	.size	Os_EventSetInternal,__Os_EventSetInternal_function_end-Os_EventSetInternal
.L106:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_EventGetLocal')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_EventGetLocal

; ..\component\Os\Implementation\Os_Event.c	   806    }
; ..\component\Os\Implementation\Os_Event.c	   807    /* #40 Otherwise the task belongs to a foreign core, */
; ..\component\Os\Implementation\Os_Event.c	   808    else
; ..\component\Os\Implementation\Os_Event.c	   809    {
; ..\component\Os\Implementation\Os_Event.c	   810      /* #50 Signal the responsible core to activate the task. */
; ..\component\Os\Implementation\Os_Event.c	   811      status = Os_XSigSend_SetEventAsync(Os_TaskGetCore(Task), Os_CoreGetThread(), Os_TaskGetId(Task), Mask);             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_EV_XSIGSEND_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   812    }
; ..\component\Os\Implementation\Os_Event.c	   813  
; ..\component\Os\Implementation\Os_Event.c	   814    return status;
; ..\component\Os\Implementation\Os_Event.c	   815  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Event.c	   816  
; ..\component\Os\Implementation\Os_Event.c	   817  
; ..\component\Os\Implementation\Os_Event.c	   818  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	   819   *  Os_EventGetLocal()
; ..\component\Os\Implementation\Os_Event.c	   820   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Event.c	   821  /*!
; ..\component\Os\Implementation\Os_Event.c	   822   * Internal comment removed.
; ..\component\Os\Implementation\Os_Event.c	   823   *
; ..\component\Os\Implementation\Os_Event.c	   824   *
; ..\component\Os\Implementation\Os_Event.c	   825   *
; ..\component\Os\Implementation\Os_Event.c	   826   *
; ..\component\Os\Implementation\Os_Event.c	   827   *
; ..\component\Os\Implementation\Os_Event.c	   828   */
; ..\component\Os\Implementation\Os_Event.c	   829  FUNC(Os_StatusType, OS_CODE) Os_EventGetLocal
; Function Os_EventGetLocal
.L92:
Os_EventGetLocal:	.type	func

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a15,[a4]12
.L636:

; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
	ld.bu	d15,[a15]40
.L637:

; ..\component\Os\Implementation\Os_Event.c	   830  (
; ..\component\Os\Implementation\Os_Event.c	   831    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Event.c	   832    EventMaskRefType Mask
; ..\component\Os\Implementation\Os_Event.c	   833  )
; ..\component\Os\Implementation\Os_Event.c	   834  {
; ..\component\Os\Implementation\Os_Event.c	   835    Os_StatusType status;
; ..\component\Os\Implementation\Os_Event.c	   836    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) thread;
; ..\component\Os\Implementation\Os_Event.c	   837    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) ownerApplication;
; ..\component\Os\Implementation\Os_Event.c	   838  
; ..\component\Os\Implementation\Os_Event.c	   839    /* #10 If the module is not enabled: KernelPanic. */
; ..\component\Os\Implementation\Os_Event.c	   840    if(Os_EventIsEnabled() == 0u)                                                                                         /* COV_OS_INVSTATE */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Event.c	   841    {
; ..\component\Os\Implementation\Os_Event.c	   842      Os_ErrKernelPanic();                                                                                                /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Event.c	   843    }
; ..\component\Os\Implementation\Os_Event.c	   844  
; ..\component\Os\Implementation\Os_Event.c	   845    thread = Os_TaskGetThread(Task);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   846    ownerApplication = Os_ThreadGetOwnerApplication(thread);                                                              /* SBSW_OS_EV_THREADGETOWNERAPPLICATION_002 */
; ..\component\Os\Implementation\Os_Event.c	   847  
; ..\component\Os\Implementation\Os_Event.c	   848    /* #20 Perform runtime data checks. */
; ..\component\Os\Implementation\Os_Event.c	   849    if(OS_UNLIKELY(Os_TaskCheckIsNotSuspended(Task) == OS_CHECK_FAILED))                                                  /* SBSW_OS_FC_PRECONDITION */
	jne	d15,#3,.L65
.L638:

; ..\component\Os\Implementation\Os_Event.c	   850    {
; ..\component\Os\Implementation\Os_Event.c	   851      status = OS_STATUS_STATE_1;
; ..\component\Os\Implementation\Os_Event.c	   852    }
; ..\component\Os\Implementation\Os_Event.c	   853    else if(OS_UNLIKELY(Os_AppCheckIsAccessible(ownerApplication) == OS_CHECK_FAILED))                                    /* SBSW_OS_EV_APPCHECKISACCESSIBLE_001 */
; ..\component\Os\Implementation\Os_Event.c	   854    {
; ..\component\Os\Implementation\Os_Event.c	   855      status = OS_STATUS_NOTACCESSIBLE_1;
; ..\component\Os\Implementation\Os_Event.c	   856    }
; ..\component\Os\Implementation\Os_Event.c	   857    else
; ..\component\Os\Implementation\Os_Event.c	   858    {
; ..\component\Os\Implementation\Os_Event.c	   859      P2CONST(Os_EventStateType, AUTOMATIC, OS_CONST) event;
; ..\component\Os\Implementation\Os_Event.c	   860      event = Os_TaskGetEvent(Task);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   861  
; ..\component\Os\Implementation\Os_Event.c	   862      do
; ..\component\Os\Implementation\Os_Event.c	   863      {
; ..\component\Os\Implementation\Os_Event.c	   864        /* #30 Read task's trigger event mask from given pointer. */
; ..\component\Os\Implementation\Os_Event.c	   865        (*Mask) = Os_EventTriggerGet(event);                                                                              /* SBSW_OS_EV_EVENTTRIGGERGET_001 */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Event.c	   866  
; ..\component\Os\Implementation\Os_Event.c	   867      /* #40 Ensure that the read value was not changed partly during write. */
; ..\component\Os\Implementation\Os_Event.c	   868      /* This is relevant for architectures where the word width is smaller then the event mask width. */
; ..\component\Os\Implementation\Os_Event.c	   869      }while((*Mask) != Os_EventTriggerGet(event));                                                                       /* SBSW_OS_EV_EVENTTRIGGERGET_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Event.c	   870  
; ..\component\Os\Implementation\Os_Event.c	   871      status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Event.c	   872    }
; ..\component\Os\Implementation\Os_Event.c	   873  
; ..\component\Os\Implementation\Os_Event.c	   874    return status;
; ..\component\Os\Implementation\Os_Event.c	   875  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	mov	d2,#263
	ret
.L65:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
	lea	a15,[a15]24
.L67:
	ld.d	e0,[a15]8
.L249:
	st.d	[a5]0,e0
.L253:
	ld.d	e2,[a15]8
.L254:
	ne	d15,d0,d2
	or.ne	d15,d1,d3
.L639:
	jne	d15,#0,.L67
.L640:
	mov	d2,#0
	ret
.L237:
	
__Os_EventGetLocal_function_end:
	.size	Os_EventGetLocal,__Os_EventGetLocal_function_end-Os_EventGetLocal
.L111:
	; End of function
	
	.calls	'Os_Api_SetEvent','Os_EventSetLocal'
	.calls	'Os_Api_SetEvent','Os_SchedulerInternalSchedule'
	.calls	'Os_Api_SetEvent','Os_ErrProtectionError'
	.calls	'Os_Api_SetEvent','__INDIRECT__'
	.calls	'Os_Api_SetEvent','Os_Hal_ContextSwitch'
	.calls	'Os_Api_GetEvent','Os_EventGetLocal'
	.calls	'Os_Api_WaitEvent','Os_SchedulerRemoveCurrentTask'
	.calls	'Os_Api_WaitEvent','Os_SchedulerInternalSchedule'
	.calls	'Os_Api_WaitEvent','Os_ErrProtectionError'
	.calls	'Os_Api_WaitEvent','__INDIRECT__'
	.calls	'Os_Api_WaitEvent','Os_Hal_ContextSwitch'
	.calls	'Os_EventSetLocal','Os_SchedulerInsert'
	.calls	'Os_EventSetInternal','Os_EventSetLocal'
	.calls	'Os_Api_SetEvent','.cocofun_3'
	.calls	'Os_Api_SetEvent','.cocofun_2'
	.calls	'Os_Api_SetEvent','.cocofun_1'
	.calls	'Os_Api_SetEvent','.cocofun_5'
	.calls	'Os_Api_ClearEvent','.cocofun_3'
	.calls	'Os_Api_GetEvent','.cocofun_4'
	.calls	'Os_Api_WaitEvent','.cocofun_4'
	.calls	'Os_Api_WaitEvent','.cocofun_2'
	.calls	'Os_Api_WaitEvent','.cocofun_1'
	.calls	'Os_Api_WaitEvent','.cocofun_5'
	.calls	'Os_Api_SetEvent','',0
	.calls	'.cocofun_5','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.calls	'Os_Api_ClearEvent','',0
	.calls	'Os_Api_GetEvent','',0
	.calls	'.cocofun_4','',0
	.calls	'Os_Api_WaitEvent','',0
	.calls	'Os_EventSetLocal','',0
	.calls	'Os_EventSetInternal','',0
	.extern	Os_ErrProtectionError
	.extern	OsCfg_CorePhysicalRefs
	.extern	Os_SchedulerInsert
	.extern	Os_SchedulerRemoveCurrentTask
	.extern	Os_SchedulerInternalSchedule
	.extern	Os_Hal_ContextSwitch
	.extern	OsCfg_TaskRefs
	.extern	__INDIRECT__
	.calls	'Os_EventGetLocal','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L94:
	.word	110129
	.half	3
	.word	.L95
	.byte	4
.L93:
	.byte	1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L96
.L174:
	.byte	2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Os_Hal_Mfa10',0,3,1,190,4,1
	.word	135
	.byte	1,1,4,0,3
	.byte	'Os_Hal_Mfa11',0,3,1,206,4,1
	.word	135
	.byte	1,1,4,0
.L234:
	.byte	3
	.byte	'Os_Hal_Mfa8',0,3,1,222,4,1
	.word	135
	.byte	1,1
.L235:
	.byte	4,0
.L443:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Os_ErrIsValueLo',0,3,2,202,18,1
	.word	236
	.byte	1,1,5
	.byte	'Id',0,2,202,18,1
	.word	135
	.byte	5
	.byte	'Compare',0,2,202,18,1
	.word	135
	.byte	4,0,3
	.byte	'Os_ErrExtendedCheck',0,3,2,216,18,1
	.word	236
	.byte	1,1,5
	.byte	'Value',0,2,216,18,1
	.word	236
	.byte	4,0,6
	.byte	'Os_Assert',0,3,2,140,19,1,1,1,5
	.byte	'Condition',0,2,140,19,1
	.word	236
	.byte	4,0
.L472:
	.byte	2
	.byte	'unsigned char',0,1,8
.L157:
	.byte	7,3,172,4,9,2,8
	.byte	'OS_STATUS_OK',0,0,8
	.byte	'OS_STATUS_CALLEVEL',0,2,8
	.byte	'OS_STATUS_LIMIT',0,4,8
	.byte	'OS_STATUS_RESOURCE',0,6,8
	.byte	'OS_STATUS_SERVICEID',0,9,8
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,8
	.byte	'OS_STATUS_MISSINGEND',0,11,8
	.byte	'OS_STATUS_DISABLEDINT',0,12,8
	.byte	'OS_STATUS_STACKFAULT',0,13,8
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,8
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,8
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,8
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,8
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,8
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,8
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,8
	.byte	'OS_STATUS_SPINLOCK',0,21,8
	.byte	'OS_STATUS_CORE',0,22,8
	.byte	'OS_STATUS_OVERFLOW',0,245,1,8
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,8
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,8
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,8
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,8
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,8
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,8
	.byte	'OS_STATUS_API_ERROR',0,252,1,8
	.byte	'OS_STATUS_ASSERTION',0,253,1,8
	.byte	'OS_STATUS_OVERLOAD',0,254,1,8
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,8
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,8
	.byte	'OS_STATUS_ID_1',0,131,2,8
	.byte	'OS_STATUS_UNLOCKED',0,133,2,8
	.byte	'OS_STATUS_STATE_1',0,135,2,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,8
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,8
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,8
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,8
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,8
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,8
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,8
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,8
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,8
	.byte	'OS_STATUS_ID_2',0,131,4,8
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,8
	.byte	'OS_STATUS_STATE_2',0,135,4,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,8
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,8
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,8
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,8
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,8
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,8
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,8
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,8
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,8
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,8
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,8
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,8
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,8
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,8
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,8
	.byte	'OS_STATUS_STOPPED_1',0,133,10,8
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,8
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,8
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,8
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,8
	.byte	'OS_STATUS_NEXTED_1',0,133,14,8
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,8
	.byte	'OS_STATUS_LOCKED',0,129,16,8
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,8
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,8
	.byte	'OS_STATUS_PRIORITY',0,129,18,8
	.byte	'OS_STATUS_ORDER',0,133,18,8
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,8
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,8
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,8
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,3
	.byte	'Os_ErrOsStatus2UserStatus',0,3,2,185,19,1
	.word	399
	.byte	1,1,5
	.byte	'OsStatus',0,2,185,19,1
	.word	416
	.byte	4,0,3
	.byte	'Os_ErrIsPropagationRequired',0,3,2,203,19,1
	.word	236
	.byte	1,1,5
	.byte	'OsStatus',0,2,203,19,1
	.word	416
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableGlobal',0,3,4,92,1,1,1,4,0,6
	.byte	'Os_Hal_IntDisableGlobal',0,3,4,108,1,1,1,4,0
.L172:
	.byte	3
	.byte	'Os_Hal_IntDisableAndReturnGlobalState',0,3,4,125,1
	.word	135
	.byte	1,1
.L173:
	.byte	4,0,9
	.word	135
	.byte	10
	.word	3157
.L210:
	.byte	6
	.byte	'Os_Hal_IntSetGlobalState',0,3,4,148,1,1,1,1
.L211:
	.byte	5
	.byte	'State',0,4,148,1,1
	.word	3162
.L213:
	.byte	4,0,10
	.word	135
	.byte	6
	.byte	'Os_Hal_IntGetLevel',0,3,4,173,1,1,1,1,5
	.byte	'Level',0,4,173,1,1
	.word	3217
	.byte	4,0,9
	.word	135
	.byte	10
	.word	3266
	.byte	6
	.byte	'Os_Hal_IntSetLevel',0,3,4,194,1,1,1,1,5
	.byte	'Level',0,4,194,1,1
	.word	3271
	.byte	11,4,4,0,0,10
	.word	135
	.byte	6
	.byte	'Os_Hal_IntGetGlobalEnable',0,3,4,223,1,1,1,1,5
	.byte	'State',0,4,223,1,1
	.word	3323
	.byte	4,0,6
	.byte	'Os_Hal_IntGetCat2LockLevel',0,3,4,242,1,1,1,1,5
	.byte	'Level',0,4,242,1,1
	.word	3217
	.byte	4,0,6
	.byte	'Os_Hal_IntGetTaskLevel',0,3,4,171,2,1,1,1,5
	.byte	'Level',0,4,171,2,1
	.word	3217
	.byte	4,0,10
	.word	135
	.byte	6
	.byte	'Os_Hal_IntGetInterruptState',0,3,4,190,2,1,1,1,5
	.byte	'InterruptState',0,4,190,2,1
	.word	3479
	.byte	4,0,12
	.byte	'Os_Hal_IntIsrConfigType_Tag',0,5,118,8,12,13
	.byte	'Level',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'Source',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'CoreAssignment',0
	.word	399
	.byte	1,2,35,8,0,9
	.word	3546
	.byte	10
	.word	3635
	.byte	6
	.byte	'Os_Hal_IntDisableSource',0,3,4,212,2,1,1,1,5
	.byte	'IsrConfig',0,4,212,2,1
	.word	3640
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableSource',0,3,4,246,2,1,1,1,5
	.byte	'IsrConfig',0,4,246,2,1
	.word	3640
	.byte	4,0,6
	.byte	'Os_Hal_IntClearPending',0,3,4,162,3,1,1,1,5
	.byte	'IsrConfig',0,4,162,3,1
	.word	3640
	.byte	4,0,3
	.byte	'Os_Hal_IntIsrLevelIsLe',0,3,4,179,4,1
	.word	236
	.byte	1,1,5
	.byte	'IsrConfig',0,4,179,4,1
	.word	3640
	.byte	5
	.byte	'Level',0,4,179,4,1
	.word	3271
	.byte	4,0,3
	.byte	'Os_Hal_IntLevelIsGt',0,3,4,199,4,1
	.word	236
	.byte	1,1,5
	.byte	'LevelX',0,4,199,4,1
	.word	3271
	.byte	5
	.byte	'LevelY',0,4,199,4,1
	.word	3271
	.byte	4,0,6
	.byte	'Os_Hal_IntInterruptSourceInit',0,3,4,141,5,1,1,1,5
	.byte	'InterruptSource',0,4,141,5,1
	.word	3640
	.byte	4,0
.L345:
	.byte	6
	.byte	'Os_Hal_IntGetGlobalState',0,3,4,221,5,1,1,1
.L347:
	.byte	5
	.byte	'State',0,4,221,5,1
	.word	3323
.L349:
	.byte	4,0,9
	.word	135
	.byte	10
	.word	4054
	.byte	6
	.byte	'Os_Hal_InitializeAccessDPRE',0,3,6,109,1,1,1,5
	.byte	'Value',0,6,109,1
	.word	4059
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessDPWE',0,3,6,127,1,1,1,5
	.byte	'Value',0,6,127,1
	.word	4059
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessCPXE',0,3,6,145,1,1,1,1,5
	.byte	'Value',0,6,145,1,1
	.word	4059
	.byte	4,0,9
	.word	399
	.byte	9
	.word	135
	.byte	9
	.word	135
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPRE',0,3,6,163,1,1,1,1,5
	.byte	'ProtectionSet',0,6,163,1,1
	.word	4219
	.byte	5
	.byte	'Mask',0,6,163,1,1
	.word	4224
	.byte	5
	.byte	'Value',0,6,163,1,1
	.word	4229
	.byte	4,0,9
	.word	399
	.byte	9
	.word	135
	.byte	9
	.word	135
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPWE',0,3,6,200,1,1,1,1,5
	.byte	'ProtectionSet',0,6,200,1,1
	.word	4324
	.byte	5
	.byte	'Mask',0,6,200,1,1
	.word	4329
	.byte	5
	.byte	'Value',0,6,200,1,1
	.word	4334
	.byte	4,0,9
	.word	399
	.byte	9
	.word	135
	.byte	9
	.word	135
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessCPXE',0,3,6,237,1,1,1,1,5
	.byte	'ProtectionSet',0,6,237,1,1
	.word	4429
	.byte	5
	.byte	'Mask',0,6,237,1,1
	.word	4434
	.byte	5
	.byte	'Value',0,6,237,1,1
	.word	4439
	.byte	4,0,9
	.word	135
	.byte	12
	.byte	'Os_Hal_ContextConfigType_Tag',0,7,153,1,8,28,13
	.byte	'StackEndAddr',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'StackStartAddr',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'ProgramStatus',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'ProtectionSet',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'Entry',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'ReturnAddress',0
	.word	135
	.byte	4,2,35,20,13
	.byte	'IntStatus',0
	.word	135
	.byte	4,2,35,24,0,9
	.word	4539
	.byte	10
	.word	4724
	.byte	6
	.byte	'Os_Hal_ContextPreparePRS',0,3,6,145,2,1,1,1,5
	.byte	'PcxiAddr',0,6,145,2,1
	.word	4534
	.byte	5
	.byte	'CurrentConfig',0,6,145,2,1
	.word	4729
	.byte	4,0
.L330:
	.byte	3
	.byte	'Os_Hal_CoreGetId',0,3,6,158,2,1
	.word	135
	.byte	1,1
.L332:
	.byte	4,0,12
	.byte	'Os_Hal_ContextType_Tag',0,7,115,8,28,13
	.byte	'Lr',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'PreviousContextInfo',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'InitPCXI',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'RunningPCXI',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'MpuRegionForStackLow',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'MpuRegionForStackUpper',0
	.word	135
	.byte	4,2,35,20,13
	.byte	'A4',0
	.word	135
	.byte	4,2,35,24,0,10
	.word	4841
	.byte	10
	.word	135
	.byte	12
	.byte	'Os_StackConfigType_Tag',0,11,104,8,8,13
	.byte	'LowAddress',0
	.word	5029
	.byte	4,2,35,0,13
	.byte	'HighAddress',0
	.word	5029
	.byte	4,2,35,4,0,9
	.word	5034
	.byte	10
	.word	5104
	.byte	12
	.byte	'Os_LockType_Tag',0,12,82,8,4,13
	.byte	'Next',0
	.word	.L593-.L94
	.byte	4,2,35,0,0,10
	.word	5114
	.byte	7,12,73,9,1,8
	.byte	'OS_LOCKTYPE_RESOURCE_STANDARD',0,0,8
	.byte	'OS_LOCKTYPE_RESOURCE_INTERRUPT',0,1,8
	.byte	'OS_LOCKTYPE_SPINLOCK',0,2,0,12
	.byte	'Os_LockConfigType_Tag',0,12,92,8,12,13
	.byte	'Dyn',0
	.word	5150
	.byte	4,2,35,0,13
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'Type',0
	.word	5155
	.byte	1,2,35,8,0,9
	.word	5249
.L593:
	.byte	10
	.word	5335
.L445:
	.byte	14
	.byte	'Os_LockListType',0,13,65,55
	.word	5340
	.byte	7,14,135,1,9,1,8
	.byte	'OS_SPINLOCKMETHOD_ALL_INT',0,0,8
	.byte	'OS_SPINLOCKMETHOD_CAT2',0,1,8
	.byte	'OS_SPINLOCKMETHOD_SCHEDULER',0,2,8
	.byte	'OS_SPINLOCKMETHOD_NOTHING',0,3,0,2
	.byte	'unsigned short int',0,2,7,7,14,149,1,9,1,8
	.byte	'OS_SPINLOCKMODE_USER',0,0,8
	.byte	'OS_SPINLOCKMODE_SUPERVISOR',0,1,0,7,14,160,1,9,1,8
	.byte	'OS_SPINLOCKTRACE_DISABLED',0,0,8
	.byte	'OS_SPINLOCKTRACE_ENABLED',0,1,0,7,14,173,1,9,1,8
	.byte	'OS_SPINLOCKCHECK_DISABLED',0,0,8
	.byte	'OS_SPINLOCKCHECK_ENABLED',0,1,0,7,16,225,1,9,1,8
	.byte	'OS_TRACE_NUMBER_OF_ALL_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_NUMBER_OF_CONFIGURED_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_INVALID_SPINLOCK',0,1,0,12
	.byte	'Os_TraceSpinlockConfigType_Tag',0,15,148,4,8,1,13
	.byte	'SpinlockId',0
	.word	5692
	.byte	1,2,35,0,0,9
	.word	5804
	.byte	10
	.word	5862
	.byte	12
	.byte	'Os_SpinlockConfigType_Tag',0,14,214,1,8,24,13
	.byte	'Lock',0
	.word	5249
	.byte	12,2,35,0,13
	.byte	'Method',0
	.word	5369
	.byte	1,2,35,12,13
	.byte	'CeilingPriority',0
	.word	5487
	.byte	2,2,35,14,13
	.byte	'Mode',0
	.word	5509
	.byte	1,2,35,16,13
	.byte	'Trace',0
	.word	5568
	.byte	1,2,35,17,13
	.byte	'Checks',0
	.word	5630
	.byte	1,2,35,18,13
	.byte	'Order',0
	.word	399
	.byte	1,2,35,19,13
	.byte	'TimingHookTrace',0
	.word	5867
	.byte	4,2,35,20,0,9
	.word	5872
	.byte	10
	.word	6045
	.byte	14
	.byte	'Os_SpinlockListType',0,17,62,59
	.word	6050
	.byte	7,3,128,3,9,1,8
	.byte	'APPLICATION_TERMINATED',0,0,8
	.byte	'APPLICATION_RESTARTING',0,1,8
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,15,18,118,9,1,13
	.byte	'State',0
	.word	6083
	.byte	1,2,35,0,0,10
	.word	6165
	.byte	7,19,223,1,9,1,8
	.byte	'OS_CORESTATE_INACTIVE',0,0,8
	.byte	'OS_CORESTATE_ACTIVATED_ASR',0,1,8
	.byte	'OS_CORESTATE_ACTIVATED_NONASR',0,2,0,16,1
	.word	6191
	.byte	17,0,0,12
	.byte	'Os_CoreStatusType_Tag',0,19,251,1,8,2,13
	.byte	'ActivationState',0
	.word	6191
	.byte	1,2,35,0,13
	.byte	'CoreStartRequests',0
	.word	6283
	.byte	1,2,35,1,0,18
	.word	6292
	.byte	10
	.word	6373
	.byte	12
	.byte	'Os_Hal_CoreConfigType_Tag',0,9,99,8,24,13
	.byte	'CoreId',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ProgramCounterRegister',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'StartLabelAddress',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'DBGSRRegister',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'SYSCON_CORECON_Register',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'BOOTCONRegister',0
	.word	135
	.byte	4,2,35,20,0,9
	.word	6383
	.byte	10
	.word	6571
	.byte	12
	.byte	'Os_Hal_IntIsrMapConfigType_Tag',0,5,132,1,8,4,13
	.byte	'dummy',0
	.word	135
	.byte	4,2,35,0,0,9
	.word	6581
	.byte	10
	.word	6634
	.byte	12
	.byte	'Os_IsrHwConfigType_Tag',0,20,154,1,8,12,13
	.byte	'HwConfig',0
	.word	3640
	.byte	4,2,35,0,13
	.byte	'MapConfig',0
	.word	6639
	.byte	4,2,35,4,13
	.byte	'IsMapped',0
	.word	399
	.byte	1,2,35,8,13
	.byte	'IsPostActionRequired',0
	.word	399
	.byte	1,2,35,9,0,9
	.word	6644
	.byte	10
	.word	6759
	.byte	14
	.byte	'Os_InterruptSourceConfigRefType',0,19,172,2,56
	.word	6764
	.byte	9
	.word	6769
	.byte	10
	.word	6810
	.byte	7,21,86,9,1,8
	.byte	'OS_CORE_ID_0',0,0,8
	.byte	'OS_CORE_ID_MASTER',0,0,8
	.byte	'OS_COREID_COUNT',0,1,0,7,15,204,2,9,1,8
	.byte	'OS_TRACE_TASK_ACTIVATION',0,1,8
	.byte	'OS_TRACE_ISR_START',0,2,8
	.byte	'OS_TRACE_TASK_SETEVENT',0,4,8
	.byte	'OS_TRACE_TASK_GOTSEMA',0,8,8
	.byte	'OS_TRACE_THREAD_RESUME',0,16,8
	.byte	'OS_TRACE_THREAD_CLEANUP',0,32,8
	.byte	'OS_TRACE_THREAD_MISC',0,33,0,12
	.byte	'Os_TraceThreadType_Tag',0,15,244,3,8,1,13
	.byte	'NextRunReason',0
	.word	6879
	.byte	1,2,35,0,0,10
	.word	7057
	.byte	7,16,218,1,9,1,8
	.byte	'OS_TRACE_THREADID_COUNT',0,0,8
	.byte	'OS_TRACE_INVALID_THREAD',0,1,0,7,15,228,3,9,1,8
	.byte	'OS_TRACE_THREAD_TYPE_TASK',0,0,8
	.byte	'OS_TRACE_THREAD_TYPE_ISR',0,1,8
	.byte	'OS_TRACE_THREAD_TYPE_MISC',0,2,0,12
	.byte	'Os_TraceThreadConfigType_Tag',0,15,254,3,8,8,13
	.byte	'Dyn',0
	.word	7110
	.byte	4,2,35,0,13
	.byte	'Id',0
	.word	7115
	.byte	1,2,35,4,13
	.byte	'Type',0
	.word	7174
	.byte	1,2,35,5,0,9
	.word	7264
	.byte	10
	.word	7339
	.byte	12
	.byte	'Os_TraceCoreType_Tag',0,15,137,4,8,12,13
	.byte	'CurrentTask',0
	.word	7344
	.byte	4,2,35,0,13
	.byte	'CurrentIsr',0
	.word	7344
	.byte	4,2,35,4,13
	.byte	'OrtiCurrentServiceId',0
	.word	399
	.byte	1,2,35,8,0,10
	.word	7349
	.byte	12
	.byte	'Os_CoreConfigType_Tag',0,19,176,2,8,24,13
	.byte	'Status',0
	.word	6378
	.byte	4,2,35,0,13
	.byte	'HwConfig',0
	.word	6576
	.byte	4,2,35,4,13
	.byte	'InterruptSourceRefs',0
	.word	6815
	.byte	4,2,35,8,13
	.byte	'InterruptSourceCount',0
	.word	5487
	.byte	2,2,35,12,13
	.byte	'Id',0
	.word	6820
	.byte	1,2,35,14,13
	.byte	'Trace',0
	.word	7448
	.byte	4,2,35,16,13
	.byte	'IsAsrCore',0
	.word	399
	.byte	1,2,35,20,13
	.byte	'IsAutostart',0
	.word	399
	.byte	1,2,35,21,13
	.byte	'IsMasterStartAllowed',0
	.word	399
	.byte	1,2,35,22,13
	.byte	'IsHardwareInitCore',0
	.word	399
	.byte	1,2,35,23,0
.L163:
	.byte	15,23,67,9,8,13
	.byte	'Global',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'Level',0
	.word	135
	.byte	4,2,35,4,0,15,22,81,9,6,19
	.byte	'InDisableAll',0,1
	.word	399
	.byte	1,7,2,35,0,13
	.byte	'SuspendAllCounter',0
	.word	5487
	.byte	2,2,35,2,13
	.byte	'SuspendOsCounter',0
	.word	5487
	.byte	2,2,35,4,0,12
	.byte	'Os_IntApiStateType_Tag',0,22,89,8,28,13
	.byte	'SuspendAllPrevState',0
	.word	7700
	.byte	8,2,35,0,13
	.byte	'SuspendOsPrevState',0
	.word	7700
	.byte	8,2,35,8,13
	.byte	'Os_IntLockingState',0
	.word	7737
	.byte	6,2,35,16,13
	.byte	'SuspendAllSnapshot',0
	.word	5487
	.byte	2,2,35,22,13
	.byte	'SuspendOsSnapshot',0
	.word	5487
	.byte	2,2,35,24,0,2
	.byte	'short int',0,2,5,14
	.byte	'Os_CoreInterruptedThreadsType',0,19,164,2,57
	.word	.L594-.L94
	.byte	16,40
	.word	8002
	.byte	17,9,0,7,3,177,3,9,1,8
	.byte	'OSServiceId_GetApplicationID',0,0,8
	.byte	'OSServiceId_GetISRID',0,1,8
	.byte	'OSServiceId_CallTrustedFunction',0,2,8
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,8
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,8
	.byte	'OSServiceId_CheckObjectAccess',0,5,8
	.byte	'OSServiceId_CheckObjectOwnership',0,6,8
	.byte	'OSServiceId_StartScheduleTableRel',0,7,8
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,8
	.byte	'OSServiceId_StopScheduleTable',0,9,8
	.byte	'OSServiceId_NextScheduleTable',0,10,8
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,8
	.byte	'OSServiceId_SyncScheduleTable',0,12,8
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,8
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,8
	.byte	'OSServiceId_IncrementCounter',0,15,8
	.byte	'OSServiceId_GetCounterValue',0,16,8
	.byte	'OSServiceId_GetElapsedValue',0,17,8
	.byte	'OSServiceId_TerminateApplication',0,18,8
	.byte	'OSServiceId_AllowAccess',0,19,8
	.byte	'OSServiceId_GetApplicationState',0,20,8
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,8
	.byte	'OSServiceId_GetCoreID',0,22,8
	.byte	'OSServiceId_StartCore',0,23,8
	.byte	'OSServiceId_StartNonAutosarCore',0,24,8
	.byte	'OSServiceId_GetSpinlock',0,25,8
	.byte	'OSServiceId_ReleaseSpinlock',0,26,8
	.byte	'OSServiceId_TryToGetSpinlock',0,27,8
	.byte	'OSServiceId_ShutdownAllCores',0,28,8
	.byte	'OSServiceId_ControlIdle',0,29,8
	.byte	'OSServiceId_IocSend',0,30,8
	.byte	'OSServiceId_IocWrite',0,31,8
	.byte	'OSServiceId_IocSendGroup',0,32,8
	.byte	'OSServiceId_IocWriteGroup',0,33,8
	.byte	'OSServiceId_IocReceive',0,34,8
	.byte	'OSServiceId_IocRead',0,35,8
	.byte	'OSServiceId_IocReceiveGroup',0,36,8
	.byte	'OSServiceId_IocReadGroup',0,37,8
	.byte	'OSServiceId_IocEmptyQueue',0,38,8
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,8
	.byte	'OSServiceId_GetExceptionContext',0,160,1,8
	.byte	'OSServiceId_SetExceptionContext',0,161,1,8
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,8
	.byte	'OSServiceId_AppKill',0,163,1,8
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,8
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,8
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,8
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,8
	.byte	'OSServiceId_TimerIsr',0,168,1,8
	.byte	'OSServiceId_IsrWrapper',0,169,1,8
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,8
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,8
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,8
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,8
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,8
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,8
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,8
	.byte	'OSServiceId_GetSemaphore',0,177,1,8
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,8
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,8
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,8
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,8
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,8
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,8
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,8
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,8
	.byte	'OSServiceId_HookCallCallback',0,186,1,8
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,8
	.byte	'OSServiceId_IsInterruptPending',0,188,1,8
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,8
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,8
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,8
	.byte	'OSServiceId_GetCoreStartState',0,192,1,8
	.byte	'OSServiceId_StartOS',0,208,1,8
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,8
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,8
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,8
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,8
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,8
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,8
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,8
	.byte	'OSServiceId_ActivateTask',0,217,1,8
	.byte	'OSServiceId_TerminateTask',0,218,1,8
	.byte	'OSServiceId_ChainTask',0,219,1,8
	.byte	'OSServiceId_GetTaskID',0,220,1,8
	.byte	'OSServiceId_GetTaskState',0,221,1,8
	.byte	'OSServiceId_Schedule',0,222,1,8
	.byte	'OSServiceId_SetEvent',0,223,1,8
	.byte	'OSServiceId_ClearEvent',0,224,1,8
	.byte	'OSServiceId_GetEvent',0,225,1,8
	.byte	'OSServiceId_WaitEvent',0,226,1,8
	.byte	'OSServiceId_GetAlarmBase',0,227,1,8
	.byte	'OSServiceId_GetAlarm',0,228,1,8
	.byte	'OSServiceId_SetRelAlarm',0,229,1,8
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,8
	.byte	'OSServiceId_CancelAlarm',0,231,1,8
	.byte	'OSServiceId_GetResource',0,232,1,8
	.byte	'OSServiceId_ReleaseResource',0,233,1,8
	.byte	'OSSERVICEID_COUNT',0,255,1,0,15,3,133,6,9,4,13
	.byte	'Service',0
	.word	8050
	.byte	1,2,35,0,13
	.byte	'Error',0
	.word	399
	.byte	1,2,35,1,13
	.byte	'DetailedError',0
	.word	416
	.byte	2,2,35,2,0,15,3,220,2,9,12,13
	.byte	'maxallowedvalue',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	135
	.byte	4,2,35,8,0,10
	.word	11257
	.byte	14
	.byte	'AlarmBaseRefType',0,3,231,2,61
	.word	11329
	.byte	7,16,169,1,9,1,8
	.byte	'Rte_Al_TE2_bsw_task_0_10ms',0,0,8
	.byte	'Rte_Al_TE2_bsw_task_0_20ms',0,1,8
	.byte	'Rte_Al_TE_swc_test_swc_test_10ms',0,2,8
	.byte	'Rte_Al_TE_swc_test_swc_test_500ms',0,3,8
	.byte	'OS_ALARMID_COUNT',0,4,0,10
	.word	6083
	.byte	14
	.byte	'ApplicationStateRefType',0,3,163,3,68
	.word	11515
	.byte	7,16,120,9,1,8
	.byte	'OsApplication_OsCore0',0,0,8
	.byte	'SystemApplication_OsCore0',0,1,8
	.byte	'INVALID_OSAPPLICATION',0,2,8
	.byte	'OS_APPID_COUNT',0,2,0,10
	.word	399
	.byte	7,16,179,1,9,1,8
	.byte	'SystemTimer',0,0,8
	.byte	'OS_COUNTERID_COUNT',0,1,0
.L161:
	.byte	2
	.byte	'unsigned long long int',0,8,7,10
	.word	11699
	.byte	7,16,160,1,9,1,8
	.byte	'CanIsr_0',0,0,8
	.byte	'CounterIsr_SystemTimer',0,1,8
	.byte	'INVALID_ISR',0,2,8
	.byte	'OS_ISRID_COUNT',0,2,0,7,3,230,1,9,1,8
	.byte	'IDLE_NO_HALT',0,0,8
	.byte	'OS_IDLEMODE_COUNT',0,1,0,20
	.byte	'void',0,9
	.word	11846
	.byte	10
	.word	11852
	.byte	14
	.byte	'MemoryStartAddressType',0,3,203,6,49
	.word	11857
	.byte	7,16,192,1,9,1,8
	.byte	'OsResource',0,0,8
	.byte	'OS_RESOURCEID_COUNT',0,1,0,7,3,244,2,9,1,8
	.byte	'RESTART',0,0,8
	.byte	'NO_RESTART',0,1,8
	.byte	'OS_RESTARTTYPE_COUNT',0,2,0,7,3,175,6,9,1,8
	.byte	'SCHEDULETABLE_STOPPED',0,0,8
	.byte	'SCHEDULETABLE_NEXT',0,1,8
	.byte	'SCHEDULETABLE_WAITING',0,2,8
	.byte	'SCHEDULETABLE_RUNNING',0,3,8
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,10
	.word	11989
	.byte	14
	.byte	'ScheduleTableStatusRefType',0,3,195,6,34
	.word	12129
	.byte	7,16,186,1,9,1,8
	.byte	'OS_SCHTID_COUNT',0,0,0,7,16,199,1,9,1,8
	.byte	'INVALID_SPINLOCK',0,0,8
	.byte	'OS_SPINLOCKID_COUNT',0,0,0,10
	.word	399
	.byte	15,26,134,1,9,8,13
	.byte	'vendorID',0
	.word	5487
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	5487
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	399
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	399
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	399
	.byte	1,2,35,6,0,10
	.word	12248
.L256:
	.byte	7,16,147,1,9,1,8
	.byte	'Default_Init_Task',0,0,8
	.byte	'Default_Init_Task_Trusted',0,1,8
	.byte	'IdleTask_OsCore0',0,2,8
	.byte	'bsw_task',0,3,8
	.byte	'swc_init',0,4,8
	.byte	'swc_task',0,5,8
	.byte	'INVALID_TASK',0,6,8
	.byte	'OS_TASKID_COUNT',0,6,0,10
	.word	12374
	.byte	14
	.byte	'TaskRefType',0,3,152,2,56
	.word	12514
	.byte	7,3,161,2,9,1,8
	.byte	'RUNNING',0,0,8
	.byte	'READY',0,1,8
	.byte	'WAITING',0,2,8
	.byte	'SUSPENDED',0,3,0,10
	.word	12540
	.byte	14
	.byte	'TaskStateRefType',0,3,178,2,61
	.word	12587
	.byte	10
	.word	135
	.byte	14
	.byte	'TickRefType',0,3,210,2,56
	.word	12618
	.byte	7,16,129,1,9,1,8
	.byte	'OS_TRUSTEDFUNCTIONID_COUNT',0,0,0,10
	.word	11846
	.byte	14
	.byte	'TrustedFunctionParameterRefType',0,3,204,1,44
	.word	12680
	.byte	7,3,138,2,9,1,8
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,8
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,10
	.word	12726
	.byte	9
	.word	12726
	.byte	10
	.word	12794
	.byte	7,3,138,3,9,1,8
	.byte	'OBJECT_TASK',0,0,8
	.byte	'OBJECT_ISR',0,1,8
	.byte	'OBJECT_ALARM',0,2,8
	.byte	'OBJECT_RESOURCE',0,3,8
	.byte	'OBJECT_COUNTER',0,4,8
	.byte	'OBJECT_SCHEDULETABLE',0,5,8
	.byte	'OBJECT_SPINLOCK',0,6,0,7,16,135,1,9,1,8
	.byte	'OS_NONTRUSTEDFUNCTIONID_COUNT',0,0,0,14
	.byte	'Os_NonTrustedFunctionParameterRefType',0,3,207,1,44
	.word	12680
	.byte	7,16,141,1,9,1,8
	.byte	'OS_FASTTRUSTEDFUNCTIONID_COUNT',0,0,0,14
	.byte	'Os_FastTrustedFunctionParameterRefType',0,3,210,1,44
	.word	12680
	.byte	10
	.word	135
	.byte	14
	.byte	'Os_ExceptionSourceIdRefType',0,3,250,1,61
	.word	13103
	.byte	10
	.word	135
	.byte	14
	.byte	'Os_InterruptSourceIdRefType',0,3,242,1,61
	.word	13145
	.byte	7,16,206,1,9,1,8
	.byte	'OS_PERIPHERALID_COUNT',0,0,0,10
	.word	11195
	.byte	14
	.byte	'Os_ErrorInformationRefType',0,3,147,6,64
	.word	13218
	.byte	7,16,212,1,9,1,8
	.byte	'OS_BARRIERID_COUNT',0,0,0,16,64
	.word	135
	.byte	17,15,0,12
	.byte	'Os_ExceptionContextType_Tag',0,27,71,8,160,1,13
	.byte	'AddressRegisters',0
	.word	13287
	.byte	64,2,35,0,13
	.byte	'DataRegisters',0
	.word	13287
	.byte	64,2,35,64,13
	.byte	'Ra',0
	.word	135
	.byte	4,3,35,128,1,13
	.byte	'Psw',0
	.word	135
	.byte	4,3,35,132,1,13
	.byte	'ExceptionSource',0
	.word	135
	.byte	4,3,35,136,1,13
	.byte	'Pcpn',0
	.word	135
	.byte	4,3,35,140,1,13
	.byte	'Pie',0
	.word	135
	.byte	4,3,35,144,1,13
	.byte	'MpuRegionForStackLow',0
	.word	135
	.byte	4,3,35,148,1,13
	.byte	'MpuRegionForStackUpper',0
	.word	135
	.byte	4,3,35,152,1,13
	.byte	'RawPCXI',0
	.word	135
	.byte	4,3,35,156,1,0,10
	.word	13296
	.byte	14
	.byte	'Os_ExceptionContextRefType',0,3,254,1,60
	.word	13544
	.byte	7,3,250,6,9,1,8
	.byte	'OS_CORESTARTSTATE_START_UNREQUESTED',0,0,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_ASR',0,1,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_NONASR',0,2,8
	.byte	'OS_CORESTARTSTATE_STARTED_ASR',0,3,8
	.byte	'OS_CORESTARTSTATE_STARTED_NONASR',0,4,0,10
	.word	13585
	.byte	21
	.byte	'Os_ParamType_Tag',0,25,88,7,8,13
	.byte	'ParamAlarmBaseRefType',0
	.word	11334
	.byte	4,2,35,0,13
	.byte	'ParamAlarmType',0
	.word	11360
	.byte	1,2,35,0,13
	.byte	'ParamAppModeType',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ParamApplicationStateRefType',0
	.word	11520
	.byte	4,2,35,0,13
	.byte	'ParamApplicationStateType',0
	.word	6083
	.byte	1,2,35,0,13
	.byte	'ParamApplicationType',0
	.word	11553
	.byte	1,2,35,0,13
	.byte	'Paramboolean',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ParambooleanRefType',0
	.word	11652
	.byte	4,2,35,0,13
	.byte	'ParamCoreIdType',0
	.word	6820
	.byte	1,2,35,0,13
	.byte	'ParamCounterType',0
	.word	11657
	.byte	1,2,35,0,13
	.byte	'ParamEventMaskType',0
	.word	11699
	.byte	8,2,35,0,13
	.byte	'ParamEventMaskRefType',0
	.word	11725
	.byte	4,2,35,0,13
	.byte	'ParamISRType',0
	.word	11730
	.byte	1,2,35,0,13
	.byte	'ParamIdleModeType',0
	.word	11804
	.byte	1,2,35,0,13
	.byte	'ParamMemorySizeType',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamMemoryStartAddressType',0
	.word	11862
	.byte	4,2,35,0,13
	.byte	'ParamResourceType',0
	.word	11894
	.byte	1,2,35,0,13
	.byte	'ParamRestartType',0
	.word	11936
	.byte	1,2,35,0,13
	.byte	'ParamScheduleTableStatusRefType',0
	.word	12134
	.byte	4,2,35,0,13
	.byte	'ParamScheduleTableStatusType',0
	.word	11989
	.byte	1,2,35,0,13
	.byte	'ParamScheduleTableType',0
	.word	12170
	.byte	1,2,35,0,13
	.byte	'ParamSpinlockIdType',0
	.word	12195
	.byte	1,2,35,0,13
	.byte	'ParamStatusType',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ParamStatusRefType',0
	.word	12243
	.byte	4,2,35,0,13
	.byte	'ParamStd_VersionInfoRefType',0
	.word	12369
	.byte	4,2,35,0,13
	.byte	'ParamTaskRefType',0
	.word	12519
	.byte	4,2,35,0,13
	.byte	'ParamTaskStateRefType',0
	.word	12592
	.byte	4,2,35,0,13
	.byte	'ParamTaskStateType',0
	.word	12540
	.byte	1,2,35,0,13
	.byte	'ParamTaskType',0
	.word	12374
	.byte	1,2,35,0,13
	.byte	'ParamTickRefType',0
	.word	12623
	.byte	4,2,35,0,13
	.byte	'ParamTickType',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamTrustedFunctionIndexType',0
	.word	12644
	.byte	1,2,35,0,13
	.byte	'ParamTrustedFunctionParameterRefType',0
	.word	12685
	.byte	4,2,35,0,13
	.byte	'ParamTryToGetSpinlockRefType',0
	.word	12789
	.byte	4,2,35,0,13
	.byte	'ParamTryToGetSpinlockConstRefType',0
	.word	12799
	.byte	4,2,35,0,13
	.byte	'Paramuint32',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamVoidRefType',0
	.word	11857
	.byte	4,2,35,0,13
	.byte	'ParamObjectTypeType',0
	.word	12804
	.byte	1,2,35,0,13
	.byte	'ParamOs_NonTrustedFunctionIndexType',0
	.word	12929
	.byte	1,2,35,0,13
	.byte	'ParamOs_NonTrustedFunctionParameterRefType',0
	.word	12968
	.byte	4,2,35,0,13
	.byte	'ParamOs_FastTrustedFunctionIndexType',0
	.word	13015
	.byte	1,2,35,0,13
	.byte	'ParamOs_FastTrustedFunctionParameterRefType',0
	.word	13055
	.byte	4,2,35,0,13
	.byte	'ParamExceptionSourceIdType',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamInterruptSourceIdType',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamExceptionSourceIdRefType',0
	.word	13108
	.byte	4,2,35,0,13
	.byte	'ParamInterruptSourceIdRefType',0
	.word	13150
	.byte	4,2,35,0,13
	.byte	'ParamObjectIdType',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamPeripheralIdType',0
	.word	13187
	.byte	1,2,35,0,13
	.byte	'ParamErrorInformationRefType',0
	.word	13223
	.byte	4,2,35,0,13
	.byte	'ParamHookIdType',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamBarrierIdType',0
	.word	13259
	.byte	1,2,35,0,13
	.byte	'ParamExceptionContextRefType',0
	.word	13549
	.byte	4,2,35,0,13
	.byte	'ParamCoreStartStateRefType',0
	.word	13780
	.byte	4,2,35,0,0,16,24
	.word	13785
	.byte	17,2,0,12
	.byte	'Os_ErrorParamsType_Tag',0,24,171,1,8,24,13
	.byte	'Parameter',0
	.word	15519
	.byte	24,2,35,0,0,14
	.byte	'Os_AddressOfConstType',0,3,241,6,43
	.word	11857
	.byte	12
	.byte	'Os_ErrorType_Tag',0,24,177,1,8,32,13
	.byte	'ErrorDetails',0
	.word	11195
	.byte	4,2,35,0,13
	.byte	'Parameters',0
	.word	15528
	.byte	24,2,35,4,13
	.byte	'ExceptionInstructionAddress',0
	.word	15577
	.byte	4,2,35,28,0,7,28,97,9,1,8
	.byte	'OS_UNHANDLEDEVENTREPORT_NOTAVAILABLE',0,0,8
	.byte	'OS_UNHANDLEDEVENTREPORT_AVAILABLE',0,1,0,15,29,123,9,4,13
	.byte	'InHookFlags',0
	.word	135
	.byte	4,2,35,0,0,14
	.byte	'Os_StackConfigRefType',0,19,156,2,56
	.word	5109
	.byte	12
	.byte	'Os_CoreAsrType_Tag',0,19,213,2,8,124,13
	.byte	'IntApiState',0
	.word	7820
	.byte	28,2,35,0,13
	.byte	'InterruptedThreadsCounter',0
	.word	7989
	.byte	2,2,35,28,13
	.byte	'InterruptedThreads',0
	.word	8041
	.byte	40,2,35,32,13
	.byte	'LastError',0
	.word	15608
	.byte	32,2,35,72,13
	.byte	'LastUnhandledIrq',0
	.word	135
	.byte	4,2,35,104,13
	.byte	'UnhandledIrqReported',0
	.word	15711
	.byte	1,2,35,108,13
	.byte	'LastUnhandledExc',0
	.word	135
	.byte	4,2,35,110,13
	.byte	'UnhandledExcReported',0
	.word	15711
	.byte	1,2,35,114,13
	.byte	'IdleMode',0
	.word	11804
	.byte	1,2,35,115,13
	.byte	'HookInfo',0
	.word	15792
	.byte	4,2,35,116,13
	.byte	'CurrentStack',0
	.word	15819
	.byte	4,2,35,120,0,10
	.word	15850
	.byte	15,31,114,9,4,13
	.byte	'AllocationMask',0
	.word	135
	.byte	4,2,35,0,0,10
	.word	16154
	.byte	10
	.word	135
	.byte	15,31,123,9,12,13
	.byte	'Dyn',0
	.word	16184
	.byte	4,2,35,0,13
	.byte	'Data',0
	.word	16189
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	5487
	.byte	2,2,35,8,13
	.byte	'BitLength',0
	.word	5487
	.byte	2,2,35,10,0,7,32,105,9,1,8
	.byte	'OS_TASKSCHEDULE_ALLOWED',0,0,8
	.byte	'OS_TASKSCHEDULE_PROHIBITED',0,1,0,12
	.byte	'Os_TaskConfigType_Tag',0,32,143,1,8,80,13
	.byte	'Thread',0
	.word	.L595-.L94
	.byte	60,2,35,0,13
	.byte	'HomePriority',0
	.word	5487
	.byte	2,2,35,60,13
	.byte	'TaskId',0
	.word	12374
	.byte	1,2,35,62,13
	.byte	'RunningPriority',0
	.word	5487
	.byte	2,2,35,64,13
	.byte	'MaxActivations',0
	.word	399
	.byte	1,2,35,66,13
	.byte	'AutostartModes',0
	.word	399
	.byte	1,2,35,67,13
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,68,13
	.byte	'NumScheduleEventsRoundRobin',0
	.word	135
	.byte	4,2,35,72,13
	.byte	'RoundRobinEnabled',0
	.word	399
	.byte	1,2,35,76,13
	.byte	'IsExtended',0
	.word	399
	.byte	1,2,35,77,13
	.byte	'Reschedule',0
	.word	16260
	.byte	1,2,35,78,0,9
	.word	16321
.L159:
	.byte	10
	.word	16612
	.byte	12
	.byte	'Os_SchedulerType_Tag',0,30,181,1,8,16,13
	.byte	'NextPriority',0
	.word	5487
	.byte	2,2,35,0,13
	.byte	'NextTask',0
	.word	16617
	.byte	4,2,35,4,13
	.byte	'CurrentPriority',0
	.word	5487
	.byte	2,2,35,8,13
	.byte	'CurrentTask',0
	.word	16617
	.byte	4,2,35,12,0,10
	.word	16622
	.byte	15,33,75,9,8,13
	.byte	'ReadIdx',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'WriteIdx',0
	.word	135
	.byte	4,2,35,4,0,10
	.word	16741
	.byte	15,33,85,9,4,13
	.byte	'Value',0
	.word	16617
	.byte	4,2,35,0,0,10
	.word	16787
	.byte	15,33,92,9,12,13
	.byte	'Dyn',0
	.word	16782
	.byte	4,2,35,0,13
	.byte	'Buffer',0
	.word	16808
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	135
	.byte	4,2,35,8,0,9
	.word	16813
	.byte	10
	.word	16862
	.byte	12
	.byte	'Os_SchedulerConfigType_Tag',0,30,196,1,8,24,13
	.byte	'BitArray',0
	.word	16194
	.byte	12,2,35,0,13
	.byte	'Dyn',0
	.word	16736
	.byte	4,2,35,12,13
	.byte	'TaskQueues',0
	.word	16867
	.byte	4,2,35,16,13
	.byte	'NumberOfPriorities',0
	.word	5487
	.byte	2,2,35,20,0,9
	.word	16872
	.byte	10
	.word	16985
	.byte	7,34,97,9,1,8
	.byte	'Os_HookTaskReturn_ToCallerTask',0,0,8
	.byte	'Os_HookTaskReturn_WithSchedule',0,1,8
	.byte	'Os_HookTaskReturn_BeginScheduling',0,2,0,12
	.byte	'Os_HookConfigType_Tag',0,34,162,1,8,76,13
	.byte	'Thread',0
	.word	.L595-.L94
	.byte	60,2,35,0,13
	.byte	'HookTypeFlag',0
	.word	135
	.byte	4,2,35,60,13
	.byte	'NestingMask',0
	.word	135
	.byte	4,2,35,64,13
	.byte	'Id',0
	.word	135
	.byte	4,2,35,68,13
	.byte	'TaskReturn',0
	.word	16995
	.byte	1,2,35,72,0,22,1,1,10
	.word	17223
	.byte	14
	.byte	'Os_HookVoidHookCbkType',0,34,112,9
	.word	17226
	.byte	12
	.byte	'Os_HookCallbackConfigType_Tag',0,34,195,1,8,80,13
	.byte	'Hook',0
	.word	17103
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17231
	.byte	4,2,35,76,0,9
	.word	17262
	.byte	10
	.word	17331
	.byte	23,1,1,24
	.word	399
	.byte	0,10
	.word	17341
	.byte	14
	.byte	'Os_HookStatusHookCbkType',0,34,109,9
	.word	17350
	.byte	12
	.byte	'Os_HookStatusHookConfigType_Tag',0,34,183,1,8,80,13
	.byte	'Hook',0
	.word	17103
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17355
	.byte	4,2,35,76,0,9
	.word	17388
	.byte	10
	.word	17459
	.byte	7,3,237,5,9,1,8
	.byte	'PRO_IGNORE',0,0,8
	.byte	'PRO_IGNORE_EXCEPTION',0,1,8
	.byte	'PRO_TERMINATETASKISR',0,2,8
	.byte	'PRO_TERMINATEAPPL',0,3,8
	.byte	'PRO_TERMINATEAPPL_RESTART',0,4,8
	.byte	'PRO_SHUTDOWN',0,5,8
	.byte	'OS_PROTECTIONREACTION_COUNT',0,6,0,25
	.word	17469
	.byte	1,1,24
	.word	399
	.byte	0,10
	.word	17628
	.byte	14
	.byte	'Os_HookProtectionHookCbkType',0,34,115,9
	.word	17641
	.byte	12
	.byte	'Os_HookProtectionHookConfigType_Tag',0,34,207,1,8,80,13
	.byte	'Hook',0
	.word	17103
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17646
	.byte	4,2,35,76,0,9
	.word	17683
	.byte	10
	.word	17758
	.byte	14
	.byte	'Os_HookInitHookCbkType',0,34,118,9
	.word	17350
	.byte	12
	.byte	'Os_HookInitHookConfigType_Tag',0,34,218,1,8,80,13
	.byte	'Hook',0
	.word	17103
	.byte	76,2,35,0,13
	.byte	'Callback',0
	.word	17768
	.byte	4,2,35,76,0,9
	.word	17799
	.byte	10
	.word	17868
	.byte	9
	.word	17103
	.byte	10
	.word	17878
	.byte	14
	.byte	'Os_HookConfigRefType',0,29,133,1,55
	.word	17883
	.byte	9
	.word	17888
	.byte	10
	.word	17918
	.byte	14
	.byte	'Os_AppConfigRefType',0,19,128,3,54
	.word	.L596-.L94
	.byte	9
	.word	17928
	.byte	10
	.word	17957
	.byte	12
	.byte	'Os_ResourceConfigType_Tag',0,35,171,1,8,20,13
	.byte	'Lock',0
	.word	5249
	.byte	12,2,35,0,13
	.byte	'Core',0
	.word	.L597-.L94
	.byte	4,2,35,12,13
	.byte	'ResourceId',0
	.word	11894
	.byte	1,2,35,16,13
	.byte	'CeilingPriority',0
	.word	5487
	.byte	2,2,35,18,0,9
	.word	17967
	.byte	10
	.word	18073
	.byte	14
	.byte	'Os_ResourceConfigRefType',0,19,252,2,59
	.word	18078
	.byte	9
	.word	18083
	.byte	10
	.word	18117
	.byte	12
	.byte	'Os_Hal_CoreAsrConfigType_Tag',0,9,127,8,4,13
	.byte	'CoreId',0
	.word	135
	.byte	4,2,35,0,0,9
	.word	18127
	.byte	10
	.word	18178
	.byte	15,37,68,9,8,13
	.byte	'StartAddress',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'EndAddress',0
	.word	135
	.byte	4,2,35,4,0,9
	.word	18188
	.byte	10
	.word	18236
	.byte	16,24
	.word	135
	.byte	17,5,0,12
	.byte	'Os_Hal_MpCoreConfigType_Tag',0,37,93,8,88,13
	.byte	'MpuDataRegionStartSlot',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'MpuDataRegionCount',0
	.word	399
	.byte	1,2,35,1,13
	.byte	'MpuDataRegions',0
	.word	18241
	.byte	4,2,35,4,13
	.byte	'MpuDataRegionReadEnable',0
	.word	18246
	.byte	24,2,35,8,13
	.byte	'MpuDataRegionWriteEnable',0
	.word	18246
	.byte	24,2,35,32,13
	.byte	'MpuCodeRegionStartSlot',0
	.word	399
	.byte	1,2,35,56,13
	.byte	'MpuCodeRegionCount',0
	.word	399
	.byte	1,2,35,57,13
	.byte	'MpuCodeRegions',0
	.word	18241
	.byte	4,2,35,60,13
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	18246
	.byte	24,2,35,64,0,9
	.word	18255
	.byte	10
	.word	18562
	.byte	12
	.byte	'Os_MpCoreConfigType_Tag',0,36,124,8,4,13
	.byte	'HwConfig',0
	.word	18567
	.byte	4,2,35,0,0,9
	.word	18572
	.byte	10
	.word	18620
	.byte	12
	.byte	'Os_CounterCharacteristicsConfigType_Tag',0,40,164,1,8,20,13
	.byte	'MaxAllowedValue',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'MaxCountingValue',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'MaxDifferentialValue',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'MinCycle',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'TicksPerBase',0
	.word	135
	.byte	4,2,35,16,0,12
	.byte	'Os_JobType_Tag',0,42,78,8,4,13
	.byte	'ExpirationTimestamp',0
	.word	135
	.byte	4,2,35,0,0,10
	.word	18798
	.byte	9
	.word	.L598-.L94
	.byte	10
	.word	18853
	.byte	9
	.word	.L599-.L94
	.byte	10
	.word	18863
	.byte	23,1,1,24
	.word	18868
	.byte	0,10
	.word	18873
	.byte	14
	.byte	'Os_JobCallbackType',0,42,94,9
	.word	18882
.L599:
	.byte	12
	.byte	'Os_JobConfigType_Tag',0,42,98,8,12,13
	.byte	'Dyn',0
	.word	18848
	.byte	4,2,35,0,13
	.byte	'Counter',0
	.word	18858
	.byte	4,2,35,4,13
	.byte	'Callback',0
	.word	18887
	.byte	4,2,35,8,0,9
	.word	18914
	.byte	10
	.word	18989
	.byte	15,41,77,9,4,13
	.byte	'Data',0
	.word	18994
	.byte	4,2,35,0,0,10
	.word	18999
	.byte	15,41,84,9,2,13
	.byte	'QueueUsage',0
	.word	5487
	.byte	2,2,35,0,0,10
	.word	19024
	.byte	15,41,91,9,12,13
	.byte	'Queue',0
	.word	19019
	.byte	4,2,35,0,13
	.byte	'Dyn',0
	.word	19050
	.byte	4,2,35,4,13
	.byte	'QueueSize',0
	.word	5487
	.byte	2,2,35,8,0,7,43,63,9,1,8
	.byte	'OS_TIMERTYPE_PERIODIC_FREE_RUNNING_TIMER',0,20,8
	.byte	'OS_TIMERTYPE_PERIODIC_TICK',0,39,8
	.byte	'OS_TIMERTYPE_SOFTWARE',0,195,0,8
	.byte	'OS_TIMERTYPE_HIGH_RESOLUTION',0,203,0,0
.L598:
	.byte	12
	.byte	'Os_CounterConfigType_Tag',0,40,209,1,8,48,13
	.byte	'Characteristics',0
	.word	18630
	.byte	20,2,35,0,13
	.byte	'JobQueue',0
	.word	19055
	.byte	12,2,35,20,13
	.byte	'DriverType',0
	.word	19108
	.byte	1,2,35,32,13
	.byte	'Core',0
	.word	.L597-.L94
	.byte	4,2,35,36,13
	.byte	'OwnerApplication',0
	.word	.L596-.L94
	.byte	4,2,35,40,13
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,44,0,15,39,131,2,9,20,13
	.byte	'Value',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'Compare',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'ValueMask',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'HwLastCounterValue',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'HwTimeAtLogicalZero',0
	.word	135
	.byte	4,2,35,16,0,10
	.word	19409
	.byte	12
	.byte	'Os_Hal_TimerFrtConfigType_Tag',0,44,106,8,40,13
	.byte	'CounterRegisterAddress',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'CompareRegisterAddress',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'CMCONRegisterAddress',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'CMCONMask',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'CMCONValue',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'InterruptSRCRegisterAddress',0
	.word	135
	.byte	4,2,35,20,13
	.byte	'ICRRegisterAddress',0
	.word	135
	.byte	4,2,35,24,13
	.byte	'ICRMask',0
	.word	135
	.byte	4,2,35,28,13
	.byte	'ICRValue',0
	.word	135
	.byte	4,2,35,32,13
	.byte	'ReloadValue',0
	.word	135
	.byte	4,2,35,36,0,9
	.word	19529
	.byte	10
	.word	19819
	.byte	12
	.byte	'Os_TimerHrtConfigType_Tag',0,39,158,2,8,56,13
	.byte	'Counter',0
	.word	19243
	.byte	48,2,35,0,13
	.byte	'Dyn',0
	.word	19524
	.byte	4,2,35,48,13
	.byte	'HwConfig',0
	.word	19824
	.byte	4,2,35,52,0,9
	.word	19829
	.byte	10
	.word	19910
	.byte	12
	.byte	'Os_TpType_Tag',0,38,241,2,8,16,13
	.byte	'Snapshot',0
	.word	11699
	.byte	8,2,35,0,13
	.byte	'LastCounterValue',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'MonitoredThread',0
	.word	.L594-.L94
	.byte	4,2,35,12,0,10
	.word	19920
	.byte	12
	.byte	'Os_TpConfigType_Tag',0,38,128,3,8,8,13
	.byte	'Timer',0
	.word	19915
	.byte	4,2,35,0,13
	.byte	'Dyn',0
	.word	20010
	.byte	4,2,35,4,0,9
	.word	20015
	.byte	10
	.word	20070
	.byte	9
	.word	15819
	.byte	10
	.word	20080
	.byte	7,45,86,9,1,8
	.byte	'OS_COREASRCOREIDX_0',0,0,8
	.byte	'OS_COREASRCOREIDX_COUNT',0,1,0,15,47,191,1,9,4,13
	.byte	'SendIdx',0
	.word	5487
	.byte	2,2,35,0,13
	.byte	'ResultIdx',0
	.word	5487
	.byte	2,2,35,2,0,18
	.word	20144
	.byte	10
	.word	20187
	.byte	15,47,211,1,9,2,13
	.byte	'ReceiveIdx',0
	.word	5487
	.byte	2,2,35,0,0,18
	.word	20197
	.byte	9
	.word	20224
	.byte	10
	.word	20229
	.byte	7,48,77,9,1,8
	.byte	'OS_XSIGFUNCTIONIDX_USEDCOUNT',0,0,8
	.byte	'XSigFunctionIdx_ActivateTask',0,0,8
	.byte	'XSigFunctionIdx_CancelAlarm',0,1,8
	.byte	'XSigFunctionIdx_ControlIdle',0,2,8
	.byte	'XSigFunctionIdx_GetAlarm',0,3,8
	.byte	'XSigFunctionIdx_GetApplicationState',0,4,8
	.byte	'XSigFunctionIdx_GetCounterValue',0,5,8
	.byte	'XSigFunctionIdx_GetErrorHookStackUsage',0,6,8
	.byte	'XSigFunctionIdx_GetEvent',0,7,8
	.byte	'XSigFunctionIdx_GetISRStackUsage',0,8,8
	.byte	'XSigFunctionIdx_GetKernelStackUsage',0,9,8
	.byte	'XSigFunctionIdx_GetProtectionHookStackUsage',0,10,8
	.byte	'XSigFunctionIdx_GetScheduleTableStatus',0,11,8
	.byte	'XSigFunctionIdx_GetShutdownHookStackUsage',0,12,8
	.byte	'XSigFunctionIdx_GetStartupHookStackUsage',0,13,8
	.byte	'XSigFunctionIdx_GetTaskStackUsage',0,14,8
	.byte	'XSigFunctionIdx_GetTaskState',0,15,8
	.byte	'XSigFunctionIdx_HookCallCallback',0,16,8
	.byte	'XSigFunctionIdx_NextScheduleTable',0,17,8
	.byte	'XSigFunctionIdx_SetAbsAlarm',0,18,8
	.byte	'XSigFunctionIdx_SetEvent',0,19,8
	.byte	'XSigFunctionIdx_SetRelAlarm',0,20,8
	.byte	'XSigFunctionIdx_ShutdownAllCores',0,21,8
	.byte	'XSigFunctionIdx_StartScheduleTableAbs',0,22,8
	.byte	'XSigFunctionIdx_StartScheduleTableRel',0,23,8
	.byte	'XSigFunctionIdx_StopScheduleTable',0,24,8
	.byte	'XSigFunctionIdx_TerminateApplication',0,25,8
	.byte	'OS_XSIGFUNCTIONIDX_COUNT',0,26,0,16,32
	.word	13785
	.byte	17,3,0,15,47,119,9,32,13
	.byte	'ParameterData',0
	.word	21223
	.byte	32,2,35,0,0,7,47,94,9,1,8
	.byte	'OS_XSIGSTATE_ASYNC_NACK',0,0,8
	.byte	'OS_XSIGSTATE_SYNC_NACK',0,1,8
	.byte	'OS_XSIGSTATE_SYNC_PENDING',0,2,8
	.byte	'OS_XSIGSTATE_ACK',0,3,0,12
	.byte	'Os_XSigSendDataType_Tag',0,47,151,1,8,48,13
	.byte	'FunctionIdx',0
	.word	20239
	.byte	1,2,35,0,13
	.byte	'ParameterData',0
	.word	21232
	.byte	32,2,35,4,13
	.byte	'Sender',0
	.word	.L594-.L94
	.byte	4,2,35,36,13
	.byte	'SenderApp',0
	.word	.L596-.L94
	.byte	4,2,35,40,13
	.byte	'Acknowledge',0
	.word	21261
	.byte	1,2,35,44,0,18
	.word	21365
	.byte	10
	.word	21496
	.byte	15,47,129,1,9,8,13
	.byte	'ParameterData',0
	.word	13785
	.byte	8,2,35,0,0,15,47,140,1,9,12,13
	.byte	'Status',0
	.word	416
	.byte	2,2,35,0,13
	.byte	'OutputParameter',0
	.word	21506
	.byte	8,2,35,4,0,12
	.byte	'Os_XSigRecvDataType_Tag',0,47,175,1,8,12,13
	.byte	'ReturnData',0
	.word	21536
	.byte	12,2,35,0,0,18
	.word	21584
	.byte	10
	.word	21635
	.byte	15,47,104,9,12,13
	.byte	'SendData',0
	.word	21501
	.byte	4,2,35,0,13
	.byte	'RecvData',0
	.word	21640
	.byte	4,2,35,4,13
	.byte	'Idx',0
	.word	5487
	.byte	2,2,35,8,0,9
	.word	21645
	.byte	10
	.word	21700
	.byte	15,47,221,1,9,16,13
	.byte	'Dyn',0
	.word	20192
	.byte	4,2,35,0,13
	.byte	'Receive',0
	.word	20234
	.byte	4,2,35,4,13
	.byte	'Buffer',0
	.word	21705
	.byte	4,2,35,8,13
	.byte	'BufferSize',0
	.word	5487
	.byte	2,2,35,12,0,12
	.byte	'Os_IsrConfigType_Tag',0,20,189,1,8,68,13
	.byte	'Thread',0
	.word	.L595-.L94
	.byte	60,2,35,0,13
	.byte	'SourceConfig',0
	.word	6764
	.byte	4,2,35,60,13
	.byte	'Id',0
	.word	11730
	.byte	1,2,35,64,13
	.byte	'IsEnabledOnInitialization',0
	.word	399
	.byte	1,2,35,65,0,9
	.word	.L600-.L94
	.byte	10
	.word	21896
	.byte	9
	.word	21232
	.byte	10
	.word	21906
	.byte	10
	.word	21506
	.byte	25
	.word	416
	.byte	1,1,24
	.word	21901
	.byte	24
	.word	21911
	.byte	24
	.word	21916
	.byte	0,10
	.word	21921
	.byte	14
	.byte	'Os_XSigFunctionType',0,46,177,1,9
	.word	21944
	.byte	15,46,186,1,9,4,13
	.byte	'FunctionRef',0
	.word	21949
	.byte	4,2,35,0,0,16,4
	.word	21978
	.byte	17,0,0,12
	.byte	'Os_XSigFunctionTableConfigType_Tag',0,46,194,1,8,4,13
	.byte	'FunctionDescription',0
	.word	22006
	.byte	4,2,35,0,0,9
	.word	22015
	.byte	10
	.word	22086
	.byte	18
	.word	20197
	.byte	10
	.word	22096
	.byte	18
	.word	20144
	.byte	9
	.word	22106
	.byte	10
	.word	22111
	.byte	15,47,238,1,9,16,13
	.byte	'Dyn',0
	.word	22101
	.byte	4,2,35,0,13
	.byte	'Send',0
	.word	22116
	.byte	4,2,35,4,13
	.byte	'Buffer',0
	.word	21705
	.byte	4,2,35,8,13
	.byte	'BufferSize',0
	.word	5487
	.byte	2,2,35,12,0,12
	.byte	'Os_XSigRecvPortConfigType_Tag',0,46,202,1,8,20,13
	.byte	'RecvChannel',0
	.word	22121
	.byte	16,2,35,0,13
	.byte	'SendPort',0
	.word	.L601-.L94
	.byte	4,2,35,16,0,9
	.word	22191
	.byte	10
	.word	22267
	.byte	14
	.byte	'Os_XSigRecvPortConfigRefType',0,49,81,65
	.word	22272
	.byte	9
	.word	22277
	.byte	10
	.word	22314
	.byte	12
	.byte	'Os_Hal_XSigInterruptConfigType_Tag',0,9,149,1,8,4,13
	.byte	'ConfigData',0
	.word	3640
	.byte	4,2,35,0,0,9
	.word	22324
	.byte	10
	.word	22386
	.byte	12
	.byte	'Os_XSigIsrConfigType_Tag',0,46,232,1,8,84,13
	.byte	'IsrCfg',0
	.word	21783
	.byte	68,2,35,0,13
	.byte	'FunctionTable',0
	.word	22091
	.byte	4,2,35,68,13
	.byte	'RecvPortRefs',0
	.word	22319
	.byte	4,2,35,72,13
	.byte	'RecvPortCount',0
	.word	5487
	.byte	2,2,35,76,13
	.byte	'HwConfig',0
	.word	22391
	.byte	4,2,35,80,0,9
	.word	22396
	.byte	10
	.word	22530
	.byte	12
	.byte	'Os_XSigSendPortConfigType_Tag',0,46,213,1,8,28,13
	.byte	'SendChannel',0
	.word	21710
	.byte	16,2,35,0,13
	.byte	'XSigIsr',0
	.word	22535
	.byte	4,2,35,16,13
	.byte	'RecvPort',0
	.word	22272
	.byte	4,2,35,20,13
	.byte	'SendCore',0
	.word	.L597-.L94
	.byte	4,2,35,24,0,9
	.word	22540
.L601:
	.byte	10
	.word	22651
	.byte	16,4
	.word	22656
	.byte	17,0,0,14
	.byte	'Os_XSigIsrConfigRefType',0,49,68,60
	.word	22535
	.byte	9
	.word	22670
	.byte	10
	.word	22702
	.byte	12
	.byte	'Os_XSigConfigType_Tag',0,46,135,2,8,12,13
	.byte	'SendPorts',0
	.word	22661
	.byte	4,2,35,0,13
	.byte	'RecvIsrRefs',0
	.word	22707
	.byte	4,2,35,4,13
	.byte	'RecvIsrCount',0
	.word	5487
	.byte	2,2,35,8,0,9
	.word	22712
	.byte	10
	.word	22803
	.byte	7,51,53,9,1,8
	.byte	'OS_IOCLOCKMODE_NONE',0,0,8
	.byte	'OS_IOCLOCKMODE_INTERRUPTS',0,1,8
	.byte	'OS_IOCLOCKMODE_SPINLOCKS',0,2,8
	.byte	'OS_IOCLOCKMODE_ALL',0,3,0,7,51,67,9,1,8
	.byte	'OS_IOCCHANNELSTATE_DISABLED',0,0,8
	.byte	'OS_IOCCHANNELSTATE_ENABLED',0,1,0,12
	.byte	'Os_IocType_Tag',0,50,146,3,8,1,13
	.byte	'State',0
	.word	22917
	.byte	1,2,35,0,0,18
	.word	22982
	.byte	10
	.word	23019
	.byte	7,50,154,3,9,1,8
	.byte	'Ioc08Receive',0,0,8
	.byte	'Ioc08MultiReceive',0,1,8
	.byte	'Ioc08Send',0,2,8
	.byte	'Ioc16Receive',0,3,8
	.byte	'Ioc16MultiReceive',0,4,8
	.byte	'Ioc16Send',0,5,8
	.byte	'Ioc32Receive',0,6,8
	.byte	'Ioc32MultiReceive',0,7,8
	.byte	'Ioc32Send',0,8,8
	.byte	'IocRefReceive',0,9,8
	.byte	'IocRefMultiReceive',0,10,8
	.byte	'IocRefSend',0,11,8
	.byte	'IocRead',0,12,8
	.byte	'IocWrite',0,13,0,12
	.byte	'Os_IocConfigType_Tag',0,50,174,3,8,20,13
	.byte	'Spinlock',0
	.word	6050
	.byte	4,2,35,0,13
	.byte	'LockMode',0
	.word	22813
	.byte	1,2,35,4,13
	.byte	'Dyn',0
	.word	23024
	.byte	4,2,35,8,13
	.byte	'SubClass',0
	.word	23029
	.byte	1,2,35,12,13
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,14,0,9
	.word	23248
	.byte	10
	.word	23374
	.byte	14
	.byte	'Os_IocConfigRefType',0,19,160,2,54
	.word	23379
	.byte	9
	.word	23384
	.byte	10
	.word	23413
	.byte	7,52,117,9,1,8
	.byte	'OS_BARRIERATTENDEESTATE_DETACHED',0,0,8
	.byte	'OS_BARRIERATTENDEESTATE_ATTACHED',0,1,0,12
	.byte	'Os_BarrierBaseType_Tag',0,52,131,1,8,2,13
	.byte	'AttendeeState',0
	.word	23423
	.byte	1,2,35,0,13
	.byte	'Counter',0
	.word	399
	.byte	1,2,35,1,0,18
	.word	23499
	.byte	10
	.word	23569
	.byte	14
	.byte	'Os_BarrierAttendeeRefType',0,52,115,69
	.word	.L602-.L94
	.byte	9
	.word	23579
	.byte	10
	.word	23613
	.byte	12
	.byte	'Os_BarrierBaseConfigType_Tag',0,52,142,1,8,16,13
	.byte	'Dyn',0
	.word	23574
	.byte	4,2,35,0,13
	.byte	'AttendeeRefs',0
	.word	23618
	.byte	4,2,35,4,13
	.byte	'AttendeeCount',0
	.word	399
	.byte	1,2,35,8,13
	.byte	'TaskPtr',0
	.word	16617
	.byte	4,2,35,12,0,9
	.word	23623
.L602:
	.byte	10
	.word	23734
	.byte	14
	.byte	'Os_BarrierBaseConfigRefType',0,53,62,62
	.word	23739
	.byte	9
	.word	23744
	.byte	10
	.word	23780
	.byte	12
	.byte	'Os_Hal_ContextFpuContextType_Tag',0,7,200,1,9,4,13
	.byte	'DummyFpuFlagRegister',0
	.word	135
	.byte	4,2,35,0,0,12
	.byte	'Os_ThreadClassType_Tag',0,10,109,8,4,13
	.byte	'InitialFpuContext',0
	.word	23790
	.byte	4,2,35,0,0,10
	.word	23860
	.byte	9
	.word	21783
	.byte	10
	.word	23921
	.byte	14
	.byte	'Os_IsrConfigRefType',0,54,66,54
	.word	23926
	.byte	9
	.word	23931
	.byte	10
	.word	23959
	.byte	12
	.byte	'Os_CoreAsrConfigType_Tag',0,19,133,3,8,148,1,13
	.byte	'Core',0
	.word	7453
	.byte	24,2,35,0,13
	.byte	'Dyn',0
	.word	16149
	.byte	4,2,35,24,13
	.byte	'Scheduler',0
	.word	16990
	.byte	4,2,35,28,13
	.byte	'IdleTask',0
	.word	16617
	.byte	4,2,35,32,13
	.byte	'KernelApp',0
	.word	.L596-.L94
	.byte	4,2,35,36,13
	.byte	'KernelStack',0
	.word	5109
	.byte	4,2,35,40,13
	.byte	'PreStartTask',0
	.word	16617
	.byte	4,2,35,44,13
	.byte	'StartupHookRef',0
	.word	17336
	.byte	4,2,35,48,13
	.byte	'ShutdownHookRef',0
	.word	17464
	.byte	4,2,35,52,13
	.byte	'ErrorHookRef',0
	.word	17464
	.byte	4,2,35,56,13
	.byte	'ProtectionHookRef',0
	.word	17763
	.byte	4,2,35,60,13
	.byte	'InitHookRef',0
	.word	17873
	.byte	4,2,35,64,13
	.byte	'HookRefs',0
	.word	17923
	.byte	4,2,35,68,13
	.byte	'HookCount',0
	.word	5487
	.byte	2,2,35,72,13
	.byte	'AppRefs',0
	.word	17962
	.byte	4,2,35,76,13
	.byte	'AppCount',0
	.word	5487
	.byte	2,2,35,80,13
	.byte	'ResourceRefs',0
	.word	18122
	.byte	4,2,35,84,13
	.byte	'ResourceCount',0
	.word	5487
	.byte	2,2,35,88,13
	.byte	'HwConfig',0
	.word	18183
	.byte	4,2,35,92,13
	.byte	'MemoryProtection',0
	.word	18625
	.byte	4,2,35,96,13
	.byte	'TimingProtection',0
	.word	20075
	.byte	4,2,35,100,13
	.byte	'StackRefs',0
	.word	20085
	.byte	4,2,35,104,13
	.byte	'StackCount',0
	.word	5487
	.byte	2,2,35,108,13
	.byte	'CoreIdx',0
	.word	20090
	.byte	1,2,35,110,13
	.byte	'XSignal',0
	.word	22808
	.byte	4,2,35,112,13
	.byte	'IocRefs',0
	.word	23418
	.byte	4,2,35,116,13
	.byte	'IocCount',0
	.word	5487
	.byte	2,2,35,120,13
	.byte	'Barrier',0
	.word	23739
	.byte	4,2,35,124,13
	.byte	'BarrierRefs',0
	.word	23785
	.byte	4,3,35,128,1,13
	.byte	'BarrierCount',0
	.word	5487
	.byte	2,3,35,132,1,13
	.byte	'ThreadClass',0
	.word	23916
	.byte	4,3,35,136,1,13
	.byte	'IsrRefs',0
	.word	23964
	.byte	4,3,35,140,1,13
	.byte	'IsrCount',0
	.word	5487
	.byte	2,3,35,144,1,0,9
	.word	23969
.L597:
	.byte	10
	.word	24663
	.byte	14
	.byte	'Os_TaskConfigRefType',0,18,100,55
	.word	16617
	.byte	9
	.word	24673
	.byte	10
	.word	24702
	.byte	12
	.byte	'Os_IsrCat1ConfigType_Tag',0,20,207,1,8,4,13
	.byte	'SourceConfig',0
	.word	6764
	.byte	4,2,35,0,0,9
	.word	24712
	.byte	10
	.word	24766
	.byte	14
	.byte	'Os_IsrCat1ConfigRefType',0,54,69,58
	.word	24771
	.byte	9
	.word	24776
	.byte	10
	.word	24808
	.byte	14
	.byte	'Os_CounterConfigRefType',0,18,103,58
	.word	18858
	.byte	9
	.word	24818
	.byte	10
	.word	24850
	.byte	7,55,107,9,1,8
	.byte	'OS_ALARMMODE_ABSOLUTE',0,0,8
	.byte	'OS_ALARMMODE_RELATIVE',0,1,0,15,55,127,9,12,13
	.byte	'AlarmTime',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'Cycle',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'ApplicationModes',0
	.word	399
	.byte	1,2,35,8,13
	.byte	'AlarmMode',0
	.word	24860
	.byte	1,2,35,9,0,12
	.byte	'Os_AlarmConfigType_Tag',0,55,169,1,8,32,13
	.byte	'Job',0
	.word	18914
	.byte	12,2,35,0,13
	.byte	'Autostart',0
	.word	24914
	.byte	12,2,35,12,13
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,24,13
	.byte	'OwnerApplication',0
	.word	.L596-.L94
	.byte	4,2,35,28,0,9
	.word	24999
	.byte	10
	.word	25118
	.byte	14
	.byte	'Os_AlarmConfigRefType',0,18,106,56
	.word	25123
	.byte	9
	.word	25128
	.byte	10
	.word	25158
	.byte	7,56,135,2,9,1,8
	.byte	'OS_SCHT_AUTOSTART_NON',0,0,8
	.byte	'OS_SCHT_AUTOSTART_RELATIVE',0,1,8
	.byte	'OS_SCHT_AUTOSTART_SYNCHRON',0,2,8
	.byte	'OS_SCHT_AUTOSTART_ABSOLUTE',0,3,0,12
	.byte	'Os_SchTAutostartConfigType_Tag',0,56,145,2,8,6,13
	.byte	'StartTime',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'AutostartModes',0
	.word	25168
	.byte	1,2,35,4,13
	.byte	'ApplicationModes',0
	.word	399
	.byte	1,2,35,5,0,7,56,251,1,9,1,8
	.byte	'OS_SCHT_SYNC_KIND_NON',0,0,8
	.byte	'OS_SCHT_SYNC_KIND_IMPLICIT',0,1,8
	.byte	'OS_SCHT_SYNC_KIND_EXPLICIT',0,2,0,7,56,186,1,9,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE',0,0,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC',0,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC_ZERO',0,2,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_CYCLIC',0,3,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SINGLE_SHOT',0,4,0,12
	.byte	'Os_SchTExPoActionTaskConfigType_Tag',0,56,178,1,8,4,13
	.byte	'Task',0
	.word	16617
	.byte	4,2,35,0,0,9
	.word	25663
	.byte	10
	.word	25720
	.byte	12
	.byte	'Os_SchTExPoActionEventConfigType_Tag',0,56,166,1,8,12,13
	.byte	'Task',0
	.word	16617
	.byte	4,2,35,0,13
	.byte	'EventMask',0
	.word	11699
	.byte	8,2,35,4,0,9
	.word	25730
	.byte	10
	.word	25807
	.byte	12
	.byte	'Os_SchTExPoConfigType_Tag',0,56,202,1,8,28,13
	.byte	'Next',0
	.word	.L603-.L94
	.byte	4,2,35,0,13
	.byte	'Kind',0
	.word	25482
	.byte	1,2,35,4,13
	.byte	'Tasks',0
	.word	25725
	.byte	4,2,35,8,13
	.byte	'TaskCount',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'Events',0
	.word	25812
	.byte	4,2,35,16,13
	.byte	'EventCount',0
	.word	135
	.byte	4,2,35,20,13
	.byte	'RelOffsetToNext',0
	.word	135
	.byte	4,2,35,24,0,9
	.word	25817
.L603:
	.byte	10
	.word	25973
	.byte	12
	.byte	'Os_SchTConfigType_Tag',0,56,156,2,8,36,13
	.byte	'Job',0
	.word	18914
	.byte	12,2,35,0,13
	.byte	'Autostart',0
	.word	25286
	.byte	6,2,35,12,13
	.byte	'SyncKind',0
	.word	25393
	.byte	1,2,35,18,13
	.byte	'AccessingApplications',0
	.word	135
	.byte	4,2,35,20,13
	.byte	'OwnerApplication',0
	.word	.L596-.L94
	.byte	4,2,35,24,13
	.byte	'ExPoHead',0
	.word	25978
	.byte	4,2,35,28,13
	.byte	'InitialNext',0
	.word	.L604-.L94
	.byte	4,2,35,32,0,9
	.word	25983
.L604:
	.byte	10
	.word	26158
	.byte	14
	.byte	'Os_SchTConfigRefType',0,18,109,55
	.word	26163
	.byte	9
	.word	26168
	.byte	10
	.word	26197
	.byte	12
	.byte	'Os_Hal_MpAppConfigType_Tag',0,37,114,8,36,13
	.byte	'ProtectionSet',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'MpuDataRegionStartSlot',0
	.word	399
	.byte	1,2,35,1,13
	.byte	'MpuDataRegionCount',0
	.word	399
	.byte	1,2,35,2,13
	.byte	'MpuDataRegions',0
	.word	18241
	.byte	4,2,35,4,13
	.byte	'MpuDataRegionEnableMask',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'MpuDataRegionReadEnable',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'MpuDataRegionWriteEnable',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'MpuCodeRegionStartSlot',0
	.word	399
	.byte	1,2,35,20,13
	.byte	'MpuCodeRegionCount',0
	.word	399
	.byte	1,2,35,21,13
	.byte	'MpuCodeRegions',0
	.word	18241
	.byte	4,2,35,24,13
	.byte	'MpuCodeRegionEnableMask',0
	.word	135
	.byte	4,2,35,28,13
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	135
	.byte	4,2,35,32,0,9
	.word	26207
	.byte	10
	.word	26602
	.byte	12
	.byte	'Os_Hal_MpThreadConfigType_Tag',0,37,139,1,8,36,13
	.byte	'ProtectionSet',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'MpuDataRegionStartSlot',0
	.word	399
	.byte	1,2,35,1,13
	.byte	'MpuDataRegionCount',0
	.word	399
	.byte	1,2,35,2,13
	.byte	'MpuDataRegions',0
	.word	18241
	.byte	4,2,35,4,13
	.byte	'MpuDataRegionEnableMask',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'MpuDataRegionReadEnable',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'MpuDataRegionWriteEnable',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'MpuCodeRegionStartSlot',0
	.word	399
	.byte	1,2,35,20,13
	.byte	'MpuCodeRegionCount',0
	.word	399
	.byte	1,2,35,21,13
	.byte	'MpuCodeRegions',0
	.word	18241
	.byte	4,2,35,24,13
	.byte	'MpuCodeRegionEnableMask',0
	.word	135
	.byte	4,2,35,28,13
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	135
	.byte	4,2,35,32,0,9
	.word	26612
	.byte	10
	.word	27011
	.byte	12
	.byte	'Os_MpAccessRightsType_Tag',0,36,132,1,8,8,13
	.byte	'AppAccessRights',0
	.word	26607
	.byte	4,2,35,0,13
	.byte	'ThreadAccessRights',0
	.word	27016
	.byte	4,2,35,4,0,9
	.word	27021
	.byte	10
	.word	27107
	.byte	7,57,117,9,1,8
	.byte	'OS_SERVICE_TRUSTEDFUNCTION',0,0,8
	.byte	'OS_SERVICE_NONTRUSTEDFUNCTION',0,1,8
	.byte	'OS_SERVICE_FASTTRUSTEDFUNCTION',0,2,0,12
	.byte	'Os_ServiceConfigType_Tag',0,57,209,1,8,12,13
	.byte	'OwnerApplication',0
	.word	.L596-.L94
	.byte	4,2,35,0,13
	.byte	'MpAccessRights',0
	.word	27112
	.byte	4,2,35,4,13
	.byte	'ServiceType',0
	.word	27117
	.byte	1,2,35,8,0,9
	.word	27217
	.byte	10
	.word	27320
	.byte	14
	.byte	'Os_ServiceConfigRefType',0,18,112,58
	.word	27325
	.byte	9
	.word	27330
	.byte	10
	.word	27362
.L600:
	.byte	12
	.byte	'Os_AppConfigType_Tag',0,18,126,8,96,13
	.byte	'Dyn',0
	.word	6186
	.byte	4,2,35,0,13
	.byte	'Core',0
	.word	24668
	.byte	4,2,35,4,13
	.byte	'AccessRightId',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'TaskRefs',0
	.word	24707
	.byte	4,2,35,12,13
	.byte	'TaskCount',0
	.word	5487
	.byte	2,2,35,16,13
	.byte	'IsrCat2Refs',0
	.word	23964
	.byte	4,2,35,20,13
	.byte	'IsrCat2Count',0
	.word	5487
	.byte	2,2,35,24,13
	.byte	'IsrCat1Refs',0
	.word	24813
	.byte	4,2,35,28,13
	.byte	'IsrCat1Count',0
	.word	5487
	.byte	2,2,35,32,13
	.byte	'CounterRefs',0
	.word	24855
	.byte	4,2,35,36,13
	.byte	'CounterCount',0
	.word	5487
	.byte	2,2,35,40,13
	.byte	'AlarmRefs',0
	.word	25163
	.byte	4,2,35,44,13
	.byte	'AlarmCount',0
	.word	5487
	.byte	2,2,35,48,13
	.byte	'SchTRefs',0
	.word	26202
	.byte	4,2,35,52,13
	.byte	'SchTCount',0
	.word	5487
	.byte	2,2,35,56,13
	.byte	'ServiceFunctions',0
	.word	27367
	.byte	4,2,35,60,13
	.byte	'ServiceFunctionCount',0
	.word	5487
	.byte	2,2,35,64,13
	.byte	'StartupHookRef',0
	.word	17336
	.byte	4,2,35,68,13
	.byte	'ShutdownHookRef',0
	.word	17464
	.byte	4,2,35,72,13
	.byte	'ErrorHookRef',0
	.word	17464
	.byte	4,2,35,76,13
	.byte	'HookRefs',0
	.word	17923
	.byte	4,2,35,80,13
	.byte	'HookCount',0
	.word	5487
	.byte	2,2,35,84,13
	.byte	'RestartTask',0
	.word	16617
	.byte	4,2,35,88,13
	.byte	'IsTrusted',0
	.word	399
	.byte	1,2,35,92,13
	.byte	'IsPrivileged',0
	.word	399
	.byte	1,2,35,93,13
	.byte	'HasTimingProtectionDelay',0
	.word	399
	.byte	1,2,35,94,13
	.byte	'Id',0
	.word	11553
	.byte	1,2,35,95,0,9
	.word	27372
.L596:
	.byte	10
	.word	27963
	.byte	15,57,126,9,8,13
	.byte	'FunctionIndex',0
	.word	12644
	.byte	1,2,35,0,13
	.byte	'FunctionParams',0
	.word	12685
	.byte	4,2,35,4,0,15,57,136,1,9,8,13
	.byte	'FunctionIndex',0
	.word	12929
	.byte	1,2,35,0,13
	.byte	'FunctionParams',0
	.word	12968
	.byte	4,2,35,4,0,15,57,146,1,9,8,13
	.byte	'FunctionIndex',0
	.word	13015
	.byte	1,2,35,0,13
	.byte	'FunctionParams',0
	.word	13055
	.byte	4,2,35,4,0,26,57,157,1,9,8,13
	.byte	'TrustedFunctionParameters',0
	.word	27973
	.byte	8,2,35,0,13
	.byte	'NonTrustedFunctionParameters',0
	.word	28026
	.byte	8,2,35,0,13
	.byte	'FastTrustedFunctionParameters',0
	.word	28080
	.byte	8,2,35,0,0,12
	.byte	'Os_ServiceCallType_Tag',0,57,167,1,8,56,13
	.byte	'PrevApplication',0
	.word	27968
	.byte	4,2,35,0,13
	.byte	'PrevMpAccessRights',0
	.word	27112
	.byte	4,2,35,4,13
	.byte	'PrevServiceCalls',0
	.word	.L605-.L94
	.byte	4,2,35,8,13
	.byte	'CallerContext',0
	.word	4841
	.byte	28,2,35,12,13
	.byte	'ServiceCallContext',0
	.word	5024
	.byte	4,2,35,40,13
	.byte	'Service',0
	.word	27325
	.byte	4,2,35,44,13
	.byte	'Parameters',0
	.word	28134
	.byte	8,2,35,48,0
.L605:
	.byte	10
	.word	28253
	.byte	12
	.byte	'Os_ThreadType_Tag',0,10,117,8,24,13
	.byte	'Locks',0
	.word	5345
	.byte	4,2,35,0,13
	.byte	'Spinlocks',0
	.word	6055
	.byte	4,2,35,4,13
	.byte	'Application',0
	.word	27968
	.byte	4,2,35,8,13
	.byte	'MpAccessRights',0
	.word	27112
	.byte	4,2,35,12,13
	.byte	'ServiceCalls',0
	.word	28450
	.byte	4,2,35,16,13
	.byte	'CallContext',0
	.word	5487
	.byte	2,2,35,20,0,10
	.word	28455
	.byte	10
	.word	7820
	.byte	7,38,146,2,9,1,8
	.byte	'OS_TPTHREADKIND_OWNER',0,0,8
	.byte	'OS_TPTHREADKIND_HEIR',0,1,8
	.byte	'OS_TPTHREADKIND_TPISR',0,2,0,12
	.byte	'Os_TpThreadConfigType_Tag',0,38,202,2,8,1,13
	.byte	'ThreadKind',0
	.word	28611
	.byte	1,2,35,0,0,9
	.word	28689
	.byte	10
	.word	28742
	.byte	7,3,211,6,9,1,8
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,8
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,8
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,8
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,8
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,8
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,8
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,8
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,8
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,8
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,8
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,8
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,15,58,90,9,12,13
	.byte	'AddressStart',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'AddressEnd',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'AccessRights',0
	.word	28752
	.byte	1,2,35,8,0,9
	.word	29255
	.byte	10
	.word	29325
	.byte	12
	.byte	'Os_AccessCheckConfigType_Tag',0,58,99,8,8,13
	.byte	'Regions',0
	.word	29330
	.byte	4,2,35,0,13
	.byte	'RegionCount',0
	.word	399
	.byte	1,2,35,4,0,9
	.word	29335
	.byte	10
	.word	29408
	.byte	10
	.word	23790
	.byte	14
	.byte	'Os_PreThreadHookCbkType',0,59,196,3,9
	.word	17226
.L595:
	.byte	12
	.byte	'Os_ThreadConfigType_Tag',0,10,141,1,8,60,13
	.byte	'ContextConfig',0
	.word	4729
	.byte	4,2,35,0,13
	.byte	'Context',0
	.word	5024
	.byte	4,2,35,4,13
	.byte	'Stack',0
	.word	5109
	.byte	4,2,35,8,13
	.byte	'Dyn',0
	.word	28601
	.byte	4,2,35,12,13
	.byte	'OwnerApplication',0
	.word	27968
	.byte	4,2,35,16,13
	.byte	'Core',0
	.word	24668
	.byte	4,2,35,20,13
	.byte	'IntApiState',0
	.word	28606
	.byte	4,2,35,24,13
	.byte	'TimeProtConfig',0
	.word	28747
	.byte	4,2,35,28,13
	.byte	'MpAccessRightsInitial',0
	.word	27112
	.byte	4,2,35,32,13
	.byte	'AccessRights',0
	.word	29413
	.byte	4,2,35,36,13
	.byte	'Trace',0
	.word	7344
	.byte	4,2,35,40,13
	.byte	'FpuContext',0
	.word	29418
	.byte	4,2,35,44,13
	.byte	'InitialCallContext',0
	.word	5487
	.byte	2,2,35,48,13
	.byte	'PreThreadHook',0
	.word	29423
	.byte	4,2,35,52,13
	.byte	'InitDuringStartUp',0
	.word	399
	.byte	1,2,35,56,13
	.byte	'UsesFpu',0
	.word	399
	.byte	1,2,35,57,0,9
	.word	29456
.L594:
	.byte	10
	.word	29823
	.byte	12
	.byte	'Os_Hal_Core2ThreadType_Tag',0,9,135,1,8,4,13
	.byte	'Thread',0
	.word	29828
	.byte	4,2,35,0,0,10
	.word	29833
	.byte	16,4
	.word	29883
	.byte	17,0,0,12
	.byte	'Os_Hal_Core2ThreadConfigType_Tag',0,9,143,1,8,4,13
	.byte	'Core2Thread',0
	.word	29888
	.byte	4,2,35,0,0,9
	.word	29897
	.byte	10
	.word	29958
.L338:
	.byte	6
	.byte	'Os_Hal_CoreSetThread',0,3,8,130,1,1,1,1
.L339:
	.byte	5
	.byte	'Core2Thread',0,8,130,1,1
	.word	29963
.L341:
	.byte	5
	.byte	'Thread',0,8,130,1,1
	.word	29828
.L343:
	.byte	11,4,4,0,0,9
	.word	5249
	.byte	10
	.word	30039
	.byte	9
	.word	5872
	.byte	10
	.word	30049
	.byte	9
	.word	6644
	.byte	10
	.word	30059
	.byte	9
	.word	29456
	.byte	10
	.word	30069
	.byte	10
	.word	11257
	.byte	10
	.word	6083
	.byte	9
	.word	11846
	.byte	10
	.word	30089
	.byte	10
	.word	11989
	.byte	10
	.word	12374
	.byte	10
	.word	12540
	.byte	10
	.word	135
	.byte	10
	.word	11846
	.byte	10
	.word	11846
	.byte	10
	.word	11846
	.byte	10
	.word	135
	.byte	10
	.word	135
	.byte	10
	.word	11195
	.byte	10
	.word	13296
	.byte	9
	.word	11846
	.byte	10
	.word	30154
	.byte	9
	.word	5034
	.byte	10
	.word	30164
	.byte	10
	.word	17223
	.byte	10
	.word	17341
	.byte	10
	.word	17628
	.byte	10
	.word	17341
	.byte	9
	.word	17103
	.byte	10
	.word	30194
	.byte	9
	.word	27372
	.byte	10
	.word	30204
	.byte	9
	.word	17967
	.byte	10
	.word	30214
	.byte	10
	.word	18873
	.byte	10
	.word	21921
	.byte	9
	.word	22191
	.byte	10
	.word	30234
	.byte	9
	.word	22396
	.byte	10
	.word	30244
	.byte	9
	.word	23248
	.byte	10
	.word	30254
	.byte	9
	.word	23623
	.byte	10
	.word	30264
	.byte	9
	.word	23623
	.byte	10
	.word	30274
	.byte	9
	.word	21783
	.byte	10
	.word	30284
	.byte	9
	.word	16321
	.byte	10
	.word	30294
	.byte	9
	.word	24712
	.byte	10
	.word	30304
	.byte	9
	.word	19243
	.byte	10
	.word	30314
	.byte	9
	.word	24999
	.byte	10
	.word	30324
	.byte	9
	.word	25983
	.byte	10
	.word	30334
	.byte	9
	.word	27217
	.byte	10
	.word	30344
	.byte	10
	.word	17223
.L230:
	.byte	3
	.byte	'Os_Hal_CoreGetThread',0,3,8,169,1,1
	.word	29828
	.byte	1,1
.L231:
	.byte	5
	.byte	'Core2Thread',0,8,169,1,1
	.word	29963
.L233:
	.byte	11,4,0,0,3
	.byte	'Os_Hal_CountLeadingZeros',0,3,8,128,2,1
	.word	399
	.byte	1,1,5
	.byte	'BitField',0,8,128,2,1
	.word	135
	.byte	4,0,3
	.byte	'Os_Hal_StackEndGet',0,3,8,141,2,1
	.word	5029
	.byte	1,1,5
	.byte	'LowAddress',0,8,141,2,1
	.word	5029
	.byte	5
	.byte	'HighAddress',0,8,141,2,1
	.word	5029
	.byte	4,0,18
	.word	135
	.byte	10
	.word	30548
	.byte	6
	.byte	'Os_Hal_SpinInit',0,3,8,216,2,1,1,1,5
	.byte	'Spinlock',0,8,216,2,1
	.word	30553
	.byte	4,0,18
	.word	135
	.byte	9
	.word	30602
	.byte	10
	.word	30607
	.byte	3
	.byte	'Os_Hal_SpinIsLocked',0,3,8,231,2,1
	.word	236
	.byte	1,1,5
	.byte	'Spinlock',0,8,231,2,1
	.word	30612
	.byte	4,0,3
	.byte	'Os_Hal_SpinTryLock',0,3,8,245,2,1
	.word	135
	.byte	1,1,5
	.byte	'Spinlock',0,8,245,2,1
	.word	30553
	.byte	4,0,6
	.byte	'Os_Hal_SpinUnlock',0,3,8,133,3,1,1,1,5
	.byte	'Spinlock',0,8,133,3,1
	.word	30553
	.byte	4,0,6
	.byte	'Os_Hal_CoreNop',0,3,8,209,3,1,1,1,4,0
.L321:
	.byte	6
	.byte	'Os_StackOverflowCheck',0,3,60,138,1,1,1,1
.L322:
	.byte	11
.L323:
	.byte	4,4,4,0,0,10
	.word	7700
.L166:
	.byte	6
	.byte	'Os_IntSuspend',0,3,61,126,1,1,1
.L169:
	.byte	5
	.byte	'State',0,61,126,1
	.word	30827
.L171:
	.byte	11,4,4,0,0,9
	.word	7700
	.byte	10
	.word	30872
.L205:
	.byte	6
	.byte	'Os_IntResume',0,3,61,166,1,1,1,1
.L207:
	.byte	5
	.byte	'State',0,61,166,1,1
	.word	30877
.L209:
	.byte	11,4,0,0,9
	.word	7820
	.byte	10
	.word	30922
	.byte	3
	.byte	'Os_InterruptCheckEnabled',0,3,61,211,1,1
	.word	236
	.byte	1,1,5
	.byte	'InterruptState',0,61,211,1,1
	.word	30927
	.byte	11,4,0,0,6
	.byte	'Os_InterruptCleanup',0,3,61,231,1,1,1,1,5
	.byte	'InterruptState',0,61,231,1,1
	.word	28606
	.byte	4,0,6
	.byte	'Os_InterruptTpLockAllStart',0,3,61,142,3,1,1,1,5
	.byte	'Thread',0,61,142,3,1
	.word	29828
	.byte	11,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockAllStop',0,3,61,167,3,1,1,1,5
	.byte	'Thread',0,61,167,3,1
	.word	29828
	.byte	11,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStart',0,3,61,192,3,1,1,1,5
	.byte	'Thread',0,61,192,3,1
	.word	29828
	.byte	11,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStop',0,3,61,217,3,1,1,1,5
	.byte	'Thread',0,61,217,3,1
	.word	29828
	.byte	11,4,4,4,0,0,3
	.byte	'Os_Bit_CountLeadingZeros',0,3,62,123,1
	.word	399
	.byte	1,1,5
	.byte	'BitField',0,62,123,1
	.word	135
	.byte	11,4,4,0,0,9
	.word	16194
	.byte	10
	.word	31333
	.byte	3
	.byte	'Os_BitArrayIdxIsValid',0,3,63,79,1
	.word	5487
	.byte	1,1,5
	.byte	'BitArray',0,63,79,1
	.word	31338
	.byte	5
	.byte	'BitIdx',0,63,79,1
	.word	5487
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetAllocationIdx',0,3,63,108,1
	.word	5487
	.byte	1,1,5
	.byte	'BitArrayIdx',0,63,108,1
	.word	135
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetFieldIdx',0,3,63,127,1
	.word	5487
	.byte	1,1,5
	.byte	'BitArrayIdx',0,63,127,1
	.word	5487
	.byte	4,0,6
	.byte	'Os_BitArraySetBitInternal',0,3,63,181,1,1,1,1,5
	.byte	'BitArray',0,63,181,1,1
	.word	31338
	.byte	5
	.byte	'BitIdx',0,63,181,1,1
	.word	5487
	.byte	11,4,4,4,4,0,0
.L374:
	.byte	10
	.word	135
	.byte	9
	.word	135
	.byte	6
	.byte	'Os_DequeIdxDecrement',0,3,64,91,1,1,1,5
	.byte	'Index',0,64,91,1
	.word	31608
	.byte	5
	.byte	'Size',0,64,91,1
	.word	31613
	.byte	4,0,9
	.word	135
	.byte	6
	.byte	'Os_DequeIdxIncrement',0,3,64,116,1,1,1,5
	.byte	'Index',0,64,116,1
	.word	31608
	.byte	5
	.byte	'Size',0,64,116,1
	.word	31675
	.byte	4,0,3
	.byte	'Os_SchedulerPriorityIsHigherOrEqual',0,3,65,115,1
	.word	236
	.byte	1,1,5
	.byte	'PrioX',0,65,115,1
	.word	5487
	.byte	5
	.byte	'PrioY',0,65,115,1
	.word	5487
	.byte	4,0,3
	.byte	'Os_SchedulerGetCurrentTask',0,3,65,143,1,1
	.word	16617
	.byte	1,1,5
	.byte	'Scheduler',0,65,143,1,1
	.word	16990
	.byte	4,0,3
	.byte	'Os_SchedulerTaskSwitchIsNeeded',0,3,65,156,1,1
	.word	236
	.byte	1,1,5
	.byte	'Scheduler',0,65,156,1,1
	.word	16990
	.byte	4,0,10
	.word	5345
	.byte	6
	.byte	'Os_LockListInit',0,3,66,90,1,1,1,5
	.byte	'LockList',0,66,90,1
	.word	31938
	.byte	4,0,9
	.word	5345
	.byte	10
	.word	31985
	.byte	3
	.byte	'Os_LockListNext',0,3,66,168,1,1
	.word	5340
	.byte	1,1,5
	.byte	'LockList',0,66,168,1,1
	.word	31990
	.byte	4,0,3
	.byte	'Os_LockListNextIterator',0,3,66,180,1,1
	.word	31938
	.byte	1,1,5
	.byte	'Iterator',0,66,180,1,1
	.word	31990
	.byte	4,0,3
	.byte	'Os_LockListIsEmpty',0,3,66,193,1,1
	.word	236
	.byte	1,1,5
	.byte	'LockList',0,66,193,1,1
	.word	31990
	.byte	4,0
.L447:
	.byte	3
	.byte	'Os_LockListIsTopRes',0,3,66,213,1,1
	.word	236
	.byte	1,1
.L449:
	.byte	5
	.byte	'LockList',0,66,213,1,1
	.word	31990
.L451:
	.byte	11,4,4,0,0,3
	.byte	'Os_LockListIsTopSpinlock',0,3,66,131,2,1
	.word	236
	.byte	1,1,5
	.byte	'LockList',0,66,131,2,1
	.word	31990
	.byte	11,4,0,0,6
	.byte	'Os_LockInit',0,3,66,169,2,1,1,1,5
	.byte	'Lock',0,66,169,2,1
	.word	5340
	.byte	4,0
.L452:
	.byte	3
	.byte	'Os_LockIsResource',0,3,66,195,2,1
	.word	236
	.byte	1,1
.L453:
	.byte	5
	.byte	'Lock',0,66,195,2,1
	.word	5340
.L455:
	.byte	4,0,3
	.byte	'Os_LockGetAccessingApplications',0,3,66,250,2,1
	.word	135
	.byte	1,1,5
	.byte	'Lock',0,66,250,2,1
	.word	5340
	.byte	4,0,3
	.byte	'Os_LockGetDyn',0,3,66,237,2,1
	.word	5150
	.byte	1,1,5
	.byte	'Lock',0,66,237,2,1
	.word	5340
	.byte	4,0,10
	.word	6055
	.byte	6
	.byte	'Os_SpinlockListInit',0,3,67,106,1,1,1,5
	.byte	'LockList',0,67,106,1
	.word	32448
	.byte	4,0,18
	.word	135
	.byte	12
	.byte	'Os_SpinlockType_Tag',0,14,189,1,8,20,13
	.byte	'Lock',0
	.word	5114
	.byte	4,2,35,0,13
	.byte	'OwnerThread',0
	.word	29828
	.byte	4,2,35,4,13
	.byte	'PreviousSpinlock',0
	.word	6050
	.byte	4,2,35,8,13
	.byte	'Spinlock',0
	.word	32499
	.byte	4,2,35,12,13
	.byte	'PreviousPriority',0
	.word	5487
	.byte	2,2,35,16,0,10
	.word	32504
	.byte	3
	.byte	'Os_SpinlockGetDyn',0,3,67,150,1,1
	.word	32636
	.byte	1,1,5
	.byte	'Spinlock',0,67,150,1,1
	.word	6050
	.byte	11,4,0,0,3
	.byte	'Os_SpinlockInternalTryGet',0,3,67,132,2,1
	.word	135
	.byte	1,1,5
	.byte	'Spinlock',0,67,132,2,1
	.word	6050
	.byte	11,4,4,4,4,0,0
.L224:
	.byte	3
	.byte	'Os_CoreAsrIsCoreLocal',0,3,68,126,1
	.word	236
	.byte	1,1
.L225:
	.byte	5
	.byte	'Core',0,68,126,1
	.word	24668
.L227:
	.byte	11,4,0,0,9
	.word	7453
	.byte	10
	.word	32806
.L327:
	.byte	3
	.byte	'Os_CoreGetCurrentCore',0,3,68,245,1,1
	.word	32811
	.byte	1,1
.L328:
	.byte	11,4,0,0,3
	.byte	'Os_Core2AsrCore',0,3,68,204,1,1
	.word	24668
	.byte	1,1,5
	.byte	'Core',0,68,204,1,1
	.word	32811
	.byte	11,4,0,0,3
	.byte	'Os_CoreAsrGetDyn',0,3,68,153,1,1
	.word	16149
	.byte	1,1,5
	.byte	'Core',0,68,153,1,1
	.word	24668
	.byte	4,0,3
	.byte	'Os_CoreAsrGetTimingProtection',0,3,68,166,1,1
	.word	20075
	.byte	1,1,5
	.byte	'Core',0,68,166,1,1
	.word	24668
	.byte	4,0,3
	.byte	'Os_CoreIsAsrCore',0,3,68,154,2,1
	.word	236
	.byte	1,1,5
	.byte	'Core',0,68,154,2,1
	.word	32811
	.byte	4,0,3
	.byte	'Os_CoreIsStartedAsAsr',0,3,68,167,2,1
	.word	236
	.byte	1,1,5
	.byte	'Core',0,68,167,2,1
	.word	32811
	.byte	4,0,7,19,239,1,9,1,8
	.byte	'OS_COREOSSTATE_INITIALZE',0,0,8
	.byte	'OS_COREOSSTATE_PRESTARTTASK',0,1,8
	.byte	'OS_COREOSSTATE_STARTED',0,2,0,12
	.byte	'Os_CoreAsrStatusType_Tag',0,19,135,2,8,8,13
	.byte	'Core',0
	.word	6292
	.byte	2,2,35,0,13
	.byte	'OsState',0
	.word	33098
	.byte	1,2,35,2,13
	.byte	'ApplicationMode',0
	.word	399
	.byte	1,2,35,3,13
	.byte	'CriticalUserSection',0
	.word	135
	.byte	4,2,35,4,0,18
	.word	33187
	.byte	10
	.word	33304
	.byte	3
	.byte	'Os_CoreAsrGetAsrStatus',0,3,68,232,2,1
	.word	33309
	.byte	1,1,5
	.byte	'Core',0,68,232,2,1
	.word	24668
	.byte	4,0,3
	.byte	'Os_CoreGetIdleTask',0,3,68,246,3,1
	.word	16617
	.byte	1,1,5
	.byte	'Core',0,68,246,3,1
	.word	24668
	.byte	4,0,3
	.byte	'Os_CoreGetKernelApp',0,3,68,131,4,1
	.word	27968
	.byte	1,1,5
	.byte	'Core',0,68,131,4,1
	.word	24668
	.byte	4,0
.L299:
	.byte	3
	.byte	'Os_CoreGetScheduler',0,3,68,144,4,1
	.word	16990
	.byte	1,1
.L301:
	.byte	5
	.byte	'Core',0,68,144,4,1
	.word	24668
.L303:
	.byte	4,0,3
	.byte	'Os_CoreInterruptedThreadsGetTopIdx',0,3,68,149,5,1
	.word	7989
	.byte	1,1,5
	.byte	'Core',0,68,149,5,1
	.word	24668
	.byte	11,4,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsGet',0,3,68,169,5,1
	.word	29828
	.byte	1,1,5
	.byte	'Core',0,68,169,5,1
	.word	24668
	.byte	5
	.byte	'Idx',0,68,169,5,1
	.word	7989
	.byte	11,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsMoveDown',0,3,68,209,5,1
	.word	7989
	.byte	1,1,5
	.byte	'Iterator',0,68,209,5,1
	.word	7989
	.byte	4,0
.L333:
	.byte	6
	.byte	'Os_CoreSetThread',0,3,68,224,5,1,1,1
.L335:
	.byte	5
	.byte	'Thread',0,68,224,5,1
	.word	29828
.L337:
	.byte	11,4,4,4,0,0
.L228:
	.byte	3
	.byte	'Os_CoreGetThread',0,3,68,238,5,1
	.word	29828
	.byte	1,1
.L229:
	.byte	11,4,4,4,0,0
.L359:
	.byte	6
	.byte	'Os_CoreSetCurrentStack',0,3,68,252,5,1,1,1
.L361:
	.byte	5
	.byte	'Stack',0,68,252,5,1
	.word	5109
.L363:
	.byte	5
	.byte	'Core',0,68,252,5,1
	.word	24668
.L365:
	.byte	11,4,0,0
.L324:
	.byte	3
	.byte	'Os_CoreGetCurrentStack',0,3,68,142,6,1
	.word	5109
	.byte	1,1
.L326:
	.byte	11,4,4,4,0,0,14
	.byte	'Os_SpinlockConfigRefType',0,19,152,2,59
	.word	6050
	.byte	9
	.word	33899
	.byte	10
	.word	33933
	.byte	9
	.word	135
	.byte	10
	.word	33943
	.byte	12
	.byte	'Os_Hal_MpSystemConfigType_Tag',0,37,83,8,4,13
	.byte	'SysMpuId',0
	.word	135
	.byte	4,2,35,0,0,9
	.word	33953
	.byte	10
	.word	34007
	.byte	12
	.byte	'Os_MpSystemConfigType_Tag',0,36,114,8,4,13
	.byte	'HwConfig',0
	.word	34012
	.byte	4,2,35,0,0,9
	.word	34017
	.byte	10
	.word	34067
	.byte	12
	.byte	'Os_SystemConfigType_Tag',0,19,238,3,8,40,13
	.byte	'VersionInfo',0
	.word	12248
	.byte	8,2,35,0,13
	.byte	'NumberOfAsrCores',0
	.word	20090
	.byte	1,2,35,8,13
	.byte	'SpinlockRefs',0
	.word	33938
	.byte	4,2,35,12,13
	.byte	'SpinlockCount',0
	.word	5487
	.byte	2,2,35,16,13
	.byte	'HwConfig',0
	.word	33948
	.byte	4,2,35,20,13
	.byte	'MemoryProtection',0
	.word	34072
	.byte	4,2,35,24,13
	.byte	'InterruptSourceRefs',0
	.word	6815
	.byte	4,2,35,28,13
	.byte	'InterruptSourceCount',0
	.word	5487
	.byte	2,2,35,32,13
	.byte	'Core2Thread',0
	.word	29963
	.byte	4,2,35,36,0,9
	.word	34077
	.byte	10
	.word	34324
	.byte	3
	.byte	'Os_SystemGet',0,3,68,160,6,1
	.word	34329
	.byte	1,1,4,0,9
	.word	5872
	.byte	10
	.word	34361
	.byte	3
	.byte	'Os_SystemGetCore2Thread',0,3,68,173,6,1
	.word	29963
	.byte	1,1,5
	.byte	'System',0,68,173,6,1
	.word	34329
	.byte	4,0,6
	.byte	'Os_Hal_ProgramDataRegions',0,3,69,174,2,1,1,1,5
	.byte	'StartSlot',0,69,174,2,1
	.word	399
	.byte	5
	.byte	'Count',0,69,174,2,1
	.word	399
	.byte	5
	.byte	'RegionsConfig',0,69,174,2,1
	.word	18241
	.byte	4,0,6
	.byte	'Os_Hal_ProgramCodeRegions',0,3,69,202,2,1,1,1,5
	.byte	'StartSlot',0,69,202,2,1
	.word	399
	.byte	5
	.byte	'Count',0,69,202,2,1
	.word	399
	.byte	5
	.byte	'RegionsConfig',0,69,202,2,1
	.word	18241
	.byte	4,0,6
	.byte	'Os_Hal_ContextInit',0,3,70,96,1,1,1,5
	.byte	'Config',0,70,96,1
	.word	4729
	.byte	5
	.byte	'Context',0,70,96,1
	.word	5024
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReset',0,3,70,147,1,1,1,1,5
	.byte	'Config',0,70,147,1,1
	.word	4729
	.byte	5
	.byte	'Context',0,70,147,1,1
	.word	5024
	.byte	11,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextSetParameter',0,3,70,194,1,1,1,1,5
	.byte	'Context',0,70,194,1,1
	.word	5024
	.byte	5
	.byte	'Parameter',0,70,194,1,1
	.word	11857
	.byte	4,0,12
	.byte	'Os_Hal_ContextStackConfigType_Tag',0,7,189,1,8,8,13
	.byte	'StackRegionStart',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'StackRegionEnd',0
	.word	135
	.byte	4,2,35,4,0,9
	.word	34818
	.byte	10
	.word	34909
	.byte	6
	.byte	'Os_Hal_ContextSetStack',0,3,70,213,1,1,1,1,5
	.byte	'Context',0,70,213,1,1
	.word	5024
	.byte	5
	.byte	'Stack',0,70,213,1,1
	.word	34914
	.byte	4,0,9
	.word	135
	.byte	10
	.word	34984
	.byte	6
	.byte	'Os_Hal_ContextSetInterruptState',0,3,70,250,1,1,1,1,5
	.byte	'Context',0,70,250,1,1
	.word	5024
	.byte	5
	.byte	'InterruptState',0,70,250,1,1
	.word	34989
	.byte	4,0
.L367:
	.byte	6
	.byte	'Os_Hal_ContextSetUserMsrBits',0,3,70,143,2,1,1,1
.L369:
	.byte	5
	.byte	'Context',0,70,143,2,1
	.word	5024
.L371:
	.byte	4,0,9
	.word	4841
	.byte	10
	.word	35133
	.byte	6
	.byte	'Os_Hal_ContextFirstResume',0,3,70,173,2,1,1,1,5
	.byte	'Next',0,70,173,2,1
	.word	35138
	.byte	11,4,4,4,0,0,6
	.byte	'Os_Hal_ContextResetAndResume',0,3,70,220,2,1,1,1,5
	.byte	'CurrentConfig',0,70,220,2,1
	.word	4729
	.byte	5
	.byte	'Current',0,70,220,2,1
	.word	5024
	.byte	5
	.byte	'Next',0,70,220,2,1
	.word	35138
	.byte	11,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextAbort',0,3,70,145,3,1,1,1,5
	.byte	'Config',0,70,145,3,1
	.word	4729
	.byte	5
	.byte	'Context',0,70,145,3,1
	.word	5024
	.byte	11,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReturn',0,3,70,204,3,1,1,1,5
	.byte	'Current',0,70,204,3,1
	.word	35138
	.byte	5
	.byte	'Next',0,70,204,3,1
	.word	35138
	.byte	11,4,4,4,0,0,6
	.byte	'Os_Hal_ContextIntCleanupCSAs',0,3,70,133,4,1,1,1,5
	.byte	'Context',0,70,133,4,1
	.word	35138
	.byte	5
	.byte	'PreviousGlobalIntState',0,70,133,4,1
	.word	3162
	.byte	11,4,0,0,6
	.byte	'Os_Hal_ContextIntPrepareCSAContent',0,3,70,178,4,1,1,1,5
	.byte	'CurrentConfig',0,70,178,4,1
	.word	4729
	.byte	5
	.byte	'Context',0,70,178,4,1
	.word	5024
	.byte	11,4,0,0,6
	.byte	'Os_Hal_ContextIntInitialize',0,3,70,235,4,1,1,1,5
	.byte	'CurrentConfig',0,70,235,4,1
	.word	4729
	.byte	5
	.byte	'Context',0,70,235,4,1
	.word	5024
	.byte	5
	.byte	'PreviousGlobalIntState',0,70,235,4,1
	.word	3162
	.byte	11,4,4,0,0,6
	.byte	'Os_Hal_ContextIntInitializeReserved',0,3,70,148,5,1,1,1,5
	.byte	'CurrentConfig',0,70,148,5,1
	.word	4729
	.byte	5
	.byte	'Context',0,70,148,5,1
	.word	5024
	.byte	5
	.byte	'PreviousGlobalIntState',0,70,148,5,1
	.word	3162
	.byte	11,4,4,0,0,6
	.byte	'Os_Hal_ContextIntRestore',0,3,70,243,5,1,1,1,5
	.byte	'Context',0,70,243,5,1
	.word	35138
	.byte	4,0,14
	.byte	'Os_MpAccessRightsRefType',0,36,146,1,59
	.word	27112
	.byte	10
	.word	35896
	.byte	6
	.byte	'Os_MpThreadInit',0,3,71,130,1,1,1,1,5
	.byte	'Config',0,71,130,1,1
	.word	27112
	.byte	5
	.byte	'Settings',0,71,130,1,1
	.word	35930
	.byte	4,0,9
	.word	27021
	.byte	10
	.word	35995
	.byte	6
	.byte	'Os_MpSwitch',0,3,71,193,1,1,1,1,5
	.byte	'Current',0,71,193,1,1
	.word	27112
	.byte	5
	.byte	'Next',0,71,193,1,1
	.word	27112
	.byte	4,0,6
	.byte	'Os_MpSwitchTo',0,3,71,230,1,1,1,1,5
	.byte	'AccessRights',0,71,230,1,1
	.word	27112
	.byte	4,0,6
	.byte	'Os_TraceThreadInit',0,3,72,139,6,1,1,1,5
	.byte	'Thread',0,72,139,6,1
	.word	7344
	.byte	4,0,6
	.byte	'Os_TraceThreadInitAndStart',0,3,72,178,6,1,1,1,5
	.byte	'Task',0,72,178,6,1
	.word	7344
	.byte	11,4,0,0,6
	.byte	'Os_TraceThreadSwitch',0,3,72,229,6,1,1,1,5
	.byte	'CurrentTaskState',0,72,229,6,1
	.word	12540
	.byte	5
	.byte	'Current',0,72,229,6,1
	.word	7344
	.byte	5
	.byte	'Next',0,72,229,6,1
	.word	7344
	.byte	11,4,4,0,0,6
	.byte	'Os_TraceThreadResetAndResume',0,3,72,170,7,1,1,1,5
	.byte	'Current',0,72,170,7,1
	.word	7344
	.byte	5
	.byte	'Next',0,72,170,7,1
	.word	7344
	.byte	11,4,4,0,0,6
	.byte	'Os_TraceThreadCleanupAndResume',0,3,72,228,7,1,1,1,5
	.byte	'Current',0,72,228,7,1
	.word	7344
	.byte	5
	.byte	'Next',0,72,228,7,1
	.word	7344
	.byte	11,4,4,0,0,6
	.byte	'Os_TraceTaskSetEvent',0,3,72,148,10,1,1,1,5
	.byte	'Task',0,72,148,10,1
	.word	7344
	.byte	5
	.byte	'EventMask',0,72,148,10,1
	.word	11699
	.byte	5
	.byte	'StateChanged',0,72,148,10,1
	.word	399
	.byte	11,4,0,0,6
	.byte	'Os_TraceTaskWaitEventNoWait',0,3,72,194,10,1,1,1,5
	.byte	'Task',0,72,194,10,1
	.word	7344
	.byte	5
	.byte	'EventMask',0,72,194,10,1
	.word	11699
	.byte	11,4,0,0,6
	.byte	'Os_TraceSpinlockRequested',0,3,72,183,11,1,1,1,5
	.byte	'Spinlock',0,72,183,11,1
	.word	5867
	.byte	11,4,0,0,6
	.byte	'Os_TraceSpinlockTaken',0,3,72,239,11,1,1,1,5
	.byte	'Spinlock',0,72,239,11,1
	.word	5867
	.byte	11,4,0,0,6
	.byte	'Os_TraceSpinlockReleased',0,3,72,167,12,1,1,1,5
	.byte	'Spinlock',0,72,167,12,1
	.word	5867
	.byte	11,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalDisabled',0,3,72,221,12,1,1,1,11,4,0,0,6
	.byte	'Os_TraceInterruptsLevelDisabled',0,3,72,128,13,1,1,1,11,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalEnabled',0,3,72,163,13,1,1,1,11,4,0,0,6
	.byte	'Os_TraceInterruptsLevelEnabled',0,3,72,198,13,1,1,1,11,4,0,0,3
	.byte	'Os_ThreadGetSpinlocks',0,3,73,117,1
	.word	32448
	.byte	1,1,5
	.byte	'Thread',0,73,117,1
	.word	29828
	.byte	4,0,3
	.byte	'Os_ThreadGetTrace',0,3,73,159,1,1
	.word	7344
	.byte	1,1,5
	.byte	'Thread',0,73,159,1,1
	.word	29828
	.byte	4,0,3
	.byte	'Os_ThreadGetTpConfig',0,3,73,173,1,1
	.word	28747
	.byte	1,1,5
	.byte	'Thread',0,73,173,1,1
	.word	29828
	.byte	4,0
.L275:
	.byte	3
	.byte	'Os_ThreadGetInterruptApiState',0,3,73,213,1,1
	.word	28606
	.byte	1,1
.L277:
	.byte	5
	.byte	'Thread',0,73,213,1,1
	.word	29828
.L279:
	.byte	4,0
.L285:
	.byte	3
	.byte	'Os_ThreadGetCore',0,3,73,227,1,1
	.word	24668
	.byte	1,1
.L287:
	.byte	5
	.byte	'Thread',0,73,227,1,1
	.word	29828
.L289:
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentType',0,3,73,241,1,1
	.word	5487
	.byte	1,1,5
	.byte	'Thread',0,73,241,1,1
	.word	29828
	.byte	4,0
.L293:
	.byte	3
	.byte	'Os_ThreadIsTask',0,3,73,158,2,1
	.word	236
	.byte	1,1
.L296:
	.byte	5
	.byte	'Thread',0,73,158,2,1
	.word	29828
.L298:
	.byte	4,0,3
	.byte	'Os_ThreadIsIsr',0,3,73,185,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,73,185,2,1
	.word	29828
	.byte	4,0,3
	.byte	'Os_ThreadIsAnyInitialContext',0,3,73,198,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,73,198,2,1
	.word	29828
	.byte	5
	.byte	'Context',0,73,198,2,1
	.word	5487
	.byte	4,0,3
	.byte	'Os_ThreadIsHook',0,3,73,225,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,73,225,2,1
	.word	29828
	.byte	4,0,3
	.byte	'Os_ThreadCheckCallContext',0,3,73,238,2,1
	.word	236
	.byte	1,1,5
	.byte	'Thread',0,73,238,2,1
	.word	29828
	.byte	5
	.byte	'PermittedCallContext',0,73,238,2,1
	.word	5487
	.byte	11,4,4,0,0,3
	.byte	'Os_ThreadGetOwnerApplication',0,3,73,138,3,1
	.word	27968
	.byte	1,1,5
	.byte	'Thread',0,73,138,3,1
	.word	29828
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentApplication',0,3,73,152,3,1
	.word	27968
	.byte	1,1,5
	.byte	'Thread',0,73,152,3,1
	.word	29828
	.byte	4,0
.L439:
	.byte	3
	.byte	'Os_ThreadHasResourcesLocked',0,3,73,185,3,1
	.word	236
	.byte	1,1
.L440:
	.byte	5
	.byte	'Thread',0,73,185,3,1
	.word	29828
.L442:
	.byte	11,4,4,4,0,0
.L461:
	.byte	3
	.byte	'Os_ThreadHasSpinlockLocked',0,3,73,223,3,1
	.word	236
	.byte	1,1
.L462:
	.byte	5
	.byte	'Thread',0,73,223,3,1
	.word	29828
.L464:
	.byte	11,4,4,4,0,0
.L434:
	.byte	3
	.byte	'Os_ThreadCheckResourcesReleased',0,3,73,128,4,1
	.word	236
	.byte	1,1
.L436:
	.byte	5
	.byte	'Thread',0,73,128,4,1
	.word	29828
.L438:
	.byte	11,4,4,0,0
.L456:
	.byte	3
	.byte	'Os_ThreadCheckSpinlocksReleased',0,3,73,141,4,1
	.word	236
	.byte	1,1
.L458:
	.byte	5
	.byte	'Thread',0,73,141,4,1
	.word	29828
.L460:
	.byte	11,4,4,0,0
.L269:
	.byte	3
	.byte	'Os_ThreadCheckAreInterruptsEnabled',0,3,73,154,4,1
	.word	236
	.byte	1,1
.L271:
	.byte	5
	.byte	'Thread',0,73,154,4,1
	.word	29828
.L273:
	.byte	11,4,4,0,0,6
	.byte	'Os_ThreadSpinlockForceRelease',0,3,73,167,4,1,1,1,5
	.byte	'Thread',0,73,167,4,1
	.word	29828
	.byte	4,0,6
	.byte	'Os_ThreadResourceForceRelease',0,3,73,180,4,1,1,1,5
	.byte	'Thread',0,73,180,4,1
	.word	29828
	.byte	4,0,6
	.byte	'Os_ThreadLocksForceRelease',0,3,73,199,4,1,1,1,5
	.byte	'Thread',0,73,199,4,1
	.word	29828
	.byte	11,4,4,4,0,0,6
	.byte	'Os_ThreadResetAndResume',0,3,73,223,5,1,1,1,5
	.byte	'Next',0,73,223,5,1
	.word	29828
	.byte	5
	.byte	'CallPreThreadHook',0,73,223,5,1
	.word	399
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadStartFirst',0,3,73,172,6,1,1,1,5
	.byte	'Next',0,73,172,6,1
	.word	29828
	.byte	5
	.byte	'CallPreThreadHook',0,73,172,6,1
	.word	399
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadCleanupAndResume',0,3,73,230,6,1,1,1,5
	.byte	'Next',0,73,230,6,1
	.word	29828
	.byte	5
	.byte	'CallPreThreadHook',0,73,230,6,1
	.word	399
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0
.L312:
	.byte	6
	.byte	'Os_ThreadSwitch',0,3,73,133,8,1,1,1
.L314:
	.byte	5
	.byte	'Current',0,73,133,8,1
	.word	29828
.L316:
	.byte	5
	.byte	'Next',0,73,133,8,1
	.word	29828
.L318:
	.byte	5
	.byte	'CallPreThreadHook',0,73,133,8,1
	.word	399
.L320:
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_ThreadGetAccessRights',0,3,73,137,9,1
	.word	29413
	.byte	1,1,5
	.byte	'Thread',0,73,137,9,1
	.word	29828
	.byte	4,0,6
	.byte	'Os_ThreadSetInterruptState',0,3,73,180,9,1,1,1,5
	.byte	'Thread',0,73,180,9,1
	.word	29828
	.byte	5
	.byte	'InterruptState',0,73,180,9,1
	.word	34989
	.byte	11,4,0,0
.L353:
	.byte	6
	.byte	'Os_ThreadCallPreThreadHook',0,3,73,199,9,1,1,1
.L354:
	.byte	5
	.byte	'Thread',0,73,199,9,1
	.word	29828
.L356:
	.byte	5
	.byte	'CallPreThreadHook',0,73,199,9,1
	.word	399
.L358:
	.byte	4,0,6
	.byte	'Os_ThreadInitFpuContext',0,3,73,237,10,1,1,1,5
	.byte	'Thread',0,73,237,10,1
	.word	29828
	.byte	11,4,0,0,6
	.byte	'Os_ThreadInitFpu',0,3,73,136,11,1,1,1,5
	.byte	'Thread',0,73,136,11,1
	.word	29828
	.byte	11,4,0,0,6
	.byte	'Os_ThreadStoreFpuContext',0,3,73,163,11,1,1,1,5
	.byte	'Thread',0,73,163,11,1
	.word	29828
	.byte	4,0,6
	.byte	'Os_ThreadRestoreFpuContext',0,3,73,185,11,1,1,1,5
	.byte	'Thread',0,73,185,11,1
	.word	29828
	.byte	4,0,6
	.byte	'Os_IsrDisableSource',0,3,74,231,1,1,1,1,5
	.byte	'Isr',0,74,231,1,1
	.word	6764
	.byte	11,4,0,0,3
	.byte	'Os_IsrGetThread',0,3,74,160,1,1
	.word	29828
	.byte	1,1,5
	.byte	'Isr',0,74,160,1,1
	.word	23926
	.byte	4,0,6
	.byte	'Os_IsrInitialEnable',0,3,74,160,2,1,1,1,5
	.byte	'Isr',0,74,160,2,1
	.word	23926
	.byte	5
	.byte	'ClearPending',0,74,160,2,1
	.word	399
	.byte	11,4,4,0,0,6
	.byte	'Os_IsrEnable',0,3,74,192,2,1,1,1,5
	.byte	'Isr',0,74,192,2,1
	.word	23926
	.byte	11,4,0,0,6
	.byte	'Os_IsrClearPending',0,3,74,220,2,1,1,1,5
	.byte	'Isr',0,74,220,2,1
	.word	6764
	.byte	11,4,0,0,18
	.word	5487
	.byte	10
	.word	39188
	.byte	6
	.byte	'Os_XSigChannelIdxIncrement',0,3,75,90,1,1,1,5
	.byte	'Index',0,75,90,1
	.word	39193
	.byte	5
	.byte	'Size',0,75,90,1
	.word	5487
	.byte	11,4,0,0,9
	.word	21710
	.byte	10
	.word	39263
	.byte	3
	.byte	'Os_XSigChannelIsResultAvailable',0,3,75,129,2,1
	.word	236
	.byte	1,1,5
	.byte	'Channel',0,75,129,2,1
	.word	39268
	.byte	4,0,9
	.word	21232
	.byte	10
	.word	39336
	.byte	3
	.byte	'Os_XSigSend',0,3,76,129,1,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,76,129,1,1
	.word	24668
	.byte	5
	.byte	'SendThread',0,76,129,1,1
	.word	29828
	.byte	5
	.byte	'FunctionIdx',0,76,129,1,1
	.word	20239
	.byte	5
	.byte	'Parameters',0,76,129,1,1
	.word	39341
	.byte	11,4,0,0,3
	.byte	'Os_XSigSend_ActivateTaskAsync',0,3,76,191,1,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,76,191,1,1
	.word	24668
	.byte	5
	.byte	'SendThread',0,76,191,1,1
	.word	29828
	.byte	5
	.byte	'TaskID',0,76,191,1,1
	.word	12374
	.byte	4,0,3
	.byte	'Os_XSigSend_SetEvent',0,3,76,156,2,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,76,156,2,1
	.word	24668
	.byte	5
	.byte	'SendThread',0,76,156,2,1
	.word	29828
	.byte	5
	.byte	'TaskID',0,76,156,2,1
	.word	12374
	.byte	5
	.byte	'Mask',0,76,156,2,1
	.word	11699
	.byte	11,4,0,0,3
	.byte	'Os_XSigSend_SetEventAsync',0,3,76,185,2,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,76,185,2,1
	.word	24668
	.byte	5
	.byte	'SendThread',0,76,185,2,1
	.word	29828
	.byte	5
	.byte	'TaskID',0,76,185,2,1
	.word	12374
	.byte	5
	.byte	'Mask',0,76,185,2,1
	.word	11699
	.byte	4,0
.L239:
	.byte	14
	.byte	'EventMaskRefType',0,3,185,2,56
	.word	11725
	.byte	3
	.byte	'Os_XSigSend_GetEvent',0,3,76,214,2,1
	.word	416
	.byte	1,1,5
	.byte	'RecvCore',0,76,214,2,1
	.word	24668
	.byte	5
	.byte	'SendThread',0,76,214,2,1
	.word	29828
	.byte	5
	.byte	'TaskID',0,76,214,2,1
	.word	12374
	.byte	5
	.byte	'Mask',0,76,214,2,1
	.word	39764
	.byte	4,0,10
	.word	11699
.L260:
	.byte	3
	.byte	'Os_TaskId2Task',0,3,77,97,1
	.word	16617
	.byte	1,1
.L262:
	.byte	5
	.byte	'TaskId',0,77,97,1
	.word	12374
.L264:
	.byte	11,4,4,0,0,3
	.byte	'Os_TaskGetThread',0,3,77,111,1
	.word	29828
	.byte	1,1,5
	.byte	'Task',0,77,111,1
	.word	16617
	.byte	4,0,3
	.byte	'Os_TaskThread2Task',0,3,77,125,1
	.word	16617
	.byte	1,1,5
	.byte	'Thread',0,77,125,1
	.word	29828
	.byte	11,4,4,0,0,18
	.word	11699
	.byte	18
	.word	11699
	.byte	15,78,70,9,16,13
	.byte	'Waiting',0
	.word	40037
	.byte	8,2,35,0,13
	.byte	'Triggered',0
	.word	40042
	.byte	8,2,35,8,0,12
	.byte	'Os_TaskType_Tag',0,32,116,8,52,13
	.byte	'Thread',0
	.word	28455
	.byte	24,2,35,0,13
	.byte	'Events',0
	.word	40047
	.byte	16,2,35,24,13
	.byte	'State',0
	.word	12540
	.byte	1,2,35,40,13
	.byte	'Priority',0
	.word	5487
	.byte	2,2,35,42,13
	.byte	'ActivationsAllowed',0
	.word	399
	.byte	1,2,35,44,13
	.byte	'NumRemainScheduleEventsRoundRobin',0
	.word	135
	.byte	4,2,35,46,0,10
	.word	40089
	.byte	3
	.byte	'Os_TaskGetDyn',0,3,77,139,1,1
	.word	40247
	.byte	1,1,5
	.byte	'Task',0,77,139,1,1
	.word	16617
	.byte	11,4,0,0
.L198:
	.byte	6
	.byte	'Os_TaskSetState',0,3,77,152,1,1,1,1
.L200:
	.byte	5
	.byte	'Task',0,77,152,1,1
	.word	16617
.L202:
	.byte	5
	.byte	'State',0,77,152,1,1
	.word	12540
.L204:
	.byte	11,4,0,0,3
	.byte	'Os_TaskGetId',0,3,77,219,1,1
	.word	12374
	.byte	1,1,5
	.byte	'Task',0,77,219,1,1
	.word	16617
	.byte	4,0,3
	.byte	'Os_TaskGetAccessingApplications',0,3,77,243,1,1
	.word	135
	.byte	1,1,5
	.byte	'Task',0,77,243,1,1
	.word	16617
	.byte	4,0
.L494:
	.byte	3
	.byte	'Os_TaskGetScheduler',0,3,77,128,2,1
	.word	16990
	.byte	1,1
.L496:
	.byte	5
	.byte	'Task',0,77,128,2,1
	.word	16617
.L498:
	.byte	11,4,4,4,0,0,10
	.word	40047
.L244:
	.byte	3
	.byte	'Os_TaskGetEvent',0,3,77,141,2,1
	.word	40506
	.byte	1,1
.L245:
	.byte	5
	.byte	'Task',0,77,141,2,1
	.word	16617
.L247:
	.byte	11,4,0,0,3
	.byte	'Os_TaskGetCore',0,3,77,154,2,1
	.word	24668
	.byte	1,1,5
	.byte	'Task',0,77,154,2,1
	.word	16617
	.byte	11,4,4,0,0
.L219:
	.byte	3
	.byte	'Os_TaskIsCoreLocal',0,3,77,167,2,1
	.word	135
	.byte	1,1
.L221:
	.byte	5
	.byte	'Task',0,77,167,2,1
	.word	16617
.L223:
	.byte	11,4,4,0,0,3
	.byte	'Os_TaskCheckId',0,3,77,180,2,1
	.word	236
	.byte	1,1,5
	.byte	'TaskId',0,77,180,2,1
	.word	12374
	.byte	11,4,4,0,0,3
	.byte	'Os_TaskCheckIsExtendedTask',0,3,77,193,2,1
	.word	236
	.byte	1,1,5
	.byte	'Task',0,77,193,2,1
	.word	16617
	.byte	11,4,0,0,3
	.byte	'Os_TaskCheckIsNotSuspended',0,3,77,206,2,1
	.word	236
	.byte	1,1,5
	.byte	'Task',0,77,206,2,1
	.word	16617
	.byte	11,4,4,0,0,3
	.byte	'Os_TaskIsWaiting',0,3,77,219,2,1
	.word	135
	.byte	1,1,5
	.byte	'Task',0,77,219,2,1
	.word	16617
	.byte	11,4,0,0
.L304:
	.byte	6
	.byte	'Os_TaskSwitch',0,3,77,252,2,1,1,1
.L306:
	.byte	5
	.byte	'Scheduler',0,77,252,2,1
	.word	16990
.L308:
	.byte	5
	.byte	'CallerThread',0,77,252,2,1
	.word	29828
.L310:
	.byte	11,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TaskResume',0,3,77,161,3,1,1,1,5
	.byte	'Scheduler',0,77,161,3,1
	.word	16990
	.byte	11,4,4,4,4,4,4,4,0,0
.L489:
	.byte	6
	.byte	'Os_TaskWait',0,3,77,210,3,1,1,1
.L491:
	.byte	5
	.byte	'Task',0,77,210,3,1
	.word	16617
.L493:
	.byte	11,4,4,4,4,4,4,4,4,0,0
.L193:
	.byte	6
	.byte	'Os_TaskLeaveWaitingState',0,3,77,246,3,1,1,1
.L195:
	.byte	5
	.byte	'Task',0,77,246,3,1
	.word	16617
.L197:
	.byte	11,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TaskCallPostTaskHook',0,3,77,232,5,1,1,1,11,4,0,0,3
	.byte	'Os_CounterGetCore',0,3,79,182,1,1
	.word	24668
	.byte	1,1,5
	.byte	'Counter',0,79,182,1,1
	.word	18858
	.byte	4,0,3
	.byte	'Os_CounterIsFutureValue',0,3,79,200,1,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,79,200,1,1
	.word	18858
	.byte	5
	.byte	'Value',0,79,200,1,1
	.word	135
	.byte	5
	.byte	'ReferenceValue',0,79,200,1,1
	.word	135
	.byte	11,4,0,0,3
	.byte	'Os_CounterIsFutureValueInternal',0,3,79,225,1,1
	.word	236
	.byte	1,1,5
	.byte	'MaxCountingValue',0,79,225,1,1
	.word	135
	.byte	5
	.byte	'MaxDifferentialValue',0,79,225,1,1
	.word	135
	.byte	5
	.byte	'Value',0,79,225,1,1
	.word	135
	.byte	5
	.byte	'ReferenceValue',0,79,225,1,1
	.word	135
	.byte	11,4,4,0,0,3
	.byte	'Os_CounterCheckValueLeMaxAllowed',0,3,79,145,2,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,79,145,2,1
	.word	18858
	.byte	5
	.byte	'Value',0,79,145,2,1
	.word	135
	.byte	11,4,0,0,3
	.byte	'Os_CounterCheckValueLeReducedMaxAllowed',0,3,79,159,2,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,79,159,2,1
	.word	18858
	.byte	5
	.byte	'Reduce',0,79,159,2,1
	.word	135
	.byte	5
	.byte	'Value',0,79,159,2,1
	.word	135
	.byte	11,4,4,0,0,3
	.byte	'Os_CounterCheckValueGeMinCycleOrZero',0,3,79,175,2,1
	.word	236
	.byte	1,1,5
	.byte	'Counter',0,79,175,2,1
	.word	18858
	.byte	5
	.byte	'Cycle',0,79,175,2,1
	.word	135
	.byte	11,4,0,0,9
	.word	18630
	.byte	10
	.word	41686
	.byte	3
	.byte	'Os_CounterGetCharacteristics',0,3,79,189,2,1
	.word	41691
	.byte	1,1,5
	.byte	'Counter',0,79,189,2,1
	.word	18858
	.byte	4,0,3
	.byte	'Os_CounterGetMaxAllowedValue',0,3,79,203,2,1
	.word	135
	.byte	1,1,5
	.byte	'Counter',0,79,203,2,1
	.word	18858
	.byte	4,0,3
	.byte	'Os_CounterGetMaxCountingValue',0,3,79,217,2,1
	.word	135
	.byte	1,1,5
	.byte	'Counter',0,79,217,2,1
	.word	18858
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtInit',0,3,80,93,1,1,1,5
	.byte	'TimerConfig',0,80,93,1
	.word	19824
	.byte	4,0,3
	.byte	'Os_Hal_TimerFrtGetCounterValue',0,3,80,125,1
	.word	135
	.byte	1,1,5
	.byte	'TimerConfig',0,80,125,1
	.word	19824
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtSetCompareValue',0,3,80,139,1,1,1,1,5
	.byte	'TimerConfig',0,80,139,1,1
	.word	19824
	.byte	5
	.byte	'ExpirationTime',0,80,139,1,1
	.word	135
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtTriggerIrq',0,3,80,172,1,1,1,1,5
	.byte	'TimerConfig',0,80,172,1,1
	.word	19824
	.byte	4,0,12
	.byte	'Os_Hal_TimerPitConfigType_Tag',0,82,105,8,32,13
	.byte	'CounterRegisterAddress',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'CounterConfRegisterAddress',0
	.word	135
	.byte	4,2,35,4,13
	.byte	'CounterConfRegisterValue',0
	.word	135
	.byte	4,2,35,8,13
	.byte	'ReloadRegisterAddress',0
	.word	135
	.byte	4,2,35,12,13
	.byte	'ReloadConfRegisterAddress',0
	.word	135
	.byte	4,2,35,16,13
	.byte	'ReloadConfRegisterValue',0
	.word	135
	.byte	4,2,35,20,13
	.byte	'ReloadValue',0
	.word	5487
	.byte	2,2,35,24,13
	.byte	'InterruptSRCRegisterAddress',0
	.word	135
	.byte	4,2,35,26,0,9
	.word	42133
	.byte	10
	.word	42428
	.byte	6
	.byte	'Os_Hal_TimerPitInit',0,3,81,92,1,1,1,5
	.byte	'TimerConfig',0,81,92,1
	.word	42433
	.byte	4,0,15,39,219,1,9,8,13
	.byte	'Value',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'Compare',0
	.word	135
	.byte	4,2,35,4,0,10
	.word	42487
	.byte	12
	.byte	'Os_TimerSwConfigType_Tag',0,39,232,1,8,52,13
	.byte	'Counter',0
	.word	19243
	.byte	48,2,35,0,13
	.byte	'Dyn',0
	.word	42526
	.byte	4,2,35,48,0,9
	.word	42531
	.byte	10
	.word	42593
	.byte	6
	.byte	'Os_TimerSwInit',0,3,83,84,1,1,1,5
	.byte	'Timer',0,83,84,1
	.word	42598
	.byte	11,4,4,0,0,3
	.byte	'Os_TimerSwGetValue',0,3,83,220,1,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,83,220,1,1
	.word	42598
	.byte	4,0,6
	.byte	'Os_TimerSwSetCompareValue',0,3,83,233,1,1,1,1,5
	.byte	'Timer',0,83,233,1,1
	.word	42598
	.byte	5
	.byte	'ExpirationTime',0,83,233,1,1
	.word	135
	.byte	4,0,3
	.byte	'Os_TimerSwUserModulo',0,3,83,252,1,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,83,252,1,1
	.word	42598
	.byte	5
	.byte	'Value',0,83,252,1,1
	.word	135
	.byte	11,4,0,0,3
	.byte	'Os_TimerHrtGetValue',0,3,83,211,4,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,83,211,4,1
	.word	19915
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCounter',0,3,83,205,2,1
	.word	18858
	.byte	1,1,5
	.byte	'Timer',0,83,205,2,1
	.word	19915
	.byte	4,0,3
	.byte	'Os_TimerHrtComputeHardwareCompareValue',0,3,83,229,2,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,83,229,2,1
	.word	19915
	.byte	5
	.byte	'ExpirationTime',0,83,229,2,1
	.word	135
	.byte	11,11,4,0,0,0,6
	.byte	'Os_TimerHrtSetCompareValue',0,3,83,157,3,1,1,1,5
	.byte	'Timer',0,83,157,3,1
	.word	19915
	.byte	5
	.byte	'ExpirationTime',0,83,157,3,1
	.word	135
	.byte	11,4,4,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCompareValue',0,3,83,247,3,1
	.word	135
	.byte	1,1,5
	.byte	'Timer',0,83,247,3,1
	.word	19915
	.byte	4,0,3
	.byte	'Os_TimerSwAbsCounter2AbsTimerValue',0,3,83,137,5,1
	.word	135
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,83,137,5,1
	.word	135
	.byte	5
	.byte	'Now',0,83,137,5,1
	.word	135
	.byte	5
	.byte	'CounterValue',0,83,137,5,1
	.word	135
	.byte	4,0,3
	.byte	'Os_TimerAdd',0,3,83,253,5,1
	.word	135
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,83,253,5,1
	.word	135
	.byte	5
	.byte	'MaxCountingValue',0,83,253,5,1
	.word	135
	.byte	5
	.byte	'Value',0,83,253,5,1
	.word	135
	.byte	5
	.byte	'Add',0,83,253,5,1
	.word	135
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_TimerSub',0,3,83,173,6,1
	.word	135
	.byte	1,1,5
	.byte	'MaxCountingValue',0,83,173,6,1
	.word	135
	.byte	5
	.byte	'Value',0,83,173,6,1
	.word	135
	.byte	5
	.byte	'Sub',0,83,173,6,1
	.word	135
	.byte	11,4,4,4,0,0,6
	.byte	'Os_TimerFrtSetCompareValue',0,3,83,222,6,1,1,1,5
	.byte	'TimerConfig',0,83,222,6,1
	.word	19824
	.byte	5
	.byte	'CompareValue',0,83,222,6,1
	.word	135
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TimerFrtTickType2TickType',0,3,83,134,7,1
	.word	135
	.byte	1,1,5
	.byte	'Value',0,83,134,7,1
	.word	135
	.byte	4,0,3
	.byte	'Os_TimerTickType2FrtTickType',0,3,83,147,7,1
	.word	135
	.byte	1,1,5
	.byte	'Value',0,83,147,7,1
	.word	135
	.byte	4,0,9
	.word	.L606-.L94
	.byte	10
	.word	43677
	.byte	12
	.byte	'Os_TpBudgetType_Tag',0,38,157,2,8,8,13
	.byte	'Remaining',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'Previous',0
	.word	43682
	.byte	4,2,35,4,0,10
	.word	43687
	.byte	7,85,94,9,1,8
	.byte	'OS_TPMONITORINGTYPE_NONE',0,0,8
	.byte	'OS_TPMONITORINGTYPE_LOCK',0,1,8
	.byte	'OS_TPMONITORINGTYPE_EXECUTION',0,2,8
	.byte	'OS_TPMONITORINGTYPE_ARRIVAL',0,3,8
	.byte	'OS_TPMONITORINGTYPE_COUNT',0,4,0
.L606:
	.byte	12
	.byte	'Os_TpBudgetConfigType_Tag',0,38,168,2,8,12,13
	.byte	'Dyn',0
	.word	43751
	.byte	4,2,35,0,13
	.byte	'BudgetKind',0
	.word	43756
	.byte	1,2,35,4,13
	.byte	'Budget',0
	.word	135
	.byte	4,2,35,6,0,14
	.byte	'Os_TpBudgetConfigRefType',0,85,82,59
	.word	43682
	.byte	9
	.word	43988
	.byte	10
	.word	44021
	.byte	12
	.byte	'Os_TpOwnerThreadType_Tag',0,38,182,2,8,20,13
	.byte	'EarliestArrival',0
	.word	11699
	.byte	8,2,35,0,13
	.byte	'DelayLevel',0
	.word	399
	.byte	1,2,35,8,13
	.byte	'MonitoredBudgets',0
	.word	43682
	.byte	4,2,35,12,13
	.byte	'Violation',0
	.word	43756
	.byte	1,2,35,16,0,10
	.word	44031
	.byte	12
	.byte	'Os_TpOwnerThreadConfigType_Tag',0,38,213,2,8,56,13
	.byte	'Base',0
	.word	28689
	.byte	1,2,35,0,13
	.byte	'TimeFrame',0
	.word	11699
	.byte	8,2,35,4,13
	.byte	'ExecutionBudget',0
	.word	43906
	.byte	12,2,35,12,13
	.byte	'AllInterruptLockBudget',0
	.word	43906
	.byte	12,2,35,24,13
	.byte	'OsInterruptLockBudget',0
	.word	43906
	.byte	12,2,35,36,13
	.byte	'ResourceLockBudgets',0
	.word	44026
	.byte	4,2,35,48,13
	.byte	'Dyn',0
	.word	44153
	.byte	4,2,35,52,0,9
	.word	44158
	.byte	10
	.word	44359
	.byte	3
	.byte	'Os_TpThread2TpOwnerThread',0,3,84,94,1
	.word	44364
	.byte	1,1,5
	.byte	'TpThread',0,84,94,1
	.word	28747
	.byte	11,4,0,0,9
	.word	43906
	.byte	10
	.word	44427
	.byte	3
	.byte	'Os_TpGetCurrentTpOwnerThread',0,3,84,108,1
	.word	44364
	.byte	1,1,5
	.byte	'Config',0,84,108,1
	.word	20075
	.byte	11,4,4,0,0,6
	.byte	'Os_TpThreadInit',0,3,84,127,1,1,1,5
	.byte	'Config',0,84,127,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,127,1
	.word	28747
	.byte	11,4,4,0,0,6
	.byte	'Os_TpThreadKill',0,3,84,157,1,1,1,1,5
	.byte	'Thread',0,84,157,1,1
	.word	28747
	.byte	11,4,4,0,0,6
	.byte	'Os_TpResume',0,3,84,184,1,1,1,1,5
	.byte	'Config',0,84,184,1,1
	.word	20075
	.byte	5
	.byte	'Now',0,84,184,1,1
	.word	135
	.byte	5
	.byte	'RemainingTime',0,84,184,1,1
	.word	135
	.byte	11,4,4,0,0,6
	.byte	'Os_TpSuspend',0,3,84,209,1,1,1,1,5
	.byte	'Config',0,84,209,1,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,209,1,1
	.word	44364
	.byte	5
	.byte	'Now',0,84,209,1,1
	.word	135
	.byte	5
	.byte	'Deadline',0,84,209,1,1
	.word	135
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TpSub',0,3,84,239,1,1
	.word	135
	.byte	1,1,5
	.byte	'Config',0,84,239,1,1
	.word	20075
	.byte	5
	.byte	'Value',0,84,239,1,1
	.word	135
	.byte	5
	.byte	'Sub',0,84,239,1,1
	.word	135
	.byte	11,4,4,4,0,0,3
	.byte	'Os_TpAdd',0,3,84,139,2,1
	.word	135
	.byte	1,1,5
	.byte	'Config',0,84,139,2,1
	.word	20075
	.byte	5
	.byte	'Value',0,84,139,2,1
	.word	135
	.byte	5
	.byte	'Add',0,84,139,2,1
	.word	135
	.byte	11,4,4,4,4,0,0,3
	.byte	'Os_TpGetArrivalTimeStamp',0,3,84,171,2,1
	.word	11699
	.byte	1,1,5
	.byte	'Config',0,84,171,2,1
	.word	20075
	.byte	11,4,0,0,6
	.byte	'Os_TpSwitch',0,3,84,207,2,1,1,1,5
	.byte	'Config',0,84,207,2,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,207,2,1
	.word	28747
	.byte	5
	.byte	'Next',0,84,207,2,1
	.word	28747
	.byte	5
	.byte	'NextThread',0,84,207,2,1
	.word	29828
	.byte	11,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAndResume',0,3,84,157,3,1,1,1,5
	.byte	'Config',0,84,157,3,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,157,3,1
	.word	28747
	.byte	5
	.byte	'Next',0,84,157,3,1
	.word	28747
	.byte	5
	.byte	'NextThread',0,84,157,3,1
	.word	29828
	.byte	11,11,4,0,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAfterWait',0,3,84,225,3,1,1,1,5
	.byte	'Config',0,84,225,3,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,225,3,1
	.word	28747
	.byte	11,11,4,0,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpCheckInterArrival',0,3,84,153,4,1
	.word	236
	.byte	1,1,5
	.byte	'Config',0,84,153,4,1
	.word	20075
	.byte	5
	.byte	'TpThread',0,84,153,4,1
	.word	28747
	.byte	11,11,4,0,4,4,4,4,4,0,0,3
	.byte	'Os_TpGetResourceBudget',0,3,84,128,5,1
	.word	43682
	.byte	1,1,5
	.byte	'Current',0,84,128,5,1
	.word	44364
	.byte	5
	.byte	'Resource',0,84,128,5,1
	.word	11894
	.byte	11,4,4,0,0,6
	.byte	'Os_TpStartAllInterrupt',0,3,84,176,6,1,1,1,5
	.byte	'Config',0,84,176,6,1
	.word	20075
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpStopAllInterrupt',0,3,84,207,6,1,1,1,5
	.byte	'Config',0,84,207,6,1
	.word	20075
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpStartOsInterrupt',0,3,84,239,6,1,1,1,5
	.byte	'Config',0,84,239,6,1
	.word	20075
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpStopOsInterrupt',0,3,84,142,7,1,1,1,5
	.byte	'Config',0,84,142,7,1
	.word	20075
	.byte	11,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStart',0,3,84,182,7,1,1,1,5
	.byte	'Config',0,84,182,7,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,182,7,1
	.word	44364
	.byte	5
	.byte	'Budget',0,84,182,7,1
	.word	43682
	.byte	11,11,4,0,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStop',0,3,84,131,8,1,1,1,5
	.byte	'Config',0,84,131,8,1
	.word	20075
	.byte	5
	.byte	'Current',0,84,131,8,1
	.word	44364
	.byte	5
	.byte	'Budget',0,84,131,8,1
	.word	43682
	.byte	11,11,4,0,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpIsEnabledByCoreTpConfig',0,3,84,213,8,1
	.word	236
	.byte	1,1,5
	.byte	'Config',0,84,213,8,1
	.word	20075
	.byte	4,0,3
	.byte	'Os_TpIsEnabledByThreadTpConfig',0,3,84,244,8,1
	.word	236
	.byte	1,1,5
	.byte	'Config',0,84,244,8,1
	.word	28747
	.byte	4,0,3
	.byte	'Os_JobGetCore',0,3,86,190,2,1
	.word	24668
	.byte	1,1,5
	.byte	'Job',0,86,190,2,1
	.word	18994
	.byte	11,4,0,0,3
	.byte	'Os_AppCheckAccess',0,3,87,218,1,1
	.word	236
	.byte	1,1,5
	.byte	'App',0,87,218,1,1
	.word	27968
	.byte	5
	.byte	'AccessMask',0,87,218,1,1
	.word	135
	.byte	4,0,3
	.byte	'Os_AppCheckIsAccessible',0,3,87,232,1,1
	.word	236
	.byte	1,1,5
	.byte	'App',0,87,232,1,1
	.word	27968
	.byte	4,0,3
	.byte	'Os_AppGetCore',0,3,87,144,2,1
	.word	24668
	.byte	1,1,5
	.byte	'App',0,87,144,2,1
	.word	27968
	.byte	4,0,14
	.byte	'Os_ServiceCallListType',0,89,66,59
	.word	28450
	.byte	10
	.word	46114
	.byte	6
	.byte	'Os_ServiceCallsInit',0,3,88,134,1,1,1,1,5
	.byte	'ServiceCalls',0,88,134,1,1
	.word	46145
	.byte	4,0,10
	.word	28253
	.byte	10
	.word	399
	.byte	6
	.byte	'Os_FifoIdxIncrement',0,3,90,88,1,1,1,5
	.byte	'Index',0,90,88,1
	.word	46207
	.byte	5
	.byte	'Size',0,90,88,1
	.word	399
	.byte	11,4,0,0,3
	.byte	'Os_FifoIsFull',0,3,90,118,1
	.word	236
	.byte	1,1,5
	.byte	'WriteIdx',0,90,118,1
	.word	399
	.byte	5
	.byte	'ReadIdx',0,90,118,1
	.word	399
	.byte	5
	.byte	'Size',0,90,118,1
	.word	399
	.byte	11,4,0,0,3
	.byte	'Os_FifoIsEmpty',0,3,90,142,1,1
	.word	236
	.byte	1,1,5
	.byte	'WriteIdx',0,90,142,1,1
	.word	399
	.byte	5
	.byte	'ReadIdx',0,90,142,1,1
	.word	399
	.byte	4,0,9
	.word	399
	.byte	10
	.word	46409
	.byte	6
	.byte	'Os_FifoEmptyQueue',0,3,90,158,1,1,1,1,5
	.byte	'WriteIdx',0,90,158,1,1
	.word	46414
	.byte	5
	.byte	'ReadIdx',0,90,158,1,1
	.word	46207
	.byte	4,0,3
	.byte	'Os_FifoIndicesInRange',0,3,90,178,1,1
	.word	236
	.byte	1,1,5
	.byte	'WriteIdx',0,90,178,1,1
	.word	399
	.byte	5
	.byte	'ReadIdx',0,90,178,1,1
	.word	399
	.byte	5
	.byte	'Size',0,90,178,1,1
	.word	399
	.byte	4,0,15,92,80,9,1,13
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,10
	.word	46567
	.byte	15,92,87,9,1,13
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,9
	.word	46596
	.byte	10
	.word	46619
	.byte	15,92,73,9,1,13
	.byte	'Value',0
	.word	399
	.byte	1,2,35,0,0,10
	.word	46629
	.byte	12
	.byte	'Os_Fifo08WriteConfigType_Tag',0,92,94,8,16,13
	.byte	'Dyn',0
	.word	46591
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	46624
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	46650
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,9
	.word	46655
	.byte	10
	.word	46745
	.byte	3
	.byte	'Os_Fifo08IsFull',0,3,91,169,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,91,169,1,1
	.word	46750
	.byte	11,4,0,0,10
	.word	46596
	.byte	9
	.word	46567
	.byte	10
	.word	46806
	.byte	9
	.word	46629
	.byte	10
	.word	46816
	.byte	12
	.byte	'Os_Fifo08ReadConfigType_Tag',0,92,104,8,16,13
	.byte	'Dyn',0
	.word	46801
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	46811
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	46821
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,9
	.word	46826
	.byte	10
	.word	46916
	.byte	3
	.byte	'Os_Fifo08IsEmpty',0,3,91,132,2,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,91,132,2,1
	.word	46921
	.byte	11,4,0,0,15,94,80,9,1,13
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,10
	.word	46973
	.byte	15,94,87,9,1,13
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,9
	.word	47002
	.byte	10
	.word	47025
	.byte	15,94,73,9,2,13
	.byte	'Value',0
	.word	5487
	.byte	2,2,35,0,0,10
	.word	47035
	.byte	12
	.byte	'Os_Fifo16WriteConfigType_Tag',0,94,94,8,16,13
	.byte	'Dyn',0
	.word	46997
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	47030
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	47056
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,9
	.word	47061
	.byte	10
	.word	47151
	.byte	3
	.byte	'Os_Fifo16IsFull',0,3,93,169,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,93,169,1,1
	.word	47156
	.byte	11,4,0,0,10
	.word	47002
	.byte	9
	.word	46973
	.byte	10
	.word	47212
	.byte	9
	.word	47035
	.byte	10
	.word	47222
	.byte	12
	.byte	'Os_Fifo16ReadConfigType_Tag',0,94,104,8,16,13
	.byte	'Dyn',0
	.word	47207
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	47217
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	47227
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,9
	.word	47232
	.byte	10
	.word	47322
	.byte	3
	.byte	'Os_Fifo16IsEmpty',0,3,93,133,2,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,93,133,2,1
	.word	47327
	.byte	11,4,0,0,15,96,80,9,1,13
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,10
	.word	47379
	.byte	15,96,87,9,1,13
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,9
	.word	47408
	.byte	10
	.word	47431
	.byte	15,96,73,9,4,13
	.byte	'Value',0
	.word	135
	.byte	4,2,35,0,0,10
	.word	47441
	.byte	12
	.byte	'Os_Fifo32WriteConfigType_Tag',0,96,94,8,16,13
	.byte	'Dyn',0
	.word	47403
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	47436
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	47462
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,9
	.word	47467
	.byte	10
	.word	47557
	.byte	3
	.byte	'Os_Fifo32IsFull',0,3,95,169,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,95,169,1,1
	.word	47562
	.byte	11,4,0,0,10
	.word	47408
	.byte	9
	.word	47379
	.byte	10
	.word	47618
	.byte	9
	.word	47441
	.byte	10
	.word	47628
	.byte	12
	.byte	'Os_Fifo32ReadConfigType_Tag',0,96,104,8,16,13
	.byte	'Dyn',0
	.word	47613
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	47623
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	47633
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,0,9
	.word	47638
	.byte	10
	.word	47728
	.byte	3
	.byte	'Os_Fifo32IsEmpty',0,3,95,131,2,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,95,131,2,1
	.word	47733
	.byte	11,4,0,0,15,98,101,9,1,13
	.byte	'WriteIdx',0
	.word	399
	.byte	1,2,35,0,0,10
	.word	47785
	.byte	15,98,108,9,1,13
	.byte	'ReadIdx',0
	.word	399
	.byte	1,2,35,0,0,9
	.word	47814
	.byte	10
	.word	47837
	.byte	23,1,1,24
	.word	12680
	.byte	24
	.word	399
	.byte	24
	.word	11857
	.byte	0,10
	.word	47847
	.byte	14
	.byte	'Os_FifoRefWriteCbk',0,98,92,9
	.word	47866
	.byte	12
	.byte	'Os_FifoRefWriteConfigType_Tag',0,98,115,8,20,13
	.byte	'Dyn',0
	.word	47809
	.byte	4,2,35,0,13
	.byte	'Read',0
	.word	47842
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	12680
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,13
	.byte	'WriteCbk',0
	.word	47871
	.byte	4,2,35,16,0,9
	.word	47898
	.byte	10
	.word	48007
	.byte	3
	.byte	'Os_FifoRefIsFull',0,3,97,167,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,97,167,1,1
	.word	48012
	.byte	11,4,0,0,10
	.word	47847
	.byte	10
	.word	47814
	.byte	9
	.word	47785
	.byte	10
	.word	48074
	.byte	23,1,1,24
	.word	11857
	.byte	24
	.word	399
	.byte	24
	.word	12680
	.byte	0,10
	.word	48084
	.byte	14
	.byte	'Os_FifoRefReadCbk',0,98,78,9
	.word	48103
	.byte	12
	.byte	'Os_FifoRefReadConfigType_Tag',0,98,126,8,20,13
	.byte	'Dyn',0
	.word	48069
	.byte	4,2,35,0,13
	.byte	'Write',0
	.word	48079
	.byte	4,2,35,4,13
	.byte	'Data',0
	.word	11857
	.byte	4,2,35,8,13
	.byte	'Size',0
	.word	399
	.byte	1,2,35,12,13
	.byte	'ReadCbk',0
	.word	48108
	.byte	4,2,35,16,0,9
	.word	48134
	.byte	10
	.word	48242
	.byte	3
	.byte	'Os_FifoRefIsEmpty',0,3,97,255,1,1
	.word	236
	.byte	1,1,5
	.byte	'Fifo',0,97,255,1,1
	.word	48247
	.byte	11,4,0,0,10
	.word	48084
.L176:
	.byte	6
	.byte	'Os_EventTriggerSet',0,3,99,228,1,1,1,1
.L178:
	.byte	5
	.byte	'Events',0,99,228,1,1
	.word	40506
.L180:
	.byte	5
	.byte	'Mask',0,99,228,1,1
	.word	11699
.L182:
	.byte	4,0,9
	.word	40047
.L242:
	.byte	10
	.word	48364
.L248:
	.byte	3
	.byte	'Os_EventTriggerGet',0,3,99,242,1,1
	.word	11699
	.byte	1,1
.L250:
	.byte	5
	.byte	'Events',0,99,242,1,1
	.word	48369
.L252:
	.byte	4,0
.L397:
	.byte	6
	.byte	'Os_EventTriggerClear',0,3,99,255,1,1,1,1
.L399:
	.byte	5
	.byte	'Events',0,99,255,1,1
	.word	40506
.L401:
	.byte	5
	.byte	'Mask',0,99,255,1,1
	.word	11699
.L403:
	.byte	4,0
.L183:
	.byte	3
	.byte	'Os_EventWaitEventTriggered',0,3,99,147,2,1
	.word	11699
	.byte	1,1
.L185:
	.byte	5
	.byte	'Events',0,99,147,2,1
	.word	48369
.L187:
	.byte	4,0
.L478:
	.byte	6
	.byte	'Os_EventWaitSet',0,3,99,172,2,1,1,1
.L480:
	.byte	5
	.byte	'Events',0,99,172,2,1
	.word	40506
.L482:
	.byte	5
	.byte	'Mask',0,99,172,2,1
	.word	11699
.L484:
	.byte	4,0,2
	.byte	'int',0,4,5,9
	.word	48597
	.byte	27
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,24
	.word	48604
	.byte	0,18
	.word	236
	.byte	10
	.word	236
	.byte	28
	.byte	'__cmpswapw',0
	.word	48646
	.byte	1,1,1,1,29
	.byte	'p',0
	.word	48651
	.byte	29
	.byte	'value',0
	.word	236
	.byte	29
	.byte	'compare',0
	.word	236
	.byte	0,18
	.word	48597
	.byte	28
	.byte	'__mfcr',0
	.word	48708
	.byte	1,1,1,1,24
	.word	48597
	.byte	0,30
	.byte	'__isync',0,1,1,1,1,30
	.byte	'__disable',0,1,1,1,1,31
	.word	156
	.byte	4,0,31
	.word	183
	.byte	4,0,31
	.word	210
	.byte	4,0,31
	.word	252
	.byte	32
	.word	280
	.byte	32
	.word	292
	.byte	4,0,31
	.word	311
	.byte	32
	.word	343
	.byte	4,0,31
	.word	360
	.byte	32
	.word	378
	.byte	4,0,31
	.word	2923
	.byte	32
	.word	2961
	.byte	4,0,31
	.word	2981
	.byte	32
	.word	3021
	.byte	4,0,33
	.byte	'Os_ErrProtectionError',0,24,215,19,21,1,1,1,1,5
	.byte	'Fatalerror',0,24,215,19,57
	.word	416
	.byte	0,31
	.word	3041
	.byte	4,0,31
	.word	3073
	.byte	4,0,31
	.word	3106
	.byte	4,0,31
	.word	3167
	.byte	32
	.word	3200
	.byte	4,0,31
	.word	3222
	.byte	32
	.word	3249
	.byte	4,0,31
	.word	3276
	.byte	32
	.word	3303
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,0,0,31
	.word	3328
	.byte	32
	.word	3362
	.byte	4,0,31
	.word	3379
	.byte	32
	.word	3414
	.byte	4,0,31
	.word	3431
	.byte	32
	.word	3462
	.byte	4,0,31
	.word	3484
	.byte	32
	.word	3520
	.byte	4,0,31
	.word	3645
	.byte	32
	.word	3677
	.byte	4,0,31
	.word	3698
	.byte	32
	.word	3729
	.byte	4,0,31
	.word	3750
	.byte	32
	.word	3781
	.byte	4,0,31
	.word	3802
	.byte	32
	.word	3837
	.byte	32
	.word	3856
	.byte	4,0,31
	.word	3873
	.byte	32
	.word	3905
	.byte	32
	.word	3921
	.byte	4,0,31
	.word	3939
	.byte	32
	.word	3977
	.byte	4,0,31
	.word	4004
	.byte	32
	.word	4037
	.byte	4,0,31
	.word	4064
	.byte	32
	.word	4099
	.byte	4,0,31
	.word	4115
	.byte	32
	.word	4150
	.byte	4,0,31
	.word	4166
	.byte	32
	.word	4202
	.byte	4,0,31
	.word	4234
	.byte	32
	.word	4270
	.byte	32
	.word	4293
	.byte	32
	.word	4307
	.byte	4,0,31
	.word	4339
	.byte	32
	.word	4375
	.byte	32
	.word	4398
	.byte	32
	.word	4412
	.byte	4,0,31
	.word	4444
	.byte	32
	.word	4480
	.byte	32
	.word	4503
	.byte	32
	.word	4517
	.byte	4,0,31
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	4,0,31
	.word	4810
	.byte	4,0,31
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,0,0,31
	.word	30359
	.byte	32
	.word	30392
	.byte	11,34
	.word	210
	.byte	35
	.word	234
	.byte	0,4,0,0,31
	.word	30417
	.byte	32
	.word	30454
	.byte	4,0,31
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	4,0,31
	.word	30558
	.byte	32
	.word	30582
	.byte	4,0,31
	.word	30617
	.byte	32
	.word	30649
	.byte	4,0,31
	.word	30669
	.byte	32
	.word	30700
	.byte	4,0,31
	.word	30720
	.byte	32
	.word	30746
	.byte	4,0,31
	.word	30766
	.byte	4,0,31
	.word	30791
	.byte	11,11,34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,4,4,0,0,31
	.word	30832
	.byte	32
	.word	30853
	.byte	11,4,34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,4,0,0,31
	.word	30882
	.byte	32
	.word	30903
	.byte	11,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,0,0,31
	.word	30932
	.byte	32
	.word	30969
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,31
	.word	30997
	.byte	32
	.word	31025
	.byte	4,0,31
	.word	31051
	.byte	32
	.word	31086
	.byte	11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	45408
	.byte	32
	.word	45439
	.byte	36
	.word	45455
	.byte	36
	.word	45456
	.byte	34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45620
	.byte	32
	.word	45645
	.byte	32
	.word	45661
	.byte	32
	.word	45678
	.byte	36
	.word	45694
	.byte	36
	.word	45695
	.byte	36
	.word	45696
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45698
	.byte	35
	.word	45699
	.byte	35
	.word	45700
	.byte	35
	.word	45701
	.byte	35
	.word	45702
	.byte	35
	.word	45703
	.byte	35
	.word	45704
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45457
	.byte	35
	.word	45458
	.byte	35
	.word	45459
	.byte	0,0,4,0,0,31
	.word	31108
	.byte	32
	.word	31142
	.byte	11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	45462
	.byte	32
	.word	45492
	.byte	36
	.word	45508
	.byte	36
	.word	45509
	.byte	34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45707
	.byte	32
	.word	45731
	.byte	32
	.word	45747
	.byte	32
	.word	45764
	.byte	36
	.word	45780
	.byte	36
	.word	45781
	.byte	36
	.word	45782
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45784
	.byte	35
	.word	45785
	.byte	35
	.word	45786
	.byte	35
	.word	45787
	.byte	35
	.word	45788
	.byte	35
	.word	45789
	.byte	35
	.word	45790
	.byte	35
	.word	45791
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45510
	.byte	35
	.word	45511
	.byte	35
	.word	45512
	.byte	0,0,4,0,0,31
	.word	31164
	.byte	32
	.word	31198
	.byte	11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	45515
	.byte	32
	.word	45545
	.byte	36
	.word	45561
	.byte	36
	.word	45562
	.byte	34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45620
	.byte	32
	.word	45645
	.byte	32
	.word	45661
	.byte	32
	.word	45678
	.byte	36
	.word	45694
	.byte	36
	.word	45695
	.byte	36
	.word	45696
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45698
	.byte	35
	.word	45699
	.byte	35
	.word	45700
	.byte	35
	.word	45701
	.byte	35
	.word	45702
	.byte	35
	.word	45703
	.byte	35
	.word	45704
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45563
	.byte	35
	.word	45564
	.byte	35
	.word	45565
	.byte	0,0,4,0,0,31
	.word	31220
	.byte	32
	.word	31253
	.byte	11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	45568
	.byte	32
	.word	45597
	.byte	36
	.word	45613
	.byte	36
	.word	45614
	.byte	34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45707
	.byte	32
	.word	45731
	.byte	32
	.word	45747
	.byte	32
	.word	45764
	.byte	36
	.word	45780
	.byte	36
	.word	45781
	.byte	36
	.word	45782
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45784
	.byte	35
	.word	45785
	.byte	35
	.word	45786
	.byte	35
	.word	45787
	.byte	35
	.word	45788
	.byte	35
	.word	45789
	.byte	35
	.word	45790
	.byte	35
	.word	45791
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45615
	.byte	35
	.word	45616
	.byte	35
	.word	45617
	.byte	0,0,4,0,0,31
	.word	31275
	.byte	32
	.word	31311
	.byte	11,4,34
	.word	30417
	.byte	32
	.word	30454
	.byte	35
	.word	30472
	.byte	0,4,0,0,31
	.word	31343
	.byte	32
	.word	31376
	.byte	32
	.word	31393
	.byte	4,0,31
	.word	31410
	.byte	32
	.word	31452
	.byte	4,0,31
	.word	31474
	.byte	32
	.word	31511
	.byte	4,0,31
	.word	31533
	.byte	32
	.word	31567
	.byte	32
	.word	31585
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	31410
	.byte	32
	.word	31452
	.byte	35
	.word	31472
	.byte	0,4,34
	.word	31474
	.byte	32
	.word	31511
	.byte	35
	.word	31531
	.byte	0,4,34
	.word	31343
	.byte	32
	.word	31376
	.byte	32
	.word	31393
	.byte	35
	.word	31408
	.byte	0,4,0,0,31
	.word	31618
	.byte	32
	.word	31646
	.byte	32
	.word	31660
	.byte	4,0,31
	.word	31680
	.byte	32
	.word	31708
	.byte	32
	.word	31722
	.byte	4,0,31
	.word	31737
	.byte	32
	.word	31784
	.byte	32
	.word	31798
	.byte	4,0,33
	.byte	'Os_SchedulerInsert',0,30,245,2,21,1,1,1,1,5
	.byte	'Scheduler',0,30,247,2,56
	.word	16990
	.byte	5
	.byte	'Task',0,30,248,2,51
	.word	16617
	.byte	0,37
	.byte	'Os_SchedulerRemoveCurrentTask',0,30,183,3,52
	.word	16617
	.byte	1,1,1,1,5
	.byte	'Scheduler',0,30,185,3,56
	.word	16990
	.byte	0,37
	.byte	'Os_SchedulerInternalSchedule',0,30,159,4,64
	.word	16617
	.byte	1,1,1,1,5
	.byte	'Scheduler',0,30,161,4,56
	.word	16990
	.byte	0,31
	.word	31814
	.byte	32
	.word	31853
	.byte	4,0,31
	.word	31874
	.byte	32
	.word	31917
	.byte	4,0,31
	.word	31943
	.byte	32
	.word	31966
	.byte	4,0,31
	.word	31995
	.byte	32
	.word	32023
	.byte	4,0,31
	.word	32043
	.byte	32
	.word	32079
	.byte	4,0,31
	.word	32099
	.byte	32
	.word	32130
	.byte	4,0,31
	.word	32150
	.byte	32
	.word	32182
	.byte	11,34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,4,34
	.word	32300
	.byte	32
	.word	32330
	.byte	35
	.word	32344
	.byte	0,4,0,0,31
	.word	32205
	.byte	32
	.word	32242
	.byte	11,34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,4,0,0,31
	.word	32264
	.byte	32
	.word	32284
	.byte	4,0,31
	.word	32300
	.byte	32
	.word	32330
	.byte	4,0,31
	.word	32346
	.byte	32
	.word	32390
	.byte	4,0,31
	.word	32406
	.byte	32
	.word	32432
	.byte	4,0,31
	.word	32453
	.byte	32
	.word	32480
	.byte	4,0,31
	.word	32641
	.byte	32
	.word	32671
	.byte	11,34
	.word	32406
	.byte	32
	.word	32432
	.byte	35
	.word	32446
	.byte	0,4,0,0,31
	.word	32693
	.byte	32
	.word	32731
	.byte	11,4,34
	.word	36658
	.byte	32
	.word	36688
	.byte	36
	.word	36706
	.byte	35
	.word	36707
	.byte	0,0,4,34
	.word	32641
	.byte	32
	.word	32671
	.byte	36
	.word	32689
	.byte	34
	.word	32406
	.byte	32
	.word	32432
	.byte	35
	.word	32446
	.byte	0,35
	.word	32690
	.byte	0,0,4,34
	.word	30669
	.byte	32
	.word	30700
	.byte	35
	.word	30718
	.byte	0,4,0,0,31
	.word	32756
	.byte	32
	.word	32789
	.byte	11,34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,4,0,0,31
	.word	32816
	.byte	11,34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,4,0,0,31
	.word	32854
	.byte	32
	.word	32882
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	32900
	.byte	32
	.word	32929
	.byte	4,0,31
	.word	32945
	.byte	32
	.word	32987
	.byte	4,0,31
	.word	33003
	.byte	32
	.word	33032
	.byte	4,0,31
	.word	33048
	.byte	32
	.word	33082
	.byte	4,0,31
	.word	33314
	.byte	32
	.word	33349
	.byte	4,0,31
	.word	33365
	.byte	32
	.word	33396
	.byte	4,0,31
	.word	33412
	.byte	32
	.word	33444
	.byte	4,0,31
	.word	33460
	.byte	32
	.word	33492
	.byte	4,0,31
	.word	33508
	.byte	32
	.word	33555
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,4,0,0,31
	.word	33574
	.byte	32
	.word	33615
	.byte	32
	.word	33629
	.byte	11,34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,4,0,0,31
	.word	33646
	.byte	32
	.word	33692
	.byte	4,0,31
	.word	33712
	.byte	32
	.word	33737
	.byte	11,34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,4,34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,4,34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,4,0,0,31
	.word	33759
	.byte	11,34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,4,34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,4,34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,4,0,0,31
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	11,34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,4,0,0,31
	.word	33858
	.byte	11,34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,4,34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,4,34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,4,0,0,31
	.word	34334
	.byte	4,0,31
	.word	34371
	.byte	32
	.word	34407
	.byte	4,0,31
	.word	34425
	.byte	32
	.word	34459
	.byte	32
	.word	34478
	.byte	32
	.word	34493
	.byte	4,0,31
	.word	34518
	.byte	32
	.word	34552
	.byte	32
	.word	34571
	.byte	32
	.word	34586
	.byte	4,0,31
	.word	34611
	.byte	32
	.word	34637
	.byte	32
	.word	34652
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	35610
	.byte	32
	.word	35646
	.byte	32
	.word	35669
	.byte	32
	.word	35686
	.byte	36
	.word	35718
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35719
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35720
	.byte	0,0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	36
	.word	35839
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35840
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35841
	.byte	0,0,4,0,0,31
	.word	34675
	.byte	32
	.word	34703
	.byte	32
	.word	34719
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	35610
	.byte	32
	.word	35646
	.byte	32
	.word	35669
	.byte	32
	.word	35686
	.byte	36
	.word	35718
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35719
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35720
	.byte	0,0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,4,34
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	36
	.word	35839
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35840
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35841
	.byte	0,0,4,0,0,31
	.word	34745
	.byte	32
	.word	34780
	.byte	32
	.word	34797
	.byte	4,0,31
	.word	34919
	.byte	32
	.word	34950
	.byte	32
	.word	34967
	.byte	4,0,31
	.word	34994
	.byte	32
	.word	35034
	.byte	32
	.word	35051
	.byte	4,0,31
	.word	35077
	.byte	32
	.word	35114
	.byte	4,0,31
	.word	35143
	.byte	32
	.word	35177
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,4,0,0,33
	.byte	'Os_Hal_ContextSwitch',0,7,179,3,1,1,1,1,1,5
	.byte	'Current',0,7,179,3,1
	.word	5024
	.byte	5
	.byte	'Next',0,7,179,3,1
	.word	35138
	.byte	0,31
	.word	35197
	.byte	32
	.word	35234
	.byte	32
	.word	35257
	.byte	32
	.word	35274
	.byte	11,11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,34
	.word	35610
	.byte	32
	.word	35646
	.byte	32
	.word	35669
	.byte	32
	.word	35686
	.byte	36
	.word	35718
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35719
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35720
	.byte	0,0,34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,34
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	36
	.word	35839
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35840
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35841
	.byte	0,0,0,4,4,34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,4,4,4,34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,4,0,0,31
	.word	35298
	.byte	32
	.word	35326
	.byte	32
	.word	35342
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,4,34
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	36
	.word	35839
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35840
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35841
	.byte	0,0,4,0,0,31
	.word	35367
	.byte	32
	.word	35396
	.byte	32
	.word	35413
	.byte	11,34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,4,34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,4,34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,4,0,0,31
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	11,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,0,0,31
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	11,34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,4,0,0,31
	.word	35610
	.byte	32
	.word	35646
	.byte	32
	.word	35669
	.byte	32
	.word	35686
	.byte	11,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,4,0,0,31
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	11,34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,4,34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,4,0,0,31
	.word	35844
	.byte	32
	.word	35877
	.byte	4,0,31
	.word	35935
	.byte	32
	.word	35959
	.byte	32
	.word	35975
	.byte	4,0,31
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	4,0,31
	.word	36058
	.byte	32
	.word	36080
	.byte	4,0,31
	.word	36104
	.byte	32
	.word	36131
	.byte	4,0,31
	.word	36149
	.byte	32
	.word	36184
	.byte	11,4,0,0,31
	.word	36202
	.byte	32
	.word	36231
	.byte	32
	.word	36257
	.byte	32
	.word	36274
	.byte	11,4,4,0,0,31
	.word	36293
	.byte	32
	.word	36330
	.byte	32
	.word	36347
	.byte	11,4,4,0,0,31
	.word	36366
	.byte	32
	.word	36405
	.byte	32
	.word	36422
	.byte	11,4,4,0,0,31
	.word	36441
	.byte	32
	.word	36470
	.byte	32
	.word	36484
	.byte	32
	.word	36503
	.byte	11,4,0,0,31
	.word	36529
	.byte	32
	.word	36565
	.byte	32
	.word	36579
	.byte	11,4,0,0,31
	.word	36602
	.byte	32
	.word	36636
	.byte	11,4,0,0,31
	.word	36658
	.byte	32
	.word	36688
	.byte	11,4,0,0,31
	.word	36710
	.byte	32
	.word	36743
	.byte	11,4,0,0,31
	.word	36765
	.byte	11,4,0,0,31
	.word	36810
	.byte	11,4,0,0,31
	.word	36854
	.byte	11,4,0,0,31
	.word	36898
	.byte	11,4,0,0,31
	.word	36941
	.byte	32
	.word	36974
	.byte	4,0,31
	.word	36991
	.byte	32
	.word	37021
	.byte	4,0,31
	.word	37039
	.byte	32
	.word	37072
	.byte	4,0,31
	.word	37090
	.byte	32
	.word	37132
	.byte	4,0,31
	.word	37150
	.byte	32
	.word	37179
	.byte	4,0,31
	.word	37197
	.byte	32
	.word	37233
	.byte	4,0,31
	.word	37251
	.byte	32
	.word	37279
	.byte	4,0,31
	.word	37297
	.byte	32
	.word	37324
	.byte	4,0,31
	.word	37342
	.byte	32
	.word	37383
	.byte	32
	.word	37399
	.byte	4,0,31
	.word	37418
	.byte	32
	.word	37446
	.byte	4,0,31
	.word	37464
	.byte	32
	.word	37502
	.byte	32
	.word	37518
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,34
	.word	37197
	.byte	32
	.word	37233
	.byte	35
	.word	37249
	.byte	0,4,0,0,31
	.word	37553
	.byte	32
	.word	37594
	.byte	4,0,31
	.word	37612
	.byte	32
	.word	37655
	.byte	4,0,31
	.word	37673
	.byte	32
	.word	37713
	.byte	11,34
	.word	31995
	.byte	32
	.word	32023
	.byte	35
	.word	32041
	.byte	0,4,34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,4,34
	.word	32150
	.byte	32
	.word	32182
	.byte	36
	.word	32200
	.byte	34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,35
	.word	32201
	.byte	34
	.word	32300
	.byte	32
	.word	32330
	.byte	35
	.word	32344
	.byte	0,35
	.word	32202
	.byte	0,0,4,0,0,31
	.word	37735
	.byte	32
	.word	37774
	.byte	11,34
	.word	31995
	.byte	32
	.word	32023
	.byte	35
	.word	32041
	.byte	0,4,34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,4,34
	.word	32205
	.byte	32
	.word	32242
	.byte	36
	.word	32260
	.byte	34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,35
	.word	32261
	.byte	0,0,4,0,0,31
	.word	37796
	.byte	32
	.word	37840
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,34
	.word	37673
	.byte	32
	.word	37713
	.byte	36
	.word	37729
	.byte	34
	.word	31995
	.byte	32
	.word	32023
	.byte	35
	.word	32041
	.byte	0,35
	.word	37730
	.byte	34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,35
	.word	37731
	.byte	34
	.word	32150
	.byte	32
	.word	32182
	.byte	36
	.word	32200
	.byte	34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,35
	.word	32201
	.byte	34
	.word	32300
	.byte	32
	.word	32330
	.byte	35
	.word	32344
	.byte	0,35
	.word	32202
	.byte	0,0,35
	.word	37732
	.byte	0,0,4,0,0,31
	.word	37861
	.byte	32
	.word	37905
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,34
	.word	37735
	.byte	32
	.word	37774
	.byte	36
	.word	37790
	.byte	34
	.word	31995
	.byte	32
	.word	32023
	.byte	35
	.word	32041
	.byte	0,35
	.word	37791
	.byte	34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,35
	.word	37792
	.byte	34
	.word	32205
	.byte	32
	.word	32242
	.byte	36
	.word	32260
	.byte	34
	.word	32099
	.byte	32
	.word	32130
	.byte	35
	.word	32148
	.byte	0,35
	.word	32261
	.byte	0,0,35
	.word	37793
	.byte	0,0,4,0,0,31
	.word	37926
	.byte	32
	.word	37973
	.byte	11,34
	.word	37090
	.byte	32
	.word	37132
	.byte	35
	.word	37148
	.byte	0,4,34
	.word	30932
	.byte	32
	.word	30969
	.byte	36
	.word	30993
	.byte	34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,35
	.word	30994
	.byte	0,0,4,0,0,31
	.word	37994
	.byte	32
	.word	38032
	.byte	4,0,31
	.word	38050
	.byte	32
	.word	38088
	.byte	4,0,31
	.word	38106
	.byte	32
	.word	38141
	.byte	11,34
	.word	30997
	.byte	32
	.word	31025
	.byte	35
	.word	31049
	.byte	0,4,34
	.word	38050
	.byte	32
	.word	38088
	.byte	35
	.word	38104
	.byte	0,4,34
	.word	37994
	.byte	32
	.word	38032
	.byte	35
	.word	38048
	.byte	0,4,0,0,31
	.word	38163
	.byte	32
	.word	38195
	.byte	32
	.word	38209
	.byte	11,11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	45070
	.byte	32
	.word	45098
	.byte	32
	.word	45114
	.byte	32
	.word	45131
	.byte	32
	.word	45145
	.byte	36
	.word	45165
	.byte	36
	.word	45166
	.byte	36
	.word	45167
	.byte	34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,35
	.word	45169
	.byte	35
	.word	45170
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45171
	.byte	35
	.word	45172
	.byte	35
	.word	45173
	.byte	35
	.word	45174
	.byte	35
	.word	45175
	.byte	35
	.word	45176
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	38749
	.byte	32
	.word	38781
	.byte	36
	.word	38797
	.byte	35
	.word	38798
	.byte	0,0,4,34
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	35
	.word	36056
	.byte	0,4,34
	.word	38897
	.byte	32
	.word	38932
	.byte	35
	.word	38948
	.byte	0,4,4,4,4,4,34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,4,34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,4,34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,4,34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,4,34
	.word	37251
	.byte	32
	.word	37279
	.byte	35
	.word	37295
	.byte	0,4,34
	.word	30791
	.byte	36
	.word	30821
	.byte	36
	.word	30822
	.byte	34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,35
	.word	30823
	.byte	35
	.word	30824
	.byte	0,0,4,34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,4,34
	.word	35197
	.byte	32
	.word	35234
	.byte	32
	.word	35257
	.byte	32
	.word	35274
	.byte	36
	.word	35288
	.byte	36
	.word	35289
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,34
	.word	35610
	.byte	32
	.word	35646
	.byte	32
	.word	35669
	.byte	32
	.word	35686
	.byte	36
	.word	35718
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35719
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35720
	.byte	0,0,34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,34
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	36
	.word	35839
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35840
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35841
	.byte	0,0,0,35
	.word	35290
	.byte	35
	.word	35291
	.byte	34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,35
	.word	35292
	.byte	35
	.word	35293
	.byte	35
	.word	35294
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35295
	.byte	0,0,4,4,0,0,31
	.word	38257
	.byte	32
	.word	38285
	.byte	32
	.word	38299
	.byte	11,34
	.word	36058
	.byte	32
	.word	36080
	.byte	35
	.word	36102
	.byte	0,4,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,4,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,4,34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,4,34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,4,34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,4,34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,4,34
	.word	35143
	.byte	32
	.word	35177
	.byte	36
	.word	35191
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	35192
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35193
	.byte	34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,35
	.word	35194
	.byte	0,0,4,34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,4,34
	.word	45070
	.byte	32
	.word	45098
	.byte	32
	.word	45114
	.byte	32
	.word	45131
	.byte	32
	.word	45145
	.byte	36
	.word	45165
	.byte	36
	.word	45166
	.byte	36
	.word	45167
	.byte	34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,35
	.word	45169
	.byte	35
	.word	45170
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45171
	.byte	35
	.word	45172
	.byte	35
	.word	45173
	.byte	35
	.word	45174
	.byte	35
	.word	45175
	.byte	35
	.word	45176
	.byte	0,0,4,0,0,31
	.word	38341
	.byte	32
	.word	38375
	.byte	32
	.word	38389
	.byte	11,11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	45070
	.byte	32
	.word	45098
	.byte	32
	.word	45114
	.byte	32
	.word	45131
	.byte	32
	.word	45145
	.byte	36
	.word	45165
	.byte	36
	.word	45166
	.byte	36
	.word	45167
	.byte	34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,35
	.word	45169
	.byte	35
	.word	45170
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45171
	.byte	35
	.word	45172
	.byte	35
	.word	45173
	.byte	35
	.word	45174
	.byte	35
	.word	45175
	.byte	35
	.word	45176
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	35
	.word	36056
	.byte	0,4,34
	.word	38897
	.byte	32
	.word	38932
	.byte	35
	.word	38948
	.byte	0,4,4,4,4,4,34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,4,34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,4,34
	.word	35367
	.byte	32
	.word	35396
	.byte	32
	.word	35413
	.byte	36
	.word	35427
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	35428
	.byte	34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,35
	.word	35429
	.byte	34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,35
	.word	35430
	.byte	0,0,4,34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,4,34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,4,34
	.word	37251
	.byte	32
	.word	37279
	.byte	35
	.word	37295
	.byte	0,4,34
	.word	30791
	.byte	36
	.word	30821
	.byte	36
	.word	30822
	.byte	34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,35
	.word	30823
	.byte	35
	.word	30824
	.byte	0,0,4,34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,4,4,0,0,31
	.word	38436
	.byte	32
	.word	38460
	.byte	32
	.word	38477
	.byte	32
	.word	38491
	.byte	11,11,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	44969
	.byte	32
	.word	44989
	.byte	32
	.word	45005
	.byte	32
	.word	45022
	.byte	32
	.word	45036
	.byte	36
	.word	45056
	.byte	36
	.word	45057
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44678
	.byte	32
	.word	44699
	.byte	32
	.word	44715
	.byte	32
	.word	44732
	.byte	32
	.word	44745
	.byte	36
	.word	44763
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44764
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	44765
	.byte	34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,35
	.word	44766
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,35
	.word	45058
	.byte	35
	.word	45059
	.byte	35
	.word	45060
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45061
	.byte	35
	.word	45062
	.byte	35
	.word	45063
	.byte	35
	.word	45064
	.byte	35
	.word	45065
	.byte	35
	.word	45066
	.byte	35
	.word	45067
	.byte	0,0,0,34
	.word	38846
	.byte	32
	.word	38879
	.byte	35
	.word	38895
	.byte	0,4,34
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	35
	.word	36056
	.byte	0,4,34
	.word	38897
	.byte	32
	.word	38932
	.byte	35
	.word	38948
	.byte	0,4,4,4,4,4,34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,4,34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,4,34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,4,34
	.word	30791
	.byte	36
	.word	30821
	.byte	36
	.word	30822
	.byte	34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,35
	.word	30823
	.byte	35
	.word	30824
	.byte	0,0,4,34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,4,4,0,0,31
	.word	38535
	.byte	32
	.word	38572
	.byte	4,0,31
	.word	38590
	.byte	32
	.word	38625
	.byte	32
	.word	38641
	.byte	11,34
	.word	34994
	.byte	32
	.word	35034
	.byte	32
	.word	35051
	.byte	35
	.word	35075
	.byte	0,4,0,0,31
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	4,0,31
	.word	38749
	.byte	32
	.word	38781
	.byte	11,4,0,0,31
	.word	38801
	.byte	32
	.word	38826
	.byte	11,4,0,0,31
	.word	38846
	.byte	32
	.word	38879
	.byte	4,0,31
	.word	38897
	.byte	32
	.word	38932
	.byte	4,0,31
	.word	38950
	.byte	32
	.word	38978
	.byte	11,34
	.word	3645
	.byte	32
	.word	3677
	.byte	35
	.word	3696
	.byte	0,4,0,0,31
	.word	38995
	.byte	32
	.word	39023
	.byte	4,0,31
	.word	39038
	.byte	32
	.word	39066
	.byte	32
	.word	39079
	.byte	11,34
	.word	39144
	.byte	32
	.word	39171
	.byte	36
	.word	39184
	.byte	34
	.word	3750
	.byte	32
	.word	3781
	.byte	35
	.word	3800
	.byte	0,35
	.word	39185
	.byte	0,0,4,34
	.word	39106
	.byte	32
	.word	39127
	.byte	36
	.word	39140
	.byte	34
	.word	3698
	.byte	32
	.word	3729
	.byte	35
	.word	3748
	.byte	0,35
	.word	39141
	.byte	0,0,4,0,0,31
	.word	39106
	.byte	32
	.word	39127
	.byte	11,34
	.word	3698
	.byte	32
	.word	3729
	.byte	35
	.word	3748
	.byte	0,4,0,0,31
	.word	39144
	.byte	32
	.word	39171
	.byte	11,34
	.word	3750
	.byte	32
	.word	3781
	.byte	35
	.word	3800
	.byte	0,4,0,0,31
	.word	39198
	.byte	32
	.word	39232
	.byte	32
	.word	39246
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	39273
	.byte	32
	.word	39317
	.byte	4,0,31
	.word	39346
	.byte	32
	.word	39370
	.byte	32
	.word	39388
	.byte	32
	.word	39408
	.byte	32
	.word	39429
	.byte	11,4,0,0,31
	.word	39453
	.byte	32
	.word	39495
	.byte	32
	.word	39513
	.byte	32
	.word	39533
	.byte	4,0,31
	.word	39551
	.byte	32
	.word	39584
	.byte	32
	.word	39602
	.byte	32
	.word	39622
	.byte	32
	.word	39638
	.byte	11,34
	.word	39346
	.byte	32
	.word	39370
	.byte	32
	.word	39388
	.byte	32
	.word	39408
	.byte	32
	.word	39429
	.byte	36
	.word	39449
	.byte	35
	.word	39450
	.byte	0,0,4,0,0,31
	.word	39656
	.byte	32
	.word	39694
	.byte	32
	.word	39712
	.byte	32
	.word	39732
	.byte	32
	.word	39748
	.byte	4,0,31
	.word	39790
	.byte	32
	.word	39823
	.byte	32
	.word	39841
	.byte	32
	.word	39861
	.byte	32
	.word	39877
	.byte	4,0,31
	.word	39898
	.byte	32
	.word	39924
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	252
	.byte	32
	.word	280
	.byte	32
	.word	292
	.byte	35
	.word	309
	.byte	0,4,0,0,31
	.word	39944
	.byte	32
	.word	39972
	.byte	4,0,31
	.word	39987
	.byte	32
	.word	40017
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	37251
	.byte	32
	.word	37279
	.byte	35
	.word	37295
	.byte	0,4,0,0,31
	.word	40252
	.byte	32
	.word	40278
	.byte	11,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,0,0,31
	.word	40296
	.byte	32
	.word	40320
	.byte	32
	.word	40334
	.byte	11,34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,4,0,0,31
	.word	40353
	.byte	32
	.word	40378
	.byte	4,0,31
	.word	40394
	.byte	32
	.word	40438
	.byte	4,0,31
	.word	40454
	.byte	32
	.word	40486
	.byte	11,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	33460
	.byte	32
	.word	33492
	.byte	35
	.word	33506
	.byte	0,4,0,0,31
	.word	40511
	.byte	32
	.word	40539
	.byte	11,34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,4,0,0,31
	.word	40557
	.byte	32
	.word	40584
	.byte	11,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,0,0,31
	.word	40603
	.byte	32
	.word	40634
	.byte	11,34
	.word	32756
	.byte	32
	.word	32789
	.byte	36
	.word	32802
	.byte	34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,35
	.word	32803
	.byte	0,0,4,34
	.word	40557
	.byte	32
	.word	40584
	.byte	36
	.word	40598
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40599
	.byte	34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,35
	.word	40600
	.byte	0,0,4,0,0,31
	.word	40653
	.byte	32
	.word	40680
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,34
	.word	252
	.byte	32
	.word	280
	.byte	32
	.word	292
	.byte	35
	.word	309
	.byte	0,4,0,0,31
	.word	40701
	.byte	32
	.word	40740
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,31
	.word	40758
	.byte	32
	.word	40797
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,4,0,0,31
	.word	40816
	.byte	32
	.word	40845
	.byte	11,34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,4,0,0,31
	.word	40863
	.byte	32
	.word	40885
	.byte	32
	.word	40904
	.byte	11,34
	.word	41090
	.byte	36
	.word	41122
	.byte	35
	.word	41123
	.byte	0,0,4,34
	.word	36202
	.byte	32
	.word	36231
	.byte	32
	.word	36257
	.byte	32
	.word	36274
	.byte	36
	.word	36288
	.byte	35
	.word	36289
	.byte	35
	.word	36290
	.byte	0,0,4,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,34
	.word	36991
	.byte	32
	.word	37021
	.byte	35
	.word	37037
	.byte	0,4,34
	.word	36991
	.byte	32
	.word	37021
	.byte	35
	.word	37037
	.byte	0,4,34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,4,34
	.word	39987
	.byte	32
	.word	40017
	.byte	36
	.word	40032
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40033
	.byte	34
	.word	37251
	.byte	32
	.word	37279
	.byte	35
	.word	37295
	.byte	0,35
	.word	40034
	.byte	0,0,4,34
	.word	38436
	.byte	32
	.word	38460
	.byte	32
	.word	38477
	.byte	32
	.word	38491
	.byte	36
	.word	38518
	.byte	36
	.word	38519
	.byte	34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	44969
	.byte	32
	.word	44989
	.byte	32
	.word	45005
	.byte	32
	.word	45022
	.byte	32
	.word	45036
	.byte	36
	.word	45056
	.byte	36
	.word	45057
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44678
	.byte	32
	.word	44699
	.byte	32
	.word	44715
	.byte	32
	.word	44732
	.byte	32
	.word	44745
	.byte	36
	.word	44763
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44764
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	44765
	.byte	34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,35
	.word	44766
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,35
	.word	45058
	.byte	35
	.word	45059
	.byte	35
	.word	45060
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45061
	.byte	35
	.word	45062
	.byte	35
	.word	45063
	.byte	35
	.word	45064
	.byte	35
	.word	45065
	.byte	35
	.word	45066
	.byte	35
	.word	45067
	.byte	0,0,0,34
	.word	38846
	.byte	32
	.word	38879
	.byte	35
	.word	38895
	.byte	0,35
	.word	38520
	.byte	34
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	35
	.word	36056
	.byte	0,35
	.word	38521
	.byte	34
	.word	38897
	.byte	32
	.word	38932
	.byte	35
	.word	38948
	.byte	0,35
	.word	38522
	.byte	35
	.word	38523
	.byte	35
	.word	38524
	.byte	35
	.word	38525
	.byte	35
	.word	38526
	.byte	34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,35
	.word	38527
	.byte	34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,35
	.word	38528
	.byte	34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,35
	.word	38529
	.byte	34
	.word	30791
	.byte	36
	.word	30821
	.byte	36
	.word	30822
	.byte	34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,35
	.word	30823
	.byte	35
	.word	30824
	.byte	0,0,35
	.word	38530
	.byte	34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,35
	.word	38531
	.byte	35
	.word	38532
	.byte	0,0,4,0,0,31
	.word	40937
	.byte	32
	.word	40959
	.byte	11,34
	.word	41090
	.byte	36
	.word	41122
	.byte	35
	.word	41123
	.byte	0,0,4,34
	.word	36293
	.byte	32
	.word	36330
	.byte	32
	.word	36347
	.byte	36
	.word	36361
	.byte	35
	.word	36362
	.byte	35
	.word	36363
	.byte	0,0,4,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,34
	.word	36991
	.byte	32
	.word	37021
	.byte	35
	.word	37037
	.byte	0,4,34
	.word	36991
	.byte	32
	.word	37021
	.byte	35
	.word	37037
	.byte	0,4,34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,4,34
	.word	38163
	.byte	32
	.word	38195
	.byte	32
	.word	38209
	.byte	36
	.word	38236
	.byte	36
	.word	38237
	.byte	34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	45070
	.byte	32
	.word	45098
	.byte	32
	.word	45114
	.byte	32
	.word	45131
	.byte	32
	.word	45145
	.byte	36
	.word	45165
	.byte	36
	.word	45166
	.byte	36
	.word	45167
	.byte	34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,35
	.word	45169
	.byte	35
	.word	45170
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45171
	.byte	35
	.word	45172
	.byte	35
	.word	45173
	.byte	35
	.word	45174
	.byte	35
	.word	45175
	.byte	35
	.word	45176
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	38238
	.byte	34
	.word	38749
	.byte	32
	.word	38781
	.byte	36
	.word	38797
	.byte	35
	.word	38798
	.byte	0,0,35
	.word	38239
	.byte	34
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	35
	.word	36056
	.byte	0,35
	.word	38240
	.byte	34
	.word	38897
	.byte	32
	.word	38932
	.byte	35
	.word	38948
	.byte	0,35
	.word	38241
	.byte	35
	.word	38242
	.byte	35
	.word	38243
	.byte	35
	.word	38244
	.byte	35
	.word	38245
	.byte	34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,35
	.word	38246
	.byte	34
	.word	33759
	.byte	36
	.word	33788
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33789
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33790
	.byte	34
	.word	30359
	.byte	32
	.word	30392
	.byte	36
	.word	30413
	.byte	34
	.word	210
	.byte	35
	.word	234
	.byte	0,35
	.word	30414
	.byte	0,0,35
	.word	33791
	.byte	0,0,35
	.word	38247
	.byte	34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,35
	.word	38248
	.byte	34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,35
	.word	38249
	.byte	34
	.word	37251
	.byte	32
	.word	37279
	.byte	35
	.word	37295
	.byte	0,35
	.word	38250
	.byte	34
	.word	30791
	.byte	36
	.word	30821
	.byte	36
	.word	30822
	.byte	34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,35
	.word	30823
	.byte	35
	.word	30824
	.byte	0,0,35
	.word	38251
	.byte	34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,35
	.word	38252
	.byte	34
	.word	35197
	.byte	32
	.word	35234
	.byte	32
	.word	35257
	.byte	32
	.word	35274
	.byte	36
	.word	35288
	.byte	36
	.word	35289
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,34
	.word	35610
	.byte	32
	.word	35646
	.byte	32
	.word	35669
	.byte	32
	.word	35686
	.byte	36
	.word	35718
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35719
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35720
	.byte	0,0,34
	.word	35433
	.byte	32
	.word	35470
	.byte	32
	.word	35487
	.byte	36
	.word	35519
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35520
	.byte	0,0,34
	.word	35723
	.byte	32
	.word	35767
	.byte	32
	.word	35790
	.byte	32
	.word	35807
	.byte	36
	.word	35839
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35840
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	35841
	.byte	0,0,0,35
	.word	35290
	.byte	35
	.word	35291
	.byte	34
	.word	35844
	.byte	32
	.word	35877
	.byte	35
	.word	35894
	.byte	0,35
	.word	35292
	.byte	35
	.word	35293
	.byte	35
	.word	35294
	.byte	34
	.word	35523
	.byte	32
	.word	35566
	.byte	32
	.word	35589
	.byte	36
	.word	35606
	.byte	34
	.word	4734
	.byte	32
	.word	4767
	.byte	32
	.word	4785
	.byte	35
	.word	4808
	.byte	0,35
	.word	35607
	.byte	0,0,35
	.word	35295
	.byte	0,0,35
	.word	38253
	.byte	35
	.word	38254
	.byte	0,0,4,0,0,31
	.word	40988
	.byte	32
	.word	41008
	.byte	11,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,4,34
	.word	40296
	.byte	32
	.word	40320
	.byte	32
	.word	40334
	.byte	36
	.word	40349
	.byte	34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,35
	.word	40350
	.byte	0,0,4,34
	.word	40454
	.byte	32
	.word	40486
	.byte	36
	.word	40500
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40501
	.byte	34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,35
	.word	40502
	.byte	34
	.word	33460
	.byte	32
	.word	33492
	.byte	35
	.word	33506
	.byte	0,35
	.word	40503
	.byte	0,0,4,34
	.word	40863
	.byte	32
	.word	40885
	.byte	32
	.word	40904
	.byte	36
	.word	40926
	.byte	34
	.word	41090
	.byte	36
	.word	41122
	.byte	35
	.word	41123
	.byte	0,0,35
	.word	40927
	.byte	34
	.word	36202
	.byte	32
	.word	36231
	.byte	32
	.word	36257
	.byte	32
	.word	36274
	.byte	36
	.word	36288
	.byte	35
	.word	36289
	.byte	35
	.word	36290
	.byte	0,0,35
	.word	40928
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40929
	.byte	34
	.word	36991
	.byte	32
	.word	37021
	.byte	35
	.word	37037
	.byte	0,35
	.word	40930
	.byte	34
	.word	36991
	.byte	32
	.word	37021
	.byte	35
	.word	37037
	.byte	0,35
	.word	40931
	.byte	34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,35
	.word	40932
	.byte	34
	.word	39987
	.byte	32
	.word	40017
	.byte	36
	.word	40032
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	40033
	.byte	34
	.word	37251
	.byte	32
	.word	37279
	.byte	35
	.word	37295
	.byte	0,35
	.word	40034
	.byte	0,0,35
	.word	40933
	.byte	34
	.word	38436
	.byte	32
	.word	38460
	.byte	32
	.word	38477
	.byte	32
	.word	38491
	.byte	36
	.word	38518
	.byte	36
	.word	38519
	.byte	34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,34
	.word	44969
	.byte	32
	.word	44989
	.byte	32
	.word	45005
	.byte	32
	.word	45022
	.byte	32
	.word	45036
	.byte	36
	.word	45056
	.byte	36
	.word	45057
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44678
	.byte	32
	.word	44699
	.byte	32
	.word	44715
	.byte	32
	.word	44732
	.byte	32
	.word	44745
	.byte	36
	.word	44763
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44764
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	44765
	.byte	34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,35
	.word	44766
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,35
	.word	45058
	.byte	35
	.word	45059
	.byte	35
	.word	45060
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45061
	.byte	35
	.word	45062
	.byte	35
	.word	45063
	.byte	35
	.word	45064
	.byte	35
	.word	45065
	.byte	35
	.word	45066
	.byte	35
	.word	45067
	.byte	0,0,0,34
	.word	38846
	.byte	32
	.word	38879
	.byte	35
	.word	38895
	.byte	0,35
	.word	38520
	.byte	34
	.word	36005
	.byte	32
	.word	36025
	.byte	32
	.word	36042
	.byte	35
	.word	36056
	.byte	0,35
	.word	38521
	.byte	34
	.word	38897
	.byte	32
	.word	38932
	.byte	35
	.word	38948
	.byte	0,35
	.word	38522
	.byte	35
	.word	38523
	.byte	35
	.word	38524
	.byte	35
	.word	38525
	.byte	35
	.word	38526
	.byte	34
	.word	33794
	.byte	32
	.word	33825
	.byte	32
	.word	33840
	.byte	36
	.word	33854
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33855
	.byte	0,0,35
	.word	38527
	.byte	34
	.word	38669
	.byte	32
	.word	38704
	.byte	32
	.word	38720
	.byte	35
	.word	38747
	.byte	0,35
	.word	38528
	.byte	34
	.word	33712
	.byte	32
	.word	33737
	.byte	36
	.word	33753
	.byte	34
	.word	34334
	.byte	35
	.word	34359
	.byte	0,35
	.word	33754
	.byte	34
	.word	34371
	.byte	32
	.word	34407
	.byte	35
	.word	34423
	.byte	0,35
	.word	33755
	.byte	34
	.word	29968
	.byte	32
	.word	29997
	.byte	32
	.word	30018
	.byte	36
	.word	30034
	.byte	34
	.word	4004
	.byte	32
	.word	4037
	.byte	35
	.word	4052
	.byte	0,35
	.word	30035
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30036
	.byte	0,0,35
	.word	33756
	.byte	0,0,35
	.word	38529
	.byte	34
	.word	30791
	.byte	36
	.word	30821
	.byte	36
	.word	30822
	.byte	34
	.word	30474
	.byte	32
	.word	30505
	.byte	32
	.word	30525
	.byte	35
	.word	30546
	.byte	0,34
	.word	33858
	.byte	36
	.word	33893
	.byte	34
	.word	32900
	.byte	32
	.word	32929
	.byte	35
	.word	32943
	.byte	0,35
	.word	33894
	.byte	34
	.word	32816
	.byte	36
	.word	32850
	.byte	34
	.word	4810
	.byte	35
	.word	4839
	.byte	0,35
	.word	32851
	.byte	0,0,35
	.word	33895
	.byte	34
	.word	32854
	.byte	32
	.word	32882
	.byte	36
	.word	32896
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	32897
	.byte	0,0,35
	.word	33896
	.byte	0,0,0,35
	.word	30823
	.byte	35
	.word	30824
	.byte	0,0,35
	.word	38530
	.byte	34
	.word	35077
	.byte	32
	.word	35114
	.byte	35
	.word	35131
	.byte	0,35
	.word	38531
	.byte	35
	.word	38532
	.byte	0,0,35
	.word	40934
	.byte	0,0,4,34
	.word	45179
	.byte	32
	.word	45207
	.byte	32
	.word	45223
	.byte	36
	.word	45240
	.byte	36
	.word	45241
	.byte	36
	.word	45242
	.byte	34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,35
	.word	45244
	.byte	35
	.word	45245
	.byte	34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45246
	.byte	35
	.word	45247
	.byte	35
	.word	45248
	.byte	35
	.word	45249
	.byte	35
	.word	45250
	.byte	0,0,4,0,0,31
	.word	41033
	.byte	32
	.word	41066
	.byte	11,34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,4,34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,4,34
	.word	32945
	.byte	32
	.word	32987
	.byte	35
	.word	33001
	.byte	0,4,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,4,34
	.word	40296
	.byte	32
	.word	40320
	.byte	32
	.word	40334
	.byte	36
	.word	40349
	.byte	34
	.word	40252
	.byte	32
	.word	40278
	.byte	36
	.word	40292
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40293
	.byte	0,0,35
	.word	40350
	.byte	0,0,4,34
	.word	40454
	.byte	32
	.word	40486
	.byte	36
	.word	40500
	.byte	34
	.word	39944
	.byte	32
	.word	39972
	.byte	35
	.word	39985
	.byte	0,35
	.word	40501
	.byte	34
	.word	37150
	.byte	32
	.word	37179
	.byte	35
	.word	37195
	.byte	0,35
	.word	40502
	.byte	34
	.word	33460
	.byte	32
	.word	33492
	.byte	35
	.word	33506
	.byte	0,35
	.word	40503
	.byte	0,0,4,34
	.word	45253
	.byte	32
	.word	45288
	.byte	32
	.word	45304
	.byte	36
	.word	45322
	.byte	36
	.word	45323
	.byte	36
	.word	45324
	.byte	34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44912
	.byte	32
	.word	44949
	.byte	36
	.word	44965
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	44966
	.byte	0,0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45326
	.byte	35
	.word	45327
	.byte	35
	.word	45328
	.byte	35
	.word	45329
	.byte	35
	.word	45330
	.byte	0,0,4,0,0,31
	.word	41090
	.byte	11,4,0,0,31
	.word	41126
	.byte	32
	.word	41156
	.byte	4,0,31
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	11,34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,4,0,0,31
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	41415
	.byte	32
	.word	41460
	.byte	32
	.word	41477
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,31
	.word	41496
	.byte	32
	.word	41548
	.byte	32
	.word	41565
	.byte	32
	.word	41581
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,31
	.word	41601
	.byte	32
	.word	41650
	.byte	32
	.word	41667
	.byte	11,34
	.word	311
	.byte	32
	.word	343
	.byte	35
	.word	358
	.byte	0,4,0,0,31
	.word	41696
	.byte	32
	.word	41737
	.byte	4,0,31
	.word	41756
	.byte	32
	.word	41797
	.byte	4,0,31
	.word	41816
	.byte	32
	.word	41858
	.byte	4,0,31
	.word	41877
	.byte	32
	.word	41904
	.byte	4,0,31
	.word	41926
	.byte	32
	.word	41968
	.byte	4,0,31
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	4,0,31
	.word	42076
	.byte	32
	.word	42110
	.byte	4,0,31
	.word	42438
	.byte	32
	.word	42465
	.byte	4,0,31
	.word	42603
	.byte	32
	.word	42625
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	42644
	.byte	32
	.word	42675
	.byte	4,0,31
	.word	42692
	.byte	32
	.word	42726
	.byte	32
	.word	42741
	.byte	4,0,31
	.word	42767
	.byte	32
	.word	42800
	.byte	32
	.word	42815
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	42834
	.byte	32
	.word	42866
	.byte	11,34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,4,34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,4,34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,4,34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,4,0,0,31
	.word	42888
	.byte	32
	.word	42922
	.byte	4,0,31
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	11,11,4,0,0,0,31
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	11,4,34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,4,34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,4,34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,4,34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,4,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,4,0,0,31
	.word	43118
	.byte	32
	.word	43157
	.byte	4,0,31
	.word	43174
	.byte	32
	.word	43221
	.byte	32
	.word	43246
	.byte	32
	.word	43259
	.byte	4,0,31
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	11,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	11,4,34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,4,34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,4,0,0,31
	.word	43561
	.byte	32
	.word	43602
	.byte	4,0,31
	.word	43619
	.byte	32
	.word	43660
	.byte	4,0,31
	.word	44369
	.byte	32
	.word	44406
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	44437
	.byte	32
	.word	44477
	.byte	11,34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,4,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,4,0,0,31
	.word	44497
	.byte	32
	.word	44520
	.byte	32
	.word	44535
	.byte	11,4,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,0,0,31
	.word	44556
	.byte	32
	.word	44580
	.byte	11,4,34
	.word	45853
	.byte	32
	.word	45896
	.byte	35
	.word	45912
	.byte	0,4,0,0,31
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	11,34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,4,34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,4,0,0,31
	.word	44678
	.byte	32
	.word	44699
	.byte	32
	.word	44715
	.byte	32
	.word	44732
	.byte	32
	.word	44745
	.byte	11,34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,4,34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,4,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,4,0,0,31
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	11,34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,4,34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,4,34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,4,0,0,31
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	11,34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,4,34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,4,34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,4,34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,4,0,0,31
	.word	44912
	.byte	32
	.word	44949
	.byte	11,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,4,0,0,31
	.word	44969
	.byte	32
	.word	44989
	.byte	32
	.word	45005
	.byte	32
	.word	45022
	.byte	32
	.word	45036
	.byte	11,11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44678
	.byte	32
	.word	44699
	.byte	32
	.word	44715
	.byte	32
	.word	44732
	.byte	32
	.word	44745
	.byte	36
	.word	44763
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44764
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	44765
	.byte	34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,35
	.word	44766
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,4,4,4,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	45070
	.byte	32
	.word	45098
	.byte	32
	.word	45114
	.byte	32
	.word	45131
	.byte	32
	.word	45145
	.byte	11,11,11,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,4,4,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,4,4,4,0,0,31
	.word	45179
	.byte	32
	.word	45207
	.byte	32
	.word	45223
	.byte	11,11,11,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,0,4,4,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,4,4,0,0,31
	.word	45253
	.byte	32
	.word	45288
	.byte	32
	.word	45304
	.byte	11,11,11,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44912
	.byte	32
	.word	44949
	.byte	36
	.word	44965
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	44966
	.byte	0,0,0,34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,4,4,0,0,31
	.word	45333
	.byte	32
	.word	45368
	.byte	32
	.word	45385
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,34
	.word	252
	.byte	32
	.word	280
	.byte	32
	.word	292
	.byte	35
	.word	309
	.byte	0,4,0,0,31
	.word	45408
	.byte	32
	.word	45439
	.byte	11,11,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45620
	.byte	32
	.word	45645
	.byte	32
	.word	45661
	.byte	32
	.word	45678
	.byte	36
	.word	45694
	.byte	36
	.word	45695
	.byte	36
	.word	45696
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45698
	.byte	35
	.word	45699
	.byte	35
	.word	45700
	.byte	35
	.word	45701
	.byte	35
	.word	45702
	.byte	35
	.word	45703
	.byte	35
	.word	45704
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,0,0,31
	.word	45462
	.byte	32
	.word	45492
	.byte	11,11,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45707
	.byte	32
	.word	45731
	.byte	32
	.word	45747
	.byte	32
	.word	45764
	.byte	36
	.word	45780
	.byte	36
	.word	45781
	.byte	36
	.word	45782
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45784
	.byte	35
	.word	45785
	.byte	35
	.word	45786
	.byte	35
	.word	45787
	.byte	35
	.word	45788
	.byte	35
	.word	45789
	.byte	35
	.word	45790
	.byte	35
	.word	45791
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,0,0,31
	.word	45515
	.byte	32
	.word	45545
	.byte	11,11,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45620
	.byte	32
	.word	45645
	.byte	32
	.word	45661
	.byte	32
	.word	45678
	.byte	36
	.word	45694
	.byte	36
	.word	45695
	.byte	36
	.word	45696
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45698
	.byte	35
	.word	45699
	.byte	35
	.word	45700
	.byte	35
	.word	45701
	.byte	35
	.word	45702
	.byte	35
	.word	45703
	.byte	35
	.word	45704
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,0,0,31
	.word	45568
	.byte	32
	.word	45597
	.byte	11,11,34
	.word	44437
	.byte	32
	.word	44477
	.byte	36
	.word	44492
	.byte	34
	.word	37039
	.byte	32
	.word	37072
	.byte	35
	.word	37088
	.byte	0,35
	.word	44493
	.byte	34
	.word	44369
	.byte	32
	.word	44406
	.byte	36
	.word	44423
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	44424
	.byte	0,0,35
	.word	44494
	.byte	0,0,34
	.word	45707
	.byte	32
	.word	45731
	.byte	32
	.word	45747
	.byte	32
	.word	45764
	.byte	36
	.word	45780
	.byte	36
	.word	45781
	.byte	36
	.word	45782
	.byte	34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,35
	.word	45784
	.byte	35
	.word	45785
	.byte	35
	.word	45786
	.byte	35
	.word	45787
	.byte	35
	.word	45788
	.byte	35
	.word	45789
	.byte	35
	.word	45790
	.byte	35
	.word	45791
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,0,0,31
	.word	45620
	.byte	32
	.word	45645
	.byte	32
	.word	45661
	.byte	32
	.word	45678
	.byte	11,11,11,34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	45707
	.byte	32
	.word	45731
	.byte	32
	.word	45747
	.byte	32
	.word	45764
	.byte	11,11,11,34
	.word	43118
	.byte	32
	.word	43157
	.byte	35
	.word	43172
	.byte	0,34
	.word	44601
	.byte	32
	.word	44621
	.byte	32
	.word	44637
	.byte	32
	.word	44650
	.byte	36
	.word	44673
	.byte	34
	.word	44840
	.byte	32
	.word	44861
	.byte	32
	.word	44877
	.byte	32
	.word	44892
	.byte	36
	.word	44905
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44906
	.byte	34
	.word	41756
	.byte	32
	.word	41797
	.byte	35
	.word	41814
	.byte	0,35
	.word	44907
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44908
	.byte	34
	.word	43283
	.byte	32
	.word	43307
	.byte	32
	.word	43332
	.byte	32
	.word	43358
	.byte	32
	.word	43373
	.byte	36
	.word	43386
	.byte	35
	.word	43387
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43388
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43389
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43390
	.byte	0,0,35
	.word	44909
	.byte	0,0,35
	.word	44674
	.byte	34
	.word	43035
	.byte	32
	.word	43070
	.byte	32
	.word	43085
	.byte	36
	.word	43109
	.byte	35
	.word	43110
	.byte	34
	.word	42939
	.byte	32
	.word	42990
	.byte	32
	.word	43005
	.byte	36
	.word	43029
	.byte	36
	.word	43030
	.byte	35
	.word	43031
	.byte	0,0,0,35
	.word	43111
	.byte	34
	.word	42076
	.byte	32
	.word	42110
	.byte	35
	.word	42131
	.byte	0,35
	.word	43112
	.byte	34
	.word	43477
	.byte	32
	.word	43512
	.byte	32
	.word	43533
	.byte	36
	.word	43555
	.byte	35
	.word	43556
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	43557
	.byte	34
	.word	41990
	.byte	32
	.word	42029
	.byte	32
	.word	42050
	.byte	35
	.word	42074
	.byte	0,35
	.word	43558
	.byte	0,0,35
	.word	43113
	.byte	34
	.word	41175
	.byte	32
	.word	41211
	.byte	32
	.word	41228
	.byte	32
	.word	41243
	.byte	36
	.word	41267
	.byte	34
	.word	41271
	.byte	32
	.word	41315
	.byte	32
	.word	41341
	.byte	32
	.word	41371
	.byte	32
	.word	41386
	.byte	36
	.word	41410
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41411
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	41412
	.byte	0,0,35
	.word	41268
	.byte	0,0,35
	.word	43114
	.byte	34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,35
	.word	43115
	.byte	0,0,35
	.word	44675
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	44769
	.byte	32
	.word	44790
	.byte	32
	.word	44806
	.byte	32
	.word	44821
	.byte	36
	.word	44834
	.byte	34
	.word	42888
	.byte	32
	.word	42922
	.byte	35
	.word	42937
	.byte	0,35
	.word	44835
	.byte	34
	.word	41816
	.byte	32
	.word	41858
	.byte	35
	.word	41875
	.byte	0,35
	.word	44836
	.byte	34
	.word	43393
	.byte	32
	.word	43417
	.byte	32
	.word	43443
	.byte	32
	.word	43458
	.byte	36
	.word	43471
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43472
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43473
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	43474
	.byte	0,0,35
	.word	44837
	.byte	0,0,34
	.word	42834
	.byte	32
	.word	42866
	.byte	36
	.word	42881
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42882
	.byte	34
	.word	43619
	.byte	32
	.word	43660
	.byte	35
	.word	43675
	.byte	0,35
	.word	42883
	.byte	34
	.word	43561
	.byte	32
	.word	43602
	.byte	35
	.word	43617
	.byte	0,35
	.word	42884
	.byte	34
	.word	41926
	.byte	32
	.word	41968
	.byte	35
	.word	41988
	.byte	0,35
	.word	42885
	.byte	0,0,0,34
	.word	30832
	.byte	32
	.word	30853
	.byte	36
	.word	30867
	.byte	35
	.word	30868
	.byte	34
	.word	3106
	.byte	35
	.word	3155
	.byte	0,35
	.word	30869
	.byte	0,0,34
	.word	30882
	.byte	32
	.word	30903
	.byte	36
	.word	30918
	.byte	34
	.word	3167
	.byte	32
	.word	3200
	.byte	35
	.word	3215
	.byte	0,35
	.word	30919
	.byte	0,0,0,34
	.word	45794
	.byte	32
	.word	45835
	.byte	35
	.word	45851
	.byte	0,4,4,4,4,4,4,4,4,0,0,31
	.word	45794
	.byte	32
	.word	45835
	.byte	4,0,31
	.word	45853
	.byte	32
	.word	45896
	.byte	4,0,31
	.word	45914
	.byte	32
	.word	45940
	.byte	11,34
	.word	41126
	.byte	32
	.word	41156
	.byte	35
	.word	41173
	.byte	0,4,0,0,31
	.word	45957
	.byte	32
	.word	45987
	.byte	32
	.word	46000
	.byte	4,0,31
	.word	46022
	.byte	32
	.word	46058
	.byte	4,0,31
	.word	46073
	.byte	32
	.word	46099
	.byte	4,0,31
	.word	46150
	.byte	32
	.word	46178
	.byte	4,0,31
	.word	46212
	.byte	32
	.word	46239
	.byte	32
	.word	46253
	.byte	11,34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,4,0,0,31
	.word	46270
	.byte	32
	.word	46295
	.byte	32
	.word	46312
	.byte	32
	.word	46328
	.byte	11,34
	.word	46212
	.byte	32
	.word	46239
	.byte	32
	.word	46253
	.byte	36
	.word	46266
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	46267
	.byte	0,0,4,0,0,31
	.word	46345
	.byte	32
	.word	46372
	.byte	32
	.word	46390
	.byte	4,0,31
	.word	46419
	.byte	32
	.word	46445
	.byte	32
	.word	46463
	.byte	4,0,31
	.word	46482
	.byte	32
	.word	46516
	.byte	32
	.word	46534
	.byte	32
	.word	46551
	.byte	4,0,31
	.word	46755
	.byte	32
	.word	46783
	.byte	11,34
	.word	46270
	.byte	32
	.word	46295
	.byte	32
	.word	46312
	.byte	32
	.word	46328
	.byte	36
	.word	46341
	.byte	34
	.word	46212
	.byte	32
	.word	46239
	.byte	32
	.word	46253
	.byte	36
	.word	46266
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	46267
	.byte	0,0,35
	.word	46342
	.byte	0,0,4,0,0,31
	.word	46926
	.byte	32
	.word	46955
	.byte	11,34
	.word	46345
	.byte	32
	.word	46372
	.byte	32
	.word	46390
	.byte	35
	.word	46407
	.byte	0,4,0,0,31
	.word	47161
	.byte	32
	.word	47189
	.byte	11,34
	.word	46270
	.byte	32
	.word	46295
	.byte	32
	.word	46312
	.byte	32
	.word	46328
	.byte	36
	.word	46341
	.byte	34
	.word	46212
	.byte	32
	.word	46239
	.byte	32
	.word	46253
	.byte	36
	.word	46266
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	46267
	.byte	0,0,35
	.word	46342
	.byte	0,0,4,0,0,31
	.word	47332
	.byte	32
	.word	47361
	.byte	11,34
	.word	46345
	.byte	32
	.word	46372
	.byte	32
	.word	46390
	.byte	35
	.word	46407
	.byte	0,4,0,0,31
	.word	47567
	.byte	32
	.word	47595
	.byte	11,34
	.word	46270
	.byte	32
	.word	46295
	.byte	32
	.word	46312
	.byte	32
	.word	46328
	.byte	36
	.word	46341
	.byte	34
	.word	46212
	.byte	32
	.word	46239
	.byte	32
	.word	46253
	.byte	36
	.word	46266
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	46267
	.byte	0,0,35
	.word	46342
	.byte	0,0,4,0,0,31
	.word	47738
	.byte	32
	.word	47767
	.byte	11,34
	.word	46345
	.byte	32
	.word	46372
	.byte	32
	.word	46390
	.byte	35
	.word	46407
	.byte	0,4,0,0,31
	.word	48017
	.byte	32
	.word	48046
	.byte	11,34
	.word	46270
	.byte	32
	.word	46295
	.byte	32
	.word	46312
	.byte	32
	.word	46328
	.byte	36
	.word	46341
	.byte	34
	.word	46212
	.byte	32
	.word	46239
	.byte	32
	.word	46253
	.byte	36
	.word	46266
	.byte	34
	.word	360
	.byte	32
	.word	378
	.byte	35
	.word	397
	.byte	0,35
	.word	46267
	.byte	0,0,35
	.word	46342
	.byte	0,0,4,0,0,31
	.word	48252
	.byte	32
	.word	48282
	.byte	11,34
	.word	46345
	.byte	32
	.word	46372
	.byte	32
	.word	46390
	.byte	35
	.word	46407
	.byte	0,4,0,0,31
	.word	48305
	.byte	32
	.word	48332
	.byte	32
	.word	48348
	.byte	4,0,31
	.word	48374
	.byte	32
	.word	48405
	.byte	4,0,31
	.word	48423
	.byte	32
	.word	48452
	.byte	32
	.word	48468
	.byte	4,0,31
	.word	48484
	.byte	32
	.word	48523
	.byte	4,0,31
	.word	48541
	.byte	32
	.word	48565
	.byte	32
	.word	48581
	.byte	4,0,38
	.byte	'__INDIRECT__',0,99,1,1,1,1,1,39,1,10
	.word	89979
	.byte	14
	.byte	'__codeptr',0,99,1,1
	.word	89981
	.byte	14
	.byte	'boolean',0,100,101,31
	.word	399
	.byte	14
	.byte	'uint8',0,100,104,31
	.word	399
	.byte	14
	.byte	'sint16',0,100,105,31
	.word	7989
	.byte	14
	.byte	'uint16',0,100,106,31
	.word	5487
	.byte	2
	.byte	'long int',0,4,5,14
	.byte	'sint32',0,100,107,31
	.word	90064
	.byte	14
	.byte	'uint32',0,100,108,31
	.word	135
	.byte	14
	.byte	'uint8_least',0,100,111,31
	.word	399
	.byte	14
	.byte	'uint16_least',0,100,113,31
	.word	5487
	.byte	14
	.byte	'uint64',0,100,121,30
	.word	11699
	.byte	14
	.byte	'StatusType',0,26,127,23
	.word	399
	.byte	14
	.byte	'Std_ReturnType',0,26,132,1,15
	.word	399
	.byte	14
	.byte	'Std_VersionInfoType',0,26,141,1,3
	.word	12248
	.byte	14
	.byte	'Os_StdReturnType',0,101,74,22
	.word	236
	.byte	14
	.byte	'Os_WordType',0,101,77,22
	.word	236
	.byte	14
	.byte	'Os_ObjIdxType',0,101,80,16
	.word	5487
	.byte	14
	.byte	'Os_ObjIdx_IteratorType',0,101,81,22
	.word	5487
	.byte	14
	.byte	'Os_ParamType',0,101,84,32
	.word	13785
	.byte	14
	.byte	'Os_AppAccessMaskType',0,16,117,17
	.word	135
	.byte	14
	.byte	'ApplicationType',0,16,126,3
	.word	11553
	.byte	14
	.byte	'TrustedFunctionIndexType',0,16,132,1,3
	.word	12644
	.byte	14
	.byte	'Os_NonTrustedFunctionIndexType',0,16,138,1,3
	.word	12929
	.byte	14
	.byte	'Os_FastTrustedFunctionIndexType',0,16,144,1,3
	.word	13015
	.byte	14
	.byte	'TaskType',0,16,157,1,3
	.word	12374
	.byte	14
	.byte	'ISRType',0,16,166,1,3
	.word	11730
	.byte	14
	.byte	'AlarmType',0,16,176,1,3
	.word	11360
	.byte	14
	.byte	'CounterType',0,16,183,1,3
	.word	11657
	.byte	14
	.byte	'ScheduleTableType',0,16,189,1,3
	.word	12170
	.byte	14
	.byte	'ResourceType',0,16,196,1,3
	.word	11894
	.byte	14
	.byte	'SpinlockIdType',0,16,203,1,3
	.word	12195
	.byte	14
	.byte	'Os_PeripheralIdType',0,16,209,1,3
	.word	13187
	.byte	14
	.byte	'Os_BarrierIdType',0,16,215,1,3
	.word	13259
	.byte	14
	.byte	'Os_TraceThreadIdType',0,16,222,1,3
	.word	7115
	.byte	14
	.byte	'Os_TraceSpinlockIdType',0,16,230,1,3
	.word	5692
	.byte	14
	.byte	'Os_Hal_AddressType',0,102,61,16
	.word	135
	.byte	14
	.byte	'Os_ExceptionContextType',0,102,66,44
	.word	13296
	.byte	14
	.byte	'AppModeType',0,3,216,1,16
	.word	399
	.byte	14
	.byte	'IdleModeType',0,3,234,1,3
	.word	11804
	.byte	14
	.byte	'Os_InterruptSourceIdType',0,3,238,1,16
	.word	135
	.byte	14
	.byte	'Os_ExceptionSourceIdType',0,3,246,1,16
	.word	135
	.byte	14
	.byte	'TryToGetSpinlockType',0,3,142,2,2
	.word	12726
	.byte	14
	.byte	'TaskStateType',0,3,175,2,3
	.word	12540
	.byte	14
	.byte	'EventMaskType',0,3,182,2,16
	.word	11699
	.byte	14
	.byte	'Os_TickType',0,3,200,2,19
	.word	135
	.byte	14
	.byte	'TickType',0,3,206,2,21
	.word	135
	.byte	14
	.byte	'AlarmBaseType',0,3,228,2,2
	.word	11257
	.byte	7,3,235,2,9,1,8
	.byte	'NO_ACCESS',0,0,8
	.byte	'ACCESS',0,1,0,14
	.byte	'ObjectAccessType',0,3,239,2,3
	.word	91094
	.byte	14
	.byte	'RestartType',0,3,249,2,3
	.word	11936
	.byte	14
	.byte	'ApplicationStateType',0,3,133,3,3
	.word	6083
	.byte	14
	.byte	'ObjectTypeType',0,3,147,3,3
	.word	12804
	.byte	14
	.byte	'Os_ObjectIdType',0,3,151,3,16
	.word	135
	.byte	14
	.byte	'OSServiceIdType',0,3,156,4,3
	.word	8050
	.byte	14
	.byte	'Os_StatusType',0,3,232,5,3
	.word	416
	.byte	14
	.byte	'ProtectionReturnType',0,3,247,5,3
	.word	17469
	.byte	14
	.byte	'Os_ErrorInformationType',0,3,143,6,3
	.word	11195
	.byte	14
	.byte	'ScheduleTableStatusType',0,3,192,6,3
	.word	11989
	.byte	14
	.byte	'Os_AccessCheckAddress',0,3,199,6,29
	.word	135
	.byte	14
	.byte	'MemorySizeType',0,3,207,6,31
	.word	135
	.byte	14
	.byte	'Os_MemAccessType',0,3,233,6,3
	.word	28752
	.byte	14
	.byte	'AccessType',0,3,235,6,26
	.word	28752
	.byte	14
	.byte	'Os_CoreStartStateType',0,3,134,7,2
	.word	13585
	.byte	14
	.byte	'CoreIdType',0,21,91,3
	.word	6820
	.byte	14
	.byte	'Os_HookConfigType',0,29,106,38
	.word	17103
	.byte	14
	.byte	'Os_HookStatusHookConfigType',0,29,109,48
	.word	17388
	.byte	14
	.byte	'Os_HookCallbackConfigType',0,29,112,46
	.word	17262
	.byte	14
	.byte	'Os_HookProtectionHookConfigType',0,29,115,52
	.word	17683
	.byte	14
	.byte	'Os_HookInitHookConfigType',0,29,118,46
	.word	17799
	.byte	14
	.byte	'Os_HookFlagType',0,29,120,16
	.word	135
	.byte	14
	.byte	'Os_HookInfoType',0,29,127,3
	.word	15792
	.byte	14
	.byte	'Os_HookIdType',0,29,130,1,16
	.word	135
	.byte	14
	.byte	'Os_TaskType',0,103,58,32
	.word	40089
	.byte	14
	.byte	'Os_TaskConfigType',0,103,61,38
	.word	16321
	.byte	14
	.byte	'Os_ErrorType',0,104,56,33
	.word	15608
	.byte	14
	.byte	'Os_ErrorParamsType',0,104,58,39
	.word	15528
	.byte	14
	.byte	'Os_EventStateType',0,78,77,3
	.word	40047
	.byte	14
	.byte	'Os_Hal_ContextType',0,105,66,39
	.word	4841
	.byte	14
	.byte	'Os_Hal_ContextConfigType',0,105,70,45
	.word	4539
	.byte	14
	.byte	'Os_Hal_ContextStackConfigType',0,105,74,50
	.word	34818
	.byte	14
	.byte	'Os_Hal_ContextFpuContextType',0,105,78,49
	.word	23790
	.byte	14
	.byte	'Os_ThreadClassType',0,59,183,3,39
	.word	23860
	.byte	14
	.byte	'Os_ThreadType',0,59,186,3,34
	.word	28455
	.byte	14
	.byte	'Os_ThreadConfigType',0,59,189,3,40
	.word	29456
	.byte	14
	.byte	'Os_CallContextType',0,59,193,3,23
	.word	5487
	.byte	14
	.byte	'Os_ThreadContextRefType',0,59,199,3,61
	.word	5024
	.byte	14
	.byte	'Os_Hal_BitFieldType',0,106,99,16
	.word	135
	.byte	14
	.byte	'Os_Hal_StackType',0,106,104,16
	.word	135
	.byte	14
	.byte	'Os_Hal_SpinlockType',0,106,108,16
	.word	135
	.byte	14
	.byte	'Os_Hal_SpinlockResultType',0,106,111,29
	.word	135
	.byte	14
	.byte	'Os_Hal_CoreConfigType',0,106,115,42
	.word	6383
	.byte	14
	.byte	'Os_Hal_Core2ThreadType',0,106,118,43
	.word	29833
	.byte	14
	.byte	'Os_Hal_Core2ThreadConfigType',0,106,121,49
	.word	29897
	.byte	14
	.byte	'Os_Hal_CoreAsrConfigType',0,106,125,45
	.word	18127
	.byte	14
	.byte	'Os_Hal_SystemConfigType',0,106,127,16
	.word	135
	.byte	14
	.byte	'Os_Hal_XSigInterruptConfigType',0,106,131,1,51
	.word	22324
	.byte	14
	.byte	'Os_Hal_TimerFrtTickType',0,107,66,16
	.word	135
	.byte	14
	.byte	'Os_StackConfigType',0,108,140,1,39
	.word	5034
	.byte	14
	.byte	'Os_IsrHwConfigType',0,54,54,39
	.word	6644
	.byte	12
	.byte	'Os_IsrType_Tag',0,20,172,1,8,28,13
	.byte	'Thread',0
	.word	28455
	.byte	24,2,35,0,13
	.byte	'IsKilled',0
	.word	399
	.byte	1,2,35,24,0,14
	.byte	'Os_IsrType',0,54,57,31
	.word	92585
	.byte	14
	.byte	'Os_IsrConfigType',0,54,60,37
	.word	21783
	.byte	14
	.byte	'Os_IsrCat1ConfigType',0,54,63,41
	.word	24712
	.byte	14
	.byte	'Os_CoreStatusType',0,28,61,38
	.word	6292
	.byte	14
	.byte	'Os_CoreAsrStatusType',0,28,64,41
	.word	33187
	.byte	14
	.byte	'Os_CoreConfigType',0,28,67,38
	.word	7453
	.byte	14
	.byte	'Os_CoreAsrType',0,28,70,35
	.word	15850
	.byte	14
	.byte	'Os_CoreAsrConfigType',0,28,73,41
	.word	23969
	.byte	14
	.byte	'Os_SystemConfigType',0,28,76,40
	.word	34077
	.byte	14
	.byte	'Os_CorePhysicalIdType',0,28,82,16
	.word	135
	.byte	14
	.byte	'Os_CoreBootBarrierContentType',0,28,89,16
	.word	135
	.byte	14
	.byte	'Os_UnhandledEventReportType',0,28,104,3
	.word	15711
	.byte	14
	.byte	'Os_Hal_IntGlobalStateType',0,109,66,16
	.word	135
	.byte	14
	.byte	'Os_Hal_IntLevelType',0,109,73,16
	.word	135
	.byte	14
	.byte	'Os_Hal_IntTrapStateType',0,109,82,16
	.word	135
	.byte	14
	.byte	'Os_Hal_IntStateType',0,109,89,16
	.word	135
	.byte	14
	.byte	'Os_Hal_IntSourceType',0,109,95,16
	.word	135
	.byte	14
	.byte	'Os_Hal_IntIsrConfigType',0,109,99,44
	.word	3546
	.byte	14
	.byte	'Os_Hal_IntIsrMapConfigType',0,109,103,47
	.word	6581
	.byte	14
	.byte	'Os_IntApiStateType',0,23,64,39
	.word	7820
	.byte	14
	.byte	'Os_IntStateType',0,23,74,3
	.word	7700
	.byte	15,23,88,9,4,13
	.byte	'State',0
	.word	135
	.byte	4,2,35,0,0,14
	.byte	'Os_IntLevelType',0,23,92,3
	.word	93248
	.byte	14
	.byte	'Os_TpType',0,85,69,30
	.word	19920
	.byte	14
	.byte	'Os_TpConfigType',0,85,72,36
	.word	20015
	.byte	14
	.byte	'Os_TpThreadConfigType',0,85,75,42
	.word	28689
	.byte	14
	.byte	'Os_TpBudgetType',0,85,78,36
	.word	43687
	.byte	14
	.byte	'Os_TpBudgetConfigType',0,85,81,42
	.word	43906
	.byte	14
	.byte	'Os_TpOwnerThreadConfigType',0,85,85,47
	.word	44158
	.byte	14
	.byte	'Os_TpOwnerThreadType',0,85,88,41
	.word	44031
	.byte	14
	.byte	'Os_InterArrivalTimeType',0,85,91,16
	.word	11699
	.byte	14
	.byte	'Os_TpMonitoringType',0,85,101,3
	.word	43756
	.byte	14
	.byte	'Os_IntApiCntType',0,22,78,16
	.word	5487
	.byte	14
	.byte	'Os_IntLockingStateType',0,22,86,3
	.word	7737
	.byte	14
	.byte	'Os_CoreAsrCoreIdx',0,45,90,3
	.word	20090
	.byte	16,8
	.word	32811
	.byte	17,1,0,9
	.word	93625
	.byte	40
	.byte	'OsCfg_CorePhysicalRefs',0,45,108,60
	.word	93634
	.byte	1,1,14
	.byte	'Os_TaskPrioType',0,110,76,16
	.word	5487
	.byte	14
	.byte	'Os_SchedulerType',0,110,83,37
	.word	16622
	.byte	14
	.byte	'Os_SchedulerConfigType',0,110,86,43
	.word	16872
	.byte	14
	.byte	'Os_LockType',0,13,58,32
	.word	5114
	.byte	14
	.byte	'Os_LockConfigType',0,13,61,38
	.word	5249
	.byte	12
	.byte	'Os_ResourceType_Tag',0,35,159,1,8,8,13
	.byte	'Lock',0
	.word	5114
	.byte	4,2,35,0,13
	.byte	'PreviousPriority',0
	.word	5487
	.byte	2,2,35,4,0,14
	.byte	'Os_ResourceType',0,111,60,36
	.word	93798
	.byte	14
	.byte	'Os_ResourceConfigType',0,111,64,42
	.word	17967
	.byte	14
	.byte	'Os_AppMaskType',0,112,85,16
	.word	135
	.byte	14
	.byte	'Os_AppConfigType',0,112,88,37
	.word	27372
	.byte	14
	.byte	'Os_ServiceCallType',0,89,63,39
	.word	28253
	.byte	14
	.byte	'Os_ServiceConfigType',0,89,71,41
	.word	27217
	.byte	16,2
	.word	399
	.byte	17,1,0,12
	.byte	'Os_ServiceStackPoolType_Tag',0,57,162,2,8,2,13
	.byte	'AccessCounter',0
	.word	94023
	.byte	2,2,35,0,0,10
	.word	94032
	.byte	12
	.byte	'Os_ServiceStackConfigType_Tag',0,57,148,2,9,12,13
	.byte	'Stack',0
	.word	5109
	.byte	4,2,35,0,13
	.byte	'HwConfig',0
	.word	34914
	.byte	4,2,35,4,13
	.byte	'PoolIndex',0
	.word	399
	.byte	1,2,35,8,0,9
	.word	94095
	.byte	10
	.word	94184
	.byte	12
	.byte	'Os_ServiceStackPoolConfigType_Tag',0,57,170,2,8,24,13
	.byte	'Dyn',0
	.word	94090
	.byte	4,2,35,0,13
	.byte	'AvailabilityMap',0
	.word	16194
	.byte	12,2,35,4,13
	.byte	'Stacks',0
	.word	94189
	.byte	4,2,35,16,13
	.byte	'StackCount',0
	.word	399
	.byte	1,2,35,20,13
	.byte	'AccessCounter',0
	.word	94023
	.byte	2,2,35,21,0,14
	.byte	'Os_ServiceStackPoolConfigType',0,89,88,50
	.word	94194
	.byte	14
	.byte	'Os_ServiceStackPoolType',0,89,91,44
	.word	94032
	.byte	14
	.byte	'Os_ServiceStackConfigType',0,89,94,48
	.word	94095
	.byte	14
	.byte	'Os_XSigBufferIdxType',0,49,60,23
	.word	5487
	.byte	14
	.byte	'Os_XSigConfigType',0,49,64,38
	.word	22712
	.byte	14
	.byte	'Os_XSigIsrConfigType',0,49,67,41
	.word	22396
	.byte	14
	.byte	'Os_XSigSendDataType',0,49,71,40
	.word	21365
	.byte	14
	.byte	'Os_XSigRecvDataType',0,49,74,40
	.word	21584
	.byte	14
	.byte	'Os_XSigSendPortConfigType',0,49,77,46
	.word	22540
	.byte	14
	.byte	'Os_XSigRecvPortConfigType',0,49,80,46
	.word	22191
	.byte	14
	.byte	'Os_XSigFunctionTableConfigType',0,49,84,51
	.word	22015
	.byte	14
	.byte	'Os_IocLockModeType',0,51,63,2
	.word	22813
	.byte	14
	.byte	'Os_IocChannelStateType',0,51,73,2
	.word	22917
	.byte	14
	.byte	'Os_IocCallbackConfigRefType',0,50,132,3,65
	.word	17336
	.byte	9
	.word	94741
	.byte	10
	.word	94778
	.byte	12
	.byte	'Os_IocCallbacksConfigType_Tag',0,50,135,3,8,8,13
	.byte	'CallbackRefs',0
	.word	94783
	.byte	4,2,35,0,13
	.byte	'CallbackCount',0
	.word	135
	.byte	4,2,35,4,0,14
	.byte	'Os_IocCallbacksConfigType',0,51,77,46
	.word	94788
	.byte	9
	.word	17262
	.byte	10
	.word	94904
	.byte	14
	.byte	'Os_IocLostCounterType',0,51,81,15
	.word	399
	.byte	14
	.byte	'Os_IocConfigType',0,51,83,37
	.word	23248
	.byte	14
	.byte	'Os_IocType',0,51,84,31
	.word	22982
	.byte	9
	.word	.L607-.L94
	.byte	10
	.word	94988
	.byte	12
	.byte	'Os_IocSendConfigType_Tag',0,50,237,3,8,32,13
	.byte	'Base',0
	.word	23248
	.byte	20,2,35,0,13
	.byte	'Callbacks',0
	.word	94788
	.byte	8,2,35,20,13
	.byte	'Receive',0
	.word	94993
	.byte	4,2,35,28,0,9
	.word	94998
	.byte	10
	.word	95080
.L607:
	.byte	12
	.byte	'Os_IocReceiveConfigType_Tag',0,50,211,3,8,24,13
	.byte	'Base',0
	.word	23248
	.byte	20,2,35,0,13
	.byte	'Send',0
	.word	95085
	.byte	4,2,35,20,0,14
	.byte	'Os_IocReceiveConfigType',0,51,86,44
	.word	95090
	.byte	14
	.byte	'Os_IocSendConfigType',0,51,87,41
	.word	94998
	.byte	12
	.byte	'Os_IocSendType_Tag',0,50,224,3,8,2,13
	.byte	'Base',0
	.word	22982
	.byte	1,2,35,0,13
	.byte	'LostCounter',0
	.word	399
	.byte	1,2,35,1,0,14
	.byte	'Os_IocSendType',0,51,88,35
	.word	95214
	.byte	12
	.byte	'Os_IocReceiveType_Tag',0,50,197,3,8,2,13
	.byte	'Base',0
	.word	22982
	.byte	1,2,35,0,13
	.byte	'LostCounterSnapshot',0
	.word	399
	.byte	1,2,35,1,0,14
	.byte	'Os_IocReceiveType',0,51,89,38
	.word	95298
	.byte	12
	.byte	'Os_IocMultiReceiveConfigType_Tag',0,50,140,4,8,24,13
	.byte	'Base',0
	.word	23248
	.byte	20,2,35,0,13
	.byte	'ReceiveChannelCount',0
	.word	5487
	.byte	2,2,35,20,0,14
	.byte	'Os_IocMultiReceiveConfigType',0,51,92,49
	.word	95396
	.byte	12
	.byte	'Os_Ioc08ReceiveConfigType_Tag',0,50,169,4,8,40,13
	.byte	'Ioc',0
	.word	95090
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	46826
	.byte	16,2,35,24,0,14
	.byte	'Os_Ioc08ReceiveConfigType',0,51,94,46
	.word	95516
	.byte	12
	.byte	'Os_Ioc08SendConfigType_Tag',0,50,209,4,8,48,13
	.byte	'Ioc',0
	.word	94998
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	46655
	.byte	16,2,35,32,0,14
	.byte	'Os_Ioc08SendConfigType',0,51,95,43
	.word	95618
	.byte	9
	.word	95516
	.byte	10
	.word	95715
	.byte	12
	.byte	'Os_Ioc08MultiReceiveConfigType_Tag',0,50,183,4,8,28,13
	.byte	'Ioc',0
	.word	95396
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	95720
	.byte	4,2,35,24,0,14
	.byte	'Os_Ioc08MultiReceiveConfigType',0,51,96,51
	.word	95725
	.byte	12
	.byte	'Os_Ioc16ReceiveConfigType_Tag',0,50,239,4,8,40,13
	.byte	'Ioc',0
	.word	95090
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	47232
	.byte	16,2,35,24,0,14
	.byte	'Os_Ioc16ReceiveConfigType',0,51,100,46
	.word	95838
	.byte	12
	.byte	'Os_Ioc16SendConfigType_Tag',0,50,151,5,8,48,13
	.byte	'Ioc',0
	.word	94998
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	47061
	.byte	16,2,35,32,0,14
	.byte	'Os_Ioc16SendConfigType',0,51,101,43
	.word	95940
	.byte	9
	.word	95838
	.byte	10
	.word	96037
	.byte	12
	.byte	'Os_Ioc16MultiReceiveConfigType_Tag',0,50,253,4,8,28,13
	.byte	'Ioc',0
	.word	95396
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	96042
	.byte	4,2,35,24,0,14
	.byte	'Os_Ioc16MultiReceiveConfigType',0,51,102,51
	.word	96047
	.byte	12
	.byte	'Os_Ioc32ReceiveConfigType_Tag',0,50,181,5,8,40,13
	.byte	'Ioc',0
	.word	95090
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	47638
	.byte	16,2,35,24,0,14
	.byte	'Os_Ioc32ReceiveConfigType',0,51,106,46
	.word	96160
	.byte	12
	.byte	'Os_Ioc32SendConfigType_Tag',0,50,221,5,8,48,13
	.byte	'Ioc',0
	.word	94998
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	47467
	.byte	16,2,35,32,0,14
	.byte	'Os_Ioc32SendConfigType',0,51,107,43
	.word	96262
	.byte	9
	.word	96160
	.byte	10
	.word	96359
	.byte	12
	.byte	'Os_Ioc32MultiReceiveConfigType_Tag',0,50,195,5,8,28,13
	.byte	'Ioc',0
	.word	95396
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	96364
	.byte	4,2,35,24,0,14
	.byte	'Os_Ioc32MultiReceiveConfigType',0,51,108,51
	.word	96369
	.byte	12
	.byte	'Os_IocRefReceiveConfigType_Tag',0,50,251,5,8,44,13
	.byte	'Ioc',0
	.word	95090
	.byte	24,2,35,0,13
	.byte	'FifoRead',0
	.word	48134
	.byte	20,2,35,24,0,14
	.byte	'Os_IocRefReceiveConfigType',0,51,112,47
	.word	96482
	.byte	12
	.byte	'Os_IocRefSendConfigType_Tag',0,50,163,6,8,52,13
	.byte	'Ioc',0
	.word	94998
	.byte	32,2,35,0,13
	.byte	'FifoWrite',0
	.word	47898
	.byte	20,2,35,32,0,14
	.byte	'Os_IocRefSendConfigType',0,51,113,44
	.word	96586
	.byte	9
	.word	96482
	.byte	10
	.word	96685
	.byte	12
	.byte	'Os_IocRefMultiReceiveConfigType_Tag',0,50,137,6,8,28,13
	.byte	'Ioc',0
	.word	95396
	.byte	24,2,35,0,13
	.byte	'Receivers',0
	.word	96690
	.byte	4,2,35,24,0,14
	.byte	'Os_IocRefMultiReceiveConfigType',0,51,114,52
	.word	96695
	.byte	23,1,1,24
	.word	11857
	.byte	24
	.word	12680
	.byte	0,10
	.word	96810
	.byte	14
	.byte	'Os_IocCopyCbk',0,50,183,6,9
	.word	96824
	.byte	12
	.byte	'Os_IocReadConfigType_Tag',0,50,213,6,8,28,13
	.byte	'Ioc',0
	.word	23248
	.byte	20,2,35,0,13
	.byte	'Data',0
	.word	11857
	.byte	4,2,35,20,13
	.byte	'CopyCbk',0
	.word	96829
	.byte	4,2,35,24,0,14
	.byte	'Os_IocReadConfigType',0,51,119,41
	.word	96852
	.byte	10
	.word	96810
	.byte	23,1,1,24
	.word	12680
	.byte	0,10
	.word	96962
	.byte	14
	.byte	'Os_IocInitCbk',0,50,195,6,9
	.word	96971
	.byte	12
	.byte	'Os_IocWriteConfigType_Tag',0,50,239,6,8,40,13
	.byte	'Ioc',0
	.word	23248
	.byte	20,2,35,0,13
	.byte	'Data',0
	.word	12680
	.byte	4,2,35,20,13
	.byte	'Callbacks',0
	.word	94788
	.byte	8,2,35,24,13
	.byte	'CopyCbk',0
	.word	96829
	.byte	4,2,35,32,13
	.byte	'InitCbk',0
	.word	96976
	.byte	4,2,35,36,0,14
	.byte	'Os_IocWriteConfigType',0,51,120,42
	.word	96999
	.byte	10
	.word	96962
	.byte	14
	.byte	'Os_BitIndexType',0,113,80,15
	.word	399
	.byte	14
	.byte	'Os_BitFieldType',0,113,84,29
	.word	135
	.byte	14
	.byte	'Os_BitArrayIndexType',0,31,110,16
	.word	5487
	.byte	14
	.byte	'Os_BitArrayType',0,31,119,2
	.word	16154
	.byte	14
	.byte	'Os_BitArrayConfigType',0,31,133,1,2
	.word	16194
	.byte	14
	.byte	'Os_DequeType',0,33,82,2
	.word	16741
	.byte	14
	.byte	'Os_DequeNodeType',0,33,88,2
	.word	16787
	.byte	14
	.byte	'Os_DequeConfigType',0,33,104,2
	.word	16813
	.byte	14
	.byte	'Os_SpinlockType',0,17,54,36
	.word	32504
	.byte	14
	.byte	'Os_SpinlockConfigType',0,17,58,42
	.word	5872
	.byte	14
	.byte	'Os_LockTypeType',0,12,78,3
	.word	5155
	.byte	14
	.byte	'Os_TraceThreadConfigType',0,114,60,45
	.word	7264
	.byte	14
	.byte	'Os_TraceThreadType',0,114,63,39
	.word	7057
	.byte	14
	.byte	'Os_TraceCoreType',0,114,66,37
	.word	7349
	.byte	14
	.byte	'Os_TraceSpinlockConfigType',0,114,69,47
	.word	5804
	.byte	14
	.byte	'Os_SpinlockMethodType',0,14,145,1,2
	.word	5369
	.byte	14
	.byte	'Os_SpinlockModeType',0,14,156,1,2
	.word	5509
	.byte	14
	.byte	'Os_SpinlockTraceType',0,14,169,1,2
	.word	5568
	.byte	14
	.byte	'Os_SpinlockCheckType',0,14,180,1,2
	.word	5630
	.byte	14
	.byte	'Os_SpinlockOrderType',0,14,184,1,15
	.word	399
	.byte	14
	.byte	'Os_BarrierBaseType',0,53,58,39
	.word	23499
	.byte	14
	.byte	'Os_BarrierBaseConfigType',0,53,60,45
	.word	23623
	.byte	14
	.byte	'Os_BarrierAttendeeIdxType',0,52,110,15
	.word	399
	.byte	14
	.byte	'Os_BarrierCounterType',0,52,113,15
	.word	399
	.byte	14
	.byte	'Os_BarrierAttendeeStateType',0,52,124,2
	.word	23423
	.byte	14
	.byte	'Os_MpSystemConfigType',0,115,54,42
	.word	34017
	.byte	14
	.byte	'Os_MpCoreConfigType',0,115,57,40
	.word	18572
	.byte	14
	.byte	'Os_MpAccessRightsType',0,115,60,42
	.word	27021
	.byte	14
	.byte	'Os_CoreStateType',0,19,231,1,2
	.word	6191
	.byte	14
	.byte	'Os_CoreOsStateType',0,19,247,1,2
	.word	33098
	.byte	14
	.byte	'Os_CoreThreadIdx',0,19,168,2,16
	.word	7989
	.byte	14
	.byte	'Os_Hal_MpSystemConfigType',0,116,59,46
	.word	33953
	.byte	14
	.byte	'Os_Hal_MpCoreConfigType',0,116,63,44
	.word	18255
	.byte	14
	.byte	'Os_Hal_MpAppConfigType',0,116,67,43
	.word	26207
	.byte	14
	.byte	'Os_Hal_MpThreadConfigType',0,116,71,46
	.word	26612
	.byte	14
	.byte	'Os_Hal_MpuRegionRangeConfigType',0,37,75,3
	.word	18188
	.byte	14
	.byte	'Os_AccessCheckIdx',0,117,62,15
	.word	399
	.byte	14
	.byte	'Os_AccessCheckConfigType',0,117,66,45
	.word	29335
	.byte	14
	.byte	'Os_TraceThreadRunReason',0,15,220,2,2
	.word	6879
	.byte	7,15,245,2,9,1,8
	.byte	'OsOrtiApiIdGetApplicationID',0,2,8
	.byte	'OsOrtiApiIdGetISRID',0,4,8
	.byte	'OsOrtiApiIdCallTrustedFunction',0,6,8
	.byte	'OsOrtiApiIdCheckISRMemoryAccess',0,8,8
	.byte	'OsOrtiApiIdCheckTaskMemoryAccess',0,10,8
	.byte	'OsOrtiApiIdCheckObjectAccess',0,12,8
	.byte	'OsOrtiApiIdCheckObjectOwnership',0,14,8
	.byte	'OsOrtiApiIdStartScheduleTableRel',0,16,8
	.byte	'OsOrtiApiIdStartScheduleTableAbs',0,18,8
	.byte	'OsOrtiApiIdStopScheduleTable',0,20,8
	.byte	'OsOrtiApiIdNextScheduleTable',0,22,8
	.byte	'OsOrtiApiIdStartScheduleTableSynchron',0,24,8
	.byte	'OsOrtiApiIdSyncScheduleTable',0,26,8
	.byte	'OsOrtiApiIdSetScheduleTableAsync',0,28,8
	.byte	'OsOrtiApiIdGetScheduleTableStatus',0,30,8
	.byte	'OsOrtiApiIdIncrementCounter',0,32,8
	.byte	'OsOrtiApiIdGetCounterValue',0,34,8
	.byte	'OsOrtiApiIdGetElapsedValue',0,36,8
	.byte	'OsOrtiApiIdTerminateApplication',0,38,8
	.byte	'OsOrtiApiIdAllowAccess',0,40,8
	.byte	'OsOrtiApiIdGetApplicationState',0,42,8
	.byte	'OsOrtiApiIdGetNumberOfActivatedCores',0,44,8
	.byte	'OsOrtiApiIdGetCoreID',0,46,8
	.byte	'OsOrtiApiIdStartCore',0,48,8
	.byte	'OsOrtiApiIdStartNonAutosarCore',0,50,8
	.byte	'OsOrtiApiIdGetSpinlock',0,52,8
	.byte	'OsOrtiApiIdReleaseSpinlock',0,54,8
	.byte	'OsOrtiApiIdTryToGetSpinlock',0,56,8
	.byte	'OsOrtiApiIdShutdownAllCores',0,58,8
	.byte	'OsOrtiApiIdControlIdle',0,60,8
	.byte	'OsOrtiApiIdIocSend',0,62,8
	.byte	'OsOrtiApiIdIocWrite',0,192,0,8
	.byte	'OsOrtiApiIdIocSendGroup',0,194,0,8
	.byte	'OsOrtiApiIdIocWriteGroup',0,196,0,8
	.byte	'OsOrtiApiIdIocReceive',0,198,0,8
	.byte	'OsOrtiApiIdIocRead',0,200,0,8
	.byte	'OsOrtiApiIdIocReceiveGroup',0,202,0,8
	.byte	'OsOrtiApiIdIocReadGroup',0,204,0,8
	.byte	'OsOrtiApiIdIocEmptyQueue',0,206,0,8
	.byte	'OsOrtiApiIdGetCurrentApplicationID',0,208,0,8
	.byte	'OsOrtiApiIdCallNonTrustedFunction',0,210,0,8
	.byte	'OsOrtiApiIdGetTaskStackUsage',0,212,0,8
	.byte	'OsOrtiApiIdGetISRStackUsage',0,214,0,8
	.byte	'OsOrtiApiIdGetKernelStackUsage',0,216,0,8
	.byte	'OsOrtiApiIdGetStartupHookStackUsage',0,218,0,8
	.byte	'OsOrtiApiIdGetErrorHookStackUsage',0,220,0,8
	.byte	'OsOrtiApiIdGetShutdownHookStackUsage',0,222,0,8
	.byte	'OsOrtiApiIdGetProtectionHookStackUsage',0,224,0,8
	.byte	'OsOrtiApiIdGetSemaphore',0,226,0,8
	.byte	'OsOrtiApiIdReleaseSemaphore',0,228,0,8
	.byte	'OsOrtiApiIdStartOS',0,230,0,8
	.byte	'OsOrtiApiIdGetActiveApplicationMode',0,232,0,8
	.byte	'OsOrtiApiIdDisableAllInterrupts',0,234,0,8
	.byte	'OsOrtiApiIdEnableAllInterrupts',0,236,0,8
	.byte	'OsOrtiApiIdSuspendAllInterrupts',0,238,0,8
	.byte	'OsOrtiApiIdResumeAllInterrupts',0,240,0,8
	.byte	'OsOrtiApiIdSuspendOSInterrupts',0,242,0,8
	.byte	'OsOrtiApiIdResumeOSInterrupts',0,244,0,8
	.byte	'OsOrtiApiIdActivateTask',0,246,0,8
	.byte	'OsOrtiApiIdTerminateTask',0,248,0,8
	.byte	'OsOrtiApiIdChainTask',0,250,0,8
	.byte	'OsOrtiApiIdGetTaskID',0,252,0,8
	.byte	'OsOrtiApiIdGetTaskState',0,254,0,8
	.byte	'OsOrtiApiIdSchedule',0,128,1,8
	.byte	'OsOrtiApiIdSetEvent',0,130,1,8
	.byte	'OsOrtiApiIdClearEvent',0,132,1,8
	.byte	'OsOrtiApiIdGetEvent',0,134,1,8
	.byte	'OsOrtiApiIdWaitEvent',0,136,1,8
	.byte	'OsOrtiApiIdGetAlarmBase',0,138,1,8
	.byte	'OsOrtiApiIdGetAlarm',0,140,1,8
	.byte	'OsOrtiApiIdSetRelAlarm',0,142,1,8
	.byte	'OsOrtiApiIdSetAbsAlarm',0,144,1,8
	.byte	'OsOrtiApiIdCancelAlarm',0,146,1,8
	.byte	'OsOrtiApiIdGetResource',0,148,1,8
	.byte	'OsOrtiApiIdReleaseResource',0,150,1,8
	.byte	'OsOrtiApiIdGetVersionInfo',0,152,1,8
	.byte	'OsOrtiApiIdEnterPreStartTask',0,158,1,8
	.byte	'OsOrtiApiIdShutdownOS',0,160,1,8
	.byte	'OsOrtiApiIdGetUnhandledIrq',0,162,1,8
	.byte	'OsOrtiApiIdGetUnhandledExc',0,164,1,8
	.byte	'OsOrtiApiIdDisableOSInterrupts',0,166,1,8
	.byte	'OsOrtiApiIdEnableOSInterrupts',0,168,1,8
	.byte	'OsOrtiApiIdReadPeripheral8',0,170,1,8
	.byte	'OsOrtiApiIdReadPeripheral16',0,172,1,8
	.byte	'OsOrtiApiIdReadPeripheral32',0,174,1,8
	.byte	'OsOrtiApiIdWritePeripheral8',0,176,1,8
	.byte	'OsOrtiApiIdWritePeripheral16',0,178,1,8
	.byte	'OsOrtiApiIdWritePeripheral32',0,180,1,8
	.byte	'OsOrtiApiIdModifyPeripheral8',0,182,1,8
	.byte	'OsOrtiApiIdModifyPeripheral16',0,184,1,8
	.byte	'OsOrtiApiIdModifyPeripheral32',0,186,1,8
	.byte	'OsOrtiApiIdGetDetailedError',0,188,1,8
	.byte	'OsOrtiApiIdOSErrorGetServiceId',0,190,1,8
	.byte	'OsOrtiApiIdDisableInterruptSource',0,192,1,8
	.byte	'OsOrtiApiIdEnableInterruptSource',0,194,1,8
	.byte	'OsOrtiApiIdClearPendingInterrupt',0,196,1,8
	.byte	'OsOrtiApiIdIsInterruptSourceEnabled',0,198,1,8
	.byte	'OsOrtiApiIdIsInterruptPending',0,200,1,8
	.byte	'OsOrtiApiIdCallFastTrustedFunction',0,202,1,8
	.byte	'OsOrtiApiIdBarrierSynchronize',0,204,1,8
	.byte	'OsOrtiApiIdGetExceptionContext',0,206,1,8
	.byte	'OsOrtiApiIdSetExceptionContext',0,208,1,8
	.byte	'OsOrtiApiIdInitialEnableInterruptSources',0,210,1,8
	.byte	'OsOrtiApiIdGetCoreStartState',0,212,1,8
	.byte	'OsOrtiApiIdGetExceptionAddress',0,214,1,0,14
	.byte	'OsOrtiApiIdType',0,15,225,3,3
	.word	98291
	.byte	14
	.byte	'Os_TraceThreadTypeType',0,15,236,3,2
	.word	7174
	.byte	14
	.byte	'Os_HookTaskReturnType',0,34,105,2
	.word	16995
	.byte	26,34,121,9,1,13
	.byte	'Status',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'Mode',0
	.word	399
	.byte	1,2,35,0,0,14
	.byte	'Os_HookParameterType',0,34,125,2
	.word	101625
	.byte	26,34,128,1,9,1,13
	.byte	'ProtectionReaction',0
	.word	17469
	.byte	1,2,35,0,0,14
	.byte	'Os_HookReturnType',0,34,131,1,2
	.word	101690
	.byte	16,28
	.word	16617
	.byte	17,6,0,9
	.word	101752
	.byte	40
	.byte	'OsCfg_TaskRefs',0,118,113,60
	.word	101761
	.byte	1,1,14
	.byte	'Os_XSigFunctionIdx',0,48,109,3
	.word	20239
	.byte	14
	.byte	'Os_TimerTypeType',0,43,72,3
	.word	19108
	.byte	14
	.byte	'Os_CounterCharacteristicsConfigType',0,43,75,56
	.word	18630
	.byte	14
	.byte	'Os_CounterConfigType',0,43,78,41
	.word	19243
	.byte	14
	.byte	'Os_AlarmConfigType',0,119,54,39
	.word	24999
	.byte	14
	.byte	'Os_SchTConfigType',0,120,55,38
	.word	25983
	.byte	14
	.byte	'Os_SchTExPoConfigType',0,120,61,42
	.word	25817
	.byte	14
	.byte	'Os_SchTAutostartConfigType',0,120,67,47
	.word	25286
	.byte	7,56,139,1,9,1,8
	.byte	'OS_SCHTSTATUS_STOPPED',0,0,8
	.byte	'OS_SCHTSTATUS_NEXT',0,1,8
	.byte	'OS_SCHTSTATUS_WAITING',0,2,8
	.byte	'OS_SCHTSTATUS_RUNNING',0,3,0,12
	.byte	'Os_SchTType_Tag',0,56,210,2,8,20,13
	.byte	'Job',0
	.word	18798
	.byte	4,2,35,0,13
	.byte	'ExPo',0
	.word	25978
	.byte	4,2,35,4,13
	.byte	'State',0
	.word	102034
	.byte	1,2,35,8,13
	.byte	'Next',0
	.word	26163
	.byte	4,2,35,12,13
	.byte	'Previous',0
	.word	26163
	.byte	4,2,35,16,0,14
	.byte	'Os_SchTType',0,120,70,32
	.word	102134
	.byte	14
	.byte	'Os_SchTExPoActionEventConfigType',0,120,76,53
	.word	25730
	.byte	14
	.byte	'Os_SchTExPoActionTaskConfigType',0,120,79,52
	.word	25663
	.byte	14
	.byte	'Os_Hal_TimerFrtConfigType',0,121,61,46
	.word	19529
	.byte	14
	.byte	'Os_Hal_TimerPitConfigType',0,121,65,46
	.word	42133
	.byte	14
	.byte	'Os_TimerSwConfigType',0,122,59,41
	.word	42531
	.byte	12
	.byte	'Os_TimerPitConfigType_Tag',0,39,246,1,8,56,13
	.byte	'SwCounter',0
	.word	42531
	.byte	52,2,35,0,13
	.byte	'HwConfig',0
	.word	42433
	.byte	4,2,35,52,0,14
	.byte	'Os_TimerPitConfigType',0,122,62,42
	.word	102429
	.byte	14
	.byte	'Os_TimerHrtConfigType',0,122,65,42
	.word	19829
	.byte	12
	.byte	'Os_TimerPfrtConfigType_Tag',0,39,187,2,8,68,13
	.byte	'SwCounter',0
	.word	42531
	.byte	52,2,35,0,13
	.byte	'Period',0
	.word	135
	.byte	4,2,35,52,13
	.byte	'MaxDifferentialValue',0
	.word	135
	.byte	4,2,35,56,13
	.byte	'MaxCountingValue',0
	.word	135
	.byte	4,2,35,60,13
	.byte	'HwConfig',0
	.word	19824
	.byte	4,2,35,64,0,14
	.byte	'Os_TimerPfrtConfigType',0,122,68,43
	.word	102559
	.byte	14
	.byte	'Os_XSigState_Type',0,47,100,2
	.word	21261
	.byte	14
	.byte	'Os_XSigComDataConfigType',0,47,114,2
	.word	21645
	.byte	14
	.byte	'Os_XSigParamsType',0,47,123,2
	.word	21232
	.byte	14
	.byte	'Os_XSigOutputParamsType',0,47,133,1,2
	.word	21506
	.byte	14
	.byte	'Os_XSigResultType',0,47,147,1,2
	.word	21536
	.byte	14
	.byte	'Os_XSigChannelSendType',0,47,207,1,2
	.word	20144
	.byte	14
	.byte	'Os_XSigChannelRecvType',0,47,217,1,2
	.word	20197
	.byte	14
	.byte	'Os_XSigChannelSendConfigType',0,47,234,1,2
	.word	21710
	.byte	14
	.byte	'Os_XSigChannelRecvConfigType',0,47,251,1,2
	.word	22121
	.byte	14
	.byte	'Os_XSigFunctionDescritorConfigType',0,46,190,1,2
	.word	21978
	.byte	14
	.byte	'Os_ActivationCntType',0,32,102,15
	.word	399
	.byte	14
	.byte	'Os_TaskScheduleType',0,32,111,2
	.word	16260
	.byte	14
	.byte	'Os_JobConfigType',0,123,53,37
	.word	18914
	.byte	14
	.byte	'Os_JobType',0,123,56,31
	.word	18798
	.byte	14
	.byte	'Os_PriorityQueueNodeIdxType',0,41,72,16
	.word	5487
	.byte	14
	.byte	'Os_PriorityQueueNodeType',0,41,80,3
	.word	18999
	.byte	14
	.byte	'Os_PriorityQueueType',0,41,87,3
	.word	19024
	.byte	14
	.byte	'Os_PriorityQueueConfigType',0,41,96,3
	.word	19055
	.byte	14
	.byte	'Os_TimerSwType',0,39,226,1,3
	.word	42487
	.byte	14
	.byte	'Os_TimerHrtType',0,39,151,2,3
	.word	19409
	.byte	14
	.byte	'Os_TpMonitoringKindType',0,38,151,2,2
	.word	28611
	.byte	14
	.byte	'Os_TpDelayLevelType',0,38,154,2,15
	.word	399
	.byte	14
	.byte	'Os_AppType',0,18,122,3
	.word	6165
	.byte	14
	.byte	'Os_ServiceTypeType',0,57,122,3
	.word	27117
	.byte	14
	.byte	'Os_ServiceTrustedFunctionParamsType',0,57,133,1,3
	.word	27973
	.byte	14
	.byte	'Os_ServiceNonTrustedFunctionParamsType',0,57,143,1,3
	.word	28026
	.byte	14
	.byte	'Os_ServiceFastTrustedFunctionParamsType',0,57,153,1,3
	.word	28080
	.byte	14
	.byte	'Os_ServiceParamsType',0,57,162,1,3
	.word	28134
	.byte	23,1,1,24
	.word	12644
	.byte	24
	.word	12680
	.byte	0,10
	.word	103625
	.byte	14
	.byte	'Os_ServiceTfCbkType',0,57,223,1,9
	.word	103639
	.byte	23,1,1,24
	.word	12929
	.byte	24
	.word	12680
	.byte	0,10
	.word	103673
	.byte	14
	.byte	'Os_ServiceNtfCbkType',0,57,248,1,9
	.word	103687
	.byte	23,1,1,24
	.word	13015
	.byte	24
	.word	12680
	.byte	0,10
	.word	103722
	.byte	14
	.byte	'Os_ServiceFtfCbkType',0,57,191,2,9
	.word	103736
	.byte	14
	.byte	'Os_AlarmModeType',0,55,113,2
	.word	24860
	.byte	7,55,117,9,1,8
	.byte	'OS_ALARMSTATE_CANCELED',0,0,8
	.byte	'OS_ALARMSTATE_SET',0,1,0,14
	.byte	'Os_AlarmStateType',0,55,123,2
	.word	103796
	.byte	14
	.byte	'Os_AlarmAutostartConfigType',0,55,143,1,2
	.word	24914
	.byte	14
	.byte	'Os_AlarmCallbackType',0,55,241,1,9
	.word	17226
	.byte	14
	.byte	'Os_SchTEventIdxType',0,56,130,1,16
	.word	135
	.byte	14
	.byte	'Os_SchTTaskIdxType',0,56,133,1,16
	.word	135
	.byte	14
	.byte	'Os_SchTStatusType',0,56,149,1,3
	.word	102034
	.byte	7,56,153,1,9,1,8
	.byte	'OS_SCHTSYNCSTATUS_NOT_PROVIDED',0,0,8
	.byte	'OS_SCHTSYNCSTATUS_SYNC',0,1,8
	.byte	'OS_SCHTSYNCSTATUS_ASYNC',0,2,0,14
	.byte	'Os_SchTSyncStatusType',0,56,161,1,3
	.word	104024
	.byte	14
	.byte	'Os_SchTExPoKindType',0,56,198,1,2
	.word	25482
	.byte	14
	.byte	'Os_SchTSyncKindType',0,56,131,2,2
	.word	25393
	.byte	14
	.byte	'Os_SchTAutostartModeType',0,56,141,2,2
	.word	25168
	.byte	14
	.byte	'Os_AccessCheckRegionConfigType',0,58,95,3
	.word	29255
	.byte	14
	.byte	'Os_FifoIdxType',0,124,73,15
	.word	399
	.byte	7,124,76,9,1,8
	.byte	'OS_FIFOWRITERESULT_OK',0,0,8
	.byte	'OS_FIFOWRITERESULT_BUFFEROVERFLOW',0,1,0,14
	.byte	'Os_FifoWriteResultType',0,124,80,2
	.word	104300
	.byte	14
	.byte	'Os_Fifo08WriteConfigType',0,92,66,45
	.word	46655
	.byte	14
	.byte	'Os_Fifo08ReadConfigType',0,92,69,44
	.word	46826
	.byte	14
	.byte	'Os_Fifo08NodeType',0,92,76,2
	.word	46629
	.byte	14
	.byte	'Os_Fifo08WriteType',0,92,83,2
	.word	46567
	.byte	14
	.byte	'Os_Fifo08ReadType',0,92,90,2
	.word	46596
	.byte	14
	.byte	'Os_Fifo16WriteConfigType',0,94,66,45
	.word	47061
	.byte	14
	.byte	'Os_Fifo16ReadConfigType',0,94,69,44
	.word	47232
	.byte	14
	.byte	'Os_Fifo16NodeType',0,94,76,2
	.word	47035
	.byte	14
	.byte	'Os_Fifo16WriteType',0,94,83,2
	.word	46973
	.byte	14
	.byte	'Os_Fifo16ReadType',0,94,90,2
	.word	47002
	.byte	14
	.byte	'Os_Fifo32WriteConfigType',0,96,66,45
	.word	47467
	.byte	14
	.byte	'Os_Fifo32ReadConfigType',0,96,69,44
	.word	47638
	.byte	14
	.byte	'Os_Fifo32NodeType',0,96,76,2
	.word	47441
	.byte	14
	.byte	'Os_Fifo32WriteType',0,96,83,2
	.word	47379
	.byte	14
	.byte	'Os_Fifo32ReadType',0,96,90,2
	.word	47408
	.byte	14
	.byte	'Os_FifoRefWriteConfigType',0,98,66,46
	.word	47898
	.byte	14
	.byte	'Os_FifoRefReadConfigType',0,98,69,45
	.word	48134
	.byte	14
	.byte	'Os_FifoRefWriteType',0,98,104,2
	.word	47785
	.byte	14
	.byte	'Os_FifoRefReadType',0,98,111,2
	.word	47814
	.byte	14
	.byte	'Os_IocSubClassType',0,50,170,3,2
	.word	23029
	.byte	7,125,96,9,1,8
	.byte	'OS_TRAPID_GETCOREID',0,0,8
	.byte	'OS_TRAPID_GETACTIVEAPPLICATIONMODE',0,1,8
	.byte	'OS_TRAPID_SHUTDOWNOS',0,2,8
	.byte	'OS_TRAPID_SHUTDOWNALLCORES',0,3,8
	.byte	'OS_TRAPID_DISABLELEVEL',0,4,8
	.byte	'OS_TRAPID_ENABLELEVEL',0,5,8
	.byte	'OS_TRAPID_DISABLEGLOBAL',0,6,8
	.byte	'OS_TRAPID_ENABLEGLOBAL',0,7,8
	.byte	'OS_TRAPID_DISABLEALLINTERRUPTS',0,8,8
	.byte	'OS_TRAPID_ENABLEALLINTERRUPTS',0,9,8
	.byte	'OS_TRAPID_SUSPENDALLINTERRUPTS',0,10,8
	.byte	'OS_TRAPID_RESUMEALLINTERRUPTS',0,11,8
	.byte	'OS_TRAPID_SUSPENDOSINTERRUPTS',0,12,8
	.byte	'OS_TRAPID_RESUMEOSINTERRUPTS',0,13,8
	.byte	'OS_TRAPID_DISABLEINTERRUPTSOURCE',0,14,8
	.byte	'OS_TRAPID_ENABLEINTERRUPTSOURCE',0,15,8
	.byte	'OS_TRAPID_CLEARPENDINGINTERRUPT',0,16,8
	.byte	'OS_TRAPID_ISINTERRUPTSOURCEENABLED',0,17,8
	.byte	'OS_TRAPID_ISINTERRUPTPENDING',0,18,8
	.byte	'OS_TRAPID_ALLOWACCESS',0,19,8
	.byte	'OS_TRAPID_GETAPPLICATIONID',0,20,8
	.byte	'OS_TRAPID_GETCURRENTAPPLICATIONID',0,21,8
	.byte	'OS_TRAPID_GETAPPLICATIONSTATE',0,22,8
	.byte	'OS_TRAPID_CHECKOBJECTACCESS',0,23,8
	.byte	'OS_TRAPID_CHECKOBJECTOWNERSHIP',0,24,8
	.byte	'OS_TRAPID_TERMINATEAPPLICATION',0,25,8
	.byte	'OS_TRAPID_ACTIVATETASK',0,26,8
	.byte	'OS_TRAPID_TERMINATETASK',0,27,8
	.byte	'OS_TRAPID_CHAINTASK',0,28,8
	.byte	'OS_TRAPID_GETTASKSTATE',0,29,8
	.byte	'OS_TRAPID_GETTASKID',0,30,8
	.byte	'OS_TRAPID_GETISRID',0,31,8
	.byte	'OS_TRAPID_SCHEDULE',0,32,8
	.byte	'OS_TRAPID_INCREMENTCOUNTER',0,33,8
	.byte	'OS_TRAPID_GETCOUNTERVALUE',0,34,8
	.byte	'OS_TRAPID_GETELAPSEDVALUE',0,35,8
	.byte	'OS_TRAPID_GETALARM',0,36,8
	.byte	'OS_TRAPID_GETALARMBASE',0,37,8
	.byte	'OS_TRAPID_SETRELALARM',0,38,8
	.byte	'OS_TRAPID_SETABSALARM',0,39,8
	.byte	'OS_TRAPID_CANCELALARM',0,40,8
	.byte	'OS_TRAPID_GETRESOURCE',0,41,8
	.byte	'OS_TRAPID_RELEASERESOURCE',0,42,8
	.byte	'OS_TRAPID_SETEVENT',0,43,8
	.byte	'OS_TRAPID_CLEAREVENT',0,44,8
	.byte	'OS_TRAPID_WAITEVENT',0,45,8
	.byte	'OS_TRAPID_GETEVENT',0,46,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEREL',0,47,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEABS',0,48,8
	.byte	'OS_TRAPID_STOPSCHEDULETABLE',0,49,8
	.byte	'OS_TRAPID_NEXTSCHEDULETABLE',0,50,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLESYNCHRON',0,51,8
	.byte	'OS_TRAPID_SETSCHEDULETABLEASYNC',0,52,8
	.byte	'OS_TRAPID_SYNCSCHEDULETABLE',0,53,8
	.byte	'OS_TRAPID_GETSCHEDULETABLESTATUS',0,54,8
	.byte	'OS_TRAPID_SPINLOCKGET',0,55,8
	.byte	'OS_TRAPID_SPINLOCKRELEASE',0,56,8
	.byte	'OS_TRAPID_SPINLOCKTRYGET',0,57,8
	.byte	'OS_TRAPID_IOC08RECEIVE',0,58,8
	.byte	'OS_TRAPID_IOC08EMPTYQUEUE',0,59,8
	.byte	'OS_TRAPID_IOC08SEND',0,60,8
	.byte	'OS_TRAPID_IOC16RECEIVE',0,61,8
	.byte	'OS_TRAPID_IOC16EMPTYQUEUE',0,62,8
	.byte	'OS_TRAPID_IOC16SEND',0,63,8
	.byte	'OS_TRAPID_IOC32RECEIVE',0,192,0,8
	.byte	'OS_TRAPID_IOC32EMPTYQUEUE',0,193,0,8
	.byte	'OS_TRAPID_IOC32SEND',0,194,0,8
	.byte	'OS_TRAPID_IOCREFRECEIVE',0,195,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYQUEUE',0,196,0,8
	.byte	'OS_TRAPID_IOCREFSEND',0,197,0,8
	.byte	'OS_TRAPID_IOCREAD',0,198,0,8
	.byte	'OS_TRAPID_IOCWRITE',0,199,0,8
	.byte	'OS_TRAPID_IOC08MULTIRECEIVE',0,200,0,8
	.byte	'OS_TRAPID_IOC08EMPTYMULTIQUEUE',0,201,0,8
	.byte	'OS_TRAPID_IOC16MULTIRECEIVE',0,202,0,8
	.byte	'OS_TRAPID_IOC16EMPTYMULTIQUEUE',0,203,0,8
	.byte	'OS_TRAPID_IOC32MULTIRECEIVE',0,204,0,8
	.byte	'OS_TRAPID_IOC32EMPTYMULTIQUEUE',0,205,0,8
	.byte	'OS_TRAPID_IOCREFMULTIRECEIVE',0,206,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYMULTIQUEUE',0,207,0,8
	.byte	'OS_TRAPID_READPERIPHERAL8',0,208,0,8
	.byte	'OS_TRAPID_READPERIPHERAL16',0,209,0,8
	.byte	'OS_TRAPID_READPERIPHERAL32',0,210,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL8',0,211,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL16',0,212,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL32',0,213,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL8',0,214,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL16',0,215,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL32',0,216,0,8
	.byte	'OS_TRAPID_CALLTRUSTEDFUNCTION',0,217,0,8
	.byte	'OS_TRAPID_CALLNONTRUSTEDFUNCTION',0,218,0,8
	.byte	'OS_TRAPID_CALLFASTTRUSTEDFUNCTION',0,219,0,8
	.byte	'OS_TRAPID_ERRAPPLICATIONERROR',0,220,0,8
	.byte	'OS_TRAPID_TASKMISSINGTERMINATETASK',0,221,0,8
	.byte	'OS_TRAPID_ISREPILOGUE',0,222,0,8
	.byte	'OS_TRAPID_SERVICERETURN',0,223,0,8
	.byte	'OS_TRAPID_HOOKRETURN',0,224,0,8
	.byte	'OS_TRAPID_CONTROLIDLE',0,225,0,8
	.byte	'OS_TRAPID_GETTASKSTACKUSAGE',0,226,0,8
	.byte	'OS_TRAPID_GETISRSTACKUSAGE',0,227,0,8
	.byte	'OS_TRAPID_GETKERNELSTACKUSAGE',0,228,0,8
	.byte	'OS_TRAPID_GETSTARTUPHOOKSTACKUSAGE',0,229,0,8
	.byte	'OS_TRAPID_GETERRORHOOKSTACKUSAGE',0,230,0,8
	.byte	'OS_TRAPID_GETSHUTDOWNHOOKSTACKUSAGE',0,231,0,8
	.byte	'OS_TRAPID_GETPROTECTIONHOOKSTACKUSAGE',0,232,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDIRQ',0,233,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDEXC',0,234,0,8
	.byte	'OS_TRAPID_GETDETAILEDERROR',0,235,0,8
	.byte	'OS_TRAPID_GETSERVICEID',0,236,0,8
	.byte	'OS_TRAPID_COREGETTHREAD',0,237,0,8
	.byte	'OS_TRAPID_GETNUMBEROFACTIVATEDCORES',0,238,0,8
	.byte	'OS_TRAPID_CHECKTASKMEMORYACCESS',0,239,0,8
	.byte	'OS_TRAPID_CHECKISRMEMORYACCESS',0,240,0,8
	.byte	'OS_TRAPID_BARRIERSYNCHRONIZE',0,241,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONCONTEXT',0,242,0,8
	.byte	'OS_TRAPID_SETEXCEPTIONCONTEXT',0,243,0,8
	.byte	'OS_TRAPID_GETCORESTARTSTATE',0,244,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONADDRESS',0,245,0,8
	.byte	'OS_TRAPID_COUNT',0,246,0,0,14
	.byte	'Os_TrapIdType',0,125,217,1,3
	.word	104979
	.byte	9
	.word	95618
	.byte	10
	.word	108495
	.byte	10
	.word	399
	.byte	9
	.word	399
	.byte	10
	.word	108510
	.byte	9
	.word	95940
	.byte	10
	.word	108520
	.byte	10
	.word	5487
	.byte	9
	.word	5487
	.byte	10
	.word	108535
	.byte	9
	.word	96262
	.byte	10
	.word	108545
	.byte	9
	.word	96586
	.byte	10
	.word	108555
	.byte	9
	.word	96852
	.byte	10
	.word	108565
	.byte	9
	.word	96999
	.byte	10
	.word	108575
	.byte	9
	.word	95725
	.byte	10
	.word	108585
	.byte	9
	.word	96047
	.byte	10
	.word	108595
	.byte	9
	.word	96369
	.byte	10
	.word	108605
	.byte	9
	.word	96695
	.byte	10
	.word	108615
	.byte	10
	.word	15528
	.byte	26,125,232,1,9,8,13
	.byte	'ParamApiType',0
	.word	13785
	.byte	8,2,35,0,13
	.byte	'ParamSpinlockConfigRefType',0
	.word	6050
	.byte	4,2,35,0,13
	.byte	'ParamIoc08SendConfigRefType',0
	.word	108500
	.byte	4,2,35,0,13
	.byte	'ParamIoc08ReceiveConfigRefType',0
	.word	95720
	.byte	4,2,35,0,13
	.byte	'ParamUint8RefType',0
	.word	108505
	.byte	4,2,35,0,13
	.byte	'ParamConstUint8RefType',0
	.word	108515
	.byte	4,2,35,0,13
	.byte	'ParamUint8Type',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ParamIoc16SendConfigRefType',0
	.word	108525
	.byte	4,2,35,0,13
	.byte	'ParamIoc16ReceiveConfigRefType',0
	.word	96042
	.byte	4,2,35,0,13
	.byte	'ParamUint16RefType',0
	.word	108530
	.byte	4,2,35,0,13
	.byte	'ParamConstUint16RefType',0
	.word	108540
	.byte	4,2,35,0,13
	.byte	'ParamUint16Type',0
	.word	5487
	.byte	2,2,35,0,13
	.byte	'ParamIoc32SendConfigRefType',0
	.word	108550
	.byte	4,2,35,0,13
	.byte	'ParamIoc32ReceiveConfigRefType',0
	.word	96364
	.byte	4,2,35,0,13
	.byte	'ParamUint32RefType',0
	.word	31608
	.byte	4,2,35,0,13
	.byte	'ParamConstUint32RefType',0
	.word	4059
	.byte	4,2,35,0,13
	.byte	'ParamUint32Type',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ParamIocRefSendConfigRefType',0
	.word	108560
	.byte	4,2,35,0,13
	.byte	'ParamIocRefReceiveConfigRefType',0
	.word	96690
	.byte	4,2,35,0,13
	.byte	'ParamVoidRefType',0
	.word	12680
	.byte	4,2,35,0,13
	.byte	'ParamVoidConfigRefType',0
	.word	11857
	.byte	4,2,35,0,13
	.byte	'ParamIocReadConfigRefType',0
	.word	108570
	.byte	4,2,35,0,13
	.byte	'ParamIocWriteConfigRefType',0
	.word	108580
	.byte	4,2,35,0,13
	.byte	'ParamIoc08MultiReceiveConfigRefType',0
	.word	108590
	.byte	4,2,35,0,13
	.byte	'ParamIoc16MultiReceiveConfigRefType',0
	.word	108600
	.byte	4,2,35,0,13
	.byte	'ParamIoc32MultiReceiveConfigRefType',0
	.word	108610
	.byte	4,2,35,0,13
	.byte	'ParamIocRefMultiReceiveConfigRefType',0
	.word	108620
	.byte	4,2,35,0,13
	.byte	'ParamOSServiceIdType',0
	.word	8050
	.byte	1,2,35,0,13
	.byte	'ParamOs_StatusType',0
	.word	416
	.byte	2,2,35,0,13
	.byte	'ParamOs_ErrorParamsRefType',0
	.word	108625
	.byte	4,2,35,0,0,14
	.byte	'Os_TrapParameterType',0,125,136,2,3
	.word	108630
	.byte	26,125,140,2,9,4,13
	.byte	'ReturnOs_StatusType',0
	.word	416
	.byte	2,2,35,0,13
	.byte	'ReturnStd_ReturnType',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ReturnUint8Type',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ReturnUint16Type',0
	.word	5487
	.byte	2,2,35,0,13
	.byte	'ReturnUint32Type',0
	.word	135
	.byte	4,2,35,0,13
	.byte	'ReturnCoreIdType',0
	.word	6820
	.byte	1,2,35,0,13
	.byte	'ReturnAppModeType',0
	.word	399
	.byte	1,2,35,0,13
	.byte	'ReturnISRType',0
	.word	11730
	.byte	1,2,35,0,13
	.byte	'ReturnApplicationType',0
	.word	11553
	.byte	1,2,35,0,13
	.byte	'ReturnObjectAccessType',0
	.word	91094
	.byte	1,2,35,0,13
	.byte	'ReturnAccessType',0
	.word	28752
	.byte	1,2,35,0,13
	.byte	'ReturnOSServiceIdType',0
	.word	8050
	.byte	1,2,35,0,13
	.byte	'ReturnOs_AddressOfConstType',0
	.word	15577
	.byte	4,2,35,0,13
	.byte	'ReturnThreadConfigRefType',0
	.word	29828
	.byte	4,2,35,0,0,14
	.byte	'Os_TrapReturnType',0,125,156,2,3
	.word	109694
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L95:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,11,0,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,46,1,3,8,32,13,58,15,59
	.byte	15,57,15,54,15,39,12,0,0,7,4,1,58,15,59,15,57,15,11,15,0,0,8,40,0,3,8,28,13,0,0,9,38,0,73,19,0,0,10,15
	.byte	0,73,19,0,0,11,11,1,0,0,12,19,1,3,8,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,22
	.byte	0,3,8,58,15,59,15,57,15,73,19,0,0,15,19,1,58,15,59,15,57,15,11,15,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47
	.byte	15,0,0,18,53,0,73,19,0,0,19,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,20,59,0,3,8,0,0,21,23,1,3,8,58,15
	.byte	59,15,57,15,11,15,0,0,22,21,0,54,15,39,12,0,0,23,21,1,54,15,39,12,0,0,24,5,0,73,19,0,0,25,21,1,73,19,54
	.byte	15,39,12,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,46,1,3,8,54,15,39,12,63,12,60,12,0,0,28,46,1,3,8,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,29,5,0,3,8,73,19,0,0,30,46,0,3,8,54,15,39,12,63,12,60,12,0,0,31,46,1,49
	.byte	19,0,0,32,5,0,49,19,0,0,33,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,34,29,1,49,19,0,0,35
	.byte	11,0,49,19,0,0,36,11,1,49,19,0,0,37,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,38,46
	.byte	0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,39,21,0,54,15,0,0,40,52,0,3,8,58,15,59,15,57,15,73,19,63
	.byte	12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L96:
	.word	.L609-.L608
.L608:
	.half	3
	.word	.L611-.L610
.L610:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error.h',0,0,0,0
	.byte	'Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_ContextInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ThreadInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_StackInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_LockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SpinlockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TraceInt.h',0,0,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Spinlock_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ApplicationInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IsrInt.h',0,0,0,0
	.byte	'Os_Hal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ErrorInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CommonInt.h',0,0,0,0
	.byte	'Std_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_OsInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SchedulerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArrayInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TaskInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_DequeInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_HookInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ResourceInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CounterInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_PriorityQueue_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_JobInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STMInt.h',0,0,0,0
	.byte	'Os_Hal_Kernel_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannelInt.h',0,0,0,0
	.byte	'Os_XSignal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IocInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Ioc_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BarrierInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Barrier_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AlarmInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTableInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunctionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheckInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Bit.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArray.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Deque.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Spinlock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannel.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_EventInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPT.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPTInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRef.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRefInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Common_Types.h',0,0,0,0
	.byte	'Os_Hal_Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Derivative_TC39x_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheck_Types.h',0,0,0,0
	.byte	'Os_Task_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Alarm_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTable_Types.h',0,0,0,0
	.byte	'Os_Hal_Timer_Types.h',0,1,0,0
	.byte	'Os_Timer_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TrapInt.h',0,0,0,0,0
.L611:
.L609:
	.sdecl	'.debug_info',debug,cluster('Os_EventSetLocal')
	.sect	'.debug_info'
.L97:
	.word	685
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L100,.L99
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_EventSetLocal',0,1,198,5,30
	.word	.L157
	.byte	1,1,1
	.word	.L88,.L158,.L87
	.byte	4
	.byte	'Task',0,1,200,5,51
	.word	.L159,.L160
	.byte	4
	.byte	'Mask',0,1,201,5,17
	.word	.L161,.L162
	.byte	5
	.word	.L88,.L158
	.byte	6
	.byte	'intState',0,1,204,5,19
	.word	.L163,.L164
	.byte	6
	.byte	'status',0,1,205,5,17
	.word	.L157,.L165
	.byte	7
	.word	.L166,.L167,.L168
	.byte	8
	.word	.L169,.L170
	.byte	9
	.word	.L171,.L167,.L168
	.byte	7
	.word	.L172,.L167,.L168
	.byte	9
	.word	.L173,.L167,.L168
	.byte	6
	.byte	'retState',0,2,128,1,29
	.word	.L174,.L175
	.byte	0,0,0,0,5
	.word	.L59,.L60
	.byte	7
	.word	.L176,.L59,.L177
	.byte	8
	.word	.L178,.L179
	.byte	8
	.word	.L180,.L181
	.byte	10
	.word	.L182,.L59,.L177
	.byte	0,7
	.word	.L183,.L177,.L184
	.byte	8
	.word	.L185,.L186
	.byte	11
	.word	.L187,.L188
	.byte	6
	.byte	'triggerd',0,1,156,2,17
	.word	.L161,.L191
	.byte	6
	.byte	'waiting',0,1,157,2,17
	.word	.L161,.L192
	.byte	0,0,7
	.word	.L183,.L189,.L190
	.byte	8
	.word	.L185,.L186
	.byte	0,7
	.word	.L193,.L194,.L61
	.byte	8
	.word	.L195,.L196
	.byte	9
	.word	.L197,.L194,.L61
	.byte	7
	.word	.L198,.L194,.L199
	.byte	8
	.word	.L200,.L201
	.byte	8
	.word	.L202,.L203
	.byte	10
	.word	.L204,.L194,.L199
	.byte	0,0,0,0,7
	.word	.L205,.L60,.L206
	.byte	8
	.word	.L207,.L208
	.byte	9
	.word	.L209,.L60,.L206
	.byte	7
	.word	.L210,.L60,.L206
	.byte	8
	.word	.L211,.L212
	.byte	9
	.word	.L213,.L60,.L206
	.byte	6
	.byte	'icr',0,2,154,1,29
	.word	.L174,.L214
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_EventSetLocal')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_EventSetLocal')
	.sect	'.debug_line'
.L99:
	.word	.L613-.L612
.L612:
	.half	3
	.word	.L615-.L614
.L614:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0,0
.L615:
	.byte	5,30,7,0,5,2
	.word	.L88
	.byte	3,197,5,1,4,2,5,42,9
	.half	.L167-.L88
	.byte	3,189,123,1,5,75,9
	.half	.L616-.L167
	.byte	1,5,73,9
	.half	.L588-.L616
	.byte	1,5,3,9
	.half	.L617-.L588
	.byte	3,3,1,4,3,5,78,9
	.half	.L168-.L617
	.byte	3,11,1,5,68,9
	.half	.L618-.L168
	.byte	3,195,1,1,4,1,5,8,9
	.half	.L619-.L618
	.byte	3,142,3,1,5,12,7,9
	.half	.L620-.L619
	.byte	3,2,1,5,31,1,5,9,9
	.half	.L59-.L620
	.byte	3,135,124,1,5,21,9
	.half	.L621-.L59
	.byte	1,5,20,9
	.half	.L177-.L621
	.byte	3,53,1,5,19,9
	.half	.L589-.L177
	.byte	3,3,1,4,3,5,78,9
	.half	.L184-.L589
	.byte	3,238,126,1,4,1,5,20,9
	.half	.L189-.L184
	.byte	3,148,1,1,4,3,5,39,9
	.half	.L190-.L189
	.byte	3,60,1,4,1,5,9,9
	.half	.L622-.L190
	.byte	3,145,3,1,5,63,7,9
	.half	.L623-.L622
	.byte	1,4,3,5,32,9
	.half	.L194-.L623
	.byte	3,173,123,1,5,30,1,4,4,5,16,9
	.half	.L199-.L194
	.byte	3,203,0,1,4,5,5,14,9
	.half	.L624-.L199
	.byte	3,173,2,1,4,1,5,32,9
	.half	.L587-.L624
	.byte	3,221,1,1,5,12,9
	.half	.L61-.L587
	.byte	3,10,1,4,2,5,3,9
	.half	.L60-.L61
	.byte	3,159,123,1,5,10,9
	.half	.L625-.L60
	.byte	3,1,1,5,41,9
	.half	.L626-.L625
	.byte	1,5,3,9
	.half	.L591-.L626
	.byte	3,2,1,9
	.half	.L627-.L591
	.byte	3,1,1,4,1,5,1,9
	.half	.L206-.L627
	.byte	3,227,4,1,7,9
	.half	.L101-.L206
	.byte	0,1,1
.L613:
	.sdecl	'.debug_ranges',debug,cluster('Os_EventSetLocal')
	.sect	'.debug_ranges'
.L100:
	.word	-1,.L88,0,.L101-.L88,0,0
.L188:
	.word	-1,.L88,.L177-.L88,.L184-.L88,.L189-.L88,.L190-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('Os_EventSetInternal')
	.sect	'.debug_info'
.L102:
	.word	444
	.half	3
	.word	.L103
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L105,.L104
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_EventSetInternal',0,1,147,6,30
	.word	.L157
	.byte	1,1,1
	.word	.L90,.L215,.L89
	.byte	4
	.byte	'Task',0,1,149,6,51
	.word	.L159,.L216
	.byte	4
	.byte	'Mask',0,1,150,6,17
	.word	.L161,.L217
	.byte	5
	.word	.L90,.L215
	.byte	6
	.byte	'status',0,1,153,6,17
	.word	.L157,.L218
	.byte	7
	.word	.L219,.L90,.L220
	.byte	8
	.word	.L221,.L222
	.byte	9
	.word	.L223,.L90,.L220
	.byte	7
	.word	.L224,.L90,.L220
	.byte	8
	.word	.L225,.L226
	.byte	9
	.word	.L227,.L90,.L220
	.byte	7
	.word	.L228,.L90,.L220
	.byte	9
	.word	.L229,.L90,.L220
	.byte	7
	.word	.L230,.L90,.L220
	.byte	8
	.word	.L231,.L232
	.byte	9
	.word	.L233,.L90,.L220
	.byte	7
	.word	.L234,.L90,.L220
	.byte	9
	.word	.L235,.L90,.L220
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L236
	.byte	0,0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_EventSetInternal')
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_EventSetInternal')
	.sect	'.debug_line'
.L104:
	.word	.L629-.L628
.L628:
	.half	3
	.word	.L631-.L630
.L630:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0,0
.L631:
	.byte	4,2,5,3,7,0,5,2
	.word	.L90
	.byte	3,224,4,1,4,1,5,37,9
	.half	.L220-.L90
	.byte	3,196,1,1,5,1,7,9
	.half	.L106-.L220
	.byte	3,10,0,1,1
.L629:
	.sdecl	'.debug_ranges',debug,cluster('Os_EventSetInternal')
	.sect	'.debug_ranges'
.L105:
	.word	-1,.L90,0,.L106-.L90,0,0
	.sdecl	'.debug_info',debug,cluster('Os_EventGetLocal')
	.sect	'.debug_info'
.L107:
	.word	386
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L110,.L109
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_EventGetLocal',0,1,189,6,30
	.word	.L157
	.byte	1,1,1
	.word	.L92,.L237,.L91
	.byte	4
	.byte	'Task',0,1,191,6,51
	.word	.L159,.L238
	.byte	4
	.byte	'Mask',0,1,192,6,20
	.word	.L239,.L240
	.byte	5
	.word	.L92,.L237
	.byte	6
	.byte	'status',0,1,195,6,17
	.word	.L157,.L241
	.byte	5
	.word	.L65,.L237
	.byte	6
	.byte	'event',0,1,219,6,53
	.word	.L242,.L243
	.byte	7
	.word	.L244,.L65,.L67
	.byte	8
	.word	.L245,.L246
	.byte	9
	.word	.L247,.L65,.L67
	.byte	0,7
	.word	.L248,.L67,.L249
	.byte	8
	.word	.L250,.L251
	.byte	9
	.word	.L252,.L67,.L249
	.byte	0,7
	.word	.L248,.L253,.L254
	.byte	8
	.word	.L250,.L251
	.byte	9
	.word	.L252,.L253,.L254
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_EventGetLocal')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_EventGetLocal')
	.sect	'.debug_line'
.L109:
	.word	.L633-.L632
.L632:
	.half	3
	.word	.L635-.L634
.L634:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0,0
.L635:
	.byte	4,2,5,78,7,0,5,2
	.word	.L92
	.byte	3,144,1,1,5,68,9
	.half	.L636-.L92
	.byte	3,195,1,1,4,1,5,3,9
	.half	.L637-.L636
	.byte	3,253,3,1,5,12,7,9
	.half	.L638-.L637
	.byte	3,2,1,5,1,3,24,1,4,2,5,31,7,9
	.half	.L65-.L638
	.byte	3,168,123,1,4,1,5,16,9
	.half	.L67-.L65
	.byte	3,101,1,5,15,9
	.half	.L249-.L67
	.byte	3,233,4,1,5,16,9
	.half	.L253-.L249
	.byte	3,151,123,1,5,20,9
	.half	.L254-.L253
	.byte	3,237,4,1,5,49,9
	.half	.L639-.L254
	.byte	1,5,12,7,9
	.half	.L640-.L639
	.byte	3,2,1,5,1,3,4,1,7,9
	.half	.L111-.L640
	.byte	0,1,1
.L633:
	.sdecl	'.debug_ranges',debug,cluster('Os_EventGetLocal')
	.sect	'.debug_ranges'
.L110:
	.word	-1,.L92,0,.L111-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_SetEvent')
	.sect	'.debug_info'
.L112:
	.word	1614
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L115,.L114
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_Api_SetEvent',0,1,215,2,30
	.word	.L157
	.byte	1,1,1
	.word	.L70,.L255,.L69
	.byte	4
	.byte	'TaskID',0,1,217,2,12
	.word	.L256,.L257
	.byte	4
	.byte	'Mask',0,1,218,2,17
	.word	.L161,.L258
	.byte	5
	.word	.L70,.L255
	.byte	6
	.byte	'status',0,1,221,2,17
	.word	.L157,.L259
	.byte	5
	.word	.L2,.L3
	.byte	7
	.word	.L260,.L2,.L261
	.byte	8
	.word	.L262,.L263
	.byte	9
	.word	.L264,.L2,.L261
	.byte	0,7
	.word	.L228,.L261,.L265
	.byte	10
	.word	.L229,.L261,.L265
	.byte	7
	.word	.L230,.L261,.L266
	.byte	8
	.word	.L231,.L267
	.byte	10
	.word	.L233,.L261,.L266
	.byte	7
	.word	.L234,.L261,.L266
	.byte	10
	.word	.L235,.L261,.L266
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L268
	.byte	0,0,0,0,0,0,7
	.word	.L269,.L4,.L270
	.byte	8
	.word	.L271,.L272
	.byte	11
	.word	.L273,.L274
	.byte	7
	.word	.L275,.L4,.L276
	.byte	8
	.word	.L277,.L278
	.byte	9
	.word	.L279,.L4,.L276
	.byte	0,0,0,7
	.word	.L219,.L8,.L280
	.byte	8
	.word	.L221,.L281
	.byte	10
	.word	.L223,.L8,.L280
	.byte	7
	.word	.L224,.L8,.L280
	.byte	8
	.word	.L225,.L282
	.byte	10
	.word	.L227,.L8,.L280
	.byte	7
	.word	.L228,.L8,.L280
	.byte	10
	.word	.L229,.L8,.L280
	.byte	7
	.word	.L230,.L8,.L280
	.byte	8
	.word	.L231,.L267
	.byte	10
	.word	.L233,.L8,.L280
	.byte	7
	.word	.L234,.L8,.L280
	.byte	10
	.word	.L235,.L8,.L280
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L283
	.byte	0,0,0,0,0,0,0,0,0,0,5
	.word	.L280,.L3
	.byte	6
	.byte	'interruptState',0,1,138,3,25
	.word	.L163,.L284
	.byte	7
	.word	.L285,.L280,.L286
	.byte	8
	.word	.L287,.L288
	.byte	9
	.word	.L289,.L280,.L286
	.byte	0,7
	.word	.L166,.L286,.L290
	.byte	8
	.word	.L169,.L291
	.byte	10
	.word	.L171,.L286,.L290
	.byte	7
	.word	.L172,.L286,.L290
	.byte	10
	.word	.L173,.L286,.L290
	.byte	6
	.byte	'retState',0,3,128,1,29
	.word	.L174,.L292
	.byte	0,0,0,0,7
	.word	.L293,.L294,.L295
	.byte	8
	.word	.L296,.L297
	.byte	9
	.word	.L298,.L294,.L295
	.byte	0,5
	.word	.L295,.L10
	.byte	7
	.word	.L299,.L295,.L300
	.byte	8
	.word	.L301,.L302
	.byte	9
	.word	.L303,.L295,.L300
	.byte	0,7
	.word	.L304,.L305,.L10
	.byte	8
	.word	.L306,.L307
	.byte	8
	.word	.L308,.L309
	.byte	10
	.word	.L310,.L305,.L10
	.byte	6
	.byte	'nextTask',0,4,131,3,51
	.word	.L159,.L311
	.byte	7
	.word	.L312,.L313,.L10
	.byte	8
	.word	.L314,.L315
	.byte	8
	.word	.L316,.L317
	.byte	8
	.word	.L318,.L319
	.byte	10
	.word	.L320,.L313,.L10
	.byte	7
	.word	.L321,.L313,.L15
	.byte	10
	.word	.L322,.L313,.L15
	.byte	10
	.word	.L323,.L313,.L15
	.byte	7
	.word	.L324,.L313,.L325
	.byte	10
	.word	.L326,.L313,.L325
	.byte	7
	.word	.L327,.L313,.L325
	.byte	11
	.word	.L328,.L329
	.byte	7
	.word	.L330,.L313,.L331
	.byte	9
	.word	.L332,.L313,.L331
	.byte	0,0,0,0,0,0,0,0,7
	.word	.L333,.L15,.L334
	.byte	8
	.word	.L335,.L336
	.byte	10
	.word	.L337,.L15,.L334
	.byte	7
	.word	.L338,.L15,.L334
	.byte	8
	.word	.L339,.L340
	.byte	8
	.word	.L341,.L342
	.byte	10
	.word	.L343,.L15,.L334
	.byte	6
	.byte	'previousState',0,5,144,1,29
	.word	.L174,.L344
	.byte	7
	.word	.L345,.L15,.L346
	.byte	8
	.word	.L347,.L348
	.byte	9
	.word	.L349,.L15,.L346
	.byte	0,7
	.word	.L210,.L350,.L334
	.byte	8
	.word	.L211,.L351
	.byte	10
	.word	.L213,.L350,.L334
	.byte	6
	.byte	'icr',0,3,154,1,29
	.word	.L174,.L352
	.byte	0,0,0,0,0,0,7
	.word	.L353,.L334,.L16
	.byte	8
	.word	.L354,.L355
	.byte	8
	.word	.L356,.L357
	.byte	9
	.word	.L358,.L334,.L16
	.byte	0,7
	.word	.L359,.L16,.L360
	.byte	8
	.word	.L361,.L362
	.byte	8
	.word	.L363,.L364
	.byte	12
	.word	.L365,.L366
	.byte	0,7
	.word	.L367,.L360,.L368
	.byte	8
	.word	.L369,.L370
	.byte	11
	.word	.L371,.L372
	.byte	6
	.byte	'PCXIAddr',0,6,149,2,10
	.word	.L174,.L373
	.byte	6
	.byte	'ctxPsw',0,6,150,2,43
	.word	.L374,.L375
	.byte	0,0,0,0,0,0,0,7
	.word	.L205,.L10,.L3
	.byte	8
	.word	.L207,.L376
	.byte	10
	.word	.L209,.L10,.L3
	.byte	7
	.word	.L210,.L10,.L3
	.byte	8
	.word	.L211,.L351
	.byte	10
	.word	.L213,.L10,.L3
	.byte	6
	.byte	'icr',0,3,154,1,29
	.word	.L174,.L377
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_SetEvent')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,12,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_SetEvent')
	.sect	'.debug_line'
.L114:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0,0
.L644:
	.byte	5,30,7,0,5,2
	.word	.L70
	.byte	3,214,2,1,5,8,9
	.half	.L538-.L70
	.byte	3,13,1,5,12,7,9
	.half	.L645-.L538
	.byte	3,2,1,5,28,1,4,4,5,10,9
	.half	.L2-.L645
	.byte	3,130,126,1,5,24,9
	.half	.L646-.L2
	.byte	1,4,2,5,3,9
	.half	.L261-.L646
	.byte	3,249,3,1,4,5,9
	.half	.L540-.L261
	.byte	3,212,124,1,4,7,5,16,9
	.half	.L266-.L540
	.byte	3,194,0,1,5,21,9
	.half	.L265-.L266
	.byte	1,5,80,9
	.half	.L541-.L265
	.byte	3,254,0,1,4,1,5,5,9
	.half	.L647-.L541
	.byte	3,127,1,5,14,7,9
	.half	.L648-.L647
	.byte	3,2,1,5,34,1,4,7,5,16,9
	.half	.L4-.L648
	.byte	3,230,126,1,4,8,5,103,9
	.half	.L276-.L4
	.byte	3,125,1,4,1,5,10,9
	.half	.L270-.L276
	.byte	3,163,1,1,5,14,7,9
	.half	.L649-.L270
	.byte	3,2,1,5,37,1,4,4,5,53,9
	.half	.L6-.L649
	.byte	3,73,1,4,1,5,10,9
	.half	.L650-.L6
	.byte	3,57,1,5,14,7,9
	.half	.L651-.L650
	.byte	3,2,1,5,42,1,4,2,5,3,9
	.half	.L8-.L651
	.byte	3,223,1,1,4,7,5,16,9
	.half	.L280-.L8
	.byte	3,137,125,1,4,3,5,75,9
	.half	.L286-.L280
	.byte	3,153,127,1,5,42,9
	.half	.L652-.L286
	.byte	1,5,73,9
	.half	.L555-.L652
	.byte	1,5,3,9
	.half	.L653-.L555
	.byte	3,3,1,4,1,5,41,9
	.half	.L290-.L653
	.byte	3,140,2,1,5,16,9
	.half	.L542-.L290
	.byte	1,5,9,9
	.half	.L556-.L542
	.byte	3,3,1,4,7,5,18,7,9
	.half	.L294-.L556
	.byte	3,143,127,1,5,63,9
	.half	.L543-.L294
	.byte	1,5,11,9
	.half	.L654-.L543
	.byte	1,5,42,7,9
	.half	.L655-.L654
	.byte	3,1,1,5,39,9
	.half	.L656-.L655
	.byte	1,5,63,7,9
	.half	.L11-.L656
	.byte	3,127,1,4,1,5,11,9
	.half	.L12-.L11
	.byte	3,243,0,1,4,9,5,14,7,9
	.half	.L295-.L12
	.byte	3,128,1,1,4,10,5,69,9
	.half	.L300-.L295
	.byte	3,139,125,1,5,43,9
	.half	.L657-.L300
	.byte	1,5,74,9
	.half	.L658-.L657
	.byte	1,4,1,5,13,9
	.half	.L659-.L658
	.byte	3,251,1,1,5,44,7,9
	.half	.L305-.L659
	.byte	3,126,1,4,4,5,12,9
	.half	.L544-.L305
	.byte	3,111,1,4,11,5,33,9
	.half	.L313-.L544
	.byte	3,154,127,1,4,9,5,10,9
	.half	.L331-.L313
	.byte	3,87,1,4,12,5,8,9
	.half	.L325-.L331
	.byte	3,155,127,1,5,5,9
	.half	.L660-.L325
	.byte	1,5,17,7,9
	.half	.L661-.L660
	.byte	3,21,1,5,29,9
	.half	.L662-.L661
	.byte	3,2,1,4,3,5,40,9
	.half	.L15-.L662
	.byte	3,183,4,1,5,71,9
	.half	.L554-.L15
	.byte	1,4,5,5,3,9
	.half	.L346-.L554
	.byte	3,178,123,1,9
	.half	.L663-.L346
	.byte	3,3,1,9
	.half	.L664-.L663
	.byte	3,1,1,4,4,5,32,9
	.half	.L665-.L664
	.byte	3,241,1,1,4,5,5,3,9
	.half	.L546-.L665
	.byte	3,146,126,1,4,3,9
	.half	.L350-.L546
	.byte	1,5,10,9
	.half	.L666-.L350
	.byte	3,1,1,5,41,9
	.half	.L547-.L666
	.byte	1,5,3,9
	.half	.L548-.L547
	.byte	3,2,1,9
	.half	.L667-.L548
	.byte	3,1,1,4,7,5,44,9
	.half	.L334-.L667
	.byte	3,175,8,1,5,60,9
	.half	.L668-.L334
	.byte	1,5,26,7,9
	.half	.L669-.L668
	.byte	3,2,1,5,43,9
	.half	.L16-.L669
	.byte	3,220,126,1,4,6,5,14,9
	.half	.L360-.L16
	.byte	3,239,121,1,5,45,9
	.half	.L670-.L360
	.byte	1,4,7,5,46,9
	.half	.L368-.L670
	.byte	3,151,6,1,4,3,5,3,9
	.half	.L10-.L368
	.byte	3,233,120,1,5,10,9
	.half	.L671-.L10
	.byte	3,1,1,5,41,9
	.half	.L672-.L671
	.byte	1,5,3,9
	.half	.L557-.L672
	.byte	3,2,1,9
	.half	.L673-.L557
	.byte	3,1,1,4,1,9
	.half	.L3-.L673
	.byte	3,147,2,1,5,1,3,1,1,7,9
	.half	.L116-.L3
	.byte	0,1,1
.L642:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_SetEvent')
	.sect	'.debug_ranges'
.L115:
	.word	-1,.L70,0,.L116-.L70,0,0
.L274:
	.word	-1,.L70,.L4-.L70,.L270-.L70,-1,.L74,0,.L146-.L74,0,0
.L329:
	.word	-1,.L70,.L313-.L70,.L325-.L70,-1,.L76,0,.L141-.L76,0,0
.L366:
	.word	-1,.L70,.L16-.L70,.L360-.L70,-1,.L78,0,.L136-.L78,0,0
.L372:
	.word	-1,.L70,.L360-.L70,.L368-.L70,-1,.L72,0,.L156-.L72,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_ClearEvent')
	.sect	'.debug_info'
.L117:
	.word	729
	.half	3
	.word	.L118
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L120,.L119
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_Api_ClearEvent',0,1,195,3,30
	.word	.L157
	.byte	1,1,1
	.word	.L80,.L378,.L79
	.byte	4
	.byte	'Mask',0,1,197,3,17
	.word	.L161,.L379
	.byte	5
	.word	.L80,.L378
	.byte	6
	.byte	'status',0,1,200,3,17
	.word	.L157,.L380
	.byte	7
	.word	.L228,.L80,.L381
	.byte	8
	.word	.L229,.L382
	.byte	7
	.word	.L230,.L80,.L384
	.byte	9
	.word	.L231,.L385
	.byte	10
	.word	.L233,.L80,.L384
	.byte	7
	.word	.L234,.L80,.L384
	.byte	10
	.word	.L235,.L80,.L384
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L386
	.byte	0,0,0,0,0,0,7
	.word	.L269,.L18,.L387
	.byte	9
	.word	.L271,.L388
	.byte	10
	.word	.L273,.L18,.L387
	.byte	7
	.word	.L275,.L18,.L389
	.byte	9
	.word	.L277,.L390
	.byte	11
	.word	.L279,.L18,.L389
	.byte	0,0,0,12
	.word	.L228,.L20,.L383
	.byte	5
	.word	.L22,.L378
	.byte	6
	.byte	'interruptState',0,1,230,3,23
	.word	.L163,.L391
	.byte	7
	.word	.L244,.L22,.L392
	.byte	9
	.word	.L245,.L393
	.byte	11
	.word	.L247,.L22,.L392
	.byte	0,7
	.word	.L166,.L392,.L394
	.byte	9
	.word	.L169,.L395
	.byte	10
	.word	.L171,.L392,.L394
	.byte	7
	.word	.L172,.L392,.L394
	.byte	10
	.word	.L173,.L392,.L394
	.byte	6
	.byte	'retState',0,3,128,1,29
	.word	.L174,.L396
	.byte	0,0,0,0,7
	.word	.L397,.L394,.L398
	.byte	9
	.word	.L399,.L400
	.byte	9
	.word	.L401,.L402
	.byte	11
	.word	.L403,.L394,.L398
	.byte	0,7
	.word	.L205,.L398,.L404
	.byte	9
	.word	.L207,.L405
	.byte	10
	.word	.L209,.L398,.L404
	.byte	7
	.word	.L210,.L398,.L404
	.byte	9
	.word	.L211,.L406
	.byte	10
	.word	.L213,.L398,.L404
	.byte	6
	.byte	'icr',0,3,154,1,29
	.word	.L174,.L407
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_ClearEvent')
	.sect	'.debug_abbrev'
.L118:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,5,0,49,16
	.byte	2,6,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,0,49,16,17,1,18,1,0,0,12,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_ClearEvent')
	.sect	'.debug_line'
.L119:
	.word	.L675-.L674
.L674:
	.half	3
	.word	.L677-.L676
.L676:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0,0
.L677:
	.byte	4,2,5,3,7,0,5,2
	.word	.L80
	.byte	3,224,4,1,4,4,9
	.half	.L559-.L80
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L384-.L559
	.byte	3,194,0,1,5,21,9
	.half	.L381-.L384
	.byte	1,4,1,5,8,9
	.half	.L560-.L381
	.byte	3,220,1,1,5,12,7,9
	.half	.L678-.L560
	.byte	3,2,1,5,1,3,35,1,4,5,5,16,7,9
	.half	.L18-.L678
	.byte	3,228,125,1,4,6,5,103,9
	.half	.L389-.L18
	.byte	3,125,1,4,1,5,5,9
	.half	.L387-.L389
	.byte	3,130,2,1,5,14,7,9
	.half	.L679-.L387
	.byte	3,2,1,5,1,3,27,1,4,7,5,53,7,9
	.half	.L20-.L679
	.byte	3,207,126,1,4,1,5,10,9
	.half	.L383-.L20
	.byte	3,152,1,1,5,14,7,9
	.half	.L680-.L383
	.byte	3,2,1,5,1,3,23,1,4,7,5,78,7,9
	.half	.L22-.L680
	.byte	3,153,125,1,4,3,5,42,9
	.half	.L392-.L22
	.byte	3,114,1,5,75,9
	.half	.L681-.L392
	.byte	1,5,73,9
	.half	.L561-.L681
	.byte	1,5,3,9
	.half	.L682-.L561
	.byte	3,3,1,4,1,5,9,9
	.half	.L394-.L682
	.byte	3,128,1,1,5,25,9
	.half	.L683-.L394
	.byte	1,5,21,9
	.half	.L684-.L683
	.byte	1,4,3,5,3,9
	.half	.L398-.L684
	.byte	3,151,127,1,5,10,9
	.half	.L685-.L398
	.byte	3,1,1,5,41,9
	.half	.L686-.L685
	.byte	1,5,3,9
	.half	.L562-.L686
	.byte	3,2,1,9
	.half	.L687-.L562
	.byte	3,1,1,4,1,5,14,9
	.half	.L404-.L687
	.byte	3,210,2,1,5,1,3,5,1,7,9
	.half	.L121-.L404
	.byte	0,1,1
.L675:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_ClearEvent')
	.sect	'.debug_ranges'
.L120:
	.word	-1,.L80,0,.L121-.L80,0,0
.L382:
	.word	-1,.L80,0,.L381-.L80,.L20-.L80,.L383-.L80,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_GetEvent')
	.sect	'.debug_info'
.L122:
	.word	675
	.half	3
	.word	.L123
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L125,.L124
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_Api_GetEvent',0,1,133,4,30
	.word	.L157
	.byte	1,1,1
	.word	.L82,.L408,.L81
	.byte	4
	.byte	'TaskID',0,1,135,4,12
	.word	.L256,.L409
	.byte	4
	.byte	'Mask',0,1,136,4,20
	.word	.L239,.L410
	.byte	5
	.word	.L82,.L408
	.byte	6
	.byte	'status',0,1,139,4,17
	.word	.L157,.L411
	.byte	5
	.word	.L25,.L408
	.byte	7
	.word	.L260,.L25,.L412
	.byte	8
	.word	.L262,.L413
	.byte	9
	.word	.L264,.L25,.L412
	.byte	0,7
	.word	.L228,.L412,.L414
	.byte	10
	.word	.L229,.L412,.L414
	.byte	7
	.word	.L230,.L412,.L415
	.byte	8
	.word	.L231,.L416
	.byte	10
	.word	.L233,.L412,.L415
	.byte	7
	.word	.L234,.L412,.L415
	.byte	10
	.word	.L235,.L412,.L415
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L417
	.byte	0,0,0,0,0,0,7
	.word	.L269,.L27,.L418
	.byte	8
	.word	.L271,.L419
	.byte	11
	.word	.L273,.L420
	.byte	7
	.word	.L275,.L27,.L421
	.byte	8
	.word	.L277,.L422
	.byte	9
	.word	.L279,.L27,.L421
	.byte	0,0,0,7
	.word	.L219,.L31,.L423
	.byte	8
	.word	.L221,.L424
	.byte	10
	.word	.L223,.L31,.L423
	.byte	7
	.word	.L224,.L31,.L423
	.byte	8
	.word	.L225,.L425
	.byte	10
	.word	.L227,.L31,.L423
	.byte	7
	.word	.L228,.L31,.L423
	.byte	10
	.word	.L229,.L31,.L423
	.byte	7
	.word	.L230,.L31,.L423
	.byte	8
	.word	.L231,.L416
	.byte	10
	.word	.L233,.L31,.L423
	.byte	7
	.word	.L234,.L31,.L423
	.byte	10
	.word	.L235,.L31,.L423
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L426
	.byte	0,0,0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_GetEvent')
	.sect	'.debug_abbrev'
.L123:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_GetEvent')
	.sect	'.debug_line'
.L124:
	.word	.L689-.L688
.L688:
	.half	3
	.word	.L691-.L690
.L690:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0,0
.L691:
	.byte	5,30,7,0,5,2
	.word	.L82
	.byte	3,132,4,1,5,8,9
	.half	.L566-.L82
	.byte	3,13,1,5,12,7,9
	.half	.L692-.L566
	.byte	3,2,1,5,1,3,49,1,4,3,5,10,7,9
	.half	.L25-.L692
	.byte	3,163,124,1,5,24,9
	.half	.L693-.L25
	.byte	1,4,2,5,3,9
	.half	.L412-.L693
	.byte	3,249,3,1,4,4,9
	.half	.L564-.L412
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L415-.L564
	.byte	3,194,0,1,5,21,9
	.half	.L414-.L415
	.byte	1,5,80,9
	.half	.L565-.L414
	.byte	3,254,0,1,4,1,5,5,9
	.half	.L694-.L565
	.byte	3,173,1,1,5,14,7,9
	.half	.L695-.L694
	.byte	3,2,1,5,1,3,33,1,4,5,5,16,7,9
	.half	.L27-.L695
	.byte	3,151,125,1,4,6,5,103,9
	.half	.L421-.L27
	.byte	3,125,1,4,1,5,10,9
	.half	.L418-.L421
	.byte	3,209,2,1,5,14,7,9
	.half	.L696-.L418
	.byte	3,2,1,5,1,3,25,1,4,3,5,53,7,9
	.half	.L29-.L696
	.byte	3,130,126,1,4,1,5,10,9
	.half	.L697-.L29
	.byte	3,231,1,1,5,14,7,9
	.half	.L698-.L697
	.byte	3,2,1,5,1,3,21,1,4,2,5,3,7,9
	.half	.L31-.L698
	.byte	3,28,1,4,1,5,41,9
	.half	.L423-.L31
	.byte	3,86,1,5,1,7,9
	.half	.L126-.L423
	.byte	3,14,0,1,1
.L689:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_GetEvent')
	.sect	'.debug_ranges'
.L125:
	.word	-1,.L82,0,.L126-.L82,0,0
.L420:
	.word	-1,.L82,.L27-.L82,.L418-.L82,-1,.L84,0,.L151-.L84,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_WaitEvent')
	.sect	'.debug_info'
.L127:
	.word	1886
	.half	3
	.word	.L128
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L130,.L129
	.byte	2
	.word	.L93
	.byte	3
	.byte	'Os_Api_WaitEvent',0,1,219,4,30
	.word	.L157
	.byte	1,1,1
	.word	.L86,.L427,.L85
	.byte	4
	.byte	'Mask',0,1,221,4,17
	.word	.L161,.L428
	.byte	5
	.word	.L86,.L427
	.byte	6
	.byte	'status',0,1,224,4,17
	.word	.L157,.L429
	.byte	7
	.word	.L228,.L86,.L430
	.byte	8
	.word	.L229,.L86,.L430
	.byte	7
	.word	.L230,.L86,.L431
	.byte	9
	.word	.L231,.L432
	.byte	8
	.word	.L233,.L86,.L431
	.byte	7
	.word	.L234,.L86,.L431
	.byte	8
	.word	.L235,.L86,.L431
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L174,.L433
	.byte	0,0,0,0,0,0,5
	.word	.L34,.L427
	.byte	7
	.word	.L434,.L36,.L435
	.byte	9
	.word	.L436,.L437
	.byte	8
	.word	.L438,.L36,.L435
	.byte	7
	.word	.L439,.L36,.L435
	.byte	9
	.word	.L440,.L441
	.byte	8
	.word	.L442,.L36,.L435
	.byte	6
	.byte	'hasResources',0,3,191,3,20
	.word	.L443,.L444
	.byte	6
	.byte	'it',0,3,192,3,19
	.word	.L445,.L446
	.byte	7
	.word	.L447,.L39,.L448
	.byte	9
	.word	.L449,.L450
	.byte	8
	.word	.L451,.L39,.L448
	.byte	7
	.word	.L452,.L39,.L448
	.byte	9
	.word	.L453,.L454
	.byte	10
	.word	.L455,.L39,.L448
	.byte	0,0,0,0,0,0,0,7
	.word	.L456,.L47,.L457
	.byte	9
	.word	.L458,.L459
	.byte	8
	.word	.L460,.L47,.L457
	.byte	7
	.word	.L461,.L47,.L457
	.byte	9
	.word	.L462,.L463
	.byte	8
	.word	.L464,.L47,.L457
	.byte	6
	.byte	'hasSpinlocks',0,3,229,3,20
	.word	.L443,.L465
	.byte	6
	.byte	'it',0,3,230,3,19
	.word	.L445,.L466
	.byte	0,0,0,0,7
	.word	.L269,.L50,.L467
	.byte	9
	.word	.L271,.L468
	.byte	8
	.word	.L273,.L50,.L467
	.byte	7
	.word	.L275,.L50,.L469
	.byte	9
	.word	.L277,.L470
	.byte	10
	.word	.L279,.L50,.L469
	.byte	0,0,0,5
	.word	.L52,.L427
	.byte	6
	.byte	'interruptState',0,1,138,5,23
	.word	.L163,.L471
	.byte	6
	.byte	'setWaitState',0,1,139,5,15
	.word	.L472,.L473
	.byte	7
	.word	.L166,.L474,.L475
	.byte	9
	.word	.L169,.L476
	.byte	8
	.word	.L171,.L474,.L475
	.byte	7
	.word	.L172,.L474,.L475
	.byte	8
	.word	.L173,.L474,.L475
	.byte	6
	.byte	'retState',0,4,128,1,29
	.word	.L174,.L477
	.byte	0,0,0,0,7
	.word	.L478,.L475,.L479
	.byte	9
	.word	.L480,.L481
	.byte	9
	.word	.L482,.L483
	.byte	10
	.word	.L484,.L475,.L479
	.byte	0,7
	.word	.L183,.L479,.L485
	.byte	9
	.word	.L185,.L486
	.byte	8
	.word	.L187,.L479,.L485
	.byte	6
	.byte	'triggerd',0,1,156,2,17
	.word	.L161,.L487
	.byte	6
	.byte	'waiting',0,1,157,2,17
	.word	.L161,.L488
	.byte	0,0,7
	.word	.L489,.L490,.L55
	.byte	9
	.word	.L491,.L492
	.byte	8
	.word	.L493,.L490,.L55
	.byte	7
	.word	.L494,.L490,.L495
	.byte	9
	.word	.L496,.L497
	.byte	11
	.word	.L498,.L499
	.byte	0,7
	.word	.L198,.L495,.L500
	.byte	9
	.word	.L200,.L502
	.byte	9
	.word	.L202,.L503
	.byte	11
	.word	.L204,.L504
	.byte	0,7
	.word	.L494,.L500,.L501
	.byte	9
	.word	.L496,.L497
	.byte	0,7
	.word	.L198,.L501,.L505
	.byte	9
	.word	.L200,.L502
	.byte	9
	.word	.L202,.L503
	.byte	0,7
	.word	.L304,.L506,.L55
	.byte	9
	.word	.L306,.L507
	.byte	9
	.word	.L308,.L508
	.byte	8
	.word	.L310,.L506,.L55
	.byte	6
	.byte	'nextTask',0,5,131,3,51
	.word	.L159,.L509
	.byte	7
	.word	.L312,.L510,.L55
	.byte	9
	.word	.L314,.L511
	.byte	9
	.word	.L316,.L512
	.byte	9
	.word	.L318,.L513
	.byte	8
	.word	.L320,.L510,.L55
	.byte	7
	.word	.L321,.L510,.L56
	.byte	8
	.word	.L322,.L510,.L56
	.byte	8
	.word	.L323,.L510,.L56
	.byte	7
	.word	.L324,.L510,.L514
	.byte	8
	.word	.L326,.L510,.L514
	.byte	7
	.word	.L327,.L510,.L514
	.byte	8
	.word	.L328,.L510,.L514
	.byte	7
	.word	.L330,.L510,.L515
	.byte	10
	.word	.L332,.L510,.L515
	.byte	0,0,0,0,0,0,0,0,7
	.word	.L333,.L56,.L516
	.byte	9
	.word	.L335,.L517
	.byte	8
	.word	.L337,.L56,.L516
	.byte	7
	.word	.L338,.L56,.L516
	.byte	9
	.word	.L339,.L518
	.byte	9
	.word	.L341,.L519
	.byte	8
	.word	.L343,.L56,.L516
	.byte	6
	.byte	'previousState',0,6,144,1,29
	.word	.L174,.L520
	.byte	7
	.word	.L345,.L56,.L521
	.byte	9
	.word	.L347,.L522
	.byte	10
	.word	.L349,.L56,.L521
	.byte	0,7
	.word	.L210,.L523,.L516
	.byte	9
	.word	.L211,.L524
	.byte	8
	.word	.L213,.L523,.L516
	.byte	6
	.byte	'icr',0,4,154,1,29
	.word	.L174,.L525
	.byte	0,0,0,0,0,0,7
	.word	.L353,.L516,.L57
	.byte	9
	.word	.L354,.L526
	.byte	9
	.word	.L356,.L527
	.byte	10
	.word	.L358,.L516,.L57
	.byte	0,7
	.word	.L359,.L57,.L528
	.byte	9
	.word	.L361,.L529
	.byte	9
	.word	.L363,.L530
	.byte	10
	.word	.L365,.L57,.L528
	.byte	0,7
	.word	.L367,.L528,.L531
	.byte	9
	.word	.L369,.L532
	.byte	8
	.word	.L371,.L528,.L531
	.byte	6
	.byte	'PCXIAddr',0,7,149,2,10
	.word	.L174,.L533
	.byte	6
	.byte	'ctxPsw',0,7,150,2,43
	.word	.L374,.L534
	.byte	0,0,0,0,0,0,0,0,7
	.word	.L205,.L55,.L535
	.byte	9
	.word	.L207,.L536
	.byte	8
	.word	.L209,.L55,.L535
	.byte	7
	.word	.L210,.L55,.L535
	.byte	9
	.word	.L211,.L524
	.byte	8
	.word	.L213,.L55,.L535
	.byte	6
	.byte	'icr',0,4,154,1,29
	.word	.L174,.L537
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_WaitEvent')
	.sect	'.debug_abbrev'
.L128:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49
	.byte	16,2,6,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_WaitEvent')
	.sect	'.debug_line'
.L129:
	.word	.L700-.L699
.L699:
	.half	3
	.word	.L702-.L701
.L701:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0,0
.L702:
	.byte	4,2,5,3,7,0,5,2
	.word	.L86
	.byte	3,224,4,1,4,6,9
	.half	.L567-.L86
	.byte	3,212,124,1,4,3,5,16,9
	.half	.L431-.L567
	.byte	3,194,0,1,5,21,9
	.half	.L430-.L431
	.byte	1,4,1,5,8,9
	.half	.L568-.L430
	.byte	3,243,2,1,5,12,7,9
	.half	.L703-.L568
	.byte	3,2,1,5,1,3,203,0,1,4,5,5,53,7,9
	.half	.L34-.L703
	.byte	3,144,125,1,4,1,5,5,9
	.half	.L704-.L34
	.byte	3,173,2,1,5,14,7,9
	.half	.L705-.L704
	.byte	3,2,1,5,1,3,193,0,1,4,3,5,19,7,9
	.half	.L36-.L705
	.byte	3,140,126,1,5,16,9
	.half	.L569-.L36
	.byte	3,127,1,5,6,9
	.half	.L571-.L569
	.byte	3,1,1,5,51,9
	.half	.L572-.L571
	.byte	3,3,1,4,8,5,38,9
	.half	.L39-.L572
	.byte	3,131,127,1,5,29,9
	.half	.L706-.L39
	.byte	3,1,1,5,33,9
	.half	.L707-.L706
	.byte	3,127,1,5,45,7,9
	.half	.L708-.L707
	.byte	3,1,1,5,29,7,9
	.half	.L40-.L708
	.byte	1,4,3,5,5,9
	.half	.L41-.L40
	.byte	3,255,0,1,5,20,7,9
	.half	.L448-.L41
	.byte	3,2,1,5,7,3,1,1,4,8,5,21,9
	.half	.L42-.L448
	.byte	3,226,125,1,5,26,9
	.half	.L573-.L42
	.byte	1,4,3,5,51,9
	.half	.L38-.L573
	.byte	3,152,2,1,4,1,5,10,7,9
	.half	.L43-.L38
	.byte	3,178,1,1,5,14,7,9
	.half	.L435-.L43
	.byte	3,2,1,5,1,3,61,1,4,8,5,45,7,9
	.half	.L47-.L435
	.byte	3,218,124,1,4,3,5,5,9
	.half	.L709-.L47
	.byte	3,223,1,1,5,20,7,9
	.half	.L710-.L709
	.byte	3,2,1,5,7,3,1,1,4,8,5,21,9
	.half	.L48-.L710
	.byte	3,187,125,1,5,26,9
	.half	.L570-.L48
	.byte	1,4,3,5,51,9
	.half	.L46-.L570
	.byte	3,191,2,1,4,1,5,10,7,9
	.half	.L49-.L46
	.byte	3,143,1,1,5,14,7,9
	.half	.L457-.L49
	.byte	3,2,1,5,1,3,57,1,4,3,5,16,7,9
	.half	.L50-.L457
	.byte	3,165,124,1,4,9,5,103,9
	.half	.L469-.L50
	.byte	3,125,1,4,1,5,10,9
	.half	.L467-.L469
	.byte	3,167,3,1,5,14,7,9
	.half	.L711-.L467
	.byte	3,2,1,5,1,3,53,1,5,28,7,9
	.half	.L52-.L711
	.byte	3,84,1,4,5,5,78,3,134,124,1,4,4,5,75,9
	.half	.L474-.L52
	.byte	3,114,1,5,42,9
	.half	.L712-.L474
	.byte	1,5,73,9
	.half	.L584-.L712
	.byte	1,5,3,9
	.half	.L713-.L584
	.byte	3,3,1,4,1,5,19,9
	.half	.L475-.L713
	.byte	3,173,1,1,5,20,9
	.half	.L479-.L475
	.byte	3,109,1,5,19,9
	.half	.L576-.L479
	.byte	3,3,1,5,20,9
	.half	.L574-.L576
	.byte	3,2,1,5,45,9
	.half	.L485-.L574
	.byte	3,241,2,1,5,24,9
	.half	.L714-.L485
	.byte	3,11,1,5,7,9
	.half	.L715-.L714
	.byte	3,8,1,4,3,5,16,7,9
	.half	.L490-.L715
	.byte	3,193,124,1,4,5,5,78,9
	.half	.L495-.L490
	.byte	3,167,127,1,5,32,9
	.half	.L575-.L495
	.byte	3,14,1,4,10,5,14,9
	.half	.L500-.L575
	.byte	3,248,2,1,4,5,5,30,9
	.half	.L501-.L500
	.byte	3,136,125,1,5,87,9
	.half	.L505-.L501
	.byte	3,185,2,1,5,12,9
	.half	.L578-.L505
	.byte	3,178,127,1,4,11,5,33,9
	.half	.L510-.L578
	.byte	3,154,127,1,4,10,5,10,9
	.half	.L515-.L510
	.byte	3,87,1,4,12,5,8,9
	.half	.L514-.L515
	.byte	3,155,127,1,5,5,9
	.half	.L716-.L514
	.byte	1,5,17,7,9
	.half	.L717-.L716
	.byte	3,21,1,5,29,9
	.half	.L718-.L717
	.byte	3,2,1,4,4,5,40,9
	.half	.L56-.L718
	.byte	3,183,4,1,5,71,9
	.half	.L583-.L56
	.byte	1,4,6,5,3,9
	.half	.L521-.L583
	.byte	3,178,123,1,9
	.half	.L719-.L521
	.byte	3,3,1,9
	.half	.L720-.L719
	.byte	3,1,1,4,5,5,32,9
	.half	.L721-.L720
	.byte	3,241,1,1,4,6,5,3,9
	.half	.L579-.L721
	.byte	3,146,126,1,4,4,9
	.half	.L523-.L579
	.byte	1,5,10,9
	.half	.L722-.L523
	.byte	3,1,1,5,41,9
	.half	.L580-.L722
	.byte	1,5,3,9
	.half	.L581-.L580
	.byte	3,2,1,9
	.half	.L723-.L581
	.byte	3,1,1,4,3,5,44,9
	.half	.L516-.L723
	.byte	3,175,8,1,5,60,9
	.half	.L724-.L516
	.byte	1,5,26,7,9
	.half	.L725-.L724
	.byte	3,2,1,5,43,9
	.half	.L57-.L725
	.byte	3,220,126,1,4,7,5,14,9
	.half	.L528-.L57
	.byte	3,239,121,1,5,45,9
	.half	.L726-.L528
	.byte	1,4,3,5,46,9
	.half	.L531-.L726
	.byte	3,151,6,1,4,4,5,3,9
	.half	.L55-.L531
	.byte	3,233,120,1,5,10,9
	.half	.L727-.L55
	.byte	3,1,1,5,41,9
	.half	.L728-.L727
	.byte	1,5,3,9
	.half	.L585-.L728
	.byte	3,2,1,9
	.half	.L729-.L585
	.byte	3,1,1,4,1,5,14,9
	.half	.L535-.L729
	.byte	3,145,4,1,5,1,3,5,1,7,9
	.half	.L131-.L535
	.byte	0,1,1
.L700:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_WaitEvent')
	.sect	'.debug_ranges'
.L130:
	.word	-1,.L86,0,.L131-.L86,0,0
.L499:
	.word	-1,.L86,.L490-.L86,.L495-.L86,.L500-.L86,.L501-.L86,0,0
.L504:
	.word	-1,.L86,.L495-.L86,.L500-.L86,.L501-.L86,.L505-.L86,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L132:
	.word	170
	.half	3
	.word	.L133
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L135,.L134
	.byte	2
	.word	.L93
	.byte	3
	.byte	'.cocofun_1',0,1,215,2,30,1
	.word	.L78,.L136,.L77
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L134:
	.word	.L731-.L730
.L730:
	.half	3
	.word	.L733-.L732
.L732:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0,0
.L733:
	.byte	4,2,5,43,7,0,5,2
	.word	.L78
	.byte	3,173,8,1,5,30,9
	.half	.L734-.L78
	.byte	1,4,3,5,14,9
	.half	.L735-.L734
	.byte	3,234,121,1,4,4,9
	.half	.L736-.L735
	.byte	3,135,127,1,5,42,9
	.half	.L737-.L736
	.byte	3,231,4,1,4,2,5,36,9
	.half	.L738-.L737
	.byte	3,171,2,1,4,3,5,14,9
	.half	.L739-.L738
	.byte	3,231,121,1,5,63,9
	.half	.L552-.L739
	.byte	3,1,1,5,10,9
	.half	.L551-.L552
	.byte	1,5,15,9
	.half	.L553-.L551
	.byte	3,3,1,5,23,9
	.half	.L740-.L553
	.byte	1,9
	.half	.L136-.L740
	.byte	0,1,1,4,2,5,43,0,5,2
	.word	.L78
	.byte	3,173,8,1,5,30,9
	.half	.L734-.L78
	.byte	1,4,3,5,14,9
	.half	.L735-.L734
	.byte	3,234,121,1,4,4,9
	.half	.L736-.L735
	.byte	3,135,127,1,5,42,9
	.half	.L737-.L736
	.byte	3,231,4,1,4,2,5,36,9
	.half	.L738-.L737
	.byte	3,171,2,1,4,3,5,14,9
	.half	.L739-.L738
	.byte	3,231,121,1,5,63,9
	.half	.L552-.L739
	.byte	3,1,1,5,10,9
	.half	.L551-.L552
	.byte	1,5,15,9
	.half	.L553-.L551
	.byte	3,3,1,5,23,9
	.half	.L740-.L553
	.byte	1,9
	.half	.L136-.L740
	.byte	0,1,1
.L731:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L135:
	.word	-1,.L78,0,.L136-.L78,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L137:
	.word	170
	.half	3
	.word	.L138
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L140,.L139
	.byte	2
	.word	.L93
	.byte	3
	.byte	'.cocofun_2',0,1,215,2,30,1
	.word	.L76,.L141,.L75
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L138:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L139:
	.word	.L742-.L741
.L741:
	.half	3
	.word	.L744-.L743
.L743:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0,0
.L744:
	.byte	4,2,5,10,7,0,5,2
	.word	.L76
	.byte	3,250,1,1,5,32,9
	.half	.L745-.L76
	.byte	1,5,14,9
	.half	.L746-.L745
	.byte	3,164,127,1,5,68,9
	.half	.L747-.L746
	.byte	3,250,4,1,4,3,5,40,9
	.half	.L748-.L747
	.byte	3,251,122,1,9
	.half	.L141-.L748
	.byte	0,1,1,4,2,5,10,0,5,2
	.word	.L76
	.byte	3,250,1,1,5,32,9
	.half	.L745-.L76
	.byte	1,5,14,9
	.half	.L746-.L745
	.byte	3,164,127,1,5,68,9
	.half	.L747-.L746
	.byte	3,250,4,1,4,3,5,40,9
	.half	.L748-.L747
	.byte	3,251,122,1,9
	.half	.L141-.L748
	.byte	0,1,1
.L742:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L140:
	.word	-1,.L76,0,.L141-.L76,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L142:
	.word	170
	.half	3
	.word	.L143
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L145,.L144
	.byte	2
	.word	.L93
	.byte	3
	.byte	'.cocofun_3',0,1,215,2,30,1
	.word	.L74,.L146,.L73
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L143:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L144:
	.word	.L750-.L749
.L749:
	.half	3
	.word	.L752-.L751
.L751:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0,0
.L752:
	.byte	4,2,5,103,7,0,5,2
	.word	.L74
	.byte	3,216,1,1,5,84,9
	.half	.L753-.L74
	.byte	3,1,1,5,103,9
	.half	.L754-.L753
	.byte	3,127,1,5,118,9
	.half	.L755-.L754
	.byte	1,5,84,3,2,1,5,103,9
	.half	.L756-.L755
	.byte	3,127,1,9
	.half	.L146-.L756
	.byte	0,1,1,4,2,5,103,0,5,2
	.word	.L74
	.byte	3,216,1,1,5,84,9
	.half	.L753-.L74
	.byte	3,1,1,5,103,9
	.half	.L754-.L753
	.byte	3,127,1,5,118,9
	.half	.L755-.L754
	.byte	1,5,84,3,2,1,5,103,9
	.half	.L756-.L755
	.byte	3,127,1,9
	.half	.L146-.L756
	.byte	0,1,1
.L750:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L145:
	.word	-1,.L74,0,.L146-.L74,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L147:
	.word	170
	.half	3
	.word	.L148
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L150,.L149
	.byte	2
	.word	.L93
	.byte	3
	.byte	'.cocofun_4',0,1,133,4,30,1
	.word	.L84,.L151,.L83
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L148:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L149:
	.word	.L758-.L757
.L757:
	.half	3
	.word	.L760-.L759
.L759:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0,0
.L760:
	.byte	4,2,5,103,7,0,5,2
	.word	.L84
	.byte	3,216,1,1,5,84,9
	.half	.L761-.L84
	.byte	3,1,1,5,103,9
	.half	.L762-.L761
	.byte	3,127,1,5,118,9
	.half	.L763-.L762
	.byte	1,5,84,3,2,1,5,103,9
	.half	.L764-.L763
	.byte	3,127,1,9
	.half	.L151-.L764
	.byte	0,1,1,4,2,5,103,0,5,2
	.word	.L84
	.byte	3,216,1,1,5,84,9
	.half	.L761-.L84
	.byte	3,1,1,5,103,9
	.half	.L762-.L761
	.byte	3,127,1,5,118,9
	.half	.L763-.L762
	.byte	1,5,84,3,2,1,5,103,9
	.half	.L764-.L763
	.byte	3,127,1,9
	.half	.L151-.L764
	.byte	0,1,1
.L758:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L150:
	.word	-1,.L84,0,.L151-.L84,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L152:
	.word	170
	.half	3
	.word	.L153
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L155,.L154
	.byte	2
	.word	.L93
	.byte	3
	.byte	'.cocofun_5',0,1,215,2,30,1
	.word	.L72,.L156,.L71
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L153:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L154:
	.word	.L766-.L765
.L765:
	.half	3
	.word	.L768-.L767
.L767:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Event.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L768:
	.byte	4,2,5,45,7,0,5,2
	.word	.L72
	.byte	3,156,2,1,5,58,9
	.half	.L769-.L72
	.byte	3,127,1,5,11,1,4,3,5,31,9
	.half	.L770-.L769
	.byte	3,152,6,1,5,46,9
	.half	.L771-.L770
	.byte	1,9
	.half	.L156-.L771
	.byte	0,1,1,4,2,5,45,0,5,2
	.word	.L72
	.byte	3,156,2,1,5,58,9
	.half	.L769-.L72
	.byte	3,127,1,5,11,1,4,3,5,31,9
	.half	.L770-.L769
	.byte	3,152,6,1,5,46,9
	.half	.L771-.L770
	.byte	1,9
	.half	.L156-.L771
	.byte	0,1,1
.L766:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L155:
	.word	-1,.L72,0,.L156-.L72,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L77:
	.word	-1,.L78,0,.L136-.L78
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L75:
	.word	-1,.L76,0,.L141-.L76
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L73:
	.word	-1,.L74,0,.L146-.L74
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L83:
	.word	-1,.L84,0,.L151-.L84
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L71:
	.word	-1,.L72,0,.L156-.L72
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_ClearEvent')
	.sect	'.debug_loc'
.L385:
	.word	0,0
.L400:
	.word	0,0
.L402:
	.word	0,0
.L379:
	.word	-1,.L80,.L74-.L80,.L146-.L80
	.half	2
	.byte	144,34
	.word	0,.L378-.L80
	.half	2
	.byte	144,34
	.word	0,0
.L79:
	.word	-1,.L80,0,.L378-.L80
	.half	2
	.byte	138,0
	.word	0,0
.L386:
	.word	-1,.L80,.L559-.L80,.L560-.L80
	.half	1
	.byte	95
	.word	0,0
.L395:
	.word	0,0
.L406:
	.word	0,0
.L405:
	.word	0,0
.L393:
	.word	0,0
.L390:
	.word	0,0
.L388:
	.word	0,0
.L407:
	.word	-1,.L80,.L562-.L80,.L563-.L80
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L391:
	.word	0,0
.L396:
	.word	-1,.L80,.L561-.L80,.L378-.L80
	.half	1
	.byte	95
	.word	0,0
.L380:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_GetEvent')
	.sect	'.debug_loc'
.L425:
	.word	0,0
.L416:
	.word	0,0
.L410:
	.word	-1,.L82,0,.L412-.L82
	.half	1
	.byte	100
	.word	.L84-.L82,.L151-.L82
	.half	1
	.byte	101
	.word	.L566-.L82,.L408-.L82
	.half	1
	.byte	101
	.word	0,0
.L81:
	.word	-1,.L82,0,.L408-.L82
	.half	2
	.byte	138,0
	.word	0,0
.L417:
	.word	-1,.L82,.L564-.L82,.L565-.L82
	.half	1
	.byte	95
	.word	0,0
.L426:
	.word	-1,.L82,.L423-.L82,.L408-.L82
	.half	1
	.byte	95
	.word	0,0
.L424:
	.word	0,0
.L409:
	.word	-1,.L82,.L84-.L82,.L151-.L82
	.half	1
	.byte	84
	.word	0,.L408-.L82
	.half	1
	.byte	84
	.word	0,0
.L413:
	.word	0,0
.L422:
	.word	0,0
.L419:
	.word	0,0
.L411:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_SetEvent')
	.sect	'.debug_loc'
.L319:
	.word	0,0
.L357:
	.word	0,0
.L309:
	.word	0,0
.L370:
	.word	0,0
.L282:
	.word	0,0
.L302:
	.word	0,0
.L364:
	.word	0,0
.L340:
	.word	0,0
.L267:
	.word	0,0
.L315:
	.word	0,0
.L258:
	.word	-1,.L70,.L74-.L70,.L146-.L70
	.half	2
	.byte	144,35
	.word	0,.L542-.L70
	.half	2
	.byte	144,35
	.word	.L290-.L70,.L542-.L70
	.half	2
	.byte	144,34
	.word	0,0
.L317:
	.word	0,0
.L69:
	.word	-1,.L70,0,.L255-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L373:
	.word	-1,.L70,.L550-.L70,.L551-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L268:
	.word	-1,.L70,.L540-.L70,.L541-.L70
	.half	1
	.byte	95
	.word	0,0
.L283:
	.word	-1,.L70,.L280-.L70,.L543-.L70
	.half	1
	.byte	95
	.word	0,0
.L307:
	.word	0,0
.L362:
	.word	0,0
.L291:
	.word	0,0
.L351:
	.word	0,0
.L376:
	.word	0,0
.L348:
	.word	0,0
.L281:
	.word	0,0
.L257:
	.word	-1,.L70,0,.L538-.L70
	.half	1
	.byte	84
	.word	.L539-.L70,.L540-.L70
	.half	1
	.byte	95
	.word	0,0
.L263:
	.word	0,0
.L342:
	.word	0,0
.L278:
	.word	0,0
.L288:
	.word	0,0
.L297:
	.word	0,0
.L272:
	.word	0,0
.L336:
	.word	0,0
.L355:
	.word	0,0
.L375:
	.word	-1,.L70,.L552-.L70,.L136-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	.L553-.L70,.L136-.L70
	.half	1
	.byte	111
	.word	.L360-.L70,.L368-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	.L72-.L70,.L156-.L70
	.half	1
	.byte	111
	.word	.L360-.L70,.L10-.L70
	.half	1
	.byte	111
	.word	0,0
.L352:
	.word	-1,.L70,.L548-.L70,.L549-.L70
	.half	1
	.byte	95
	.word	0,0
.L377:
	.word	-1,.L70,.L557-.L70,.L558-.L70
	.half	1
	.byte	95
	.word	0,0
.L284:
	.word	0,0
.L311:
	.word	-1,.L70,.L544-.L70,.L325-.L70
	.half	1
	.byte	98
	.word	.L76-.L70,.L141-.L70
	.half	1
	.byte	109
	.word	.L76-.L70,.L545-.L70
	.half	1
	.byte	98
	.word	.L546-.L70,.L547-.L70
	.half	1
	.byte	95
	.word	.L78-.L70,.L136-.L70
	.half	1
	.byte	109
	.word	.L72-.L70,.L156-.L70
	.half	1
	.byte	109
	.word	.L313-.L70,.L10-.L70
	.half	1
	.byte	109
	.word	0,0
.L344:
	.word	-1,.L70,.L78-.L70,.L136-.L70
	.half	1
	.byte	90
	.word	.L72-.L70,.L156-.L70
	.half	1
	.byte	90
	.word	.L554-.L70,.L10-.L70
	.half	1
	.byte	90
	.word	0,0
.L292:
	.word	-1,.L70,.L76-.L70,.L141-.L70
	.half	1
	.byte	88
	.word	.L78-.L70,.L136-.L70
	.half	1
	.byte	88
	.word	.L72-.L70,.L156-.L70
	.half	1
	.byte	88
	.word	.L555-.L70,.L3-.L70
	.half	1
	.byte	88
	.word	0,0
.L259:
	.word	-1,.L70,.L542-.L70,.L544-.L70
	.half	1
	.byte	82
	.word	.L76-.L70,.L141-.L70
	.half	1
	.byte	89
	.word	.L78-.L70,.L136-.L70
	.half	1
	.byte	89
	.word	.L72-.L70,.L156-.L70
	.half	1
	.byte	89
	.word	.L556-.L70,.L255-.L70
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_WaitEvent')
	.sect	'.debug_loc'
.L513:
	.word	0,0
.L527:
	.word	0,0
.L508:
	.word	0,0
.L532:
	.word	0,0
.L530:
	.word	0,0
.L518:
	.word	0,0
.L432:
	.word	0,0
.L511:
	.word	0,0
.L486:
	.word	0,0
.L481:
	.word	0,0
.L454:
	.word	0,0
.L450:
	.word	0,0
.L483:
	.word	0,0
.L428:
	.word	-1,.L86,.L84-.L86,.L151-.L86
	.half	2
	.byte	144,34
	.word	0,.L574-.L86
	.half	2
	.byte	144,34
	.word	0,0
.L512:
	.word	0,0
.L85:
	.word	-1,.L86,0,.L427-.L86
	.half	2
	.byte	138,0
	.word	0,0
.L533:
	.word	-1,.L86,.L550-.L86,.L551-.L86
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L433:
	.word	-1,.L86,.L567-.L86,.L568-.L86
	.half	1
	.byte	95
	.word	0,0
.L507:
	.word	0,0
.L529:
	.word	0,0
.L476:
	.word	0,0
.L524:
	.word	0,0
.L503:
	.word	0,0
.L536:
	.word	0,0
.L522:
	.word	0,0
.L502:
	.word	0,0
.L497:
	.word	0,0
.L492:
	.word	0,0
.L519:
	.word	0,0
.L470:
	.word	0,0
.L441:
	.word	0,0
.L463:
	.word	0,0
.L437:
	.word	0,0
.L459:
	.word	0,0
.L468:
	.word	0,0
.L517:
	.word	0,0
.L526:
	.word	0,0
.L534:
	.word	-1,.L86,.L552-.L86,.L136-.L86
	.half	5
	.byte	144,32,157,32,0
	.word	.L553-.L86,.L136-.L86
	.half	1
	.byte	111
	.word	.L528-.L86,.L531-.L86
	.half	5
	.byte	144,32,157,32,0
	.word	.L72-.L86,.L156-.L86
	.half	1
	.byte	111
	.word	.L528-.L86,.L55-.L86
	.half	1
	.byte	111
	.word	0,0
.L444:
	.word	-1,.L86,.L571-.L86,.L49-.L86
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L465:
	.word	-1,.L86,.L49-.L86,.L457-.L86
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L525:
	.word	-1,.L86,.L581-.L86,.L582-.L86
	.half	1
	.byte	95
	.word	0,0
.L537:
	.word	-1,.L86,.L585-.L86,.L586-.L86
	.half	1
	.byte	95
	.word	0,0
.L471:
	.word	0,0
.L446:
	.word	-1,.L86,.L572-.L86,.L573-.L86
	.half	1
	.byte	98
	.word	.L84-.L86,.L151-.L86
	.half	1
	.byte	98
	.word	.L38-.L86,.L575-.L86
	.half	1
	.byte	98
	.word	0,0
.L466:
	.word	-1,.L86,.L569-.L86,.L570-.L86
	.half	1
	.byte	111
	.word	.L46-.L86,.L467-.L86
	.half	1
	.byte	111
	.word	0,0
.L509:
	.word	-1,.L86,.L578-.L86,.L514-.L86
	.half	1
	.byte	98
	.word	.L76-.L86,.L545-.L86
	.half	1
	.byte	98
	.word	.L76-.L86,.L141-.L86
	.half	1
	.byte	109
	.word	.L579-.L86,.L580-.L86
	.half	1
	.byte	95
	.word	.L78-.L86,.L136-.L86
	.half	1
	.byte	109
	.word	.L72-.L86,.L156-.L86
	.half	1
	.byte	109
	.word	.L510-.L86,.L55-.L86
	.half	1
	.byte	109
	.word	0,0
.L520:
	.word	-1,.L86,.L78-.L86,.L136-.L86
	.half	1
	.byte	89
	.word	.L72-.L86,.L156-.L86
	.half	1
	.byte	89
	.word	.L583-.L86,.L55-.L86
	.half	1
	.byte	89
	.word	0,0
.L477:
	.word	-1,.L86,.L76-.L86,.L141-.L86
	.half	1
	.byte	88
	.word	.L78-.L86,.L136-.L86
	.half	1
	.byte	88
	.word	.L72-.L86,.L156-.L86
	.half	1
	.byte	88
	.word	.L584-.L86,.L427-.L86
	.half	1
	.byte	88
	.word	0,0
.L473:
	.word	-1,.L86,.L474-.L86,.L506-.L86
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L429:
	.word	0,0
.L487:
	.word	-1,.L86,.L576-.L86,.L577-.L86
	.half	2
	.byte	144,33
	.word	0,0
.L488:
	.word	-1,.L86,.L574-.L86,.L506-.L86
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_EventGetLocal')
	.sect	'.debug_loc'
.L251:
	.word	0,0
.L240:
	.word	-1,.L92,0,.L237-.L92
	.half	1
	.byte	101
	.word	0,0
.L91:
	.word	-1,.L92,0,.L237-.L92
	.half	2
	.byte	138,0
	.word	0,0
.L246:
	.word	0,0
.L238:
	.word	-1,.L92,0,.L237-.L92
	.half	1
	.byte	100
	.word	0,0
.L243:
	.word	0,0
.L241:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_EventSetInternal')
	.sect	'.debug_loc'
.L226:
	.word	0,0
.L232:
	.word	0,0
.L217:
	.word	-1,.L90,0,.L215-.L90
	.half	2
	.byte	144,34
	.word	0,0
.L89:
	.word	-1,.L90,0,.L215-.L90
	.half	2
	.byte	138,0
	.word	0,0
.L236:
	.word	-1,.L90,.L220-.L90,.L215-.L90
	.half	1
	.byte	95
	.word	0,0
.L222:
	.word	0,0
.L216:
	.word	-1,.L90,0,.L215-.L90
	.half	1
	.byte	100
	.word	0,0
.L218:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_EventSetLocal')
	.sect	'.debug_loc'
.L179:
	.word	0,0
.L186:
	.word	0,0
.L181:
	.word	0,0
.L162:
	.word	-1,.L88,0,.L61-.L88
	.half	2
	.byte	144,34
	.word	0,0
.L87:
	.word	-1,.L88,0,.L158-.L88
	.half	2
	.byte	138,0
	.word	0,0
.L170:
	.word	0,0
.L212:
	.word	0,0
.L203:
	.word	0,0
.L208:
	.word	0,0
.L201:
	.word	0,0
.L196:
	.word	0,0
.L160:
	.word	-1,.L88,0,.L587-.L88
	.half	1
	.byte	100
	.word	.L167-.L88,.L61-.L88
	.half	1
	.byte	101
	.word	0,0
.L214:
	.word	-1,.L88,.L591-.L88,.L592-.L88
	.half	1
	.byte	95
	.word	0,0
.L164:
	.word	0,0
.L175:
	.word	-1,.L88,.L588-.L88,.L158-.L88
	.half	1
	.byte	88
	.word	0,0
.L165:
	.word	-1,.L88,.L60-.L88,.L158-.L88
	.half	1
	.byte	82
	.word	0,0
.L191:
	.word	-1,.L88,.L589-.L88,.L590-.L88
	.half	2
	.byte	144,32
	.word	0,0
.L192:
	.word	-1,.L88,.L184-.L88,.L61-.L88
	.half	2
	.byte	144,33
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L772:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Os_Api_SetEvent')
	.sect	'.debug_frame'
	.word	12
	.word	.L772,.L70,.L255-.L70
	.sdecl	'.debug_frame',debug,cluster('Os_Api_ClearEvent')
	.sect	'.debug_frame'
	.word	24
	.word	.L772,.L80,.L378-.L80
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Os_Api_GetEvent')
	.sect	'.debug_frame'
	.word	12
	.word	.L772,.L82,.L408-.L82
	.sdecl	'.debug_frame',debug,cluster('Os_Api_WaitEvent')
	.sect	'.debug_frame'
	.word	12
	.word	.L772,.L86,.L427-.L86
	.sdecl	'.debug_frame',debug,cluster('Os_EventSetLocal')
	.sect	'.debug_frame'
	.word	12
	.word	.L772,.L88,.L158-.L88
	.sdecl	'.debug_frame',debug,cluster('Os_EventSetInternal')
	.sect	'.debug_frame'
	.word	12
	.word	.L772,.L90,.L215-.L90
	.sdecl	'.debug_frame',debug,cluster('Os_EventGetLocal')
	.sect	'.debug_frame'
	.word	20
	.word	.L772,.L92,.L237-.L92
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L773:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L773,.L72,.L156-.L72
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L773,.L74,.L146-.L74
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L773,.L76,.L141-.L76
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L773,.L78,.L136-.L78
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L773,.L84,.L151-.L84
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\Os\Implementation\Os_Event.c	   876  
; ..\component\Os\Implementation\Os_Event.c	   877  
; ..\component\Os\Implementation\Os_Event.c	   878  #define OS_STOP_SEC_CODE
; ..\component\Os\Implementation\Os_Event.c	   879  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Event.c	   880  
; ..\component\Os\Implementation\Os_Event.c	   881  
; ..\component\Os\Implementation\Os_Event.c	   882  /* module specific MISRA deviations:
; ..\component\Os\Implementation\Os_Event.c	   883   */
; ..\component\Os\Implementation\Os_Event.c	   884  
; ..\component\Os\Implementation\Os_Event.c	   885  
; ..\component\Os\Implementation\Os_Event.c	   886  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\Os\Implementation\Os_Event.c	   887  
; ..\component\Os\Implementation\Os_Event.c	   888  \ID SBSW_OS_EV_THREADGETOWNERAPPLICATION_001
; ..\component\Os\Implementation\Os_Event.c	   889   \DESCRIPTION    Os_ThreadGetOwnerApplication is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   890   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   891  
; ..\component\Os\Implementation\Os_Event.c	   892  \ID SBSW_OS_EV_THREADGETOWNERAPPLICATION_002
; ..\component\Os\Implementation\Os_Event.c	   893   \DESCRIPTION    Os_ThreadGetOwnerApplication is called with the return value of Os_TaskGetThread.
; ..\component\Os\Implementation\Os_Event.c	   894   \COUNTERMEASURE \N [CM_OS_TASKGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   895  
; ..\component\Os\Implementation\Os_Event.c	   896  \ID SBSW_OS_EV_TASKGETACCESSINGAPPLICATIONS_001
; ..\component\Os\Implementation\Os_Event.c	   897   \DESCRIPTION    Os_TaskGetAccessingApplications is called with the return value of Os_TaskId2Task.
; ..\component\Os\Implementation\Os_Event.c	   898   \COUNTERMEASURE \M [CM_OS_TASKID2TASK_M]
; ..\component\Os\Implementation\Os_Event.c	   899  
; ..\component\Os\Implementation\Os_Event.c	   900  \ID SBSW_OS_EV_THREADCHECKCALLCONTEXT_001
; ..\component\Os\Implementation\Os_Event.c	   901   \DESCRIPTION    Os_ThreadCheckCallContext is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   902   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   903  
; ..\component\Os\Implementation\Os_Event.c	   904  \ID SBSW_OS_EV_THREADCHECKAREINTERRUPTSENABLED_001
; ..\component\Os\Implementation\Os_Event.c	   905   \DESCRIPTION    Os_ThreadCheckAreInterruptsEnabled is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   906   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   907  
; ..\component\Os\Implementation\Os_Event.c	   908  \ID SBSW_OS_EV_TASKCHECKISEXTENDEDTASK_001
; ..\component\Os\Implementation\Os_Event.c	   909   \DESCRIPTION    Os_TaskCheckIsExtendedTask is called with the return value of Os_TaskId2Task.
; ..\component\Os\Implementation\Os_Event.c	   910   \COUNTERMEASURE \M [CM_OS_TASKID2TASK_M]
; ..\component\Os\Implementation\Os_Event.c	   911  
; ..\component\Os\Implementation\Os_Event.c	   912  \ID SBSW_OS_EV_TASKCHECKISEXTENDEDTASK_002
; ..\component\Os\Implementation\Os_Event.c	   913   \DESCRIPTION    Os_TaskCheckIsExtendedTask is called with the return value of Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Event.c	   914   \COUNTERMEASURE \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Event.c	   915  
; ..\component\Os\Implementation\Os_Event.c	   916  \ID SBSW_OS_EV_TASKISCORELOCAL_001
; ..\component\Os\Implementation\Os_Event.c	   917   \DESCRIPTION    Os_TaskIsCoreLocal is called with the return value of Os_TaskId2Task.
; ..\component\Os\Implementation\Os_Event.c	   918   \COUNTERMEASURE \M [CM_OS_TASKID2TASK_M]
; ..\component\Os\Implementation\Os_Event.c	   919  
; ..\component\Os\Implementation\Os_Event.c	   920  \ID SBSW_OS_EV_APPCHECKISACCESSIBLE_001
; ..\component\Os\Implementation\Os_Event.c	   921   \DESCRIPTION    Os_AppCheckIsAccessible is called with the return value of Os_ThreadGetOwnerApplication.
; ..\component\Os\Implementation\Os_Event.c	   922   \COUNTERMEASURE \M [CM_OS_THREADGETOWNERAPPLICATION_M]
; ..\component\Os\Implementation\Os_Event.c	   923  
; ..\component\Os\Implementation\Os_Event.c	   924  \ID SBSW_OS_EV_THREADGETCORE_001
; ..\component\Os\Implementation\Os_Event.c	   925   \DESCRIPTION    Os_ThreadGetCore is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   926   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   927  
; ..\component\Os\Implementation\Os_Event.c	   928  \ID SBSW_OS_EV_THREADGETCORE_002
; ..\component\Os\Implementation\Os_Event.c	   929   \DESCRIPTION    Os_ThreadGetCore is called with the return value of Os_TaskGetThread.
; ..\component\Os\Implementation\Os_Event.c	   930   \COUNTERMEASURE \N [CM_OS_TASKGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   931  
; ..\component\Os\Implementation\Os_Event.c	   932  \ID SBSW_OS_EV_THREADISTASK_001
; ..\component\Os\Implementation\Os_Event.c	   933   \DESCRIPTION    Os_ThreadIsTask is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   934   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   935  
; ..\component\Os\Implementation\Os_Event.c	   936  \ID SBSW_OS_EV_COREGETSCHEDULER_001
; ..\component\Os\Implementation\Os_Event.c	   937   \DESCRIPTION    Os_CoreGetScheduler is called with the return value of Os_ThreadGetCore.
; ..\component\Os\Implementation\Os_Event.c	   938   \COUNTERMEASURE \M [CM_OS_THREADGETCORE_M]
; ..\component\Os\Implementation\Os_Event.c	   939  
; ..\component\Os\Implementation\Os_Event.c	   940  \ID SBSW_OS_EV_SCHEDULERTASKSWITCHISNEEDED_001
; ..\component\Os\Implementation\Os_Event.c	   941   \DESCRIPTION    Os_SchedulerTaskSwitchIsNeeded is called with the return value of Os_CoreGetScheduler.
; ..\component\Os\Implementation\Os_Event.c	   942   \COUNTERMEASURE \M [CM_OS_COREGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Event.c	   943  
; ..\component\Os\Implementation\Os_Event.c	   944  \ID SBSW_OS_EV_TASKSWITCH_001
; ..\component\Os\Implementation\Os_Event.c	   945   \DESCRIPTION    Os_TaskSwitch is called with the return values of Os_CoreGetScheduler and Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   946                   The return value of Os_CoreGetThread is always valid (ensured by precondition).
; ..\component\Os\Implementation\Os_Event.c	   947   \COUNTERMEASURE \M [CM_OS_COREGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Event.c	   948  
; ..\component\Os\Implementation\Os_Event.c	   949  \ID SBSW_OS_EV_TASKGETCORE_001
; ..\component\Os\Implementation\Os_Event.c	   950   \DESCRIPTION    Os_TaskGetCore is called with the return value of Os_TaskId2Task.
; ..\component\Os\Implementation\Os_Event.c	   951   \COUNTERMEASURE \M [CM_OS_TASKID2TASK_M]
; ..\component\Os\Implementation\Os_Event.c	   952  
; ..\component\Os\Implementation\Os_Event.c	   953  \ID SBSW_OS_EV_XSIGSEND_001
; ..\component\Os\Implementation\Os_Event.c	   954   \DESCRIPTION    A cross core send function is called, with the return values of Os_TaskGetCore() and
; ..\component\Os\Implementation\Os_Event.c	   955                   Os_CoreGetThread(). Correctness of Os_CoreGetThread is ensured by preconditions.
; ..\component\Os\Implementation\Os_Event.c	   956   \COUNTERMEASURE \M [CM_OS_TASKGETCORE_M]
; ..\component\Os\Implementation\Os_Event.c	   957  
; ..\component\Os\Implementation\Os_Event.c	   958  \ID SBSW_OS_EV_EVENTSETLOCAL_001
; ..\component\Os\Implementation\Os_Event.c	   959   \DESCRIPTION    Os_EventSetLocal is called with the return value of Os_TaskId2Task.
; ..\component\Os\Implementation\Os_Event.c	   960   \COUNTERMEASURE \M [CM_OS_TASKID2TASK_M]
; ..\component\Os\Implementation\Os_Event.c	   961  
; ..\component\Os\Implementation\Os_Event.c	   962  \ID SBSW_OS_EV_TASKTHREAD2TASK_001
; ..\component\Os\Implementation\Os_Event.c	   963   \DESCRIPTION    Os_TaskThread2Task is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   964   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   965  
; ..\component\Os\Implementation\Os_Event.c	   966  \ID SBSW_OS_EV_TASKGETEVENT_001
; ..\component\Os\Implementation\Os_Event.c	   967   \DESCRIPTION    Os_TaskGetEvent is called with the return value of Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Event.c	   968   \COUNTERMEASURE \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Event.c	   969  
; ..\component\Os\Implementation\Os_Event.c	   970  \ID SBSW_OS_EV_EVENTTRIGGERCLEAR_001
; ..\component\Os\Implementation\Os_Event.c	   971   \DESCRIPTION    Os_EventTriggerClear is called with the return value of Os_TaskGetEvent.
; ..\component\Os\Implementation\Os_Event.c	   972   \COUNTERMEASURE \M [CM_OS_TASKGETEVENT_M]
; ..\component\Os\Implementation\Os_Event.c	   973  
; ..\component\Os\Implementation\Os_Event.c	   974  \ID SBSW_OS_EV_EVENTTRIGGERGET_001
; ..\component\Os\Implementation\Os_Event.c	   975   \DESCRIPTION    Os_EventTriggerGet is called with the return value of Os_TaskGetEvent.
; ..\component\Os\Implementation\Os_Event.c	   976   \COUNTERMEASURE \M [CM_OS_TASKGETEVENT_M]
; ..\component\Os\Implementation\Os_Event.c	   977  
; ..\component\Os\Implementation\Os_Event.c	   978  \ID SBSW_OS_EV_THREADGETCURRENTAPPLICATION_001
; ..\component\Os\Implementation\Os_Event.c	   979   \DESCRIPTION    Os_ThreadGetCurrentApplication is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   980   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   981  
; ..\component\Os\Implementation\Os_Event.c	   982  \ID SBSW_OS_EV_THREADCHECKRESOURCESRELEASED_001
; ..\component\Os\Implementation\Os_Event.c	   983   \DESCRIPTION    Os_ThreadCheckResourcesReleased is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   984   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   985  
; ..\component\Os\Implementation\Os_Event.c	   986  \ID SBSW_OS_EV_THREADCHECKSPINLOCKSRELEASED_001
; ..\component\Os\Implementation\Os_Event.c	   987   \DESCRIPTION    Os_ThreadCheckSpinlocksReleased is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Event.c	   988   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	   989  
; ..\component\Os\Implementation\Os_Event.c	   990  \ID SBSW_OS_EV_EVENTWAITSET_001
; ..\component\Os\Implementation\Os_Event.c	   991   \DESCRIPTION    Os_EventWaitSet is called with the return value of Os_TaskGetEvent.
; ..\component\Os\Implementation\Os_Event.c	   992   \COUNTERMEASURE \M [CM_OS_TASKGETEVENT_M]
; ..\component\Os\Implementation\Os_Event.c	   993  
; ..\component\Os\Implementation\Os_Event.c	   994  \ID SBSW_OS_EV_EVENTGETLOCAL_001
; ..\component\Os\Implementation\Os_Event.c	   995   \DESCRIPTION    Os_EventGetLocal is called with the return value of Os_TaskId2Task.
; ..\component\Os\Implementation\Os_Event.c	   996   \COUNTERMEASURE \M [CM_OS_TASKID2TASK_M]
; ..\component\Os\Implementation\Os_Event.c	   997  
; ..\component\Os\Implementation\Os_Event.c	   998  \ID SBSW_OS_EV_EVENTWAITEVENTTRIGGERED_001
; ..\component\Os\Implementation\Os_Event.c	   999   \DESCRIPTION    Os_EventWaitEventTriggered is called with the return value of Os_TaskGetEvent.
; ..\component\Os\Implementation\Os_Event.c	  1000   \COUNTERMEASURE \M [CM_OS_TASKGETEVENT_M]
; ..\component\Os\Implementation\Os_Event.c	  1001  
; ..\component\Os\Implementation\Os_Event.c	  1002  \ID SBSW_OS_EV_TASKWAIT_001
; ..\component\Os\Implementation\Os_Event.c	  1003   \DESCRIPTION    Os_TaskWait is called with the return value of Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Event.c	  1004   \COUNTERMEASURE \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Event.c	  1005  
; ..\component\Os\Implementation\Os_Event.c	  1006  \ID SBSW_OS_EV_EVENTTRIGGERSET_001
; ..\component\Os\Implementation\Os_Event.c	  1007   \DESCRIPTION    Os_EventTriggerSet is called with the return value of Os_TaskGetEvent.
; ..\component\Os\Implementation\Os_Event.c	  1008   \COUNTERMEASURE \M [CM_OS_TASKGETEVENT_M]
; ..\component\Os\Implementation\Os_Event.c	  1009  
; ..\component\Os\Implementation\Os_Event.c	  1010  \ID SBSW_OS_EV_THREADGETTRACE_001
; ..\component\Os\Implementation\Os_Event.c	  1011   \DESCRIPTION    Os_ThreadGetTrace is called with the return value of Os_TaskGetThread.
; ..\component\Os\Implementation\Os_Event.c	  1012   \COUNTERMEASURE \N [CM_OS_TASKGETTHREAD_N]
; ..\component\Os\Implementation\Os_Event.c	  1013  
; ..\component\Os\Implementation\Os_Event.c	  1014  \ID SBSW_OS_EV_THREADSETTRACE_001
; ..\component\Os\Implementation\Os_Event.c	  1015   \DESCRIPTION    Os_TraceTaskSetEvent is called with the return value of Os_ThreadGetTrace.
; ..\component\Os\Implementation\Os_Event.c	  1016   \COUNTERMEASURE \M [CM_OS_THREADGETTRACE_M]
; ..\component\Os\Implementation\Os_Event.c	  1017  
; ..\component\Os\Implementation\Os_Event.c	  1018  \ID SBSW_OS_EV_THREADSETTRACE_002
; ..\component\Os\Implementation\Os_Event.c	  1019   \DESCRIPTION    Os_TraceTaskWaitEventNoWait is called with the return value of Os_ThreadGetTrace.
; ..\component\Os\Implementation\Os_Event.c	  1020   \COUNTERMEASURE \M [CM_OS_THREADGETTRACE_M]
; ..\component\Os\Implementation\Os_Event.c	  1021  
; ..\component\Os\Implementation\Os_Event.c	  1022  \ID SBSW_OS_EV_APPCHECKACCESS_001
; ..\component\Os\Implementation\Os_Event.c	  1023   \DESCRIPTION    Os_AppCheckAccess is called with the return value of Os_ThreadGetCurrentApplication.
; ..\component\Os\Implementation\Os_Event.c	  1024   \COUNTERMEASURE \N [CM_OS_THREADGETCURRENTAPPLICATION_N]
; ..\component\Os\Implementation\Os_Event.c	  1025  
; ..\component\Os\Implementation\Os_Event.c	  1026  SBSW_JUSTIFICATION_END */
; ..\component\Os\Implementation\Os_Event.c	  1027  
; ..\component\Os\Implementation\Os_Event.c	  1028  
; ..\component\Os\Implementation\Os_Event.c	  1029  /*!
; ..\component\Os\Implementation\Os_Event.c	  1030   * \}
; ..\component\Os\Implementation\Os_Event.c	  1031   */
; ..\component\Os\Implementation\Os_Event.c	  1032  
; ..\component\Os\Implementation\Os_Event.c	  1033  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Event.c	  1034   *  END OF FILE: Os_Event.c
; ..\component\Os\Implementation\Os_Event.c	  1035   **********************************************************************************************************************/

	; Module end
