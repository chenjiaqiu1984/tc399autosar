	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\Os\\Implementation\\.Os_Interrupt.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\Os\\Implementation\\Os_Interrupt.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\Os\\Implementation\\Os_Interrupt.src ..\\component\\Os\\Implementation\\Os_Interrupt.c"
	.compiler_name		"ctc"
	;source	'..\\component\\Os\\Implementation\\Os_Interrupt.c'

	
$TC162
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_InterruptInit')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_InterruptInit

; ..\component\Os\Implementation\Os_Interrupt.c	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.c	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.c	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                                  All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.c	     6   *
; ..\component\Os\Implementation\Os_Interrupt.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.c	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.c	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.c	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.c	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.c	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.c	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.c	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.c	    17   *
; ..\component\Os\Implementation\Os_Interrupt.c	    18   * \file
; ..\component\Os\Implementation\Os_Interrupt.c	    19   * \brief       Implementation of the interrupt module.
; ..\component\Os\Implementation\Os_Interrupt.c	    20   *
; ..\component\Os\Implementation\Os_Interrupt.c	    21   *
; ..\component\Os\Implementation\Os_Interrupt.c	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.c	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.c	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.c	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    28  
; ..\component\Os\Implementation\Os_Interrupt.c	    29                                                                                                                          /* PRQA S 0777, 0779, 0828  EOF */ /* MD_MSR_Rule5.1, MD_MSR_Rule5.2, MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.c	    30  
; ..\component\Os\Implementation\Os_Interrupt.c	    31  
; ..\component\Os\Implementation\Os_Interrupt.c	    32  #define OS_INTERRUPT_SOURCE
; ..\component\Os\Implementation\Os_Interrupt.c	    33  
; ..\component\Os\Implementation\Os_Interrupt.c	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.c	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.c	    38  #include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    39  
; ..\component\Os\Implementation\Os_Interrupt.c	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Interrupt.c	    41  #include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    42  
; ..\component\Os\Implementation\Os_Interrupt.c	    43  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.c	    44  #include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    45  #include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    46  #include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    47  #include "Os_Core.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    48  #include "Os_Interrupt_Cfg.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    49  
; ..\component\Os\Implementation\Os_Interrupt.c	    50  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.c	    51  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    52  #include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Interrupt.c	    53  
; ..\component\Os\Implementation\Os_Interrupt.c	    54  
; ..\component\Os\Implementation\Os_Interrupt.c	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    56   *  LOCAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.c	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    58  
; ..\component\Os\Implementation\Os_Interrupt.c	    59  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    60   *  LOCAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.c	    61   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    62  
; ..\component\Os\Implementation\Os_Interrupt.c	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    64   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.c	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    66  
; ..\component\Os\Implementation\Os_Interrupt.c	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    68   *  LOCAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.c	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    70  
; ..\component\Os\Implementation\Os_Interrupt.c	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    72   *  GLOBAL DATA
; ..\component\Os\Implementation\Os_Interrupt.c	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    74  
; ..\component\Os\Implementation\Os_Interrupt.c	    75  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    76   *  LOCAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.c	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    78  
; ..\component\Os\Implementation\Os_Interrupt.c	    79  #define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.c	    80  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.c	    81  
; ..\component\Os\Implementation\Os_Interrupt.c	    82  
; ..\component\Os\Implementation\Os_Interrupt.c	    83  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	    84   *  Os_InterruptCheckNotInCriticalSection()
; ..\component\Os\Implementation\Os_Interrupt.c	    85   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	    86  /*! \brief        Returns whether the caller is in a critical section (OS_CHECK_FAILED) or not (Not OS_CHECK_FAILED).
; ..\component\Os\Implementation\Os_Interrupt.c	    87   *  \details      --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	    88   *
; ..\component\Os\Implementation\Os_Interrupt.c	    89   *  \param[in]    InterruptState   The interrupt state to check. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	    90   *
; ..\component\Os\Implementation\Os_Interrupt.c	    91   *  \retval       Not OS_CHECK_FAILED   Not in critical section.
; ..\component\Os\Implementation\Os_Interrupt.c	    92   *  \retval       OS_CHECK_FAILED       In critical section.
; ..\component\Os\Implementation\Os_Interrupt.c	    93   *
; ..\component\Os\Implementation\Os_Interrupt.c	    94   *  \context      OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	    95   *
; ..\component\Os\Implementation\Os_Interrupt.c	    96   *  \reentrant    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	    97   *  \synchronous  TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	    98   *
; ..\component\Os\Implementation\Os_Interrupt.c	    99   *  \pre          -
; ..\component\Os\Implementation\Os_Interrupt.c	   100   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   101  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   102  Os_InterruptCheckNotInCriticalSection,
; ..\component\Os\Implementation\Os_Interrupt.c	   103  (
; ..\component\Os\Implementation\Os_Interrupt.c	   104    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   105  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   106  
; ..\component\Os\Implementation\Os_Interrupt.c	   107  
; ..\component\Os\Implementation\Os_Interrupt.c	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   109   *  Os_InterruptDisableAllEnter()
; ..\component\Os\Implementation\Os_Interrupt.c	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   111  /*! \brief          Sets the in "DisableAll" flag.
; ..\component\Os\Implementation\Os_Interrupt.c	   112   *  \details        --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   113   *
; ..\component\Os\Implementation\Os_Interrupt.c	   114   *  \param[in,out]  InterruptState   The interrupt state to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   115   *
; ..\component\Os\Implementation\Os_Interrupt.c	   116   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   117   *
; ..\component\Os\Implementation\Os_Interrupt.c	   118   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   119   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   120   *
; ..\component\Os\Implementation\Os_Interrupt.c	   121   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Interrupt.c	   122   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   123  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   124  Os_InterruptDisableAllEnter,
; ..\component\Os\Implementation\Os_Interrupt.c	   125  (
; ..\component\Os\Implementation\Os_Interrupt.c	   126    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   127  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   128  
; ..\component\Os\Implementation\Os_Interrupt.c	   129  
; ..\component\Os\Implementation\Os_Interrupt.c	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   131   *  Os_InterruptDisableAllExit()
; ..\component\Os\Implementation\Os_Interrupt.c	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   133  /*! \brief          Clears the in "DisableAll" flag.
; ..\component\Os\Implementation\Os_Interrupt.c	   134   *  \details        --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   135   *
; ..\component\Os\Implementation\Os_Interrupt.c	   136   *  \param[in,out]  InterruptState   The interrupt state to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   137   *
; ..\component\Os\Implementation\Os_Interrupt.c	   138   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   139   *
; ..\component\Os\Implementation\Os_Interrupt.c	   140   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   141   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   142   *
; ..\component\Os\Implementation\Os_Interrupt.c	   143   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Interrupt.c	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   145  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   146  Os_InterruptDisableAllExit,
; ..\component\Os\Implementation\Os_Interrupt.c	   147  (
; ..\component\Os\Implementation\Os_Interrupt.c	   148    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   149  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   150  
; ..\component\Os\Implementation\Os_Interrupt.c	   151  
; ..\component\Os\Implementation\Os_Interrupt.c	   152  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   153   *  Os_InterruptCheckInDisableAll()
; ..\component\Os\Implementation\Os_Interrupt.c	   154   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   155  /*! \brief          Returns whether the given interrupt state object is not in a disable-all critical section
; ..\component\Os\Implementation\Os_Interrupt.c	   156   *                  (OS_CHECK_FAILED) or (Not OS_CHECK_FAILED).
; ..\component\Os\Implementation\Os_Interrupt.c	   157   *  \details        --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   158   *
; ..\component\Os\Implementation\Os_Interrupt.c	   159   *  \param[in]      InterruptState   The interrupt state to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   160   *
; ..\component\Os\Implementation\Os_Interrupt.c	   161   *  \retval         Not OS_CHECK_FAILED   In disable all.
; ..\component\Os\Implementation\Os_Interrupt.c	   162   *  \retval         OS_CHECK_FAILED       Not in disable all.
; ..\component\Os\Implementation\Os_Interrupt.c	   163   *
; ..\component\Os\Implementation\Os_Interrupt.c	   164   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   165   *
; ..\component\Os\Implementation\Os_Interrupt.c	   166   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   167   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   168   *
; ..\component\Os\Implementation\Os_Interrupt.c	   169   *  \pre            -
; ..\component\Os\Implementation\Os_Interrupt.c	   170   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   171  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   172  Os_InterruptCheckInDisableAll,
; ..\component\Os\Implementation\Os_Interrupt.c	   173  (
; ..\component\Os\Implementation\Os_Interrupt.c	   174    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   175  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   176  
; ..\component\Os\Implementation\Os_Interrupt.c	   177  
; ..\component\Os\Implementation\Os_Interrupt.c	   178  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   179   *  Os_InterruptCheckNotInDisableAll()
; ..\component\Os\Implementation\Os_Interrupt.c	   180   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   181  /*! \brief          Returns whether the given interrupt state object is in a disable-all critical section
; ..\component\Os\Implementation\Os_Interrupt.c	   182   *                  (OS_CHECK_FAILED) or (Not OS_CHECK_FAILED).
; ..\component\Os\Implementation\Os_Interrupt.c	   183   *  \details        --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   184   *
; ..\component\Os\Implementation\Os_Interrupt.c	   185   *  \param[in]      InterruptState   The interrupt state to modify. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   186   *
; ..\component\Os\Implementation\Os_Interrupt.c	   187   *  \retval         Not OS_CHECK_FAILED   Not in disable all.
; ..\component\Os\Implementation\Os_Interrupt.c	   188   *  \retval         OS_CHECK_FAILED       In disable all.
; ..\component\Os\Implementation\Os_Interrupt.c	   189   *
; ..\component\Os\Implementation\Os_Interrupt.c	   190   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   191   *
; ..\component\Os\Implementation\Os_Interrupt.c	   192   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   193   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   194   *
; ..\component\Os\Implementation\Os_Interrupt.c	   195   *  \pre            -
; ..\component\Os\Implementation\Os_Interrupt.c	   196   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   197  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   198  Os_InterruptCheckNotInDisableAll,
; ..\component\Os\Implementation\Os_Interrupt.c	   199  (
; ..\component\Os\Implementation\Os_Interrupt.c	   200    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   201  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   202  
; ..\component\Os\Implementation\Os_Interrupt.c	   203  
; ..\component\Os\Implementation\Os_Interrupt.c	   204  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   205   *  Os_InterruptCheckNoOverflow()
; ..\component\Os\Implementation\Os_Interrupt.c	   206   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   207  /*! \brief        Returns whether the given nesting counter is greater zero (Not OS_CHECK_FAILED) or
; ..\component\Os\Implementation\Os_Interrupt.c	   208   *                not (OS_CHECK_FAILED).
; ..\component\Os\Implementation\Os_Interrupt.c	   209   *  \details      --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   210   *
; ..\component\Os\Implementation\Os_Interrupt.c	   211   *  \param[in]    InterruptState   The interrupt state to check.
; ..\component\Os\Implementation\Os_Interrupt.c	   212   *
; ..\component\Os\Implementation\Os_Interrupt.c	   213   *  \retval       Not OS_CHECK_FAILED   Greater zero.
; ..\component\Os\Implementation\Os_Interrupt.c	   214   *  \retval       OS_CHECK_FAILED       zero.
; ..\component\Os\Implementation\Os_Interrupt.c	   215   *
; ..\component\Os\Implementation\Os_Interrupt.c	   216   *  \context      OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   217   *
; ..\component\Os\Implementation\Os_Interrupt.c	   218   *  \reentrant    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   219   *  \synchronous  TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   220   *
; ..\component\Os\Implementation\Os_Interrupt.c	   221   *  \pre          -
; ..\component\Os\Implementation\Os_Interrupt.c	   222   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   223  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   224  Os_InterruptCheckNoOverflow,
; ..\component\Os\Implementation\Os_Interrupt.c	   225  (
; ..\component\Os\Implementation\Os_Interrupt.c	   226    Os_IntApiCntType Counter
; ..\component\Os\Implementation\Os_Interrupt.c	   227  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   228  
; ..\component\Os\Implementation\Os_Interrupt.c	   229  
; ..\component\Os\Implementation\Os_Interrupt.c	   230  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   231   *  Os_InterruptTakeSnapshot()
; ..\component\Os\Implementation\Os_Interrupt.c	   232   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   233  /*! \brief          Takes a snapshot of the given counter, if service protection is enabled.
; ..\component\Os\Implementation\Os_Interrupt.c	   234   *  \details        --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   235   *
; ..\component\Os\Implementation\Os_Interrupt.c	   236   *  \param[in,out]  Snapshot  Snapshot where the counter value shall be stored. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   237   *  \param[in]      Counter   Counter value.
; ..\component\Os\Implementation\Os_Interrupt.c	   238   *
; ..\component\Os\Implementation\Os_Interrupt.c	   239   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   240   *
; ..\component\Os\Implementation\Os_Interrupt.c	   241   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   242   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   243   *
; ..\component\Os\Implementation\Os_Interrupt.c	   244   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Interrupt.c	   245   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   246  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   247  Os_InterruptTakeSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   248  (
; ..\component\Os\Implementation\Os_Interrupt.c	   249    P2VAR(Os_IntApiCntType, AUTOMATIC, OS_VAR_NOINIT) Snapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   250    Os_IntApiCntType Counter
; ..\component\Os\Implementation\Os_Interrupt.c	   251  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   252  
; ..\component\Os\Implementation\Os_Interrupt.c	   253  
; ..\component\Os\Implementation\Os_Interrupt.c	   254  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   255   *  Os_InterruptCheckSnapshot()
; ..\component\Os\Implementation\Os_Interrupt.c	   256   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   257  /*! \brief        Returns whether the given snapshot and the counter are identical (Not OS_CHECK_FAILED) or not
; ..\component\Os\Implementation\Os_Interrupt.c	   258   *                (OS_CHECK_FAILED).
; ..\component\Os\Implementation\Os_Interrupt.c	   259   *  \details      --no details--
; ..\component\Os\Implementation\Os_Interrupt.c	   260   *
; ..\component\Os\Implementation\Os_Interrupt.c	   261   *  \param[in]    Snapshot  Previous snapshot of the counter.
; ..\component\Os\Implementation\Os_Interrupt.c	   262   *  \param[in]    Counter   Counter value.
; ..\component\Os\Implementation\Os_Interrupt.c	   263   *
; ..\component\Os\Implementation\Os_Interrupt.c	   264   *  \retval       Not OS_CHECK_FAILED   Identical.
; ..\component\Os\Implementation\Os_Interrupt.c	   265   *  \retval       OS_CHECK_FAILED       Not identical.
; ..\component\Os\Implementation\Os_Interrupt.c	   266   *
; ..\component\Os\Implementation\Os_Interrupt.c	   267   *  \context      OS_INTERNAL
; ..\component\Os\Implementation\Os_Interrupt.c	   268   *
; ..\component\Os\Implementation\Os_Interrupt.c	   269   *  \reentrant    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   270   *  \synchronous  TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   271   *
; ..\component\Os\Implementation\Os_Interrupt.c	   272   *  \pre          Os_InterruptTakeSnapshot() has been called with same parameters previously.
; ..\component\Os\Implementation\Os_Interrupt.c	   273   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   274  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   275  Os_InterruptCheckSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   276  (
; ..\component\Os\Implementation\Os_Interrupt.c	   277    Os_IntApiCntType Snapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   278    Os_IntApiCntType Counter
; ..\component\Os\Implementation\Os_Interrupt.c	   279  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   280  
; ..\component\Os\Implementation\Os_Interrupt.c	   281  
; ..\component\Os\Implementation\Os_Interrupt.c	   282  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   283   *  Os_IntSuspendCat1()
; ..\component\Os\Implementation\Os_Interrupt.c	   284   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   285  /*! \brief          Suspend all ISRs of categories 1 and 2.
; ..\component\Os\Implementation\Os_Interrupt.c	   286   *  \details        Disable core local interrupt delivery of category 1+2 ISRs and return previous state.
; ..\component\Os\Implementation\Os_Interrupt.c	   287   *                  Prevent to change the interrupt level in case that would allow more interrupts to occur.
; ..\component\Os\Implementation\Os_Interrupt.c	   288   *
; ..\component\Os\Implementation\Os_Interrupt.c	   289   *  \param[out]     Cat1State Previous interrupt state information which allows resuming cat1 interrupt handling in HAL.
; ..\component\Os\Implementation\Os_Interrupt.c	   290   *                            Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   291   *
; ..\component\Os\Implementation\Os_Interrupt.c	   292   *  \context        ANY
; ..\component\Os\Implementation\Os_Interrupt.c	   293   *  \reentrant      TRUE for different objects.
; ..\component\Os\Implementation\Os_Interrupt.c	   294   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   295   *
; ..\component\Os\Implementation\Os_Interrupt.c	   296   *  \pre            Supervisor mode
; ..\component\Os\Implementation\Os_Interrupt.c	   297   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   298  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   299  Os_IntSuspendCat1,
; ..\component\Os\Implementation\Os_Interrupt.c	   300  (
; ..\component\Os\Implementation\Os_Interrupt.c	   301    P2VAR(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) Cat1State
; ..\component\Os\Implementation\Os_Interrupt.c	   302  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   303  
; ..\component\Os\Implementation\Os_Interrupt.c	   304  
; ..\component\Os\Implementation\Os_Interrupt.c	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   306   *  Os_IntResumeCat1()
; ..\component\Os\Implementation\Os_Interrupt.c	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   308  /*! \brief          Resume all ISRs of categories 1 and 2.
; ..\component\Os\Implementation\Os_Interrupt.c	   309   *  \details        Enable core local interrupt delivery of category 1+2 ISRs and return previous state.
; ..\component\Os\Implementation\Os_Interrupt.c	   310   *
; ..\component\Os\Implementation\Os_Interrupt.c	   311   *  \param[in]     Cat1State  Interrupt state information retrieved by Os_IntSuspendCat1 which allows resuming
; ..\component\Os\Implementation\Os_Interrupt.c	   312   *                            cat1 interrupt handling in HAL. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   313   *
; ..\component\Os\Implementation\Os_Interrupt.c	   314   *  \context        ANY
; ..\component\Os\Implementation\Os_Interrupt.c	   315   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   316   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   317   *
; ..\component\Os\Implementation\Os_Interrupt.c	   318   *  \pre            Supervisor mode
; ..\component\Os\Implementation\Os_Interrupt.c	   319   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   320  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   321  Os_IntResumeCat1,
; ..\component\Os\Implementation\Os_Interrupt.c	   322  (
; ..\component\Os\Implementation\Os_Interrupt.c	   323    P2CONST(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) Cat1State
; ..\component\Os\Implementation\Os_Interrupt.c	   324  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   325  
; ..\component\Os\Implementation\Os_Interrupt.c	   326  
; ..\component\Os\Implementation\Os_Interrupt.c	   327  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   328   *  Os_IntSuspendCat2()
; ..\component\Os\Implementation\Os_Interrupt.c	   329   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   330  /*! \brief          Suspend all category 2 ISRs.
; ..\component\Os\Implementation\Os_Interrupt.c	   331   *  \details        Disable core local interrupt delivery of category 2 ISRs and return previous state.
; ..\component\Os\Implementation\Os_Interrupt.c	   332   *                  Prevent to change the interrupt level in case that would allow more interrupts to occur.
; ..\component\Os\Implementation\Os_Interrupt.c	   333   *                  If interrupt level switching is not supported, interrupts are disabled globally.
; ..\component\Os\Implementation\Os_Interrupt.c	   334   *
; ..\component\Os\Implementation\Os_Interrupt.c	   335   *  \param[out]     State   Previous interrupt state information which allows resuming cat2 interrupt handling in HAL.
; ..\component\Os\Implementation\Os_Interrupt.c	   336   *                          Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   337   *
; ..\component\Os\Implementation\Os_Interrupt.c	   338   *  \context        ANY
; ..\component\Os\Implementation\Os_Interrupt.c	   339   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   340   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   341   *
; ..\component\Os\Implementation\Os_Interrupt.c	   342   *  \pre            Supervisor mode
; ..\component\Os\Implementation\Os_Interrupt.c	   343   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   344  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   345  Os_IntSuspendCat2,
; ..\component\Os\Implementation\Os_Interrupt.c	   346  (
; ..\component\Os\Implementation\Os_Interrupt.c	   347    P2VAR(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Interrupt.c	   348  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   349  
; ..\component\Os\Implementation\Os_Interrupt.c	   350  
; ..\component\Os\Implementation\Os_Interrupt.c	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   352   *  Os_IntResumeCat2()
; ..\component\Os\Implementation\Os_Interrupt.c	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   354  /*! \brief          Resume all ISRs of category 2.
; ..\component\Os\Implementation\Os_Interrupt.c	   355   *  \details        Enable core local interrupt delivery of category 2 ISRs and return previous state.
; ..\component\Os\Implementation\Os_Interrupt.c	   356   *                  If interrupt level switching is not supported, interrupts are resumed globally.
; ..\component\Os\Implementation\Os_Interrupt.c	   357   *
; ..\component\Os\Implementation\Os_Interrupt.c	   358   *  \param[in]      Cat2State  Interrupt state information retrieved by Os_IntSuspendCat2 which allows resuming
; ..\component\Os\Implementation\Os_Interrupt.c	   359   *                             cat2 interrupt handling in HAL. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Interrupt.c	   360   *
; ..\component\Os\Implementation\Os_Interrupt.c	   361   *  \context        ANY
; ..\component\Os\Implementation\Os_Interrupt.c	   362   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   363   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Interrupt.c	   364   *
; ..\component\Os\Implementation\Os_Interrupt.c	   365   *  \pre            Supervisor mode
; ..\component\Os\Implementation\Os_Interrupt.c	   366   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   367  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   368  Os_IntResumeCat2,
; ..\component\Os\Implementation\Os_Interrupt.c	   369  (
; ..\component\Os\Implementation\Os_Interrupt.c	   370    P2CONST(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) Cat2State
; ..\component\Os\Implementation\Os_Interrupt.c	   371  ));
; ..\component\Os\Implementation\Os_Interrupt.c	   372  
; ..\component\Os\Implementation\Os_Interrupt.c	   373  
; ..\component\Os\Implementation\Os_Interrupt.c	   374  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   375   *  LOCAL FUNCTIONS
; ..\component\Os\Implementation\Os_Interrupt.c	   376   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   378   *  Os_InterruptCheckNotInCriticalSection()
; ..\component\Os\Implementation\Os_Interrupt.c	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   381  Os_InterruptCheckNotInCriticalSection,
; ..\component\Os\Implementation\Os_Interrupt.c	   382  (
; ..\component\Os\Implementation\Os_Interrupt.c	   383    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   384  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   385  {
; ..\component\Os\Implementation\Os_Interrupt.c	   386    return Os_ErrServiceProtectionCheck((Os_StdReturnType)((                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Interrupt.c	   387                                                    (Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |
; ..\component\Os\Implementation\Os_Interrupt.c	   388                                                    InterruptState->Os_IntLockingState.SuspendAllCounter |
; ..\component\Os\Implementation\Os_Interrupt.c	   389                                                    InterruptState->Os_IntLockingState.SuspendOsCounter) == 0u));
; ..\component\Os\Implementation\Os_Interrupt.c	   390  }
; ..\component\Os\Implementation\Os_Interrupt.c	   391  
; ..\component\Os\Implementation\Os_Interrupt.c	   392  
; ..\component\Os\Implementation\Os_Interrupt.c	   393  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   394   *  Os_InterruptDisableAllEnter()
; ..\component\Os\Implementation\Os_Interrupt.c	   395   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   396  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   397  Os_InterruptDisableAllEnter,
; ..\component\Os\Implementation\Os_Interrupt.c	   398  (
; ..\component\Os\Implementation\Os_Interrupt.c	   399    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   400  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   401  {
; ..\component\Os\Implementation\Os_Interrupt.c	   402    if(Os_InterruptIsCriticalSectionTracingEnabled() != 0u)                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Interrupt.c	   403    {
; ..\component\Os\Implementation\Os_Interrupt.c	   404      InterruptState->Os_IntLockingState.InDisableAll = 1;                                                                /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   405    }
; ..\component\Os\Implementation\Os_Interrupt.c	   406  }
; ..\component\Os\Implementation\Os_Interrupt.c	   407  
; ..\component\Os\Implementation\Os_Interrupt.c	   408  
; ..\component\Os\Implementation\Os_Interrupt.c	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   410   *  Os_InterruptDisableAllExit()
; ..\component\Os\Implementation\Os_Interrupt.c	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   413  Os_InterruptDisableAllExit,
; ..\component\Os\Implementation\Os_Interrupt.c	   414  (
; ..\component\Os\Implementation\Os_Interrupt.c	   415    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   416  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   417  {
; ..\component\Os\Implementation\Os_Interrupt.c	   418    if(Os_InterruptIsCriticalSectionTracingEnabled() != 0u)                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Interrupt.c	   419    {
; ..\component\Os\Implementation\Os_Interrupt.c	   420      InterruptState->Os_IntLockingState.InDisableAll = 0;                                                                /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   421    }
; ..\component\Os\Implementation\Os_Interrupt.c	   422  }
; ..\component\Os\Implementation\Os_Interrupt.c	   423  
; ..\component\Os\Implementation\Os_Interrupt.c	   424  
; ..\component\Os\Implementation\Os_Interrupt.c	   425  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   426   *  Os_InterruptCheckInDisableAll()
; ..\component\Os\Implementation\Os_Interrupt.c	   427   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   428  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   429  Os_InterruptCheckInDisableAll,
; ..\component\Os\Implementation\Os_Interrupt.c	   430  (
; ..\component\Os\Implementation\Os_Interrupt.c	   431    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   432  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   433  {
; ..\component\Os\Implementation\Os_Interrupt.c	   434    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll == 1u));       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Interrupt.c	   435  }
; ..\component\Os\Implementation\Os_Interrupt.c	   436  
; ..\component\Os\Implementation\Os_Interrupt.c	   437  
; ..\component\Os\Implementation\Os_Interrupt.c	   438  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   439   *  Os_InterruptCheckNotInDisableAll()
; ..\component\Os\Implementation\Os_Interrupt.c	   440   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   442  Os_InterruptCheckNotInDisableAll,
; ..\component\Os\Implementation\Os_Interrupt.c	   443  (
; ..\component\Os\Implementation\Os_Interrupt.c	   444    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.c	   445  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   446  {
; ..\component\Os\Implementation\Os_Interrupt.c	   447    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll == 0u));       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Interrupt.c	   448  }
; ..\component\Os\Implementation\Os_Interrupt.c	   449  
; ..\component\Os\Implementation\Os_Interrupt.c	   450  
; ..\component\Os\Implementation\Os_Interrupt.c	   451  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   452   *  Os_InterruptCheckNoOverflow()
; ..\component\Os\Implementation\Os_Interrupt.c	   453   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   454  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   455  Os_InterruptCheckNoOverflow,
; ..\component\Os\Implementation\Os_Interrupt.c	   456  (
; ..\component\Os\Implementation\Os_Interrupt.c	   457    Os_IntApiCntType Counter
; ..\component\Os\Implementation\Os_Interrupt.c	   458  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   459  {
; ..\component\Os\Implementation\Os_Interrupt.c	   460    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Counter > 0u));                                                /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Interrupt.c	   461  }
; ..\component\Os\Implementation\Os_Interrupt.c	   462  
; ..\component\Os\Implementation\Os_Interrupt.c	   463  
; ..\component\Os\Implementation\Os_Interrupt.c	   464  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   465   *  Os_InterruptTakeSnapshot()
; ..\component\Os\Implementation\Os_Interrupt.c	   466   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   467  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   468  Os_InterruptTakeSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   469  (
; ..\component\Os\Implementation\Os_Interrupt.c	   470    P2VAR(Os_IntApiCntType, AUTOMATIC, OS_VAR_NOINIT) Snapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   471    Os_IntApiCntType Counter
; ..\component\Os\Implementation\Os_Interrupt.c	   472  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   473  {
; ..\component\Os\Implementation\Os_Interrupt.c	   474    *Snapshot = Counter;                                                                                                  /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   475  }
; ..\component\Os\Implementation\Os_Interrupt.c	   476  
; ..\component\Os\Implementation\Os_Interrupt.c	   477  
; ..\component\Os\Implementation\Os_Interrupt.c	   478  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   479   *  Os_InterruptCheckSnapshot()
; ..\component\Os\Implementation\Os_Interrupt.c	   480   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   481  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   482  Os_InterruptCheckSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   483  (
; ..\component\Os\Implementation\Os_Interrupt.c	   484    Os_IntApiCntType Snapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   485    Os_IntApiCntType Counter
; ..\component\Os\Implementation\Os_Interrupt.c	   486  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   487  {
; ..\component\Os\Implementation\Os_Interrupt.c	   488    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Snapshot == Counter));                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Interrupt.c	   489  }
; ..\component\Os\Implementation\Os_Interrupt.c	   490  
; ..\component\Os\Implementation\Os_Interrupt.c	   491  
; ..\component\Os\Implementation\Os_Interrupt.c	   492  
; ..\component\Os\Implementation\Os_Interrupt.c	   493  
; ..\component\Os\Implementation\Os_Interrupt.c	   494  
; ..\component\Os\Implementation\Os_Interrupt.c	   495  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   496   *  Os_IntSuspendCat1()
; ..\component\Os\Implementation\Os_Interrupt.c	   497   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   498  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   499   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   500   *
; ..\component\Os\Implementation\Os_Interrupt.c	   501   *
; ..\component\Os\Implementation\Os_Interrupt.c	   502   *
; ..\component\Os\Implementation\Os_Interrupt.c	   503   *
; ..\component\Os\Implementation\Os_Interrupt.c	   504   */
; ..\component\Os\Implementation\Os_Interrupt.c	   505  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   506  Os_IntSuspendCat1,
; ..\component\Os\Implementation\Os_Interrupt.c	   507  (
; ..\component\Os\Implementation\Os_Interrupt.c	   508    P2VAR(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) Cat1State
; ..\component\Os\Implementation\Os_Interrupt.c	   509  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   510  {
; ..\component\Os\Implementation\Os_Interrupt.c	   511    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.c	   512    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.c	   513    {
; ..\component\Os\Implementation\Os_Interrupt.c	   514      /* #20 Fetch current state and disable up category 1 ISRs if required. */
; ..\component\Os\Implementation\Os_Interrupt.c	   515      Os_Hal_IntLevelType cat1DisableLevel;
; ..\component\Os\Implementation\Os_Interrupt.c	   516      Os_Hal_IntLevelType levelState;
; ..\component\Os\Implementation\Os_Interrupt.c	   517  
; ..\component\Os\Implementation\Os_Interrupt.c	   518      Os_Hal_IntGetCat1LockLevel(&cat1DisableLevel);                                                                      /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   519      Os_Hal_IntGetLevel(&levelState);                                                                                    /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   520  
; ..\component\Os\Implementation\Os_Interrupt.c	   521      if(Os_Hal_IntLevelIsGt(&cat1DisableLevel, &levelState) != 0u)                                                       /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   522      {
; ..\component\Os\Implementation\Os_Interrupt.c	   523        Os_Hal_IntSetLevel(&cat1DisableLevel);                                                                            /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   524      }
; ..\component\Os\Implementation\Os_Interrupt.c	   525      Cat1State->Level = levelState;                                                                                      /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   526    }
; ..\component\Os\Implementation\Os_Interrupt.c	   527    /* #30 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.c	   528    else
; ..\component\Os\Implementation\Os_Interrupt.c	   529    {
; ..\component\Os\Implementation\Os_Interrupt.c	   530      Cat1State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                        /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   531    }
; ..\component\Os\Implementation\Os_Interrupt.c	   532  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   533  
; ..\component\Os\Implementation\Os_Interrupt.c	   534  
; ..\component\Os\Implementation\Os_Interrupt.c	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   536   *  Os_IntResumeCat1()
; ..\component\Os\Implementation\Os_Interrupt.c	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   538  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   539   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   540   *
; ..\component\Os\Implementation\Os_Interrupt.c	   541   *
; ..\component\Os\Implementation\Os_Interrupt.c	   542   *
; ..\component\Os\Implementation\Os_Interrupt.c	   543   */
; ..\component\Os\Implementation\Os_Interrupt.c	   544  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   545  Os_IntResumeCat1,
; ..\component\Os\Implementation\Os_Interrupt.c	   546  (
; ..\component\Os\Implementation\Os_Interrupt.c	   547    P2CONST(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) Cat1State
; ..\component\Os\Implementation\Os_Interrupt.c	   548  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   549  {
; ..\component\Os\Implementation\Os_Interrupt.c	   550    /* #10 If level lock is needed restore previous state level based. */
; ..\component\Os\Implementation\Os_Interrupt.c	   551    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.c	   552    {
; ..\component\Os\Implementation\Os_Interrupt.c	   553      Os_Hal_IntSetLevel(&(Cat1State->Level));                                                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   554    }
; ..\component\Os\Implementation\Os_Interrupt.c	   555    /* #20 Otherwise restore previous state based on global state. */
; ..\component\Os\Implementation\Os_Interrupt.c	   556    else
; ..\component\Os\Implementation\Os_Interrupt.c	   557    {
; ..\component\Os\Implementation\Os_Interrupt.c	   558      Os_Hal_IntSetGlobalState(&(Cat1State->Global));                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   559    }
; ..\component\Os\Implementation\Os_Interrupt.c	   560  }
; ..\component\Os\Implementation\Os_Interrupt.c	   561  
; ..\component\Os\Implementation\Os_Interrupt.c	   562  
; ..\component\Os\Implementation\Os_Interrupt.c	   563  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   564   *  Os_IntSuspendCat2()
; ..\component\Os\Implementation\Os_Interrupt.c	   565   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   566  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   567   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   568   *
; ..\component\Os\Implementation\Os_Interrupt.c	   569   *
; ..\component\Os\Implementation\Os_Interrupt.c	   570   *
; ..\component\Os\Implementation\Os_Interrupt.c	   571   *
; ..\component\Os\Implementation\Os_Interrupt.c	   572   *
; ..\component\Os\Implementation\Os_Interrupt.c	   573   *
; ..\component\Os\Implementation\Os_Interrupt.c	   574   *
; ..\component\Os\Implementation\Os_Interrupt.c	   575   */
; ..\component\Os\Implementation\Os_Interrupt.c	   576  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   577  Os_IntSuspendCat2,
; ..\component\Os\Implementation\Os_Interrupt.c	   578  (
; ..\component\Os\Implementation\Os_Interrupt.c	   579    P2VAR(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Interrupt.c	   580  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   581  {
; ..\component\Os\Implementation\Os_Interrupt.c	   582    /* #10 If interrupt level switching is supported: */
; ..\component\Os\Implementation\Os_Interrupt.c	   583    if(Os_Hal_IntIsLevelSupported() != 0u)                                                                                /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.c	   584    {
; ..\component\Os\Implementation\Os_Interrupt.c	   585      Os_Hal_IntLevelType cat2DisableLevel;
; ..\component\Os\Implementation\Os_Interrupt.c	   586      Os_Hal_IntLevelType levelState;
; ..\component\Os\Implementation\Os_Interrupt.c	   587  
; ..\component\Os\Implementation\Os_Interrupt.c	   588      /* #20 Get the level which has to be set to disable category2 interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.c	   589      Os_Hal_IntGetCat2LockLevel(&cat2DisableLevel);                                                                      /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   590      /* #30 Get and store the current level from HAL. */
; ..\component\Os\Implementation\Os_Interrupt.c	   591      Os_Hal_IntGetLevel(&levelState);                                                                                    /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   592  
; ..\component\Os\Implementation\Os_Interrupt.c	   593      /* #40 If the category 2 disable level is logically higher than the current level: */
; ..\component\Os\Implementation\Os_Interrupt.c	   594      if(Os_Hal_IntLevelIsGt(&cat2DisableLevel, &levelState) != 0u)                                                       /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   595      {
; ..\component\Os\Implementation\Os_Interrupt.c	   596        /* #50 Call HAL method to disable level based. */
; ..\component\Os\Implementation\Os_Interrupt.c	   597        Os_Hal_IntSetLevel(&cat2DisableLevel);                                                                            /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.c	   598      }
; ..\component\Os\Implementation\Os_Interrupt.c	   599      State->Level = levelState;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   600    }
; ..\component\Os\Implementation\Os_Interrupt.c	   601    else
; ..\component\Os\Implementation\Os_Interrupt.c	   602    {
; ..\component\Os\Implementation\Os_Interrupt.c	   603      /* #60 Otherwise disable global interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.c	   604      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   605    }
; ..\component\Os\Implementation\Os_Interrupt.c	   606  }
; ..\component\Os\Implementation\Os_Interrupt.c	   607  
; ..\component\Os\Implementation\Os_Interrupt.c	   608  
; ..\component\Os\Implementation\Os_Interrupt.c	   609  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   610   *  Os_IntResumeCat2()
; ..\component\Os\Implementation\Os_Interrupt.c	   611   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   612  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   613   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   614   *
; ..\component\Os\Implementation\Os_Interrupt.c	   615   *
; ..\component\Os\Implementation\Os_Interrupt.c	   616   *
; ..\component\Os\Implementation\Os_Interrupt.c	   617   */
; ..\component\Os\Implementation\Os_Interrupt.c	   618  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Interrupt.c	   619  Os_IntResumeCat2,
; ..\component\Os\Implementation\Os_Interrupt.c	   620  (
; ..\component\Os\Implementation\Os_Interrupt.c	   621    P2CONST(Os_IntStateType, AUTOMATIC, OS_APPL_DATA) Cat2State
; ..\component\Os\Implementation\Os_Interrupt.c	   622  ))
; ..\component\Os\Implementation\Os_Interrupt.c	   623  {
; ..\component\Os\Implementation\Os_Interrupt.c	   624    /* #10 If level lock is needed restore previous state level based. */
; ..\component\Os\Implementation\Os_Interrupt.c	   625    if(Os_Hal_IntIsLevelSupported() != 0u)                                                                                /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.c	   626    {
; ..\component\Os\Implementation\Os_Interrupt.c	   627      Os_Hal_IntSetLevel(&(Cat2State->Level));                                                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   628    }
; ..\component\Os\Implementation\Os_Interrupt.c	   629    /* #20 Otherwise restore previous state based on global state. */
; ..\component\Os\Implementation\Os_Interrupt.c	   630    else
; ..\component\Os\Implementation\Os_Interrupt.c	   631    {
; ..\component\Os\Implementation\Os_Interrupt.c	   632      Os_Hal_IntSetGlobalState(&(Cat2State->Global));                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.c	   633    }
; ..\component\Os\Implementation\Os_Interrupt.c	   634  }
; ..\component\Os\Implementation\Os_Interrupt.c	   635  
; ..\component\Os\Implementation\Os_Interrupt.c	   636  
; ..\component\Os\Implementation\Os_Interrupt.c	   637  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   638   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Interrupt.c	   639   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   640  
; ..\component\Os\Implementation\Os_Interrupt.c	   641  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   642   *  Os_InterruptInit()
; ..\component\Os\Implementation\Os_Interrupt.c	   643   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   644  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   645   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   646   *
; ..\component\Os\Implementation\Os_Interrupt.c	   647   *
; ..\component\Os\Implementation\Os_Interrupt.c	   648   *
; ..\component\Os\Implementation\Os_Interrupt.c	   649   *
; ..\component\Os\Implementation\Os_Interrupt.c	   650   */
; ..\component\Os\Implementation\Os_Interrupt.c	   651  FUNC(void, OS_CODE) Os_InterruptInit
; Function Os_InterruptInit
.L10:
Os_InterruptInit:	.type	func

; ..\component\Os\Implementation\Os_Interrupt.c	   652  (
; ..\component\Os\Implementation\Os_Interrupt.c	   653    P2VAR(Os_IntApiStateType, TYPEDEF, OS_VAR_NOINIT) IntApiState
; ..\component\Os\Implementation\Os_Interrupt.c	   654  )
; ..\component\Os\Implementation\Os_Interrupt.c	   655  {
; ..\component\Os\Implementation\Os_Interrupt.c	   656  
; ..\component\Os\Implementation\Os_Interrupt.c	   657    if(Os_InterruptIsCriticalSectionTracingEnabled() != 0u)                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Interrupt.c	   658    {
; ..\component\Os\Implementation\Os_Interrupt.c	   659      /* #10 Set all critical section flags to zero. */
; ..\component\Os\Implementation\Os_Interrupt.c	   660      IntApiState->Os_IntLockingState.InDisableAll = 0;                                                                   /* SBSW_OS_PWA_PRECONDITION */
	ld.bu	d15,[a4]16
.L338:
	insert	d15,d15,#0,#0,#1
	st.b	[a4]16,d15
.L339:

; ..\component\Os\Implementation\Os_Interrupt.c	   661    }
; ..\component\Os\Implementation\Os_Interrupt.c	   662  
; ..\component\Os\Implementation\Os_Interrupt.c	   663    /* #20 Set the nesting counter for SuspendAll to zero. */
; ..\component\Os\Implementation\Os_Interrupt.c	   664    IntApiState->Os_IntLockingState.SuspendAllCounter = 0;                                                                /* SBSW_OS_PWA_PRECONDITION */
	mov	d15,#0
	st.h	[a4]18,d15
.L340:

; ..\component\Os\Implementation\Os_Interrupt.c	   665  
; ..\component\Os\Implementation\Os_Interrupt.c	   666    /* #30 Set the nesting counter for SuspendOS to zero. */
; ..\component\Os\Implementation\Os_Interrupt.c	   667    IntApiState->Os_IntLockingState.SuspendOsCounter = 0;                                                                 /* SBSW_OS_PWA_PRECONDITION */
	st.h	[a4]20,d15
.L341:

; ..\component\Os\Implementation\Os_Interrupt.c	   668  }
	ret
.L90:
	
__Os_InterruptInit_function_end:
	.size	Os_InterruptInit,__Os_InterruptInit_function_end-Os_InterruptInit
.L39:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_DisableAllInterrupts

; ..\component\Os\Implementation\Os_Interrupt.c	   669  
; ..\component\Os\Implementation\Os_Interrupt.c	   670  
; ..\component\Os\Implementation\Os_Interrupt.c	   671  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   672   *  Os_Api_DisableAllInterrupts()
; ..\component\Os\Implementation\Os_Interrupt.c	   673   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   674  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   675   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   676   *
; ..\component\Os\Implementation\Os_Interrupt.c	   677   *
; ..\component\Os\Implementation\Os_Interrupt.c	   678   *
; ..\component\Os\Implementation\Os_Interrupt.c	   679   *
; ..\component\Os\Implementation\Os_Interrupt.c	   680   *
; ..\component\Os\Implementation\Os_Interrupt.c	   681   *
; ..\component\Os\Implementation\Os_Interrupt.c	   682   *
; ..\component\Os\Implementation\Os_Interrupt.c	   683   */
; ..\component\Os\Implementation\Os_Interrupt.c	   684  FUNC(void, OS_CODE) Os_Api_DisableAllInterrupts
; Function Os_Api_DisableAllInterrupts
.L12:
Os_Api_DisableAllInterrupts:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L279:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L95:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L106:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mfcr	d15,#65068
.L280:
	mov.u	d0,#32768
.L281:
	and	d15,d0
.L346:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L347:
	st.w	[a15],d15
.L111:
	ld.bu	d15,[a15]16
.L282:
	or	d15,#1
	st.b	[a15]16,d15
.L119:

; ..\component\Os\Implementation\Os_Interrupt.c	   685  (
; ..\component\Os\Implementation\Os_Interrupt.c	   686    void
; ..\component\Os\Implementation\Os_Interrupt.c	   687  )
; ..\component\Os\Implementation\Os_Interrupt.c	   688  {
; ..\component\Os\Implementation\Os_Interrupt.c	   689    Os_StatusType status;
; ..\component\Os\Implementation\Os_Interrupt.c	   690    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) caller;
; ..\component\Os\Implementation\Os_Interrupt.c	   691    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) interruptApiState;
; ..\component\Os\Implementation\Os_Interrupt.c	   692  
; ..\component\Os\Implementation\Os_Interrupt.c	   693    caller = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Interrupt.c	   694    interruptApiState = Os_ThreadGetInterruptApiState(caller);                                                            /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   695  
; ..\component\Os\Implementation\Os_Interrupt.c	   696    /* #10 Check that no interrupt API has been called previously. */
; ..\component\Os\Implementation\Os_Interrupt.c	   697    if(OS_UNLIKELY(Os_InterruptCheckNotInCriticalSection(interruptApiState) == OS_CHECK_FAILED))                          /* SBSW_OS_INT_INTERRUPTCHECKNOTINCRITICALSECTION_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   698    {
; ..\component\Os\Implementation\Os_Interrupt.c	   699      /*! Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   700   *
; ..\component\Os\Implementation\Os_Interrupt.c	   701   * */
; ..\component\Os\Implementation\Os_Interrupt.c	   702      status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   703    }
; ..\component\Os\Implementation\Os_Interrupt.c	   704    else
; ..\component\Os\Implementation\Os_Interrupt.c	   705    {
; ..\component\Os\Implementation\Os_Interrupt.c	   706      /* #20 Tell timing protection module to start measuring locking time. */
; ..\component\Os\Implementation\Os_Interrupt.c	   707      Os_InterruptTpLockAllStart(caller);                                                                                 /* SBSW_OS_INT_INTERRUPTTPLOCKALLSTART_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   708  
; ..\component\Os\Implementation\Os_Interrupt.c	   709      /* #30 Save current interrupt state and disable up to cat1 ISRs. */
; ..\component\Os\Implementation\Os_Interrupt.c	   710      Os_IntSuspendCat1(&(interruptApiState->SuspendAllPrevState));                                                       /* SBSW_OS_INT_INTSUSPENDCAT1_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   711  
; ..\component\Os\Implementation\Os_Interrupt.c	   712      /* #40 Inform the trace module that interrupts have been disabled */
; ..\component\Os\Implementation\Os_Interrupt.c	   713      Os_TraceInterruptsGlobalDisabled();
; ..\component\Os\Implementation\Os_Interrupt.c	   714  
; ..\component\Os\Implementation\Os_Interrupt.c	   715      /* #50 Remember that we are in a DisableAllInterrupts() sequence so we are able to detect invalid service calls. */
; ..\component\Os\Implementation\Os_Interrupt.c	   716      Os_InterruptDisableAllEnter(interruptApiState);                                                                     /* SBSW_OS_INT_INTERRUPTDISABLEALLENTER_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   717  
; ..\component\Os\Implementation\Os_Interrupt.c	   718      status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	   719    }
; ..\component\Os\Implementation\Os_Interrupt.c	   720  
; ..\component\Os\Implementation\Os_Interrupt.c	   721    /* #60 Report error if applicable or return. */
; ..\component\Os\Implementation\Os_Interrupt.c	   722    Os_ErrReportDisableAllInterrupts(status);
; ..\component\Os\Implementation\Os_Interrupt.c	   723  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L93:
	
__Os_Api_DisableAllInterrupts_function_end:
	.size	Os_Api_DisableAllInterrupts,__Os_Api_DisableAllInterrupts_function_end-Os_Api_DisableAllInterrupts
.L44:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_EnableAllInterrupts

; ..\component\Os\Implementation\Os_Interrupt.c	   724  
; ..\component\Os\Implementation\Os_Interrupt.c	   725  
; ..\component\Os\Implementation\Os_Interrupt.c	   726  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   727   *  Os_Api_EnableAllInterrupts()
; ..\component\Os\Implementation\Os_Interrupt.c	   728   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   729  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   730   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   731   *
; ..\component\Os\Implementation\Os_Interrupt.c	   732   *
; ..\component\Os\Implementation\Os_Interrupt.c	   733   *
; ..\component\Os\Implementation\Os_Interrupt.c	   734   *
; ..\component\Os\Implementation\Os_Interrupt.c	   735   *
; ..\component\Os\Implementation\Os_Interrupt.c	   736   *
; ..\component\Os\Implementation\Os_Interrupt.c	   737   *
; ..\component\Os\Implementation\Os_Interrupt.c	   738   */
; ..\component\Os\Implementation\Os_Interrupt.c	   739  FUNC(void, OS_CODE) Os_Api_EnableAllInterrupts
; Function Os_Api_EnableAllInterrupts
.L14:
Os_Api_EnableAllInterrupts:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L283:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L124:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L127:
	ld.bu	d15,[a15]16
.L284:
	insert	d15,d15,#0,#0,#1
	st.b	[a15]16,d15
.L130:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L352:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L353:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	insert	d15,d15,#0,#15,#1
	ld.w	d0,[a15]
.L285:
	or	d15,d0
.L286:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L354:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L135:

; ..\component\Os\Implementation\Os_Interrupt.c	   740  (
; ..\component\Os\Implementation\Os_Interrupt.c	   741    void
; ..\component\Os\Implementation\Os_Interrupt.c	   742  )
; ..\component\Os\Implementation\Os_Interrupt.c	   743  {
; ..\component\Os\Implementation\Os_Interrupt.c	   744    Os_StatusType status;
; ..\component\Os\Implementation\Os_Interrupt.c	   745    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) caller;
; ..\component\Os\Implementation\Os_Interrupt.c	   746    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) interruptApiState;
; ..\component\Os\Implementation\Os_Interrupt.c	   747  
; ..\component\Os\Implementation\Os_Interrupt.c	   748    caller = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Interrupt.c	   749    interruptApiState = Os_ThreadGetInterruptApiState(caller);                                                            /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   750  
; ..\component\Os\Implementation\Os_Interrupt.c	   751    /* #10 Check that DisableAllInterrupts() has been called previously. */
; ..\component\Os\Implementation\Os_Interrupt.c	   752    if(OS_UNLIKELY(Os_InterruptCheckInDisableAll(interruptApiState) == OS_CHECK_FAILED))                                  /* SBSW_OS_INT_INTERRUPTCHECKINDISABLEALL_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   753    {
; ..\component\Os\Implementation\Os_Interrupt.c	   754      status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   755    }
; ..\component\Os\Implementation\Os_Interrupt.c	   756    else
; ..\component\Os\Implementation\Os_Interrupt.c	   757    {
; ..\component\Os\Implementation\Os_Interrupt.c	   758      /* #20 Remember that we left the interrupt critical section. */
; ..\component\Os\Implementation\Os_Interrupt.c	   759      Os_InterruptDisableAllExit(interruptApiState);                                                                      /* SBSW_OS_INT_INTERRUPTDISABLEALLEXIT_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   760  
; ..\component\Os\Implementation\Os_Interrupt.c	   761      /* #30 Inform the trace module that interrupts are going to be enabled */
; ..\component\Os\Implementation\Os_Interrupt.c	   762      Os_TraceInterruptsGlobalEnabled();
; ..\component\Os\Implementation\Os_Interrupt.c	   763  
; ..\component\Os\Implementation\Os_Interrupt.c	   764      /* #40 Restore the interrupt state which has been saved in DisableAllInterrupts(). */
; ..\component\Os\Implementation\Os_Interrupt.c	   765      Os_IntResumeCat1(&interruptApiState->SuspendAllPrevState);                                                          /* SBSW_OS_INT_INTRESUMECAT1_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   766  
; ..\component\Os\Implementation\Os_Interrupt.c	   767      /* #50 Tell timing protection module to stop measuring locking time. */
; ..\component\Os\Implementation\Os_Interrupt.c	   768      Os_InterruptTpLockAllStop(caller);                                                                                  /* SBSW_OS_INT_INTERRUPTTPLOCKALLSTOP_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   769  
; ..\component\Os\Implementation\Os_Interrupt.c	   770      status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	   771    }
; ..\component\Os\Implementation\Os_Interrupt.c	   772  
; ..\component\Os\Implementation\Os_Interrupt.c	   773    /* #60 Report error if applicable or return. */
; ..\component\Os\Implementation\Os_Interrupt.c	   774    Os_ErrReportEnableAllInterrupts(status);
; ..\component\Os\Implementation\Os_Interrupt.c	   775  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L123:
	
__Os_Api_EnableAllInterrupts_function_end:
	.size	Os_Api_EnableAllInterrupts,__Os_Api_EnableAllInterrupts_function_end-Os_Api_EnableAllInterrupts
.L49:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_SuspendAllInterrupts

; ..\component\Os\Implementation\Os_Interrupt.c	   776  
; ..\component\Os\Implementation\Os_Interrupt.c	   777  
; ..\component\Os\Implementation\Os_Interrupt.c	   778  
; ..\component\Os\Implementation\Os_Interrupt.c	   779  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   780   *  Os_Api_SuspendAllInterrupts()
; ..\component\Os\Implementation\Os_Interrupt.c	   781   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   782  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   783   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   784   *
; ..\component\Os\Implementation\Os_Interrupt.c	   785   *
; ..\component\Os\Implementation\Os_Interrupt.c	   786   *
; ..\component\Os\Implementation\Os_Interrupt.c	   787   *
; ..\component\Os\Implementation\Os_Interrupt.c	   788   *
; ..\component\Os\Implementation\Os_Interrupt.c	   789   *
; ..\component\Os\Implementation\Os_Interrupt.c	   790   *
; ..\component\Os\Implementation\Os_Interrupt.c	   791   *
; ..\component\Os\Implementation\Os_Interrupt.c	   792   *
; ..\component\Os\Implementation\Os_Interrupt.c	   793   *
; ..\component\Os\Implementation\Os_Interrupt.c	   794   */
; ..\component\Os\Implementation\Os_Interrupt.c	   795  FUNC(void, OS_CODE) Os_Api_SuspendAllInterrupts
; Function Os_Api_SuspendAllInterrupts
.L16:
Os_Api_SuspendAllInterrupts:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L287:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L145:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L148:

; ..\component\Os\Implementation\Os_Interrupt.c	   796  (
; ..\component\Os\Implementation\Os_Interrupt.c	   797    void
; ..\component\Os\Implementation\Os_Interrupt.c	   798  )
; ..\component\Os\Implementation\Os_Interrupt.c	   799  {
; ..\component\Os\Implementation\Os_Interrupt.c	   800    Os_StatusType status;
; ..\component\Os\Implementation\Os_Interrupt.c	   801    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) caller;
; ..\component\Os\Implementation\Os_Interrupt.c	   802    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) interruptApiState;
; ..\component\Os\Implementation\Os_Interrupt.c	   803  
; ..\component\Os\Implementation\Os_Interrupt.c	   804    caller = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Interrupt.c	   805    interruptApiState = Os_ThreadGetInterruptApiState(caller);                                                            /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   806  
; ..\component\Os\Implementation\Os_Interrupt.c	   807    /* #10 Check that DisableAllInterrupts() has not been called previously. */
; ..\component\Os\Implementation\Os_Interrupt.c	   808    if(OS_UNLIKELY(Os_InterruptCheckNotInDisableAll(interruptApiState) == OS_CHECK_FAILED))                               /* SBSW_OS_INT_INTERRUPTCHECKNOTINCRITICALSECTION_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   809    {
; ..\component\Os\Implementation\Os_Interrupt.c	   810      status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   811    }
; ..\component\Os\Implementation\Os_Interrupt.c	   812    else
; ..\component\Os\Implementation\Os_Interrupt.c	   813    {
; ..\component\Os\Implementation\Os_Interrupt.c	   814      /* #20 If SuspendAllInterrupts() nesting counter is zero: */
; ..\component\Os\Implementation\Os_Interrupt.c	   815      if(interruptApiState->Os_IntLockingState.SuspendAllCounter == 0u)
	ld.hu	d15,[a15]18
.L288:
	jne	d15,#0,.L2
.L150:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mfcr	d15,#65068
.L359:
	mov.u	d0,#32768
.L289:
	and	d15,d0
.L360:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L361:
	st.w	[a15],d15
.L151:

; ..\component\Os\Implementation\Os_Interrupt.c	   816      {
; ..\component\Os\Implementation\Os_Interrupt.c	   817        /* #30 Tell timing protection module to start measuring locking time. */
; ..\component\Os\Implementation\Os_Interrupt.c	   818        Os_InterruptTpLockAllStart(caller);                                                                               /* SBSW_OS_INT_INTERRUPTTPLOCKALLSTART_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   819  
; ..\component\Os\Implementation\Os_Interrupt.c	   820        /* #40 Save current interrupt state and disable up to cat1 ISRs. */
; ..\component\Os\Implementation\Os_Interrupt.c	   821        Os_IntSuspendCat1(&interruptApiState->SuspendAllPrevState);                                                       /* SBSW_OS_INT_INTSUSPENDCAT1_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   822  
; ..\component\Os\Implementation\Os_Interrupt.c	   823        /* #50 Inform trace module that interrupts have been disabled */
; ..\component\Os\Implementation\Os_Interrupt.c	   824        Os_TraceInterruptsGlobalDisabled();
; ..\component\Os\Implementation\Os_Interrupt.c	   825  
; ..\component\Os\Implementation\Os_Interrupt.c	   826        /* #60 Take SuspendOS nesting counter snapshot. */
; ..\component\Os\Implementation\Os_Interrupt.c	   827        Os_InterruptTakeSnapshot(&interruptApiState->SuspendOsSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   828                                                     interruptApiState->Os_IntLockingState.SuspendOsCounter);             /* SBSW_OS_INT_INTERRUPTTAKESNAPSHOT_001 */
	ld.hu	d15,[a15]20
.L290:
	st.h	[a15]24,d15
.L2:

; ..\component\Os\Implementation\Os_Interrupt.c	   829      }
; ..\component\Os\Implementation\Os_Interrupt.c	   830  
; ..\component\Os\Implementation\Os_Interrupt.c	   831      /* #70 Increment the nesting counter for SuspendAllInterrupts() calls. */
; ..\component\Os\Implementation\Os_Interrupt.c	   832      interruptApiState->Os_IntLockingState.SuspendAllCounter++;                                                          /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_002 */
	ld.hu	d15,[a15]18
.L362:
	add	d15,#1
	st.h	[a15]18,d15
.L363:

; ..\component\Os\Implementation\Os_Interrupt.c	   833  
; ..\component\Os\Implementation\Os_Interrupt.c	   834      /* #80 Check that there is no counter overflow. */
; ..\component\Os\Implementation\Os_Interrupt.c	   835      if(OS_UNLIKELY(Os_InterruptCheckNoOverflow(                                                                         /* COV_OS_INTCOUNTEROVERFLOW */
; ..\component\Os\Implementation\Os_Interrupt.c	   836              interruptApiState->Os_IntLockingState.SuspendAllCounter) == OS_CHECK_FAILED))
; ..\component\Os\Implementation\Os_Interrupt.c	   837      {
; ..\component\Os\Implementation\Os_Interrupt.c	   838        status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   839      }
; ..\component\Os\Implementation\Os_Interrupt.c	   840      else
; ..\component\Os\Implementation\Os_Interrupt.c	   841      {
; ..\component\Os\Implementation\Os_Interrupt.c	   842        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	   843      }
; ..\component\Os\Implementation\Os_Interrupt.c	   844    }
; ..\component\Os\Implementation\Os_Interrupt.c	   845  
; ..\component\Os\Implementation\Os_Interrupt.c	   846    /* #90 Report error if applicable or return. */
; ..\component\Os\Implementation\Os_Interrupt.c	   847    Os_ErrReportSuspendAllInterrupts(status);
; ..\component\Os\Implementation\Os_Interrupt.c	   848  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L144:
	
__Os_Api_SuspendAllInterrupts_function_end:
	.size	Os_Api_SuspendAllInterrupts,__Os_Api_SuspendAllInterrupts_function_end-Os_Api_SuspendAllInterrupts
.L54:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_ResumeAllInterrupts

; ..\component\Os\Implementation\Os_Interrupt.c	   849  
; ..\component\Os\Implementation\Os_Interrupt.c	   850  
; ..\component\Os\Implementation\Os_Interrupt.c	   851  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   852   *  Os_Api_ResumeAllInterrupts()
; ..\component\Os\Implementation\Os_Interrupt.c	   853   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   854  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   855   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   856   *
; ..\component\Os\Implementation\Os_Interrupt.c	   857   *
; ..\component\Os\Implementation\Os_Interrupt.c	   858   *
; ..\component\Os\Implementation\Os_Interrupt.c	   859   *
; ..\component\Os\Implementation\Os_Interrupt.c	   860   *
; ..\component\Os\Implementation\Os_Interrupt.c	   861   *
; ..\component\Os\Implementation\Os_Interrupt.c	   862   *
; ..\component\Os\Implementation\Os_Interrupt.c	   863   *
; ..\component\Os\Implementation\Os_Interrupt.c	   864   *
; ..\component\Os\Implementation\Os_Interrupt.c	   865   */
; ..\component\Os\Implementation\Os_Interrupt.c	   866  FUNC(void, OS_CODE) Os_Api_ResumeAllInterrupts
; Function Os_Api_ResumeAllInterrupts
.L18:
Os_Api_ResumeAllInterrupts:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L291:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L161:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L164:

; ..\component\Os\Implementation\Os_Interrupt.c	   867  (
; ..\component\Os\Implementation\Os_Interrupt.c	   868    void
; ..\component\Os\Implementation\Os_Interrupt.c	   869  )
; ..\component\Os\Implementation\Os_Interrupt.c	   870  {
; ..\component\Os\Implementation\Os_Interrupt.c	   871    Os_StatusType status;
; ..\component\Os\Implementation\Os_Interrupt.c	   872    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) caller;
; ..\component\Os\Implementation\Os_Interrupt.c	   873    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) interruptApiState;
; ..\component\Os\Implementation\Os_Interrupt.c	   874  
; ..\component\Os\Implementation\Os_Interrupt.c	   875    caller = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Interrupt.c	   876    interruptApiState = Os_ThreadGetInterruptApiState(caller);                                                            /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   877  
; ..\component\Os\Implementation\Os_Interrupt.c	   878    /* #10 Check that SuspendAllInterrupts() has been called previously. */
; ..\component\Os\Implementation\Os_Interrupt.c	   879    if(OS_UNLIKELY(interruptApiState->Os_IntLockingState.SuspendAllCounter == 0u))                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.hu	d15,[a15]18
.L292:
	jeq	d15,#0,.L3
.L368:

; ..\component\Os\Implementation\Os_Interrupt.c	   880    {
; ..\component\Os\Implementation\Os_Interrupt.c	   881      status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   882    }
; ..\component\Os\Implementation\Os_Interrupt.c	   883    else
; ..\component\Os\Implementation\Os_Interrupt.c	   884    {
; ..\component\Os\Implementation\Os_Interrupt.c	   885      /* #20 Decrement the nesting counter for SuspendAllInterrupts() calls. */
; ..\component\Os\Implementation\Os_Interrupt.c	   886      interruptApiState->Os_IntLockingState.SuspendAllCounter--;                                                          /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_002 */
	add	d15,#-1
	st.h	[a15]18,d15
.L369:

; ..\component\Os\Implementation\Os_Interrupt.c	   887  
; ..\component\Os\Implementation\Os_Interrupt.c	   888      /* #30 If the nesting counter is zero: */
; ..\component\Os\Implementation\Os_Interrupt.c	   889      if (interruptApiState->Os_IntLockingState.SuspendAllCounter == 0u)
	jne	d15,#0,.L4
.L166:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L370:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L371:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	insert	d15,d15,#0,#15,#1
	ld.w	d0,[a15]
.L293:
	or	d15,d0
.L294:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L372:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L4:
.L3:

; ..\component\Os\Implementation\Os_Interrupt.c	   890      {
; ..\component\Os\Implementation\Os_Interrupt.c	   891        /* #40 Check whether the user did open/close a SuspendOSInterrupts() pair meanwhile. */
; ..\component\Os\Implementation\Os_Interrupt.c	   892        if(OS_UNLIKELY(Os_InterruptCheckSnapshot(interruptApiState->SuspendOsSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   893                interruptApiState->Os_IntLockingState.SuspendOsCounter) == OS_CHECK_FAILED))
; ..\component\Os\Implementation\Os_Interrupt.c	   894        {
; ..\component\Os\Implementation\Os_Interrupt.c	   895          status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   896        }
; ..\component\Os\Implementation\Os_Interrupt.c	   897        else
; ..\component\Os\Implementation\Os_Interrupt.c	   898        {
; ..\component\Os\Implementation\Os_Interrupt.c	   899          /* #50 Inform the trace module that interrupts are going to be enabled */
; ..\component\Os\Implementation\Os_Interrupt.c	   900          Os_TraceInterruptsGlobalEnabled();
; ..\component\Os\Implementation\Os_Interrupt.c	   901  
; ..\component\Os\Implementation\Os_Interrupt.c	   902          /* #60 Restore the interrupt state which has been saved in SuspendAllInterrupts(). */
; ..\component\Os\Implementation\Os_Interrupt.c	   903          Os_IntResumeCat1(&interruptApiState->SuspendAllPrevState);                                                      /* SBSW_OS_INT_INTRESUMECAT1_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   904  
; ..\component\Os\Implementation\Os_Interrupt.c	   905          /* #70 Tell timing protection module to stop measuring locking time. */
; ..\component\Os\Implementation\Os_Interrupt.c	   906          Os_InterruptTpLockAllStop(caller);                                                                              /* SBSW_OS_INT_INTERRUPTTPLOCKALLSTOP_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   907  
; ..\component\Os\Implementation\Os_Interrupt.c	   908          status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	   909        }
; ..\component\Os\Implementation\Os_Interrupt.c	   910      }
; ..\component\Os\Implementation\Os_Interrupt.c	   911      else
; ..\component\Os\Implementation\Os_Interrupt.c	   912      {
; ..\component\Os\Implementation\Os_Interrupt.c	   913        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	   914      }
; ..\component\Os\Implementation\Os_Interrupt.c	   915    }
; ..\component\Os\Implementation\Os_Interrupt.c	   916  
; ..\component\Os\Implementation\Os_Interrupt.c	   917    /* #80 Report error if applicable or return. */
; ..\component\Os\Implementation\Os_Interrupt.c	   918    Os_ErrReportResumeAllInterrupts(status);
; ..\component\Os\Implementation\Os_Interrupt.c	   919  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L160:
	
__Os_Api_ResumeAllInterrupts_function_end:
	.size	Os_Api_ResumeAllInterrupts,__Os_Api_ResumeAllInterrupts_function_end-Os_Api_ResumeAllInterrupts
.L59:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_SuspendOSInterrupts

; ..\component\Os\Implementation\Os_Interrupt.c	   920  
; ..\component\Os\Implementation\Os_Interrupt.c	   921  
; ..\component\Os\Implementation\Os_Interrupt.c	   922  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   923   *  Os_Api_SuspendOSInterrupts()
; ..\component\Os\Implementation\Os_Interrupt.c	   924   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   925  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   926   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   927   *
; ..\component\Os\Implementation\Os_Interrupt.c	   928   *
; ..\component\Os\Implementation\Os_Interrupt.c	   929   *
; ..\component\Os\Implementation\Os_Interrupt.c	   930   *
; ..\component\Os\Implementation\Os_Interrupt.c	   931   *
; ..\component\Os\Implementation\Os_Interrupt.c	   932   *
; ..\component\Os\Implementation\Os_Interrupt.c	   933   *
; ..\component\Os\Implementation\Os_Interrupt.c	   934   *
; ..\component\Os\Implementation\Os_Interrupt.c	   935   *
; ..\component\Os\Implementation\Os_Interrupt.c	   936   *
; ..\component\Os\Implementation\Os_Interrupt.c	   937   */
; ..\component\Os\Implementation\Os_Interrupt.c	   938  FUNC(void, OS_CODE) Os_Api_SuspendOSInterrupts
; Function Os_Api_SuspendOSInterrupts
.L20:
Os_Api_SuspendOSInterrupts:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L295:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L171:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L174:

; ..\component\Os\Implementation\Os_Interrupt.c	   939  (
; ..\component\Os\Implementation\Os_Interrupt.c	   940    void
; ..\component\Os\Implementation\Os_Interrupt.c	   941  )
; ..\component\Os\Implementation\Os_Interrupt.c	   942  {
; ..\component\Os\Implementation\Os_Interrupt.c	   943    Os_StatusType status;
; ..\component\Os\Implementation\Os_Interrupt.c	   944    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) caller;
; ..\component\Os\Implementation\Os_Interrupt.c	   945    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) interruptApiState;
; ..\component\Os\Implementation\Os_Interrupt.c	   946  
; ..\component\Os\Implementation\Os_Interrupt.c	   947    caller = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Interrupt.c	   948    interruptApiState = Os_ThreadGetInterruptApiState(caller);                                                            /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   949  
; ..\component\Os\Implementation\Os_Interrupt.c	   950    /* #10 Check that DisableAllInterrupts() has not been called previously. */
; ..\component\Os\Implementation\Os_Interrupt.c	   951    if(OS_UNLIKELY(Os_InterruptCheckNotInDisableAll(interruptApiState) == OS_CHECK_FAILED))                               /* SBSW_OS_INT_INTERRUPTCHECKNOTINDISABLEALL_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   952    {
; ..\component\Os\Implementation\Os_Interrupt.c	   953      status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   954    }
; ..\component\Os\Implementation\Os_Interrupt.c	   955    else
; ..\component\Os\Implementation\Os_Interrupt.c	   956    {
; ..\component\Os\Implementation\Os_Interrupt.c	   957      /* #20 If SuspendOSInterrupts() nesting counter is zero: */
; ..\component\Os\Implementation\Os_Interrupt.c	   958      if (interruptApiState->Os_IntLockingState.SuspendOsCounter == 0u)
	ld.hu	d15,[a15]20
.L296:
	jne	d15,#0,.L5
.L177:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
	mov	d0,#50
.L186:
	mfcr	d15,#65068
.L298:
	and	d15,#255
.L191:

; ..\component\Os\Implementation\Os_Interrupt.c	   594      if(Os_Hal_IntLevelIsGt(&cat2DisableLevel, &levelState) != 0u)                                                       /* SBSW_OS_FC_POINTER2LOCAL */      (inlined)
	jge.u	d15,d0,.L6
.L196:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d1,#65068
.L377:
	mov.u	d2,#32768
.L300:
	and	d1,d2
.L202:
	disable
.L378:
	mfcr	d2,#65068
	insert	d2,d2,#0,#0,#8
	or	d0,d2
.L297:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L379:
	isync
.L206:
	disable
.L380:
	mfcr	d0,#65068
.L381:
	insert	d0,d0,#0,#15,#1
.L301:
	or	d0,d1
.L302:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L382:
	isync

; ..\component\Os\Implementation\Os_Interrupt.c	   594      if(Os_Hal_IntLevelIsGt(&cat2DisableLevel, &levelState) != 0u)                                                       /* SBSW_OS_FC_POINTER2LOCAL */      (inlined)
.L6:
	st.w	[a15]12,d15
.L178:

; ..\component\Os\Implementation\Os_Interrupt.c	   959      {
; ..\component\Os\Implementation\Os_Interrupt.c	   960        /* #30 Tell timing protection module to start measuring locking time. */
; ..\component\Os\Implementation\Os_Interrupt.c	   961        Os_InterruptTpLockOsStart(caller);                                                                                /* SBSW_OS_INT_INTERRUPTTPLOCKOSSTART_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   962  
; ..\component\Os\Implementation\Os_Interrupt.c	   963        /* #40 Save current interrupt state and disable up to cat2 ISRs. */
; ..\component\Os\Implementation\Os_Interrupt.c	   964        Os_IntSuspendCat2(&interruptApiState->SuspendOsPrevState);                                                        /* SBSW_OS_INT_INTSUSPENDCAT2_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	   965  
; ..\component\Os\Implementation\Os_Interrupt.c	   966        /* #50 Inform the trace module that interrupts have been disabled. */
; ..\component\Os\Implementation\Os_Interrupt.c	   967        Os_TraceInterruptsLevelDisabled();
; ..\component\Os\Implementation\Os_Interrupt.c	   968  
; ..\component\Os\Implementation\Os_Interrupt.c	   969        /* #60 Take SuspendAll nesting counter snapshot. */
; ..\component\Os\Implementation\Os_Interrupt.c	   970        Os_InterruptTakeSnapshot(&interruptApiState->SuspendAllSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	   971                                                      interruptApiState->Os_IntLockingState.SuspendAllCounter);           /* SBSW_OS_INT_INTERRUPTTAKESNAPSHOT_001 */
	ld.hu	d15,[a15]18
.L299:
	st.h	[a15]22,d15
.L5:

; ..\component\Os\Implementation\Os_Interrupt.c	   972      }
; ..\component\Os\Implementation\Os_Interrupt.c	   973  
; ..\component\Os\Implementation\Os_Interrupt.c	   974      /* #70 Increment the nesting counter for SuspendOSInterrupts() calls. */
; ..\component\Os\Implementation\Os_Interrupt.c	   975      interruptApiState->Os_IntLockingState.SuspendOsCounter++;                                                           /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_002 */
	ld.hu	d15,[a15]20
.L383:
	add	d15,#1
	st.h	[a15]20,d15
.L384:

; ..\component\Os\Implementation\Os_Interrupt.c	   976  
; ..\component\Os\Implementation\Os_Interrupt.c	   977      /* #80 Check that there is no counter overflow. */
; ..\component\Os\Implementation\Os_Interrupt.c	   978      if(OS_UNLIKELY(Os_InterruptCheckNoOverflow(                                                                         /* COV_OS_INTCOUNTEROVERFLOW */
; ..\component\Os\Implementation\Os_Interrupt.c	   979              interruptApiState->Os_IntLockingState.SuspendOsCounter) == OS_CHECK_FAILED))
; ..\component\Os\Implementation\Os_Interrupt.c	   980      {
; ..\component\Os\Implementation\Os_Interrupt.c	   981        status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	   982      }
; ..\component\Os\Implementation\Os_Interrupt.c	   983      else
; ..\component\Os\Implementation\Os_Interrupt.c	   984      {
; ..\component\Os\Implementation\Os_Interrupt.c	   985        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	   986      }
; ..\component\Os\Implementation\Os_Interrupt.c	   987    }
; ..\component\Os\Implementation\Os_Interrupt.c	   988  
; ..\component\Os\Implementation\Os_Interrupt.c	   989    /* #90 Report error if applicable or return. */
; ..\component\Os\Implementation\Os_Interrupt.c	   990    Os_ErrReportSuspendOSInterrupts(status);
; ..\component\Os\Implementation\Os_Interrupt.c	   991  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L170:
	
__Os_Api_SuspendOSInterrupts_function_end:
	.size	Os_Api_SuspendOSInterrupts,__Os_Api_SuspendOSInterrupts_function_end-Os_Api_SuspendOSInterrupts
.L64:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_ResumeOSInterrupts

; ..\component\Os\Implementation\Os_Interrupt.c	   992  
; ..\component\Os\Implementation\Os_Interrupt.c	   993  
; ..\component\Os\Implementation\Os_Interrupt.c	   994  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	   995   *  Os_Api_ResumeOSInterrupts()
; ..\component\Os\Implementation\Os_Interrupt.c	   996   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	   997  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	   998   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	   999   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1000   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1001   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1002   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1003   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1004   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1005   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1006   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1007   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1008   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1009  FUNC(void, OS_CODE) Os_Api_ResumeOSInterrupts
; Function Os_Api_ResumeOSInterrupts
.L22:
Os_Api_ResumeOSInterrupts:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L303:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L212:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a15,[a15]24
.L215:

; ..\component\Os\Implementation\Os_Interrupt.c	  1010  (
; ..\component\Os\Implementation\Os_Interrupt.c	  1011    void
; ..\component\Os\Implementation\Os_Interrupt.c	  1012  )
; ..\component\Os\Implementation\Os_Interrupt.c	  1013  {
; ..\component\Os\Implementation\Os_Interrupt.c	  1014    Os_StatusType status;
; ..\component\Os\Implementation\Os_Interrupt.c	  1015    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) caller;
; ..\component\Os\Implementation\Os_Interrupt.c	  1016    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) interruptApiState;
; ..\component\Os\Implementation\Os_Interrupt.c	  1017  
; ..\component\Os\Implementation\Os_Interrupt.c	  1018    caller = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Interrupt.c	  1019    interruptApiState = Os_ThreadGetInterruptApiState(caller);                                                            /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	  1020  
; ..\component\Os\Implementation\Os_Interrupt.c	  1021    /* #10 Check that SuspendOSInterrupts() has been called previously. */
; ..\component\Os\Implementation\Os_Interrupt.c	  1022    if(OS_UNLIKELY(interruptApiState->Os_IntLockingState.SuspendOsCounter == 0u))                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.hu	d15,[a15]20
.L304:
	jeq	d15,#0,.L7
.L389:

; ..\component\Os\Implementation\Os_Interrupt.c	  1023    {
; ..\component\Os\Implementation\Os_Interrupt.c	  1024      status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	  1025    }
; ..\component\Os\Implementation\Os_Interrupt.c	  1026    else
; ..\component\Os\Implementation\Os_Interrupt.c	  1027    {
; ..\component\Os\Implementation\Os_Interrupt.c	  1028      /* #20 Decrement the nesting counter for SuspendOSInterrupts() calls. */
; ..\component\Os\Implementation\Os_Interrupt.c	  1029      interruptApiState->Os_IntLockingState.SuspendOsCounter--;                                                           /* SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_002 */
	add	d15,#-1
	st.h	[a15]20,d15
.L390:

; ..\component\Os\Implementation\Os_Interrupt.c	  1030  
; ..\component\Os\Implementation\Os_Interrupt.c	  1031      /* #30 If the nesting counter is zero: */
; ..\component\Os\Implementation\Os_Interrupt.c	  1032      if (interruptApiState->Os_IntLockingState.SuspendOsCounter == 0u)
	jne	d15,#0,.L8
.L391:

; ..\component\Os\Implementation\Os_Interrupt.c	  1033      {
; ..\component\Os\Implementation\Os_Interrupt.c	  1034        /* #40 Check whether the user did open/close a SuspendAllInterrupts() pair meanwhile. */
; ..\component\Os\Implementation\Os_Interrupt.c	  1035        if(OS_UNLIKELY(Os_InterruptCheckSnapshot(interruptApiState->SuspendAllSnapshot,
; ..\component\Os\Implementation\Os_Interrupt.c	  1036                interruptApiState->Os_IntLockingState.SuspendAllCounter) == OS_CHECK_FAILED))
; ..\component\Os\Implementation\Os_Interrupt.c	  1037        {
; ..\component\Os\Implementation\Os_Interrupt.c	  1038          status = OS_STATUS_API_ERROR;
; ..\component\Os\Implementation\Os_Interrupt.c	  1039        }
; ..\component\Os\Implementation\Os_Interrupt.c	  1040        else
; ..\component\Os\Implementation\Os_Interrupt.c	  1041        {
; ..\component\Os\Implementation\Os_Interrupt.c	  1042          /* #50 Inform the trace module that interrupts are going to be enabled. */
; ..\component\Os\Implementation\Os_Interrupt.c	  1043          Os_TraceInterruptsLevelEnabled();
; ..\component\Os\Implementation\Os_Interrupt.c	  1044  
; ..\component\Os\Implementation\Os_Interrupt.c	  1045          /* #60 Restore the interrupt state which has been saved in SuspendOSInterrupts(). */
; ..\component\Os\Implementation\Os_Interrupt.c	  1046          Os_IntResumeCat2(&(interruptApiState->SuspendOsPrevState));                                                     /* SBSW_OS_INT_INTRESUMECAT2_001 */
	lea	a15,[a15]8
.L218:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L392:
	mov.u	d0,#32768
.L305:
	and	d15,d0
.L224:
	disable
.L393:
	mfcr	d0,#65068
	insert	d0,d0,#0,#0,#8
	ld.w	d1,[+a15]4
	or	d0,d1

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L394:
	isync
.L226:
	disable
.L395:
	mfcr	d0,#65068
.L396:
	insert	d0,d0,#0,#15,#1
.L306:
	or	d0,d15
.L307:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L397:
	isync
.L8:
.L7:

; ..\component\Os\Implementation\Os_Interrupt.c	  1047  
; ..\component\Os\Implementation\Os_Interrupt.c	  1048          /* #70 Tell timing protection module to stop measuring locking time. */
; ..\component\Os\Implementation\Os_Interrupt.c	  1049          Os_InterruptTpLockOsStop(caller);                                                                               /* SBSW_OS_INT_INTERRUPTTPLOCKOSSTOP_001 */
; ..\component\Os\Implementation\Os_Interrupt.c	  1050  
; ..\component\Os\Implementation\Os_Interrupt.c	  1051          status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	  1052        }
; ..\component\Os\Implementation\Os_Interrupt.c	  1053      }
; ..\component\Os\Implementation\Os_Interrupt.c	  1054      else
; ..\component\Os\Implementation\Os_Interrupt.c	  1055      {
; ..\component\Os\Implementation\Os_Interrupt.c	  1056        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Interrupt.c	  1057      }
; ..\component\Os\Implementation\Os_Interrupt.c	  1058    }
; ..\component\Os\Implementation\Os_Interrupt.c	  1059  
; ..\component\Os\Implementation\Os_Interrupt.c	  1060    /* #80 Report error if applicable or return. */
; ..\component\Os\Implementation\Os_Interrupt.c	  1061    Os_ErrReportResumeOSInterrupts(status);
; ..\component\Os\Implementation\Os_Interrupt.c	  1062  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
	ret
.L211:
	
__Os_Api_ResumeOSInterrupts_function_end:
	.size	Os_Api_ResumeOSInterrupts,__Os_Api_ResumeOSInterrupts_function_end-Os_Api_ResumeOSInterrupts
.L69:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_DisableGlobal')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_DisableGlobal

; ..\component\Os\Implementation\Os_Interrupt.c	  1063  
; ..\component\Os\Implementation\Os_Interrupt.c	  1064  
; ..\component\Os\Implementation\Os_Interrupt.c	  1065  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	  1066   *  Os_Api_DisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.c	  1067   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	  1068  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	  1069   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	  1070   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1071   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1072  FUNC(void, OS_CODE) Os_Api_DisableGlobal
; Function Os_Api_DisableGlobal
.L24:
Os_Api_DisableGlobal:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L233:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
	disable
.L231:

; ..\component\Os\Implementation\Os_Interrupt.c	  1073  (
; ..\component\Os\Implementation\Os_Interrupt.c	  1074    void
; ..\component\Os\Implementation\Os_Interrupt.c	  1075  )
; ..\component\Os\Implementation\Os_Interrupt.c	  1076  {
; ..\component\Os\Implementation\Os_Interrupt.c	  1077    Os_InterruptDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.c	  1078  }
	ret
.L229:
	
__Os_Api_DisableGlobal_function_end:
	.size	Os_Api_DisableGlobal,__Os_Api_DisableGlobal_function_end-Os_Api_DisableGlobal
.L74:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_EnableGlobal')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_EnableGlobal

; ..\component\Os\Implementation\Os_Interrupt.c	  1079  
; ..\component\Os\Implementation\Os_Interrupt.c	  1080  
; ..\component\Os\Implementation\Os_Interrupt.c	  1081  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	  1082   *  Os_Api_EnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.c	  1083   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	  1084  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	  1085   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	  1086   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1087   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1088  FUNC(void, OS_CODE) Os_Api_EnableGlobal
; Function Os_Api_EnableGlobal
.L26:
Os_Api_EnableGlobal:	.type	func

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
	enable
.L243:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L240:

; ..\component\Os\Implementation\Os_Interrupt.c	  1089  (
; ..\component\Os\Implementation\Os_Interrupt.c	  1090    void
; ..\component\Os\Implementation\Os_Interrupt.c	  1091  )
; ..\component\Os\Implementation\Os_Interrupt.c	  1092  {
; ..\component\Os\Implementation\Os_Interrupt.c	  1093    Os_InterruptEnableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.c	  1094  }
	ret
.L238:
	
__Os_Api_EnableGlobal_function_end:
	.size	Os_Api_EnableGlobal,__Os_Api_EnableGlobal_function_end-Os_Api_EnableGlobal
.L79:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_DisableLevel')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_DisableLevel

; ..\component\Os\Implementation\Os_Interrupt.c	  1095  
; ..\component\Os\Implementation\Os_Interrupt.c	  1096  
; ..\component\Os\Implementation\Os_Interrupt.c	  1097  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	  1098   *  Os_Api_DisableLevel()
; ..\component\Os\Implementation\Os_Interrupt.c	  1099   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	  1100  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	  1101   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	  1102   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1103   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1104  FUNC(void, OS_CODE) Os_Api_DisableLevel
; Function Os_Api_DisableLevel
.L28:
Os_Api_DisableLevel:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L251:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d0,#65068
.L410:
	mov.u	d1,#32768
.L309:
	and	d0,d1
.L258:
	disable
.L411:
	mfcr	d1,#65068
	insert	d1,d1,#0,#0,#8
	or	d1,d1,#50

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d1
.L412:
	isync
.L260:
	disable
.L413:
	mfcr	d15,#65068
.L308:
	insert	d15,d15,#0,#15,#1
.L310:
	or	d15,d0
.L311:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L414:
	isync
.L249:

; ..\component\Os\Implementation\Os_Interrupt.c	  1105  (
; ..\component\Os\Implementation\Os_Interrupt.c	  1106    void
; ..\component\Os\Implementation\Os_Interrupt.c	  1107  )
; ..\component\Os\Implementation\Os_Interrupt.c	  1108  {
; ..\component\Os\Implementation\Os_Interrupt.c	  1109    Os_InterruptDisableLevel();
; ..\component\Os\Implementation\Os_Interrupt.c	  1110  }
	ret
.L247:
	
__Os_Api_DisableLevel_function_end:
	.size	Os_Api_DisableLevel,__Os_Api_DisableLevel_function_end-Os_Api_DisableLevel
.L84:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_EnableLevel')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_EnableLevel

; ..\component\Os\Implementation\Os_Interrupt.c	  1111  
; ..\component\Os\Implementation\Os_Interrupt.c	  1112  
; ..\component\Os\Implementation\Os_Interrupt.c	  1113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	  1114   *  Os_Api_EnableLevel()
; ..\component\Os\Implementation\Os_Interrupt.c	  1115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	  1116  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	  1117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.c	  1118   *
; ..\component\Os\Implementation\Os_Interrupt.c	  1119   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1120  FUNC(void, OS_CODE) Os_Api_EnableLevel
; Function Os_Api_EnableLevel
.L30:
Os_Api_EnableLevel:	.type	func

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L419:
	mov.u	d0,#32768
.L312:
	and	d15,d0
.L272:
	disable
.L420:
	mfcr	d0,#65068
	insert	d0,d0,#0,#0,#8

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L421:
	isync
.L274:
	disable
.L422:
	mfcr	d0,#65068
.L423:
	insert	d0,d0,#0,#15,#1
.L313:
	or	d0,d15
.L314:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L424:
	isync
.L268:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L265:

; ..\component\Os\Implementation\Os_Interrupt.c	  1121  (
; ..\component\Os\Implementation\Os_Interrupt.c	  1122    void
; ..\component\Os\Implementation\Os_Interrupt.c	  1123  )
; ..\component\Os\Implementation\Os_Interrupt.c	  1124  {
; ..\component\Os\Implementation\Os_Interrupt.c	  1125    Os_InterruptEnableLevel();
; ..\component\Os\Implementation\Os_Interrupt.c	  1126  }
	ret
.L263:
	
__Os_Api_EnableLevel_function_end:
	.size	Os_Api_EnableLevel,__Os_Api_EnableLevel_function_end-Os_Api_EnableLevel
.L89:
	; End of function
	
	.calls	'Os_InterruptInit','',0
	.calls	'Os_Api_DisableAllInterrupts','',0
	.calls	'Os_Api_EnableAllInterrupts','',0
	.calls	'Os_Api_SuspendAllInterrupts','',0
	.calls	'Os_Api_ResumeAllInterrupts','',0
	.calls	'Os_Api_SuspendOSInterrupts','',0
	.calls	'Os_Api_ResumeOSInterrupts','',0
	.calls	'Os_Api_DisableGlobal','',0
	.calls	'Os_Api_EnableGlobal','',0
	.calls	'Os_Api_DisableLevel','',0
	.calls	'Os_Api_EnableLevel','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L32:
	.word	110540
	.half	3
	.word	.L33
	.byte	4
.L31:
	.byte	1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L34
.L103:
	.byte	2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Os_Hal_Mfa10',0,3,1,190,4,1
	.word	139
	.byte	1,1,4,0,3
	.byte	'Os_Hal_Mfa11',0,3,1,206,4,1
	.word	139
	.byte	1,1,4,0
.L101:
	.byte	3
	.byte	'Os_Hal_Mfa8',0,3,1,222,4,1
	.word	139
	.byte	1,1
.L102:
	.byte	4,0,5,3,172,4,9,2,6
	.byte	'OS_STATUS_OK',0,0,6
	.byte	'OS_STATUS_CALLEVEL',0,2,6
	.byte	'OS_STATUS_LIMIT',0,4,6
	.byte	'OS_STATUS_RESOURCE',0,6,6
	.byte	'OS_STATUS_SERVICEID',0,9,6
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,6
	.byte	'OS_STATUS_MISSINGEND',0,11,6
	.byte	'OS_STATUS_DISABLEDINT',0,12,6
	.byte	'OS_STATUS_STACKFAULT',0,13,6
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,6
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,6
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,6
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,6
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,6
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,6
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,6
	.byte	'OS_STATUS_SPINLOCK',0,21,6
	.byte	'OS_STATUS_CORE',0,22,6
	.byte	'OS_STATUS_OVERFLOW',0,245,1,6
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,6
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,6
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,6
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,6
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,6
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,6
	.byte	'OS_STATUS_API_ERROR',0,252,1,6
	.byte	'OS_STATUS_ASSERTION',0,253,1,6
	.byte	'OS_STATUS_OVERLOAD',0,254,1,6
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,6
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,6
	.byte	'OS_STATUS_ID_1',0,131,2,6
	.byte	'OS_STATUS_UNLOCKED',0,133,2,6
	.byte	'OS_STATUS_STATE_1',0,135,2,6
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,6
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,6
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,6
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,6
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,6
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,6
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,6
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,6
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,6
	.byte	'OS_STATUS_ID_2',0,131,4,6
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,6
	.byte	'OS_STATUS_STATE_2',0,135,4,6
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,6
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,6
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,6
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,6
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,6
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,6
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,6
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,6
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,6
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,6
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,6
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,6
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,6
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,6
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,6
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,6
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,6
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,6
	.byte	'OS_STATUS_STOPPED_1',0,133,10,6
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,6
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,6
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,6
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,6
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,6
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,6
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,6
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,6
	.byte	'OS_STATUS_NEXTED_1',0,133,14,6
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,6
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,6
	.byte	'OS_STATUS_LOCKED',0,129,16,6
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,6
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,6
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,6
	.byte	'OS_STATUS_PRIORITY',0,129,18,6
	.byte	'OS_STATUS_ORDER',0,133,18,6
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,6
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,6
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,6
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,6
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,6
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,7
	.byte	'Os_ErrReportDisableAllInterrupts',0,3,2,107,1,1,1,8
	.byte	'Status',0,2,107,1
	.word	240
	.byte	4,0,7
	.byte	'Os_ErrReportEnableAllInterrupts',0,3,2,131,1,1,1,1,8
	.byte	'Status',0,2,131,1,1
	.word	240
	.byte	4,0,7
	.byte	'Os_ErrReportSuspendAllInterrupts',0,3,2,155,1,1,1,1,8
	.byte	'Status',0,2,155,1,1
	.word	240
	.byte	4,0,7
	.byte	'Os_ErrReportResumeAllInterrupts',0,3,2,179,1,1,1,1,8
	.byte	'Status',0,2,179,1,1
	.word	240
	.byte	4,0,7
	.byte	'Os_ErrReportSuspendOSInterrupts',0,3,2,203,1,1,1,1,8
	.byte	'Status',0,2,203,1,1
	.word	240
	.byte	4,0,7
	.byte	'Os_ErrReportResumeOSInterrupts',0,3,2,227,1,1,1,1,8
	.byte	'Status',0,2,227,1,1
	.word	240
	.byte	4,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Os_ErrIsValueLo',0,3,2,202,18,1
	.word	3094
	.byte	1,1,8
	.byte	'Id',0,2,202,18,1
	.word	139
	.byte	8
	.byte	'Compare',0,2,202,18,1
	.word	139
	.byte	4,0,3
	.byte	'Os_ErrExtendedCheck',0,3,2,216,18,1
	.word	3094
	.byte	1,1,8
	.byte	'Value',0,2,216,18,1
	.word	3094
	.byte	4,0,7
	.byte	'Os_Assert',0,3,2,140,19,1,1,1,8
	.byte	'Condition',0,2,140,19,1
	.word	3094
	.byte	4,0,2
	.byte	'unsigned char',0,1,8,3
	.byte	'Os_ErrOsStatus2UserStatus',0,3,2,185,19,1
	.word	3257
	.byte	1,1,8
	.byte	'OsStatus',0,2,185,19,1
	.word	240
	.byte	4,0,3
	.byte	'Os_ErrIsPropagationRequired',0,3,2,203,19,1
	.word	3094
	.byte	1,1,8
	.byte	'OsStatus',0,2,203,19,1
	.word	240
	.byte	4,0,9
	.word	139
	.byte	10
	.word	3392
	.byte	7
	.byte	'Os_Hal_InitializeAccessDPRE',0,3,4,109,1,1,1,8
	.byte	'Value',0,4,109,1
	.word	3397
	.byte	4,0,7
	.byte	'Os_Hal_InitializeAccessDPWE',0,3,4,127,1,1,1,8
	.byte	'Value',0,4,127,1
	.word	3397
	.byte	4,0,7
	.byte	'Os_Hal_InitializeAccessCPXE',0,3,4,145,1,1,1,1,8
	.byte	'Value',0,4,145,1,1
	.word	3397
	.byte	4,0,9
	.word	3257
	.byte	9
	.word	139
	.byte	9
	.word	139
	.byte	7
	.byte	'Os_Hal_ReadModifyAccessDPRE',0,3,4,163,1,1,1,1,8
	.byte	'ProtectionSet',0,4,163,1,1
	.word	3557
	.byte	8
	.byte	'Mask',0,4,163,1,1
	.word	3562
	.byte	8
	.byte	'Value',0,4,163,1,1
	.word	3567
	.byte	4,0,9
	.word	3257
	.byte	9
	.word	139
	.byte	9
	.word	139
	.byte	7
	.byte	'Os_Hal_ReadModifyAccessDPWE',0,3,4,200,1,1,1,1,8
	.byte	'ProtectionSet',0,4,200,1,1
	.word	3662
	.byte	8
	.byte	'Mask',0,4,200,1,1
	.word	3667
	.byte	8
	.byte	'Value',0,4,200,1,1
	.word	3672
	.byte	4,0,9
	.word	3257
	.byte	9
	.word	139
	.byte	9
	.word	139
	.byte	7
	.byte	'Os_Hal_ReadModifyAccessCPXE',0,3,4,237,1,1,1,1,8
	.byte	'ProtectionSet',0,4,237,1,1
	.word	3767
	.byte	8
	.byte	'Mask',0,4,237,1,1
	.word	3772
	.byte	8
	.byte	'Value',0,4,237,1,1
	.word	3777
	.byte	4,0,9
	.word	139
	.byte	11
	.byte	'Os_Hal_ContextConfigType_Tag',0,5,153,1,8,28,12
	.byte	'StackEndAddr',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'StackStartAddr',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'ProgramStatus',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'ProtectionSet',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'Entry',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'ReturnAddress',0
	.word	139
	.byte	4,2,35,20,12
	.byte	'IntStatus',0
	.word	139
	.byte	4,2,35,24,0,9
	.word	3877
	.byte	10
	.word	4062
	.byte	7
	.byte	'Os_Hal_ContextPreparePRS',0,3,4,145,2,1,1,1,8
	.byte	'PcxiAddr',0,4,145,2,1
	.word	3872
	.byte	8
	.byte	'CurrentConfig',0,4,145,2,1
	.word	4067
	.byte	4,0,3
	.byte	'Os_Hal_CoreGetId',0,3,4,158,2,1
	.word	139
	.byte	1,1,4,0,11
	.byte	'Os_Hal_ContextType_Tag',0,5,115,8,28,12
	.byte	'Lr',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'PreviousContextInfo',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'InitPCXI',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'RunningPCXI',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'MpuRegionForStackLow',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'MpuRegionForStackUpper',0
	.word	139
	.byte	4,2,35,20,12
	.byte	'A4',0
	.word	139
	.byte	4,2,35,24,0,10
	.word	4179
	.byte	10
	.word	139
	.byte	11
	.byte	'Os_StackConfigType_Tag',0,9,104,8,8,12
	.byte	'LowAddress',0
	.word	4367
	.byte	4,2,35,0,12
	.byte	'HighAddress',0
	.word	4367
	.byte	4,2,35,4,0,9
	.word	4372
	.byte	10
	.word	4442
	.byte	11
	.byte	'Os_LockType_Tag',0,10,82,8,4,12
	.byte	'Next',0
	.word	.L315-.L32
	.byte	4,2,35,0,0,10
	.word	4452
	.byte	5,10,73,9,1,6
	.byte	'OS_LOCKTYPE_RESOURCE_STANDARD',0,0,6
	.byte	'OS_LOCKTYPE_RESOURCE_INTERRUPT',0,1,6
	.byte	'OS_LOCKTYPE_SPINLOCK',0,2,0,11
	.byte	'Os_LockConfigType_Tag',0,10,92,8,12,12
	.byte	'Dyn',0
	.word	4488
	.byte	4,2,35,0,12
	.byte	'AccessingApplications',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'Type',0
	.word	4493
	.byte	1,2,35,8,0,9
	.word	4587
.L315:
	.byte	10
	.word	4673
	.byte	13
	.byte	'Os_LockListType',0,11,65,55
	.word	4678
	.byte	5,12,135,1,9,1,6
	.byte	'OS_SPINLOCKMETHOD_ALL_INT',0,0,6
	.byte	'OS_SPINLOCKMETHOD_CAT2',0,1,6
	.byte	'OS_SPINLOCKMETHOD_SCHEDULER',0,2,6
	.byte	'OS_SPINLOCKMETHOD_NOTHING',0,3,0,2
	.byte	'unsigned short int',0,2,7,5,12,149,1,9,1,6
	.byte	'OS_SPINLOCKMODE_USER',0,0,6
	.byte	'OS_SPINLOCKMODE_SUPERVISOR',0,1,0,5,12,160,1,9,1,6
	.byte	'OS_SPINLOCKTRACE_DISABLED',0,0,6
	.byte	'OS_SPINLOCKTRACE_ENABLED',0,1,0,5,12,173,1,9,1,6
	.byte	'OS_SPINLOCKCHECK_DISABLED',0,0,6
	.byte	'OS_SPINLOCKCHECK_ENABLED',0,1,0,5,14,225,1,9,1,6
	.byte	'OS_TRACE_NUMBER_OF_ALL_SPINLOCKS',0,0,6
	.byte	'OS_TRACE_NUMBER_OF_CONFIGURED_SPINLOCKS',0,0,6
	.byte	'OS_TRACE_INVALID_SPINLOCK',0,1,0,11
	.byte	'Os_TraceSpinlockConfigType_Tag',0,13,148,4,8,1,12
	.byte	'SpinlockId',0
	.word	5030
	.byte	1,2,35,0,0,9
	.word	5142
	.byte	10
	.word	5200
	.byte	11
	.byte	'Os_SpinlockConfigType_Tag',0,12,214,1,8,24,12
	.byte	'Lock',0
	.word	4587
	.byte	12,2,35,0,12
	.byte	'Method',0
	.word	4707
	.byte	1,2,35,12,12
	.byte	'CeilingPriority',0
	.word	4825
	.byte	2,2,35,14,12
	.byte	'Mode',0
	.word	4847
	.byte	1,2,35,16,12
	.byte	'Trace',0
	.word	4906
	.byte	1,2,35,17,12
	.byte	'Checks',0
	.word	4968
	.byte	1,2,35,18,12
	.byte	'Order',0
	.word	3257
	.byte	1,2,35,19,12
	.byte	'TimingHookTrace',0
	.word	5205
	.byte	4,2,35,20,0,9
	.word	5210
	.byte	10
	.word	5383
	.byte	13
	.byte	'Os_SpinlockListType',0,15,62,59
	.word	5388
	.byte	5,3,128,3,9,1,6
	.byte	'APPLICATION_TERMINATED',0,0,6
	.byte	'APPLICATION_RESTARTING',0,1,6
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,14,16,118,9,1,12
	.byte	'State',0
	.word	5421
	.byte	1,2,35,0,0,10
	.word	5503
	.byte	5,17,223,1,9,1,6
	.byte	'OS_CORESTATE_INACTIVE',0,0,6
	.byte	'OS_CORESTATE_ACTIVATED_ASR',0,1,6
	.byte	'OS_CORESTATE_ACTIVATED_NONASR',0,2,0,15,1
	.word	5529
	.byte	16,0,0,11
	.byte	'Os_CoreStatusType_Tag',0,17,251,1,8,2,12
	.byte	'ActivationState',0
	.word	5529
	.byte	1,2,35,0,12
	.byte	'CoreStartRequests',0
	.word	5621
	.byte	1,2,35,1,0,17
	.word	5630
	.byte	10
	.word	5711
	.byte	11
	.byte	'Os_Hal_CoreConfigType_Tag',0,7,99,8,24,12
	.byte	'CoreId',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ProgramCounterRegister',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'StartLabelAddress',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'DBGSRRegister',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'SYSCON_CORECON_Register',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'BOOTCONRegister',0
	.word	139
	.byte	4,2,35,20,0,9
	.word	5721
	.byte	10
	.word	5909
	.byte	11
	.byte	'Os_Hal_IntIsrConfigType_Tag',0,19,118,8,12,12
	.byte	'Level',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'Source',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'CoreAssignment',0
	.word	3257
	.byte	1,2,35,8,0,9
	.word	5919
	.byte	10
	.word	6008
	.byte	11
	.byte	'Os_Hal_IntIsrMapConfigType_Tag',0,19,132,1,8,4,12
	.byte	'dummy',0
	.word	139
	.byte	4,2,35,0,0,9
	.word	6018
	.byte	10
	.word	6071
	.byte	11
	.byte	'Os_IsrHwConfigType_Tag',0,18,154,1,8,12,12
	.byte	'HwConfig',0
	.word	6013
	.byte	4,2,35,0,12
	.byte	'MapConfig',0
	.word	6076
	.byte	4,2,35,4,12
	.byte	'IsMapped',0
	.word	3257
	.byte	1,2,35,8,12
	.byte	'IsPostActionRequired',0
	.word	3257
	.byte	1,2,35,9,0,9
	.word	6081
	.byte	10
	.word	6196
	.byte	13
	.byte	'Os_InterruptSourceConfigRefType',0,17,172,2,56
	.word	6201
	.byte	9
	.word	6206
	.byte	10
	.word	6247
	.byte	5,20,86,9,1,6
	.byte	'OS_CORE_ID_0',0,0,6
	.byte	'OS_CORE_ID_MASTER',0,0,6
	.byte	'OS_COREID_COUNT',0,1,0,5,13,204,2,9,1,6
	.byte	'OS_TRACE_TASK_ACTIVATION',0,1,6
	.byte	'OS_TRACE_ISR_START',0,2,6
	.byte	'OS_TRACE_TASK_SETEVENT',0,4,6
	.byte	'OS_TRACE_TASK_GOTSEMA',0,8,6
	.byte	'OS_TRACE_THREAD_RESUME',0,16,6
	.byte	'OS_TRACE_THREAD_CLEANUP',0,32,6
	.byte	'OS_TRACE_THREAD_MISC',0,33,0,11
	.byte	'Os_TraceThreadType_Tag',0,13,244,3,8,1,12
	.byte	'NextRunReason',0
	.word	6316
	.byte	1,2,35,0,0,10
	.word	6494
	.byte	5,14,218,1,9,1,6
	.byte	'OS_TRACE_THREADID_COUNT',0,0,6
	.byte	'OS_TRACE_INVALID_THREAD',0,1,0,5,13,228,3,9,1,6
	.byte	'OS_TRACE_THREAD_TYPE_TASK',0,0,6
	.byte	'OS_TRACE_THREAD_TYPE_ISR',0,1,6
	.byte	'OS_TRACE_THREAD_TYPE_MISC',0,2,0,11
	.byte	'Os_TraceThreadConfigType_Tag',0,13,254,3,8,8,12
	.byte	'Dyn',0
	.word	6547
	.byte	4,2,35,0,12
	.byte	'Id',0
	.word	6552
	.byte	1,2,35,4,12
	.byte	'Type',0
	.word	6611
	.byte	1,2,35,5,0,9
	.word	6701
	.byte	10
	.word	6776
	.byte	11
	.byte	'Os_TraceCoreType_Tag',0,13,137,4,8,12,12
	.byte	'CurrentTask',0
	.word	6781
	.byte	4,2,35,0,12
	.byte	'CurrentIsr',0
	.word	6781
	.byte	4,2,35,4,12
	.byte	'OrtiCurrentServiceId',0
	.word	3257
	.byte	1,2,35,8,0,10
	.word	6786
	.byte	11
	.byte	'Os_CoreConfigType_Tag',0,17,176,2,8,24,12
	.byte	'Status',0
	.word	5716
	.byte	4,2,35,0,12
	.byte	'HwConfig',0
	.word	5914
	.byte	4,2,35,4,12
	.byte	'InterruptSourceRefs',0
	.word	6252
	.byte	4,2,35,8,12
	.byte	'InterruptSourceCount',0
	.word	4825
	.byte	2,2,35,12,12
	.byte	'Id',0
	.word	6257
	.byte	1,2,35,14,12
	.byte	'Trace',0
	.word	6885
	.byte	4,2,35,16,12
	.byte	'IsAsrCore',0
	.word	3257
	.byte	1,2,35,20,12
	.byte	'IsAutostart',0
	.word	3257
	.byte	1,2,35,21,12
	.byte	'IsMasterStartAllowed',0
	.word	3257
	.byte	1,2,35,22,12
	.byte	'IsHardwareInitCore',0
	.word	3257
	.byte	1,2,35,23,0,14,22,67,9,8,12
	.byte	'Global',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'Level',0
	.word	139
	.byte	4,2,35,4,0,14,21,81,9,6,18
	.byte	'InDisableAll',0,1
	.word	3257
	.byte	1,7,2,35,0,12
	.byte	'SuspendAllCounter',0
	.word	4825
	.byte	2,2,35,2,12
	.byte	'SuspendOsCounter',0
	.word	4825
	.byte	2,2,35,4,0,11
	.byte	'Os_IntApiStateType_Tag',0,21,89,8,28,12
	.byte	'SuspendAllPrevState',0
	.word	7137
	.byte	8,2,35,0,12
	.byte	'SuspendOsPrevState',0
	.word	7137
	.byte	8,2,35,8,12
	.byte	'Os_IntLockingState',0
	.word	7174
	.byte	6,2,35,16,12
	.byte	'SuspendAllSnapshot',0
	.word	4825
	.byte	2,2,35,22,12
	.byte	'SuspendOsSnapshot',0
	.word	4825
	.byte	2,2,35,24,0,2
	.byte	'short int',0,2,5,13
	.byte	'Os_CoreInterruptedThreadsType',0,17,164,2,57
	.word	.L316-.L32
	.byte	15,40
	.word	7439
	.byte	16,9,0,5,3,177,3,9,1,6
	.byte	'OSServiceId_GetApplicationID',0,0,6
	.byte	'OSServiceId_GetISRID',0,1,6
	.byte	'OSServiceId_CallTrustedFunction',0,2,6
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,6
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,6
	.byte	'OSServiceId_CheckObjectAccess',0,5,6
	.byte	'OSServiceId_CheckObjectOwnership',0,6,6
	.byte	'OSServiceId_StartScheduleTableRel',0,7,6
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,6
	.byte	'OSServiceId_StopScheduleTable',0,9,6
	.byte	'OSServiceId_NextScheduleTable',0,10,6
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,6
	.byte	'OSServiceId_SyncScheduleTable',0,12,6
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,6
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,6
	.byte	'OSServiceId_IncrementCounter',0,15,6
	.byte	'OSServiceId_GetCounterValue',0,16,6
	.byte	'OSServiceId_GetElapsedValue',0,17,6
	.byte	'OSServiceId_TerminateApplication',0,18,6
	.byte	'OSServiceId_AllowAccess',0,19,6
	.byte	'OSServiceId_GetApplicationState',0,20,6
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,6
	.byte	'OSServiceId_GetCoreID',0,22,6
	.byte	'OSServiceId_StartCore',0,23,6
	.byte	'OSServiceId_StartNonAutosarCore',0,24,6
	.byte	'OSServiceId_GetSpinlock',0,25,6
	.byte	'OSServiceId_ReleaseSpinlock',0,26,6
	.byte	'OSServiceId_TryToGetSpinlock',0,27,6
	.byte	'OSServiceId_ShutdownAllCores',0,28,6
	.byte	'OSServiceId_ControlIdle',0,29,6
	.byte	'OSServiceId_IocSend',0,30,6
	.byte	'OSServiceId_IocWrite',0,31,6
	.byte	'OSServiceId_IocSendGroup',0,32,6
	.byte	'OSServiceId_IocWriteGroup',0,33,6
	.byte	'OSServiceId_IocReceive',0,34,6
	.byte	'OSServiceId_IocRead',0,35,6
	.byte	'OSServiceId_IocReceiveGroup',0,36,6
	.byte	'OSServiceId_IocReadGroup',0,37,6
	.byte	'OSServiceId_IocEmptyQueue',0,38,6
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,6
	.byte	'OSServiceId_GetExceptionContext',0,160,1,6
	.byte	'OSServiceId_SetExceptionContext',0,161,1,6
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,6
	.byte	'OSServiceId_AppKill',0,163,1,6
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,6
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,6
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,6
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,6
	.byte	'OSServiceId_TimerIsr',0,168,1,6
	.byte	'OSServiceId_IsrWrapper',0,169,1,6
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,6
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,6
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,6
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,6
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,6
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,6
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,6
	.byte	'OSServiceId_GetSemaphore',0,177,1,6
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,6
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,6
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,6
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,6
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,6
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,6
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,6
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,6
	.byte	'OSServiceId_HookCallCallback',0,186,1,6
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,6
	.byte	'OSServiceId_IsInterruptPending',0,188,1,6
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,6
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,6
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,6
	.byte	'OSServiceId_GetCoreStartState',0,192,1,6
	.byte	'OSServiceId_StartOS',0,208,1,6
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,6
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,6
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,6
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,6
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,6
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,6
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,6
	.byte	'OSServiceId_ActivateTask',0,217,1,6
	.byte	'OSServiceId_TerminateTask',0,218,1,6
	.byte	'OSServiceId_ChainTask',0,219,1,6
	.byte	'OSServiceId_GetTaskID',0,220,1,6
	.byte	'OSServiceId_GetTaskState',0,221,1,6
	.byte	'OSServiceId_Schedule',0,222,1,6
	.byte	'OSServiceId_SetEvent',0,223,1,6
	.byte	'OSServiceId_ClearEvent',0,224,1,6
	.byte	'OSServiceId_GetEvent',0,225,1,6
	.byte	'OSServiceId_WaitEvent',0,226,1,6
	.byte	'OSServiceId_GetAlarmBase',0,227,1,6
	.byte	'OSServiceId_GetAlarm',0,228,1,6
	.byte	'OSServiceId_SetRelAlarm',0,229,1,6
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,6
	.byte	'OSServiceId_CancelAlarm',0,231,1,6
	.byte	'OSServiceId_GetResource',0,232,1,6
	.byte	'OSServiceId_ReleaseResource',0,233,1,6
	.byte	'OSSERVICEID_COUNT',0,255,1,0,14,3,133,6,9,4,12
	.byte	'Service',0
	.word	7487
	.byte	1,2,35,0,12
	.byte	'Error',0
	.word	3257
	.byte	1,2,35,1,12
	.byte	'DetailedError',0
	.word	240
	.byte	2,2,35,2,0,14,3,220,2,9,12,12
	.byte	'maxallowedvalue',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	139
	.byte	4,2,35,8,0,10
	.word	10694
	.byte	13
	.byte	'AlarmBaseRefType',0,3,231,2,61
	.word	10766
	.byte	5,14,169,1,9,1,6
	.byte	'Rte_Al_TE2_bsw_task_0_10ms',0,0,6
	.byte	'Rte_Al_TE2_bsw_task_0_20ms',0,1,6
	.byte	'Rte_Al_TE_swc_test_swc_test_10ms',0,2,6
	.byte	'Rte_Al_TE_swc_test_swc_test_500ms',0,3,6
	.byte	'OS_ALARMID_COUNT',0,4,0,10
	.word	5421
	.byte	13
	.byte	'ApplicationStateRefType',0,3,163,3,68
	.word	10952
	.byte	5,14,120,9,1,6
	.byte	'OsApplication_OsCore0',0,0,6
	.byte	'SystemApplication_OsCore0',0,1,6
	.byte	'INVALID_OSAPPLICATION',0,2,6
	.byte	'OS_APPID_COUNT',0,2,0,10
	.word	3257
	.byte	5,14,179,1,9,1,6
	.byte	'SystemTimer',0,0,6
	.byte	'OS_COUNTERID_COUNT',0,1,0,2
	.byte	'unsigned long long int',0,8,7,10
	.word	11136
	.byte	5,14,160,1,9,1,6
	.byte	'CanIsr_0',0,0,6
	.byte	'CounterIsr_SystemTimer',0,1,6
	.byte	'INVALID_ISR',0,2,6
	.byte	'OS_ISRID_COUNT',0,2,0,5,3,230,1,9,1,6
	.byte	'IDLE_NO_HALT',0,0,6
	.byte	'OS_IDLEMODE_COUNT',0,1,0,19
	.byte	'void',0,9
	.word	11283
	.byte	10
	.word	11289
	.byte	13
	.byte	'MemoryStartAddressType',0,3,203,6,49
	.word	11294
	.byte	5,14,192,1,9,1,6
	.byte	'OsResource',0,0,6
	.byte	'OS_RESOURCEID_COUNT',0,1,0,5,3,244,2,9,1,6
	.byte	'RESTART',0,0,6
	.byte	'NO_RESTART',0,1,6
	.byte	'OS_RESTARTTYPE_COUNT',0,2,0,5,3,175,6,9,1,6
	.byte	'SCHEDULETABLE_STOPPED',0,0,6
	.byte	'SCHEDULETABLE_NEXT',0,1,6
	.byte	'SCHEDULETABLE_WAITING',0,2,6
	.byte	'SCHEDULETABLE_RUNNING',0,3,6
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,10
	.word	11426
	.byte	13
	.byte	'ScheduleTableStatusRefType',0,3,195,6,34
	.word	11566
	.byte	5,14,186,1,9,1,6
	.byte	'OS_SCHTID_COUNT',0,0,0,5,14,199,1,9,1,6
	.byte	'INVALID_SPINLOCK',0,0,6
	.byte	'OS_SPINLOCKID_COUNT',0,0,0,10
	.word	3257
	.byte	14,25,134,1,9,8,12
	.byte	'vendorID',0
	.word	4825
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	4825
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	3257
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	3257
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	3257
	.byte	1,2,35,6,0,10
	.word	11685
	.byte	5,14,147,1,9,1,6
	.byte	'Default_Init_Task',0,0,6
	.byte	'Default_Init_Task_Trusted',0,1,6
	.byte	'IdleTask_OsCore0',0,2,6
	.byte	'bsw_task',0,3,6
	.byte	'swc_init',0,4,6
	.byte	'swc_task',0,5,6
	.byte	'INVALID_TASK',0,6,6
	.byte	'OS_TASKID_COUNT',0,6,0,10
	.word	11811
	.byte	13
	.byte	'TaskRefType',0,3,152,2,56
	.word	11951
	.byte	5,3,161,2,9,1,6
	.byte	'RUNNING',0,0,6
	.byte	'READY',0,1,6
	.byte	'WAITING',0,2,6
	.byte	'SUSPENDED',0,3,0,10
	.word	11977
	.byte	13
	.byte	'TaskStateRefType',0,3,178,2,61
	.word	12024
	.byte	10
	.word	139
	.byte	13
	.byte	'TickRefType',0,3,210,2,56
	.word	12055
	.byte	5,14,129,1,9,1,6
	.byte	'OS_TRUSTEDFUNCTIONID_COUNT',0,0,0,10
	.word	11283
	.byte	13
	.byte	'TrustedFunctionParameterRefType',0,3,204,1,44
	.word	12117
	.byte	5,3,138,2,9,1,6
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,6
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,10
	.word	12163
	.byte	9
	.word	12163
	.byte	10
	.word	12231
	.byte	5,3,138,3,9,1,6
	.byte	'OBJECT_TASK',0,0,6
	.byte	'OBJECT_ISR',0,1,6
	.byte	'OBJECT_ALARM',0,2,6
	.byte	'OBJECT_RESOURCE',0,3,6
	.byte	'OBJECT_COUNTER',0,4,6
	.byte	'OBJECT_SCHEDULETABLE',0,5,6
	.byte	'OBJECT_SPINLOCK',0,6,0,5,14,135,1,9,1,6
	.byte	'OS_NONTRUSTEDFUNCTIONID_COUNT',0,0,0,13
	.byte	'Os_NonTrustedFunctionParameterRefType',0,3,207,1,44
	.word	12117
	.byte	5,14,141,1,9,1,6
	.byte	'OS_FASTTRUSTEDFUNCTIONID_COUNT',0,0,0,13
	.byte	'Os_FastTrustedFunctionParameterRefType',0,3,210,1,44
	.word	12117
	.byte	10
	.word	139
	.byte	13
	.byte	'Os_ExceptionSourceIdRefType',0,3,250,1,61
	.word	12540
	.byte	10
	.word	139
	.byte	13
	.byte	'Os_InterruptSourceIdRefType',0,3,242,1,61
	.word	12582
	.byte	5,14,206,1,9,1,6
	.byte	'OS_PERIPHERALID_COUNT',0,0,0,10
	.word	10632
	.byte	13
	.byte	'Os_ErrorInformationRefType',0,3,147,6,64
	.word	12655
	.byte	5,14,212,1,9,1,6
	.byte	'OS_BARRIERID_COUNT',0,0,0,15,64
	.word	139
	.byte	16,15,0,11
	.byte	'Os_ExceptionContextType_Tag',0,26,71,8,160,1,12
	.byte	'AddressRegisters',0
	.word	12724
	.byte	64,2,35,0,12
	.byte	'DataRegisters',0
	.word	12724
	.byte	64,2,35,64,12
	.byte	'Ra',0
	.word	139
	.byte	4,3,35,128,1,12
	.byte	'Psw',0
	.word	139
	.byte	4,3,35,132,1,12
	.byte	'ExceptionSource',0
	.word	139
	.byte	4,3,35,136,1,12
	.byte	'Pcpn',0
	.word	139
	.byte	4,3,35,140,1,12
	.byte	'Pie',0
	.word	139
	.byte	4,3,35,144,1,12
	.byte	'MpuRegionForStackLow',0
	.word	139
	.byte	4,3,35,148,1,12
	.byte	'MpuRegionForStackUpper',0
	.word	139
	.byte	4,3,35,152,1,12
	.byte	'RawPCXI',0
	.word	139
	.byte	4,3,35,156,1,0,10
	.word	12733
	.byte	13
	.byte	'Os_ExceptionContextRefType',0,3,254,1,60
	.word	12981
	.byte	5,3,250,6,9,1,6
	.byte	'OS_CORESTARTSTATE_START_UNREQUESTED',0,0,6
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_ASR',0,1,6
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_NONASR',0,2,6
	.byte	'OS_CORESTARTSTATE_STARTED_ASR',0,3,6
	.byte	'OS_CORESTARTSTATE_STARTED_NONASR',0,4,0,10
	.word	13022
	.byte	20
	.byte	'Os_ParamType_Tag',0,24,88,7,8,12
	.byte	'ParamAlarmBaseRefType',0
	.word	10771
	.byte	4,2,35,0,12
	.byte	'ParamAlarmType',0
	.word	10797
	.byte	1,2,35,0,12
	.byte	'ParamAppModeType',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ParamApplicationStateRefType',0
	.word	10957
	.byte	4,2,35,0,12
	.byte	'ParamApplicationStateType',0
	.word	5421
	.byte	1,2,35,0,12
	.byte	'ParamApplicationType',0
	.word	10990
	.byte	1,2,35,0,12
	.byte	'Paramboolean',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ParambooleanRefType',0
	.word	11089
	.byte	4,2,35,0,12
	.byte	'ParamCoreIdType',0
	.word	6257
	.byte	1,2,35,0,12
	.byte	'ParamCounterType',0
	.word	11094
	.byte	1,2,35,0,12
	.byte	'ParamEventMaskType',0
	.word	11136
	.byte	8,2,35,0,12
	.byte	'ParamEventMaskRefType',0
	.word	11162
	.byte	4,2,35,0,12
	.byte	'ParamISRType',0
	.word	11167
	.byte	1,2,35,0,12
	.byte	'ParamIdleModeType',0
	.word	11241
	.byte	1,2,35,0,12
	.byte	'ParamMemorySizeType',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamMemoryStartAddressType',0
	.word	11299
	.byte	4,2,35,0,12
	.byte	'ParamResourceType',0
	.word	11331
	.byte	1,2,35,0,12
	.byte	'ParamRestartType',0
	.word	11373
	.byte	1,2,35,0,12
	.byte	'ParamScheduleTableStatusRefType',0
	.word	11571
	.byte	4,2,35,0,12
	.byte	'ParamScheduleTableStatusType',0
	.word	11426
	.byte	1,2,35,0,12
	.byte	'ParamScheduleTableType',0
	.word	11607
	.byte	1,2,35,0,12
	.byte	'ParamSpinlockIdType',0
	.word	11632
	.byte	1,2,35,0,12
	.byte	'ParamStatusType',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ParamStatusRefType',0
	.word	11680
	.byte	4,2,35,0,12
	.byte	'ParamStd_VersionInfoRefType',0
	.word	11806
	.byte	4,2,35,0,12
	.byte	'ParamTaskRefType',0
	.word	11956
	.byte	4,2,35,0,12
	.byte	'ParamTaskStateRefType',0
	.word	12029
	.byte	4,2,35,0,12
	.byte	'ParamTaskStateType',0
	.word	11977
	.byte	1,2,35,0,12
	.byte	'ParamTaskType',0
	.word	11811
	.byte	1,2,35,0,12
	.byte	'ParamTickRefType',0
	.word	12060
	.byte	4,2,35,0,12
	.byte	'ParamTickType',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamTrustedFunctionIndexType',0
	.word	12081
	.byte	1,2,35,0,12
	.byte	'ParamTrustedFunctionParameterRefType',0
	.word	12122
	.byte	4,2,35,0,12
	.byte	'ParamTryToGetSpinlockRefType',0
	.word	12226
	.byte	4,2,35,0,12
	.byte	'ParamTryToGetSpinlockConstRefType',0
	.word	12236
	.byte	4,2,35,0,12
	.byte	'Paramuint32',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamVoidRefType',0
	.word	11294
	.byte	4,2,35,0,12
	.byte	'ParamObjectTypeType',0
	.word	12241
	.byte	1,2,35,0,12
	.byte	'ParamOs_NonTrustedFunctionIndexType',0
	.word	12366
	.byte	1,2,35,0,12
	.byte	'ParamOs_NonTrustedFunctionParameterRefType',0
	.word	12405
	.byte	4,2,35,0,12
	.byte	'ParamOs_FastTrustedFunctionIndexType',0
	.word	12452
	.byte	1,2,35,0,12
	.byte	'ParamOs_FastTrustedFunctionParameterRefType',0
	.word	12492
	.byte	4,2,35,0,12
	.byte	'ParamExceptionSourceIdType',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamInterruptSourceIdType',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamExceptionSourceIdRefType',0
	.word	12545
	.byte	4,2,35,0,12
	.byte	'ParamInterruptSourceIdRefType',0
	.word	12587
	.byte	4,2,35,0,12
	.byte	'ParamObjectIdType',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamPeripheralIdType',0
	.word	12624
	.byte	1,2,35,0,12
	.byte	'ParamErrorInformationRefType',0
	.word	12660
	.byte	4,2,35,0,12
	.byte	'ParamHookIdType',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamBarrierIdType',0
	.word	12696
	.byte	1,2,35,0,12
	.byte	'ParamExceptionContextRefType',0
	.word	12986
	.byte	4,2,35,0,12
	.byte	'ParamCoreStartStateRefType',0
	.word	13217
	.byte	4,2,35,0,0,15,24
	.word	13222
	.byte	16,2,0,11
	.byte	'Os_ErrorParamsType_Tag',0,23,171,1,8,24,12
	.byte	'Parameter',0
	.word	14956
	.byte	24,2,35,0,0,13
	.byte	'Os_AddressOfConstType',0,3,241,6,43
	.word	11294
	.byte	11
	.byte	'Os_ErrorType_Tag',0,23,177,1,8,32,12
	.byte	'ErrorDetails',0
	.word	10632
	.byte	4,2,35,0,12
	.byte	'Parameters',0
	.word	14965
	.byte	24,2,35,4,12
	.byte	'ExceptionInstructionAddress',0
	.word	15014
	.byte	4,2,35,28,0,5,27,97,9,1,6
	.byte	'OS_UNHANDLEDEVENTREPORT_NOTAVAILABLE',0,0,6
	.byte	'OS_UNHANDLEDEVENTREPORT_AVAILABLE',0,1,0,14,28,123,9,4,12
	.byte	'InHookFlags',0
	.word	139
	.byte	4,2,35,0,0,13
	.byte	'Os_StackConfigRefType',0,17,156,2,56
	.word	4447
	.byte	11
	.byte	'Os_CoreAsrType_Tag',0,17,213,2,8,124,12
	.byte	'IntApiState',0
	.word	7257
	.byte	28,2,35,0,12
	.byte	'InterruptedThreadsCounter',0
	.word	7426
	.byte	2,2,35,28,12
	.byte	'InterruptedThreads',0
	.word	7478
	.byte	40,2,35,32,12
	.byte	'LastError',0
	.word	15045
	.byte	32,2,35,72,12
	.byte	'LastUnhandledIrq',0
	.word	139
	.byte	4,2,35,104,12
	.byte	'UnhandledIrqReported',0
	.word	15148
	.byte	1,2,35,108,12
	.byte	'LastUnhandledExc',0
	.word	139
	.byte	4,2,35,110,12
	.byte	'UnhandledExcReported',0
	.word	15148
	.byte	1,2,35,114,12
	.byte	'IdleMode',0
	.word	11241
	.byte	1,2,35,115,12
	.byte	'HookInfo',0
	.word	15229
	.byte	4,2,35,116,12
	.byte	'CurrentStack',0
	.word	15256
	.byte	4,2,35,120,0,10
	.word	15287
	.byte	14,30,114,9,4,12
	.byte	'AllocationMask',0
	.word	139
	.byte	4,2,35,0,0,10
	.word	15591
	.byte	10
	.word	139
	.byte	14,30,123,9,12,12
	.byte	'Dyn',0
	.word	15621
	.byte	4,2,35,0,12
	.byte	'Data',0
	.word	15626
	.byte	4,2,35,4,12
	.byte	'Size',0
	.word	4825
	.byte	2,2,35,8,12
	.byte	'BitLength',0
	.word	4825
	.byte	2,2,35,10,0,5,31,105,9,1,6
	.byte	'OS_TASKSCHEDULE_ALLOWED',0,0,6
	.byte	'OS_TASKSCHEDULE_PROHIBITED',0,1,0,11
	.byte	'Os_TaskConfigType_Tag',0,31,143,1,8,80,12
	.byte	'Thread',0
	.word	.L317-.L32
	.byte	60,2,35,0,12
	.byte	'HomePriority',0
	.word	4825
	.byte	2,2,35,60,12
	.byte	'TaskId',0
	.word	11811
	.byte	1,2,35,62,12
	.byte	'RunningPriority',0
	.word	4825
	.byte	2,2,35,64,12
	.byte	'MaxActivations',0
	.word	3257
	.byte	1,2,35,66,12
	.byte	'AutostartModes',0
	.word	3257
	.byte	1,2,35,67,12
	.byte	'AccessingApplications',0
	.word	139
	.byte	4,2,35,68,12
	.byte	'NumScheduleEventsRoundRobin',0
	.word	139
	.byte	4,2,35,72,12
	.byte	'RoundRobinEnabled',0
	.word	3257
	.byte	1,2,35,76,12
	.byte	'IsExtended',0
	.word	3257
	.byte	1,2,35,77,12
	.byte	'Reschedule',0
	.word	15697
	.byte	1,2,35,78,0,9
	.word	15758
	.byte	10
	.word	16049
	.byte	11
	.byte	'Os_SchedulerType_Tag',0,29,181,1,8,16,12
	.byte	'NextPriority',0
	.word	4825
	.byte	2,2,35,0,12
	.byte	'NextTask',0
	.word	16054
	.byte	4,2,35,4,12
	.byte	'CurrentPriority',0
	.word	4825
	.byte	2,2,35,8,12
	.byte	'CurrentTask',0
	.word	16054
	.byte	4,2,35,12,0,10
	.word	16059
	.byte	14,32,75,9,8,12
	.byte	'ReadIdx',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'WriteIdx',0
	.word	139
	.byte	4,2,35,4,0,10
	.word	16178
	.byte	14,32,85,9,4,12
	.byte	'Value',0
	.word	16054
	.byte	4,2,35,0,0,10
	.word	16224
	.byte	14,32,92,9,12,12
	.byte	'Dyn',0
	.word	16219
	.byte	4,2,35,0,12
	.byte	'Buffer',0
	.word	16245
	.byte	4,2,35,4,12
	.byte	'Size',0
	.word	139
	.byte	4,2,35,8,0,9
	.word	16250
	.byte	10
	.word	16299
	.byte	11
	.byte	'Os_SchedulerConfigType_Tag',0,29,196,1,8,24,12
	.byte	'BitArray',0
	.word	15631
	.byte	12,2,35,0,12
	.byte	'Dyn',0
	.word	16173
	.byte	4,2,35,12,12
	.byte	'TaskQueues',0
	.word	16304
	.byte	4,2,35,16,12
	.byte	'NumberOfPriorities',0
	.word	4825
	.byte	2,2,35,20,0,9
	.word	16309
	.byte	10
	.word	16422
	.byte	5,33,97,9,1,6
	.byte	'Os_HookTaskReturn_ToCallerTask',0,0,6
	.byte	'Os_HookTaskReturn_WithSchedule',0,1,6
	.byte	'Os_HookTaskReturn_BeginScheduling',0,2,0,11
	.byte	'Os_HookConfigType_Tag',0,33,162,1,8,76,12
	.byte	'Thread',0
	.word	.L317-.L32
	.byte	60,2,35,0,12
	.byte	'HookTypeFlag',0
	.word	139
	.byte	4,2,35,60,12
	.byte	'NestingMask',0
	.word	139
	.byte	4,2,35,64,12
	.byte	'Id',0
	.word	139
	.byte	4,2,35,68,12
	.byte	'TaskReturn',0
	.word	16432
	.byte	1,2,35,72,0,21,1,1,10
	.word	16660
	.byte	13
	.byte	'Os_HookVoidHookCbkType',0,33,112,9
	.word	16663
	.byte	11
	.byte	'Os_HookCallbackConfigType_Tag',0,33,195,1,8,80,12
	.byte	'Hook',0
	.word	16540
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	16668
	.byte	4,2,35,76,0,9
	.word	16699
	.byte	10
	.word	16768
	.byte	22,1,1,23
	.word	3257
	.byte	0,10
	.word	16778
	.byte	13
	.byte	'Os_HookStatusHookCbkType',0,33,109,9
	.word	16787
	.byte	11
	.byte	'Os_HookStatusHookConfigType_Tag',0,33,183,1,8,80,12
	.byte	'Hook',0
	.word	16540
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	16792
	.byte	4,2,35,76,0,9
	.word	16825
	.byte	10
	.word	16896
	.byte	5,3,237,5,9,1,6
	.byte	'PRO_IGNORE',0,0,6
	.byte	'PRO_IGNORE_EXCEPTION',0,1,6
	.byte	'PRO_TERMINATETASKISR',0,2,6
	.byte	'PRO_TERMINATEAPPL',0,3,6
	.byte	'PRO_TERMINATEAPPL_RESTART',0,4,6
	.byte	'PRO_SHUTDOWN',0,5,6
	.byte	'OS_PROTECTIONREACTION_COUNT',0,6,0,24
	.word	16906
	.byte	1,1,23
	.word	3257
	.byte	0,10
	.word	17065
	.byte	13
	.byte	'Os_HookProtectionHookCbkType',0,33,115,9
	.word	17078
	.byte	11
	.byte	'Os_HookProtectionHookConfigType_Tag',0,33,207,1,8,80,12
	.byte	'Hook',0
	.word	16540
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	17083
	.byte	4,2,35,76,0,9
	.word	17120
	.byte	10
	.word	17195
	.byte	13
	.byte	'Os_HookInitHookCbkType',0,33,118,9
	.word	16787
	.byte	11
	.byte	'Os_HookInitHookConfigType_Tag',0,33,218,1,8,80,12
	.byte	'Hook',0
	.word	16540
	.byte	76,2,35,0,12
	.byte	'Callback',0
	.word	17205
	.byte	4,2,35,76,0,9
	.word	17236
	.byte	10
	.word	17305
	.byte	9
	.word	16540
	.byte	10
	.word	17315
	.byte	13
	.byte	'Os_HookConfigRefType',0,28,133,1,55
	.word	17320
	.byte	9
	.word	17325
	.byte	10
	.word	17355
	.byte	13
	.byte	'Os_AppConfigRefType',0,17,128,3,54
	.word	.L318-.L32
	.byte	9
	.word	17365
	.byte	10
	.word	17394
	.byte	11
	.byte	'Os_ResourceConfigType_Tag',0,34,171,1,8,20,12
	.byte	'Lock',0
	.word	4587
	.byte	12,2,35,0,12
	.byte	'Core',0
	.word	.L319-.L32
	.byte	4,2,35,12,12
	.byte	'ResourceId',0
	.word	11331
	.byte	1,2,35,16,12
	.byte	'CeilingPriority',0
	.word	4825
	.byte	2,2,35,18,0,9
	.word	17404
	.byte	10
	.word	17510
	.byte	13
	.byte	'Os_ResourceConfigRefType',0,17,252,2,59
	.word	17515
	.byte	9
	.word	17520
	.byte	10
	.word	17554
	.byte	11
	.byte	'Os_Hal_CoreAsrConfigType_Tag',0,7,127,8,4,12
	.byte	'CoreId',0
	.word	139
	.byte	4,2,35,0,0,9
	.word	17564
	.byte	10
	.word	17615
	.byte	14,36,68,9,8,12
	.byte	'StartAddress',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'EndAddress',0
	.word	139
	.byte	4,2,35,4,0,9
	.word	17625
	.byte	10
	.word	17673
	.byte	15,24
	.word	139
	.byte	16,5,0,11
	.byte	'Os_Hal_MpCoreConfigType_Tag',0,36,93,8,88,12
	.byte	'MpuDataRegionStartSlot',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'MpuDataRegionCount',0
	.word	3257
	.byte	1,2,35,1,12
	.byte	'MpuDataRegions',0
	.word	17678
	.byte	4,2,35,4,12
	.byte	'MpuDataRegionReadEnable',0
	.word	17683
	.byte	24,2,35,8,12
	.byte	'MpuDataRegionWriteEnable',0
	.word	17683
	.byte	24,2,35,32,12
	.byte	'MpuCodeRegionStartSlot',0
	.word	3257
	.byte	1,2,35,56,12
	.byte	'MpuCodeRegionCount',0
	.word	3257
	.byte	1,2,35,57,12
	.byte	'MpuCodeRegions',0
	.word	17678
	.byte	4,2,35,60,12
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	17683
	.byte	24,2,35,64,0,9
	.word	17692
	.byte	10
	.word	17999
	.byte	11
	.byte	'Os_MpCoreConfigType_Tag',0,35,124,8,4,12
	.byte	'HwConfig',0
	.word	18004
	.byte	4,2,35,0,0,9
	.word	18009
	.byte	10
	.word	18057
	.byte	11
	.byte	'Os_CounterCharacteristicsConfigType_Tag',0,39,164,1,8,20,12
	.byte	'MaxAllowedValue',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'MaxCountingValue',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'MaxDifferentialValue',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'MinCycle',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'TicksPerBase',0
	.word	139
	.byte	4,2,35,16,0,11
	.byte	'Os_JobType_Tag',0,41,78,8,4,12
	.byte	'ExpirationTimestamp',0
	.word	139
	.byte	4,2,35,0,0,10
	.word	18235
	.byte	9
	.word	.L320-.L32
	.byte	10
	.word	18290
	.byte	9
	.word	.L321-.L32
	.byte	10
	.word	18300
	.byte	22,1,1,23
	.word	18305
	.byte	0,10
	.word	18310
	.byte	13
	.byte	'Os_JobCallbackType',0,41,94,9
	.word	18319
.L321:
	.byte	11
	.byte	'Os_JobConfigType_Tag',0,41,98,8,12,12
	.byte	'Dyn',0
	.word	18285
	.byte	4,2,35,0,12
	.byte	'Counter',0
	.word	18295
	.byte	4,2,35,4,12
	.byte	'Callback',0
	.word	18324
	.byte	4,2,35,8,0,9
	.word	18351
	.byte	10
	.word	18426
	.byte	14,40,77,9,4,12
	.byte	'Data',0
	.word	18431
	.byte	4,2,35,0,0,10
	.word	18436
	.byte	14,40,84,9,2,12
	.byte	'QueueUsage',0
	.word	4825
	.byte	2,2,35,0,0,10
	.word	18461
	.byte	14,40,91,9,12,12
	.byte	'Queue',0
	.word	18456
	.byte	4,2,35,0,12
	.byte	'Dyn',0
	.word	18487
	.byte	4,2,35,4,12
	.byte	'QueueSize',0
	.word	4825
	.byte	2,2,35,8,0,5,42,63,9,1,6
	.byte	'OS_TIMERTYPE_PERIODIC_FREE_RUNNING_TIMER',0,20,6
	.byte	'OS_TIMERTYPE_PERIODIC_TICK',0,39,6
	.byte	'OS_TIMERTYPE_SOFTWARE',0,195,0,6
	.byte	'OS_TIMERTYPE_HIGH_RESOLUTION',0,203,0,0
.L320:
	.byte	11
	.byte	'Os_CounterConfigType_Tag',0,39,209,1,8,48,12
	.byte	'Characteristics',0
	.word	18067
	.byte	20,2,35,0,12
	.byte	'JobQueue',0
	.word	18492
	.byte	12,2,35,20,12
	.byte	'DriverType',0
	.word	18545
	.byte	1,2,35,32,12
	.byte	'Core',0
	.word	.L319-.L32
	.byte	4,2,35,36,12
	.byte	'OwnerApplication',0
	.word	.L318-.L32
	.byte	4,2,35,40,12
	.byte	'AccessingApplications',0
	.word	139
	.byte	4,2,35,44,0,14,38,131,2,9,20,12
	.byte	'Value',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'Compare',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'ValueMask',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'HwLastCounterValue',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'HwTimeAtLogicalZero',0
	.word	139
	.byte	4,2,35,16,0,10
	.word	18846
	.byte	11
	.byte	'Os_Hal_TimerFrtConfigType_Tag',0,43,106,8,40,12
	.byte	'CounterRegisterAddress',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'CompareRegisterAddress',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'CMCONRegisterAddress',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'CMCONMask',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'CMCONValue',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'InterruptSRCRegisterAddress',0
	.word	139
	.byte	4,2,35,20,12
	.byte	'ICRRegisterAddress',0
	.word	139
	.byte	4,2,35,24,12
	.byte	'ICRMask',0
	.word	139
	.byte	4,2,35,28,12
	.byte	'ICRValue',0
	.word	139
	.byte	4,2,35,32,12
	.byte	'ReloadValue',0
	.word	139
	.byte	4,2,35,36,0,9
	.word	18966
	.byte	10
	.word	19256
	.byte	11
	.byte	'Os_TimerHrtConfigType_Tag',0,38,158,2,8,56,12
	.byte	'Counter',0
	.word	18680
	.byte	48,2,35,0,12
	.byte	'Dyn',0
	.word	18961
	.byte	4,2,35,48,12
	.byte	'HwConfig',0
	.word	19261
	.byte	4,2,35,52,0,9
	.word	19266
	.byte	10
	.word	19347
	.byte	11
	.byte	'Os_TpType_Tag',0,37,241,2,8,16,12
	.byte	'Snapshot',0
	.word	11136
	.byte	8,2,35,0,12
	.byte	'LastCounterValue',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'MonitoredThread',0
	.word	.L316-.L32
	.byte	4,2,35,12,0,10
	.word	19357
	.byte	11
	.byte	'Os_TpConfigType_Tag',0,37,128,3,8,8,12
	.byte	'Timer',0
	.word	19352
	.byte	4,2,35,0,12
	.byte	'Dyn',0
	.word	19447
	.byte	4,2,35,4,0,9
	.word	19452
	.byte	10
	.word	19507
	.byte	9
	.word	15256
	.byte	10
	.word	19517
	.byte	5,44,86,9,1,6
	.byte	'OS_COREASRCOREIDX_0',0,0,6
	.byte	'OS_COREASRCOREIDX_COUNT',0,1,0,14,46,191,1,9,4,12
	.byte	'SendIdx',0
	.word	4825
	.byte	2,2,35,0,12
	.byte	'ResultIdx',0
	.word	4825
	.byte	2,2,35,2,0,17
	.word	19581
	.byte	10
	.word	19624
	.byte	14,46,211,1,9,2,12
	.byte	'ReceiveIdx',0
	.word	4825
	.byte	2,2,35,0,0,17
	.word	19634
	.byte	9
	.word	19661
	.byte	10
	.word	19666
	.byte	5,47,77,9,1,6
	.byte	'OS_XSIGFUNCTIONIDX_USEDCOUNT',0,0,6
	.byte	'XSigFunctionIdx_ActivateTask',0,0,6
	.byte	'XSigFunctionIdx_CancelAlarm',0,1,6
	.byte	'XSigFunctionIdx_ControlIdle',0,2,6
	.byte	'XSigFunctionIdx_GetAlarm',0,3,6
	.byte	'XSigFunctionIdx_GetApplicationState',0,4,6
	.byte	'XSigFunctionIdx_GetCounterValue',0,5,6
	.byte	'XSigFunctionIdx_GetErrorHookStackUsage',0,6,6
	.byte	'XSigFunctionIdx_GetEvent',0,7,6
	.byte	'XSigFunctionIdx_GetISRStackUsage',0,8,6
	.byte	'XSigFunctionIdx_GetKernelStackUsage',0,9,6
	.byte	'XSigFunctionIdx_GetProtectionHookStackUsage',0,10,6
	.byte	'XSigFunctionIdx_GetScheduleTableStatus',0,11,6
	.byte	'XSigFunctionIdx_GetShutdownHookStackUsage',0,12,6
	.byte	'XSigFunctionIdx_GetStartupHookStackUsage',0,13,6
	.byte	'XSigFunctionIdx_GetTaskStackUsage',0,14,6
	.byte	'XSigFunctionIdx_GetTaskState',0,15,6
	.byte	'XSigFunctionIdx_HookCallCallback',0,16,6
	.byte	'XSigFunctionIdx_NextScheduleTable',0,17,6
	.byte	'XSigFunctionIdx_SetAbsAlarm',0,18,6
	.byte	'XSigFunctionIdx_SetEvent',0,19,6
	.byte	'XSigFunctionIdx_SetRelAlarm',0,20,6
	.byte	'XSigFunctionIdx_ShutdownAllCores',0,21,6
	.byte	'XSigFunctionIdx_StartScheduleTableAbs',0,22,6
	.byte	'XSigFunctionIdx_StartScheduleTableRel',0,23,6
	.byte	'XSigFunctionIdx_StopScheduleTable',0,24,6
	.byte	'XSigFunctionIdx_TerminateApplication',0,25,6
	.byte	'OS_XSIGFUNCTIONIDX_COUNT',0,26,0,15,32
	.word	13222
	.byte	16,3,0,14,46,119,9,32,12
	.byte	'ParameterData',0
	.word	20660
	.byte	32,2,35,0,0,5,46,94,9,1,6
	.byte	'OS_XSIGSTATE_ASYNC_NACK',0,0,6
	.byte	'OS_XSIGSTATE_SYNC_NACK',0,1,6
	.byte	'OS_XSIGSTATE_SYNC_PENDING',0,2,6
	.byte	'OS_XSIGSTATE_ACK',0,3,0,11
	.byte	'Os_XSigSendDataType_Tag',0,46,151,1,8,48,12
	.byte	'FunctionIdx',0
	.word	19676
	.byte	1,2,35,0,12
	.byte	'ParameterData',0
	.word	20669
	.byte	32,2,35,4,12
	.byte	'Sender',0
	.word	.L316-.L32
	.byte	4,2,35,36,12
	.byte	'SenderApp',0
	.word	.L318-.L32
	.byte	4,2,35,40,12
	.byte	'Acknowledge',0
	.word	20698
	.byte	1,2,35,44,0,17
	.word	20802
	.byte	10
	.word	20933
	.byte	14,46,129,1,9,8,12
	.byte	'ParameterData',0
	.word	13222
	.byte	8,2,35,0,0,14,46,140,1,9,12,12
	.byte	'Status',0
	.word	240
	.byte	2,2,35,0,12
	.byte	'OutputParameter',0
	.word	20943
	.byte	8,2,35,4,0,11
	.byte	'Os_XSigRecvDataType_Tag',0,46,175,1,8,12,12
	.byte	'ReturnData',0
	.word	20973
	.byte	12,2,35,0,0,17
	.word	21021
	.byte	10
	.word	21072
	.byte	14,46,104,9,12,12
	.byte	'SendData',0
	.word	20938
	.byte	4,2,35,0,12
	.byte	'RecvData',0
	.word	21077
	.byte	4,2,35,4,12
	.byte	'Idx',0
	.word	4825
	.byte	2,2,35,8,0,9
	.word	21082
	.byte	10
	.word	21137
	.byte	14,46,221,1,9,16,12
	.byte	'Dyn',0
	.word	19629
	.byte	4,2,35,0,12
	.byte	'Receive',0
	.word	19671
	.byte	4,2,35,4,12
	.byte	'Buffer',0
	.word	21142
	.byte	4,2,35,8,12
	.byte	'BufferSize',0
	.word	4825
	.byte	2,2,35,12,0,11
	.byte	'Os_IsrConfigType_Tag',0,18,189,1,8,68,12
	.byte	'Thread',0
	.word	.L317-.L32
	.byte	60,2,35,0,12
	.byte	'SourceConfig',0
	.word	6201
	.byte	4,2,35,60,12
	.byte	'Id',0
	.word	11167
	.byte	1,2,35,64,12
	.byte	'IsEnabledOnInitialization',0
	.word	3257
	.byte	1,2,35,65,0,9
	.word	.L322-.L32
	.byte	10
	.word	21333
	.byte	9
	.word	20669
	.byte	10
	.word	21343
	.byte	10
	.word	20943
	.byte	24
	.word	240
	.byte	1,1,23
	.word	21338
	.byte	23
	.word	21348
	.byte	23
	.word	21353
	.byte	0,10
	.word	21358
	.byte	13
	.byte	'Os_XSigFunctionType',0,45,177,1,9
	.word	21381
	.byte	14,45,186,1,9,4,12
	.byte	'FunctionRef',0
	.word	21386
	.byte	4,2,35,0,0,15,4
	.word	21415
	.byte	16,0,0,11
	.byte	'Os_XSigFunctionTableConfigType_Tag',0,45,194,1,8,4,12
	.byte	'FunctionDescription',0
	.word	21443
	.byte	4,2,35,0,0,9
	.word	21452
	.byte	10
	.word	21523
	.byte	17
	.word	19634
	.byte	10
	.word	21533
	.byte	17
	.word	19581
	.byte	9
	.word	21543
	.byte	10
	.word	21548
	.byte	14,46,238,1,9,16,12
	.byte	'Dyn',0
	.word	21538
	.byte	4,2,35,0,12
	.byte	'Send',0
	.word	21553
	.byte	4,2,35,4,12
	.byte	'Buffer',0
	.word	21142
	.byte	4,2,35,8,12
	.byte	'BufferSize',0
	.word	4825
	.byte	2,2,35,12,0,11
	.byte	'Os_XSigRecvPortConfigType_Tag',0,45,202,1,8,20,12
	.byte	'RecvChannel',0
	.word	21558
	.byte	16,2,35,0,12
	.byte	'SendPort',0
	.word	.L323-.L32
	.byte	4,2,35,16,0,9
	.word	21628
	.byte	10
	.word	21704
	.byte	13
	.byte	'Os_XSigRecvPortConfigRefType',0,48,81,65
	.word	21709
	.byte	9
	.word	21714
	.byte	10
	.word	21751
	.byte	11
	.byte	'Os_Hal_XSigInterruptConfigType_Tag',0,7,149,1,8,4,12
	.byte	'ConfigData',0
	.word	6013
	.byte	4,2,35,0,0,9
	.word	21761
	.byte	10
	.word	21823
	.byte	11
	.byte	'Os_XSigIsrConfigType_Tag',0,45,232,1,8,84,12
	.byte	'IsrCfg',0
	.word	21220
	.byte	68,2,35,0,12
	.byte	'FunctionTable',0
	.word	21528
	.byte	4,2,35,68,12
	.byte	'RecvPortRefs',0
	.word	21756
	.byte	4,2,35,72,12
	.byte	'RecvPortCount',0
	.word	4825
	.byte	2,2,35,76,12
	.byte	'HwConfig',0
	.word	21828
	.byte	4,2,35,80,0,9
	.word	21833
	.byte	10
	.word	21967
	.byte	11
	.byte	'Os_XSigSendPortConfigType_Tag',0,45,213,1,8,28,12
	.byte	'SendChannel',0
	.word	21147
	.byte	16,2,35,0,12
	.byte	'XSigIsr',0
	.word	21972
	.byte	4,2,35,16,12
	.byte	'RecvPort',0
	.word	21709
	.byte	4,2,35,20,12
	.byte	'SendCore',0
	.word	.L319-.L32
	.byte	4,2,35,24,0,9
	.word	21977
.L323:
	.byte	10
	.word	22088
	.byte	15,4
	.word	22093
	.byte	16,0,0,13
	.byte	'Os_XSigIsrConfigRefType',0,48,68,60
	.word	21972
	.byte	9
	.word	22107
	.byte	10
	.word	22139
	.byte	11
	.byte	'Os_XSigConfigType_Tag',0,45,135,2,8,12,12
	.byte	'SendPorts',0
	.word	22098
	.byte	4,2,35,0,12
	.byte	'RecvIsrRefs',0
	.word	22144
	.byte	4,2,35,4,12
	.byte	'RecvIsrCount',0
	.word	4825
	.byte	2,2,35,8,0,9
	.word	22149
	.byte	10
	.word	22240
	.byte	5,50,53,9,1,6
	.byte	'OS_IOCLOCKMODE_NONE',0,0,6
	.byte	'OS_IOCLOCKMODE_INTERRUPTS',0,1,6
	.byte	'OS_IOCLOCKMODE_SPINLOCKS',0,2,6
	.byte	'OS_IOCLOCKMODE_ALL',0,3,0,5,50,67,9,1,6
	.byte	'OS_IOCCHANNELSTATE_DISABLED',0,0,6
	.byte	'OS_IOCCHANNELSTATE_ENABLED',0,1,0,11
	.byte	'Os_IocType_Tag',0,49,146,3,8,1,12
	.byte	'State',0
	.word	22354
	.byte	1,2,35,0,0,17
	.word	22419
	.byte	10
	.word	22456
	.byte	5,49,154,3,9,1,6
	.byte	'Ioc08Receive',0,0,6
	.byte	'Ioc08MultiReceive',0,1,6
	.byte	'Ioc08Send',0,2,6
	.byte	'Ioc16Receive',0,3,6
	.byte	'Ioc16MultiReceive',0,4,6
	.byte	'Ioc16Send',0,5,6
	.byte	'Ioc32Receive',0,6,6
	.byte	'Ioc32MultiReceive',0,7,6
	.byte	'Ioc32Send',0,8,6
	.byte	'IocRefReceive',0,9,6
	.byte	'IocRefMultiReceive',0,10,6
	.byte	'IocRefSend',0,11,6
	.byte	'IocRead',0,12,6
	.byte	'IocWrite',0,13,0,11
	.byte	'Os_IocConfigType_Tag',0,49,174,3,8,20,12
	.byte	'Spinlock',0
	.word	5388
	.byte	4,2,35,0,12
	.byte	'LockMode',0
	.word	22250
	.byte	1,2,35,4,12
	.byte	'Dyn',0
	.word	22461
	.byte	4,2,35,8,12
	.byte	'SubClass',0
	.word	22466
	.byte	1,2,35,12,12
	.byte	'AccessingApplications',0
	.word	139
	.byte	4,2,35,14,0,9
	.word	22685
	.byte	10
	.word	22811
	.byte	13
	.byte	'Os_IocConfigRefType',0,17,160,2,54
	.word	22816
	.byte	9
	.word	22821
	.byte	10
	.word	22850
	.byte	5,51,117,9,1,6
	.byte	'OS_BARRIERATTENDEESTATE_DETACHED',0,0,6
	.byte	'OS_BARRIERATTENDEESTATE_ATTACHED',0,1,0,11
	.byte	'Os_BarrierBaseType_Tag',0,51,131,1,8,2,12
	.byte	'AttendeeState',0
	.word	22860
	.byte	1,2,35,0,12
	.byte	'Counter',0
	.word	3257
	.byte	1,2,35,1,0,17
	.word	22936
	.byte	10
	.word	23006
	.byte	13
	.byte	'Os_BarrierAttendeeRefType',0,51,115,69
	.word	.L324-.L32
	.byte	9
	.word	23016
	.byte	10
	.word	23050
	.byte	11
	.byte	'Os_BarrierBaseConfigType_Tag',0,51,142,1,8,16,12
	.byte	'Dyn',0
	.word	23011
	.byte	4,2,35,0,12
	.byte	'AttendeeRefs',0
	.word	23055
	.byte	4,2,35,4,12
	.byte	'AttendeeCount',0
	.word	3257
	.byte	1,2,35,8,12
	.byte	'TaskPtr',0
	.word	16054
	.byte	4,2,35,12,0,9
	.word	23060
.L324:
	.byte	10
	.word	23171
	.byte	13
	.byte	'Os_BarrierBaseConfigRefType',0,52,62,62
	.word	23176
	.byte	9
	.word	23181
	.byte	10
	.word	23217
	.byte	11
	.byte	'Os_Hal_ContextFpuContextType_Tag',0,5,200,1,9,4,12
	.byte	'DummyFpuFlagRegister',0
	.word	139
	.byte	4,2,35,0,0,11
	.byte	'Os_ThreadClassType_Tag',0,8,109,8,4,12
	.byte	'InitialFpuContext',0
	.word	23227
	.byte	4,2,35,0,0,10
	.word	23297
	.byte	9
	.word	21220
	.byte	10
	.word	23358
	.byte	13
	.byte	'Os_IsrConfigRefType',0,53,66,54
	.word	23363
	.byte	9
	.word	23368
	.byte	10
	.word	23396
	.byte	11
	.byte	'Os_CoreAsrConfigType_Tag',0,17,133,3,8,148,1,12
	.byte	'Core',0
	.word	6890
	.byte	24,2,35,0,12
	.byte	'Dyn',0
	.word	15586
	.byte	4,2,35,24,12
	.byte	'Scheduler',0
	.word	16427
	.byte	4,2,35,28,12
	.byte	'IdleTask',0
	.word	16054
	.byte	4,2,35,32,12
	.byte	'KernelApp',0
	.word	.L318-.L32
	.byte	4,2,35,36,12
	.byte	'KernelStack',0
	.word	4447
	.byte	4,2,35,40,12
	.byte	'PreStartTask',0
	.word	16054
	.byte	4,2,35,44,12
	.byte	'StartupHookRef',0
	.word	16773
	.byte	4,2,35,48,12
	.byte	'ShutdownHookRef',0
	.word	16901
	.byte	4,2,35,52,12
	.byte	'ErrorHookRef',0
	.word	16901
	.byte	4,2,35,56,12
	.byte	'ProtectionHookRef',0
	.word	17200
	.byte	4,2,35,60,12
	.byte	'InitHookRef',0
	.word	17310
	.byte	4,2,35,64,12
	.byte	'HookRefs',0
	.word	17360
	.byte	4,2,35,68,12
	.byte	'HookCount',0
	.word	4825
	.byte	2,2,35,72,12
	.byte	'AppRefs',0
	.word	17399
	.byte	4,2,35,76,12
	.byte	'AppCount',0
	.word	4825
	.byte	2,2,35,80,12
	.byte	'ResourceRefs',0
	.word	17559
	.byte	4,2,35,84,12
	.byte	'ResourceCount',0
	.word	4825
	.byte	2,2,35,88,12
	.byte	'HwConfig',0
	.word	17620
	.byte	4,2,35,92,12
	.byte	'MemoryProtection',0
	.word	18062
	.byte	4,2,35,96,12
	.byte	'TimingProtection',0
	.word	19512
	.byte	4,2,35,100,12
	.byte	'StackRefs',0
	.word	19522
	.byte	4,2,35,104,12
	.byte	'StackCount',0
	.word	4825
	.byte	2,2,35,108,12
	.byte	'CoreIdx',0
	.word	19527
	.byte	1,2,35,110,12
	.byte	'XSignal',0
	.word	22245
	.byte	4,2,35,112,12
	.byte	'IocRefs',0
	.word	22855
	.byte	4,2,35,116,12
	.byte	'IocCount',0
	.word	4825
	.byte	2,2,35,120,12
	.byte	'Barrier',0
	.word	23176
	.byte	4,2,35,124,12
	.byte	'BarrierRefs',0
	.word	23222
	.byte	4,3,35,128,1,12
	.byte	'BarrierCount',0
	.word	4825
	.byte	2,3,35,132,1,12
	.byte	'ThreadClass',0
	.word	23353
	.byte	4,3,35,136,1,12
	.byte	'IsrRefs',0
	.word	23401
	.byte	4,3,35,140,1,12
	.byte	'IsrCount',0
	.word	4825
	.byte	2,3,35,144,1,0,9
	.word	23406
.L319:
	.byte	10
	.word	24100
	.byte	13
	.byte	'Os_TaskConfigRefType',0,16,100,55
	.word	16054
	.byte	9
	.word	24110
	.byte	10
	.word	24139
	.byte	11
	.byte	'Os_IsrCat1ConfigType_Tag',0,18,207,1,8,4,12
	.byte	'SourceConfig',0
	.word	6201
	.byte	4,2,35,0,0,9
	.word	24149
	.byte	10
	.word	24203
	.byte	13
	.byte	'Os_IsrCat1ConfigRefType',0,53,69,58
	.word	24208
	.byte	9
	.word	24213
	.byte	10
	.word	24245
	.byte	13
	.byte	'Os_CounterConfigRefType',0,16,103,58
	.word	18295
	.byte	9
	.word	24255
	.byte	10
	.word	24287
	.byte	5,54,107,9,1,6
	.byte	'OS_ALARMMODE_ABSOLUTE',0,0,6
	.byte	'OS_ALARMMODE_RELATIVE',0,1,0,14,54,127,9,12,12
	.byte	'AlarmTime',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'Cycle',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'ApplicationModes',0
	.word	3257
	.byte	1,2,35,8,12
	.byte	'AlarmMode',0
	.word	24297
	.byte	1,2,35,9,0,11
	.byte	'Os_AlarmConfigType_Tag',0,54,169,1,8,32,12
	.byte	'Job',0
	.word	18351
	.byte	12,2,35,0,12
	.byte	'Autostart',0
	.word	24351
	.byte	12,2,35,12,12
	.byte	'AccessingApplications',0
	.word	139
	.byte	4,2,35,24,12
	.byte	'OwnerApplication',0
	.word	.L318-.L32
	.byte	4,2,35,28,0,9
	.word	24436
	.byte	10
	.word	24555
	.byte	13
	.byte	'Os_AlarmConfigRefType',0,16,106,56
	.word	24560
	.byte	9
	.word	24565
	.byte	10
	.word	24595
	.byte	5,55,135,2,9,1,6
	.byte	'OS_SCHT_AUTOSTART_NON',0,0,6
	.byte	'OS_SCHT_AUTOSTART_RELATIVE',0,1,6
	.byte	'OS_SCHT_AUTOSTART_SYNCHRON',0,2,6
	.byte	'OS_SCHT_AUTOSTART_ABSOLUTE',0,3,0,11
	.byte	'Os_SchTAutostartConfigType_Tag',0,55,145,2,8,6,12
	.byte	'StartTime',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'AutostartModes',0
	.word	24605
	.byte	1,2,35,4,12
	.byte	'ApplicationModes',0
	.word	3257
	.byte	1,2,35,5,0,5,55,251,1,9,1,6
	.byte	'OS_SCHT_SYNC_KIND_NON',0,0,6
	.byte	'OS_SCHT_SYNC_KIND_IMPLICIT',0,1,6
	.byte	'OS_SCHT_SYNC_KIND_EXPLICIT',0,2,0,5,55,186,1,9,1,6
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE',0,0,6
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC',0,1,6
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC_ZERO',0,2,6
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_CYCLIC',0,3,6
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SINGLE_SHOT',0,4,0,11
	.byte	'Os_SchTExPoActionTaskConfigType_Tag',0,55,178,1,8,4,12
	.byte	'Task',0
	.word	16054
	.byte	4,2,35,0,0,9
	.word	25100
	.byte	10
	.word	25157
	.byte	11
	.byte	'Os_SchTExPoActionEventConfigType_Tag',0,55,166,1,8,12,12
	.byte	'Task',0
	.word	16054
	.byte	4,2,35,0,12
	.byte	'EventMask',0
	.word	11136
	.byte	8,2,35,4,0,9
	.word	25167
	.byte	10
	.word	25244
	.byte	11
	.byte	'Os_SchTExPoConfigType_Tag',0,55,202,1,8,28,12
	.byte	'Next',0
	.word	.L325-.L32
	.byte	4,2,35,0,12
	.byte	'Kind',0
	.word	24919
	.byte	1,2,35,4,12
	.byte	'Tasks',0
	.word	25162
	.byte	4,2,35,8,12
	.byte	'TaskCount',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'Events',0
	.word	25249
	.byte	4,2,35,16,12
	.byte	'EventCount',0
	.word	139
	.byte	4,2,35,20,12
	.byte	'RelOffsetToNext',0
	.word	139
	.byte	4,2,35,24,0,9
	.word	25254
.L325:
	.byte	10
	.word	25410
	.byte	11
	.byte	'Os_SchTConfigType_Tag',0,55,156,2,8,36,12
	.byte	'Job',0
	.word	18351
	.byte	12,2,35,0,12
	.byte	'Autostart',0
	.word	24723
	.byte	6,2,35,12,12
	.byte	'SyncKind',0
	.word	24830
	.byte	1,2,35,18,12
	.byte	'AccessingApplications',0
	.word	139
	.byte	4,2,35,20,12
	.byte	'OwnerApplication',0
	.word	.L318-.L32
	.byte	4,2,35,24,12
	.byte	'ExPoHead',0
	.word	25415
	.byte	4,2,35,28,12
	.byte	'InitialNext',0
	.word	.L326-.L32
	.byte	4,2,35,32,0,9
	.word	25420
.L326:
	.byte	10
	.word	25595
	.byte	13
	.byte	'Os_SchTConfigRefType',0,16,109,55
	.word	25600
	.byte	9
	.word	25605
	.byte	10
	.word	25634
	.byte	11
	.byte	'Os_Hal_MpAppConfigType_Tag',0,36,114,8,36,12
	.byte	'ProtectionSet',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'MpuDataRegionStartSlot',0
	.word	3257
	.byte	1,2,35,1,12
	.byte	'MpuDataRegionCount',0
	.word	3257
	.byte	1,2,35,2,12
	.byte	'MpuDataRegions',0
	.word	17678
	.byte	4,2,35,4,12
	.byte	'MpuDataRegionEnableMask',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'MpuDataRegionReadEnable',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'MpuDataRegionWriteEnable',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'MpuCodeRegionStartSlot',0
	.word	3257
	.byte	1,2,35,20,12
	.byte	'MpuCodeRegionCount',0
	.word	3257
	.byte	1,2,35,21,12
	.byte	'MpuCodeRegions',0
	.word	17678
	.byte	4,2,35,24,12
	.byte	'MpuCodeRegionEnableMask',0
	.word	139
	.byte	4,2,35,28,12
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	139
	.byte	4,2,35,32,0,9
	.word	25644
	.byte	10
	.word	26039
	.byte	11
	.byte	'Os_Hal_MpThreadConfigType_Tag',0,36,139,1,8,36,12
	.byte	'ProtectionSet',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'MpuDataRegionStartSlot',0
	.word	3257
	.byte	1,2,35,1,12
	.byte	'MpuDataRegionCount',0
	.word	3257
	.byte	1,2,35,2,12
	.byte	'MpuDataRegions',0
	.word	17678
	.byte	4,2,35,4,12
	.byte	'MpuDataRegionEnableMask',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'MpuDataRegionReadEnable',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'MpuDataRegionWriteEnable',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'MpuCodeRegionStartSlot',0
	.word	3257
	.byte	1,2,35,20,12
	.byte	'MpuCodeRegionCount',0
	.word	3257
	.byte	1,2,35,21,12
	.byte	'MpuCodeRegions',0
	.word	17678
	.byte	4,2,35,24,12
	.byte	'MpuCodeRegionEnableMask',0
	.word	139
	.byte	4,2,35,28,12
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	139
	.byte	4,2,35,32,0,9
	.word	26049
	.byte	10
	.word	26448
	.byte	11
	.byte	'Os_MpAccessRightsType_Tag',0,35,132,1,8,8,12
	.byte	'AppAccessRights',0
	.word	26044
	.byte	4,2,35,0,12
	.byte	'ThreadAccessRights',0
	.word	26453
	.byte	4,2,35,4,0,9
	.word	26458
	.byte	10
	.word	26544
	.byte	5,56,117,9,1,6
	.byte	'OS_SERVICE_TRUSTEDFUNCTION',0,0,6
	.byte	'OS_SERVICE_NONTRUSTEDFUNCTION',0,1,6
	.byte	'OS_SERVICE_FASTTRUSTEDFUNCTION',0,2,0,11
	.byte	'Os_ServiceConfigType_Tag',0,56,209,1,8,12,12
	.byte	'OwnerApplication',0
	.word	.L318-.L32
	.byte	4,2,35,0,12
	.byte	'MpAccessRights',0
	.word	26549
	.byte	4,2,35,4,12
	.byte	'ServiceType',0
	.word	26554
	.byte	1,2,35,8,0,9
	.word	26654
	.byte	10
	.word	26757
	.byte	13
	.byte	'Os_ServiceConfigRefType',0,16,112,58
	.word	26762
	.byte	9
	.word	26767
	.byte	10
	.word	26799
.L322:
	.byte	11
	.byte	'Os_AppConfigType_Tag',0,16,126,8,96,12
	.byte	'Dyn',0
	.word	5524
	.byte	4,2,35,0,12
	.byte	'Core',0
	.word	24105
	.byte	4,2,35,4,12
	.byte	'AccessRightId',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'TaskRefs',0
	.word	24144
	.byte	4,2,35,12,12
	.byte	'TaskCount',0
	.word	4825
	.byte	2,2,35,16,12
	.byte	'IsrCat2Refs',0
	.word	23401
	.byte	4,2,35,20,12
	.byte	'IsrCat2Count',0
	.word	4825
	.byte	2,2,35,24,12
	.byte	'IsrCat1Refs',0
	.word	24250
	.byte	4,2,35,28,12
	.byte	'IsrCat1Count',0
	.word	4825
	.byte	2,2,35,32,12
	.byte	'CounterRefs',0
	.word	24292
	.byte	4,2,35,36,12
	.byte	'CounterCount',0
	.word	4825
	.byte	2,2,35,40,12
	.byte	'AlarmRefs',0
	.word	24600
	.byte	4,2,35,44,12
	.byte	'AlarmCount',0
	.word	4825
	.byte	2,2,35,48,12
	.byte	'SchTRefs',0
	.word	25639
	.byte	4,2,35,52,12
	.byte	'SchTCount',0
	.word	4825
	.byte	2,2,35,56,12
	.byte	'ServiceFunctions',0
	.word	26804
	.byte	4,2,35,60,12
	.byte	'ServiceFunctionCount',0
	.word	4825
	.byte	2,2,35,64,12
	.byte	'StartupHookRef',0
	.word	16773
	.byte	4,2,35,68,12
	.byte	'ShutdownHookRef',0
	.word	16901
	.byte	4,2,35,72,12
	.byte	'ErrorHookRef',0
	.word	16901
	.byte	4,2,35,76,12
	.byte	'HookRefs',0
	.word	17360
	.byte	4,2,35,80,12
	.byte	'HookCount',0
	.word	4825
	.byte	2,2,35,84,12
	.byte	'RestartTask',0
	.word	16054
	.byte	4,2,35,88,12
	.byte	'IsTrusted',0
	.word	3257
	.byte	1,2,35,92,12
	.byte	'IsPrivileged',0
	.word	3257
	.byte	1,2,35,93,12
	.byte	'HasTimingProtectionDelay',0
	.word	3257
	.byte	1,2,35,94,12
	.byte	'Id',0
	.word	10990
	.byte	1,2,35,95,0,9
	.word	26809
.L318:
	.byte	10
	.word	27400
	.byte	14,56,126,9,8,12
	.byte	'FunctionIndex',0
	.word	12081
	.byte	1,2,35,0,12
	.byte	'FunctionParams',0
	.word	12122
	.byte	4,2,35,4,0,14,56,136,1,9,8,12
	.byte	'FunctionIndex',0
	.word	12366
	.byte	1,2,35,0,12
	.byte	'FunctionParams',0
	.word	12405
	.byte	4,2,35,4,0,14,56,146,1,9,8,12
	.byte	'FunctionIndex',0
	.word	12452
	.byte	1,2,35,0,12
	.byte	'FunctionParams',0
	.word	12492
	.byte	4,2,35,4,0,25,56,157,1,9,8,12
	.byte	'TrustedFunctionParameters',0
	.word	27410
	.byte	8,2,35,0,12
	.byte	'NonTrustedFunctionParameters',0
	.word	27463
	.byte	8,2,35,0,12
	.byte	'FastTrustedFunctionParameters',0
	.word	27517
	.byte	8,2,35,0,0,11
	.byte	'Os_ServiceCallType_Tag',0,56,167,1,8,56,12
	.byte	'PrevApplication',0
	.word	27405
	.byte	4,2,35,0,12
	.byte	'PrevMpAccessRights',0
	.word	26549
	.byte	4,2,35,4,12
	.byte	'PrevServiceCalls',0
	.word	.L327-.L32
	.byte	4,2,35,8,12
	.byte	'CallerContext',0
	.word	4179
	.byte	28,2,35,12,12
	.byte	'ServiceCallContext',0
	.word	4362
	.byte	4,2,35,40,12
	.byte	'Service',0
	.word	26762
	.byte	4,2,35,44,12
	.byte	'Parameters',0
	.word	27571
	.byte	8,2,35,48,0
.L327:
	.byte	10
	.word	27690
	.byte	11
	.byte	'Os_ThreadType_Tag',0,8,117,8,24,12
	.byte	'Locks',0
	.word	4683
	.byte	4,2,35,0,12
	.byte	'Spinlocks',0
	.word	5393
	.byte	4,2,35,4,12
	.byte	'Application',0
	.word	27405
	.byte	4,2,35,8,12
	.byte	'MpAccessRights',0
	.word	26549
	.byte	4,2,35,12,12
	.byte	'ServiceCalls',0
	.word	27887
	.byte	4,2,35,16,12
	.byte	'CallContext',0
	.word	4825
	.byte	2,2,35,20,0,10
	.word	27892
.L91:
	.byte	10
	.word	7257
	.byte	5,37,146,2,9,1,6
	.byte	'OS_TPTHREADKIND_OWNER',0,0,6
	.byte	'OS_TPTHREADKIND_HEIR',0,1,6
	.byte	'OS_TPTHREADKIND_TPISR',0,2,0,11
	.byte	'Os_TpThreadConfigType_Tag',0,37,202,2,8,1,12
	.byte	'ThreadKind',0
	.word	28048
	.byte	1,2,35,0,0,9
	.word	28126
	.byte	10
	.word	28179
	.byte	5,3,211,6,9,1,6
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,6
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,6
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,6
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,6
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,6
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,6
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,6
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,6
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,6
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,6
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,6
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,6
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,6
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,6
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,6
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,6
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,6
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,6
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,6
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,14,57,90,9,12,12
	.byte	'AddressStart',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'AddressEnd',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'AccessRights',0
	.word	28189
	.byte	1,2,35,8,0,9
	.word	28692
	.byte	10
	.word	28762
	.byte	11
	.byte	'Os_AccessCheckConfigType_Tag',0,57,99,8,8,12
	.byte	'Regions',0
	.word	28767
	.byte	4,2,35,0,12
	.byte	'RegionCount',0
	.word	3257
	.byte	1,2,35,4,0,9
	.word	28772
	.byte	10
	.word	28845
	.byte	10
	.word	23227
	.byte	13
	.byte	'Os_PreThreadHookCbkType',0,58,196,3,9
	.word	16663
.L317:
	.byte	11
	.byte	'Os_ThreadConfigType_Tag',0,8,141,1,8,60,12
	.byte	'ContextConfig',0
	.word	4067
	.byte	4,2,35,0,12
	.byte	'Context',0
	.word	4362
	.byte	4,2,35,4,12
	.byte	'Stack',0
	.word	4447
	.byte	4,2,35,8,12
	.byte	'Dyn',0
	.word	28038
	.byte	4,2,35,12,12
	.byte	'OwnerApplication',0
	.word	27405
	.byte	4,2,35,16,12
	.byte	'Core',0
	.word	24105
	.byte	4,2,35,20,12
	.byte	'IntApiState',0
	.word	28043
	.byte	4,2,35,24,12
	.byte	'TimeProtConfig',0
	.word	28184
	.byte	4,2,35,28,12
	.byte	'MpAccessRightsInitial',0
	.word	26549
	.byte	4,2,35,32,12
	.byte	'AccessRights',0
	.word	28850
	.byte	4,2,35,36,12
	.byte	'Trace',0
	.word	6781
	.byte	4,2,35,40,12
	.byte	'FpuContext',0
	.word	28855
	.byte	4,2,35,44,12
	.byte	'InitialCallContext',0
	.word	4825
	.byte	2,2,35,48,12
	.byte	'PreThreadHook',0
	.word	28860
	.byte	4,2,35,52,12
	.byte	'InitDuringStartUp',0
	.word	3257
	.byte	1,2,35,56,12
	.byte	'UsesFpu',0
	.word	3257
	.byte	1,2,35,57,0,9
	.word	28893
.L316:
	.byte	10
	.word	29260
	.byte	11
	.byte	'Os_Hal_Core2ThreadType_Tag',0,7,135,1,8,4,12
	.byte	'Thread',0
	.word	29265
	.byte	4,2,35,0,0,10
	.word	29270
	.byte	15,4
	.word	29320
	.byte	16,0,0,11
	.byte	'Os_Hal_Core2ThreadConfigType_Tag',0,7,143,1,8,4,12
	.byte	'Core2Thread',0
	.word	29325
	.byte	4,2,35,0,0,9
	.word	29334
	.byte	10
	.word	29395
	.byte	7
	.byte	'Os_Hal_CoreSetThread',0,3,6,130,1,1,1,1,8
	.byte	'Core2Thread',0,6,130,1,1
	.word	29400
	.byte	8
	.byte	'Thread',0,6,130,1,1
	.word	29265
	.byte	26,4,4,0,0,9
	.word	4587
	.byte	10
	.word	29476
	.byte	9
	.word	5210
	.byte	10
	.word	29486
	.byte	9
	.word	6081
	.byte	10
	.word	29496
	.byte	9
	.word	28893
	.byte	10
	.word	29506
	.byte	10
	.word	10694
	.byte	10
	.word	5421
	.byte	9
	.word	11283
	.byte	10
	.word	29526
	.byte	10
	.word	11426
	.byte	10
	.word	11811
	.byte	10
	.word	11977
	.byte	10
	.word	139
	.byte	10
	.word	11283
	.byte	10
	.word	11283
	.byte	10
	.word	11283
	.byte	10
	.word	139
	.byte	10
	.word	139
	.byte	10
	.word	10632
	.byte	10
	.word	12733
	.byte	9
	.word	11283
	.byte	10
	.word	29591
	.byte	9
	.word	4372
	.byte	10
	.word	29601
	.byte	10
	.word	16660
	.byte	10
	.word	16778
	.byte	10
	.word	17065
	.byte	10
	.word	16778
	.byte	9
	.word	16540
	.byte	10
	.word	29631
	.byte	9
	.word	26809
	.byte	10
	.word	29641
	.byte	9
	.word	17404
	.byte	10
	.word	29651
	.byte	10
	.word	18310
	.byte	10
	.word	21358
	.byte	9
	.word	21628
	.byte	10
	.word	29671
	.byte	9
	.word	21833
	.byte	10
	.word	29681
	.byte	9
	.word	22685
	.byte	10
	.word	29691
	.byte	9
	.word	23060
	.byte	10
	.word	29701
	.byte	9
	.word	23060
	.byte	10
	.word	29711
	.byte	9
	.word	21220
	.byte	10
	.word	29721
	.byte	9
	.word	15758
	.byte	10
	.word	29731
	.byte	9
	.word	24149
	.byte	10
	.word	29741
	.byte	9
	.word	18680
	.byte	10
	.word	29751
	.byte	9
	.word	24436
	.byte	10
	.word	29761
	.byte	9
	.word	25420
	.byte	10
	.word	29771
	.byte	9
	.word	26654
	.byte	10
	.word	29781
	.byte	10
	.word	16660
.L97:
	.byte	3
	.byte	'Os_Hal_CoreGetThread',0,3,6,169,1,1
	.word	29265
	.byte	1,1
.L98:
	.byte	8
	.byte	'Core2Thread',0,6,169,1,1
	.word	29400
.L100:
	.byte	26,4,0,0,3
	.byte	'Os_Hal_CountLeadingZeros',0,3,6,128,2,1
	.word	3257
	.byte	1,1,8
	.byte	'BitField',0,6,128,2,1
	.word	139
	.byte	4,0,3
	.byte	'Os_Hal_StackEndGet',0,3,6,141,2,1
	.word	4367
	.byte	1,1,8
	.byte	'LowAddress',0,6,141,2,1
	.word	4367
	.byte	8
	.byte	'HighAddress',0,6,141,2,1
	.word	4367
	.byte	4,0,17
	.word	139
	.byte	10
	.word	29985
	.byte	7
	.byte	'Os_Hal_SpinInit',0,3,6,216,2,1,1,1,8
	.byte	'Spinlock',0,6,216,2,1
	.word	29990
	.byte	4,0,17
	.word	139
	.byte	9
	.word	30039
	.byte	10
	.word	30044
	.byte	3
	.byte	'Os_Hal_SpinIsLocked',0,3,6,231,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Spinlock',0,6,231,2,1
	.word	30049
	.byte	4,0,3
	.byte	'Os_Hal_SpinTryLock',0,3,6,245,2,1
	.word	139
	.byte	1,1,8
	.byte	'Spinlock',0,6,245,2,1
	.word	29990
	.byte	4,0,7
	.byte	'Os_Hal_SpinUnlock',0,3,6,133,3,1,1,1,8
	.byte	'Spinlock',0,6,133,3,1
	.word	29990
	.byte	4,0,7
	.byte	'Os_Hal_CoreNop',0,3,6,209,3,1,1,1,4,0
.L242:
	.byte	7
	.byte	'Os_Hal_IntEnableGlobal',0,3,59,92,1,1,1
.L244:
	.byte	4,0
.L236:
	.byte	7
	.byte	'Os_Hal_IntDisableGlobal',0,3,59,108,1,1,1
.L237:
	.byte	4,0
.L115:
	.byte	3
	.byte	'Os_Hal_IntDisableAndReturnGlobalState',0,3,59,125,1
	.word	139
	.byte	1,1
.L116:
	.byte	4,0,9
	.word	139
	.byte	10
	.word	30344
.L139:
	.byte	7
	.byte	'Os_Hal_IntSetGlobalState',0,3,59,148,1,1,1,1
.L140:
	.byte	8
	.byte	'State',0,59,148,1,1
	.word	30349
.L142:
	.byte	4,0,10
	.word	139
.L190:
	.byte	7
	.byte	'Os_Hal_IntGetLevel',0,3,59,173,1,1,1,1
.L192:
	.byte	8
	.byte	'Level',0,59,173,1,1
	.word	30404
.L194:
	.byte	4,0,9
	.word	139
	.byte	10
	.word	30453
.L195:
	.byte	7
	.byte	'Os_Hal_IntSetLevel',0,3,59,194,1,1,1,1
.L197:
	.byte	8
	.byte	'Level',0,59,194,1,1
	.word	30458
.L199:
	.byte	26,4,4,0,0,10
	.word	139
	.byte	7
	.byte	'Os_Hal_IntGetGlobalEnable',0,3,59,223,1,1,1,1,8
	.byte	'State',0,59,223,1,1
	.word	30510
	.byte	4,0
.L185:
	.byte	7
	.byte	'Os_Hal_IntGetCat2LockLevel',0,3,59,242,1,1,1,1
.L187:
	.byte	8
	.byte	'Level',0,59,242,1,1
	.word	30404
.L189:
	.byte	4,0,7
	.byte	'Os_Hal_IntGetTaskLevel',0,3,59,171,2,1,1,1,8
	.byte	'Level',0,59,171,2,1
	.word	30404
	.byte	4,0,10
	.word	139
	.byte	7
	.byte	'Os_Hal_IntGetInterruptState',0,3,59,190,2,1,1,1,8
	.byte	'InterruptState',0,59,190,2,1
	.word	30666
	.byte	4,0,7
	.byte	'Os_Hal_IntDisableSource',0,3,59,212,2,1,1,1,8
	.byte	'IsrConfig',0,59,212,2,1
	.word	6013
	.byte	4,0,7
	.byte	'Os_Hal_IntEnableSource',0,3,59,246,2,1,1,1,8
	.byte	'IsrConfig',0,59,246,2,1
	.word	6013
	.byte	4,0,7
	.byte	'Os_Hal_IntClearPending',0,3,59,162,3,1,1,1,8
	.byte	'IsrConfig',0,59,162,3,1
	.word	6013
	.byte	4,0,3
	.byte	'Os_Hal_IntIsrLevelIsLe',0,3,59,179,4,1
	.word	3094
	.byte	1,1,8
	.byte	'IsrConfig',0,59,179,4,1
	.word	6013
	.byte	8
	.byte	'Level',0,59,179,4,1
	.word	30458
	.byte	4,0,3
	.byte	'Os_Hal_IntLevelIsGt',0,3,59,199,4,1
	.word	3094
	.byte	1,1,8
	.byte	'LevelX',0,59,199,4,1
	.word	30458
	.byte	8
	.byte	'LevelY',0,59,199,4,1
	.word	30458
	.byte	4,0,7
	.byte	'Os_Hal_IntInterruptSourceInit',0,3,59,141,5,1,1,1,8
	.byte	'InterruptSource',0,59,141,5,1
	.word	6013
	.byte	4,0
.L201:
	.byte	7
	.byte	'Os_Hal_IntGetGlobalState',0,3,59,221,5,1,1,1
.L203:
	.byte	8
	.byte	'State',0,59,221,5,1
	.word	30510
.L205:
	.byte	4,0,10
	.word	7137
	.byte	7
	.byte	'Os_IntSuspend',0,3,60,126,1,1,1,8
	.byte	'State',0,60,126,1
	.word	31142
	.byte	26,4,4,0,0,9
	.word	7137
	.byte	10
	.word	31187
	.byte	7
	.byte	'Os_IntResume',0,3,60,166,1,1,1,1,8
	.byte	'State',0,60,166,1,1
	.word	31192
	.byte	26,4,0,0,9
	.word	7257
	.byte	10
	.word	31237
	.byte	3
	.byte	'Os_InterruptCheckEnabled',0,3,60,211,1,1
	.word	3094
	.byte	1,1,8
	.byte	'InterruptState',0,60,211,1,1
	.word	31242
	.byte	26,4,0,0,7
	.byte	'Os_InterruptCleanup',0,3,60,231,1,1,1,1,8
	.byte	'InterruptState',0,60,231,1,1
	.word	28043
	.byte	4,0,7
	.byte	'Os_InterruptTpLockAllStart',0,3,60,142,3,1,1,1,8
	.byte	'Thread',0,60,142,3,1
	.word	29265
	.byte	26,4,4,4,0,0,7
	.byte	'Os_InterruptTpLockAllStop',0,3,60,167,3,1,1,1,8
	.byte	'Thread',0,60,167,3,1
	.word	29265
	.byte	26,4,4,4,0,0,7
	.byte	'Os_InterruptTpLockOsStart',0,3,60,192,3,1,1,1,8
	.byte	'Thread',0,60,192,3,1
	.word	29265
	.byte	26,4,4,4,0,0,7
	.byte	'Os_InterruptTpLockOsStop',0,3,60,217,3,1,1,1,8
	.byte	'Thread',0,60,217,3,1
	.word	29265
	.byte	26,4,4,4,0,0
.L230:
	.byte	7
	.byte	'Os_InterruptDisableGlobal',0,3,60,246,3,1,1,1
.L232:
	.byte	26,4,4,4,4,4,0,0
.L239:
	.byte	7
	.byte	'Os_InterruptEnableGlobal',0,3,60,158,4,1,1,1
.L241:
	.byte	26,4,4,4,4,4,0,0
.L248:
	.byte	7
	.byte	'Os_InterruptDisableLevel',0,3,60,198,4,1,1,1
.L250:
	.byte	26
.L254:
	.byte	4,4,4,4,4,4,0,0
.L264:
	.byte	7
	.byte	'Os_InterruptEnableLevel',0,3,60,238,4,1,1,1
.L266:
	.byte	26
.L267:
	.byte	4,4,4,4,4,4,0,0,7
	.byte	'Os_StackOverflowCheck',0,3,61,138,1,1,1,1,26,4,4,4,0,0,3
	.byte	'Os_Bit_CountLeadingZeros',0,3,62,123,1
	.word	3257
	.byte	1,1,8
	.byte	'BitField',0,62,123,1
	.word	139
	.byte	26,4,4,0,0,9
	.word	15631
	.byte	10
	.word	31850
	.byte	3
	.byte	'Os_BitArrayIdxIsValid',0,3,63,79,1
	.word	4825
	.byte	1,1,8
	.byte	'BitArray',0,63,79,1
	.word	31855
	.byte	8
	.byte	'BitIdx',0,63,79,1
	.word	4825
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetAllocationIdx',0,3,63,108,1
	.word	4825
	.byte	1,1,8
	.byte	'BitArrayIdx',0,63,108,1
	.word	139
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetFieldIdx',0,3,63,127,1
	.word	4825
	.byte	1,1,8
	.byte	'BitArrayIdx',0,63,127,1
	.word	4825
	.byte	4,0,7
	.byte	'Os_BitArraySetBitInternal',0,3,63,181,1,1,1,1,8
	.byte	'BitArray',0,63,181,1,1
	.word	31855
	.byte	8
	.byte	'BitIdx',0,63,181,1,1
	.word	4825
	.byte	26,4,4,4,4,0,0,10
	.word	139
	.byte	9
	.word	139
	.byte	7
	.byte	'Os_DequeIdxDecrement',0,3,64,91,1,1,1,8
	.byte	'Index',0,64,91,1
	.word	32125
	.byte	8
	.byte	'Size',0,64,91,1
	.word	32130
	.byte	4,0,9
	.word	139
	.byte	7
	.byte	'Os_DequeIdxIncrement',0,3,64,116,1,1,1,8
	.byte	'Index',0,64,116,1
	.word	32125
	.byte	8
	.byte	'Size',0,64,116,1
	.word	32192
	.byte	4,0,3
	.byte	'Os_SchedulerPriorityIsHigherOrEqual',0,3,65,115,1
	.word	3094
	.byte	1,1,8
	.byte	'PrioX',0,65,115,1
	.word	4825
	.byte	8
	.byte	'PrioY',0,65,115,1
	.word	4825
	.byte	4,0,3
	.byte	'Os_SchedulerGetCurrentTask',0,3,65,143,1,1
	.word	16054
	.byte	1,1,8
	.byte	'Scheduler',0,65,143,1,1
	.word	16427
	.byte	4,0,3
	.byte	'Os_SchedulerTaskSwitchIsNeeded',0,3,65,156,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Scheduler',0,65,156,1,1
	.word	16427
	.byte	4,0,10
	.word	4683
	.byte	7
	.byte	'Os_LockListInit',0,3,66,90,1,1,1,8
	.byte	'LockList',0,66,90,1
	.word	32455
	.byte	4,0,9
	.word	4683
	.byte	10
	.word	32502
	.byte	3
	.byte	'Os_LockListNext',0,3,66,168,1,1
	.word	4678
	.byte	1,1,8
	.byte	'LockList',0,66,168,1,1
	.word	32507
	.byte	4,0,3
	.byte	'Os_LockListNextIterator',0,3,66,180,1,1
	.word	32455
	.byte	1,1,8
	.byte	'Iterator',0,66,180,1,1
	.word	32507
	.byte	4,0,3
	.byte	'Os_LockListIsEmpty',0,3,66,193,1,1
	.word	3094
	.byte	1,1,8
	.byte	'LockList',0,66,193,1,1
	.word	32507
	.byte	4,0,3
	.byte	'Os_LockListIsTopRes',0,3,66,213,1,1
	.word	3094
	.byte	1,1,8
	.byte	'LockList',0,66,213,1,1
	.word	32507
	.byte	26,4,4,0,0,3
	.byte	'Os_LockListIsTopSpinlock',0,3,66,131,2,1
	.word	3094
	.byte	1,1,8
	.byte	'LockList',0,66,131,2,1
	.word	32507
	.byte	26,4,0,0,7
	.byte	'Os_LockInit',0,3,66,169,2,1,1,1,8
	.byte	'Lock',0,66,169,2,1
	.word	4678
	.byte	4,0,3
	.byte	'Os_LockIsResource',0,3,66,195,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Lock',0,66,195,2,1
	.word	4678
	.byte	4,0,3
	.byte	'Os_LockGetAccessingApplications',0,3,66,250,2,1
	.word	139
	.byte	1,1,8
	.byte	'Lock',0,66,250,2,1
	.word	4678
	.byte	4,0,3
	.byte	'Os_LockGetDyn',0,3,66,237,2,1
	.word	4488
	.byte	1,1,8
	.byte	'Lock',0,66,237,2,1
	.word	4678
	.byte	4,0,10
	.word	5393
	.byte	7
	.byte	'Os_SpinlockListInit',0,3,67,106,1,1,1,8
	.byte	'LockList',0,67,106,1
	.word	32965
	.byte	4,0,17
	.word	139
	.byte	11
	.byte	'Os_SpinlockType_Tag',0,12,189,1,8,20,12
	.byte	'Lock',0
	.word	4452
	.byte	4,2,35,0,12
	.byte	'OwnerThread',0
	.word	29265
	.byte	4,2,35,4,12
	.byte	'PreviousSpinlock',0
	.word	5388
	.byte	4,2,35,8,12
	.byte	'Spinlock',0
	.word	33016
	.byte	4,2,35,12,12
	.byte	'PreviousPriority',0
	.word	4825
	.byte	2,2,35,16,0,10
	.word	33021
	.byte	3
	.byte	'Os_SpinlockGetDyn',0,3,67,150,1,1
	.word	33153
	.byte	1,1,8
	.byte	'Spinlock',0,67,150,1,1
	.word	5388
	.byte	26,4,0,0,3
	.byte	'Os_SpinlockInternalTryGet',0,3,67,132,2,1
	.word	139
	.byte	1,1,8
	.byte	'Spinlock',0,67,132,2,1
	.word	5388
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_CoreAsrIsCoreLocal',0,3,68,126,1
	.word	3094
	.byte	1,1,8
	.byte	'Core',0,68,126,1
	.word	24105
	.byte	26,4,0,0,9
	.word	6890
	.byte	10
	.word	33323
	.byte	3
	.byte	'Os_CoreGetCurrentCore',0,3,68,245,1,1
	.word	33328
	.byte	1,1,26,4,0,0,3
	.byte	'Os_Core2AsrCore',0,3,68,204,1,1
	.word	24105
	.byte	1,1,8
	.byte	'Core',0,68,204,1,1
	.word	33328
	.byte	26,4,0,0,3
	.byte	'Os_CoreAsrGetDyn',0,3,68,153,1,1
	.word	15586
	.byte	1,1,8
	.byte	'Core',0,68,153,1,1
	.word	24105
	.byte	4,0,3
	.byte	'Os_CoreAsrGetTimingProtection',0,3,68,166,1,1
	.word	19512
	.byte	1,1,8
	.byte	'Core',0,68,166,1,1
	.word	24105
	.byte	4,0,3
	.byte	'Os_CoreIsAsrCore',0,3,68,154,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Core',0,68,154,2,1
	.word	33328
	.byte	4,0,3
	.byte	'Os_CoreIsStartedAsAsr',0,3,68,167,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Core',0,68,167,2,1
	.word	33328
	.byte	4,0,5,17,239,1,9,1,6
	.byte	'OS_COREOSSTATE_INITIALZE',0,0,6
	.byte	'OS_COREOSSTATE_PRESTARTTASK',0,1,6
	.byte	'OS_COREOSSTATE_STARTED',0,2,0,11
	.byte	'Os_CoreAsrStatusType_Tag',0,17,135,2,8,8,12
	.byte	'Core',0
	.word	5630
	.byte	2,2,35,0,12
	.byte	'OsState',0
	.word	33615
	.byte	1,2,35,2,12
	.byte	'ApplicationMode',0
	.word	3257
	.byte	1,2,35,3,12
	.byte	'CriticalUserSection',0
	.word	139
	.byte	4,2,35,4,0,17
	.word	33704
	.byte	10
	.word	33821
	.byte	3
	.byte	'Os_CoreAsrGetAsrStatus',0,3,68,232,2,1
	.word	33826
	.byte	1,1,8
	.byte	'Core',0,68,232,2,1
	.word	24105
	.byte	4,0,3
	.byte	'Os_CoreGetIdleTask',0,3,68,246,3,1
	.word	16054
	.byte	1,1,8
	.byte	'Core',0,68,246,3,1
	.word	24105
	.byte	4,0,3
	.byte	'Os_CoreGetKernelApp',0,3,68,131,4,1
	.word	27405
	.byte	1,1,8
	.byte	'Core',0,68,131,4,1
	.word	24105
	.byte	4,0,3
	.byte	'Os_CoreGetScheduler',0,3,68,144,4,1
	.word	16427
	.byte	1,1,8
	.byte	'Core',0,68,144,4,1
	.word	24105
	.byte	4,0,3
	.byte	'Os_CoreInterruptedThreadsGetTopIdx',0,3,68,149,5,1
	.word	7426
	.byte	1,1,8
	.byte	'Core',0,68,149,5,1
	.word	24105
	.byte	26,4,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsGet',0,3,68,169,5,1
	.word	29265
	.byte	1,1,8
	.byte	'Core',0,68,169,5,1
	.word	24105
	.byte	8
	.byte	'Idx',0,68,169,5,1
	.word	7426
	.byte	26,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsMoveDown',0,3,68,209,5,1
	.word	7426
	.byte	1,1,8
	.byte	'Iterator',0,68,209,5,1
	.word	7426
	.byte	4,0,7
	.byte	'Os_CoreSetThread',0,3,68,224,5,1,1,1,8
	.byte	'Thread',0,68,224,5,1
	.word	29265
	.byte	26,4,4,4,0,0
.L94:
	.byte	3
	.byte	'Os_CoreGetThread',0,3,68,238,5,1
	.word	29265
	.byte	1,1
.L96:
	.byte	26,4,4,4,0,0,7
	.byte	'Os_CoreSetCurrentStack',0,3,68,252,5,1,1,1,8
	.byte	'Stack',0,68,252,5,1
	.word	4447
	.byte	8
	.byte	'Core',0,68,252,5,1
	.word	24105
	.byte	26,4,0,0,3
	.byte	'Os_CoreGetCurrentStack',0,3,68,142,6,1
	.word	4447
	.byte	1,1,26,4,4,4,0,0,13
	.byte	'Os_SpinlockConfigRefType',0,17,152,2,59
	.word	5388
	.byte	9
	.word	34416
	.byte	10
	.word	34450
	.byte	9
	.word	139
	.byte	10
	.word	34460
	.byte	11
	.byte	'Os_Hal_MpSystemConfigType_Tag',0,36,83,8,4,12
	.byte	'SysMpuId',0
	.word	139
	.byte	4,2,35,0,0,9
	.word	34470
	.byte	10
	.word	34524
	.byte	11
	.byte	'Os_MpSystemConfigType_Tag',0,35,114,8,4,12
	.byte	'HwConfig',0
	.word	34529
	.byte	4,2,35,0,0,9
	.word	34534
	.byte	10
	.word	34584
	.byte	11
	.byte	'Os_SystemConfigType_Tag',0,17,238,3,8,40,12
	.byte	'VersionInfo',0
	.word	11685
	.byte	8,2,35,0,12
	.byte	'NumberOfAsrCores',0
	.word	19527
	.byte	1,2,35,8,12
	.byte	'SpinlockRefs',0
	.word	34455
	.byte	4,2,35,12,12
	.byte	'SpinlockCount',0
	.word	4825
	.byte	2,2,35,16,12
	.byte	'HwConfig',0
	.word	34465
	.byte	4,2,35,20,12
	.byte	'MemoryProtection',0
	.word	34589
	.byte	4,2,35,24,12
	.byte	'InterruptSourceRefs',0
	.word	6252
	.byte	4,2,35,28,12
	.byte	'InterruptSourceCount',0
	.word	4825
	.byte	2,2,35,32,12
	.byte	'Core2Thread',0
	.word	29400
	.byte	4,2,35,36,0,9
	.word	34594
	.byte	10
	.word	34841
	.byte	3
	.byte	'Os_SystemGet',0,3,68,160,6,1
	.word	34846
	.byte	1,1,4,0,9
	.word	5210
	.byte	10
	.word	34878
	.byte	3
	.byte	'Os_SystemGetCore2Thread',0,3,68,173,6,1
	.word	29400
	.byte	1,1,8
	.byte	'System',0,68,173,6,1
	.word	34846
	.byte	4,0,7
	.byte	'Os_Hal_ProgramDataRegions',0,3,69,174,2,1,1,1,8
	.byte	'StartSlot',0,69,174,2,1
	.word	3257
	.byte	8
	.byte	'Count',0,69,174,2,1
	.word	3257
	.byte	8
	.byte	'RegionsConfig',0,69,174,2,1
	.word	17678
	.byte	4,0,7
	.byte	'Os_Hal_ProgramCodeRegions',0,3,69,202,2,1,1,1,8
	.byte	'StartSlot',0,69,202,2,1
	.word	3257
	.byte	8
	.byte	'Count',0,69,202,2,1
	.word	3257
	.byte	8
	.byte	'RegionsConfig',0,69,202,2,1
	.word	17678
	.byte	4,0,7
	.byte	'Os_Hal_ContextInit',0,3,70,96,1,1,1,8
	.byte	'Config',0,70,96,1
	.word	4067
	.byte	8
	.byte	'Context',0,70,96,1
	.word	4362
	.byte	26,4,4,4,4,0,0,7
	.byte	'Os_Hal_ContextReset',0,3,70,147,1,1,1,1,8
	.byte	'Config',0,70,147,1,1
	.word	4067
	.byte	8
	.byte	'Context',0,70,147,1,1
	.word	4362
	.byte	26,4,4,4,4,4,4,0,0,7
	.byte	'Os_Hal_ContextSetParameter',0,3,70,194,1,1,1,1,8
	.byte	'Context',0,70,194,1,1
	.word	4362
	.byte	8
	.byte	'Parameter',0,70,194,1,1
	.word	11294
	.byte	4,0,11
	.byte	'Os_Hal_ContextStackConfigType_Tag',0,5,189,1,8,8,12
	.byte	'StackRegionStart',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'StackRegionEnd',0
	.word	139
	.byte	4,2,35,4,0,9
	.word	35335
	.byte	10
	.word	35426
	.byte	7
	.byte	'Os_Hal_ContextSetStack',0,3,70,213,1,1,1,1,8
	.byte	'Context',0,70,213,1,1
	.word	4362
	.byte	8
	.byte	'Stack',0,70,213,1,1
	.word	35431
	.byte	4,0,9
	.word	139
	.byte	10
	.word	35501
	.byte	7
	.byte	'Os_Hal_ContextSetInterruptState',0,3,70,250,1,1,1,1,8
	.byte	'Context',0,70,250,1,1
	.word	4362
	.byte	8
	.byte	'InterruptState',0,70,250,1,1
	.word	35506
	.byte	4,0,7
	.byte	'Os_Hal_ContextSetUserMsrBits',0,3,70,143,2,1,1,1,8
	.byte	'Context',0,70,143,2,1
	.word	4362
	.byte	4,0,9
	.word	4179
	.byte	10
	.word	35650
	.byte	7
	.byte	'Os_Hal_ContextFirstResume',0,3,70,173,2,1,1,1,8
	.byte	'Next',0,70,173,2,1
	.word	35655
	.byte	26,4,4,4,0,0,7
	.byte	'Os_Hal_ContextResetAndResume',0,3,70,220,2,1,1,1,8
	.byte	'CurrentConfig',0,70,220,2,1
	.word	4067
	.byte	8
	.byte	'Current',0,70,220,2,1
	.word	4362
	.byte	8
	.byte	'Next',0,70,220,2,1
	.word	35655
	.byte	26,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_Hal_ContextAbort',0,3,70,145,3,1,1,1,8
	.byte	'Config',0,70,145,3,1
	.word	4067
	.byte	8
	.byte	'Context',0,70,145,3,1
	.word	4362
	.byte	26,4,4,4,4,4,0,0,7
	.byte	'Os_Hal_ContextReturn',0,3,70,204,3,1,1,1,8
	.byte	'Current',0,70,204,3,1
	.word	35655
	.byte	8
	.byte	'Next',0,70,204,3,1
	.word	35655
	.byte	26,4,4,4,0,0,7
	.byte	'Os_Hal_ContextIntCleanupCSAs',0,3,70,133,4,1,1,1,8
	.byte	'Context',0,70,133,4,1
	.word	35655
	.byte	8
	.byte	'PreviousGlobalIntState',0,70,133,4,1
	.word	30349
	.byte	26,4,0,0,7
	.byte	'Os_Hal_ContextIntPrepareCSAContent',0,3,70,178,4,1,1,1,8
	.byte	'CurrentConfig',0,70,178,4,1
	.word	4067
	.byte	8
	.byte	'Context',0,70,178,4,1
	.word	4362
	.byte	26,4,0,0,7
	.byte	'Os_Hal_ContextIntInitialize',0,3,70,235,4,1,1,1,8
	.byte	'CurrentConfig',0,70,235,4,1
	.word	4067
	.byte	8
	.byte	'Context',0,70,235,4,1
	.word	4362
	.byte	8
	.byte	'PreviousGlobalIntState',0,70,235,4,1
	.word	30349
	.byte	26,4,4,0,0,7
	.byte	'Os_Hal_ContextIntInitializeReserved',0,3,70,148,5,1,1,1,8
	.byte	'CurrentConfig',0,70,148,5,1
	.word	4067
	.byte	8
	.byte	'Context',0,70,148,5,1
	.word	4362
	.byte	8
	.byte	'PreviousGlobalIntState',0,70,148,5,1
	.word	30349
	.byte	26,4,4,0,0,7
	.byte	'Os_Hal_ContextIntRestore',0,3,70,243,5,1,1,1,8
	.byte	'Context',0,70,243,5,1
	.word	35655
	.byte	4,0,13
	.byte	'Os_MpAccessRightsRefType',0,35,146,1,59
	.word	26549
	.byte	10
	.word	36413
	.byte	7
	.byte	'Os_MpThreadInit',0,3,71,130,1,1,1,1,8
	.byte	'Config',0,71,130,1,1
	.word	26549
	.byte	8
	.byte	'Settings',0,71,130,1,1
	.word	36447
	.byte	4,0,9
	.word	26458
	.byte	10
	.word	36512
	.byte	7
	.byte	'Os_MpSwitch',0,3,71,193,1,1,1,1,8
	.byte	'Current',0,71,193,1,1
	.word	26549
	.byte	8
	.byte	'Next',0,71,193,1,1
	.word	26549
	.byte	4,0,7
	.byte	'Os_MpSwitchTo',0,3,71,230,1,1,1,1,8
	.byte	'AccessRights',0,71,230,1,1
	.word	26549
	.byte	4,0,7
	.byte	'Os_TraceThreadInit',0,3,72,139,6,1,1,1,8
	.byte	'Thread',0,72,139,6,1
	.word	6781
	.byte	4,0,7
	.byte	'Os_TraceThreadInitAndStart',0,3,72,178,6,1,1,1,8
	.byte	'Task',0,72,178,6,1
	.word	6781
	.byte	26,4,0,0,7
	.byte	'Os_TraceThreadSwitch',0,3,72,229,6,1,1,1,8
	.byte	'CurrentTaskState',0,72,229,6,1
	.word	11977
	.byte	8
	.byte	'Current',0,72,229,6,1
	.word	6781
	.byte	8
	.byte	'Next',0,72,229,6,1
	.word	6781
	.byte	26,4,4,0,0,7
	.byte	'Os_TraceThreadResetAndResume',0,3,72,170,7,1,1,1,8
	.byte	'Current',0,72,170,7,1
	.word	6781
	.byte	8
	.byte	'Next',0,72,170,7,1
	.word	6781
	.byte	26,4,4,0,0,7
	.byte	'Os_TraceThreadCleanupAndResume',0,3,72,228,7,1,1,1,8
	.byte	'Current',0,72,228,7,1
	.word	6781
	.byte	8
	.byte	'Next',0,72,228,7,1
	.word	6781
	.byte	26,4,4,0,0,7
	.byte	'Os_TraceSpinlockRequested',0,3,72,183,11,1,1,1,8
	.byte	'Spinlock',0,72,183,11,1
	.word	5205
	.byte	26,4,0,0,7
	.byte	'Os_TraceSpinlockTaken',0,3,72,239,11,1,1,1,8
	.byte	'Spinlock',0,72,239,11,1
	.word	5205
	.byte	26,4,0,0,7
	.byte	'Os_TraceSpinlockReleased',0,3,72,167,12,1,1,1,8
	.byte	'Spinlock',0,72,167,12,1
	.word	5205
	.byte	26,4,0,0,7
	.byte	'Os_TraceInterruptsGlobalDisabled',0,3,72,221,12,1,1,1,26,4,0,0,7
	.byte	'Os_TraceInterruptsLevelDisabled',0,3,72,128,13,1,1,1,26,4,0,0,7
	.byte	'Os_TraceInterruptsGlobalEnabled',0,3,72,163,13,1,1,1,26,4,0,0,7
	.byte	'Os_TraceInterruptsLevelEnabled',0,3,72,198,13,1,1,1,26,4,0,0,3
	.byte	'Os_ThreadGetSpinlocks',0,3,73,117,1
	.word	32965
	.byte	1,1,8
	.byte	'Thread',0,73,117,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadGetTrace',0,3,73,159,1,1
	.word	6781
	.byte	1,1,8
	.byte	'Thread',0,73,159,1,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadGetTpConfig',0,3,73,173,1,1
	.word	28184
	.byte	1,1,8
	.byte	'Thread',0,73,173,1,1
	.word	29265
	.byte	4,0
.L105:
	.byte	3
	.byte	'Os_ThreadGetInterruptApiState',0,3,73,213,1,1
	.word	28043
	.byte	1,1
.L107:
	.byte	8
	.byte	'Thread',0,73,213,1,1
	.word	29265
.L109:
	.byte	4,0,3
	.byte	'Os_ThreadGetCore',0,3,73,227,1,1
	.word	24105
	.byte	1,1,8
	.byte	'Thread',0,73,227,1,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentType',0,3,73,241,1,1
	.word	4825
	.byte	1,1,8
	.byte	'Thread',0,73,241,1,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadIsTask',0,3,73,158,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Thread',0,73,158,2,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadIsIsr',0,3,73,185,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Thread',0,73,185,2,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadIsAnyInitialContext',0,3,73,198,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Thread',0,73,198,2,1
	.word	29265
	.byte	8
	.byte	'Context',0,73,198,2,1
	.word	4825
	.byte	4,0,3
	.byte	'Os_ThreadIsHook',0,3,73,225,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Thread',0,73,225,2,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadGetOwnerApplication',0,3,73,138,3,1
	.word	27405
	.byte	1,1,8
	.byte	'Thread',0,73,138,3,1
	.word	29265
	.byte	4,0,3
	.byte	'Os_ThreadHasResourcesLocked',0,3,73,185,3,1
	.word	3094
	.byte	1,1,8
	.byte	'Thread',0,73,185,3,1
	.word	29265
	.byte	26,4,4,4,0,0,3
	.byte	'Os_ThreadHasSpinlockLocked',0,3,73,223,3,1
	.word	3094
	.byte	1,1,8
	.byte	'Thread',0,73,223,3,1
	.word	29265
	.byte	26,4,4,4,0,0,7
	.byte	'Os_ThreadSpinlockForceRelease',0,3,73,167,4,1,1,1,8
	.byte	'Thread',0,73,167,4,1
	.word	29265
	.byte	4,0,7
	.byte	'Os_ThreadResourceForceRelease',0,3,73,180,4,1,1,1,8
	.byte	'Thread',0,73,180,4,1
	.word	29265
	.byte	4,0,7
	.byte	'Os_ThreadLocksForceRelease',0,3,73,199,4,1,1,1,8
	.byte	'Thread',0,73,199,4,1
	.word	29265
	.byte	26,4,4,4,0,0,7
	.byte	'Os_ThreadResetAndResume',0,3,73,223,5,1,1,1,8
	.byte	'Next',0,73,223,5,1
	.word	29265
	.byte	8
	.byte	'CallPreThreadHook',0,73,223,5,1
	.word	3257
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_ThreadStartFirst',0,3,73,172,6,1,1,1,8
	.byte	'Next',0,73,172,6,1
	.word	29265
	.byte	8
	.byte	'CallPreThreadHook',0,73,172,6,1
	.word	3257
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_ThreadCleanupAndResume',0,3,73,230,6,1,1,1,8
	.byte	'Next',0,73,230,6,1
	.word	29265
	.byte	8
	.byte	'CallPreThreadHook',0,73,230,6,1
	.word	3257
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_ThreadSwitch',0,3,73,133,8,1,1,1,8
	.byte	'Current',0,73,133,8,1
	.word	29265
	.byte	8
	.byte	'Next',0,73,133,8,1
	.word	29265
	.byte	8
	.byte	'CallPreThreadHook',0,73,133,8,1
	.word	3257
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_ThreadGetAccessRights',0,3,73,137,9,1
	.word	28850
	.byte	1,1,8
	.byte	'Thread',0,73,137,9,1
	.word	29265
	.byte	4,0,7
	.byte	'Os_ThreadSetInterruptState',0,3,73,180,9,1,1,1,8
	.byte	'Thread',0,73,180,9,1
	.word	29265
	.byte	8
	.byte	'InterruptState',0,73,180,9,1
	.word	35506
	.byte	26,4,0,0,7
	.byte	'Os_ThreadCallPreThreadHook',0,3,73,199,9,1,1,1,8
	.byte	'Thread',0,73,199,9,1
	.word	29265
	.byte	8
	.byte	'CallPreThreadHook',0,73,199,9,1
	.word	3257
	.byte	4,0,7
	.byte	'Os_ThreadInitFpuContext',0,3,73,237,10,1,1,1,8
	.byte	'Thread',0,73,237,10,1
	.word	29265
	.byte	26,4,0,0,7
	.byte	'Os_ThreadInitFpu',0,3,73,136,11,1,1,1,8
	.byte	'Thread',0,73,136,11,1
	.word	29265
	.byte	26,4,0,0,7
	.byte	'Os_ThreadStoreFpuContext',0,3,73,163,11,1,1,1,8
	.byte	'Thread',0,73,163,11,1
	.word	29265
	.byte	4,0,7
	.byte	'Os_ThreadRestoreFpuContext',0,3,73,185,11,1,1,1,8
	.byte	'Thread',0,73,185,11,1
	.word	29265
	.byte	4,0,7
	.byte	'Os_IsrDisableSource',0,3,74,231,1,1,1,1,8
	.byte	'Isr',0,74,231,1,1
	.word	6201
	.byte	26,4,0,0,3
	.byte	'Os_IsrGetThread',0,3,74,160,1,1
	.word	29265
	.byte	1,1,8
	.byte	'Isr',0,74,160,1,1
	.word	23363
	.byte	4,0,7
	.byte	'Os_IsrInitialEnable',0,3,74,160,2,1,1,1,8
	.byte	'Isr',0,74,160,2,1
	.word	23363
	.byte	8
	.byte	'ClearPending',0,74,160,2,1
	.word	3257
	.byte	26,4,4,0,0,7
	.byte	'Os_IsrEnable',0,3,74,192,2,1,1,1,8
	.byte	'Isr',0,74,192,2,1
	.word	23363
	.byte	26,4,0,0,7
	.byte	'Os_IsrClearPending',0,3,74,220,2,1,1,1,8
	.byte	'Isr',0,74,220,2,1
	.word	6201
	.byte	26,4,0,0,17
	.word	4825
	.byte	10
	.word	39196
	.byte	7
	.byte	'Os_XSigChannelIdxIncrement',0,3,75,90,1,1,1,8
	.byte	'Index',0,75,90,1
	.word	39201
	.byte	8
	.byte	'Size',0,75,90,1
	.word	4825
	.byte	26,4,0,0,9
	.word	21147
	.byte	10
	.word	39271
	.byte	3
	.byte	'Os_XSigChannelIsResultAvailable',0,3,75,129,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Channel',0,75,129,2,1
	.word	39276
	.byte	4,0,9
	.word	20669
	.byte	10
	.word	39344
	.byte	3
	.byte	'Os_XSigSend',0,3,76,129,1,1
	.word	240
	.byte	1,1,8
	.byte	'RecvCore',0,76,129,1,1
	.word	24105
	.byte	8
	.byte	'SendThread',0,76,129,1,1
	.word	29265
	.byte	8
	.byte	'FunctionIdx',0,76,129,1,1
	.word	19676
	.byte	8
	.byte	'Parameters',0,76,129,1,1
	.word	39349
	.byte	26,4,0,0,3
	.byte	'Os_XSigSend_ActivateTaskAsync',0,3,76,191,1,1
	.word	240
	.byte	1,1,8
	.byte	'RecvCore',0,76,191,1,1
	.word	24105
	.byte	8
	.byte	'SendThread',0,76,191,1,1
	.word	29265
	.byte	8
	.byte	'TaskID',0,76,191,1,1
	.word	11811
	.byte	4,0,3
	.byte	'Os_TaskGetThread',0,3,77,111,1
	.word	29265
	.byte	1,1,8
	.byte	'Task',0,77,111,1
	.word	16054
	.byte	4,0,3
	.byte	'Os_TaskThread2Task',0,3,77,125,1
	.word	16054
	.byte	1,1,8
	.byte	'Thread',0,77,125,1
	.word	29265
	.byte	26,4,4,0,0,17
	.word	11136
	.byte	17
	.word	11136
	.byte	14,78,70,9,16,12
	.byte	'Waiting',0
	.word	39652
	.byte	8,2,35,0,12
	.byte	'Triggered',0
	.word	39657
	.byte	8,2,35,8,0,11
	.byte	'Os_TaskType_Tag',0,31,116,8,52,12
	.byte	'Thread',0
	.word	27892
	.byte	24,2,35,0,12
	.byte	'Events',0
	.word	39662
	.byte	16,2,35,24,12
	.byte	'State',0
	.word	11977
	.byte	1,2,35,40,12
	.byte	'Priority',0
	.word	4825
	.byte	2,2,35,42,12
	.byte	'ActivationsAllowed',0
	.word	3257
	.byte	1,2,35,44,12
	.byte	'NumRemainScheduleEventsRoundRobin',0
	.word	139
	.byte	4,2,35,46,0,10
	.word	39704
	.byte	3
	.byte	'Os_TaskGetDyn',0,3,77,139,1,1
	.word	39862
	.byte	1,1,8
	.byte	'Task',0,77,139,1,1
	.word	16054
	.byte	26,4,0,0,7
	.byte	'Os_TaskSetState',0,3,77,152,1,1,1,1,8
	.byte	'Task',0,77,152,1,1
	.word	16054
	.byte	8
	.byte	'State',0,77,152,1,1
	.word	11977
	.byte	26,4,0,0,3
	.byte	'Os_TaskGetId',0,3,77,219,1,1
	.word	11811
	.byte	1,1,8
	.byte	'Task',0,77,219,1,1
	.word	16054
	.byte	4,0,3
	.byte	'Os_TaskGetScheduler',0,3,77,128,2,1
	.word	16427
	.byte	1,1,8
	.byte	'Task',0,77,128,2,1
	.word	16054
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TaskGetCore',0,3,77,154,2,1
	.word	24105
	.byte	1,1,8
	.byte	'Task',0,77,154,2,1
	.word	16054
	.byte	26,4,4,0,0,3
	.byte	'Os_TaskIsCoreLocal',0,3,77,167,2,1
	.word	139
	.byte	1,1,8
	.byte	'Task',0,77,167,2,1
	.word	16054
	.byte	26,4,4,0,0,7
	.byte	'Os_TaskSwitch',0,3,77,252,2,1,1,1,8
	.byte	'Scheduler',0,77,252,2,1
	.word	16427
	.byte	8
	.byte	'CallerThread',0,77,252,2,1
	.word	29265
	.byte	26,4,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_TaskResume',0,3,77,161,3,1,1,1,8
	.byte	'Scheduler',0,77,161,3,1
	.word	16427
	.byte	26,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_TaskCallPostTaskHook',0,3,77,232,5,1,1,1,26,4,0,0,3
	.byte	'Os_CounterGetCore',0,3,79,182,1,1
	.word	24105
	.byte	1,1,8
	.byte	'Counter',0,79,182,1,1
	.word	18295
	.byte	4,0,3
	.byte	'Os_CounterIsFutureValue',0,3,79,200,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Counter',0,79,200,1,1
	.word	18295
	.byte	8
	.byte	'Value',0,79,200,1,1
	.word	139
	.byte	8
	.byte	'ReferenceValue',0,79,200,1,1
	.word	139
	.byte	26,4,0,0,3
	.byte	'Os_CounterIsFutureValueInternal',0,3,79,225,1,1
	.word	3094
	.byte	1,1,8
	.byte	'MaxCountingValue',0,79,225,1,1
	.word	139
	.byte	8
	.byte	'MaxDifferentialValue',0,79,225,1,1
	.word	139
	.byte	8
	.byte	'Value',0,79,225,1,1
	.word	139
	.byte	8
	.byte	'ReferenceValue',0,79,225,1,1
	.word	139
	.byte	26,4,4,0,0,3
	.byte	'Os_CounterCheckValueLeMaxAllowed',0,3,79,145,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Counter',0,79,145,2,1
	.word	18295
	.byte	8
	.byte	'Value',0,79,145,2,1
	.word	139
	.byte	26,4,0,0,3
	.byte	'Os_CounterCheckValueLeReducedMaxAllowed',0,3,79,159,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Counter',0,79,159,2,1
	.word	18295
	.byte	8
	.byte	'Reduce',0,79,159,2,1
	.word	139
	.byte	8
	.byte	'Value',0,79,159,2,1
	.word	139
	.byte	26,4,4,0,0,3
	.byte	'Os_CounterCheckValueGeMinCycleOrZero',0,3,79,175,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Counter',0,79,175,2,1
	.word	18295
	.byte	8
	.byte	'Cycle',0,79,175,2,1
	.word	139
	.byte	26,4,0,0,9
	.word	18067
	.byte	10
	.word	40878
	.byte	3
	.byte	'Os_CounterGetCharacteristics',0,3,79,189,2,1
	.word	40883
	.byte	1,1,8
	.byte	'Counter',0,79,189,2,1
	.word	18295
	.byte	4,0,3
	.byte	'Os_CounterGetMaxAllowedValue',0,3,79,203,2,1
	.word	139
	.byte	1,1,8
	.byte	'Counter',0,79,203,2,1
	.word	18295
	.byte	4,0,3
	.byte	'Os_CounterGetMaxCountingValue',0,3,79,217,2,1
	.word	139
	.byte	1,1,8
	.byte	'Counter',0,79,217,2,1
	.word	18295
	.byte	4,0,7
	.byte	'Os_Hal_TimerFrtInit',0,3,80,93,1,1,1,8
	.byte	'TimerConfig',0,80,93,1
	.word	19261
	.byte	4,0,3
	.byte	'Os_Hal_TimerFrtGetCounterValue',0,3,80,125,1
	.word	139
	.byte	1,1,8
	.byte	'TimerConfig',0,80,125,1
	.word	19261
	.byte	4,0,7
	.byte	'Os_Hal_TimerFrtSetCompareValue',0,3,80,139,1,1,1,1,8
	.byte	'TimerConfig',0,80,139,1,1
	.word	19261
	.byte	8
	.byte	'ExpirationTime',0,80,139,1,1
	.word	139
	.byte	4,0,7
	.byte	'Os_Hal_TimerFrtTriggerIrq',0,3,80,172,1,1,1,1,8
	.byte	'TimerConfig',0,80,172,1,1
	.word	19261
	.byte	4,0,11
	.byte	'Os_Hal_TimerPitConfigType_Tag',0,82,105,8,32,12
	.byte	'CounterRegisterAddress',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'CounterConfRegisterAddress',0
	.word	139
	.byte	4,2,35,4,12
	.byte	'CounterConfRegisterValue',0
	.word	139
	.byte	4,2,35,8,12
	.byte	'ReloadRegisterAddress',0
	.word	139
	.byte	4,2,35,12,12
	.byte	'ReloadConfRegisterAddress',0
	.word	139
	.byte	4,2,35,16,12
	.byte	'ReloadConfRegisterValue',0
	.word	139
	.byte	4,2,35,20,12
	.byte	'ReloadValue',0
	.word	4825
	.byte	2,2,35,24,12
	.byte	'InterruptSRCRegisterAddress',0
	.word	139
	.byte	4,2,35,26,0,9
	.word	41325
	.byte	10
	.word	41620
	.byte	7
	.byte	'Os_Hal_TimerPitInit',0,3,81,92,1,1,1,8
	.byte	'TimerConfig',0,81,92,1
	.word	41625
	.byte	4,0,14,38,219,1,9,8,12
	.byte	'Value',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'Compare',0
	.word	139
	.byte	4,2,35,4,0,10
	.word	41679
	.byte	11
	.byte	'Os_TimerSwConfigType_Tag',0,38,232,1,8,52,12
	.byte	'Counter',0
	.word	18680
	.byte	48,2,35,0,12
	.byte	'Dyn',0
	.word	41718
	.byte	4,2,35,48,0,9
	.word	41723
	.byte	10
	.word	41785
	.byte	7
	.byte	'Os_TimerSwInit',0,3,83,84,1,1,1,8
	.byte	'Timer',0,83,84,1
	.word	41790
	.byte	26,4,4,0,0,3
	.byte	'Os_TimerSwGetValue',0,3,83,220,1,1
	.word	139
	.byte	1,1,8
	.byte	'Timer',0,83,220,1,1
	.word	41790
	.byte	4,0,7
	.byte	'Os_TimerSwSetCompareValue',0,3,83,233,1,1,1,1,8
	.byte	'Timer',0,83,233,1,1
	.word	41790
	.byte	8
	.byte	'ExpirationTime',0,83,233,1,1
	.word	139
	.byte	4,0,3
	.byte	'Os_TimerSwUserModulo',0,3,83,252,1,1
	.word	139
	.byte	1,1,8
	.byte	'Timer',0,83,252,1,1
	.word	41790
	.byte	8
	.byte	'Value',0,83,252,1,1
	.word	139
	.byte	26,4,0,0,3
	.byte	'Os_TimerHrtGetValue',0,3,83,211,4,1
	.word	139
	.byte	1,1,8
	.byte	'Timer',0,83,211,4,1
	.word	19352
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCounter',0,3,83,205,2,1
	.word	18295
	.byte	1,1,8
	.byte	'Timer',0,83,205,2,1
	.word	19352
	.byte	4,0,3
	.byte	'Os_TimerHrtComputeHardwareCompareValue',0,3,83,229,2,1
	.word	139
	.byte	1,1,8
	.byte	'Timer',0,83,229,2,1
	.word	19352
	.byte	8
	.byte	'ExpirationTime',0,83,229,2,1
	.word	139
	.byte	26,26,4,0,0,0,7
	.byte	'Os_TimerHrtSetCompareValue',0,3,83,157,3,1,1,1,8
	.byte	'Timer',0,83,157,3,1
	.word	19352
	.byte	8
	.byte	'ExpirationTime',0,83,157,3,1
	.word	139
	.byte	26,4,4,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCompareValue',0,3,83,247,3,1
	.word	139
	.byte	1,1,8
	.byte	'Timer',0,83,247,3,1
	.word	19352
	.byte	4,0,3
	.byte	'Os_TimerSwAbsCounter2AbsTimerValue',0,3,83,137,5,1
	.word	139
	.byte	1,1,8
	.byte	'MaxAllowedValue',0,83,137,5,1
	.word	139
	.byte	8
	.byte	'Now',0,83,137,5,1
	.word	139
	.byte	8
	.byte	'CounterValue',0,83,137,5,1
	.word	139
	.byte	4,0,3
	.byte	'Os_TimerAdd',0,3,83,253,5,1
	.word	139
	.byte	1,1,8
	.byte	'MaxAllowedValue',0,83,253,5,1
	.word	139
	.byte	8
	.byte	'MaxCountingValue',0,83,253,5,1
	.word	139
	.byte	8
	.byte	'Value',0,83,253,5,1
	.word	139
	.byte	8
	.byte	'Add',0,83,253,5,1
	.word	139
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_TimerSub',0,3,83,173,6,1
	.word	139
	.byte	1,1,8
	.byte	'MaxCountingValue',0,83,173,6,1
	.word	139
	.byte	8
	.byte	'Value',0,83,173,6,1
	.word	139
	.byte	8
	.byte	'Sub',0,83,173,6,1
	.word	139
	.byte	26,4,4,4,0,0,7
	.byte	'Os_TimerFrtSetCompareValue',0,3,83,222,6,1,1,1,8
	.byte	'TimerConfig',0,83,222,6,1
	.word	19261
	.byte	8
	.byte	'CompareValue',0,83,222,6,1
	.word	139
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TimerFrtTickType2TickType',0,3,83,134,7,1
	.word	139
	.byte	1,1,8
	.byte	'Value',0,83,134,7,1
	.word	139
	.byte	4,0,3
	.byte	'Os_TimerTickType2FrtTickType',0,3,83,147,7,1
	.word	139
	.byte	1,1,8
	.byte	'Value',0,83,147,7,1
	.word	139
	.byte	4,0,9
	.word	.L328-.L32
	.byte	10
	.word	42869
	.byte	11
	.byte	'Os_TpBudgetType_Tag',0,37,157,2,8,8,12
	.byte	'Remaining',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'Previous',0
	.word	42874
	.byte	4,2,35,4,0,10
	.word	42879
	.byte	5,85,94,9,1,6
	.byte	'OS_TPMONITORINGTYPE_NONE',0,0,6
	.byte	'OS_TPMONITORINGTYPE_LOCK',0,1,6
	.byte	'OS_TPMONITORINGTYPE_EXECUTION',0,2,6
	.byte	'OS_TPMONITORINGTYPE_ARRIVAL',0,3,6
	.byte	'OS_TPMONITORINGTYPE_COUNT',0,4,0
.L328:
	.byte	11
	.byte	'Os_TpBudgetConfigType_Tag',0,37,168,2,8,12,12
	.byte	'Dyn',0
	.word	42943
	.byte	4,2,35,0,12
	.byte	'BudgetKind',0
	.word	42948
	.byte	1,2,35,4,12
	.byte	'Budget',0
	.word	139
	.byte	4,2,35,6,0,13
	.byte	'Os_TpBudgetConfigRefType',0,85,82,59
	.word	42874
	.byte	9
	.word	43180
	.byte	10
	.word	43213
	.byte	11
	.byte	'Os_TpOwnerThreadType_Tag',0,37,182,2,8,20,12
	.byte	'EarliestArrival',0
	.word	11136
	.byte	8,2,35,0,12
	.byte	'DelayLevel',0
	.word	3257
	.byte	1,2,35,8,12
	.byte	'MonitoredBudgets',0
	.word	42874
	.byte	4,2,35,12,12
	.byte	'Violation',0
	.word	42948
	.byte	1,2,35,16,0,10
	.word	43223
	.byte	11
	.byte	'Os_TpOwnerThreadConfigType_Tag',0,37,213,2,8,56,12
	.byte	'Base',0
	.word	28126
	.byte	1,2,35,0,12
	.byte	'TimeFrame',0
	.word	11136
	.byte	8,2,35,4,12
	.byte	'ExecutionBudget',0
	.word	43098
	.byte	12,2,35,12,12
	.byte	'AllInterruptLockBudget',0
	.word	43098
	.byte	12,2,35,24,12
	.byte	'OsInterruptLockBudget',0
	.word	43098
	.byte	12,2,35,36,12
	.byte	'ResourceLockBudgets',0
	.word	43218
	.byte	4,2,35,48,12
	.byte	'Dyn',0
	.word	43345
	.byte	4,2,35,52,0,9
	.word	43350
	.byte	10
	.word	43551
	.byte	3
	.byte	'Os_TpThread2TpOwnerThread',0,3,84,94,1
	.word	43556
	.byte	1,1,8
	.byte	'TpThread',0,84,94,1
	.word	28184
	.byte	26,4,0,0,9
	.word	43098
	.byte	10
	.word	43619
	.byte	3
	.byte	'Os_TpGetCurrentTpOwnerThread',0,3,84,108,1
	.word	43556
	.byte	1,1,8
	.byte	'Config',0,84,108,1
	.word	19512
	.byte	26,4,4,0,0,7
	.byte	'Os_TpThreadInit',0,3,84,127,1,1,1,8
	.byte	'Config',0,84,127,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,127,1
	.word	28184
	.byte	26,4,4,0,0,7
	.byte	'Os_TpThreadKill',0,3,84,157,1,1,1,1,8
	.byte	'Thread',0,84,157,1,1
	.word	28184
	.byte	26,4,4,0,0,7
	.byte	'Os_TpResume',0,3,84,184,1,1,1,1,8
	.byte	'Config',0,84,184,1,1
	.word	19512
	.byte	8
	.byte	'Now',0,84,184,1,1
	.word	139
	.byte	8
	.byte	'RemainingTime',0,84,184,1,1
	.word	139
	.byte	26,4,4,0,0,7
	.byte	'Os_TpSuspend',0,3,84,209,1,1,1,1,8
	.byte	'Config',0,84,209,1,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,209,1,1
	.word	43556
	.byte	8
	.byte	'Now',0,84,209,1,1
	.word	139
	.byte	8
	.byte	'Deadline',0,84,209,1,1
	.word	139
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TpSub',0,3,84,239,1,1
	.word	139
	.byte	1,1,8
	.byte	'Config',0,84,239,1,1
	.word	19512
	.byte	8
	.byte	'Value',0,84,239,1,1
	.word	139
	.byte	8
	.byte	'Sub',0,84,239,1,1
	.word	139
	.byte	26,4,4,4,0,0,3
	.byte	'Os_TpAdd',0,3,84,139,2,1
	.word	139
	.byte	1,1,8
	.byte	'Config',0,84,139,2,1
	.word	19512
	.byte	8
	.byte	'Value',0,84,139,2,1
	.word	139
	.byte	8
	.byte	'Add',0,84,139,2,1
	.word	139
	.byte	26,4,4,4,4,0,0,3
	.byte	'Os_TpGetArrivalTimeStamp',0,3,84,171,2,1
	.word	11136
	.byte	1,1,8
	.byte	'Config',0,84,171,2,1
	.word	19512
	.byte	26,4,0,0,7
	.byte	'Os_TpSwitch',0,3,84,207,2,1,1,1,8
	.byte	'Config',0,84,207,2,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,207,2,1
	.word	28184
	.byte	8
	.byte	'Next',0,84,207,2,1
	.word	28184
	.byte	8
	.byte	'NextThread',0,84,207,2,1
	.word	29265
	.byte	26,4,4,4,4,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_TpResetAndResume',0,3,84,157,3,1,1,1,8
	.byte	'Config',0,84,157,3,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,157,3,1
	.word	28184
	.byte	8
	.byte	'Next',0,84,157,3,1
	.word	28184
	.byte	8
	.byte	'NextThread',0,84,157,3,1
	.word	29265
	.byte	26,26,4,0,4,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_TpResetAfterWait',0,3,84,225,3,1,1,1,8
	.byte	'Config',0,84,225,3,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,225,3,1
	.word	28184
	.byte	26,26,4,0,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpCheckInterArrival',0,3,84,153,4,1
	.word	3094
	.byte	1,1,8
	.byte	'Config',0,84,153,4,1
	.word	19512
	.byte	8
	.byte	'TpThread',0,84,153,4,1
	.word	28184
	.byte	26,26,4,0,4,4,4,4,4,0,0,3
	.byte	'Os_TpGetResourceBudget',0,3,84,128,5,1
	.word	42874
	.byte	1,1,8
	.byte	'Current',0,84,128,5,1
	.word	43556
	.byte	8
	.byte	'Resource',0,84,128,5,1
	.word	11331
	.byte	26,4,4,0,0,7
	.byte	'Os_TpStartAllInterrupt',0,3,84,176,6,1,1,1,8
	.byte	'Config',0,84,176,6,1
	.word	19512
	.byte	26,4,4,4,4,0,0,7
	.byte	'Os_TpStopAllInterrupt',0,3,84,207,6,1,1,1,8
	.byte	'Config',0,84,207,6,1
	.word	19512
	.byte	26,4,4,4,4,0,0,7
	.byte	'Os_TpStartOsInterrupt',0,3,84,239,6,1,1,1,8
	.byte	'Config',0,84,239,6,1
	.word	19512
	.byte	26,4,4,4,4,0,0,7
	.byte	'Os_TpStopOsInterrupt',0,3,84,142,7,1,1,1,8
	.byte	'Config',0,84,142,7,1
	.word	19512
	.byte	26,4,4,4,4,0,0,7
	.byte	'Os_TpBudgetStart',0,3,84,182,7,1,1,1,8
	.byte	'Config',0,84,182,7,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,182,7,1
	.word	43556
	.byte	8
	.byte	'Budget',0,84,182,7,1
	.word	42874
	.byte	26,26,4,0,4,4,4,4,4,4,4,0,0,7
	.byte	'Os_TpBudgetStop',0,3,84,131,8,1,1,1,8
	.byte	'Config',0,84,131,8,1
	.word	19512
	.byte	8
	.byte	'Current',0,84,131,8,1
	.word	43556
	.byte	8
	.byte	'Budget',0,84,131,8,1
	.word	42874
	.byte	26,26,4,0,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpIsEnabledByCoreTpConfig',0,3,84,213,8,1
	.word	3094
	.byte	1,1,8
	.byte	'Config',0,84,213,8,1
	.word	19512
	.byte	4,0,3
	.byte	'Os_TpIsEnabledByThreadTpConfig',0,3,84,244,8,1
	.word	3094
	.byte	1,1,8
	.byte	'Config',0,84,244,8,1
	.word	28184
	.byte	4,0,13
	.byte	'Os_ServiceCallListType',0,87,66,59
	.word	27887
	.byte	10
	.word	45106
	.byte	7
	.byte	'Os_ServiceCallsInit',0,3,86,134,1,1,1,1,8
	.byte	'ServiceCalls',0,86,134,1,1
	.word	45137
	.byte	4,0,10
	.word	27690
	.byte	3
	.byte	'Os_JobGetCore',0,3,88,190,2,1
	.word	24105
	.byte	1,1,8
	.byte	'Job',0,88,190,2,1
	.word	18431
	.byte	26,4,0,0,3
	.byte	'Os_AppCheckIsAccessible',0,3,89,232,1,1
	.word	3094
	.byte	1,1,8
	.byte	'App',0,89,232,1,1
	.word	27405
	.byte	4,0,3
	.byte	'Os_AppGetCore',0,3,89,144,2,1
	.word	24105
	.byte	1,1,8
	.byte	'App',0,89,144,2,1
	.word	27405
	.byte	4,0,10
	.word	3257
	.byte	7
	.byte	'Os_FifoIdxIncrement',0,3,90,88,1,1,1,8
	.byte	'Index',0,90,88,1
	.word	45334
	.byte	8
	.byte	'Size',0,90,88,1
	.word	3257
	.byte	26,4,0,0,3
	.byte	'Os_FifoIsFull',0,3,90,118,1
	.word	3094
	.byte	1,1,8
	.byte	'WriteIdx',0,90,118,1
	.word	3257
	.byte	8
	.byte	'ReadIdx',0,90,118,1
	.word	3257
	.byte	8
	.byte	'Size',0,90,118,1
	.word	3257
	.byte	26,4,0,0,3
	.byte	'Os_FifoIsEmpty',0,3,90,142,1,1
	.word	3094
	.byte	1,1,8
	.byte	'WriteIdx',0,90,142,1,1
	.word	3257
	.byte	8
	.byte	'ReadIdx',0,90,142,1,1
	.word	3257
	.byte	4,0,9
	.word	3257
	.byte	10
	.word	45536
	.byte	7
	.byte	'Os_FifoEmptyQueue',0,3,90,158,1,1,1,1,8
	.byte	'WriteIdx',0,90,158,1,1
	.word	45541
	.byte	8
	.byte	'ReadIdx',0,90,158,1,1
	.word	45334
	.byte	4,0,3
	.byte	'Os_FifoIndicesInRange',0,3,90,178,1,1
	.word	3094
	.byte	1,1,8
	.byte	'WriteIdx',0,90,178,1,1
	.word	3257
	.byte	8
	.byte	'ReadIdx',0,90,178,1,1
	.word	3257
	.byte	8
	.byte	'Size',0,90,178,1,1
	.word	3257
	.byte	4,0,14,92,80,9,1,12
	.byte	'WriteIdx',0
	.word	3257
	.byte	1,2,35,0,0,10
	.word	45694
	.byte	14,92,87,9,1,12
	.byte	'ReadIdx',0
	.word	3257
	.byte	1,2,35,0,0,9
	.word	45723
	.byte	10
	.word	45746
	.byte	14,92,73,9,1,12
	.byte	'Value',0
	.word	3257
	.byte	1,2,35,0,0,10
	.word	45756
	.byte	11
	.byte	'Os_Fifo08WriteConfigType_Tag',0,92,94,8,16,12
	.byte	'Dyn',0
	.word	45718
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	45751
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	45777
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,0,9
	.word	45782
	.byte	10
	.word	45872
	.byte	3
	.byte	'Os_Fifo08IsFull',0,3,91,169,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,91,169,1,1
	.word	45877
	.byte	26,4,0,0,10
	.word	45723
	.byte	9
	.word	45694
	.byte	10
	.word	45933
	.byte	9
	.word	45756
	.byte	10
	.word	45943
	.byte	11
	.byte	'Os_Fifo08ReadConfigType_Tag',0,92,104,8,16,12
	.byte	'Dyn',0
	.word	45928
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	45938
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	45948
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,0,9
	.word	45953
	.byte	10
	.word	46043
	.byte	3
	.byte	'Os_Fifo08IsEmpty',0,3,91,132,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,91,132,2,1
	.word	46048
	.byte	26,4,0,0,14,94,80,9,1,12
	.byte	'WriteIdx',0
	.word	3257
	.byte	1,2,35,0,0,10
	.word	46100
	.byte	14,94,87,9,1,12
	.byte	'ReadIdx',0
	.word	3257
	.byte	1,2,35,0,0,9
	.word	46129
	.byte	10
	.word	46152
	.byte	14,94,73,9,2,12
	.byte	'Value',0
	.word	4825
	.byte	2,2,35,0,0,10
	.word	46162
	.byte	11
	.byte	'Os_Fifo16WriteConfigType_Tag',0,94,94,8,16,12
	.byte	'Dyn',0
	.word	46124
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	46157
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	46183
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,0,9
	.word	46188
	.byte	10
	.word	46278
	.byte	3
	.byte	'Os_Fifo16IsFull',0,3,93,169,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,93,169,1,1
	.word	46283
	.byte	26,4,0,0,10
	.word	46129
	.byte	9
	.word	46100
	.byte	10
	.word	46339
	.byte	9
	.word	46162
	.byte	10
	.word	46349
	.byte	11
	.byte	'Os_Fifo16ReadConfigType_Tag',0,94,104,8,16,12
	.byte	'Dyn',0
	.word	46334
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	46344
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	46354
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,0,9
	.word	46359
	.byte	10
	.word	46449
	.byte	3
	.byte	'Os_Fifo16IsEmpty',0,3,93,133,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,93,133,2,1
	.word	46454
	.byte	26,4,0,0,14,96,80,9,1,12
	.byte	'WriteIdx',0
	.word	3257
	.byte	1,2,35,0,0,10
	.word	46506
	.byte	14,96,87,9,1,12
	.byte	'ReadIdx',0
	.word	3257
	.byte	1,2,35,0,0,9
	.word	46535
	.byte	10
	.word	46558
	.byte	14,96,73,9,4,12
	.byte	'Value',0
	.word	139
	.byte	4,2,35,0,0,10
	.word	46568
	.byte	11
	.byte	'Os_Fifo32WriteConfigType_Tag',0,96,94,8,16,12
	.byte	'Dyn',0
	.word	46530
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	46563
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	46589
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,0,9
	.word	46594
	.byte	10
	.word	46684
	.byte	3
	.byte	'Os_Fifo32IsFull',0,3,95,169,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,95,169,1,1
	.word	46689
	.byte	26,4,0,0,10
	.word	46535
	.byte	9
	.word	46506
	.byte	10
	.word	46745
	.byte	9
	.word	46568
	.byte	10
	.word	46755
	.byte	11
	.byte	'Os_Fifo32ReadConfigType_Tag',0,96,104,8,16,12
	.byte	'Dyn',0
	.word	46740
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	46750
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	46760
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,0,9
	.word	46765
	.byte	10
	.word	46855
	.byte	3
	.byte	'Os_Fifo32IsEmpty',0,3,95,131,2,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,95,131,2,1
	.word	46860
	.byte	26,4,0,0,14,98,101,9,1,12
	.byte	'WriteIdx',0
	.word	3257
	.byte	1,2,35,0,0,10
	.word	46912
	.byte	14,98,108,9,1,12
	.byte	'ReadIdx',0
	.word	3257
	.byte	1,2,35,0,0,9
	.word	46941
	.byte	10
	.word	46964
	.byte	22,1,1,23
	.word	12117
	.byte	23
	.word	3257
	.byte	23
	.word	11294
	.byte	0,10
	.word	46974
	.byte	13
	.byte	'Os_FifoRefWriteCbk',0,98,92,9
	.word	46993
	.byte	11
	.byte	'Os_FifoRefWriteConfigType_Tag',0,98,115,8,20,12
	.byte	'Dyn',0
	.word	46936
	.byte	4,2,35,0,12
	.byte	'Read',0
	.word	46969
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	12117
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,12
	.byte	'WriteCbk',0
	.word	46998
	.byte	4,2,35,16,0,9
	.word	47025
	.byte	10
	.word	47134
	.byte	3
	.byte	'Os_FifoRefIsFull',0,3,97,167,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,97,167,1,1
	.word	47139
	.byte	26,4,0,0,10
	.word	46974
	.byte	10
	.word	46941
	.byte	9
	.word	46912
	.byte	10
	.word	47201
	.byte	22,1,1,23
	.word	11294
	.byte	23
	.word	3257
	.byte	23
	.word	12117
	.byte	0,10
	.word	47211
	.byte	13
	.byte	'Os_FifoRefReadCbk',0,98,78,9
	.word	47230
	.byte	11
	.byte	'Os_FifoRefReadConfigType_Tag',0,98,126,8,20,12
	.byte	'Dyn',0
	.word	47196
	.byte	4,2,35,0,12
	.byte	'Write',0
	.word	47206
	.byte	4,2,35,4,12
	.byte	'Data',0
	.word	11294
	.byte	4,2,35,8,12
	.byte	'Size',0
	.word	3257
	.byte	1,2,35,12,12
	.byte	'ReadCbk',0
	.word	47235
	.byte	4,2,35,16,0,9
	.word	47261
	.byte	10
	.word	47369
	.byte	3
	.byte	'Os_FifoRefIsEmpty',0,3,97,255,1,1
	.word	3094
	.byte	1,1,8
	.byte	'Fifo',0,97,255,1,1
	.word	47374
	.byte	26,4,0,0,10
	.word	47211
.L118:
	.byte	7
	.byte	'Os_InterruptDisableAllEnter',0,3,99,140,3,1,1,1
.L120:
	.byte	8
	.byte	'InterruptState',0,99,140,3,1
	.word	28043
.L122:
	.byte	4,0
.L129:
	.byte	7
	.byte	'Os_InterruptDisableAllExit',0,3,99,156,3,1,1,1
.L131:
	.byte	8
	.byte	'InterruptState',0,99,156,3,1
	.word	28043
.L133:
	.byte	4,0,10
	.word	4825
.L154:
	.byte	7
	.byte	'Os_InterruptTakeSnapshot',0,3,99,211,3,1,1,1
.L155:
	.byte	8
	.byte	'Snapshot',0,99,211,3,1
	.word	47555
.L157:
	.byte	8
	.byte	'Counter',0,99,211,3,1
	.word	4825
.L159:
	.byte	4,0
.L110:
	.byte	7
	.byte	'Os_IntSuspendCat1',0,3,99,249,3,1,1,1
.L112:
	.byte	8
	.byte	'Cat1State',0,99,249,3,1
	.word	31142
.L114:
	.byte	26,4,4,0,0
.L134:
	.byte	7
	.byte	'Os_IntResumeCat1',0,3,99,160,4,1,1,1
.L136:
	.byte	8
	.byte	'Cat1State',0,99,160,4,1
	.word	31192
.L138:
	.byte	26,4,0,0
.L176:
	.byte	7
	.byte	'Os_IntSuspendCat2',0,3,99,192,4,1,1,1
.L179:
	.byte	8
	.byte	'State',0,99,192,4,1
	.word	31142
.L181:
	.byte	26
.L182:
	.byte	4,4,4,4,4,0,0
.L217:
	.byte	7
	.byte	'Os_IntResumeCat2',0,3,99,234,4,1,1,1
.L219:
	.byte	8
	.byte	'Cat2State',0,99,234,4,1
	.word	31192
.L221:
	.byte	26,4,0,0,2
	.byte	'int',0,4,5,9
	.word	47825
	.byte	27
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	47832
	.byte	0,17
	.word	3094
	.byte	10
	.word	3094
	.byte	28
	.byte	'__cmpswapw',0
	.word	47874
	.byte	1,1,1,1,29
	.byte	'p',0
	.word	47879
	.byte	29
	.byte	'value',0
	.word	3094
	.byte	29
	.byte	'compare',0
	.word	3094
	.byte	0,17
	.word	47825
	.byte	28
	.byte	'__mfcr',0
	.word	47936
	.byte	1,1,1,1,23
	.word	47825
	.byte	0,30
	.byte	'__isync',0,1,1,1,1,30
	.byte	'__disable',0,1,1,1,1,30
	.byte	'__enable',0,1,1,1,1,31
	.word	160
	.byte	4,0,31
	.word	187
	.byte	4,0,31
	.word	214
	.byte	4,0,31
	.word	2747
	.byte	32
	.word	2787
	.byte	4,0,31
	.word	2804
	.byte	32
	.word	2844
	.byte	4,0,31
	.word	2862
	.byte	32
	.word	2903
	.byte	4,0,31
	.word	2921
	.byte	32
	.word	2961
	.byte	4,0,31
	.word	2979
	.byte	32
	.word	3019
	.byte	4,0,31
	.word	3037
	.byte	32
	.word	3076
	.byte	4,0,31
	.word	3110
	.byte	32
	.word	3138
	.byte	32
	.word	3150
	.byte	4,0,31
	.word	3169
	.byte	32
	.word	3201
	.byte	4,0,31
	.word	3218
	.byte	32
	.word	3236
	.byte	4,0,31
	.word	3274
	.byte	32
	.word	3312
	.byte	4,0,31
	.word	3332
	.byte	32
	.word	3372
	.byte	4,0,31
	.word	3402
	.byte	32
	.word	3437
	.byte	4,0,31
	.word	3453
	.byte	32
	.word	3488
	.byte	4,0,31
	.word	3504
	.byte	32
	.word	3540
	.byte	4,0,31
	.word	3572
	.byte	32
	.word	3608
	.byte	32
	.word	3631
	.byte	32
	.word	3645
	.byte	4,0,31
	.word	3677
	.byte	32
	.word	3713
	.byte	32
	.word	3736
	.byte	32
	.word	3750
	.byte	4,0,31
	.word	3782
	.byte	32
	.word	3818
	.byte	32
	.word	3841
	.byte	32
	.word	3855
	.byte	4,0,31
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	4,0,31
	.word	4148
	.byte	4,0,31
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,0,0,31
	.word	29796
	.byte	32
	.word	29829
	.byte	26,33
	.word	214
	.byte	34
	.word	238
	.byte	0,4,0,0,31
	.word	29854
	.byte	32
	.word	29891
	.byte	4,0,31
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	4,0,31
	.word	29995
	.byte	32
	.word	30019
	.byte	4,0,31
	.word	30054
	.byte	32
	.word	30086
	.byte	4,0,31
	.word	30106
	.byte	32
	.word	30137
	.byte	4,0,31
	.word	30157
	.byte	32
	.word	30183
	.byte	4,0,31
	.word	30203
	.byte	4,0,31
	.word	30228
	.byte	4,0,31
	.word	30260
	.byte	4,0,31
	.word	30293
	.byte	4,0,31
	.word	30354
	.byte	32
	.word	30387
	.byte	4,0,31
	.word	30409
	.byte	32
	.word	30436
	.byte	4,0,31
	.word	30463
	.byte	32
	.word	30490
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,0,0,31
	.word	30515
	.byte	32
	.word	30549
	.byte	4,0,31
	.word	30566
	.byte	32
	.word	30601
	.byte	4,0,31
	.word	30618
	.byte	32
	.word	30649
	.byte	4,0,31
	.word	30671
	.byte	32
	.word	30707
	.byte	4,0,31
	.word	30733
	.byte	32
	.word	30765
	.byte	4,0,31
	.word	30786
	.byte	32
	.word	30817
	.byte	4,0,31
	.word	30838
	.byte	32
	.word	30869
	.byte	4,0,31
	.word	30890
	.byte	32
	.word	30925
	.byte	32
	.word	30944
	.byte	4,0,31
	.word	30961
	.byte	32
	.word	30993
	.byte	32
	.word	31009
	.byte	4,0,31
	.word	31027
	.byte	32
	.word	31065
	.byte	4,0,31
	.word	31092
	.byte	32
	.word	31125
	.byte	4,0,31
	.word	31147
	.byte	32
	.word	31168
	.byte	26,4,33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,4,0,0,31
	.word	31197
	.byte	32
	.word	31218
	.byte	26,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,0,0,31
	.word	31247
	.byte	32
	.word	31284
	.byte	26,33
	.word	3169
	.byte	32
	.word	3201
	.byte	34
	.word	3216
	.byte	0,4,0,0,31
	.word	31312
	.byte	32
	.word	31340
	.byte	4,0,31
	.word	31366
	.byte	32
	.word	31401
	.byte	26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,4,33
	.word	44600
	.byte	32
	.word	44631
	.byte	35
	.word	44647
	.byte	35
	.word	44648
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	35
	.word	44886
	.byte	35
	.word	44887
	.byte	35
	.word	44888
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44890
	.byte	34
	.word	44891
	.byte	34
	.word	44892
	.byte	34
	.word	44893
	.byte	34
	.word	44894
	.byte	34
	.word	44895
	.byte	34
	.word	44896
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44649
	.byte	34
	.word	44650
	.byte	34
	.word	44651
	.byte	0,0,4,0,0,31
	.word	31423
	.byte	32
	.word	31457
	.byte	26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,4,33
	.word	44654
	.byte	32
	.word	44684
	.byte	35
	.word	44700
	.byte	35
	.word	44701
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	35
	.word	44972
	.byte	35
	.word	44973
	.byte	35
	.word	44974
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44976
	.byte	34
	.word	44977
	.byte	34
	.word	44978
	.byte	34
	.word	44979
	.byte	34
	.word	44980
	.byte	34
	.word	44981
	.byte	34
	.word	44982
	.byte	34
	.word	44983
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44702
	.byte	34
	.word	44703
	.byte	34
	.word	44704
	.byte	0,0,4,0,0,31
	.word	31479
	.byte	32
	.word	31513
	.byte	26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,4,33
	.word	44707
	.byte	32
	.word	44737
	.byte	35
	.word	44753
	.byte	35
	.word	44754
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	35
	.word	44886
	.byte	35
	.word	44887
	.byte	35
	.word	44888
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44890
	.byte	34
	.word	44891
	.byte	34
	.word	44892
	.byte	34
	.word	44893
	.byte	34
	.word	44894
	.byte	34
	.word	44895
	.byte	34
	.word	44896
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44755
	.byte	34
	.word	44756
	.byte	34
	.word	44757
	.byte	0,0,4,0,0,31
	.word	31535
	.byte	32
	.word	31568
	.byte	26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,4,33
	.word	44760
	.byte	32
	.word	44789
	.byte	35
	.word	44805
	.byte	35
	.word	44806
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	35
	.word	44972
	.byte	35
	.word	44973
	.byte	35
	.word	44974
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44976
	.byte	34
	.word	44977
	.byte	34
	.word	44978
	.byte	34
	.word	44979
	.byte	34
	.word	44980
	.byte	34
	.word	44981
	.byte	34
	.word	44982
	.byte	34
	.word	44983
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44807
	.byte	34
	.word	44808
	.byte	34
	.word	44809
	.byte	0,0,4,0,0,31
	.word	31590
	.byte	26,4,33
	.word	37121
	.byte	35
	.word	37162
	.byte	34
	.word	37163
	.byte	0,0,4,33
	.word	30260
	.byte	34
	.word	30291
	.byte	0,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	31366
	.byte	32
	.word	31401
	.byte	35
	.word	31417
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,34
	.word	31418
	.byte	33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,34
	.word	31419
	.byte	33
	.word	44600
	.byte	32
	.word	44631
	.byte	35
	.word	44647
	.byte	35
	.word	44648
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	35
	.word	44886
	.byte	35
	.word	44887
	.byte	35
	.word	44888
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44890
	.byte	34
	.word	44891
	.byte	34
	.word	44892
	.byte	34
	.word	44893
	.byte	34
	.word	44894
	.byte	34
	.word	44895
	.byte	34
	.word	44896
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44649
	.byte	34
	.word	44650
	.byte	34
	.word	44651
	.byte	0,0,34
	.word	31420
	.byte	0,0,4,0,0,31
	.word	31632
	.byte	26,4,33
	.word	37210
	.byte	35
	.word	37250
	.byte	34
	.word	37251
	.byte	0,0,4,33
	.word	30228
	.byte	34
	.word	30258
	.byte	0,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	31423
	.byte	32
	.word	31457
	.byte	35
	.word	31473
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,34
	.word	31474
	.byte	33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,34
	.word	31475
	.byte	33
	.word	44654
	.byte	32
	.word	44684
	.byte	35
	.word	44700
	.byte	35
	.word	44701
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	35
	.word	44972
	.byte	35
	.word	44973
	.byte	35
	.word	44974
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44976
	.byte	34
	.word	44977
	.byte	34
	.word	44978
	.byte	34
	.word	44979
	.byte	34
	.word	44980
	.byte	34
	.word	44981
	.byte	34
	.word	44982
	.byte	34
	.word	44983
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44702
	.byte	34
	.word	44703
	.byte	34
	.word	44704
	.byte	0,0,34
	.word	31476
	.byte	0,0,4,0,0,31
	.word	31673
	.byte	26,26,33
	.word	30566
	.byte	32
	.word	30601
	.byte	34
	.word	30616
	.byte	0,33
	.word	30463
	.byte	32
	.word	30490
	.byte	35
	.word	30505
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	30506
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	30507
	.byte	0,0,0,33
	.word	37166
	.byte	35
	.word	37206
	.byte	34
	.word	37207
	.byte	0,0,4,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	31479
	.byte	32
	.word	31513
	.byte	35
	.word	31529
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,34
	.word	31530
	.byte	33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,34
	.word	31531
	.byte	33
	.word	44707
	.byte	32
	.word	44737
	.byte	35
	.word	44753
	.byte	35
	.word	44754
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	35
	.word	44886
	.byte	35
	.word	44887
	.byte	35
	.word	44888
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44890
	.byte	34
	.word	44891
	.byte	34
	.word	44892
	.byte	34
	.word	44893
	.byte	34
	.word	44894
	.byte	34
	.word	44895
	.byte	34
	.word	44896
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44755
	.byte	34
	.word	44756
	.byte	34
	.word	44757
	.byte	0,0,34
	.word	31532
	.byte	0,0,4,4,0,0,31
	.word	31715
	.byte	26,26,33
	.word	30618
	.byte	32
	.word	30649
	.byte	34
	.word	30664
	.byte	0,33
	.word	30463
	.byte	32
	.word	30490
	.byte	35
	.word	30505
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	30506
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	30507
	.byte	0,0,0,33
	.word	37254
	.byte	35
	.word	37293
	.byte	34
	.word	37294
	.byte	0,0,4,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	31535
	.byte	32
	.word	31568
	.byte	35
	.word	31584
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,34
	.word	31585
	.byte	33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,34
	.word	31586
	.byte	33
	.word	44760
	.byte	32
	.word	44789
	.byte	35
	.word	44805
	.byte	35
	.word	44806
	.byte	33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	35
	.word	44972
	.byte	35
	.word	44973
	.byte	35
	.word	44974
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44976
	.byte	34
	.word	44977
	.byte	34
	.word	44978
	.byte	34
	.word	44979
	.byte	34
	.word	44980
	.byte	34
	.word	44981
	.byte	34
	.word	44982
	.byte	34
	.word	44983
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44807
	.byte	34
	.word	44808
	.byte	34
	.word	44809
	.byte	0,0,34
	.word	31587
	.byte	0,0,4,4,0,0,31
	.word	31756
	.byte	26,26,33
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	34
	.word	29983
	.byte	0,33
	.word	34375
	.byte	35
	.word	34410
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34411
	.byte	33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,34
	.word	34412
	.byte	33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,34
	.word	34413
	.byte	0,0,0,4,4,0,0,31
	.word	31792
	.byte	32
	.word	31828
	.byte	26,4,33
	.word	29854
	.byte	32
	.word	29891
	.byte	34
	.word	29909
	.byte	0,4,0,0,31
	.word	31860
	.byte	32
	.word	31893
	.byte	32
	.word	31910
	.byte	4,0,31
	.word	31927
	.byte	32
	.word	31969
	.byte	4,0,31
	.word	31991
	.byte	32
	.word	32028
	.byte	4,0,31
	.word	32050
	.byte	32
	.word	32084
	.byte	32
	.word	32102
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	31927
	.byte	32
	.word	31969
	.byte	34
	.word	31989
	.byte	0,4,33
	.word	31991
	.byte	32
	.word	32028
	.byte	34
	.word	32048
	.byte	0,4,33
	.word	31860
	.byte	32
	.word	31893
	.byte	32
	.word	31910
	.byte	34
	.word	31925
	.byte	0,4,0,0,31
	.word	32135
	.byte	32
	.word	32163
	.byte	32
	.word	32177
	.byte	4,0,31
	.word	32197
	.byte	32
	.word	32225
	.byte	32
	.word	32239
	.byte	4,0,31
	.word	32254
	.byte	32
	.word	32301
	.byte	32
	.word	32315
	.byte	4,0,31
	.word	32331
	.byte	32
	.word	32370
	.byte	4,0,31
	.word	32391
	.byte	32
	.word	32434
	.byte	4,0,31
	.word	32460
	.byte	32
	.word	32483
	.byte	4,0,31
	.word	32512
	.byte	32
	.word	32540
	.byte	4,0,31
	.word	32560
	.byte	32
	.word	32596
	.byte	4,0,31
	.word	32616
	.byte	32
	.word	32647
	.byte	4,0,31
	.word	32667
	.byte	32
	.word	32699
	.byte	26,33
	.word	32616
	.byte	32
	.word	32647
	.byte	34
	.word	32665
	.byte	0,4,33
	.word	32817
	.byte	32
	.word	32847
	.byte	34
	.word	32861
	.byte	0,4,0,0,31
	.word	32722
	.byte	32
	.word	32759
	.byte	26,33
	.word	32616
	.byte	32
	.word	32647
	.byte	34
	.word	32665
	.byte	0,4,0,0,31
	.word	32781
	.byte	32
	.word	32801
	.byte	4,0,31
	.word	32817
	.byte	32
	.word	32847
	.byte	4,0,31
	.word	32863
	.byte	32
	.word	32907
	.byte	4,0,31
	.word	32923
	.byte	32
	.word	32949
	.byte	4,0,31
	.word	32970
	.byte	32
	.word	32997
	.byte	4,0,31
	.word	33158
	.byte	32
	.word	33188
	.byte	26,33
	.word	32923
	.byte	32
	.word	32949
	.byte	34
	.word	32963
	.byte	0,4,0,0,31
	.word	33210
	.byte	32
	.word	33248
	.byte	26,4,33
	.word	37014
	.byte	32
	.word	37044
	.byte	35
	.word	37062
	.byte	34
	.word	37063
	.byte	0,0,4,33
	.word	33158
	.byte	32
	.word	33188
	.byte	35
	.word	33206
	.byte	33
	.word	32923
	.byte	32
	.word	32949
	.byte	34
	.word	32963
	.byte	0,34
	.word	33207
	.byte	0,0,4,33
	.word	30106
	.byte	32
	.word	30137
	.byte	34
	.word	30155
	.byte	0,4,0,0,31
	.word	33273
	.byte	32
	.word	33306
	.byte	26,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,0,0,31
	.word	33333
	.byte	26,33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,4,0,0,31
	.word	33371
	.byte	32
	.word	33399
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	33417
	.byte	32
	.word	33446
	.byte	4,0,31
	.word	33462
	.byte	32
	.word	33504
	.byte	4,0,31
	.word	33520
	.byte	32
	.word	33549
	.byte	4,0,31
	.word	33565
	.byte	32
	.word	33599
	.byte	4,0,31
	.word	33831
	.byte	32
	.word	33866
	.byte	4,0,31
	.word	33882
	.byte	32
	.word	33913
	.byte	4,0,31
	.word	33929
	.byte	32
	.word	33961
	.byte	4,0,31
	.word	33977
	.byte	32
	.word	34009
	.byte	4,0,31
	.word	34025
	.byte	32
	.word	34072
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,4,0,0,31
	.word	34091
	.byte	32
	.word	34132
	.byte	32
	.word	34146
	.byte	26,33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,4,0,0,31
	.word	34163
	.byte	32
	.word	34209
	.byte	4,0,31
	.word	34229
	.byte	32
	.word	34254
	.byte	26,33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,4,33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,4,33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,4,0,0,31
	.word	34276
	.byte	26,33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,4,33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,4,33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,4,0,0,31
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	26,33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,4,0,0,31
	.word	34375
	.byte	26,33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,4,33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,4,33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,4,0,0,31
	.word	34851
	.byte	4,0,31
	.word	34888
	.byte	32
	.word	34924
	.byte	4,0,31
	.word	34942
	.byte	32
	.word	34976
	.byte	32
	.word	34995
	.byte	32
	.word	35010
	.byte	4,0,31
	.word	35035
	.byte	32
	.word	35069
	.byte	32
	.word	35088
	.byte	32
	.word	35103
	.byte	4,0,31
	.word	35128
	.byte	32
	.word	35154
	.byte	32
	.word	35169
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	36127
	.byte	32
	.word	36163
	.byte	32
	.word	36186
	.byte	32
	.word	36203
	.byte	35
	.word	36235
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36236
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	36237
	.byte	0,0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	35
	.word	36356
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36357
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36358
	.byte	0,0,4,0,0,31
	.word	35192
	.byte	32
	.word	35220
	.byte	32
	.word	35236
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	36127
	.byte	32
	.word	36163
	.byte	32
	.word	36186
	.byte	32
	.word	36203
	.byte	35
	.word	36235
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36236
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	36237
	.byte	0,0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,4,33
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	35
	.word	36356
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36357
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36358
	.byte	0,0,4,0,0,31
	.word	35262
	.byte	32
	.word	35297
	.byte	32
	.word	35314
	.byte	4,0,31
	.word	35436
	.byte	32
	.word	35467
	.byte	32
	.word	35484
	.byte	4,0,31
	.word	35511
	.byte	32
	.word	35551
	.byte	32
	.word	35568
	.byte	4,0,31
	.word	35594
	.byte	32
	.word	35631
	.byte	4,0,31
	.word	35660
	.byte	32
	.word	35694
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,4,0,0,31
	.word	35714
	.byte	32
	.word	35751
	.byte	32
	.word	35774
	.byte	32
	.word	35791
	.byte	26,26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,33
	.word	36127
	.byte	32
	.word	36163
	.byte	32
	.word	36186
	.byte	32
	.word	36203
	.byte	35
	.word	36235
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36236
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	36237
	.byte	0,0,33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,33
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	35
	.word	36356
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36357
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36358
	.byte	0,0,0,4,4,33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,4,4,4,33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,4,0,0,31
	.word	35815
	.byte	32
	.word	35843
	.byte	32
	.word	35859
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,4,33
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	35
	.word	36356
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36357
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36358
	.byte	0,0,4,0,0,31
	.word	35884
	.byte	32
	.word	35913
	.byte	32
	.word	35930
	.byte	26,33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,4,33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,4,33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,4,0,0,31
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	26,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,0,0,31
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	26,33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,4,0,0,31
	.word	36127
	.byte	32
	.word	36163
	.byte	32
	.word	36186
	.byte	32
	.word	36203
	.byte	26,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,4,0,0,31
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	26,33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,4,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,0,0,31
	.word	36361
	.byte	32
	.word	36394
	.byte	4,0,31
	.word	36452
	.byte	32
	.word	36476
	.byte	32
	.word	36492
	.byte	4,0,31
	.word	36522
	.byte	32
	.word	36542
	.byte	32
	.word	36559
	.byte	4,0,31
	.word	36575
	.byte	32
	.word	36597
	.byte	4,0,31
	.word	36621
	.byte	32
	.word	36648
	.byte	4,0,31
	.word	36666
	.byte	32
	.word	36701
	.byte	26,4,0,0,31
	.word	36719
	.byte	32
	.word	36748
	.byte	32
	.word	36774
	.byte	32
	.word	36791
	.byte	26,4,4,0,0,31
	.word	36810
	.byte	32
	.word	36847
	.byte	32
	.word	36864
	.byte	26,4,4,0,0,31
	.word	36883
	.byte	32
	.word	36922
	.byte	32
	.word	36939
	.byte	26,4,4,0,0,31
	.word	36958
	.byte	32
	.word	36992
	.byte	26,4,0,0,31
	.word	37014
	.byte	32
	.word	37044
	.byte	26,4,0,0,31
	.word	37066
	.byte	32
	.word	37099
	.byte	26,4,0,0,31
	.word	37121
	.byte	26,4,0,0,31
	.word	37166
	.byte	26,4,0,0,31
	.word	37210
	.byte	26,4,0,0,31
	.word	37254
	.byte	26,4,0,0,31
	.word	37297
	.byte	32
	.word	37330
	.byte	4,0,31
	.word	37347
	.byte	32
	.word	37377
	.byte	4,0,31
	.word	37395
	.byte	32
	.word	37428
	.byte	4,0,31
	.word	37446
	.byte	32
	.word	37488
	.byte	4,0,31
	.word	37506
	.byte	32
	.word	37535
	.byte	4,0,31
	.word	37553
	.byte	32
	.word	37589
	.byte	4,0,31
	.word	37607
	.byte	32
	.word	37635
	.byte	4,0,31
	.word	37653
	.byte	32
	.word	37680
	.byte	4,0,31
	.word	37698
	.byte	32
	.word	37739
	.byte	32
	.word	37755
	.byte	4,0,31
	.word	37774
	.byte	32
	.word	37802
	.byte	4,0,31
	.word	37820
	.byte	32
	.word	37861
	.byte	4,0,31
	.word	37879
	.byte	32
	.word	37919
	.byte	26,33
	.word	32512
	.byte	32
	.word	32540
	.byte	34
	.word	32558
	.byte	0,4,33
	.word	32616
	.byte	32
	.word	32647
	.byte	34
	.word	32665
	.byte	0,4,33
	.word	32667
	.byte	32
	.word	32699
	.byte	35
	.word	32717
	.byte	33
	.word	32616
	.byte	32
	.word	32647
	.byte	34
	.word	32665
	.byte	0,34
	.word	32718
	.byte	33
	.word	32817
	.byte	32
	.word	32847
	.byte	34
	.word	32861
	.byte	0,34
	.word	32719
	.byte	0,0,4,0,0,31
	.word	37941
	.byte	32
	.word	37980
	.byte	26,33
	.word	32512
	.byte	32
	.word	32540
	.byte	34
	.word	32558
	.byte	0,4,33
	.word	32616
	.byte	32
	.word	32647
	.byte	34
	.word	32665
	.byte	0,4,33
	.word	32722
	.byte	32
	.word	32759
	.byte	35
	.word	32777
	.byte	33
	.word	32616
	.byte	32
	.word	32647
	.byte	34
	.word	32665
	.byte	0,34
	.word	32778
	.byte	0,0,4,0,0,31
	.word	38002
	.byte	32
	.word	38040
	.byte	4,0,31
	.word	38058
	.byte	32
	.word	38096
	.byte	4,0,31
	.word	38114
	.byte	32
	.word	38149
	.byte	26,33
	.word	31312
	.byte	32
	.word	31340
	.byte	34
	.word	31364
	.byte	0,4,33
	.word	38058
	.byte	32
	.word	38096
	.byte	34
	.word	38112
	.byte	0,4,33
	.word	38002
	.byte	32
	.word	38040
	.byte	34
	.word	38056
	.byte	0,4,0,0,31
	.word	38171
	.byte	32
	.word	38203
	.byte	32
	.word	38217
	.byte	26,26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	44262
	.byte	32
	.word	44290
	.byte	32
	.word	44306
	.byte	32
	.word	44323
	.byte	32
	.word	44337
	.byte	35
	.word	44357
	.byte	35
	.word	44358
	.byte	35
	.word	44359
	.byte	33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,0,34
	.word	44361
	.byte	34
	.word	44362
	.byte	33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44363
	.byte	34
	.word	44364
	.byte	34
	.word	44365
	.byte	34
	.word	44366
	.byte	34
	.word	44367
	.byte	34
	.word	44368
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	38757
	.byte	32
	.word	38789
	.byte	35
	.word	38805
	.byte	34
	.word	38806
	.byte	0,0,4,33
	.word	36522
	.byte	32
	.word	36542
	.byte	32
	.word	36559
	.byte	34
	.word	36573
	.byte	0,4,33
	.word	38905
	.byte	32
	.word	38940
	.byte	34
	.word	38956
	.byte	0,4,4,4,4,4,33
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	35
	.word	34371
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34372
	.byte	0,0,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	34
	.word	38755
	.byte	0,4,33
	.word	34229
	.byte	32
	.word	34254
	.byte	35
	.word	34270
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34271
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34272
	.byte	33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,34
	.word	34273
	.byte	0,0,4,33
	.word	37607
	.byte	32
	.word	37635
	.byte	34
	.word	37651
	.byte	0,4,33
	.word	31756
	.byte	35
	.word	31786
	.byte	35
	.word	31787
	.byte	33
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	34
	.word	29983
	.byte	0,33
	.word	34375
	.byte	35
	.word	34410
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34411
	.byte	33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,34
	.word	34412
	.byte	33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,34
	.word	34413
	.byte	0,0,0,34
	.word	31788
	.byte	34
	.word	31789
	.byte	0,0,4,33
	.word	35594
	.byte	32
	.word	35631
	.byte	34
	.word	35648
	.byte	0,4,33
	.word	35714
	.byte	32
	.word	35751
	.byte	32
	.word	35774
	.byte	32
	.word	35791
	.byte	35
	.word	35805
	.byte	35
	.word	35806
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,33
	.word	36127
	.byte	32
	.word	36163
	.byte	32
	.word	36186
	.byte	32
	.word	36203
	.byte	35
	.word	36235
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36236
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	36237
	.byte	0,0,33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,33
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	35
	.word	36356
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36357
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36358
	.byte	0,0,0,34
	.word	35807
	.byte	34
	.word	35808
	.byte	33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,34
	.word	35809
	.byte	34
	.word	35810
	.byte	34
	.word	35811
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	35812
	.byte	0,0,4,4,0,0,31
	.word	38265
	.byte	32
	.word	38293
	.byte	32
	.word	38307
	.byte	26,33
	.word	36575
	.byte	32
	.word	36597
	.byte	34
	.word	36619
	.byte	0,4,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,4,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,4,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,4,33
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	35
	.word	34371
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34372
	.byte	0,0,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	34
	.word	38755
	.byte	0,4,33
	.word	34229
	.byte	32
	.word	34254
	.byte	35
	.word	34270
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34271
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34272
	.byte	33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,34
	.word	34273
	.byte	0,0,4,33
	.word	35660
	.byte	32
	.word	35694
	.byte	35
	.word	35708
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	35709
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	35710
	.byte	33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,34
	.word	35711
	.byte	0,0,4,33
	.word	35594
	.byte	32
	.word	35631
	.byte	34
	.word	35648
	.byte	0,4,33
	.word	44262
	.byte	32
	.word	44290
	.byte	32
	.word	44306
	.byte	32
	.word	44323
	.byte	32
	.word	44337
	.byte	35
	.word	44357
	.byte	35
	.word	44358
	.byte	35
	.word	44359
	.byte	33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,0,34
	.word	44361
	.byte	34
	.word	44362
	.byte	33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44363
	.byte	34
	.word	44364
	.byte	34
	.word	44365
	.byte	34
	.word	44366
	.byte	34
	.word	44367
	.byte	34
	.word	44368
	.byte	0,0,4,0,0,31
	.word	38349
	.byte	32
	.word	38383
	.byte	32
	.word	38397
	.byte	26,26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	44262
	.byte	32
	.word	44290
	.byte	32
	.word	44306
	.byte	32
	.word	44323
	.byte	32
	.word	44337
	.byte	35
	.word	44357
	.byte	35
	.word	44358
	.byte	35
	.word	44359
	.byte	33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,0,34
	.word	44361
	.byte	34
	.word	44362
	.byte	33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44363
	.byte	34
	.word	44364
	.byte	34
	.word	44365
	.byte	34
	.word	44366
	.byte	34
	.word	44367
	.byte	34
	.word	44368
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	36522
	.byte	32
	.word	36542
	.byte	32
	.word	36559
	.byte	34
	.word	36573
	.byte	0,4,33
	.word	38905
	.byte	32
	.word	38940
	.byte	34
	.word	38956
	.byte	0,4,4,4,4,4,33
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	35
	.word	34371
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34372
	.byte	0,0,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	35884
	.byte	32
	.word	35913
	.byte	32
	.word	35930
	.byte	35
	.word	35944
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	35945
	.byte	33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,34
	.word	35946
	.byte	33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,34
	.word	35947
	.byte	0,0,4,33
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	34
	.word	38755
	.byte	0,4,33
	.word	34229
	.byte	32
	.word	34254
	.byte	35
	.word	34270
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34271
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34272
	.byte	33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,34
	.word	34273
	.byte	0,0,4,33
	.word	37607
	.byte	32
	.word	37635
	.byte	34
	.word	37651
	.byte	0,4,33
	.word	31756
	.byte	35
	.word	31786
	.byte	35
	.word	31787
	.byte	33
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	34
	.word	29983
	.byte	0,33
	.word	34375
	.byte	35
	.word	34410
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34411
	.byte	33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,34
	.word	34412
	.byte	33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,34
	.word	34413
	.byte	0,0,0,34
	.word	31788
	.byte	34
	.word	31789
	.byte	0,0,4,33
	.word	35594
	.byte	32
	.word	35631
	.byte	34
	.word	35648
	.byte	0,4,4,0,0,31
	.word	38444
	.byte	32
	.word	38468
	.byte	32
	.word	38485
	.byte	32
	.word	38499
	.byte	26,26,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	44161
	.byte	32
	.word	44181
	.byte	32
	.word	44197
	.byte	32
	.word	44214
	.byte	32
	.word	44228
	.byte	35
	.word	44248
	.byte	35
	.word	44249
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43870
	.byte	32
	.word	43891
	.byte	32
	.word	43907
	.byte	32
	.word	43924
	.byte	32
	.word	43937
	.byte	35
	.word	43955
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	43956
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	43957
	.byte	33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,34
	.word	43958
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,34
	.word	44250
	.byte	34
	.word	44251
	.byte	34
	.word	44252
	.byte	33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44253
	.byte	34
	.word	44254
	.byte	34
	.word	44255
	.byte	34
	.word	44256
	.byte	34
	.word	44257
	.byte	34
	.word	44258
	.byte	34
	.word	44259
	.byte	0,0,0,33
	.word	38854
	.byte	32
	.word	38887
	.byte	34
	.word	38903
	.byte	0,4,33
	.word	36522
	.byte	32
	.word	36542
	.byte	32
	.word	36559
	.byte	34
	.word	36573
	.byte	0,4,33
	.word	38905
	.byte	32
	.word	38940
	.byte	34
	.word	38956
	.byte	0,4,4,4,4,4,33
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	35
	.word	34371
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34372
	.byte	0,0,4,33
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	34
	.word	38755
	.byte	0,4,33
	.word	34229
	.byte	32
	.word	34254
	.byte	35
	.word	34270
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34271
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34272
	.byte	33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,34
	.word	34273
	.byte	0,0,4,33
	.word	31756
	.byte	35
	.word	31786
	.byte	35
	.word	31787
	.byte	33
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	34
	.word	29983
	.byte	0,33
	.word	34375
	.byte	35
	.word	34410
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34411
	.byte	33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,34
	.word	34412
	.byte	33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,34
	.word	34413
	.byte	0,0,0,34
	.word	31788
	.byte	34
	.word	31789
	.byte	0,0,4,33
	.word	35594
	.byte	32
	.word	35631
	.byte	34
	.word	35648
	.byte	0,4,4,0,0,31
	.word	38543
	.byte	32
	.word	38580
	.byte	4,0,31
	.word	38598
	.byte	32
	.word	38633
	.byte	32
	.word	38649
	.byte	26,33
	.word	35511
	.byte	32
	.word	35551
	.byte	32
	.word	35568
	.byte	34
	.word	35592
	.byte	0,4,0,0,31
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	4,0,31
	.word	38757
	.byte	32
	.word	38789
	.byte	26,4,0,0,31
	.word	38809
	.byte	32
	.word	38834
	.byte	26,4,0,0,31
	.word	38854
	.byte	32
	.word	38887
	.byte	4,0,31
	.word	38905
	.byte	32
	.word	38940
	.byte	4,0,31
	.word	38958
	.byte	32
	.word	38986
	.byte	26,33
	.word	30733
	.byte	32
	.word	30765
	.byte	34
	.word	30784
	.byte	0,4,0,0,31
	.word	39003
	.byte	32
	.word	39031
	.byte	4,0,31
	.word	39046
	.byte	32
	.word	39074
	.byte	32
	.word	39087
	.byte	26,33
	.word	39152
	.byte	32
	.word	39179
	.byte	35
	.word	39192
	.byte	33
	.word	30838
	.byte	32
	.word	30869
	.byte	34
	.word	30888
	.byte	0,34
	.word	39193
	.byte	0,0,4,33
	.word	39114
	.byte	32
	.word	39135
	.byte	35
	.word	39148
	.byte	33
	.word	30786
	.byte	32
	.word	30817
	.byte	34
	.word	30836
	.byte	0,34
	.word	39149
	.byte	0,0,4,0,0,31
	.word	39114
	.byte	32
	.word	39135
	.byte	26,33
	.word	30786
	.byte	32
	.word	30817
	.byte	34
	.word	30836
	.byte	0,4,0,0,31
	.word	39152
	.byte	32
	.word	39179
	.byte	26,33
	.word	30838
	.byte	32
	.word	30869
	.byte	34
	.word	30888
	.byte	0,4,0,0,31
	.word	39206
	.byte	32
	.word	39240
	.byte	32
	.word	39254
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	39281
	.byte	32
	.word	39325
	.byte	4,0,31
	.word	39354
	.byte	32
	.word	39378
	.byte	32
	.word	39396
	.byte	32
	.word	39416
	.byte	32
	.word	39437
	.byte	26,4,0,0,31
	.word	39461
	.byte	32
	.word	39503
	.byte	32
	.word	39521
	.byte	32
	.word	39541
	.byte	4,0,31
	.word	39559
	.byte	32
	.word	39587
	.byte	4,0,31
	.word	39602
	.byte	32
	.word	39632
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	37607
	.byte	32
	.word	37635
	.byte	34
	.word	37651
	.byte	0,4,0,0,31
	.word	39867
	.byte	32
	.word	39893
	.byte	26,33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,4,0,0,31
	.word	39911
	.byte	32
	.word	39935
	.byte	32
	.word	39949
	.byte	26,33
	.word	39867
	.byte	32
	.word	39893
	.byte	35
	.word	39907
	.byte	33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,34
	.word	39908
	.byte	0,0,4,0,0,31
	.word	39968
	.byte	32
	.word	39993
	.byte	4,0,31
	.word	40009
	.byte	32
	.word	40041
	.byte	26,33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,4,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,33
	.word	33977
	.byte	32
	.word	34009
	.byte	34
	.word	34023
	.byte	0,4,0,0,31
	.word	40061
	.byte	32
	.word	40088
	.byte	26,33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,4,33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,4,0,0,31
	.word	40107
	.byte	32
	.word	40138
	.byte	26,33
	.word	33273
	.byte	32
	.word	33306
	.byte	35
	.word	33319
	.byte	33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,34
	.word	33320
	.byte	0,0,4,33
	.word	40061
	.byte	32
	.word	40088
	.byte	35
	.word	40102
	.byte	33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,34
	.word	40103
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,34
	.word	40104
	.byte	0,0,4,0,0,31
	.word	40157
	.byte	32
	.word	40179
	.byte	32
	.word	40198
	.byte	26,33
	.word	40282
	.byte	35
	.word	40314
	.byte	34
	.word	40315
	.byte	0,0,4,33
	.word	36719
	.byte	32
	.word	36748
	.byte	32
	.word	36774
	.byte	32
	.word	36791
	.byte	35
	.word	36805
	.byte	34
	.word	36806
	.byte	34
	.word	36807
	.byte	0,0,4,33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,4,33
	.word	37347
	.byte	32
	.word	37377
	.byte	34
	.word	37393
	.byte	0,4,33
	.word	37347
	.byte	32
	.word	37377
	.byte	34
	.word	37393
	.byte	0,4,33
	.word	39867
	.byte	32
	.word	39893
	.byte	35
	.word	39907
	.byte	33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,34
	.word	39908
	.byte	0,0,4,33
	.word	39602
	.byte	32
	.word	39632
	.byte	35
	.word	39647
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	39648
	.byte	33
	.word	37607
	.byte	32
	.word	37635
	.byte	34
	.word	37651
	.byte	0,34
	.word	39649
	.byte	0,0,4,33
	.word	38444
	.byte	32
	.word	38468
	.byte	32
	.word	38485
	.byte	32
	.word	38499
	.byte	35
	.word	38526
	.byte	35
	.word	38527
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	44161
	.byte	32
	.word	44181
	.byte	32
	.word	44197
	.byte	32
	.word	44214
	.byte	32
	.word	44228
	.byte	35
	.word	44248
	.byte	35
	.word	44249
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43870
	.byte	32
	.word	43891
	.byte	32
	.word	43907
	.byte	32
	.word	43924
	.byte	32
	.word	43937
	.byte	35
	.word	43955
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	43956
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	43957
	.byte	33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,34
	.word	43958
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,34
	.word	44250
	.byte	34
	.word	44251
	.byte	34
	.word	44252
	.byte	33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44253
	.byte	34
	.word	44254
	.byte	34
	.word	44255
	.byte	34
	.word	44256
	.byte	34
	.word	44257
	.byte	34
	.word	44258
	.byte	34
	.word	44259
	.byte	0,0,0,33
	.word	38854
	.byte	32
	.word	38887
	.byte	34
	.word	38903
	.byte	0,34
	.word	38528
	.byte	33
	.word	36522
	.byte	32
	.word	36542
	.byte	32
	.word	36559
	.byte	34
	.word	36573
	.byte	0,34
	.word	38529
	.byte	33
	.word	38905
	.byte	32
	.word	38940
	.byte	34
	.word	38956
	.byte	0,34
	.word	38530
	.byte	34
	.word	38531
	.byte	34
	.word	38532
	.byte	34
	.word	38533
	.byte	34
	.word	38534
	.byte	33
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	35
	.word	34371
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34372
	.byte	0,0,34
	.word	38535
	.byte	33
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	34
	.word	38755
	.byte	0,34
	.word	38536
	.byte	33
	.word	34229
	.byte	32
	.word	34254
	.byte	35
	.word	34270
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34271
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34272
	.byte	33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,34
	.word	34273
	.byte	0,0,34
	.word	38537
	.byte	33
	.word	31756
	.byte	35
	.word	31786
	.byte	35
	.word	31787
	.byte	33
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	34
	.word	29983
	.byte	0,33
	.word	34375
	.byte	35
	.word	34410
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34411
	.byte	33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,34
	.word	34412
	.byte	33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,34
	.word	34413
	.byte	0,0,0,34
	.word	31788
	.byte	34
	.word	31789
	.byte	0,0,34
	.word	38538
	.byte	33
	.word	35594
	.byte	32
	.word	35631
	.byte	34
	.word	35648
	.byte	0,34
	.word	38539
	.byte	34
	.word	38540
	.byte	0,0,4,0,0,31
	.word	40231
	.byte	32
	.word	40253
	.byte	26,33
	.word	40282
	.byte	35
	.word	40314
	.byte	34
	.word	40315
	.byte	0,0,4,33
	.word	36810
	.byte	32
	.word	36847
	.byte	32
	.word	36864
	.byte	35
	.word	36878
	.byte	34
	.word	36879
	.byte	34
	.word	36880
	.byte	0,0,4,33
	.word	39559
	.byte	32
	.word	39587
	.byte	34
	.word	39600
	.byte	0,4,33
	.word	37347
	.byte	32
	.word	37377
	.byte	34
	.word	37393
	.byte	0,4,33
	.word	37347
	.byte	32
	.word	37377
	.byte	34
	.word	37393
	.byte	0,4,33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,4,33
	.word	38171
	.byte	32
	.word	38203
	.byte	32
	.word	38217
	.byte	35
	.word	38244
	.byte	35
	.word	38245
	.byte	33
	.word	37506
	.byte	32
	.word	37535
	.byte	34
	.word	37551
	.byte	0,33
	.word	33462
	.byte	32
	.word	33504
	.byte	34
	.word	33518
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,33
	.word	44262
	.byte	32
	.word	44290
	.byte	32
	.word	44306
	.byte	32
	.word	44323
	.byte	32
	.word	44337
	.byte	35
	.word	44357
	.byte	35
	.word	44358
	.byte	35
	.word	44359
	.byte	33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,0,34
	.word	44361
	.byte	34
	.word	44362
	.byte	33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44363
	.byte	34
	.word	44364
	.byte	34
	.word	44365
	.byte	34
	.word	44366
	.byte	34
	.word	44367
	.byte	34
	.word	44368
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	38246
	.byte	33
	.word	38757
	.byte	32
	.word	38789
	.byte	35
	.word	38805
	.byte	34
	.word	38806
	.byte	0,0,34
	.word	38247
	.byte	33
	.word	36522
	.byte	32
	.word	36542
	.byte	32
	.word	36559
	.byte	34
	.word	36573
	.byte	0,34
	.word	38248
	.byte	33
	.word	38905
	.byte	32
	.word	38940
	.byte	34
	.word	38956
	.byte	0,34
	.word	38249
	.byte	34
	.word	38250
	.byte	34
	.word	38251
	.byte	34
	.word	38252
	.byte	34
	.word	38253
	.byte	33
	.word	34311
	.byte	32
	.word	34342
	.byte	32
	.word	34357
	.byte	35
	.word	34371
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34372
	.byte	0,0,34
	.word	38254
	.byte	33
	.word	34276
	.byte	35
	.word	34305
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34306
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34307
	.byte	33
	.word	29796
	.byte	32
	.word	29829
	.byte	35
	.word	29850
	.byte	33
	.word	214
	.byte	34
	.word	238
	.byte	0,34
	.word	29851
	.byte	0,0,34
	.word	34308
	.byte	0,0,34
	.word	38255
	.byte	33
	.word	38677
	.byte	32
	.word	38712
	.byte	32
	.word	38728
	.byte	34
	.word	38755
	.byte	0,34
	.word	38256
	.byte	33
	.word	34229
	.byte	32
	.word	34254
	.byte	35
	.word	34270
	.byte	33
	.word	34851
	.byte	34
	.word	34876
	.byte	0,34
	.word	34271
	.byte	33
	.word	34888
	.byte	32
	.word	34924
	.byte	34
	.word	34940
	.byte	0,34
	.word	34272
	.byte	33
	.word	29405
	.byte	32
	.word	29434
	.byte	32
	.word	29455
	.byte	35
	.word	29471
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	29472
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	29473
	.byte	0,0,34
	.word	34273
	.byte	0,0,34
	.word	38257
	.byte	33
	.word	37607
	.byte	32
	.word	37635
	.byte	34
	.word	37651
	.byte	0,34
	.word	38258
	.byte	33
	.word	31756
	.byte	35
	.word	31786
	.byte	35
	.word	31787
	.byte	33
	.word	29911
	.byte	32
	.word	29942
	.byte	32
	.word	29962
	.byte	34
	.word	29983
	.byte	0,33
	.word	34375
	.byte	35
	.word	34410
	.byte	33
	.word	33417
	.byte	32
	.word	33446
	.byte	34
	.word	33460
	.byte	0,34
	.word	34411
	.byte	33
	.word	33333
	.byte	35
	.word	33367
	.byte	33
	.word	4148
	.byte	34
	.word	4177
	.byte	0,34
	.word	33368
	.byte	0,0,34
	.word	34412
	.byte	33
	.word	33371
	.byte	32
	.word	33399
	.byte	35
	.word	33413
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	33414
	.byte	0,0,34
	.word	34413
	.byte	0,0,0,34
	.word	31788
	.byte	34
	.word	31789
	.byte	0,0,34
	.word	38259
	.byte	33
	.word	35594
	.byte	32
	.word	35631
	.byte	34
	.word	35648
	.byte	0,34
	.word	38260
	.byte	33
	.word	35714
	.byte	32
	.word	35751
	.byte	32
	.word	35774
	.byte	32
	.word	35791
	.byte	35
	.word	35805
	.byte	35
	.word	35806
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,33
	.word	36127
	.byte	32
	.word	36163
	.byte	32
	.word	36186
	.byte	32
	.word	36203
	.byte	35
	.word	36235
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36236
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	36237
	.byte	0,0,33
	.word	35950
	.byte	32
	.word	35987
	.byte	32
	.word	36004
	.byte	35
	.word	36036
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36037
	.byte	0,0,33
	.word	36240
	.byte	32
	.word	36284
	.byte	32
	.word	36307
	.byte	32
	.word	36324
	.byte	35
	.word	36356
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36357
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	36358
	.byte	0,0,0,34
	.word	35807
	.byte	34
	.word	35808
	.byte	33
	.word	36361
	.byte	32
	.word	36394
	.byte	34
	.word	36411
	.byte	0,34
	.word	35809
	.byte	34
	.word	35810
	.byte	34
	.word	35811
	.byte	33
	.word	36040
	.byte	32
	.word	36083
	.byte	32
	.word	36106
	.byte	35
	.word	36123
	.byte	33
	.word	4072
	.byte	32
	.word	4105
	.byte	32
	.word	4123
	.byte	34
	.word	4146
	.byte	0,34
	.word	36124
	.byte	0,0,34
	.word	35812
	.byte	0,0,34
	.word	38261
	.byte	34
	.word	38262
	.byte	0,0,4,0,0,31
	.word	40282
	.byte	26,4,0,0,31
	.word	40318
	.byte	32
	.word	40348
	.byte	4,0,31
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	26,33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,4,0,0,31
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	40607
	.byte	32
	.word	40652
	.byte	32
	.word	40669
	.byte	26,33
	.word	3169
	.byte	32
	.word	3201
	.byte	34
	.word	3216
	.byte	0,4,0,0,31
	.word	40688
	.byte	32
	.word	40740
	.byte	32
	.word	40757
	.byte	32
	.word	40773
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3169
	.byte	32
	.word	3201
	.byte	34
	.word	3216
	.byte	0,4,0,0,31
	.word	40793
	.byte	32
	.word	40842
	.byte	32
	.word	40859
	.byte	26,33
	.word	3169
	.byte	32
	.word	3201
	.byte	34
	.word	3216
	.byte	0,4,0,0,31
	.word	40888
	.byte	32
	.word	40929
	.byte	4,0,31
	.word	40948
	.byte	32
	.word	40989
	.byte	4,0,31
	.word	41008
	.byte	32
	.word	41050
	.byte	4,0,31
	.word	41069
	.byte	32
	.word	41096
	.byte	4,0,31
	.word	41118
	.byte	32
	.word	41160
	.byte	4,0,31
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	4,0,31
	.word	41268
	.byte	32
	.word	41302
	.byte	4,0,31
	.word	41630
	.byte	32
	.word	41657
	.byte	4,0,31
	.word	41795
	.byte	32
	.word	41817
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	41836
	.byte	32
	.word	41867
	.byte	4,0,31
	.word	41884
	.byte	32
	.word	41918
	.byte	32
	.word	41933
	.byte	4,0,31
	.word	41959
	.byte	32
	.word	41992
	.byte	32
	.word	42007
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	42026
	.byte	32
	.word	42058
	.byte	26,33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,4,33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,4,33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,4,33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,4,0,0,31
	.word	42080
	.byte	32
	.word	42114
	.byte	4,0,31
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	26,26,4,0,0,0,31
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	26,4,33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,4,33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,4,33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,4,33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,4,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,4,0,0,31
	.word	42310
	.byte	32
	.word	42349
	.byte	4,0,31
	.word	42366
	.byte	32
	.word	42413
	.byte	32
	.word	42438
	.byte	32
	.word	42451
	.byte	4,0,31
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	26,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	26,4,33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,4,33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,4,0,0,31
	.word	42753
	.byte	32
	.word	42794
	.byte	4,0,31
	.word	42811
	.byte	32
	.word	42852
	.byte	4,0,31
	.word	43561
	.byte	32
	.word	43598
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	43629
	.byte	32
	.word	43669
	.byte	26,33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,4,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,4,0,0,31
	.word	43689
	.byte	32
	.word	43712
	.byte	32
	.word	43727
	.byte	26,4,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,0,0,31
	.word	43748
	.byte	32
	.word	43772
	.byte	26,4,33
	.word	45045
	.byte	32
	.word	45088
	.byte	34
	.word	45104
	.byte	0,4,0,0,31
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	26,33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,4,33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,4,0,0,31
	.word	43870
	.byte	32
	.word	43891
	.byte	32
	.word	43907
	.byte	32
	.word	43924
	.byte	32
	.word	43937
	.byte	26,33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,4,33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,4,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,4,0,0,31
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	26,33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,4,33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,4,33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,4,0,0,31
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	26,33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,4,33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,4,33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,4,33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,4,0,0,31
	.word	44104
	.byte	32
	.word	44141
	.byte	26,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,4,0,0,31
	.word	44161
	.byte	32
	.word	44181
	.byte	32
	.word	44197
	.byte	32
	.word	44214
	.byte	32
	.word	44228
	.byte	26,26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43870
	.byte	32
	.word	43891
	.byte	32
	.word	43907
	.byte	32
	.word	43924
	.byte	32
	.word	43937
	.byte	35
	.word	43955
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	43956
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	43957
	.byte	33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,34
	.word	43958
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,4,4,4,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	44262
	.byte	32
	.word	44290
	.byte	32
	.word	44306
	.byte	32
	.word	44323
	.byte	32
	.word	44337
	.byte	26,26,26,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,0,4,4,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,4,4,4,0,0,31
	.word	44371
	.byte	32
	.word	44399
	.byte	32
	.word	44415
	.byte	26,26,26,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,0,4,4,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,4,4,0,0,31
	.word	44445
	.byte	32
	.word	44480
	.byte	32
	.word	44496
	.byte	26,26,26,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	44104
	.byte	32
	.word	44141
	.byte	35
	.word	44157
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	44158
	.byte	0,0,0,33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,4,4,0,0,31
	.word	44525
	.byte	32
	.word	44560
	.byte	32
	.word	44577
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,33
	.word	3110
	.byte	32
	.word	3138
	.byte	32
	.word	3150
	.byte	34
	.word	3167
	.byte	0,4,0,0,31
	.word	44600
	.byte	32
	.word	44631
	.byte	26,26,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	35
	.word	44886
	.byte	35
	.word	44887
	.byte	35
	.word	44888
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44890
	.byte	34
	.word	44891
	.byte	34
	.word	44892
	.byte	34
	.word	44893
	.byte	34
	.word	44894
	.byte	34
	.word	44895
	.byte	34
	.word	44896
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,0,0,31
	.word	44654
	.byte	32
	.word	44684
	.byte	26,26,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	35
	.word	44972
	.byte	35
	.word	44973
	.byte	35
	.word	44974
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44976
	.byte	34
	.word	44977
	.byte	34
	.word	44978
	.byte	34
	.word	44979
	.byte	34
	.word	44980
	.byte	34
	.word	44981
	.byte	34
	.word	44982
	.byte	34
	.word	44983
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,0,0,31
	.word	44707
	.byte	32
	.word	44737
	.byte	26,26,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	35
	.word	44886
	.byte	35
	.word	44887
	.byte	35
	.word	44888
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44890
	.byte	34
	.word	44891
	.byte	34
	.word	44892
	.byte	34
	.word	44893
	.byte	34
	.word	44894
	.byte	34
	.word	44895
	.byte	34
	.word	44896
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,0,0,31
	.word	44760
	.byte	32
	.word	44789
	.byte	26,26,33
	.word	43629
	.byte	32
	.word	43669
	.byte	35
	.word	43684
	.byte	33
	.word	37395
	.byte	32
	.word	37428
	.byte	34
	.word	37444
	.byte	0,34
	.word	43685
	.byte	33
	.word	43561
	.byte	32
	.word	43598
	.byte	35
	.word	43615
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	43616
	.byte	0,0,34
	.word	43686
	.byte	0,0,33
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	35
	.word	44972
	.byte	35
	.word	44973
	.byte	35
	.word	44974
	.byte	33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,34
	.word	44976
	.byte	34
	.word	44977
	.byte	34
	.word	44978
	.byte	34
	.word	44979
	.byte	34
	.word	44980
	.byte	34
	.word	44981
	.byte	34
	.word	44982
	.byte	34
	.word	44983
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,0,0,31
	.word	44812
	.byte	32
	.word	44837
	.byte	32
	.word	44853
	.byte	32
	.word	44870
	.byte	26,26,26,33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	44899
	.byte	32
	.word	44923
	.byte	32
	.word	44939
	.byte	32
	.word	44956
	.byte	26,26,26,33
	.word	42310
	.byte	32
	.word	42349
	.byte	34
	.word	42364
	.byte	0,33
	.word	43793
	.byte	32
	.word	43813
	.byte	32
	.word	43829
	.byte	32
	.word	43842
	.byte	35
	.word	43865
	.byte	33
	.word	44032
	.byte	32
	.word	44053
	.byte	32
	.word	44069
	.byte	32
	.word	44084
	.byte	35
	.word	44097
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44098
	.byte	33
	.word	40948
	.byte	32
	.word	40989
	.byte	34
	.word	41006
	.byte	0,34
	.word	44099
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44100
	.byte	33
	.word	42475
	.byte	32
	.word	42499
	.byte	32
	.word	42524
	.byte	32
	.word	42550
	.byte	32
	.word	42565
	.byte	35
	.word	42578
	.byte	34
	.word	42579
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42580
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42581
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42582
	.byte	0,0,34
	.word	44101
	.byte	0,0,34
	.word	43866
	.byte	33
	.word	42227
	.byte	32
	.word	42262
	.byte	32
	.word	42277
	.byte	35
	.word	42301
	.byte	34
	.word	42302
	.byte	33
	.word	42131
	.byte	32
	.word	42182
	.byte	32
	.word	42197
	.byte	35
	.word	42221
	.byte	35
	.word	42222
	.byte	34
	.word	42223
	.byte	0,0,0,34
	.word	42303
	.byte	33
	.word	41268
	.byte	32
	.word	41302
	.byte	34
	.word	41323
	.byte	0,34
	.word	42304
	.byte	33
	.word	42669
	.byte	32
	.word	42704
	.byte	32
	.word	42725
	.byte	35
	.word	42747
	.byte	34
	.word	42748
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42749
	.byte	33
	.word	41182
	.byte	32
	.word	41221
	.byte	32
	.word	41242
	.byte	34
	.word	41266
	.byte	0,34
	.word	42750
	.byte	0,0,34
	.word	42305
	.byte	33
	.word	40367
	.byte	32
	.word	40403
	.byte	32
	.word	40420
	.byte	32
	.word	40435
	.byte	35
	.word	40459
	.byte	33
	.word	40463
	.byte	32
	.word	40507
	.byte	32
	.word	40533
	.byte	32
	.word	40563
	.byte	32
	.word	40578
	.byte	35
	.word	40602
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40603
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	40604
	.byte	0,0,34
	.word	40460
	.byte	0,0,34
	.word	42306
	.byte	33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,34
	.word	42307
	.byte	0,0,34
	.word	43867
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	43961
	.byte	32
	.word	43982
	.byte	32
	.word	43998
	.byte	32
	.word	44013
	.byte	35
	.word	44026
	.byte	33
	.word	42080
	.byte	32
	.word	42114
	.byte	34
	.word	42129
	.byte	0,34
	.word	44027
	.byte	33
	.word	41008
	.byte	32
	.word	41050
	.byte	34
	.word	41067
	.byte	0,34
	.word	44028
	.byte	33
	.word	42585
	.byte	32
	.word	42609
	.byte	32
	.word	42635
	.byte	32
	.word	42650
	.byte	35
	.word	42663
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42664
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42665
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	42666
	.byte	0,0,34
	.word	44029
	.byte	0,0,33
	.word	42026
	.byte	32
	.word	42058
	.byte	35
	.word	42073
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42074
	.byte	33
	.word	42811
	.byte	32
	.word	42852
	.byte	34
	.word	42867
	.byte	0,34
	.word	42075
	.byte	33
	.word	42753
	.byte	32
	.word	42794
	.byte	34
	.word	42809
	.byte	0,34
	.word	42076
	.byte	33
	.word	41118
	.byte	32
	.word	41160
	.byte	34
	.word	41180
	.byte	0,34
	.word	42077
	.byte	0,0,0,33
	.word	31147
	.byte	32
	.word	31168
	.byte	35
	.word	31182
	.byte	34
	.word	31183
	.byte	33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,34
	.word	31184
	.byte	0,0,33
	.word	31197
	.byte	32
	.word	31218
	.byte	35
	.word	31233
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	31234
	.byte	0,0,0,33
	.word	44986
	.byte	32
	.word	45027
	.byte	34
	.word	45043
	.byte	0,4,4,4,4,4,4,4,4,0,0,31
	.word	44986
	.byte	32
	.word	45027
	.byte	4,0,31
	.word	45045
	.byte	32
	.word	45088
	.byte	4,0,31
	.word	45142
	.byte	32
	.word	45170
	.byte	4,0,31
	.word	45199
	.byte	32
	.word	45225
	.byte	26,33
	.word	40318
	.byte	32
	.word	40348
	.byte	34
	.word	40365
	.byte	0,4,0,0,31
	.word	45242
	.byte	32
	.word	45278
	.byte	4,0,31
	.word	45293
	.byte	32
	.word	45319
	.byte	4,0,31
	.word	45339
	.byte	32
	.word	45366
	.byte	32
	.word	45380
	.byte	26,33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,4,0,0,31
	.word	45397
	.byte	32
	.word	45422
	.byte	32
	.word	45439
	.byte	32
	.word	45455
	.byte	26,33
	.word	45339
	.byte	32
	.word	45366
	.byte	32
	.word	45380
	.byte	35
	.word	45393
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	45394
	.byte	0,0,4,0,0,31
	.word	45472
	.byte	32
	.word	45499
	.byte	32
	.word	45517
	.byte	4,0,31
	.word	45546
	.byte	32
	.word	45572
	.byte	32
	.word	45590
	.byte	4,0,31
	.word	45609
	.byte	32
	.word	45643
	.byte	32
	.word	45661
	.byte	32
	.word	45678
	.byte	4,0,31
	.word	45882
	.byte	32
	.word	45910
	.byte	26,33
	.word	45397
	.byte	32
	.word	45422
	.byte	32
	.word	45439
	.byte	32
	.word	45455
	.byte	35
	.word	45468
	.byte	33
	.word	45339
	.byte	32
	.word	45366
	.byte	32
	.word	45380
	.byte	35
	.word	45393
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	45394
	.byte	0,0,34
	.word	45469
	.byte	0,0,4,0,0,31
	.word	46053
	.byte	32
	.word	46082
	.byte	26,33
	.word	45472
	.byte	32
	.word	45499
	.byte	32
	.word	45517
	.byte	34
	.word	45534
	.byte	0,4,0,0,31
	.word	46288
	.byte	32
	.word	46316
	.byte	26,33
	.word	45397
	.byte	32
	.word	45422
	.byte	32
	.word	45439
	.byte	32
	.word	45455
	.byte	35
	.word	45468
	.byte	33
	.word	45339
	.byte	32
	.word	45366
	.byte	32
	.word	45380
	.byte	35
	.word	45393
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	45394
	.byte	0,0,34
	.word	45469
	.byte	0,0,4,0,0,31
	.word	46459
	.byte	32
	.word	46488
	.byte	26,33
	.word	45472
	.byte	32
	.word	45499
	.byte	32
	.word	45517
	.byte	34
	.word	45534
	.byte	0,4,0,0,31
	.word	46694
	.byte	32
	.word	46722
	.byte	26,33
	.word	45397
	.byte	32
	.word	45422
	.byte	32
	.word	45439
	.byte	32
	.word	45455
	.byte	35
	.word	45468
	.byte	33
	.word	45339
	.byte	32
	.word	45366
	.byte	32
	.word	45380
	.byte	35
	.word	45393
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	45394
	.byte	0,0,34
	.word	45469
	.byte	0,0,4,0,0,31
	.word	46865
	.byte	32
	.word	46894
	.byte	26,33
	.word	45472
	.byte	32
	.word	45499
	.byte	32
	.word	45517
	.byte	34
	.word	45534
	.byte	0,4,0,0,31
	.word	47144
	.byte	32
	.word	47173
	.byte	26,33
	.word	45397
	.byte	32
	.word	45422
	.byte	32
	.word	45439
	.byte	32
	.word	45455
	.byte	35
	.word	45468
	.byte	33
	.word	45339
	.byte	32
	.word	45366
	.byte	32
	.word	45380
	.byte	35
	.word	45393
	.byte	33
	.word	3218
	.byte	32
	.word	3236
	.byte	34
	.word	3255
	.byte	0,34
	.word	45394
	.byte	0,0,34
	.word	45469
	.byte	0,0,4,0,0,31
	.word	47379
	.byte	32
	.word	47409
	.byte	26,33
	.word	45472
	.byte	32
	.word	45499
	.byte	32
	.word	45517
	.byte	34
	.word	45534
	.byte	0,4,0,0,31
	.word	47432
	.byte	32
	.word	47468
	.byte	4,0,31
	.word	47494
	.byte	32
	.word	47529
	.byte	4,0,31
	.word	47560
	.byte	32
	.word	47593
	.byte	32
	.word	47611
	.byte	4,0,31
	.word	47630
	.byte	32
	.word	47656
	.byte	26,4,33
	.word	30293
	.byte	34
	.word	30342
	.byte	0,4,0,0,31
	.word	47680
	.byte	32
	.word	47705
	.byte	26,33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,4,0,0,31
	.word	47728
	.byte	32
	.word	47754
	.byte	26,26,33
	.word	30566
	.byte	32
	.word	30601
	.byte	34
	.word	30616
	.byte	0,33
	.word	30961
	.byte	32
	.word	30993
	.byte	32
	.word	31009
	.byte	34
	.word	31025
	.byte	0,33
	.word	30409
	.byte	32
	.word	30436
	.byte	34
	.word	30451
	.byte	0,33
	.word	30463
	.byte	32
	.word	30490
	.byte	35
	.word	30505
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	30506
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	30507
	.byte	0,0,0,4,4,4,4,0,0,31
	.word	47777
	.byte	32
	.word	47802
	.byte	26,33
	.word	30463
	.byte	32
	.word	30490
	.byte	35
	.word	30505
	.byte	33
	.word	31092
	.byte	32
	.word	31125
	.byte	34
	.word	31140
	.byte	0,34
	.word	30506
	.byte	33
	.word	30354
	.byte	32
	.word	30387
	.byte	34
	.word	30402
	.byte	0,34
	.word	30507
	.byte	0,0,4,0,0,36,1,10
	.word	90450
	.byte	13
	.byte	'__codeptr',0,99,1,1
	.word	90452
	.byte	13
	.byte	'boolean',0,100,101,31
	.word	3257
	.byte	13
	.byte	'uint8',0,100,104,31
	.word	3257
	.byte	13
	.byte	'sint16',0,100,105,31
	.word	7426
	.byte	13
	.byte	'uint16',0,100,106,31
	.word	4825
	.byte	2
	.byte	'long int',0,4,5,13
	.byte	'sint32',0,100,107,31
	.word	90535
	.byte	13
	.byte	'uint32',0,100,108,31
	.word	139
	.byte	13
	.byte	'uint8_least',0,100,111,31
	.word	3257
	.byte	13
	.byte	'uint16_least',0,100,113,31
	.word	4825
	.byte	13
	.byte	'uint64',0,100,121,30
	.word	11136
	.byte	13
	.byte	'StatusType',0,25,127,23
	.word	3257
	.byte	13
	.byte	'Std_ReturnType',0,25,132,1,15
	.word	3257
	.byte	13
	.byte	'Std_VersionInfoType',0,25,141,1,3
	.word	11685
	.byte	13
	.byte	'Os_Hal_IntGlobalStateType',0,101,66,16
	.word	139
	.byte	13
	.byte	'Os_Hal_IntLevelType',0,101,73,16
	.word	139
	.byte	13
	.byte	'Os_Hal_IntTrapStateType',0,101,82,16
	.word	139
	.byte	13
	.byte	'Os_Hal_IntStateType',0,101,89,16
	.word	139
	.byte	13
	.byte	'Os_Hal_IntSourceType',0,101,95,16
	.word	139
	.byte	13
	.byte	'Os_Hal_IntIsrConfigType',0,101,99,44
	.word	5919
	.byte	13
	.byte	'Os_Hal_IntIsrMapConfigType',0,101,103,47
	.word	6018
	.byte	13
	.byte	'Os_IntApiStateType',0,22,64,39
	.word	7257
	.byte	13
	.byte	'Os_IntStateType',0,22,74,3
	.word	7137
	.byte	14,22,88,9,4,12
	.byte	'State',0
	.word	139
	.byte	4,2,35,0,0,13
	.byte	'Os_IntLevelType',0,22,92,3
	.word	90974
	.byte	13
	.byte	'Os_StdReturnType',0,102,74,22
	.word	3094
	.byte	13
	.byte	'Os_WordType',0,102,77,22
	.word	3094
	.byte	13
	.byte	'Os_ObjIdxType',0,102,80,16
	.word	4825
	.byte	13
	.byte	'Os_ObjIdx_IteratorType',0,102,81,22
	.word	4825
	.byte	13
	.byte	'Os_ParamType',0,102,84,32
	.word	13222
	.byte	13
	.byte	'Os_AppAccessMaskType',0,14,117,17
	.word	139
	.byte	13
	.byte	'ApplicationType',0,14,126,3
	.word	10990
	.byte	13
	.byte	'TrustedFunctionIndexType',0,14,132,1,3
	.word	12081
	.byte	13
	.byte	'Os_NonTrustedFunctionIndexType',0,14,138,1,3
	.word	12366
	.byte	13
	.byte	'Os_FastTrustedFunctionIndexType',0,14,144,1,3
	.word	12452
	.byte	13
	.byte	'TaskType',0,14,157,1,3
	.word	11811
	.byte	13
	.byte	'ISRType',0,14,166,1,3
	.word	11167
	.byte	13
	.byte	'AlarmType',0,14,176,1,3
	.word	10797
	.byte	13
	.byte	'CounterType',0,14,183,1,3
	.word	11094
	.byte	13
	.byte	'ScheduleTableType',0,14,189,1,3
	.word	11607
	.byte	13
	.byte	'ResourceType',0,14,196,1,3
	.word	11331
	.byte	13
	.byte	'SpinlockIdType',0,14,203,1,3
	.word	11632
	.byte	13
	.byte	'Os_PeripheralIdType',0,14,209,1,3
	.word	12624
	.byte	13
	.byte	'Os_BarrierIdType',0,14,215,1,3
	.word	12696
	.byte	13
	.byte	'Os_TraceThreadIdType',0,14,222,1,3
	.word	6552
	.byte	13
	.byte	'Os_TraceSpinlockIdType',0,14,230,1,3
	.word	5030
	.byte	13
	.byte	'Os_Hal_AddressType',0,103,61,16
	.word	139
	.byte	13
	.byte	'Os_ExceptionContextType',0,103,66,44
	.word	12733
	.byte	13
	.byte	'AppModeType',0,3,216,1,16
	.word	3257
	.byte	13
	.byte	'IdleModeType',0,3,234,1,3
	.word	11241
	.byte	13
	.byte	'Os_InterruptSourceIdType',0,3,238,1,16
	.word	139
	.byte	13
	.byte	'Os_ExceptionSourceIdType',0,3,246,1,16
	.word	139
	.byte	13
	.byte	'TryToGetSpinlockType',0,3,142,2,2
	.word	12163
	.byte	13
	.byte	'TaskStateType',0,3,175,2,3
	.word	11977
	.byte	13
	.byte	'EventMaskType',0,3,182,2,16
	.word	11136
	.byte	13
	.byte	'EventMaskRefType',0,3,185,2,56
	.word	11162
	.byte	13
	.byte	'Os_TickType',0,3,200,2,19
	.word	139
	.byte	13
	.byte	'TickType',0,3,206,2,21
	.word	139
	.byte	13
	.byte	'AlarmBaseType',0,3,228,2,2
	.word	10694
	.byte	5,3,235,2,9,1,6
	.byte	'NO_ACCESS',0,0,6
	.byte	'ACCESS',0,1,0,13
	.byte	'ObjectAccessType',0,3,239,2,3
	.word	91905
	.byte	13
	.byte	'RestartType',0,3,249,2,3
	.word	11373
	.byte	13
	.byte	'ApplicationStateType',0,3,133,3,3
	.word	5421
	.byte	13
	.byte	'ObjectTypeType',0,3,147,3,3
	.word	12241
	.byte	13
	.byte	'Os_ObjectIdType',0,3,151,3,16
	.word	139
	.byte	13
	.byte	'OSServiceIdType',0,3,156,4,3
	.word	7487
	.byte	13
	.byte	'Os_StatusType',0,3,232,5,3
	.word	240
	.byte	13
	.byte	'ProtectionReturnType',0,3,247,5,3
	.word	16906
	.byte	13
	.byte	'Os_ErrorInformationType',0,3,143,6,3
	.word	10632
	.byte	13
	.byte	'ScheduleTableStatusType',0,3,192,6,3
	.word	11426
	.byte	13
	.byte	'Os_AccessCheckAddress',0,3,199,6,29
	.word	139
	.byte	13
	.byte	'MemorySizeType',0,3,207,6,31
	.word	139
	.byte	13
	.byte	'Os_MemAccessType',0,3,233,6,3
	.word	28189
	.byte	13
	.byte	'AccessType',0,3,235,6,26
	.word	28189
	.byte	13
	.byte	'Os_CoreStartStateType',0,3,134,7,2
	.word	13022
	.byte	13
	.byte	'CoreIdType',0,20,91,3
	.word	6257
	.byte	13
	.byte	'Os_HookConfigType',0,28,106,38
	.word	16540
	.byte	13
	.byte	'Os_HookStatusHookConfigType',0,28,109,48
	.word	16825
	.byte	13
	.byte	'Os_HookCallbackConfigType',0,28,112,46
	.word	16699
	.byte	13
	.byte	'Os_HookProtectionHookConfigType',0,28,115,52
	.word	17120
	.byte	13
	.byte	'Os_HookInitHookConfigType',0,28,118,46
	.word	17236
	.byte	13
	.byte	'Os_HookFlagType',0,28,120,16
	.word	139
	.byte	13
	.byte	'Os_HookInfoType',0,28,127,3
	.word	15229
	.byte	13
	.byte	'Os_HookIdType',0,28,130,1,16
	.word	139
	.byte	13
	.byte	'Os_TpType',0,85,69,30
	.word	19357
	.byte	13
	.byte	'Os_TpConfigType',0,85,72,36
	.word	19452
	.byte	13
	.byte	'Os_TpThreadConfigType',0,85,75,42
	.word	28126
	.byte	13
	.byte	'Os_TpBudgetType',0,85,78,36
	.word	42879
	.byte	13
	.byte	'Os_TpBudgetConfigType',0,85,81,42
	.word	43098
	.byte	13
	.byte	'Os_TpOwnerThreadConfigType',0,85,85,47
	.word	43350
	.byte	13
	.byte	'Os_TpOwnerThreadType',0,85,88,41
	.word	43223
	.byte	13
	.byte	'Os_InterArrivalTimeType',0,85,91,16
	.word	11136
	.byte	13
	.byte	'Os_TpMonitoringType',0,85,101,3
	.word	42948
	.byte	13
	.byte	'Os_ErrorType',0,104,56,33
	.word	15045
	.byte	13
	.byte	'Os_ErrorParamsType',0,104,58,39
	.word	14965
	.byte	13
	.byte	'Os_Hal_ContextType',0,105,66,39
	.word	4179
	.byte	13
	.byte	'Os_Hal_ContextConfigType',0,105,70,45
	.word	3877
	.byte	13
	.byte	'Os_Hal_ContextStackConfigType',0,105,74,50
	.word	35335
	.byte	13
	.byte	'Os_Hal_ContextFpuContextType',0,105,78,49
	.word	23227
	.byte	13
	.byte	'Os_ThreadClassType',0,58,183,3,39
	.word	23297
	.byte	13
	.byte	'Os_ThreadType',0,58,186,3,34
	.word	27892
	.byte	13
	.byte	'Os_ThreadConfigType',0,58,189,3,40
	.word	28893
	.byte	13
	.byte	'Os_CallContextType',0,58,193,3,23
	.word	4825
	.byte	13
	.byte	'Os_ThreadContextRefType',0,58,199,3,61
	.word	4362
	.byte	13
	.byte	'Os_Hal_BitFieldType',0,106,99,16
	.word	139
	.byte	13
	.byte	'Os_Hal_StackType',0,106,104,16
	.word	139
	.byte	13
	.byte	'Os_Hal_SpinlockType',0,106,108,16
	.word	139
	.byte	13
	.byte	'Os_Hal_SpinlockResultType',0,106,111,29
	.word	139
	.byte	13
	.byte	'Os_Hal_CoreConfigType',0,106,115,42
	.word	5721
	.byte	13
	.byte	'Os_Hal_Core2ThreadType',0,106,118,43
	.word	29270
	.byte	13
	.byte	'Os_Hal_Core2ThreadConfigType',0,106,121,49
	.word	29334
	.byte	13
	.byte	'Os_Hal_CoreAsrConfigType',0,106,125,45
	.word	17564
	.byte	13
	.byte	'Os_Hal_SystemConfigType',0,106,127,16
	.word	139
	.byte	13
	.byte	'Os_Hal_XSigInterruptConfigType',0,106,131,1,51
	.word	21761
	.byte	13
	.byte	'Os_CoreStatusType',0,27,61,38
	.word	5630
	.byte	13
	.byte	'Os_CoreAsrStatusType',0,27,64,41
	.word	33704
	.byte	13
	.byte	'Os_CoreConfigType',0,27,67,38
	.word	6890
	.byte	13
	.byte	'Os_CoreAsrType',0,27,70,35
	.word	15287
	.byte	13
	.byte	'Os_CoreAsrConfigType',0,27,73,41
	.word	23406
	.byte	13
	.byte	'Os_SystemConfigType',0,27,76,40
	.word	34594
	.byte	13
	.byte	'Os_CorePhysicalIdType',0,27,82,16
	.word	139
	.byte	13
	.byte	'Os_CoreBootBarrierContentType',0,27,89,16
	.word	139
	.byte	13
	.byte	'Os_UnhandledEventReportType',0,27,104,3
	.word	15148
	.byte	13
	.byte	'Os_IntApiCntType',0,21,78,16
	.word	4825
	.byte	13
	.byte	'Os_IntLockingStateType',0,21,86,3
	.word	7174
	.byte	13
	.byte	'Os_Hal_TimerFrtTickType',0,107,66,16
	.word	139
	.byte	13
	.byte	'Os_StackConfigType',0,108,140,1,39
	.word	4372
	.byte	13
	.byte	'Os_TaskType',0,109,58,32
	.word	39704
	.byte	13
	.byte	'Os_TaskConfigType',0,109,61,38
	.word	15758
	.byte	13
	.byte	'Os_IsrHwConfigType',0,53,54,39
	.word	6081
	.byte	11
	.byte	'Os_IsrType_Tag',0,18,172,1,8,28,12
	.byte	'Thread',0
	.word	27892
	.byte	24,2,35,0,12
	.byte	'IsKilled',0
	.word	3257
	.byte	1,2,35,24,0,13
	.byte	'Os_IsrType',0,53,57,31
	.word	93941
	.byte	13
	.byte	'Os_IsrConfigType',0,53,60,37
	.word	21220
	.byte	13
	.byte	'Os_IsrCat1ConfigType',0,53,63,41
	.word	24149
	.byte	13
	.byte	'Os_CoreAsrCoreIdx',0,44,90,3
	.word	19527
	.byte	13
	.byte	'Os_TaskPrioType',0,110,76,16
	.word	4825
	.byte	13
	.byte	'Os_SchedulerType',0,110,83,37
	.word	16059
	.byte	13
	.byte	'Os_SchedulerConfigType',0,110,86,43
	.word	16309
	.byte	13
	.byte	'Os_LockType',0,11,58,32
	.word	4452
	.byte	13
	.byte	'Os_LockConfigType',0,11,61,38
	.word	4587
	.byte	11
	.byte	'Os_ResourceType_Tag',0,34,159,1,8,8,12
	.byte	'Lock',0
	.word	4452
	.byte	4,2,35,0,12
	.byte	'PreviousPriority',0
	.word	4825
	.byte	2,2,35,4,0,13
	.byte	'Os_ResourceType',0,111,60,36
	.word	94222
	.byte	13
	.byte	'Os_ResourceConfigType',0,111,64,42
	.word	17404
	.byte	13
	.byte	'Os_AppMaskType',0,112,85,16
	.word	139
	.byte	13
	.byte	'Os_AppConfigType',0,112,88,37
	.word	26809
	.byte	13
	.byte	'Os_ServiceCallType',0,87,63,39
	.word	27690
	.byte	13
	.byte	'Os_ServiceConfigType',0,87,71,41
	.word	26654
	.byte	15,2
	.word	3257
	.byte	16,1,0,11
	.byte	'Os_ServiceStackPoolType_Tag',0,56,162,2,8,2,12
	.byte	'AccessCounter',0
	.word	94447
	.byte	2,2,35,0,0,10
	.word	94456
	.byte	11
	.byte	'Os_ServiceStackConfigType_Tag',0,56,148,2,9,12,12
	.byte	'Stack',0
	.word	4447
	.byte	4,2,35,0,12
	.byte	'HwConfig',0
	.word	35431
	.byte	4,2,35,4,12
	.byte	'PoolIndex',0
	.word	3257
	.byte	1,2,35,8,0,9
	.word	94519
	.byte	10
	.word	94608
	.byte	11
	.byte	'Os_ServiceStackPoolConfigType_Tag',0,56,170,2,8,24,12
	.byte	'Dyn',0
	.word	94514
	.byte	4,2,35,0,12
	.byte	'AvailabilityMap',0
	.word	15631
	.byte	12,2,35,4,12
	.byte	'Stacks',0
	.word	94613
	.byte	4,2,35,16,12
	.byte	'StackCount',0
	.word	3257
	.byte	1,2,35,20,12
	.byte	'AccessCounter',0
	.word	94447
	.byte	2,2,35,21,0,13
	.byte	'Os_ServiceStackPoolConfigType',0,87,88,50
	.word	94618
	.byte	13
	.byte	'Os_ServiceStackPoolType',0,87,91,44
	.word	94456
	.byte	13
	.byte	'Os_ServiceStackConfigType',0,87,94,48
	.word	94519
	.byte	13
	.byte	'Os_XSigBufferIdxType',0,48,60,23
	.word	4825
	.byte	13
	.byte	'Os_XSigConfigType',0,48,64,38
	.word	22149
	.byte	13
	.byte	'Os_XSigIsrConfigType',0,48,67,41
	.word	21833
	.byte	13
	.byte	'Os_XSigSendDataType',0,48,71,40
	.word	20802
	.byte	13
	.byte	'Os_XSigRecvDataType',0,48,74,40
	.word	21021
	.byte	13
	.byte	'Os_XSigSendPortConfigType',0,48,77,46
	.word	21977
	.byte	13
	.byte	'Os_XSigRecvPortConfigType',0,48,80,46
	.word	21628
	.byte	13
	.byte	'Os_XSigFunctionTableConfigType',0,48,84,51
	.word	21452
	.byte	13
	.byte	'Os_IocLockModeType',0,50,63,2
	.word	22250
	.byte	13
	.byte	'Os_IocChannelStateType',0,50,73,2
	.word	22354
	.byte	13
	.byte	'Os_IocCallbackConfigRefType',0,49,132,3,65
	.word	16773
	.byte	9
	.word	95165
	.byte	10
	.word	95202
	.byte	11
	.byte	'Os_IocCallbacksConfigType_Tag',0,49,135,3,8,8,12
	.byte	'CallbackRefs',0
	.word	95207
	.byte	4,2,35,0,12
	.byte	'CallbackCount',0
	.word	139
	.byte	4,2,35,4,0,13
	.byte	'Os_IocCallbacksConfigType',0,50,77,46
	.word	95212
	.byte	9
	.word	16699
	.byte	10
	.word	95328
	.byte	13
	.byte	'Os_IocLostCounterType',0,50,81,15
	.word	3257
	.byte	13
	.byte	'Os_IocConfigType',0,50,83,37
	.word	22685
	.byte	13
	.byte	'Os_IocType',0,50,84,31
	.word	22419
	.byte	9
	.word	.L329-.L32
	.byte	10
	.word	95412
	.byte	11
	.byte	'Os_IocSendConfigType_Tag',0,49,237,3,8,32,12
	.byte	'Base',0
	.word	22685
	.byte	20,2,35,0,12
	.byte	'Callbacks',0
	.word	95212
	.byte	8,2,35,20,12
	.byte	'Receive',0
	.word	95417
	.byte	4,2,35,28,0,9
	.word	95422
	.byte	10
	.word	95504
.L329:
	.byte	11
	.byte	'Os_IocReceiveConfigType_Tag',0,49,211,3,8,24,12
	.byte	'Base',0
	.word	22685
	.byte	20,2,35,0,12
	.byte	'Send',0
	.word	95509
	.byte	4,2,35,20,0,13
	.byte	'Os_IocReceiveConfigType',0,50,86,44
	.word	95514
	.byte	13
	.byte	'Os_IocSendConfigType',0,50,87,41
	.word	95422
	.byte	11
	.byte	'Os_IocSendType_Tag',0,49,224,3,8,2,12
	.byte	'Base',0
	.word	22419
	.byte	1,2,35,0,12
	.byte	'LostCounter',0
	.word	3257
	.byte	1,2,35,1,0,13
	.byte	'Os_IocSendType',0,50,88,35
	.word	95638
	.byte	11
	.byte	'Os_IocReceiveType_Tag',0,49,197,3,8,2,12
	.byte	'Base',0
	.word	22419
	.byte	1,2,35,0,12
	.byte	'LostCounterSnapshot',0
	.word	3257
	.byte	1,2,35,1,0,13
	.byte	'Os_IocReceiveType',0,50,89,38
	.word	95722
	.byte	11
	.byte	'Os_IocMultiReceiveConfigType_Tag',0,49,140,4,8,24,12
	.byte	'Base',0
	.word	22685
	.byte	20,2,35,0,12
	.byte	'ReceiveChannelCount',0
	.word	4825
	.byte	2,2,35,20,0,13
	.byte	'Os_IocMultiReceiveConfigType',0,50,92,49
	.word	95820
	.byte	11
	.byte	'Os_Ioc08ReceiveConfigType_Tag',0,49,169,4,8,40,12
	.byte	'Ioc',0
	.word	95514
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	45953
	.byte	16,2,35,24,0,13
	.byte	'Os_Ioc08ReceiveConfigType',0,50,94,46
	.word	95940
	.byte	11
	.byte	'Os_Ioc08SendConfigType_Tag',0,49,209,4,8,48,12
	.byte	'Ioc',0
	.word	95422
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	45782
	.byte	16,2,35,32,0,13
	.byte	'Os_Ioc08SendConfigType',0,50,95,43
	.word	96042
	.byte	9
	.word	95940
	.byte	10
	.word	96139
	.byte	11
	.byte	'Os_Ioc08MultiReceiveConfigType_Tag',0,49,183,4,8,28,12
	.byte	'Ioc',0
	.word	95820
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	96144
	.byte	4,2,35,24,0,13
	.byte	'Os_Ioc08MultiReceiveConfigType',0,50,96,51
	.word	96149
	.byte	11
	.byte	'Os_Ioc16ReceiveConfigType_Tag',0,49,239,4,8,40,12
	.byte	'Ioc',0
	.word	95514
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	46359
	.byte	16,2,35,24,0,13
	.byte	'Os_Ioc16ReceiveConfigType',0,50,100,46
	.word	96262
	.byte	11
	.byte	'Os_Ioc16SendConfigType_Tag',0,49,151,5,8,48,12
	.byte	'Ioc',0
	.word	95422
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	46188
	.byte	16,2,35,32,0,13
	.byte	'Os_Ioc16SendConfigType',0,50,101,43
	.word	96364
	.byte	9
	.word	96262
	.byte	10
	.word	96461
	.byte	11
	.byte	'Os_Ioc16MultiReceiveConfigType_Tag',0,49,253,4,8,28,12
	.byte	'Ioc',0
	.word	95820
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	96466
	.byte	4,2,35,24,0,13
	.byte	'Os_Ioc16MultiReceiveConfigType',0,50,102,51
	.word	96471
	.byte	11
	.byte	'Os_Ioc32ReceiveConfigType_Tag',0,49,181,5,8,40,12
	.byte	'Ioc',0
	.word	95514
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	46765
	.byte	16,2,35,24,0,13
	.byte	'Os_Ioc32ReceiveConfigType',0,50,106,46
	.word	96584
	.byte	11
	.byte	'Os_Ioc32SendConfigType_Tag',0,49,221,5,8,48,12
	.byte	'Ioc',0
	.word	95422
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	46594
	.byte	16,2,35,32,0,13
	.byte	'Os_Ioc32SendConfigType',0,50,107,43
	.word	96686
	.byte	9
	.word	96584
	.byte	10
	.word	96783
	.byte	11
	.byte	'Os_Ioc32MultiReceiveConfigType_Tag',0,49,195,5,8,28,12
	.byte	'Ioc',0
	.word	95820
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	96788
	.byte	4,2,35,24,0,13
	.byte	'Os_Ioc32MultiReceiveConfigType',0,50,108,51
	.word	96793
	.byte	11
	.byte	'Os_IocRefReceiveConfigType_Tag',0,49,251,5,8,44,12
	.byte	'Ioc',0
	.word	95514
	.byte	24,2,35,0,12
	.byte	'FifoRead',0
	.word	47261
	.byte	20,2,35,24,0,13
	.byte	'Os_IocRefReceiveConfigType',0,50,112,47
	.word	96906
	.byte	11
	.byte	'Os_IocRefSendConfigType_Tag',0,49,163,6,8,52,12
	.byte	'Ioc',0
	.word	95422
	.byte	32,2,35,0,12
	.byte	'FifoWrite',0
	.word	47025
	.byte	20,2,35,32,0,13
	.byte	'Os_IocRefSendConfigType',0,50,113,44
	.word	97010
	.byte	9
	.word	96906
	.byte	10
	.word	97109
	.byte	11
	.byte	'Os_IocRefMultiReceiveConfigType_Tag',0,49,137,6,8,28,12
	.byte	'Ioc',0
	.word	95820
	.byte	24,2,35,0,12
	.byte	'Receivers',0
	.word	97114
	.byte	4,2,35,24,0,13
	.byte	'Os_IocRefMultiReceiveConfigType',0,50,114,52
	.word	97119
	.byte	22,1,1,23
	.word	11294
	.byte	23
	.word	12117
	.byte	0,10
	.word	97234
	.byte	13
	.byte	'Os_IocCopyCbk',0,49,183,6,9
	.word	97248
	.byte	11
	.byte	'Os_IocReadConfigType_Tag',0,49,213,6,8,28,12
	.byte	'Ioc',0
	.word	22685
	.byte	20,2,35,0,12
	.byte	'Data',0
	.word	11294
	.byte	4,2,35,20,12
	.byte	'CopyCbk',0
	.word	97253
	.byte	4,2,35,24,0,13
	.byte	'Os_IocReadConfigType',0,50,119,41
	.word	97276
	.byte	10
	.word	97234
	.byte	22,1,1,23
	.word	12117
	.byte	0,10
	.word	97386
	.byte	13
	.byte	'Os_IocInitCbk',0,49,195,6,9
	.word	97395
	.byte	11
	.byte	'Os_IocWriteConfigType_Tag',0,49,239,6,8,40,12
	.byte	'Ioc',0
	.word	22685
	.byte	20,2,35,0,12
	.byte	'Data',0
	.word	12117
	.byte	4,2,35,20,12
	.byte	'Callbacks',0
	.word	95212
	.byte	8,2,35,24,12
	.byte	'CopyCbk',0
	.word	97253
	.byte	4,2,35,32,12
	.byte	'InitCbk',0
	.word	97400
	.byte	4,2,35,36,0,13
	.byte	'Os_IocWriteConfigType',0,50,120,42
	.word	97423
	.byte	10
	.word	97386
	.byte	13
	.byte	'Os_BitIndexType',0,113,80,15
	.word	3257
	.byte	13
	.byte	'Os_BitFieldType',0,113,84,29
	.word	139
	.byte	13
	.byte	'Os_BitArrayIndexType',0,30,110,16
	.word	4825
	.byte	13
	.byte	'Os_BitArrayType',0,30,119,2
	.word	15591
	.byte	13
	.byte	'Os_BitArrayConfigType',0,30,133,1,2
	.word	15631
	.byte	13
	.byte	'Os_DequeType',0,32,82,2
	.word	16178
	.byte	13
	.byte	'Os_DequeNodeType',0,32,88,2
	.word	16224
	.byte	13
	.byte	'Os_DequeConfigType',0,32,104,2
	.word	16250
	.byte	13
	.byte	'Os_SpinlockType',0,15,54,36
	.word	33021
	.byte	13
	.byte	'Os_SpinlockConfigType',0,15,58,42
	.word	5210
	.byte	13
	.byte	'Os_LockTypeType',0,10,78,3
	.word	4493
	.byte	13
	.byte	'Os_TraceThreadConfigType',0,114,60,45
	.word	6701
	.byte	13
	.byte	'Os_TraceThreadType',0,114,63,39
	.word	6494
	.byte	13
	.byte	'Os_TraceCoreType',0,114,66,37
	.word	6786
	.byte	13
	.byte	'Os_TraceSpinlockConfigType',0,114,69,47
	.word	5142
	.byte	13
	.byte	'Os_SpinlockMethodType',0,12,145,1,2
	.word	4707
	.byte	13
	.byte	'Os_SpinlockModeType',0,12,156,1,2
	.word	4847
	.byte	13
	.byte	'Os_SpinlockTraceType',0,12,169,1,2
	.word	4906
	.byte	13
	.byte	'Os_SpinlockCheckType',0,12,180,1,2
	.word	4968
	.byte	13
	.byte	'Os_SpinlockOrderType',0,12,184,1,15
	.word	3257
	.byte	13
	.byte	'Os_BarrierBaseType',0,52,58,39
	.word	22936
	.byte	13
	.byte	'Os_BarrierBaseConfigType',0,52,60,45
	.word	23060
	.byte	13
	.byte	'Os_BarrierAttendeeIdxType',0,51,110,15
	.word	3257
	.byte	13
	.byte	'Os_BarrierCounterType',0,51,113,15
	.word	3257
	.byte	13
	.byte	'Os_BarrierAttendeeStateType',0,51,124,2
	.word	22860
	.byte	13
	.byte	'Os_MpSystemConfigType',0,115,54,42
	.word	34534
	.byte	13
	.byte	'Os_MpCoreConfigType',0,115,57,40
	.word	18009
	.byte	13
	.byte	'Os_MpAccessRightsType',0,115,60,42
	.word	26458
	.byte	13
	.byte	'Os_CoreStateType',0,17,231,1,2
	.word	5529
	.byte	13
	.byte	'Os_CoreOsStateType',0,17,247,1,2
	.word	33615
	.byte	13
	.byte	'Os_CoreThreadIdx',0,17,168,2,16
	.word	7426
	.byte	13
	.byte	'Os_Hal_MpSystemConfigType',0,116,59,46
	.word	34470
	.byte	13
	.byte	'Os_Hal_MpCoreConfigType',0,116,63,44
	.word	17692
	.byte	13
	.byte	'Os_Hal_MpAppConfigType',0,116,67,43
	.word	25644
	.byte	13
	.byte	'Os_Hal_MpThreadConfigType',0,116,71,46
	.word	26049
	.byte	13
	.byte	'Os_Hal_MpuRegionRangeConfigType',0,36,75,3
	.word	17625
	.byte	13
	.byte	'Os_AccessCheckIdx',0,117,62,15
	.word	3257
	.byte	13
	.byte	'Os_AccessCheckConfigType',0,117,66,45
	.word	28772
	.byte	13
	.byte	'Os_TraceThreadRunReason',0,13,220,2,2
	.word	6316
	.byte	5,13,245,2,9,1,6
	.byte	'OsOrtiApiIdGetApplicationID',0,2,6
	.byte	'OsOrtiApiIdGetISRID',0,4,6
	.byte	'OsOrtiApiIdCallTrustedFunction',0,6,6
	.byte	'OsOrtiApiIdCheckISRMemoryAccess',0,8,6
	.byte	'OsOrtiApiIdCheckTaskMemoryAccess',0,10,6
	.byte	'OsOrtiApiIdCheckObjectAccess',0,12,6
	.byte	'OsOrtiApiIdCheckObjectOwnership',0,14,6
	.byte	'OsOrtiApiIdStartScheduleTableRel',0,16,6
	.byte	'OsOrtiApiIdStartScheduleTableAbs',0,18,6
	.byte	'OsOrtiApiIdStopScheduleTable',0,20,6
	.byte	'OsOrtiApiIdNextScheduleTable',0,22,6
	.byte	'OsOrtiApiIdStartScheduleTableSynchron',0,24,6
	.byte	'OsOrtiApiIdSyncScheduleTable',0,26,6
	.byte	'OsOrtiApiIdSetScheduleTableAsync',0,28,6
	.byte	'OsOrtiApiIdGetScheduleTableStatus',0,30,6
	.byte	'OsOrtiApiIdIncrementCounter',0,32,6
	.byte	'OsOrtiApiIdGetCounterValue',0,34,6
	.byte	'OsOrtiApiIdGetElapsedValue',0,36,6
	.byte	'OsOrtiApiIdTerminateApplication',0,38,6
	.byte	'OsOrtiApiIdAllowAccess',0,40,6
	.byte	'OsOrtiApiIdGetApplicationState',0,42,6
	.byte	'OsOrtiApiIdGetNumberOfActivatedCores',0,44,6
	.byte	'OsOrtiApiIdGetCoreID',0,46,6
	.byte	'OsOrtiApiIdStartCore',0,48,6
	.byte	'OsOrtiApiIdStartNonAutosarCore',0,50,6
	.byte	'OsOrtiApiIdGetSpinlock',0,52,6
	.byte	'OsOrtiApiIdReleaseSpinlock',0,54,6
	.byte	'OsOrtiApiIdTryToGetSpinlock',0,56,6
	.byte	'OsOrtiApiIdShutdownAllCores',0,58,6
	.byte	'OsOrtiApiIdControlIdle',0,60,6
	.byte	'OsOrtiApiIdIocSend',0,62,6
	.byte	'OsOrtiApiIdIocWrite',0,192,0,6
	.byte	'OsOrtiApiIdIocSendGroup',0,194,0,6
	.byte	'OsOrtiApiIdIocWriteGroup',0,196,0,6
	.byte	'OsOrtiApiIdIocReceive',0,198,0,6
	.byte	'OsOrtiApiIdIocRead',0,200,0,6
	.byte	'OsOrtiApiIdIocReceiveGroup',0,202,0,6
	.byte	'OsOrtiApiIdIocReadGroup',0,204,0,6
	.byte	'OsOrtiApiIdIocEmptyQueue',0,206,0,6
	.byte	'OsOrtiApiIdGetCurrentApplicationID',0,208,0,6
	.byte	'OsOrtiApiIdCallNonTrustedFunction',0,210,0,6
	.byte	'OsOrtiApiIdGetTaskStackUsage',0,212,0,6
	.byte	'OsOrtiApiIdGetISRStackUsage',0,214,0,6
	.byte	'OsOrtiApiIdGetKernelStackUsage',0,216,0,6
	.byte	'OsOrtiApiIdGetStartupHookStackUsage',0,218,0,6
	.byte	'OsOrtiApiIdGetErrorHookStackUsage',0,220,0,6
	.byte	'OsOrtiApiIdGetShutdownHookStackUsage',0,222,0,6
	.byte	'OsOrtiApiIdGetProtectionHookStackUsage',0,224,0,6
	.byte	'OsOrtiApiIdGetSemaphore',0,226,0,6
	.byte	'OsOrtiApiIdReleaseSemaphore',0,228,0,6
	.byte	'OsOrtiApiIdStartOS',0,230,0,6
	.byte	'OsOrtiApiIdGetActiveApplicationMode',0,232,0,6
	.byte	'OsOrtiApiIdDisableAllInterrupts',0,234,0,6
	.byte	'OsOrtiApiIdEnableAllInterrupts',0,236,0,6
	.byte	'OsOrtiApiIdSuspendAllInterrupts',0,238,0,6
	.byte	'OsOrtiApiIdResumeAllInterrupts',0,240,0,6
	.byte	'OsOrtiApiIdSuspendOSInterrupts',0,242,0,6
	.byte	'OsOrtiApiIdResumeOSInterrupts',0,244,0,6
	.byte	'OsOrtiApiIdActivateTask',0,246,0,6
	.byte	'OsOrtiApiIdTerminateTask',0,248,0,6
	.byte	'OsOrtiApiIdChainTask',0,250,0,6
	.byte	'OsOrtiApiIdGetTaskID',0,252,0,6
	.byte	'OsOrtiApiIdGetTaskState',0,254,0,6
	.byte	'OsOrtiApiIdSchedule',0,128,1,6
	.byte	'OsOrtiApiIdSetEvent',0,130,1,6
	.byte	'OsOrtiApiIdClearEvent',0,132,1,6
	.byte	'OsOrtiApiIdGetEvent',0,134,1,6
	.byte	'OsOrtiApiIdWaitEvent',0,136,1,6
	.byte	'OsOrtiApiIdGetAlarmBase',0,138,1,6
	.byte	'OsOrtiApiIdGetAlarm',0,140,1,6
	.byte	'OsOrtiApiIdSetRelAlarm',0,142,1,6
	.byte	'OsOrtiApiIdSetAbsAlarm',0,144,1,6
	.byte	'OsOrtiApiIdCancelAlarm',0,146,1,6
	.byte	'OsOrtiApiIdGetResource',0,148,1,6
	.byte	'OsOrtiApiIdReleaseResource',0,150,1,6
	.byte	'OsOrtiApiIdGetVersionInfo',0,152,1,6
	.byte	'OsOrtiApiIdEnterPreStartTask',0,158,1,6
	.byte	'OsOrtiApiIdShutdownOS',0,160,1,6
	.byte	'OsOrtiApiIdGetUnhandledIrq',0,162,1,6
	.byte	'OsOrtiApiIdGetUnhandledExc',0,164,1,6
	.byte	'OsOrtiApiIdDisableOSInterrupts',0,166,1,6
	.byte	'OsOrtiApiIdEnableOSInterrupts',0,168,1,6
	.byte	'OsOrtiApiIdReadPeripheral8',0,170,1,6
	.byte	'OsOrtiApiIdReadPeripheral16',0,172,1,6
	.byte	'OsOrtiApiIdReadPeripheral32',0,174,1,6
	.byte	'OsOrtiApiIdWritePeripheral8',0,176,1,6
	.byte	'OsOrtiApiIdWritePeripheral16',0,178,1,6
	.byte	'OsOrtiApiIdWritePeripheral32',0,180,1,6
	.byte	'OsOrtiApiIdModifyPeripheral8',0,182,1,6
	.byte	'OsOrtiApiIdModifyPeripheral16',0,184,1,6
	.byte	'OsOrtiApiIdModifyPeripheral32',0,186,1,6
	.byte	'OsOrtiApiIdGetDetailedError',0,188,1,6
	.byte	'OsOrtiApiIdOSErrorGetServiceId',0,190,1,6
	.byte	'OsOrtiApiIdDisableInterruptSource',0,192,1,6
	.byte	'OsOrtiApiIdEnableInterruptSource',0,194,1,6
	.byte	'OsOrtiApiIdClearPendingInterrupt',0,196,1,6
	.byte	'OsOrtiApiIdIsInterruptSourceEnabled',0,198,1,6
	.byte	'OsOrtiApiIdIsInterruptPending',0,200,1,6
	.byte	'OsOrtiApiIdCallFastTrustedFunction',0,202,1,6
	.byte	'OsOrtiApiIdBarrierSynchronize',0,204,1,6
	.byte	'OsOrtiApiIdGetExceptionContext',0,206,1,6
	.byte	'OsOrtiApiIdSetExceptionContext',0,208,1,6
	.byte	'OsOrtiApiIdInitialEnableInterruptSources',0,210,1,6
	.byte	'OsOrtiApiIdGetCoreStartState',0,212,1,6
	.byte	'OsOrtiApiIdGetExceptionAddress',0,214,1,0,13
	.byte	'OsOrtiApiIdType',0,13,225,3,3
	.word	98715
	.byte	13
	.byte	'Os_TraceThreadTypeType',0,13,236,3,2
	.word	6611
	.byte	13
	.byte	'Os_HookTaskReturnType',0,33,105,2
	.word	16432
	.byte	25,33,121,9,1,12
	.byte	'Status',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'Mode',0
	.word	3257
	.byte	1,2,35,0,0,13
	.byte	'Os_HookParameterType',0,33,125,2
	.word	102049
	.byte	25,33,128,1,9,1,12
	.byte	'ProtectionReaction',0
	.word	16906
	.byte	1,2,35,0,0,13
	.byte	'Os_HookReturnType',0,33,131,1,2
	.word	102114
	.byte	13
	.byte	'Os_EventStateType',0,78,77,3
	.word	39662
	.byte	13
	.byte	'Os_XSigFunctionIdx',0,47,109,3
	.word	19676
	.byte	13
	.byte	'Os_TimerTypeType',0,42,72,3
	.word	18545
	.byte	13
	.byte	'Os_CounterCharacteristicsConfigType',0,42,75,56
	.word	18067
	.byte	13
	.byte	'Os_CounterConfigType',0,42,78,41
	.word	18680
	.byte	13
	.byte	'Os_AlarmConfigType',0,118,54,39
	.word	24436
	.byte	13
	.byte	'Os_SchTConfigType',0,119,55,38
	.word	25420
	.byte	13
	.byte	'Os_SchTExPoConfigType',0,119,61,42
	.word	25254
	.byte	13
	.byte	'Os_SchTAutostartConfigType',0,119,67,47
	.word	24723
	.byte	5,55,139,1,9,1,6
	.byte	'OS_SCHTSTATUS_STOPPED',0,0,6
	.byte	'OS_SCHTSTATUS_NEXT',0,1,6
	.byte	'OS_SCHTSTATUS_WAITING',0,2,6
	.byte	'OS_SCHTSTATUS_RUNNING',0,3,0,11
	.byte	'Os_SchTType_Tag',0,55,210,2,8,20,12
	.byte	'Job',0
	.word	18235
	.byte	4,2,35,0,12
	.byte	'ExPo',0
	.word	25415
	.byte	4,2,35,4,12
	.byte	'State',0
	.word	102445
	.byte	1,2,35,8,12
	.byte	'Next',0
	.word	25600
	.byte	4,2,35,12,12
	.byte	'Previous',0
	.word	25600
	.byte	4,2,35,16,0,13
	.byte	'Os_SchTType',0,119,70,32
	.word	102545
	.byte	13
	.byte	'Os_SchTExPoActionEventConfigType',0,119,76,53
	.word	25167
	.byte	13
	.byte	'Os_SchTExPoActionTaskConfigType',0,119,79,52
	.word	25100
	.byte	13
	.byte	'Os_Hal_TimerFrtConfigType',0,120,61,46
	.word	18966
	.byte	13
	.byte	'Os_Hal_TimerPitConfigType',0,120,65,46
	.word	41325
	.byte	13
	.byte	'Os_TimerSwConfigType',0,121,59,41
	.word	41723
	.byte	11
	.byte	'Os_TimerPitConfigType_Tag',0,38,246,1,8,56,12
	.byte	'SwCounter',0
	.word	41723
	.byte	52,2,35,0,12
	.byte	'HwConfig',0
	.word	41625
	.byte	4,2,35,52,0,13
	.byte	'Os_TimerPitConfigType',0,121,62,42
	.word	102840
	.byte	13
	.byte	'Os_TimerHrtConfigType',0,121,65,42
	.word	19266
	.byte	11
	.byte	'Os_TimerPfrtConfigType_Tag',0,38,187,2,8,68,12
	.byte	'SwCounter',0
	.word	41723
	.byte	52,2,35,0,12
	.byte	'Period',0
	.word	139
	.byte	4,2,35,52,12
	.byte	'MaxDifferentialValue',0
	.word	139
	.byte	4,2,35,56,12
	.byte	'MaxCountingValue',0
	.word	139
	.byte	4,2,35,60,12
	.byte	'HwConfig',0
	.word	19261
	.byte	4,2,35,64,0,13
	.byte	'Os_TimerPfrtConfigType',0,121,68,43
	.word	102970
	.byte	13
	.byte	'Os_XSigState_Type',0,46,100,2
	.word	20698
	.byte	13
	.byte	'Os_XSigComDataConfigType',0,46,114,2
	.word	21082
	.byte	13
	.byte	'Os_XSigParamsType',0,46,123,2
	.word	20669
	.byte	13
	.byte	'Os_XSigOutputParamsType',0,46,133,1,2
	.word	20943
	.byte	13
	.byte	'Os_XSigResultType',0,46,147,1,2
	.word	20973
	.byte	13
	.byte	'Os_XSigChannelSendType',0,46,207,1,2
	.word	19581
	.byte	13
	.byte	'Os_XSigChannelRecvType',0,46,217,1,2
	.word	19634
	.byte	13
	.byte	'Os_XSigChannelSendConfigType',0,46,234,1,2
	.word	21147
	.byte	13
	.byte	'Os_XSigChannelRecvConfigType',0,46,251,1,2
	.word	21558
	.byte	13
	.byte	'Os_XSigFunctionDescritorConfigType',0,45,190,1,2
	.word	21415
	.byte	13
	.byte	'Os_ActivationCntType',0,31,102,15
	.word	3257
	.byte	13
	.byte	'Os_TaskScheduleType',0,31,111,2
	.word	15697
	.byte	13
	.byte	'Os_JobConfigType',0,122,53,37
	.word	18351
	.byte	13
	.byte	'Os_JobType',0,122,56,31
	.word	18235
	.byte	13
	.byte	'Os_PriorityQueueNodeIdxType',0,40,72,16
	.word	4825
	.byte	13
	.byte	'Os_PriorityQueueNodeType',0,40,80,3
	.word	18436
	.byte	13
	.byte	'Os_PriorityQueueType',0,40,87,3
	.word	18461
	.byte	13
	.byte	'Os_PriorityQueueConfigType',0,40,96,3
	.word	18492
	.byte	13
	.byte	'Os_TimerSwType',0,38,226,1,3
	.word	41679
	.byte	13
	.byte	'Os_TimerHrtType',0,38,151,2,3
	.word	18846
	.byte	13
	.byte	'Os_TpMonitoringKindType',0,37,151,2,2
	.word	28048
	.byte	13
	.byte	'Os_TpDelayLevelType',0,37,154,2,15
	.word	3257
	.byte	13
	.byte	'Os_ServiceTypeType',0,56,122,3
	.word	26554
	.byte	13
	.byte	'Os_ServiceTrustedFunctionParamsType',0,56,133,1,3
	.word	27410
	.byte	13
	.byte	'Os_ServiceNonTrustedFunctionParamsType',0,56,143,1,3
	.word	27463
	.byte	13
	.byte	'Os_ServiceFastTrustedFunctionParamsType',0,56,153,1,3
	.word	27517
	.byte	13
	.byte	'Os_ServiceParamsType',0,56,162,1,3
	.word	27571
	.byte	22,1,1,23
	.word	12081
	.byte	23
	.word	12117
	.byte	0,10
	.word	104017
	.byte	13
	.byte	'Os_ServiceTfCbkType',0,56,223,1,9
	.word	104031
	.byte	22,1,1,23
	.word	12366
	.byte	23
	.word	12117
	.byte	0,10
	.word	104065
	.byte	13
	.byte	'Os_ServiceNtfCbkType',0,56,248,1,9
	.word	104079
	.byte	22,1,1,23
	.word	12452
	.byte	23
	.word	12117
	.byte	0,10
	.word	104114
	.byte	13
	.byte	'Os_ServiceFtfCbkType',0,56,191,2,9
	.word	104128
	.byte	13
	.byte	'Os_AlarmModeType',0,54,113,2
	.word	24297
	.byte	5,54,117,9,1,6
	.byte	'OS_ALARMSTATE_CANCELED',0,0,6
	.byte	'OS_ALARMSTATE_SET',0,1,0,13
	.byte	'Os_AlarmStateType',0,54,123,2
	.word	104188
	.byte	13
	.byte	'Os_AlarmAutostartConfigType',0,54,143,1,2
	.word	24351
	.byte	13
	.byte	'Os_AlarmCallbackType',0,54,241,1,9
	.word	16663
	.byte	13
	.byte	'Os_SchTEventIdxType',0,55,130,1,16
	.word	139
	.byte	13
	.byte	'Os_SchTTaskIdxType',0,55,133,1,16
	.word	139
	.byte	13
	.byte	'Os_SchTStatusType',0,55,149,1,3
	.word	102445
	.byte	5,55,153,1,9,1,6
	.byte	'OS_SCHTSYNCSTATUS_NOT_PROVIDED',0,0,6
	.byte	'OS_SCHTSYNCSTATUS_SYNC',0,1,6
	.byte	'OS_SCHTSYNCSTATUS_ASYNC',0,2,0,13
	.byte	'Os_SchTSyncStatusType',0,55,161,1,3
	.word	104416
	.byte	13
	.byte	'Os_SchTExPoKindType',0,55,198,1,2
	.word	24919
	.byte	13
	.byte	'Os_SchTSyncKindType',0,55,131,2,2
	.word	24830
	.byte	13
	.byte	'Os_SchTAutostartModeType',0,55,141,2,2
	.word	24605
	.byte	13
	.byte	'Os_AppType',0,16,122,3
	.word	5503
	.byte	13
	.byte	'Os_AccessCheckRegionConfigType',0,57,95,3
	.word	28692
	.byte	13
	.byte	'Os_FifoIdxType',0,123,73,15
	.word	3257
	.byte	5,123,76,9,1,6
	.byte	'OS_FIFOWRITERESULT_OK',0,0,6
	.byte	'OS_FIFOWRITERESULT_BUFFEROVERFLOW',0,1,0,13
	.byte	'Os_FifoWriteResultType',0,123,80,2
	.word	104711
	.byte	13
	.byte	'Os_Fifo08WriteConfigType',0,92,66,45
	.word	45782
	.byte	13
	.byte	'Os_Fifo08ReadConfigType',0,92,69,44
	.word	45953
	.byte	13
	.byte	'Os_Fifo08NodeType',0,92,76,2
	.word	45756
	.byte	13
	.byte	'Os_Fifo08WriteType',0,92,83,2
	.word	45694
	.byte	13
	.byte	'Os_Fifo08ReadType',0,92,90,2
	.word	45723
	.byte	13
	.byte	'Os_Fifo16WriteConfigType',0,94,66,45
	.word	46188
	.byte	13
	.byte	'Os_Fifo16ReadConfigType',0,94,69,44
	.word	46359
	.byte	13
	.byte	'Os_Fifo16NodeType',0,94,76,2
	.word	46162
	.byte	13
	.byte	'Os_Fifo16WriteType',0,94,83,2
	.word	46100
	.byte	13
	.byte	'Os_Fifo16ReadType',0,94,90,2
	.word	46129
	.byte	13
	.byte	'Os_Fifo32WriteConfigType',0,96,66,45
	.word	46594
	.byte	13
	.byte	'Os_Fifo32ReadConfigType',0,96,69,44
	.word	46765
	.byte	13
	.byte	'Os_Fifo32NodeType',0,96,76,2
	.word	46568
	.byte	13
	.byte	'Os_Fifo32WriteType',0,96,83,2
	.word	46506
	.byte	13
	.byte	'Os_Fifo32ReadType',0,96,90,2
	.word	46535
	.byte	13
	.byte	'Os_FifoRefWriteConfigType',0,98,66,46
	.word	47025
	.byte	13
	.byte	'Os_FifoRefReadConfigType',0,98,69,45
	.word	47261
	.byte	13
	.byte	'Os_FifoRefWriteType',0,98,104,2
	.word	46912
	.byte	13
	.byte	'Os_FifoRefReadType',0,98,111,2
	.word	46941
	.byte	13
	.byte	'Os_IocSubClassType',0,49,170,3,2
	.word	22466
	.byte	5,124,96,9,1,6
	.byte	'OS_TRAPID_GETCOREID',0,0,6
	.byte	'OS_TRAPID_GETACTIVEAPPLICATIONMODE',0,1,6
	.byte	'OS_TRAPID_SHUTDOWNOS',0,2,6
	.byte	'OS_TRAPID_SHUTDOWNALLCORES',0,3,6
	.byte	'OS_TRAPID_DISABLELEVEL',0,4,6
	.byte	'OS_TRAPID_ENABLELEVEL',0,5,6
	.byte	'OS_TRAPID_DISABLEGLOBAL',0,6,6
	.byte	'OS_TRAPID_ENABLEGLOBAL',0,7,6
	.byte	'OS_TRAPID_DISABLEALLINTERRUPTS',0,8,6
	.byte	'OS_TRAPID_ENABLEALLINTERRUPTS',0,9,6
	.byte	'OS_TRAPID_SUSPENDALLINTERRUPTS',0,10,6
	.byte	'OS_TRAPID_RESUMEALLINTERRUPTS',0,11,6
	.byte	'OS_TRAPID_SUSPENDOSINTERRUPTS',0,12,6
	.byte	'OS_TRAPID_RESUMEOSINTERRUPTS',0,13,6
	.byte	'OS_TRAPID_DISABLEINTERRUPTSOURCE',0,14,6
	.byte	'OS_TRAPID_ENABLEINTERRUPTSOURCE',0,15,6
	.byte	'OS_TRAPID_CLEARPENDINGINTERRUPT',0,16,6
	.byte	'OS_TRAPID_ISINTERRUPTSOURCEENABLED',0,17,6
	.byte	'OS_TRAPID_ISINTERRUPTPENDING',0,18,6
	.byte	'OS_TRAPID_ALLOWACCESS',0,19,6
	.byte	'OS_TRAPID_GETAPPLICATIONID',0,20,6
	.byte	'OS_TRAPID_GETCURRENTAPPLICATIONID',0,21,6
	.byte	'OS_TRAPID_GETAPPLICATIONSTATE',0,22,6
	.byte	'OS_TRAPID_CHECKOBJECTACCESS',0,23,6
	.byte	'OS_TRAPID_CHECKOBJECTOWNERSHIP',0,24,6
	.byte	'OS_TRAPID_TERMINATEAPPLICATION',0,25,6
	.byte	'OS_TRAPID_ACTIVATETASK',0,26,6
	.byte	'OS_TRAPID_TERMINATETASK',0,27,6
	.byte	'OS_TRAPID_CHAINTASK',0,28,6
	.byte	'OS_TRAPID_GETTASKSTATE',0,29,6
	.byte	'OS_TRAPID_GETTASKID',0,30,6
	.byte	'OS_TRAPID_GETISRID',0,31,6
	.byte	'OS_TRAPID_SCHEDULE',0,32,6
	.byte	'OS_TRAPID_INCREMENTCOUNTER',0,33,6
	.byte	'OS_TRAPID_GETCOUNTERVALUE',0,34,6
	.byte	'OS_TRAPID_GETELAPSEDVALUE',0,35,6
	.byte	'OS_TRAPID_GETALARM',0,36,6
	.byte	'OS_TRAPID_GETALARMBASE',0,37,6
	.byte	'OS_TRAPID_SETRELALARM',0,38,6
	.byte	'OS_TRAPID_SETABSALARM',0,39,6
	.byte	'OS_TRAPID_CANCELALARM',0,40,6
	.byte	'OS_TRAPID_GETRESOURCE',0,41,6
	.byte	'OS_TRAPID_RELEASERESOURCE',0,42,6
	.byte	'OS_TRAPID_SETEVENT',0,43,6
	.byte	'OS_TRAPID_CLEAREVENT',0,44,6
	.byte	'OS_TRAPID_WAITEVENT',0,45,6
	.byte	'OS_TRAPID_GETEVENT',0,46,6
	.byte	'OS_TRAPID_STARTSCHEDULETABLEREL',0,47,6
	.byte	'OS_TRAPID_STARTSCHEDULETABLEABS',0,48,6
	.byte	'OS_TRAPID_STOPSCHEDULETABLE',0,49,6
	.byte	'OS_TRAPID_NEXTSCHEDULETABLE',0,50,6
	.byte	'OS_TRAPID_STARTSCHEDULETABLESYNCHRON',0,51,6
	.byte	'OS_TRAPID_SETSCHEDULETABLEASYNC',0,52,6
	.byte	'OS_TRAPID_SYNCSCHEDULETABLE',0,53,6
	.byte	'OS_TRAPID_GETSCHEDULETABLESTATUS',0,54,6
	.byte	'OS_TRAPID_SPINLOCKGET',0,55,6
	.byte	'OS_TRAPID_SPINLOCKRELEASE',0,56,6
	.byte	'OS_TRAPID_SPINLOCKTRYGET',0,57,6
	.byte	'OS_TRAPID_IOC08RECEIVE',0,58,6
	.byte	'OS_TRAPID_IOC08EMPTYQUEUE',0,59,6
	.byte	'OS_TRAPID_IOC08SEND',0,60,6
	.byte	'OS_TRAPID_IOC16RECEIVE',0,61,6
	.byte	'OS_TRAPID_IOC16EMPTYQUEUE',0,62,6
	.byte	'OS_TRAPID_IOC16SEND',0,63,6
	.byte	'OS_TRAPID_IOC32RECEIVE',0,192,0,6
	.byte	'OS_TRAPID_IOC32EMPTYQUEUE',0,193,0,6
	.byte	'OS_TRAPID_IOC32SEND',0,194,0,6
	.byte	'OS_TRAPID_IOCREFRECEIVE',0,195,0,6
	.byte	'OS_TRAPID_IOCREFEMPTYQUEUE',0,196,0,6
	.byte	'OS_TRAPID_IOCREFSEND',0,197,0,6
	.byte	'OS_TRAPID_IOCREAD',0,198,0,6
	.byte	'OS_TRAPID_IOCWRITE',0,199,0,6
	.byte	'OS_TRAPID_IOC08MULTIRECEIVE',0,200,0,6
	.byte	'OS_TRAPID_IOC08EMPTYMULTIQUEUE',0,201,0,6
	.byte	'OS_TRAPID_IOC16MULTIRECEIVE',0,202,0,6
	.byte	'OS_TRAPID_IOC16EMPTYMULTIQUEUE',0,203,0,6
	.byte	'OS_TRAPID_IOC32MULTIRECEIVE',0,204,0,6
	.byte	'OS_TRAPID_IOC32EMPTYMULTIQUEUE',0,205,0,6
	.byte	'OS_TRAPID_IOCREFMULTIRECEIVE',0,206,0,6
	.byte	'OS_TRAPID_IOCREFEMPTYMULTIQUEUE',0,207,0,6
	.byte	'OS_TRAPID_READPERIPHERAL8',0,208,0,6
	.byte	'OS_TRAPID_READPERIPHERAL16',0,209,0,6
	.byte	'OS_TRAPID_READPERIPHERAL32',0,210,0,6
	.byte	'OS_TRAPID_WRITEPERIPHERAL8',0,211,0,6
	.byte	'OS_TRAPID_WRITEPERIPHERAL16',0,212,0,6
	.byte	'OS_TRAPID_WRITEPERIPHERAL32',0,213,0,6
	.byte	'OS_TRAPID_MODIFYPERIPHERAL8',0,214,0,6
	.byte	'OS_TRAPID_MODIFYPERIPHERAL16',0,215,0,6
	.byte	'OS_TRAPID_MODIFYPERIPHERAL32',0,216,0,6
	.byte	'OS_TRAPID_CALLTRUSTEDFUNCTION',0,217,0,6
	.byte	'OS_TRAPID_CALLNONTRUSTEDFUNCTION',0,218,0,6
	.byte	'OS_TRAPID_CALLFASTTRUSTEDFUNCTION',0,219,0,6
	.byte	'OS_TRAPID_ERRAPPLICATIONERROR',0,220,0,6
	.byte	'OS_TRAPID_TASKMISSINGTERMINATETASK',0,221,0,6
	.byte	'OS_TRAPID_ISREPILOGUE',0,222,0,6
	.byte	'OS_TRAPID_SERVICERETURN',0,223,0,6
	.byte	'OS_TRAPID_HOOKRETURN',0,224,0,6
	.byte	'OS_TRAPID_CONTROLIDLE',0,225,0,6
	.byte	'OS_TRAPID_GETTASKSTACKUSAGE',0,226,0,6
	.byte	'OS_TRAPID_GETISRSTACKUSAGE',0,227,0,6
	.byte	'OS_TRAPID_GETKERNELSTACKUSAGE',0,228,0,6
	.byte	'OS_TRAPID_GETSTARTUPHOOKSTACKUSAGE',0,229,0,6
	.byte	'OS_TRAPID_GETERRORHOOKSTACKUSAGE',0,230,0,6
	.byte	'OS_TRAPID_GETSHUTDOWNHOOKSTACKUSAGE',0,231,0,6
	.byte	'OS_TRAPID_GETPROTECTIONHOOKSTACKUSAGE',0,232,0,6
	.byte	'OS_TRAPID_GETUNHANDLEDIRQ',0,233,0,6
	.byte	'OS_TRAPID_GETUNHANDLEDEXC',0,234,0,6
	.byte	'OS_TRAPID_GETDETAILEDERROR',0,235,0,6
	.byte	'OS_TRAPID_GETSERVICEID',0,236,0,6
	.byte	'OS_TRAPID_COREGETTHREAD',0,237,0,6
	.byte	'OS_TRAPID_GETNUMBEROFACTIVATEDCORES',0,238,0,6
	.byte	'OS_TRAPID_CHECKTASKMEMORYACCESS',0,239,0,6
	.byte	'OS_TRAPID_CHECKISRMEMORYACCESS',0,240,0,6
	.byte	'OS_TRAPID_BARRIERSYNCHRONIZE',0,241,0,6
	.byte	'OS_TRAPID_GETEXCEPTIONCONTEXT',0,242,0,6
	.byte	'OS_TRAPID_SETEXCEPTIONCONTEXT',0,243,0,6
	.byte	'OS_TRAPID_GETCORESTARTSTATE',0,244,0,6
	.byte	'OS_TRAPID_GETEXCEPTIONADDRESS',0,245,0,6
	.byte	'OS_TRAPID_COUNT',0,246,0,0,13
	.byte	'Os_TrapIdType',0,124,217,1,3
	.word	105390
	.byte	9
	.word	96042
	.byte	10
	.word	108906
	.byte	10
	.word	3257
	.byte	9
	.word	3257
	.byte	10
	.word	108921
	.byte	9
	.word	96364
	.byte	10
	.word	108931
	.byte	10
	.word	4825
	.byte	9
	.word	4825
	.byte	10
	.word	108946
	.byte	9
	.word	96686
	.byte	10
	.word	108956
	.byte	9
	.word	97010
	.byte	10
	.word	108966
	.byte	9
	.word	97276
	.byte	10
	.word	108976
	.byte	9
	.word	97423
	.byte	10
	.word	108986
	.byte	9
	.word	96149
	.byte	10
	.word	108996
	.byte	9
	.word	96471
	.byte	10
	.word	109006
	.byte	9
	.word	96793
	.byte	10
	.word	109016
	.byte	9
	.word	97119
	.byte	10
	.word	109026
	.byte	10
	.word	14965
	.byte	25,124,232,1,9,8,12
	.byte	'ParamApiType',0
	.word	13222
	.byte	8,2,35,0,12
	.byte	'ParamSpinlockConfigRefType',0
	.word	5388
	.byte	4,2,35,0,12
	.byte	'ParamIoc08SendConfigRefType',0
	.word	108911
	.byte	4,2,35,0,12
	.byte	'ParamIoc08ReceiveConfigRefType',0
	.word	96144
	.byte	4,2,35,0,12
	.byte	'ParamUint8RefType',0
	.word	108916
	.byte	4,2,35,0,12
	.byte	'ParamConstUint8RefType',0
	.word	108926
	.byte	4,2,35,0,12
	.byte	'ParamUint8Type',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ParamIoc16SendConfigRefType',0
	.word	108936
	.byte	4,2,35,0,12
	.byte	'ParamIoc16ReceiveConfigRefType',0
	.word	96466
	.byte	4,2,35,0,12
	.byte	'ParamUint16RefType',0
	.word	108941
	.byte	4,2,35,0,12
	.byte	'ParamConstUint16RefType',0
	.word	108951
	.byte	4,2,35,0,12
	.byte	'ParamUint16Type',0
	.word	4825
	.byte	2,2,35,0,12
	.byte	'ParamIoc32SendConfigRefType',0
	.word	108961
	.byte	4,2,35,0,12
	.byte	'ParamIoc32ReceiveConfigRefType',0
	.word	96788
	.byte	4,2,35,0,12
	.byte	'ParamUint32RefType',0
	.word	32125
	.byte	4,2,35,0,12
	.byte	'ParamConstUint32RefType',0
	.word	3397
	.byte	4,2,35,0,12
	.byte	'ParamUint32Type',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ParamIocRefSendConfigRefType',0
	.word	108971
	.byte	4,2,35,0,12
	.byte	'ParamIocRefReceiveConfigRefType',0
	.word	97114
	.byte	4,2,35,0,12
	.byte	'ParamVoidRefType',0
	.word	12117
	.byte	4,2,35,0,12
	.byte	'ParamVoidConfigRefType',0
	.word	11294
	.byte	4,2,35,0,12
	.byte	'ParamIocReadConfigRefType',0
	.word	108981
	.byte	4,2,35,0,12
	.byte	'ParamIocWriteConfigRefType',0
	.word	108991
	.byte	4,2,35,0,12
	.byte	'ParamIoc08MultiReceiveConfigRefType',0
	.word	109001
	.byte	4,2,35,0,12
	.byte	'ParamIoc16MultiReceiveConfigRefType',0
	.word	109011
	.byte	4,2,35,0,12
	.byte	'ParamIoc32MultiReceiveConfigRefType',0
	.word	109021
	.byte	4,2,35,0,12
	.byte	'ParamIocRefMultiReceiveConfigRefType',0
	.word	109031
	.byte	4,2,35,0,12
	.byte	'ParamOSServiceIdType',0
	.word	7487
	.byte	1,2,35,0,12
	.byte	'ParamOs_StatusType',0
	.word	240
	.byte	2,2,35,0,12
	.byte	'ParamOs_ErrorParamsRefType',0
	.word	109036
	.byte	4,2,35,0,0,13
	.byte	'Os_TrapParameterType',0,124,136,2,3
	.word	109041
	.byte	25,124,140,2,9,4,12
	.byte	'ReturnOs_StatusType',0
	.word	240
	.byte	2,2,35,0,12
	.byte	'ReturnStd_ReturnType',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ReturnUint8Type',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ReturnUint16Type',0
	.word	4825
	.byte	2,2,35,0,12
	.byte	'ReturnUint32Type',0
	.word	139
	.byte	4,2,35,0,12
	.byte	'ReturnCoreIdType',0
	.word	6257
	.byte	1,2,35,0,12
	.byte	'ReturnAppModeType',0
	.word	3257
	.byte	1,2,35,0,12
	.byte	'ReturnISRType',0
	.word	11167
	.byte	1,2,35,0,12
	.byte	'ReturnApplicationType',0
	.word	10990
	.byte	1,2,35,0,12
	.byte	'ReturnObjectAccessType',0
	.word	91905
	.byte	1,2,35,0,12
	.byte	'ReturnAccessType',0
	.word	28189
	.byte	1,2,35,0,12
	.byte	'ReturnOSServiceIdType',0
	.word	7487
	.byte	1,2,35,0,12
	.byte	'ReturnOs_AddressOfConstType',0
	.word	15014
	.byte	4,2,35,0,12
	.byte	'ReturnThreadConfigRefType',0
	.word	29265
	.byte	4,2,35,0,0,13
	.byte	'Os_TrapReturnType',0,124,156,2,3
	.word	110105
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,11,0,0,0,5,4,1,58,15,59,15,57,15,11,15,0,0,6,40,0,3,8,28,13,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,38,0,73,19,0,0,10,15
	.byte	0,73,19,0,0,11,19,1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,22,0,3,8,58,15
	.byte	59,15,57,15,73,19,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17
	.byte	53,0,73,19,0,0,18,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,19,59,0,3,8,0,0,20,23,1,3,8,58,15,59,15,57
	.byte	15,11,15,0,0,21,21,0,54,15,39,12,0,0,22,21,1,54,15,39,12,0,0,23,5,0,73,19,0,0,24,21,1,73,19,54,15,39,12
	.byte	0,0,25,23,1,58,15,59,15,57,15,11,15,0,0,26,11,1,0,0,27,46,1,3,8,54,15,39,12,63,12,60,12,0,0,28,46,1,3
	.byte	8,73,19,54,15,39,12,63,12,60,12,0,0,29,5,0,3,8,73,19,0,0,30,46,0,3,8,54,15,39,12,63,12,60,12,0,0,31,46
	.byte	1,49,19,0,0,32,5,0,49,19,0,0,33,29,1,49,19,0,0,34,11,0,49,19,0,0,35,11,1,49,19,0,0,36,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L34:
	.word	.L331-.L330
.L330:
	.half	3
	.word	.L333-.L332
.L332:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error.h',0,0,0,0
	.byte	'Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_ContextInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ThreadInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_StackInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_LockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SpinlockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TraceInt.h',0,0,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Spinlock_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ApplicationInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IsrInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_InterruptInt.h',0,0,0,0
	.byte	'Os_Hal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ErrorInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CommonInt.h',0,0,0,0
	.byte	'Std_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_OsInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SchedulerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArrayInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TaskInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_DequeInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_HookInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ResourceInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CounterInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_PriorityQueue_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_JobInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STMInt.h',0,0,0,0
	.byte	'Os_Hal_Kernel_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannelInt.h',0,0,0,0
	.byte	'Os_XSignal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IocInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Ioc_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BarrierInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Barrier_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AlarmInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTableInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunctionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheckInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Bit.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArray.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Deque.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Spinlock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannel.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_EventInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPT.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPTInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRef.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRefInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Common_Types.h',0,0,0,0
	.byte	'Os_Hal_Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Derivative_TC39x_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheck_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Alarm_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTable_Types.h',0,0,0,0
	.byte	'Os_Hal_Timer_Types.h',0,1,0,0
	.byte	'Os_Timer_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TrapInt.h',0,0,0,0,0
.L333:
.L331:
	.sdecl	'.debug_info',debug,cluster('Os_InterruptInit')
	.sect	'.debug_info'
.L35:
	.word	217
	.half	3
	.word	.L36
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L38,.L37
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_InterruptInit',0,1,139,5,21,1,1,1
	.word	.L10,.L90,.L9
	.byte	4
	.byte	'IntApiState',0,1,141,5,53
	.word	.L91,.L92
	.byte	5
	.word	.L10,.L90
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_InterruptInit')
	.sect	'.debug_abbrev'
.L36:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_InterruptInit')
	.sect	'.debug_line'
.L37:
	.word	.L335-.L334
.L334:
	.half	3
	.word	.L337-.L336
.L336:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0,0
.L337:
	.byte	5,36,7,0,5,2
	.word	.L10
	.byte	3,147,5,1,5,50,9
	.half	.L338-.L10
	.byte	1,5,55,9
	.half	.L339-.L338
	.byte	3,4,1,5,53,1,5,52,9
	.half	.L340-.L339
	.byte	3,3,1,5,1,9
	.half	.L341-.L340
	.byte	3,1,1,7,9
	.half	.L39-.L341
	.byte	0,1,1
.L335:
	.sdecl	'.debug_ranges',debug,cluster('Os_InterruptInit')
	.sect	'.debug_ranges'
.L38:
	.word	-1,.L10,0,.L39-.L10,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.debug_info'
.L40:
	.word	481
	.half	3
	.word	.L41
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L43,.L42
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_DisableAllInterrupts',0,1,172,5,21,1,1,1
	.word	.L12,.L93,.L11
	.byte	4
	.word	.L12,.L93
	.byte	5
	.word	.L94,.L12,.L95
	.byte	6
	.word	.L96,.L12,.L95
	.byte	5
	.word	.L97,.L12,.L95
	.byte	7
	.word	.L98,.L99
	.byte	6
	.word	.L100,.L12,.L95
	.byte	5
	.word	.L101,.L12,.L95
	.byte	6
	.word	.L102,.L12,.L95
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L104
	.byte	0,0,0,0,0,0,5
	.word	.L105,.L95,.L106
	.byte	7
	.word	.L107,.L108
	.byte	9
	.word	.L109,.L95,.L106
	.byte	0,5
	.word	.L110,.L106,.L111
	.byte	7
	.word	.L112,.L113
	.byte	6
	.word	.L114,.L106,.L111
	.byte	5
	.word	.L115,.L106,.L111
	.byte	6
	.word	.L116,.L106,.L111
	.byte	8
	.byte	'retState',0,3,128,1,29
	.word	.L103,.L117
	.byte	0,0,0,0,5
	.word	.L118,.L111,.L119
	.byte	7
	.word	.L120,.L121
	.byte	9
	.word	.L122,.L111,.L119
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.debug_abbrev'
.L41:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.debug_line'
.L42:
	.word	.L343-.L342
.L342:
	.half	3
	.word	.L345-.L344
.L344:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L345:
	.byte	4,2,5,3,7,0,5,2
	.word	.L12
	.byte	3,224,4,1,4,4,9
	.half	.L279-.L12
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L95-.L279
	.byte	3,39,1,4,3,5,42,9
	.half	.L106-.L95
	.byte	3,167,127,1,5,75,9
	.half	.L280-.L106
	.byte	1,5,73,9
	.half	.L281-.L280
	.byte	1,5,3,9
	.half	.L346-.L281
	.byte	3,3,1,4,1,5,23,9
	.half	.L347-.L346
	.byte	3,140,3,1,5,39,9
	.half	.L111-.L347
	.byte	3,130,127,1,5,53,9
	.half	.L282-.L111
	.byte	1,5,1,9
	.half	.L119-.L282
	.byte	3,191,2,1,7,9
	.half	.L44-.L119
	.byte	0,1,1
.L343:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.debug_ranges'
.L43:
	.word	-1,.L12,0,.L44-.L12,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.debug_info'
.L45:
	.word	484
	.half	3
	.word	.L46
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L48,.L47
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_EnableAllInterrupts',0,1,227,5,21,1,1,1
	.word	.L14,.L123,.L13
	.byte	4
	.word	.L14,.L123
	.byte	5
	.word	.L94,.L14,.L124
	.byte	6
	.word	.L96,.L14,.L124
	.byte	5
	.word	.L97,.L14,.L124
	.byte	7
	.word	.L98,.L125
	.byte	6
	.word	.L100,.L14,.L124
	.byte	5
	.word	.L101,.L14,.L124
	.byte	6
	.word	.L102,.L14,.L124
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L126
	.byte	0,0,0,0,0,0,5
	.word	.L105,.L124,.L127
	.byte	7
	.word	.L107,.L128
	.byte	9
	.word	.L109,.L124,.L127
	.byte	0,5
	.word	.L129,.L127,.L130
	.byte	7
	.word	.L131,.L132
	.byte	9
	.word	.L133,.L127,.L130
	.byte	0,5
	.word	.L134,.L130,.L135
	.byte	7
	.word	.L136,.L137
	.byte	6
	.word	.L138,.L130,.L135
	.byte	5
	.word	.L139,.L130,.L135
	.byte	7
	.word	.L140,.L141
	.byte	6
	.word	.L142,.L130,.L135
	.byte	8
	.byte	'icr',0,3,154,1,29
	.word	.L103,.L143
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.debug_abbrev'
.L46:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.debug_line'
.L47:
	.word	.L349-.L348
.L348:
	.half	3
	.word	.L351-.L350
.L350:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L351:
	.byte	4,2,5,3,7,0,5,2
	.word	.L14
	.byte	3,224,4,1,4,4,9
	.half	.L283-.L14
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L124-.L283
	.byte	3,39,1,4,1,5,39,9
	.half	.L127-.L124
	.byte	3,200,1,1,5,53,9
	.half	.L284-.L127
	.byte	1,4,3,5,3,9
	.half	.L130-.L284
	.byte	3,249,125,1,5,10,9
	.half	.L352-.L130
	.byte	3,1,1,5,41,9
	.half	.L353-.L352
	.byte	1,5,3,3,2,1,9
	.half	.L354-.L353
	.byte	3,1,1,4,1,5,1,9
	.half	.L135-.L354
	.byte	3,230,4,1,7,9
	.half	.L49-.L135
	.byte	0,1,1
.L349:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.debug_ranges'
.L48:
	.word	-1,.L14,0,.L49-.L14,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.debug_info'
.L50:
	.word	490
	.half	3
	.word	.L51
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L53,.L52
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_SuspendAllInterrupts',0,1,155,6,21,1,1,1
	.word	.L16,.L144,.L15
	.byte	4
	.word	.L16,.L144
	.byte	5
	.word	.L94,.L16,.L145
	.byte	6
	.word	.L96,.L16,.L145
	.byte	5
	.word	.L97,.L16,.L145
	.byte	7
	.word	.L98,.L146
	.byte	6
	.word	.L100,.L16,.L145
	.byte	5
	.word	.L101,.L16,.L145
	.byte	6
	.word	.L102,.L16,.L145
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L147
	.byte	0,0,0,0,0,0,5
	.word	.L105,.L145,.L148
	.byte	7
	.word	.L107,.L149
	.byte	9
	.word	.L109,.L145,.L148
	.byte	0,5
	.word	.L110,.L150,.L151
	.byte	7
	.word	.L112,.L152
	.byte	6
	.word	.L114,.L150,.L151
	.byte	5
	.word	.L115,.L150,.L151
	.byte	6
	.word	.L116,.L150,.L151
	.byte	8
	.byte	'retState',0,3,128,1,29
	.word	.L103,.L153
	.byte	0,0,0,0,5
	.word	.L154,.L151,.L2
	.byte	7
	.word	.L155,.L156
	.byte	7
	.word	.L157,.L158
	.byte	9
	.word	.L159,.L151,.L2
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.debug_abbrev'
.L51:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.debug_line'
.L52:
	.word	.L356-.L355
.L355:
	.half	3
	.word	.L358-.L357
.L357:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L358:
	.byte	4,2,5,3,7,0,5,2
	.word	.L16
	.byte	3,224,4,1,4,4,9
	.half	.L287-.L16
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L145-.L287
	.byte	3,39,1,4,1,5,45,9
	.half	.L148-.L145
	.byte	3,211,4,1,5,5,9
	.half	.L288-.L148
	.byte	1,4,3,5,42,7,9
	.half	.L150-.L288
	.byte	3,212,122,1,5,75,9
	.half	.L359-.L150
	.byte	1,5,73,9
	.half	.L289-.L359
	.byte	1,5,3,9
	.half	.L360-.L289
	.byte	3,3,1,4,1,5,23,9
	.half	.L361-.L360
	.byte	3,140,3,1,5,89,9
	.half	.L151-.L361
	.byte	3,170,2,1,5,13,9
	.half	.L290-.L151
	.byte	3,158,125,1,5,42,9
	.half	.L2-.L290
	.byte	3,230,2,1,5,60,9
	.half	.L362-.L2
	.byte	1,5,1,9
	.half	.L363-.L362
	.byte	3,16,1,7,9
	.half	.L54-.L363
	.byte	0,1,1
.L356:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.debug_ranges'
.L53:
	.word	-1,.L16,0,.L54-.L16,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.debug_info'
.L55:
	.word	448
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L58,.L57
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_ResumeAllInterrupts',0,1,226,6,21,1,1,1
	.word	.L18,.L160,.L17
	.byte	4
	.word	.L18,.L160
	.byte	5
	.word	.L94,.L18,.L161
	.byte	6
	.word	.L96,.L18,.L161
	.byte	5
	.word	.L97,.L18,.L161
	.byte	7
	.word	.L98,.L162
	.byte	6
	.word	.L100,.L18,.L161
	.byte	5
	.word	.L101,.L18,.L161
	.byte	6
	.word	.L102,.L18,.L161
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L163
	.byte	0,0,0,0,0,0,5
	.word	.L105,.L161,.L164
	.byte	7
	.word	.L107,.L165
	.byte	9
	.word	.L109,.L161,.L164
	.byte	0,5
	.word	.L134,.L166,.L3
	.byte	7
	.word	.L136,.L167
	.byte	6
	.word	.L138,.L166,.L3
	.byte	5
	.word	.L139,.L166,.L3
	.byte	7
	.word	.L140,.L168
	.byte	6
	.word	.L142,.L166,.L3
	.byte	8
	.byte	'icr',0,3,154,1,29
	.word	.L103,.L169
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.debug_line'
.L57:
	.word	.L365-.L364
.L364:
	.half	3
	.word	.L367-.L366
.L366:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L367:
	.byte	4,2,5,3,7,0,5,2
	.word	.L18
	.byte	3,224,4,1,4,4,9
	.half	.L291-.L18
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L161-.L291
	.byte	3,39,1,4,1,5,6,9
	.half	.L164-.L161
	.byte	3,147,5,1,5,3,9
	.half	.L292-.L164
	.byte	1,5,60,7,9
	.half	.L368-.L292
	.byte	3,7,1,5,5,9
	.half	.L369-.L368
	.byte	3,3,1,4,3,5,3,7,9
	.half	.L166-.L369
	.byte	3,164,122,1,5,10,9
	.half	.L370-.L166
	.byte	3,1,1,5,41,9
	.half	.L371-.L370
	.byte	1,5,3,3,2,1,9
	.half	.L372-.L371
	.byte	3,1,1,4,1,5,1,9
	.half	.L3-.L372
	.byte	3,246,5,1,7,9
	.half	.L59-.L3
	.byte	0,1,1
.L365:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.debug_ranges'
.L58:
	.word	-1,.L18,0,.L59-.L18,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.debug_info'
.L60:
	.word	733
	.half	3
	.word	.L61
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L63,.L62
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_SuspendOSInterrupts',0,1,170,7,21,1,1,1
	.word	.L20,.L170,.L19
	.byte	4
	.word	.L20,.L170
	.byte	5
	.word	.L94,.L20,.L171
	.byte	6
	.word	.L96,.L20,.L171
	.byte	5
	.word	.L97,.L20,.L171
	.byte	7
	.word	.L98,.L172
	.byte	6
	.word	.L100,.L20,.L171
	.byte	5
	.word	.L101,.L20,.L171
	.byte	6
	.word	.L102,.L20,.L171
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L173
	.byte	0,0,0,0,0,0,5
	.word	.L105,.L171,.L174
	.byte	7
	.word	.L107,.L175
	.byte	9
	.word	.L109,.L171,.L174
	.byte	0,5
	.word	.L176,.L177,.L178
	.byte	7
	.word	.L179,.L180
	.byte	6
	.word	.L181,.L177,.L178
	.byte	6
	.word	.L182,.L177,.L178
	.byte	8
	.byte	'cat2DisableLevel',0,1,201,4,25
	.word	.L103,.L183
	.byte	8
	.byte	'levelState',0,1,202,4,25
	.word	.L103,.L184
	.byte	5
	.word	.L185,.L177,.L186
	.byte	7
	.word	.L187,.L188
	.byte	9
	.word	.L189,.L177,.L186
	.byte	0,5
	.word	.L190,.L186,.L191
	.byte	7
	.word	.L192,.L193
	.byte	9
	.word	.L194,.L186,.L191
	.byte	0,5
	.word	.L195,.L196,.L6
	.byte	7
	.word	.L197,.L198
	.byte	6
	.word	.L199,.L196,.L6
	.byte	8
	.byte	'previousState',0,3,200,1,29
	.word	.L103,.L200
	.byte	5
	.word	.L201,.L196,.L202
	.byte	7
	.word	.L203,.L204
	.byte	9
	.word	.L205,.L196,.L202
	.byte	0,5
	.word	.L139,.L206,.L6
	.byte	7
	.word	.L140,.L207
	.byte	6
	.word	.L142,.L206,.L6
	.byte	8
	.byte	'icr',0,3,154,1,29
	.word	.L103,.L208
	.byte	0,0,0,0,0,0,0,5
	.word	.L154,.L178,.L5
	.byte	7
	.word	.L155,.L209
	.byte	7
	.word	.L157,.L210
	.byte	9
	.word	.L159,.L178,.L5
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.debug_abbrev'
.L61:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.debug_line'
.L62:
	.word	.L374-.L373
.L373:
	.half	3
	.word	.L376-.L375
.L375:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L376:
	.byte	4,2,5,3,7,0,5,2
	.word	.L20
	.byte	3,224,4,1,4,4,9
	.half	.L295-.L20
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L171-.L295
	.byte	3,39,1,4,1,5,46,9
	.half	.L174-.L171
	.byte	3,226,5,1,5,5,9
	.half	.L296-.L174
	.byte	1,4,3,5,10,7,9
	.half	.L177-.L296
	.byte	3,187,122,1,5,34,9
	.half	.L186-.L177
	.byte	3,187,127,1,5,65,9
	.half	.L298-.L186
	.byte	1,4,1,5,5,9
	.half	.L191-.L298
	.byte	3,158,3,1,4,3,5,40,7,9
	.half	.L196-.L191
	.byte	3,146,1,1,5,73,9
	.half	.L377-.L196
	.byte	1,5,71,9
	.half	.L300-.L377
	.byte	1,5,3,9
	.half	.L202-.L300
	.byte	3,232,123,1,9
	.half	.L378-.L202
	.byte	3,3,1,9
	.half	.L379-.L378
	.byte	3,1,1,9
	.half	.L206-.L379
	.byte	3,77,1,5,10,9
	.half	.L380-.L206
	.byte	3,1,1,5,41,9
	.half	.L381-.L380
	.byte	1,5,3,9
	.half	.L301-.L381
	.byte	3,2,1,9
	.half	.L382-.L301
	.byte	3,1,1,4,1,5,18,9
	.half	.L6-.L382
	.byte	3,182,3,1,5,90,9
	.half	.L178-.L6
	.byte	3,244,2,1,5,13,9
	.half	.L299-.L178
	.byte	3,143,124,1,5,42,9
	.half	.L5-.L299
	.byte	3,245,3,1,5,59,9
	.half	.L383-.L5
	.byte	1,5,1,9
	.half	.L384-.L383
	.byte	3,16,1,7,9
	.half	.L64-.L384
	.byte	0,1,1
.L374:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.debug_ranges'
.L63:
	.word	-1,.L20,0,.L64-.L20,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.debug_info'
.L65:
	.word	547
	.half	3
	.word	.L66
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L68,.L67
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_ResumeOSInterrupts',0,1,241,7,21,1,1,1
	.word	.L22,.L211,.L21
	.byte	4
	.word	.L22,.L211
	.byte	5
	.word	.L94,.L22,.L212
	.byte	6
	.word	.L96,.L22,.L212
	.byte	5
	.word	.L97,.L22,.L212
	.byte	7
	.word	.L98,.L213
	.byte	6
	.word	.L100,.L22,.L212
	.byte	5
	.word	.L101,.L22,.L212
	.byte	6
	.word	.L102,.L22,.L212
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L214
	.byte	0,0,0,0,0,0,5
	.word	.L105,.L212,.L215
	.byte	7
	.word	.L107,.L216
	.byte	9
	.word	.L109,.L212,.L215
	.byte	0,5
	.word	.L217,.L218,.L7
	.byte	7
	.word	.L219,.L220
	.byte	6
	.word	.L221,.L218,.L7
	.byte	5
	.word	.L195,.L218,.L7
	.byte	7
	.word	.L197,.L222
	.byte	6
	.word	.L199,.L218,.L7
	.byte	8
	.byte	'previousState',0,3,200,1,29
	.word	.L103,.L223
	.byte	5
	.word	.L201,.L218,.L224
	.byte	7
	.word	.L203,.L225
	.byte	9
	.word	.L205,.L218,.L224
	.byte	0,5
	.word	.L139,.L226,.L7
	.byte	7
	.word	.L140,.L227
	.byte	6
	.word	.L142,.L226,.L7
	.byte	8
	.byte	'icr',0,3,154,1,29
	.word	.L103,.L228
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.debug_line'
.L67:
	.word	.L386-.L385
.L385:
	.half	3
	.word	.L388-.L387
.L387:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L388:
	.byte	4,2,5,3,7,0,5,2
	.word	.L22
	.byte	3,224,4,1,4,4,9
	.half	.L303-.L22
	.byte	3,212,124,1,4,5,5,16,9
	.half	.L212-.L303
	.byte	3,39,1,4,1,5,6,9
	.half	.L215-.L212
	.byte	3,162,6,1,5,3,9
	.half	.L304-.L215
	.byte	1,5,59,7,9
	.half	.L389-.L304
	.byte	3,7,1,5,5,9
	.half	.L390-.L389
	.byte	3,3,1,5,45,7,9
	.half	.L391-.L390
	.byte	3,14,1,4,3,5,40,9
	.half	.L218-.L391
	.byte	3,206,125,1,5,73,9
	.half	.L392-.L218
	.byte	1,5,71,9
	.half	.L305-.L392
	.byte	1,5,3,9
	.half	.L224-.L305
	.byte	3,232,123,1,9
	.half	.L393-.L224
	.byte	3,3,1,9
	.half	.L394-.L393
	.byte	3,1,1,9
	.half	.L226-.L394
	.byte	3,77,1,5,10,9
	.half	.L395-.L226
	.byte	3,1,1,5,41,9
	.half	.L396-.L395
	.byte	1,5,3,9
	.half	.L306-.L396
	.byte	3,2,1,9
	.half	.L397-.L306
	.byte	3,1,1,4,1,5,1,9
	.half	.L7-.L397
	.byte	3,133,7,1,7,9
	.half	.L69-.L7
	.byte	0,1,1
.L386:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.debug_ranges'
.L68:
	.word	-1,.L22,0,.L69-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_DisableGlobal')
	.sect	'.debug_info'
.L70:
	.word	370
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_DisableGlobal',0,1,176,8,21,1,1,1
	.word	.L24,.L229,.L23
	.byte	4
	.word	.L24,.L229
	.byte	5
	.word	.L230,.L24,.L231
	.byte	6
	.word	.L232,.L24,.L231
	.byte	5
	.word	.L94,.L24,.L233
	.byte	6
	.word	.L96,.L24,.L233
	.byte	5
	.word	.L97,.L24,.L233
	.byte	7
	.word	.L98,.L234
	.byte	6
	.word	.L100,.L24,.L233
	.byte	5
	.word	.L101,.L24,.L233
	.byte	6
	.word	.L102,.L24,.L233
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L235
	.byte	0,0,0,0,0,0,5
	.word	.L236,.L233,.L231
	.byte	9
	.word	.L237,.L233,.L231
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_DisableGlobal')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_DisableGlobal')
	.sect	'.debug_line'
.L72:
	.word	.L399-.L398
.L398:
	.half	3
	.word	.L401-.L400
.L400:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0,0
.L401:
	.byte	4,2,5,3,7,0,5,2
	.word	.L24
	.byte	3,224,4,1,4,3,9
	.half	.L233-.L24
	.byte	3,143,124,1,4,1,5,1,9
	.half	.L231-.L233
	.byte	3,198,7,1,7,9
	.half	.L74-.L231
	.byte	0,1,1
.L399:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_DisableGlobal')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L24,0,.L74-.L24,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_EnableGlobal')
	.sect	'.debug_info'
.L75:
	.word	369
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_EnableGlobal',0,1,192,8,21,1,1,1
	.word	.L26,.L238,.L25
	.byte	4
	.word	.L26,.L238
	.byte	5
	.word	.L239,.L26,.L240
	.byte	6
	.word	.L241,.L26,.L240
	.byte	5
	.word	.L242,.L26,.L243
	.byte	7
	.word	.L244,.L26,.L243
	.byte	0,5
	.word	.L94,.L243,.L240
	.byte	6
	.word	.L96,.L243,.L240
	.byte	5
	.word	.L97,.L243,.L240
	.byte	8
	.word	.L98,.L245
	.byte	6
	.word	.L100,.L243,.L240
	.byte	5
	.word	.L101,.L243,.L240
	.byte	6
	.word	.L102,.L243,.L240
	.byte	9
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L246
	.byte	0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_EnableGlobal')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,11,0,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_EnableGlobal')
	.sect	'.debug_line'
.L77:
	.word	.L403-.L402
.L402:
	.half	3
	.word	.L405-.L404
.L404:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0,0
.L405:
	.byte	4,3,5,3,7,0,5,2
	.word	.L26
	.byte	3,223,0,1,4,2,9
	.half	.L243-.L26
	.byte	3,129,4,1,4,1,5,1,9
	.half	.L240-.L243
	.byte	3,229,3,1,7,9
	.half	.L79-.L240
	.byte	0,1,1
.L403:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_EnableGlobal')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L26,0,.L79-.L26,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_DisableLevel')
	.sect	'.debug_info'
.L80:
	.word	540
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_DisableLevel',0,1,208,8,21,1,1,1
	.word	.L28,.L247,.L27
	.byte	4
	.word	.L28,.L247
	.byte	5
	.word	.L248,.L28,.L249
	.byte	6
	.word	.L250,.L28,.L249
	.byte	5
	.word	.L94,.L28,.L251
	.byte	6
	.word	.L96,.L28,.L251
	.byte	5
	.word	.L97,.L28,.L251
	.byte	7
	.word	.L98,.L252
	.byte	6
	.word	.L100,.L28,.L251
	.byte	5
	.word	.L101,.L28,.L251
	.byte	6
	.word	.L102,.L28,.L251
	.byte	8
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L103,.L253
	.byte	0,0,0,0,0,0,6
	.word	.L254,.L251,.L249
	.byte	8
	.byte	'cat2DisableLevel',0,3,209,4,25
	.word	.L103,.L255
	.byte	5
	.word	.L195,.L251,.L249
	.byte	7
	.word	.L197,.L256
	.byte	6
	.word	.L199,.L251,.L249
	.byte	8
	.byte	'previousState',0,4,200,1,29
	.word	.L103,.L257
	.byte	5
	.word	.L201,.L251,.L258
	.byte	7
	.word	.L203,.L259
	.byte	9
	.word	.L205,.L251,.L258
	.byte	0,5
	.word	.L139,.L260,.L249
	.byte	7
	.word	.L140,.L261
	.byte	6
	.word	.L142,.L260,.L249
	.byte	8
	.byte	'icr',0,4,154,1,29
	.word	.L103,.L262
	.byte	0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_DisableLevel')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_DisableLevel')
	.sect	'.debug_line'
.L82:
	.word	.L407-.L406
.L406:
	.half	3
	.word	.L409-.L408
.L408:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0,0
.L409:
	.byte	4,2,5,3,7,0,5,2
	.word	.L28
	.byte	3,224,4,1,4,4,5,40,9
	.half	.L251-.L28
	.byte	3,131,1,1,5,73,9
	.half	.L410-.L251
	.byte	1,5,71,9
	.half	.L309-.L410
	.byte	1,5,3,9
	.half	.L258-.L309
	.byte	3,232,123,1,9
	.half	.L411-.L258
	.byte	3,3,1,9
	.half	.L412-.L411
	.byte	3,1,1,9
	.half	.L260-.L412
	.byte	3,77,1,5,10,9
	.half	.L413-.L260
	.byte	3,1,1,5,41,9
	.half	.L308-.L413
	.byte	1,5,3,9
	.half	.L310-.L308
	.byte	3,2,1,9
	.half	.L414-.L310
	.byte	3,1,1,4,1,5,1,9
	.half	.L249-.L414
	.byte	3,181,7,1,7,9
	.half	.L84-.L249
	.byte	0,1,1
.L407:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_DisableLevel')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L28,0,.L84-.L28,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_EnableLevel')
	.sect	'.debug_info'
.L85:
	.word	532
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L31
	.byte	3
	.byte	'Os_Api_EnableLevel',0,1,224,8,21,1,1,1
	.word	.L30,.L263,.L29
	.byte	4
	.word	.L30,.L263
	.byte	5
	.word	.L264,.L30,.L265
	.byte	6
	.word	.L266,.L30,.L265
	.byte	6
	.word	.L267,.L30,.L268
	.byte	7
	.byte	'taskLevel',0,2,249,4,25
	.word	.L103,.L269
	.byte	5
	.word	.L195,.L30,.L268
	.byte	8
	.word	.L197,.L270
	.byte	6
	.word	.L199,.L30,.L268
	.byte	7
	.byte	'previousState',0,3,200,1,29
	.word	.L103,.L271
	.byte	5
	.word	.L201,.L30,.L272
	.byte	8
	.word	.L203,.L273
	.byte	9
	.word	.L205,.L30,.L272
	.byte	0,5
	.word	.L139,.L274,.L268
	.byte	8
	.word	.L140,.L275
	.byte	6
	.word	.L142,.L274,.L268
	.byte	7
	.byte	'icr',0,3,154,1,29
	.word	.L103,.L276
	.byte	0,0,0,0,0,5
	.word	.L94,.L268,.L265
	.byte	6
	.word	.L96,.L268,.L265
	.byte	5
	.word	.L97,.L268,.L265
	.byte	8
	.word	.L98,.L277
	.byte	6
	.word	.L100,.L268,.L265
	.byte	5
	.word	.L101,.L268,.L265
	.byte	6
	.word	.L102,.L268,.L265
	.byte	7
	.byte	'ReturnValue',0,4,224,4,10
	.word	.L103,.L278
	.byte	0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_EnableLevel')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1
	.byte	0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_EnableLevel')
	.sect	'.debug_line'
.L87:
	.word	.L416-.L415
.L415:
	.half	3
	.word	.L418-.L417
.L417:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0,0
.L418:
	.byte	4,3,5,40,7,0,5,2
	.word	.L30
	.byte	3,227,5,1,5,73,9
	.half	.L419-.L30
	.byte	1,5,71,9
	.half	.L312-.L419
	.byte	1,5,3,9
	.half	.L272-.L312
	.byte	3,232,123,1,9
	.half	.L420-.L272
	.byte	3,3,1,9
	.half	.L421-.L420
	.byte	3,1,1,9
	.half	.L274-.L421
	.byte	3,77,1,5,10,9
	.half	.L422-.L274
	.byte	3,1,1,5,41,9
	.half	.L423-.L422
	.byte	1,5,3,9
	.half	.L313-.L423
	.byte	3,2,1,9
	.half	.L424-.L313
	.byte	3,1,1,4,4,9
	.half	.L268-.L424
	.byte	3,192,3,1,4,1,5,1,9
	.half	.L265-.L268
	.byte	3,133,4,1,7,9
	.half	.L89-.L265
	.byte	0,1,1
.L416:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_EnableLevel')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L30,0,.L89-.L30,0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.debug_loc'
.L113:
	.word	0,0
.L99:
	.word	0,0
.L121:
	.word	0,0
.L11:
	.word	-1,.L12,0,.L93-.L12
	.half	2
	.byte	138,0
	.word	0,0
.L104:
	.word	-1,.L12,.L279-.L12,.L280-.L12
	.half	1
	.byte	95
	.word	0,0
.L108:
	.word	0,0
.L117:
	.word	-1,.L12,.L281-.L12,.L282-.L12
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_DisableGlobal')
	.sect	'.debug_loc'
.L234:
	.word	0,0
.L23:
	.word	-1,.L24,0,.L229-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L235:
	.word	-1,.L24,.L233-.L24,.L229-.L24
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_DisableLevel')
	.sect	'.debug_loc'
.L252:
	.word	0,0
.L256:
	.word	0,0
.L27:
	.word	-1,.L28,0,.L247-.L28
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L28,.L251-.L28,.L308-.L28
	.half	1
	.byte	95
	.word	0,0
.L261:
	.word	0,0
.L259:
	.word	0,0
.L255:
	.word	0,0
.L262:
	.word	-1,.L28,.L310-.L28,.L311-.L28
	.half	1
	.byte	95
	.word	0,0
.L257:
	.word	-1,.L28,.L309-.L28,.L247-.L28
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.debug_loc'
.L137:
	.word	0,0
.L125:
	.word	0,0
.L132:
	.word	0,0
.L13:
	.word	-1,.L14,0,.L123-.L14
	.half	2
	.byte	138,0
	.word	0,0
.L126:
	.word	-1,.L14,.L283-.L14,.L284-.L14
	.half	1
	.byte	95
	.word	0,0
.L141:
	.word	0,0
.L128:
	.word	0,0
.L143:
	.word	-1,.L14,.L285-.L14,.L286-.L14
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_EnableGlobal')
	.sect	'.debug_loc'
.L245:
	.word	0,0
.L25:
	.word	-1,.L26,0,.L238-.L26
	.half	2
	.byte	138,0
	.word	0,0
.L246:
	.word	-1,.L26,.L240-.L26,.L238-.L26
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_EnableLevel')
	.sect	'.debug_loc'
.L277:
	.word	0,0
.L270:
	.word	0,0
.L29:
	.word	-1,.L30,0,.L263-.L30
	.half	2
	.byte	138,0
	.word	0,0
.L278:
	.word	-1,.L30,.L265-.L30,.L263-.L30
	.half	1
	.byte	95
	.word	0,0
.L275:
	.word	0,0
.L273:
	.word	0,0
.L276:
	.word	-1,.L30,.L313-.L30,.L314-.L30
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L271:
	.word	-1,.L30,.L312-.L30,.L265-.L30
	.half	1
	.byte	95
	.word	0,0
.L269:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.debug_loc'
.L167:
	.word	0,0
.L162:
	.word	0,0
.L17:
	.word	-1,.L18,0,.L160-.L18
	.half	2
	.byte	138,0
	.word	0,0
.L163:
	.word	-1,.L18,.L291-.L18,.L292-.L18
	.half	1
	.byte	95
	.word	0,0
.L168:
	.word	0,0
.L165:
	.word	0,0
.L169:
	.word	-1,.L18,.L293-.L18,.L294-.L18
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.debug_loc'
.L220:
	.word	0,0
.L213:
	.word	0,0
.L222:
	.word	0,0
.L21:
	.word	-1,.L22,0,.L211-.L22
	.half	2
	.byte	138,0
	.word	0,0
.L214:
	.word	-1,.L22,.L303-.L22,.L304-.L22
	.half	1
	.byte	95
	.word	0,0
.L227:
	.word	0,0
.L225:
	.word	0,0
.L216:
	.word	0,0
.L228:
	.word	-1,.L22,.L306-.L22,.L307-.L22
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L223:
	.word	-1,.L22,.L305-.L22,.L7-.L22
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.debug_loc'
.L152:
	.word	0,0
.L146:
	.word	0,0
.L158:
	.word	0,0
.L15:
	.word	-1,.L16,0,.L144-.L16
	.half	2
	.byte	138,0
	.word	0,0
.L147:
	.word	-1,.L16,.L287-.L16,.L288-.L16
	.half	1
	.byte	95
	.word	0,0
.L156:
	.word	0,0
.L149:
	.word	0,0
.L153:
	.word	-1,.L16,.L289-.L16,.L290-.L16
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.debug_loc'
.L172:
	.word	0,0
.L210:
	.word	0,0
.L193:
	.word	0,0
.L198:
	.word	0,0
.L188:
	.word	0,0
.L19:
	.word	-1,.L20,0,.L170-.L20
	.half	2
	.byte	138,0
	.word	0,0
.L173:
	.word	-1,.L20,.L295-.L20,.L296-.L20
	.half	1
	.byte	95
	.word	0,0
.L209:
	.word	0,0
.L207:
	.word	0,0
.L180:
	.word	0,0
.L204:
	.word	0,0
.L175:
	.word	0,0
.L183:
	.word	-1,.L20,.L186-.L20,.L297-.L20
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L208:
	.word	-1,.L20,.L301-.L20,.L302-.L20
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L184:
	.word	-1,.L20,.L298-.L20,.L299-.L20
	.half	1
	.byte	95
	.word	0,0
.L200:
	.word	-1,.L20,.L300-.L20,.L6-.L20
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_InterruptInit')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L10,0,.L90-.L10
	.half	1
	.byte	100
	.word	0,0
.L9:
	.word	-1,.L10,0,.L90-.L10
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L425:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Os_InterruptInit')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L10,.L90-.L10
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Os_Api_DisableAllInterrupts')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L12,.L93-.L12
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_EnableAllInterrupts')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L14,.L123-.L14
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_SuspendAllInterrupts')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L16,.L144-.L16
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_ResumeAllInterrupts')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L18,.L160-.L18
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_SuspendOSInterrupts')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L20,.L170-.L20
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_ResumeOSInterrupts')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L22,.L211-.L22
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_DisableGlobal')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L24,.L229-.L24
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_EnableGlobal')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L26,.L238-.L26
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_DisableLevel')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L28,.L247-.L28
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Os_Api_EnableLevel')
	.sect	'.debug_frame'
	.word	24
	.word	.L425,.L30,.L263-.L30
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\Os\Implementation\Os_Interrupt.c	  1127  
; ..\component\Os\Implementation\Os_Interrupt.c	  1128  
; ..\component\Os\Implementation\Os_Interrupt.c	  1129  #define OS_STOP_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.c	  1130  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.c	  1131  
; ..\component\Os\Implementation\Os_Interrupt.c	  1132  
; ..\component\Os\Implementation\Os_Interrupt.c	  1133  /* module specific MISRA deviations:
; ..\component\Os\Implementation\Os_Interrupt.c	  1134   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1135  
; ..\component\Os\Implementation\Os_Interrupt.c	  1136  
; ..\component\Os\Implementation\Os_Interrupt.c	  1137  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\Os\Implementation\Os_Interrupt.c	  1138  
; ..\component\Os\Implementation\Os_Interrupt.c	  1139  \ID SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1140   \DESCRIPTION    Os_ThreadGetInterruptApiState is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Interrupt.c	  1141   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Interrupt.c	  1142  
; ..\component\Os\Implementation\Os_Interrupt.c	  1143  \ID SBSW_OS_INT_THREADGETINTERRUPTAPISTATE_002
; ..\component\Os\Implementation\Os_Interrupt.c	  1144   \DESCRIPTION    Write access to the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1145   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1146  
; ..\component\Os\Implementation\Os_Interrupt.c	  1147  \ID SBSW_OS_INT_INTERRUPTTPLOCKALLSTART_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1148   \DESCRIPTION    Os_InterruptTpLockAllStart is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Interrupt.c	  1149   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Interrupt.c	  1150  
; ..\component\Os\Implementation\Os_Interrupt.c	  1151  \ID SBSW_OS_INT_INTERRUPTTPLOCKOSSTART_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1152   \DESCRIPTION    Os_InterruptTpLockOsStart is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Interrupt.c	  1153   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Interrupt.c	  1154  
; ..\component\Os\Implementation\Os_Interrupt.c	  1155  \ID SBSW_OS_INT_INTERRUPTCHECKNOTINCRITICALSECTION_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1156   \DESCRIPTION    Os_InterruptCheckNotInCriticalSection is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1157   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1158  
; ..\component\Os\Implementation\Os_Interrupt.c	  1159  \ID SBSW_OS_INT_INTERRUPTCHECKNOOVERFLOW_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1160   \DESCRIPTION    Os_InterruptCheckNoOverflow is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1161   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1162  
; ..\component\Os\Implementation\Os_Interrupt.c	  1163  \ID SBSW_OS_INT_INTERRUPTCHECKNOTINDISABLEALL_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1164   \DESCRIPTION    Os_InterruptCheckNotInDisableAll is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1165   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1166  
; ..\component\Os\Implementation\Os_Interrupt.c	  1167  \ID SBSW_OS_INT_INTERRUPTTAKESNAPSHOT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1168   \DESCRIPTION    Os_InterruptTakeSnapshot is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1169   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1170  
; ..\component\Os\Implementation\Os_Interrupt.c	  1171  \ID SBSW_OS_INT_INTERRUPTCHECKSNAPSHOT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1172   \DESCRIPTION    Os_InterruptCheckSnapshot is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1173   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1174  
; ..\component\Os\Implementation\Os_Interrupt.c	  1175  \ID SBSW_OS_INT_INTSUSPENDCAT1_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1176   \DESCRIPTION    Os_IntSuspendCat1 is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Interrupt.c	  1177                   Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1178   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1179  
; ..\component\Os\Implementation\Os_Interrupt.c	  1180  \ID SBSW_OS_INT_INTSUSPENDCAT2_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1181   \DESCRIPTION    Os_IntSuspendCat2 is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Interrupt.c	  1182                   Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1183   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1184  
; ..\component\Os\Implementation\Os_Interrupt.c	  1185  \ID SBSW_OS_INT_INTERRUPTDISABLEALLENTER_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1186   \DESCRIPTION    Os_InterruptDisableAllEnter is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1187   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1188  
; ..\component\Os\Implementation\Os_Interrupt.c	  1189  \ID SBSW_OS_INT_INTERRUPTCHECKINDISABLEALL_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1190   \DESCRIPTION    Os_InterruptCheckInDisableAll is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1191   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1192  
; ..\component\Os\Implementation\Os_Interrupt.c	  1193  \ID SBSW_OS_INT_INTERRUPTDISABLEALLEXIT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1194   \DESCRIPTION    Os_InterruptDisableAllExit is called with the return value of Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1195   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1196  
; ..\component\Os\Implementation\Os_Interrupt.c	  1197  \ID SBSW_OS_INT_INTRESUMECAT1_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1198   \DESCRIPTION    Os_IntResumeCat1 is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Interrupt.c	  1199                   Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1200   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1201  
; ..\component\Os\Implementation\Os_Interrupt.c	  1202  \ID SBSW_OS_INT_INTRESUMECAT2_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1203   \DESCRIPTION    Os_IntResumeCat2 is called with a value derived from the return value of
; ..\component\Os\Implementation\Os_Interrupt.c	  1204                   Os_ThreadGetInterruptApiState.
; ..\component\Os\Implementation\Os_Interrupt.c	  1205   \COUNTERMEASURE \M [CM_OS_THREADGETINTERRUPTAPISTATE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1206  
; ..\component\Os\Implementation\Os_Interrupt.c	  1207  \ID SBSW_OS_INT_INTERRUPTTPLOCKALLSTOP_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1208   \DESCRIPTION    Os_InterruptTpLockAllStop is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Interrupt.c	  1209   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Interrupt.c	  1210  
; ..\component\Os\Implementation\Os_Interrupt.c	  1211  \ID SBSW_OS_INT_INTERRUPTTPLOCKOSSTOP_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1212   \DESCRIPTION    Os_InterruptTpLockOsStop is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Interrupt.c	  1213   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Interrupt.c	  1214  
; ..\component\Os\Implementation\Os_Interrupt.c	  1215  \ID SBSW_OS_INT_TPSTARTALLINTERRUPT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1216   \DESCRIPTION    Os_TpStartAllInterrupt is called with the return value of Os_CoreAsrGetTimingProtection.
; ..\component\Os\Implementation\Os_Interrupt.c	  1217   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1218  
; ..\component\Os\Implementation\Os_Interrupt.c	  1219  \ID SBSW_OS_INT_TPSTOPALLINTERRUPT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1220   \DESCRIPTION    Os_TpStopAllInterrupt is called with the return value of Os_CoreAsrGetTimingProtection.
; ..\component\Os\Implementation\Os_Interrupt.c	  1221   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1222  
; ..\component\Os\Implementation\Os_Interrupt.c	  1223  \ID SBSW_OS_INT_TPSTARTOSINTERRUPT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1224   \DESCRIPTION    Os_TpStartOsInterrupt is called with the return value of Os_CoreAsrGetTimingProtection.
; ..\component\Os\Implementation\Os_Interrupt.c	  1225   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1226  
; ..\component\Os\Implementation\Os_Interrupt.c	  1227  \ID SBSW_OS_INT_TPSTOPOSINTERRUPT_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1228   \DESCRIPTION    Os_TpStopOsInterrupt is called with the return value of Os_CoreAsrGetTimingProtection.
; ..\component\Os\Implementation\Os_Interrupt.c	  1229   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1230  
; ..\component\Os\Implementation\Os_Interrupt.c	  1231  \ID SBSW_OS_INT_COREASRGETTIMINGPROTECTION_001
; ..\component\Os\Implementation\Os_Interrupt.c	  1232   \DESCRIPTION    Os_CoreAsrGetTimingProtection is called with the return value of Os_ThreadGetCore.
; ..\component\Os\Implementation\Os_Interrupt.c	  1233   \COUNTERMEASURE \M [CM_OS_THREADGETCORE_M]
; ..\component\Os\Implementation\Os_Interrupt.c	  1234  
; ..\component\Os\Implementation\Os_Interrupt.c	  1235  SBSW_JUSTIFICATION_END */
; ..\component\Os\Implementation\Os_Interrupt.c	  1236  
; ..\component\Os\Implementation\Os_Interrupt.c	  1237  
; ..\component\Os\Implementation\Os_Interrupt.c	  1238  /* START_COVERAGE_JUSTIFICATION
; ..\component\Os\Implementation\Os_Interrupt.c	  1239  
; ..\component\Os\Implementation\Os_Interrupt.c	  1240  \ID COV_OS_INTCOUNTEROVERFLOW
; ..\component\Os\Implementation\Os_Interrupt.c	  1241     \ACCEPT XF
; ..\component\Os\Implementation\Os_Interrupt.c	  1242     \REASON Counter overflow cannot be checked for type uint16 as the type is quite large.
; ..\component\Os\Implementation\Os_Interrupt.c	  1243             However, the code is unit tested and code inspected.
; ..\component\Os\Implementation\Os_Interrupt.c	  1244  
; ..\component\Os\Implementation\Os_Interrupt.c	  1245  END_COVERAGE_JUSTIFICATION */
; ..\component\Os\Implementation\Os_Interrupt.c	  1246  
; ..\component\Os\Implementation\Os_Interrupt.c	  1247  
; ..\component\Os\Implementation\Os_Interrupt.c	  1248  
; ..\component\Os\Implementation\Os_Interrupt.c	  1249  
; ..\component\Os\Implementation\Os_Interrupt.c	  1250  /*!
; ..\component\Os\Implementation\Os_Interrupt.c	  1251   * \}
; ..\component\Os\Implementation\Os_Interrupt.c	  1252   */
; ..\component\Os\Implementation\Os_Interrupt.c	  1253  
; ..\component\Os\Implementation\Os_Interrupt.c	  1254  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.c	  1255   *  END OF FILE: Os_Interrupt.c
; ..\component\Os\Implementation\Os_Interrupt.c	  1256   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.c	  1257  

	; Module end
