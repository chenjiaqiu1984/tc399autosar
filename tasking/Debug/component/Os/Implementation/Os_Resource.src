	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 21092262 SN 73118428"
	.compiler_invocation	"ctc --dep-file=component\\Os\\Implementation\\.Os_Resource.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc39xb -D__CPU_TC39XB__ --core=tc1.6.2 --iso=99 -DBRS_COMP_TASKING -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\testdemo\\taskingdemo\\demo001 -ID:\\Zonal\\demo011\\tasking\\component\\PduR -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\PduR\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\SomeIpXf\\Generator -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Can\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Can\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanIf\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\CanSM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Com -ID:\\Zonal\\demo011\\tasking\\component\\Com\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Com\\DaVinciCfg_VASE -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Com\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Com\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\ComM -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\ComM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Det -ID:\\Zonal\\demo011\\tasking\\component\\Det\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Det\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Det\\Implementation -ID:\\Zonal\\demo011\\tasking -ID:\\Zonal\\demo011\\tasking\\appl -ID:\\Zonal\\demo011\\tasking\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\Components -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\ContractPhase -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\inc -ID:\\Zonal\\demo011\\tasking\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\appl\\Include -ID:\\Zonal\\demo011\\tasking\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\appl\\Source\\swc_test -ID:\\Zonal\\demo011\\tasking\\component -ID:\\Zonal\\demo011\\tasking\\component\\_Common -ID:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Mcal_Tc3xx\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os -ID:\\Zonal\\demo011\\tasking\\component\\Os\\BSWMD\\Os\\TC39xQ -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\Os\\GeneratorMsr -ID:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Documentation -ID:\\Zonal\\demo011\\tasking\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug -ID:\\Zonal\\demo011\\tasking\\Debug\\appl -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\GenData\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\appl\\Source -ID:\\Zonal\\demo011\\tasking\\Debug\\component -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\BswM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\EcuM\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\Os\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib -ID:\\Zonal\\demo011\\tasking\\Debug\\component\\VStdLib\\Implementation -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\Debug\\mcal\\Port\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Dio\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Platform\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB -ID:\\Zonal\\demo011\\tasking\\mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\inc\\AS440 -ID:\\Zonal\\demo011\\tasking\\mcal\\McalLib\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Mcu\\ssc\\src -ID:\\Zonal\\demo011\\tasking\\mcal\\Port -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\inc -ID:\\Zonal\\demo011\\tasking\\mcal\\Port\\ssc\\src -g2 --make-target=component\\Os\\Implementation\\Os_Resource.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o component\\Os\\Implementation\\Os_Resource.src ..\\component\\Os\\Implementation\\Os_Resource.c"
	.compiler_name		"ctc"
	;source	'..\\component\\Os\\Implementation\\Os_Resource.c'

	
$TC162
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_ResourceInit')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_ResourceInit

; ..\component\Os\Implementation\Os_Resource.c	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Resource.c	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.c	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Resource.c	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Resource.c	     6   *
; ..\component\Os\Implementation\Os_Resource.c	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Resource.c	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Resource.c	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Resource.c	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Resource.c	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.c	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Resource.c	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Resource.c	    14  /**
; ..\component\Os\Implementation\Os_Resource.c	    15   * \addtogroup Os_Resource
; ..\component\Os\Implementation\Os_Resource.c	    16   * \{
; ..\component\Os\Implementation\Os_Resource.c	    17   *
; ..\component\Os\Implementation\Os_Resource.c	    18   * \file
; ..\component\Os\Implementation\Os_Resource.c	    19   * \brief       Resource API.
; ..\component\Os\Implementation\Os_Resource.c	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Resource.c	    21   *
; ..\component\Os\Implementation\Os_Resource.c	    22   *
; ..\component\Os\Implementation\Os_Resource.c	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Resource.c	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.c	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Resource.c	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    29  
; ..\component\Os\Implementation\Os_Resource.c	    30                                                                                                                          /* PRQA S 0777, 0779, 0828  EOF */ /* MD_MSR_Rule5.1, MD_MSR_Rule5.2, MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Resource.c	    31  
; ..\component\Os\Implementation\Os_Resource.c	    32  
; ..\component\Os\Implementation\Os_Resource.c	    33  #define OS_RESOURCE_SOURCE
; ..\component\Os\Implementation\Os_Resource.c	    34  
; ..\component\Os\Implementation\Os_Resource.c	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Resource.c	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Resource.c	    39  #include "Std_Types.h"
; ..\component\Os\Implementation\Os_Resource.c	    40  
; ..\component\Os\Implementation\Os_Resource.c	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Resource.c	    42  #include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Resource.c	    43  #include "Os_Resource_Lcfg.h"
; ..\component\Os\Implementation\Os_Resource.c	    44  
; ..\component\Os\Implementation\Os_Resource.c	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Resource.c	    46  #include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Resource.c	    47  #include "Os_Core.h"
; ..\component\Os\Implementation\Os_Resource.c	    48  #include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Resource.c	    49  #include "Os_Task.h"
; ..\component\Os\Implementation\Os_Resource.c	    50  #include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Resource.c	    51  #include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Resource.c	    52  #include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Resource.c	    53  #include "Os_Common_Types.h"
; ..\component\Os\Implementation\Os_Resource.c	    54  #include "Os_Error.h"
; ..\component\Os\Implementation\Os_Resource.c	    55  #include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Resource.c	    56  
; ..\component\Os\Implementation\Os_Resource.c	    57  
; ..\component\Os\Implementation\Os_Resource.c	    58  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Resource.c	    59  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Resource.c	    60  
; ..\component\Os\Implementation\Os_Resource.c	    61  
; ..\component\Os\Implementation\Os_Resource.c	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    63   *  LOCAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Resource.c	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    65  
; ..\component\Os\Implementation\Os_Resource.c	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    67   *  LOCAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Resource.c	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    69  
; ..\component\Os\Implementation\Os_Resource.c	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    71   *  LOCAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Resource.c	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    73  
; ..\component\Os\Implementation\Os_Resource.c	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    75   *  LOCAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Resource.c	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    77  
; ..\component\Os\Implementation\Os_Resource.c	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    79   *  GLOBAL DATA
; ..\component\Os\Implementation\Os_Resource.c	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    81  
; ..\component\Os\Implementation\Os_Resource.c	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    83   *  LOCAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Resource.c	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    85  #define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Resource.c	    86  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Resource.c	    87  
; ..\component\Os\Implementation\Os_Resource.c	    88  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	    89   *  Os_ResourceIsEnabled()
; ..\component\Os\Implementation\Os_Resource.c	    90   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	    91  /*! \brief          Returns whether any Resources are configured (!0) or not (0).
; ..\component\Os\Implementation\Os_Resource.c	    92   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	    93   *
; ..\component\Os\Implementation\Os_Resource.c	    94   *  \retval         !0  Resource module is enabled.
; ..\component\Os\Implementation\Os_Resource.c	    95   *  \retval         0   Resource module is disabled.
; ..\component\Os\Implementation\Os_Resource.c	    96   *
; ..\component\Os\Implementation\Os_Resource.c	    97   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Resource.c	    98   *
; ..\component\Os\Implementation\Os_Resource.c	    99   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   100   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   101   *
; ..\component\Os\Implementation\Os_Resource.c	   102   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   103   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   104  OS_FUNC_ATTRIBUTE_DECLARATION(
; ..\component\Os\Implementation\Os_Resource.c	   105  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_ResourceIsEnabled,
; ..\component\Os\Implementation\Os_Resource.c	   106  (
; ..\component\Os\Implementation\Os_Resource.c	   107    void
; ..\component\Os\Implementation\Os_Resource.c	   108  ));
; ..\component\Os\Implementation\Os_Resource.c	   109  
; ..\component\Os\Implementation\Os_Resource.c	   110  
; ..\component\Os\Implementation\Os_Resource.c	   111  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   112   *  Os_ResourceGetDyn()
; ..\component\Os\Implementation\Os_Resource.c	   113   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   114  /*! \brief          Returns the dynamic part of a resource.
; ..\component\Os\Implementation\Os_Resource.c	   115   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   116   *
; ..\component\Os\Implementation\Os_Resource.c	   117   *  \param[in]      Resource  The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   118   *
; ..\component\Os\Implementation\Os_Resource.c	   119   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   120   *
; ..\component\Os\Implementation\Os_Resource.c	   121   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   122   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   123   *
; ..\component\Os\Implementation\Os_Resource.c	   124   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   126  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2VAR(Os_ResourceType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   127  OS_ALWAYS_INLINE, Os_ResourceGetDyn,
; ..\component\Os\Implementation\Os_Resource.c	   128  (
; ..\component\Os\Implementation\Os_Resource.c	   129    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   130  ));
; ..\component\Os\Implementation\Os_Resource.c	   131  
; ..\component\Os\Implementation\Os_Resource.c	   132  
; ..\component\Os\Implementation\Os_Resource.c	   133  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   134   *  Os_ResourceInterruptGetDyn()
; ..\component\Os\Implementation\Os_Resource.c	   135   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   136  /*! \brief          Returns the dynamic part of a interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   137   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   138   *
; ..\component\Os\Implementation\Os_Resource.c	   139   *  \param[in]      Resource  The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   140   *
; ..\component\Os\Implementation\Os_Resource.c	   141   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   142   *
; ..\component\Os\Implementation\Os_Resource.c	   143   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   144   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   145   *
; ..\component\Os\Implementation\Os_Resource.c	   146   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   147   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   148  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2VAR(Os_ResourceInterruptType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   149  OS_ALWAYS_INLINE, Os_ResourceInterruptGetDyn,
; ..\component\Os\Implementation\Os_Resource.c	   150  (
; ..\component\Os\Implementation\Os_Resource.c	   151    P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   152  ));
; ..\component\Os\Implementation\Os_Resource.c	   153  
; ..\component\Os\Implementation\Os_Resource.c	   154  
; ..\component\Os\Implementation\Os_Resource.c	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   156   *  Os_ResourceIsIntResource()
; ..\component\Os\Implementation\Os_Resource.c	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   158  /*! \brief          Returns whether a resource is of type interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   159   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   160   *
; ..\component\Os\Implementation\Os_Resource.c	   161   *  \param[in]      Resource    The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   162   *
; ..\component\Os\Implementation\Os_Resource.c	   163   *  \retval         !0  Given resource is an interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   164   *  \retval         0   Given resource is not an interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   165   *
; ..\component\Os\Implementation\Os_Resource.c	   166   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   167   *
; ..\component\Os\Implementation\Os_Resource.c	   168   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   169   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   170   *
; ..\component\Os\Implementation\Os_Resource.c	   171   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   173  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   174  Os_ResourceIsIntResource,
; ..\component\Os\Implementation\Os_Resource.c	   175  (
; ..\component\Os\Implementation\Os_Resource.c	   176    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   177  ));
; ..\component\Os\Implementation\Os_Resource.c	   178  
; ..\component\Os\Implementation\Os_Resource.c	   179  
; ..\component\Os\Implementation\Os_Resource.c	   180  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   181   *  Os_ResourceCheckPrio()
; ..\component\Os\Implementation\Os_Resource.c	   182   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   183  /*! \brief          Returns whether the statically assigned scheduling priority of the current thread is logically
; ..\component\Os\Implementation\Os_Resource.c	   184   *                  lower than or equal to the ceiling priority of the given resource.
; ..\component\Os\Implementation\Os_Resource.c	   185   *  \details        Passes result of Os_ResourceIsCeilingPrioGe() to Os_ErrExtendedCheck().
; ..\component\Os\Implementation\Os_Resource.c	   186   *
; ..\component\Os\Implementation\Os_Resource.c	   187   *  \param[in]      Resource      The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   188   *  \param[in]      CurrentThread The current thread. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   189   *
; ..\component\Os\Implementation\Os_Resource.c	   190   *  \retval         Not OS_CHECK_FAILED   Priorities are okay.
; ..\component\Os\Implementation\Os_Resource.c	   191   *  \retval         OS_CHECK_FAILED       Threads static priority is higher than ceiling priority of the resource.
; ..\component\Os\Implementation\Os_Resource.c	   192   *
; ..\component\Os\Implementation\Os_Resource.c	   193   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   194   *
; ..\component\Os\Implementation\Os_Resource.c	   195   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   196   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   197   *
; ..\component\Os\Implementation\Os_Resource.c	   198   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   200  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   201  Os_ResourceCheckPrio,
; ..\component\Os\Implementation\Os_Resource.c	   202  (
; ..\component\Os\Implementation\Os_Resource.c	   203    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   204    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   205  ));
; ..\component\Os\Implementation\Os_Resource.c	   206  
; ..\component\Os\Implementation\Os_Resource.c	   207  
; ..\component\Os\Implementation\Os_Resource.c	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   209   *  Os_ResourceIsCeilingPrioGe()
; ..\component\Os\Implementation\Os_Resource.c	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   211  /*! \brief          Returns whether the statically assigned priority of the given resource is logically
; ..\component\Os\Implementation\Os_Resource.c	   212   *                  greater than or equal to the ceiling priority of the thread.
; ..\component\Os\Implementation\Os_Resource.c	   213   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   214   *
; ..\component\Os\Implementation\Os_Resource.c	   215   *  \param[in]      Resource      The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   216   *  \param[in]      CurrentThread The current thread. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   217   *
; ..\component\Os\Implementation\Os_Resource.c	   218   *  \retval         Not OS_CHECK_FAILED   Priorities are okay.
; ..\component\Os\Implementation\Os_Resource.c	   219   *  \retval         OS_CHECK_FAILED       Ceiling priority of the resource is lower than thread's home priority.
; ..\component\Os\Implementation\Os_Resource.c	   220   *
; ..\component\Os\Implementation\Os_Resource.c	   221   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   222   *
; ..\component\Os\Implementation\Os_Resource.c	   223   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   224   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   225   *
; ..\component\Os\Implementation\Os_Resource.c	   226   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   227   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   228  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   229  Os_ResourceIsCeilingPrioGe,
; ..\component\Os\Implementation\Os_Resource.c	   230  (
; ..\component\Os\Implementation\Os_Resource.c	   231    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   232    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   233  ));
; ..\component\Os\Implementation\Os_Resource.c	   234  
; ..\component\Os\Implementation\Os_Resource.c	   235  
; ..\component\Os\Implementation\Os_Resource.c	   236  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   237   *  Os_ResourceBaseIsCeilingPrioGe()
; ..\component\Os\Implementation\Os_Resource.c	   238   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   239  /*! \brief          Returns whether the statically assigned priority of the given resource is logically
; ..\component\Os\Implementation\Os_Resource.c	   240   *                  greater than or equal to the ceiling scheduling priority of the thread.
; ..\component\Os\Implementation\Os_Resource.c	   241   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   242   *
; ..\component\Os\Implementation\Os_Resource.c	   243   *  \param[in]      Resource      The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   244   *  \param[in]      CurrentThread The current thread. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   245   *
; ..\component\Os\Implementation\Os_Resource.c	   246   *  \retval         !0  The given thread is a task and its home priority is higher than the
; ..\component\Os\Implementation\Os_Resource.c	   247   *                      ceiling priority of the resource.
; ..\component\Os\Implementation\Os_Resource.c	   248   *  \retval         0   Ceiling priority of the resource is lower than thread's home priority.
; ..\component\Os\Implementation\Os_Resource.c	   249   *
; ..\component\Os\Implementation\Os_Resource.c	   250   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   251   *
; ..\component\Os\Implementation\Os_Resource.c	   252   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   253   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   254   *
; ..\component\Os\Implementation\Os_Resource.c	   255   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   256   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   257  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   258  Os_ResourceBaseIsCeilingPrioGe,
; ..\component\Os\Implementation\Os_Resource.c	   259  (
; ..\component\Os\Implementation\Os_Resource.c	   260    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   261    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   262  ));
; ..\component\Os\Implementation\Os_Resource.c	   263  
; ..\component\Os\Implementation\Os_Resource.c	   264  
; ..\component\Os\Implementation\Os_Resource.c	   265  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   266   *  Os_ResourceInterruptIsCeilingPrioGe()
; ..\component\Os\Implementation\Os_Resource.c	   267   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   268  /*! \brief          Returns whether the statically assigned priority of the given resource is logically
; ..\component\Os\Implementation\Os_Resource.c	   269   *                  greater than or equal to the ceiling interrupt priority of the thread.
; ..\component\Os\Implementation\Os_Resource.c	   270   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   271   *
; ..\component\Os\Implementation\Os_Resource.c	   272   *  \param[in]      Resource      The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   273   *  \param[in]      CurrentThread The current thread. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   274   *
; ..\component\Os\Implementation\Os_Resource.c	   275   *  \retval         !0  Priorities are okay.
; ..\component\Os\Implementation\Os_Resource.c	   276   *  \retval         0   Ceiling priority of the resource is lower than thread's home priority.
; ..\component\Os\Implementation\Os_Resource.c	   277   *
; ..\component\Os\Implementation\Os_Resource.c	   278   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   279   *
; ..\component\Os\Implementation\Os_Resource.c	   280   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   281   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   282   *
; ..\component\Os\Implementation\Os_Resource.c	   283   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   284   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   285  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   286  Os_ResourceInterruptIsCeilingPrioGe,
; ..\component\Os\Implementation\Os_Resource.c	   287  (
; ..\component\Os\Implementation\Os_Resource.c	   288    P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   290  ));
; ..\component\Os\Implementation\Os_Resource.c	   291  
; ..\component\Os\Implementation\Os_Resource.c	   292  
; ..\component\Os\Implementation\Os_Resource.c	   293  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   294   *  Os_ResourceSaveAndIncrease()
; ..\component\Os\Implementation\Os_Resource.c	   295   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   296  /*! \brief          Increases the priority of the task to the ceiling priority of the given resource.
; ..\component\Os\Implementation\Os_Resource.c	   297   *  \details        The priority is not changed, if the current priority is already logically higher or equal.
; ..\component\Os\Implementation\Os_Resource.c	   298   *
; ..\component\Os\Implementation\Os_Resource.c	   299   *  \param[in,out]  Resource    The resource to occupy. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   300   *  \param[in,out]  Task        The task thread which wants the resource. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   301   *
; ..\component\Os\Implementation\Os_Resource.c	   302   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   303   *
; ..\component\Os\Implementation\Os_Resource.c	   304   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   305   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   306   *
; ..\component\Os\Implementation\Os_Resource.c	   307   *  \pre            Given thread is a task.
; ..\component\Os\Implementation\Os_Resource.c	   308   *  \pre            Given thread is the current thread.
; ..\component\Os\Implementation\Os_Resource.c	   309   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Resource.c	   310   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   311  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   312  Os_ResourceSaveAndIncrease,
; ..\component\Os\Implementation\Os_Resource.c	   313  (
; ..\component\Os\Implementation\Os_Resource.c	   314    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   315    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Resource.c	   316  ));
; ..\component\Os\Implementation\Os_Resource.c	   317  
; ..\component\Os\Implementation\Os_Resource.c	   318  
; ..\component\Os\Implementation\Os_Resource.c	   319  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   320   *  Os_ResourceRestore()
; ..\component\Os\Implementation\Os_Resource.c	   321   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   322  /*! \brief          Restores the previous priority before the task has occupied the resource.
; ..\component\Os\Implementation\Os_Resource.c	   323   *  \details        The priority is not changed, if the previous priority is not logically lower than the
; ..\component\Os\Implementation\Os_Resource.c	   324   *                  current priority.
; ..\component\Os\Implementation\Os_Resource.c	   325   *
; ..\component\Os\Implementation\Os_Resource.c	   326   *  \param[in,out]  Resource    The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   327   *  \param[in,out]  Task        The task which releases the resource. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   328   *
; ..\component\Os\Implementation\Os_Resource.c	   329   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   330   *
; ..\component\Os\Implementation\Os_Resource.c	   331   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   332   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   333   *
; ..\component\Os\Implementation\Os_Resource.c	   334   *  \pre            Given Task is the current task.
; ..\component\Os\Implementation\Os_Resource.c	   335   *  \pre            Os_ResourceSaveAndIncrease was called before.
; ..\component\Os\Implementation\Os_Resource.c	   336   *  \pre            Concurrent access to given object is prevented by caller.
; ..\component\Os\Implementation\Os_Resource.c	   337   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   338  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   339  Os_ResourceRestore,
; ..\component\Os\Implementation\Os_Resource.c	   340  (
; ..\component\Os\Implementation\Os_Resource.c	   341    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   342    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Resource.c	   343  ));
; ..\component\Os\Implementation\Os_Resource.c	   344  
; ..\component\Os\Implementation\Os_Resource.c	   345  
; ..\component\Os\Implementation\Os_Resource.c	   346  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   347   *  Os_ResourceInterruptSaveAndIncrease()
; ..\component\Os\Implementation\Os_Resource.c	   348   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   349  /*! \brief          Save the current interrupt priority in the given resource and increases the current interrupt
; ..\component\Os\Implementation\Os_Resource.c	   350   *                  priority level to the interrupt priority level of the given interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   351   *  \details        The interrupt priority level is not changed, if the current level is already logically higher or
; ..\component\Os\Implementation\Os_Resource.c	   352   *                  equal.
; ..\component\Os\Implementation\Os_Resource.c	   353   *
; ..\component\Os\Implementation\Os_Resource.c	   354   *  \param[in,out]  Resource              The resource to occupy. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   355   *
; ..\component\Os\Implementation\Os_Resource.c	   356   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   357   *
; ..\component\Os\Implementation\Os_Resource.c	   358   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   359   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   360   *
; ..\component\Os\Implementation\Os_Resource.c	   361   *  \pre            -
; ..\component\Os\Implementation\Os_Resource.c	   362   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   363  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   364  Os_ResourceInterruptSaveAndIncrease,
; ..\component\Os\Implementation\Os_Resource.c	   365  (
; ..\component\Os\Implementation\Os_Resource.c	   366    P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   367  ));
; ..\component\Os\Implementation\Os_Resource.c	   368  
; ..\component\Os\Implementation\Os_Resource.c	   369  
; ..\component\Os\Implementation\Os_Resource.c	   370  
; ..\component\Os\Implementation\Os_Resource.c	   371  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   372   *  Os_ResourceGetDyn()
; ..\component\Os\Implementation\Os_Resource.c	   373   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   374  /*! \brief          Returns the dynamic data of a resource.
; ..\component\Os\Implementation\Os_Resource.c	   375   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   376   *
; ..\component\Os\Implementation\Os_Resource.c	   377   *  \param[in]      Resource    The resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   378   *
; ..\component\Os\Implementation\Os_Resource.c	   379   *  \context        ANY
; ..\component\Os\Implementation\Os_Resource.c	   380   *
; ..\component\Os\Implementation\Os_Resource.c	   381   *  \reentrant      TRUE
; ..\component\Os\Implementation\Os_Resource.c	   382   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   383   *
; ..\component\Os\Implementation\Os_Resource.c	   384   *  \pre            The given object is a resource lock.
; ..\component\Os\Implementation\Os_Resource.c	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   386  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2VAR(Os_ResourceType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   387  OS_ALWAYS_INLINE, Os_ResourceGetDyn,
; ..\component\Os\Implementation\Os_Resource.c	   388  (
; ..\component\Os\Implementation\Os_Resource.c	   389    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   390  ));
; ..\component\Os\Implementation\Os_Resource.c	   391  
; ..\component\Os\Implementation\Os_Resource.c	   392  
; ..\component\Os\Implementation\Os_Resource.c	   393  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   394   *  Os_ResourceLock2Resource()
; ..\component\Os\Implementation\Os_Resource.c	   395   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   396  /*! \brief        Returns the given lock as resource.
; ..\component\Os\Implementation\Os_Resource.c	   397   *  \details      --no details--
; ..\component\Os\Implementation\Os_Resource.c	   398   *
; ..\component\Os\Implementation\Os_Resource.c	   399   *  \param[in]    Lock  The lock to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   400   *
; ..\component\Os\Implementation\Os_Resource.c	   401   *  \return       The given lock as resource.
; ..\component\Os\Implementation\Os_Resource.c	   402   *
; ..\component\Os\Implementation\Os_Resource.c	   403   *  \context      OS_INTERNAL
; ..\component\Os\Implementation\Os_Resource.c	   404   *
; ..\component\Os\Implementation\Os_Resource.c	   405   *  \reentrant    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   406   *  \synchronous  TRUE
; ..\component\Os\Implementation\Os_Resource.c	   407   *
; ..\component\Os\Implementation\Os_Resource.c	   408   *  \pre          The given lock is resource.
; ..\component\Os\Implementation\Os_Resource.c	   409   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   410  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   411  OS_ALWAYS_INLINE, Os_ResourceLock2Resource,
; ..\component\Os\Implementation\Os_Resource.c	   412  (
; ..\component\Os\Implementation\Os_Resource.c	   413    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Resource.c	   414  ));
; ..\component\Os\Implementation\Os_Resource.c	   415  
; ..\component\Os\Implementation\Os_Resource.c	   416  
; ..\component\Os\Implementation\Os_Resource.c	   417  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   418   *  Os_ResourceForceReleaseLocal()
; ..\component\Os\Implementation\Os_Resource.c	   419   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   420  /*! \brief          Releases the first lock of the given list as a resource.
; ..\component\Os\Implementation\Os_Resource.c	   421   *  \details        --no details--
; ..\component\Os\Implementation\Os_Resource.c	   422   *
; ..\component\Os\Implementation\Os_Resource.c	   423   *  \param[in]      LockList  The LockList to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   424   *  \param[in,out]  Thread    The thread which is forcibly terminated and needs its resources to be released.
; ..\component\Os\Implementation\Os_Resource.c	   425   *                            Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   426   *
; ..\component\Os\Implementation\Os_Resource.c	   427   *  \context        OS_INTERNAL
; ..\component\Os\Implementation\Os_Resource.c	   428   *
; ..\component\Os\Implementation\Os_Resource.c	   429   *  \reentrant      FALSE
; ..\component\Os\Implementation\Os_Resource.c	   430   *  \synchronous    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   431   *
; ..\component\Os\Implementation\Os_Resource.c	   432   *  \pre            The top element of the given lock is resource.
; ..\component\Os\Implementation\Os_Resource.c	   433   *  \pre            Concurrent access to given objects is prevented by caller.
; ..\component\Os\Implementation\Os_Resource.c	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   435  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   436  Os_ResourceForceReleaseLocal,
; ..\component\Os\Implementation\Os_Resource.c	   437  (
; ..\component\Os\Implementation\Os_Resource.c	   438    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Resource.c	   439    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Resource.c	   440  ));
; ..\component\Os\Implementation\Os_Resource.c	   441  
; ..\component\Os\Implementation\Os_Resource.c	   442  
; ..\component\Os\Implementation\Os_Resource.c	   443  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   444   *  Os_Resource2ResourceInterrupt()
; ..\component\Os\Implementation\Os_Resource.c	   445   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   446  /*! \brief        Returns the given resource as an interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   447   *  \details      --no details--
; ..\component\Os\Implementation\Os_Resource.c	   448   *
; ..\component\Os\Implementation\Os_Resource.c	   449   *  \param[in]    Resource  The Resource to query. Parameter must not be NULL.
; ..\component\Os\Implementation\Os_Resource.c	   450   *
; ..\component\Os\Implementation\Os_Resource.c	   451   *  \context      OS_INTERNAL
; ..\component\Os\Implementation\Os_Resource.c	   452   *
; ..\component\Os\Implementation\Os_Resource.c	   453   *  \reentrant    TRUE
; ..\component\Os\Implementation\Os_Resource.c	   454   *  \synchronous  TRUE
; ..\component\Os\Implementation\Os_Resource.c	   455   *
; ..\component\Os\Implementation\Os_Resource.c	   456   *  \pre          The given resource is interrupt resource.
; ..\component\Os\Implementation\Os_Resource.c	   457   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   458  OS_FUNC_ATTRIBUTE_DECLARATION(OS_LOCAL_INLINE P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   459  OS_ALWAYS_INLINE, Os_Resource2ResourceInterrupt,
; ..\component\Os\Implementation\Os_Resource.c	   460  (
; ..\component\Os\Implementation\Os_Resource.c	   461    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   462  ));
; ..\component\Os\Implementation\Os_Resource.c	   463  
; ..\component\Os\Implementation\Os_Resource.c	   464  
; ..\component\Os\Implementation\Os_Resource.c	   465  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   466   *  LOCAL FUNCTIONS
; ..\component\Os\Implementation\Os_Resource.c	   467   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   468  
; ..\component\Os\Implementation\Os_Resource.c	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   470   *  Os_ResourceIsEnabled()
; ..\component\Os\Implementation\Os_Resource.c	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   472  OS_FUNC_ATTRIBUTE_DEFINITION(
; ..\component\Os\Implementation\Os_Resource.c	   473  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_ResourceIsEnabled,
; ..\component\Os\Implementation\Os_Resource.c	   474  (
; ..\component\Os\Implementation\Os_Resource.c	   475    void
; ..\component\Os\Implementation\Os_Resource.c	   476  ))
; ..\component\Os\Implementation\Os_Resource.c	   477  {
; ..\component\Os\Implementation\Os_Resource.c	   478     return (Os_StdReturnType)((uint16)OS_RESOURCEID_COUNT > 0u);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Resource.c	   479  }
; ..\component\Os\Implementation\Os_Resource.c	   480  
; ..\component\Os\Implementation\Os_Resource.c	   481  
; ..\component\Os\Implementation\Os_Resource.c	   482  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   483   *  Os_ResourceGetDyn()
; ..\component\Os\Implementation\Os_Resource.c	   484   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   485  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ResourceType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   486  OS_ALWAYS_INLINE, Os_ResourceGetDyn,
; ..\component\Os\Implementation\Os_Resource.c	   487  (
; ..\component\Os\Implementation\Os_Resource.c	   488    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   489  ))
; ..\component\Os\Implementation\Os_Resource.c	   490  {
; ..\component\Os\Implementation\Os_Resource.c	   491    return (P2VAR(Os_ResourceType, AUTOMATIC, OS_VAR_NOINIT))Os_LockGetDyn(&(Resource->Lock));                            /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   492  
; ..\component\Os\Implementation\Os_Resource.c	   493  }
; ..\component\Os\Implementation\Os_Resource.c	   494  
; ..\component\Os\Implementation\Os_Resource.c	   495  
; ..\component\Os\Implementation\Os_Resource.c	   496  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   497   *  Os_ResourceInterruptGetDyn()
; ..\component\Os\Implementation\Os_Resource.c	   498   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   499  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ResourceInterruptType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   500  OS_ALWAYS_INLINE, Os_ResourceInterruptGetDyn,
; ..\component\Os\Implementation\Os_Resource.c	   501  (
; ..\component\Os\Implementation\Os_Resource.c	   502    P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   503  ))
; ..\component\Os\Implementation\Os_Resource.c	   504  {
; ..\component\Os\Implementation\Os_Resource.c	   505    return (P2VAR(Os_ResourceInterruptType, AUTOMATIC, OS_VAR_NOINIT))Os_ResourceGetDyn(&(Resource->Resource));           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   506  }
; ..\component\Os\Implementation\Os_Resource.c	   507  
; ..\component\Os\Implementation\Os_Resource.c	   508  
; ..\component\Os\Implementation\Os_Resource.c	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   510   *  Os_ResourceIsIntResource()
; ..\component\Os\Implementation\Os_Resource.c	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   513  Os_ResourceIsIntResource,
; ..\component\Os\Implementation\Os_Resource.c	   514  (
; ..\component\Os\Implementation\Os_Resource.c	   515    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   516  ))
; ..\component\Os\Implementation\Os_Resource.c	   517  {
; ..\component\Os\Implementation\Os_Resource.c	   518    return Os_LockIsIntResource(&(Resource->Lock));                                                                       /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   519  }
; ..\component\Os\Implementation\Os_Resource.c	   520  
; ..\component\Os\Implementation\Os_Resource.c	   521  
; ..\component\Os\Implementation\Os_Resource.c	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   523   *  Os_ResourceCheckPrio()
; ..\component\Os\Implementation\Os_Resource.c	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   526  Os_ResourceCheckPrio,
; ..\component\Os\Implementation\Os_Resource.c	   527  (
; ..\component\Os\Implementation\Os_Resource.c	   528    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   529    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   530  ))
; ..\component\Os\Implementation\Os_Resource.c	   531  {
; ..\component\Os\Implementation\Os_Resource.c	   532    return Os_ErrExtendedCheck(Os_ResourceIsCeilingPrioGe(Resource, CurrentThread));                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   533  }
; ..\component\Os\Implementation\Os_Resource.c	   534  
; ..\component\Os\Implementation\Os_Resource.c	   535  
; ..\component\Os\Implementation\Os_Resource.c	   536  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   537   *  Os_ResourceIsCeilingPrioGe()
; ..\component\Os\Implementation\Os_Resource.c	   538   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   539  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   540  Os_ResourceIsCeilingPrioGe,
; ..\component\Os\Implementation\Os_Resource.c	   541  (
; ..\component\Os\Implementation\Os_Resource.c	   542    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   543    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   544  ))
; ..\component\Os\Implementation\Os_Resource.c	   545  {
; ..\component\Os\Implementation\Os_Resource.c	   546    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Resource.c	   547    Os_StdReturnType isInterruptResource;
; ..\component\Os\Implementation\Os_Resource.c	   548  
; ..\component\Os\Implementation\Os_Resource.c	   549    isInterruptResource = Os_ResourceIsIntResource(Resource);                                                             /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   550  
; ..\component\Os\Implementation\Os_Resource.c	   551    if(isInterruptResource != 0u)
; ..\component\Os\Implementation\Os_Resource.c	   552    {
; ..\component\Os\Implementation\Os_Resource.c	   553      result = Os_ResourceInterruptIsCeilingPrioGe(Os_Resource2ResourceInterrupt(Resource), CurrentThread);               /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_RES_RESOURCEINTERRUPTISCEILINGPRIOGE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   554    }
; ..\component\Os\Implementation\Os_Resource.c	   555    else
; ..\component\Os\Implementation\Os_Resource.c	   556    {
; ..\component\Os\Implementation\Os_Resource.c	   557      result = Os_ResourceBaseIsCeilingPrioGe(Resource, CurrentThread);                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   558    }
; ..\component\Os\Implementation\Os_Resource.c	   559  
; ..\component\Os\Implementation\Os_Resource.c	   560    return result;
; ..\component\Os\Implementation\Os_Resource.c	   561  }
; ..\component\Os\Implementation\Os_Resource.c	   562  
; ..\component\Os\Implementation\Os_Resource.c	   563  
; ..\component\Os\Implementation\Os_Resource.c	   564  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   565   *  Os_ResourceBaseIsCeilingPrioGe()
; ..\component\Os\Implementation\Os_Resource.c	   566   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   567  /*!
; ..\component\Os\Implementation\Os_Resource.c	   568   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   569   *
; ..\component\Os\Implementation\Os_Resource.c	   570   *
; ..\component\Os\Implementation\Os_Resource.c	   571   *
; ..\component\Os\Implementation\Os_Resource.c	   572   *
; ..\component\Os\Implementation\Os_Resource.c	   573   *
; ..\component\Os\Implementation\Os_Resource.c	   574   *
; ..\component\Os\Implementation\Os_Resource.c	   575   */
; ..\component\Os\Implementation\Os_Resource.c	   576  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   577  Os_ResourceBaseIsCeilingPrioGe,
; ..\component\Os\Implementation\Os_Resource.c	   578  (
; ..\component\Os\Implementation\Os_Resource.c	   579    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   580    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   581  ))
; ..\component\Os\Implementation\Os_Resource.c	   582  {
; ..\component\Os\Implementation\Os_Resource.c	   583    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Resource.c	   584  
; ..\component\Os\Implementation\Os_Resource.c	   585    /* #10 If the current thread is no task: */
; ..\component\Os\Implementation\Os_Resource.c	   586    if(OS_UNLIKELY(Os_ThreadIsTask(CurrentThread) == 0u))                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   587    {
; ..\component\Os\Implementation\Os_Resource.c	   588      /* #20 Return check not okay. Resource's ceiling priority is always lower than the ISR's home priority. */
; ..\component\Os\Implementation\Os_Resource.c	   589      result = 0;
; ..\component\Os\Implementation\Os_Resource.c	   590    }
; ..\component\Os\Implementation\Os_Resource.c	   591    /* #30 Otherwise */
; ..\component\Os\Implementation\Os_Resource.c	   592    else
; ..\component\Os\Implementation\Os_Resource.c	   593    {
; ..\component\Os\Implementation\Os_Resource.c	   594      /* #40 Return whether the resource's ceiling priority is logically higher than or equal to the current task's
; ..\component\Os\Implementation\Os_Resource.c	   595       *     home priority (!0) or not (0). */
; ..\component\Os\Implementation\Os_Resource.c	   596      Os_TaskPrioType homePrio = Os_TaskGetHomePriority(Os_TaskThread2Task(CurrentThread));                               /* SBSW_OS_RES_TASKGETHOMEPRIORITY_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   597  
; ..\component\Os\Implementation\Os_Resource.c	   598      result = Os_SchedulerPriorityIsHigherOrEqual(Resource->CeilingPriority, homePrio);
; ..\component\Os\Implementation\Os_Resource.c	   599    }
; ..\component\Os\Implementation\Os_Resource.c	   600  
; ..\component\Os\Implementation\Os_Resource.c	   601    return result;
; ..\component\Os\Implementation\Os_Resource.c	   602  }
; ..\component\Os\Implementation\Os_Resource.c	   603  
; ..\component\Os\Implementation\Os_Resource.c	   604  
; ..\component\Os\Implementation\Os_Resource.c	   605  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   606   *  Os_ResourceInterruptIsCeilingPrioGe()
; ..\component\Os\Implementation\Os_Resource.c	   607   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   608  /*!
; ..\component\Os\Implementation\Os_Resource.c	   609   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   610   *
; ..\component\Os\Implementation\Os_Resource.c	   611   *
; ..\component\Os\Implementation\Os_Resource.c	   612   *
; ..\component\Os\Implementation\Os_Resource.c	   613   *
; ..\component\Os\Implementation\Os_Resource.c	   614   *
; ..\component\Os\Implementation\Os_Resource.c	   615   *
; ..\component\Os\Implementation\Os_Resource.c	   616   */
; ..\component\Os\Implementation\Os_Resource.c	   617  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   618  OS_ALWAYS_INLINE, Os_ResourceInterruptIsCeilingPrioGe,
; ..\component\Os\Implementation\Os_Resource.c	   619  (
; ..\component\Os\Implementation\Os_Resource.c	   620    P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   621    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	   622  ))
; ..\component\Os\Implementation\Os_Resource.c	   623  {
; ..\component\Os\Implementation\Os_Resource.c	   624    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Resource.c	   625  
; ..\component\Os\Implementation\Os_Resource.c	   626    /* #10 If the current thread is no ISR: */
; ..\component\Os\Implementation\Os_Resource.c	   627    if(Os_ThreadIsIsr(CurrentThread) == 0u )                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   628    {
; ..\component\Os\Implementation\Os_Resource.c	   629      /* #20 Return check okay. Interrupt resource's ceiling priority is always higher than task's home priority. */
; ..\component\Os\Implementation\Os_Resource.c	   630      result = !0u;                                                                                                       /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Resource.c	   631    }
; ..\component\Os\Implementation\Os_Resource.c	   632    /* #30 Otherwise (the current thread is an ISR): */
; ..\component\Os\Implementation\Os_Resource.c	   633    else
; ..\component\Os\Implementation\Os_Resource.c	   634    {
; ..\component\Os\Implementation\Os_Resource.c	   635      Os_IntLevelType intLevel;
; ..\component\Os\Implementation\Os_Resource.c	   636  
; ..\component\Os\Implementation\Os_Resource.c	   637      Os_IsrHalIntLevel2CoreIntLevel(&intLevel, Resource->InterruptLevel);                                                /* SBSW_OS_RES_ISRHALINTLEVEL2COREINTLEVEL_001 */
; ..\component\Os\Implementation\Os_Resource.c	   638  
; ..\component\Os\Implementation\Os_Resource.c	   639      /* #40 Return whether the resource's interrupt priority level is logically higher than or equal to the
; ..\component\Os\Implementation\Os_Resource.c	   640       *     ISR's configured interrupt priority level (!0) or not (0). */
; ..\component\Os\Implementation\Os_Resource.c	   641      result = Os_IsrLevelIsLe(Os_IsrThread2Isr(CurrentThread), &intLevel);                                               /* SBSW_OS_RES_ISRLEVELISLE_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   642    }
; ..\component\Os\Implementation\Os_Resource.c	   643  
; ..\component\Os\Implementation\Os_Resource.c	   644    return result;
; ..\component\Os\Implementation\Os_Resource.c	   645  }
; ..\component\Os\Implementation\Os_Resource.c	   646  
; ..\component\Os\Implementation\Os_Resource.c	   647  
; ..\component\Os\Implementation\Os_Resource.c	   648  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   649   *  Os_ResourceSaveAndIncrease()
; ..\component\Os\Implementation\Os_Resource.c	   650   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   651  /*!
; ..\component\Os\Implementation\Os_Resource.c	   652   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   653   *
; ..\component\Os\Implementation\Os_Resource.c	   654   *
; ..\component\Os\Implementation\Os_Resource.c	   655   *
; ..\component\Os\Implementation\Os_Resource.c	   656   *
; ..\component\Os\Implementation\Os_Resource.c	   657   */
; ..\component\Os\Implementation\Os_Resource.c	   658  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   659  OS_ALWAYS_INLINE, Os_ResourceSaveAndIncrease,
; ..\component\Os\Implementation\Os_Resource.c	   660  (
; ..\component\Os\Implementation\Os_Resource.c	   661    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   662    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Resource.c	   663  ))
; ..\component\Os\Implementation\Os_Resource.c	   664  {
; ..\component\Os\Implementation\Os_Resource.c	   665    Os_TaskPrioType currentPrio;
; ..\component\Os\Implementation\Os_Resource.c	   666  
; ..\component\Os\Implementation\Os_Resource.c	   667    currentPrio = Os_TaskGetPriority(Task);                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   668  
; ..\component\Os\Implementation\Os_Resource.c	   669    /* #10 Save current task priority in resource. */
; ..\component\Os\Implementation\Os_Resource.c	   670    Os_ResourceGetDyn(Resource)->PreviousPriority = currentPrio;                                                          /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_RES_RESOURCEGETDYN_001 */
; ..\component\Os\Implementation\Os_Resource.c	   671  
; ..\component\Os\Implementation\Os_Resource.c	   672    /* #20 If the resource's ceiling priority is higher than the current priority of the task: */
; ..\component\Os\Implementation\Os_Resource.c	   673    if(Os_SchedulerPriorityIsHigher(Resource->CeilingPriority, currentPrio) != 0u)
; ..\component\Os\Implementation\Os_Resource.c	   674    {
; ..\component\Os\Implementation\Os_Resource.c	   675      /* #30 Increase task to resource's ceiling priority. */
; ..\component\Os\Implementation\Os_Resource.c	   676      Os_SchedulerIncreasePrio(Os_TaskGetScheduler(Task), Resource->CeilingPriority);                                     /* SBSW_OS_RES_SCHEDULERINCREASEPRIO_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   677    }
; ..\component\Os\Implementation\Os_Resource.c	   678  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Resource.c	   679  
; ..\component\Os\Implementation\Os_Resource.c	   680  
; ..\component\Os\Implementation\Os_Resource.c	   681  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   682   *  Os_ResourceRestore()
; ..\component\Os\Implementation\Os_Resource.c	   683   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   684  /*!
; ..\component\Os\Implementation\Os_Resource.c	   685   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   686   *
; ..\component\Os\Implementation\Os_Resource.c	   687   *
; ..\component\Os\Implementation\Os_Resource.c	   688   *
; ..\component\Os\Implementation\Os_Resource.c	   689   */
; ..\component\Os\Implementation\Os_Resource.c	   690  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ResourceRestore,
; ..\component\Os\Implementation\Os_Resource.c	   691  (
; ..\component\Os\Implementation\Os_Resource.c	   692    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource,
; ..\component\Os\Implementation\Os_Resource.c	   693    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Resource.c	   694  ))
; ..\component\Os\Implementation\Os_Resource.c	   695  {
; ..\component\Os\Implementation\Os_Resource.c	   696    Os_TaskPrioType currentPrio;
; ..\component\Os\Implementation\Os_Resource.c	   697    Os_TaskPrioType previousPrio;
; ..\component\Os\Implementation\Os_Resource.c	   698  
; ..\component\Os\Implementation\Os_Resource.c	   699    currentPrio = Os_TaskGetPriority(Task);                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   700    previousPrio = Os_ResourceGetDyn(Resource)->PreviousPriority;                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   701  
; ..\component\Os\Implementation\Os_Resource.c	   702    /* #10 If the previous priority is lower than the current priority of the task: */
; ..\component\Os\Implementation\Os_Resource.c	   703    if(Os_SchedulerPriorityIsHigher(currentPrio, previousPrio) != 0u)
; ..\component\Os\Implementation\Os_Resource.c	   704    {
; ..\component\Os\Implementation\Os_Resource.c	   705      /* #20 Restore the previous priority. */
; ..\component\Os\Implementation\Os_Resource.c	   706      Os_SchedulerDecreasePrio(Os_TaskGetScheduler(Task), previousPrio);                                                  /* SBSW_OS_RES_SCHEDULERDECREASEPRIO_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   707    }
; ..\component\Os\Implementation\Os_Resource.c	   708  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Resource.c	   709  
; ..\component\Os\Implementation\Os_Resource.c	   710  
; ..\component\Os\Implementation\Os_Resource.c	   711  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   712   *  Os_ResourceInterruptSaveAndIncrease()
; ..\component\Os\Implementation\Os_Resource.c	   713   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   714  /*!
; ..\component\Os\Implementation\Os_Resource.c	   715   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   716   *
; ..\component\Os\Implementation\Os_Resource.c	   717   *
; ..\component\Os\Implementation\Os_Resource.c	   718   */
; ..\component\Os\Implementation\Os_Resource.c	   719  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   720  OS_ALWAYS_INLINE, Os_ResourceInterruptSaveAndIncrease,
; ..\component\Os\Implementation\Os_Resource.c	   721  (
; ..\component\Os\Implementation\Os_Resource.c	   722    P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   723  ))
; ..\component\Os\Implementation\Os_Resource.c	   724  {
; ..\component\Os\Implementation\Os_Resource.c	   725    P2VAR(Os_ResourceInterruptType, AUTOMATIC, OS_VAR_NOINIT) resourceDyn;
; ..\component\Os\Implementation\Os_Resource.c	   726    resourceDyn = Os_ResourceInterruptGetDyn(Resource);                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   727  
; ..\component\Os\Implementation\Os_Resource.c	   728    /* #10 Read back and update the interrupt state according to the resources interrupt level. */
; ..\component\Os\Implementation\Os_Resource.c	   729    Os_InterruptSaveAndIncrease(&(resourceDyn->PreviousInterruptState), Resource->InterruptLevel);                        /* SBSW_OS_RES_RESOURCEINTERRUPTGETDYN_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   730  }
; ..\component\Os\Implementation\Os_Resource.c	   731  
; ..\component\Os\Implementation\Os_Resource.c	   732  
; ..\component\Os\Implementation\Os_Resource.c	   733  
; ..\component\Os\Implementation\Os_Resource.c	   734  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   735   *  Os_ResourceLock2Resource()
; ..\component\Os\Implementation\Os_Resource.c	   736   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   737  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Resource.c	   738  OS_ALWAYS_INLINE, Os_ResourceLock2Resource,
; ..\component\Os\Implementation\Os_Resource.c	   739  (
; ..\component\Os\Implementation\Os_Resource.c	   740    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Resource.c	   741  ))
; ..\component\Os\Implementation\Os_Resource.c	   742  {
; ..\component\Os\Implementation\Os_Resource.c	   743    return (P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST))(Lock);                                                   /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Resource.c	   744  }
; ..\component\Os\Implementation\Os_Resource.c	   745  
; ..\component\Os\Implementation\Os_Resource.c	   746  
; ..\component\Os\Implementation\Os_Resource.c	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   748   *  Os_ResourceForceReleaseLocal()
; ..\component\Os\Implementation\Os_Resource.c	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   750  /*!
; ..\component\Os\Implementation\Os_Resource.c	   751   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   752   *
; ..\component\Os\Implementation\Os_Resource.c	   753   *
; ..\component\Os\Implementation\Os_Resource.c	   754   *
; ..\component\Os\Implementation\Os_Resource.c	   755   *
; ..\component\Os\Implementation\Os_Resource.c	   756   *
; ..\component\Os\Implementation\Os_Resource.c	   757   */
; ..\component\Os\Implementation\Os_Resource.c	   758  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ResourceForceReleaseLocal,             /* PRQA S 3673 */ /* MD_MSR_Rule8.13 */
; ..\component\Os\Implementation\Os_Resource.c	   759  (
; ..\component\Os\Implementation\Os_Resource.c	   760    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Resource.c	   761    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Resource.c	   762  ))
; ..\component\Os\Implementation\Os_Resource.c	   763  {
; ..\component\Os\Implementation\Os_Resource.c	   764    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) resource;
; ..\component\Os\Implementation\Os_Resource.c	   765    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore;
; ..\component\Os\Implementation\Os_Resource.c	   766    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Resource.c	   767    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Resource.c	   768  
; ..\component\Os\Implementation\Os_Resource.c	   769    lock = Os_LockListGetTop(LockList);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   770  
; ..\component\Os\Implementation\Os_Resource.c	   771    Os_Assert((Os_StdReturnType)(Os_LockIsResource(lock) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_RES_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   772  
; ..\component\Os\Implementation\Os_Resource.c	   773    localCore = Os_ThreadGetCore(Thread);                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   774    resource = Os_ResourceLock2Resource(lock);                                                                            /* SBSW_OS_RES_RESOURCELOCK2RESOURCE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   775  
; ..\component\Os\Implementation\Os_Resource.c	   776    /* Restoring of previous interrupt level in case of interrupt resources is not performed:
; ..\component\Os\Implementation\Os_Resource.c	   777     * This function is called with interrupts disabled. */
; ..\component\Os\Implementation\Os_Resource.c	   778  
; ..\component\Os\Implementation\Os_Resource.c	   779    /* #10 If the terminated thread is a task: */
; ..\component\Os\Implementation\Os_Resource.c	   780    if(Os_ThreadIsTask(Thread) != 0u)                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   781    {
; ..\component\Os\Implementation\Os_Resource.c	   782      /* #20 Restore scheduling priority. */
; ..\component\Os\Implementation\Os_Resource.c	   783      Os_ResourceRestore(resource, Os_TaskThread2Task(Thread));                                                           /* SBSW_OS_RES_RESOURCERESTORE_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   784    }
; ..\component\Os\Implementation\Os_Resource.c	   785  
; ..\component\Os\Implementation\Os_Resource.c	   786    /* #30 Delete resource from thread's list of occupied locks. */
; ..\component\Os\Implementation\Os_Resource.c	   787    Os_LockListPop(LockList);                                                                                             /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   788  
; ..\component\Os\Implementation\Os_Resource.c	   789    configTp = Os_CoreAsrGetTimingProtection(localCore);                                                                  /* SBSW_OS_RES_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Resource.c	   790  
; ..\component\Os\Implementation\Os_Resource.c	   791    /* #40 Stop blocking time measurement. */
; ..\component\Os\Implementation\Os_Resource.c	   792    Os_TpStopResource(configTp, Os_ThreadGetTpConfig(Thread), resource->ResourceId);                                      /* SBSW_OS_RES_TPSTOPRESOURCE_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   793  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Resource.c	   794  
; ..\component\Os\Implementation\Os_Resource.c	   795  
; ..\component\Os\Implementation\Os_Resource.c	   796  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   797   *  Os_Resource2ResourceInterrupt()
; ..\component\Os\Implementation\Os_Resource.c	   798   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   799  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Resource.c	   800  OS_LOCAL_INLINE P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Resource.c	   801  Os_Resource2ResourceInterrupt,
; ..\component\Os\Implementation\Os_Resource.c	   802  (
; ..\component\Os\Implementation\Os_Resource.c	   803    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   804  ))
; ..\component\Os\Implementation\Os_Resource.c	   805  {
; ..\component\Os\Implementation\Os_Resource.c	   806    Os_Assert((Os_StdReturnType)(Os_LockIsIntResource(&(Resource->Lock)) != 0u));                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   807    return (P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST))(Resource);                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Resource.c	   808  }
; ..\component\Os\Implementation\Os_Resource.c	   809  
; ..\component\Os\Implementation\Os_Resource.c	   810  
; ..\component\Os\Implementation\Os_Resource.c	   811  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   812   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Resource.c	   813   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   814  
; ..\component\Os\Implementation\Os_Resource.c	   815  
; ..\component\Os\Implementation\Os_Resource.c	   816  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   817   *  Os_ResourceInit()
; ..\component\Os\Implementation\Os_Resource.c	   818   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   819  FUNC(void, OS_CODE) Os_ResourceInit
; Function Os_ResourceInit
.L60:
Os_ResourceInit:	.type	func

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
	ld.a	a15,[a4]
.L540:
	mov	d15,#-1
.L541:
	st.w	[a15],d15
.L109:

; ..\component\Os\Implementation\Os_Resource.c	   820  (
; ..\component\Os\Implementation\Os_Resource.c	   821    P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) Resource
; ..\component\Os\Implementation\Os_Resource.c	   822  )
; ..\component\Os\Implementation\Os_Resource.c	   823  {
; ..\component\Os\Implementation\Os_Resource.c	   824    Os_LockInit(&Resource->Lock);                                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   825  }
	ret
.L105:
	
__Os_ResourceInit_function_end:
	.size	Os_ResourceInit,__Os_ResourceInit_function_end-Os_ResourceInit
.L79:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_ResourceForciblyReleaseLocks

; ..\component\Os\Implementation\Os_Resource.c	   826  
; ..\component\Os\Implementation\Os_Resource.c	   827  
; ..\component\Os\Implementation\Os_Resource.c	   828  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   829   *  Os_ResourceForciblyReleaseLocks()
; ..\component\Os\Implementation\Os_Resource.c	   830   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   831  /*!
; ..\component\Os\Implementation\Os_Resource.c	   832   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   833   *
; ..\component\Os\Implementation\Os_Resource.c	   834   *
; ..\component\Os\Implementation\Os_Resource.c	   835   *
; ..\component\Os\Implementation\Os_Resource.c	   836   *
; ..\component\Os\Implementation\Os_Resource.c	   837   *
; ..\component\Os\Implementation\Os_Resource.c	   838   */
; ..\component\Os\Implementation\Os_Resource.c	   839  FUNC(void, OS_CODE) Os_ResourceForciblyReleaseLocks
; Function Os_ResourceForciblyReleaseLocks
.L62:
Os_ResourceForciblyReleaseLocks:	.type	func

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
	mov	d8,#512
	mov.aa	a15,a4
.L130:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
	mov	d9,#-1

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
	ld.a	a12,[a15]12
.L120:

; ..\component\Os\Implementation\Os_Resource.c	   840  (
; ..\component\Os\Implementation\Os_Resource.c	   841      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Resource.c	   842  )
; ..\component\Os\Implementation\Os_Resource.c	   843  {
; ..\component\Os\Implementation\Os_Resource.c	   844    /* #10 If the module is enabled: */
; ..\component\Os\Implementation\Os_Resource.c	   845    if(Os_ResourceIsEnabled() != 0u)                                                                                      /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Resource.c	   846    {
; ..\component\Os\Implementation\Os_Resource.c	   847      P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) it;
; ..\component\Os\Implementation\Os_Resource.c	   848  
; ..\component\Os\Implementation\Os_Resource.c	   849      /* #15 Get the thread's lock list. */
; ..\component\Os\Implementation\Os_Resource.c	   850      it = Os_ThreadGetLocks(Thread);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Resource.c	   851  
; ..\component\Os\Implementation\Os_Resource.c	   852      /* #20 Iterate over the lock list. */
; ..\component\Os\Implementation\Os_Resource.c	   853      while(Os_LockListIsEmpty(it) == 0u)                                                                                 /* SBSW_OS_RES_LOCKLISTISEMPTY_001 */
	j	.L2
.L3:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.a	a2,[a12]
.L546:

; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
	mov	d0,#0
.L479:

; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */      (inlined)
	jz.a	a2,.L4
.L150:

; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a2]8
.L547:

; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	jeq	d15,#0,.L5
.L548:

; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */      (inlined)
	jne	d15,#1,.L6
.L5:

; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
	mov	d0,#1

; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */      (inlined)
.L6:
	ne	d0,d0,#0

; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */      (inlined)
.L4:

; ..\component\Os\Implementation\Os_Resource.c	   854      {
; ..\component\Os\Implementation\Os_Resource.c	   855        /* #30 If the lock is a resource, release it. */
; ..\component\Os\Implementation\Os_Resource.c	   856        if(Os_LockListIsTopRes(it) != 0u)                                                                                 /* SBSW_OS_RES_LOCKLISTISTOPRES_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
	jeq	d0,#0,.L7
.L127:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
	ld.hu	d15,[a15]48
.L549:
	mov	d0,#0
.L480:

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	jeq	d15,#1,.L8
.L550:

; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));      (inlined)
	jne	d15,d8,.L9

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L8:
	mov	d0,#1

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L9:

; ..\component\Os\Implementation\Os_Resource.c	   780    if(Os_ThreadIsTask(Thread) != 0u)                                                                                     /* SBSW_OS_FC_PRECONDITION */      (inlined)
	jeq	d0,#0,.L10
.L135:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Lock.h	   345  }
; ..\component\Os\Implementation\Os_Lock.h	   346  
; ..\component\Os\Implementation\Os_Lock.h	   347  
; ..\component\Os\Implementation\Os_Lock.h	   348  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   349   *  Os_LockCheckIsOccupied()
; ..\component\Os\Implementation\Os_Lock.h	   350   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   351  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   352  OS_ALWAYS_INLINE, Os_LockCheckIsOccupied,
; ..\component\Os\Implementation\Os_Lock.h	   353  (
; ..\component\Os\Implementation\Os_Lock.h	   354    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   355  ))
; ..\component\Os\Implementation\Os_Lock.h	   356  {
; ..\component\Os\Implementation\Os_Lock.h	   357    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   358        (Os_StdReturnType)(Lock->Dyn->Next != OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2995 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Lock.h	   359  }
; ..\component\Os\Implementation\Os_Lock.h	   360  
; ..\component\Os\Implementation\Os_Lock.h	   361  
; ..\component\Os\Implementation\Os_Lock.h	   362  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   363   *  Os_LockGetDyn()
; ..\component\Os\Implementation\Os_Lock.h	   364   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   365  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   366  P2VAR(Os_LockType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_LockGetDyn,
; ..\component\Os\Implementation\Os_Lock.h	   367  (
; ..\component\Os\Implementation\Os_Lock.h	   368    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   369  ))
; ..\component\Os\Implementation\Os_Lock.h	   370  {
; ..\component\Os\Implementation\Os_Lock.h	   371    return Lock->Dyn;
	ld.a	a2,[a2]
.L163:
	ld.hu	d4,[a2]4
.L481:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a2,[a15]12
.L551:

; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
	ld.hu	d15,[a2]42
.L552:

; ..\component\Os\Implementation\Os_Resource.c	   703    if(Os_SchedulerPriorityIsHigher(currentPrio, previousPrio) != 0u)      (inlined)
	jge.u	d15,d4,.L11
.L553:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a2,[a15]20
.L554:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a4,[a2]28
.L555:
	call	Os_SchedulerDecreasePrio

; ..\component\Os\Implementation\Os_Resource.c	   703    if(Os_SchedulerPriorityIsHigher(currentPrio, previousPrio) != 0u)      (inlined)
.L11:

; ..\component\Os\Implementation\Os_Resource.c	   780    if(Os_ThreadIsTask(Thread) != 0u)                                                                                     /* SBSW_OS_FC_PRECONDITION */      (inlined)
.L10:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
	ld.a	a2,[a12]
.L482:

; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
	ld.a	a4,[a2]
.L556:
	ld.a	a4,[a4]
.L557:
	st.a	[a12],a4
.L558:

; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
	ld.a	a2,[a2]
.L483:
	st.w	[a2],d9
.L128:

; ..\component\Os\Implementation\Os_Resource.c	   857        {
; ..\component\Os\Implementation\Os_Resource.c	   858          Os_ResourceForceReleaseLocal(it, Thread);                                                                       /* SBSW_OS_RES_RESOURCEFORCERELEASELOCAL_001 */
	j	.L12
.L7:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
	ld.a	a12,[a2]

; ..\component\Os\Implementation\Os_Resource.c	   859        }
; ..\component\Os\Implementation\Os_Resource.c	   860        else
.L12:
.L2:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.w	d15,[a12]
.L559:
	jne	d15,#0,.L3
.L116:

; ..\component\Os\Implementation\Os_Resource.c	   861        {
; ..\component\Os\Implementation\Os_Resource.c	   862          it = Os_LockListNextIterator(it);                                                                               /* SBSW_OS_RES_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Resource.c	   863        }
; ..\component\Os\Implementation\Os_Resource.c	   864      }
; ..\component\Os\Implementation\Os_Resource.c	   865    }
; ..\component\Os\Implementation\Os_Resource.c	   866  }
	ret
.L113:
	
__Os_ResourceForciblyReleaseLocks_function_end:
	.size	Os_ResourceForciblyReleaseLocks,__Os_ResourceForciblyReleaseLocks_function_end-Os_ResourceForciblyReleaseLocks
.L84:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_GetResource')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_GetResource

; ..\component\Os\Implementation\Os_Resource.c	   867  
; ..\component\Os\Implementation\Os_Resource.c	   868  
; ..\component\Os\Implementation\Os_Resource.c	   869  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   870   *  Os_Api_GetResource()
; ..\component\Os\Implementation\Os_Resource.c	   871   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   872  /*!
; ..\component\Os\Implementation\Os_Resource.c	   873   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   874   *
; ..\component\Os\Implementation\Os_Resource.c	   875   *
; ..\component\Os\Implementation\Os_Resource.c	   876   *
; ..\component\Os\Implementation\Os_Resource.c	   877   *
; ..\component\Os\Implementation\Os_Resource.c	   878   *
; ..\component\Os\Implementation\Os_Resource.c	   879   *
; ..\component\Os\Implementation\Os_Resource.c	   880   *
; ..\component\Os\Implementation\Os_Resource.c	   881   *
; ..\component\Os\Implementation\Os_Resource.c	   882   *
; ..\component\Os\Implementation\Os_Resource.c	   883   *
; ..\component\Os\Implementation\Os_Resource.c	   884   *
; ..\component\Os\Implementation\Os_Resource.c	   885   */
; ..\component\Os\Implementation\Os_Resource.c	   886  FUNC(Os_StatusType, OS_CODE) Os_Api_GetResource
; Function Os_Api_GetResource
.L64:
Os_Api_GetResource:	.type	func

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L484:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a15,d15
.L173:

; ..\component\Os\Implementation\Os_Resource.c	   887  (
; ..\component\Os\Implementation\Os_Resource.c	   888    ResourceType ResID
; ..\component\Os\Implementation\Os_Resource.c	   889  )
; ..\component\Os\Implementation\Os_Resource.c	   890  {
; ..\component\Os\Implementation\Os_Resource.c	   891    Os_StatusType status;
; ..\component\Os\Implementation\Os_Resource.c	   892    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Resource.c	   893  
; ..\component\Os\Implementation\Os_Resource.c	   894    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Resource.c	   895  
; ..\component\Os\Implementation\Os_Resource.c	   896    /* #10 Perform error checks. */
; ..\component\Os\Implementation\Os_Resource.c	   897    if(Os_ResourceIsEnabled() == 0u)                                                                                      /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Resource.c	   898    {
; ..\component\Os\Implementation\Os_Resource.c	   899      status = Os_ErrSetOkInStdStatus(OS_STATUS_ID_1);                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Resource.c	   900    }
; ..\component\Os\Implementation\Os_Resource.c	   901    else if(OS_UNLIKELY(Os_ResourceCheckId(ResID) == OS_CHECK_FAILED))
	jeq	d4,#0,.L13
.L564:

; ..\component\Os\Implementation\Os_Resource.c	   902    {
; ..\component\Os\Implementation\Os_Resource.c	   903      status = OS_STATUS_ID_1;
; ..\component\Os\Implementation\Os_Resource.c	   904    }
; ..\component\Os\Implementation\Os_Resource.c	   905    else if(OS_UNLIKELY(Os_ThreadCheckCallContext(currentThread, OS_APICONTEXT_GETRESOURCE) == OS_CHECK_FAILED))          /* SBSW_OS_RES_THREADCHECKCALLCONTEXT_001 */
; ..\component\Os\Implementation\Os_Resource.c	   906    {
; ..\component\Os\Implementation\Os_Resource.c	   907      status = OS_STATUS_CALLEVEL;
; ..\component\Os\Implementation\Os_Resource.c	   908    }
; ..\component\Os\Implementation\Os_Resource.c	   909    else if(OS_UNLIKELY(Os_ThreadCheckAreInterruptsEnabled(currentThread) == OS_CHECK_FAILED))                            /* SBSW_OS_RES_THREADCHECKAREINTERRUPTSENABLED_001 */
; ..\component\Os\Implementation\Os_Resource.c	   910    {
; ..\component\Os\Implementation\Os_Resource.c	   911      status = OS_STATUS_DISABLEDINT;
; ..\component\Os\Implementation\Os_Resource.c	   912    }
; ..\component\Os\Implementation\Os_Resource.c	   913    else
; ..\component\Os\Implementation\Os_Resource.c	   914    {
; ..\component\Os\Implementation\Os_Resource.c	   915      P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) me;
; ..\component\Os\Implementation\Os_Resource.c	   916      P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) currentApplication;
; ..\component\Os\Implementation\Os_Resource.c	   917  
; ..\component\Os\Implementation\Os_Resource.c	   918      me = Os_ResourceId2Resource(ResID);
; ..\component\Os\Implementation\Os_Resource.c	   919  
; ..\component\Os\Implementation\Os_Resource.c	   920      currentApplication = Os_ThreadGetCurrentApplication(currentThread);                                                 /* SBSW_OS_RES_THREADGETCURRENTAPPLICATION_001 */
; ..\component\Os\Implementation\Os_Resource.c	   921  
; ..\component\Os\Implementation\Os_Resource.c	   922      if(OS_UNLIKELY(Os_CoreAsrCheckIsCoreLocal(me->Core) == OS_CHECK_FAILED))                                            /* SBSW_OS_RES_COREASRCHECKISCORELOCAL_001 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Resource.c	   923      {
; ..\component\Os\Implementation\Os_Resource.c	   924        status = OS_STATUS_CORE;
; ..\component\Os\Implementation\Os_Resource.c	   925      }
; ..\component\Os\Implementation\Os_Resource.c	   926      else if(OS_UNLIKELY(Os_AppCheckAccess(                                                                              /* SBSW_OS_RES_APPCHECKACCESS_001 */ /* SBSW_OS_RES_RESOURCEGETACCESSINGAPPLICATIONS_001 */
; ..\component\Os\Implementation\Os_Resource.c	   927                currentApplication, Os_ResourceGetAccessingApplications(me)) == OS_CHECK_FAILED))
; ..\component\Os\Implementation\Os_Resource.c	   928      {
; ..\component\Os\Implementation\Os_Resource.c	   929        status = OS_STATUS_ACCESSRIGHTS_1;
; ..\component\Os\Implementation\Os_Resource.c	   930      }
; ..\component\Os\Implementation\Os_Resource.c	   931      else if(OS_UNLIKELY(Os_LockCheckIsAvailable(&(me->Lock)) == OS_CHECK_FAILED))                                       /* SBSW_OS_RES_LOCKCHECKISAVAILABLE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   932      {
; ..\component\Os\Implementation\Os_Resource.c	   933        status = OS_STATUS_LOCKED;
; ..\component\Os\Implementation\Os_Resource.c	   934      }
; ..\component\Os\Implementation\Os_Resource.c	   935      else if(OS_UNLIKELY(Os_ResourceCheckPrio(me, currentThread) == OS_CHECK_FAILED))                                    /* SBSW_OS_RES_RESOURCECHECKPRIO_001 */
; ..\component\Os\Implementation\Os_Resource.c	   936      {
; ..\component\Os\Implementation\Os_Resource.c	   937        status = OS_STATUS_PRIORITY;
; ..\component\Os\Implementation\Os_Resource.c	   938      }
; ..\component\Os\Implementation\Os_Resource.c	   939      else
; ..\component\Os\Implementation\Os_Resource.c	   940      {
; ..\component\Os\Implementation\Os_Resource.c	   941        Os_IntStateType intState;
; ..\component\Os\Implementation\Os_Resource.c	   942        P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Resource.c	   943        P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore;
; ..\component\Os\Implementation\Os_Resource.c	   944  
; ..\component\Os\Implementation\Os_Resource.c	   945        localCore = Os_ThreadGetCore(currentThread);                                                                      /* SBSW_OS_RES_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   946        configTp = Os_CoreAsrGetTimingProtection(localCore);                                                              /* SBSW_OS_RES_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Resource.c	   947  
; ..\component\Os\Implementation\Os_Resource.c	   948        /* #20 If the resource is an interrupt resource: */
; ..\component\Os\Implementation\Os_Resource.c	   949        if(Os_ResourceIsIntResource(me) != 0u)                                                                            /* SBSW_OS_RES_RESOURCEISINTRESOURCE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   950        {
; ..\component\Os\Implementation\Os_Resource.c	   951          /* #30 Increase interrupt priority level. */
; ..\component\Os\Implementation\Os_Resource.c	   952          Os_ResourceInterruptSaveAndIncrease(Os_Resource2ResourceInterrupt(me));                                         /* SBSW_OS_RES_RESOURCEINTERRUPTSAVEANDINCREASE_001 */ /* SBSW_OS_RES_RESOURCE2RESOURCEINTERRUPT_001 */
; ..\component\Os\Implementation\Os_Resource.c	   953        }
; ..\component\Os\Implementation\Os_Resource.c	   954  
; ..\component\Os\Implementation\Os_Resource.c	   955        /* #40 Enter critical section (core local). */
; ..\component\Os\Implementation\Os_Resource.c	   956        Os_IntSuspend(&intState);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Resource.c	   957  
; ..\component\Os\Implementation\Os_Resource.c	   958        /* #50 Start blocking time measurement. */
; ..\component\Os\Implementation\Os_Resource.c	   959        Os_TpStartResource(configTp, ResID);                                                                              /* SBSW_OS_RES_TPSTARTRESOURCE_001 */
; ..\component\Os\Implementation\Os_Resource.c	   960  
; ..\component\Os\Implementation\Os_Resource.c	   961        /* #60 Insert resource to thread's list of occupied locks. */
; ..\component\Os\Implementation\Os_Resource.c	   962        Os_LockListPush(Os_ThreadGetLocks(currentThread), &(me->Lock));                                                   /* SBSW_OS_RES_LOCKLISTPUSH_001 */ /* SBSW_OS_RES_THREADGETLOCKS_001 */
; ..\component\Os\Implementation\Os_Resource.c	   963  
; ..\component\Os\Implementation\Os_Resource.c	   964        /* #65 Inform the trace module */
; ..\component\Os\Implementation\Os_Resource.c	   965        Os_TraceResourceTaken(ResID);
; ..\component\Os\Implementation\Os_Resource.c	   966  
; ..\component\Os\Implementation\Os_Resource.c	   967        /* #70 If the current thread is a task: */
; ..\component\Os\Implementation\Os_Resource.c	   968        if(Os_ThreadIsTask(currentThread) != 0u)                                                                          /* SBSW_OS_RES_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Resource.c	   969        {
; ..\component\Os\Implementation\Os_Resource.c	   970          /* #80 Increase scheduling priority. */
; ..\component\Os\Implementation\Os_Resource.c	   971          Os_ResourceSaveAndIncrease(me, Os_TaskThread2Task(currentThread));                                              /* SBSW_OS_RES_RESOURCESAVEANDINCREASE_001 */ /* SBSW_OS_RES_TASKTHREAD2TASK_001 */
; ..\component\Os\Implementation\Os_Resource.c	   972        }
; ..\component\Os\Implementation\Os_Resource.c	   973  
; ..\component\Os\Implementation\Os_Resource.c	   974        /* #90 Leave critical section. */
; ..\component\Os\Implementation\Os_Resource.c	   975        Os_IntResume(&intState);                                                                                          /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Resource.c	   976  
; ..\component\Os\Implementation\Os_Resource.c	   977        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Resource.c	   978      }
; ..\component\Os\Implementation\Os_Resource.c	   979    }
; ..\component\Os\Implementation\Os_Resource.c	   980  
; ..\component\Os\Implementation\Os_Resource.c	   981    return status;
; ..\component\Os\Implementation\Os_Resource.c	   982  }                                                                                                                       /* PRQA S 6030, 6050, 6080 */ /* MD_Os_STCYC, MD_Os_STCAL, MD_Os_STMIF */
	mov	d2,#259
	ret
.L13:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
	ld.a	a2,[a15]12
.L176:
	ld.hu	d15,[a2]20
.L485:

; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
	and	d15,#3
.L565:
	jne	d15,#0,.L15
.L566:
	mov	d2,#2
	ret
.L15:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a2,[a15]24
.L192:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	fcall	.cocofun_1
.L186:
	jeq	d15,#0,.L17
.L567:
	mov	d2,#12
	ret
.L17:

; ..\component\Os\Implementation\Os_Resource.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Resource.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Resource.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Resource.h	     6   *
; ..\component\Os\Implementation\Os_Resource.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Resource.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Resource.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Resource.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Resource.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Resource.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Resource.h	    14  /**
; ..\component\Os\Implementation\Os_Resource.h	    15   * \addtogroup Os_Resource
; ..\component\Os\Implementation\Os_Resource.h	    16   * \{
; ..\component\Os\Implementation\Os_Resource.h	    17   *
; ..\component\Os\Implementation\Os_Resource.h	    18   * \file
; ..\component\Os\Implementation\Os_Resource.h	    19   * \brief       Resource API.
; ..\component\Os\Implementation\Os_Resource.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Resource.h	    21   *
; ..\component\Os\Implementation\Os_Resource.h	    22   *
; ..\component\Os\Implementation\Os_Resource.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Resource.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Resource.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    29  
; ..\component\Os\Implementation\Os_Resource.h	    30  #ifndef  OS_RESOURCE_H
; ..\component\Os\Implementation\Os_Resource.h	    31  # define OS_RESOURCE_H
; ..\component\Os\Implementation\Os_Resource.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Resource.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Resource.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Resource.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Resource.h	    38  
; ..\component\Os\Implementation\Os_Resource.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Resource.h	    40  # include "Os_ResourceInt.h"
; ..\component\Os\Implementation\Os_Resource.h	    41  
; ..\component\Os\Implementation\Os_Resource.h	    42  
; ..\component\Os\Implementation\Os_Resource.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Resource.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Resource.h	    45  # include "OsInt.h"
; ..\component\Os\Implementation\Os_Resource.h	    46  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Resource.h	    47  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Resource.h	    48  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Resource.h	    49  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Resource.h	    50  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Resource.h	    51  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Resource.h	    52  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Resource.h	    53  
; ..\component\Os\Implementation\Os_Resource.h	    54  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Resource.h	    55  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Resource.h	    56  
; ..\component\Os\Implementation\Os_Resource.h	    57  
; ..\component\Os\Implementation\Os_Resource.h	    58  
; ..\component\Os\Implementation\Os_Resource.h	    59  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    60   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Resource.h	    61   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    62  
; ..\component\Os\Implementation\Os_Resource.h	    63  
; ..\component\Os\Implementation\Os_Resource.h	    64  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    65   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Resource.h	    66   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    67  
; ..\component\Os\Implementation\Os_Resource.h	    68  
; ..\component\Os\Implementation\Os_Resource.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    70   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Resource.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    72  
; ..\component\Os\Implementation\Os_Resource.h	    73  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    74   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Resource.h	    75   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    76  
; ..\component\Os\Implementation\Os_Resource.h	    77  
; ..\component\Os\Implementation\Os_Resource.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    79   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Resource.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    81  
; ..\component\Os\Implementation\Os_Resource.h	    82  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Resource.h	    83  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Resource.h	    84  
; ..\component\Os\Implementation\Os_Resource.h	    85  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    86   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Resource.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    88  
; ..\component\Os\Implementation\Os_Resource.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    90   *  Os_ResourceCheckId()
; ..\component\Os\Implementation\Os_Resource.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Resource.h	    93  OS_ALWAYS_INLINE, Os_ResourceCheckId,
; ..\component\Os\Implementation\Os_Resource.h	    94  (
; ..\component\Os\Implementation\Os_Resource.h	    95    ResourceType ResourceId
; ..\component\Os\Implementation\Os_Resource.h	    96  ))
; ..\component\Os\Implementation\Os_Resource.h	    97  {
; ..\component\Os\Implementation\Os_Resource.h	    98    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)ResourceId, (uint32)OS_RESOURCEID_COUNT));
; ..\component\Os\Implementation\Os_Resource.h	    99  }
; ..\component\Os\Implementation\Os_Resource.h	   100  
; ..\component\Os\Implementation\Os_Resource.h	   101  
; ..\component\Os\Implementation\Os_Resource.h	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	   103   *  Os_ResourceId2Resource()
; ..\component\Os\Implementation\Os_Resource.h	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	   105  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Resource.h	   106  P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ResourceId2Resource,
; ..\component\Os\Implementation\Os_Resource.h	   107  (
; ..\component\Os\Implementation\Os_Resource.h	   108    ResourceType ResourceId
; ..\component\Os\Implementation\Os_Resource.h	   109  ))
; ..\component\Os\Implementation\Os_Resource.h	   110  {
; ..\component\Os\Implementation\Os_Resource.h	   111    Os_Assert(Os_ErrIsValueLo((uint32)ResourceId, (uint32)OS_RESOURCEID_COUNT));
; ..\component\Os\Implementation\Os_Resource.h	   112    return OsCfg_ResourceRefs[ResourceId];
	movh.a	a2,#@his(OsCfg_ResourceRefs)
.L568:
	ld.a	a5,[a2]@los(OsCfg_ResourceRefs)
.L197:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L202:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
	ld.a	a2,[a5]
.L569:
	ld.w	d15,[a2]
.L486:
	jeq	d15,#-1,.L19
.L570:
	mov	d2,#2049
	ret
.L19:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a5]8
.L226:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
	ld.hu	d0,[a15]48
.L227:

; ..\component\Os\Implementation\Os_Resource.c	   551    if(isInterruptResource != 0u)      (inlined)
	jne	d15,#1,.L21
.L234:
	mov	d15,#1026
.L571:
	and	d0,d15
.L572:

; ..\component\Os\Implementation\Os_Resource.c	   627    if(Os_ThreadIsIsr(CurrentThread) == 0u )                                                                              /* SBSW_OS_FC_PRECONDITION */      (inlined)
	jne	d0,#0,.L22
.L573:
	mov	d15,#1

; ..\component\Os\Implementation\Os_Resource.c	   630      result = !0u;                                                                                                       /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */      (inlined)
	j	.L24

; ..\component\Os\Implementation\Os_Resource.c	   627    if(Os_ThreadIsIsr(CurrentThread) == 0u )                                                                              /* SBSW_OS_FC_PRECONDITION */      (inlined)
.L22:
	ld.a	a2,[a5]20
.L574:

; ..\component\Os\Implementation\Os_Isr.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Isr.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Isr.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Isr.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Isr.h	     6   *
; ..\component\Os\Implementation\Os_Isr.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Isr.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Isr.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Isr.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Isr.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Isr.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Isr.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Isr.h	    14  /**
; ..\component\Os\Implementation\Os_Isr.h	    15   * \addtogroup Os_Isr
; ..\component\Os\Implementation\Os_Isr.h	    16   * \{
; ..\component\Os\Implementation\Os_Isr.h	    17   *
; ..\component\Os\Implementation\Os_Isr.h	    18   * \file
; ..\component\Os\Implementation\Os_Isr.h	    19   * \brief       OS services concerning category 2 ISRs.
; ..\component\Os\Implementation\Os_Isr.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Isr.h	    21   *
; ..\component\Os\Implementation\Os_Isr.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Isr.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Isr.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Isr.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    28  
; ..\component\Os\Implementation\Os_Isr.h	    29  #ifndef OS_ISR_H
; ..\component\Os\Implementation\Os_Isr.h	    30  # define OS_ISR_H
; ..\component\Os\Implementation\Os_Isr.h	    31                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Isr.h	    32  
; ..\component\Os\Implementation\Os_Isr.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Isr.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Isr.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Isr.h	    38  
; ..\component\Os\Implementation\Os_Isr.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Isr.h	    40  # include "Os_IsrInt.h"
; ..\component\Os\Implementation\Os_Isr.h	    41  # include "Os_Isr_Lcfg.h"
; ..\component\Os\Implementation\Os_Isr.h	    42  
; ..\component\Os\Implementation\Os_Isr.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Isr.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Isr.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Isr.h	    46  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Isr.h	    47  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Isr.h	    48  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Isr.h	    49  # include "Os_Timer.h"
; ..\component\Os\Implementation\Os_Isr.h	    50  
; ..\component\Os\Implementation\Os_Isr.h	    51  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Isr.h	    52  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Isr.h	    53  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Isr.h	    54  
; ..\component\Os\Implementation\Os_Isr.h	    55  
; ..\component\Os\Implementation\Os_Isr.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    57   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Isr.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    59  
; ..\component\Os\Implementation\Os_Isr.h	    60  
; ..\component\Os\Implementation\Os_Isr.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    62   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Isr.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    64  
; ..\component\Os\Implementation\Os_Isr.h	    65  
; ..\component\Os\Implementation\Os_Isr.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    67   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Isr.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    69  
; ..\component\Os\Implementation\Os_Isr.h	    70  
; ..\component\Os\Implementation\Os_Isr.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    72   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Isr.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    74  
; ..\component\Os\Implementation\Os_Isr.h	    75  
; ..\component\Os\Implementation\Os_Isr.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    77   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Isr.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    79  
; ..\component\Os\Implementation\Os_Isr.h	    80  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Isr.h	    81  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Isr.h	    82  
; ..\component\Os\Implementation\Os_Isr.h	    83  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    84   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Isr.h	    85   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    86  
; ..\component\Os\Implementation\Os_Isr.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	    88   *  Os_IsrThread2Isr()
; ..\component\Os\Implementation\Os_Isr.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	    91  P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_IsrThread2Isr,
; ..\component\Os\Implementation\Os_Isr.h	    92  (
; ..\component\Os\Implementation\Os_Isr.h	    93    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Isr.h	    94  ))
; ..\component\Os\Implementation\Os_Isr.h	    95  {
; ..\component\Os\Implementation\Os_Isr.h	    96    Os_Assert((Os_StdReturnType)(Os_ThreadIsIsr(Thread) != 0u));                                                          /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Isr.h	    97    return (P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST))Thread;                                                        /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Isr.h	    98  }
; ..\component\Os\Implementation\Os_Isr.h	    99  
; ..\component\Os\Implementation\Os_Isr.h	   100  
; ..\component\Os\Implementation\Os_Isr.h	   101  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   102   *  Os_IsrId2Isr()
; ..\component\Os\Implementation\Os_Isr.h	   103   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   104  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   105  P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_IsrId2Isr,
; ..\component\Os\Implementation\Os_Isr.h	   106  (
; ..\component\Os\Implementation\Os_Isr.h	   107    ISRType IsrId
; ..\component\Os\Implementation\Os_Isr.h	   108  ))
; ..\component\Os\Implementation\Os_Isr.h	   109  {
; ..\component\Os\Implementation\Os_Isr.h	   110    Os_Assert(Os_ErrIsValueLo((uint32)IsrId, (uint32)OS_ISRID_COUNT));
; ..\component\Os\Implementation\Os_Isr.h	   111    return OsCfg_IsrRefs[IsrId];                                                                                          /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Isr.h	   112  }
; ..\component\Os\Implementation\Os_Isr.h	   113  
; ..\component\Os\Implementation\Os_Isr.h	   114  
; ..\component\Os\Implementation\Os_Isr.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   116   *  Os_IsrCheckId()
; ..\component\Os\Implementation\Os_Isr.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   119  OS_ALWAYS_INLINE, Os_IsrCheckId,
; ..\component\Os\Implementation\Os_Isr.h	   120  (
; ..\component\Os\Implementation\Os_Isr.h	   121    ISRType IsrId
; ..\component\Os\Implementation\Os_Isr.h	   122  ))
; ..\component\Os\Implementation\Os_Isr.h	   123  {
; ..\component\Os\Implementation\Os_Isr.h	   124    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)IsrId, (uint32)OS_ISRID_COUNT));
; ..\component\Os\Implementation\Os_Isr.h	   125  }
; ..\component\Os\Implementation\Os_Isr.h	   126  
; ..\component\Os\Implementation\Os_Isr.h	   127  
; ..\component\Os\Implementation\Os_Isr.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   129   *  Os_IsrHalIntLevel2CoreIntLevel()
; ..\component\Os\Implementation\Os_Isr.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   132  Os_IsrHalIntLevel2CoreIntLevel,
; ..\component\Os\Implementation\Os_Isr.h	   133  (
; ..\component\Os\Implementation\Os_Isr.h	   134    P2VAR(Os_IntLevelType, AUTOMATIC, AUTOMATIC) Level,
; ..\component\Os\Implementation\Os_Isr.h	   135    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) HalLevel
; ..\component\Os\Implementation\Os_Isr.h	   136  ))
; ..\component\Os\Implementation\Os_Isr.h	   137  {
; ..\component\Os\Implementation\Os_Isr.h	   138    Level->State = *HalLevel;                                                                                             /* SBSW_OS_PWA_PRECONDITION */
	ld.w	d15,[a2]
.L240:

; ..\component\Os\Implementation\Os_Isr.h	   139  }
; ..\component\Os\Implementation\Os_Isr.h	   140  
; ..\component\Os\Implementation\Os_Isr.h	   141  
; ..\component\Os\Implementation\Os_Isr.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Isr.h	   143   *  Os_IsrLevelIsLe()
; ..\component\Os\Implementation\Os_Isr.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Isr.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Isr.h	   146  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Isr.h	   147  Os_IsrLevelIsLe,
; ..\component\Os\Implementation\Os_Isr.h	   148  (
; ..\component\Os\Implementation\Os_Isr.h	   149    P2CONST(Os_IsrConfigType, AUTOMATIC, OS_CONST) Isr,
; ..\component\Os\Implementation\Os_Isr.h	   150    P2CONST(Os_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Isr.h	   151  ))
; ..\component\Os\Implementation\Os_Isr.h	   152  {
; ..\component\Os\Implementation\Os_Isr.h	   153    return Os_Hal_IntIsrLevelIsLe(Isr->SourceConfig->HwConfig, &(Level->State));                                          /* SBSW_OS_ISR_HAL_INTISRLEVELISLE_001 */
	ld.a	a2,[a15]60
.L575:
	ld.a	a2,[a2]
.L576:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.w	d0,[a2]
.L577:
	ge.u	d15,d15,d0

; ..\component\Os\Implementation\Os_Resource.c	   553      result = Os_ResourceInterruptIsCeilingPrioGe(Os_Resource2ResourceInterrupt(Resource), CurrentThread);               /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_RES_RESOURCEINTERRUPTISCEILINGPRIOGE_001 */      (inlined)
	j	.L24

; ..\component\Os\Implementation\Os_Resource.c	   551    if(isInterruptResource != 0u)      (inlined)
.L21:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
	mov	d1,#0
.L578:

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	jeq	d0,#1,.L25
.L579:

; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
	mov	d15,#512
.L580:

; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));      (inlined)
	jne	d15,d0,.L26

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L25:
	mov	d1,#1

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L26:

; ..\component\Os\Implementation\Os_Resource.c	   586    if(OS_UNLIKELY(Os_ThreadIsTask(CurrentThread) == 0u))                                                                 /* SBSW_OS_FC_PRECONDITION */      (inlined)
	jne	d1,#0,.L27
.L253:
	mov	d15,#0

; ..\component\Os\Implementation\Os_Resource.c	   589      result = 0;      (inlined)
	j	.L28

; ..\component\Os\Implementation\Os_Resource.c	   586    if(OS_UNLIKELY(Os_ThreadIsTask(CurrentThread) == 0u))                                                                 /* SBSW_OS_FC_PRECONDITION */      (inlined)
.L27:
	ld.hu	d15,[a5]18
.L581:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
	ld.hu	d0,[a15]60
.L582:

; ..\component\Os\Implementation\Os_Scheduler.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Scheduler.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Scheduler.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Scheduler.h	     6   *
; ..\component\Os\Implementation\Os_Scheduler.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Scheduler.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Scheduler.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Scheduler.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Scheduler.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Scheduler.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Scheduler.h	    14  /**
; ..\component\Os\Implementation\Os_Scheduler.h	    15   * \addtogroup Os_Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	    16   *
; ..\component\Os\Implementation\Os_Scheduler.h	    17   * \{
; ..\component\Os\Implementation\Os_Scheduler.h	    18   * \file
; ..\component\Os\Implementation\Os_Scheduler.h	    19   * \brief       Interface implementation of \ref Os_Scheduler.
; ..\component\Os\Implementation\Os_Scheduler.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Scheduler.h	    21   *
; ..\component\Os\Implementation\Os_Scheduler.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Scheduler.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Scheduler.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    28  
; ..\component\Os\Implementation\Os_Scheduler.h	    29  
; ..\component\Os\Implementation\Os_Scheduler.h	    30  #ifndef OS_SCHEDULER_H
; ..\component\Os\Implementation\Os_Scheduler.h	    31  # define OS_SCHEDULER_H
; ..\component\Os\Implementation\Os_Scheduler.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Scheduler.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Scheduler.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Scheduler.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    38  
; ..\component\Os\Implementation\Os_Scheduler.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Scheduler.h	    40  # include "Os_Scheduler_Types.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    41  # include "Os_SchedulerInt.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    42  # include "Os_Scheduler_Lcfg.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    43  
; ..\component\Os\Implementation\Os_Scheduler.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Scheduler.h	    45  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    46  # include "Os_BitArray.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    47  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    48  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    49  # include "Os_PriorityQueue.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    50  
; ..\component\Os\Implementation\Os_Scheduler.h	    51  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Scheduler.h	    52  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    53  
; ..\component\Os\Implementation\Os_Scheduler.h	    54  
; ..\component\Os\Implementation\Os_Scheduler.h	    55  
; ..\component\Os\Implementation\Os_Scheduler.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    57   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Scheduler.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    59  
; ..\component\Os\Implementation\Os_Scheduler.h	    60  
; ..\component\Os\Implementation\Os_Scheduler.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    62   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Scheduler.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    64  
; ..\component\Os\Implementation\Os_Scheduler.h	    65  
; ..\component\Os\Implementation\Os_Scheduler.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    67   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Scheduler.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    69  
; ..\component\Os\Implementation\Os_Scheduler.h	    70  
; ..\component\Os\Implementation\Os_Scheduler.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    72   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Scheduler.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    74  
; ..\component\Os\Implementation\Os_Scheduler.h	    75  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    76   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Scheduler.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    78  
; ..\component\Os\Implementation\Os_Scheduler.h	    79  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Scheduler.h	    80  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Scheduler.h	    81  
; ..\component\Os\Implementation\Os_Scheduler.h	    82  
; ..\component\Os\Implementation\Os_Scheduler.h	    83  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    84   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Scheduler.h	    85   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    86  
; ..\component\Os\Implementation\Os_Scheduler.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    88   *  Os_SchedulerIsRoundRobinEnabled()
; ..\component\Os\Implementation\Os_Scheduler.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Scheduler.h	    91  Os_SchedulerIsRoundRobinEnabled,
; ..\component\Os\Implementation\Os_Scheduler.h	    92  ( void ))
; ..\component\Os\Implementation\Os_Scheduler.h	    93  {
; ..\component\Os\Implementation\Os_Scheduler.h	    94    return (Os_StdReturnType)(OS_CFG_SCHEDULE_ROUND_ROB_ENABLED == STD_ON);                                               /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Scheduler.h	    95  }
; ..\component\Os\Implementation\Os_Scheduler.h	    96  
; ..\component\Os\Implementation\Os_Scheduler.h	    97  
; ..\component\Os\Implementation\Os_Scheduler.h	    98  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    99   *  Os_SchedulerPriorityIsHigher()
; ..\component\Os\Implementation\Os_Scheduler.h	   100   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   101  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   102  OS_ALWAYS_INLINE, Os_SchedulerPriorityIsHigher,
; ..\component\Os\Implementation\Os_Scheduler.h	   103  (
; ..\component\Os\Implementation\Os_Scheduler.h	   104    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   105    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   106  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   107  {
; ..\component\Os\Implementation\Os_Scheduler.h	   108     return ((PrioX) < (PrioY));                                                                                          /* PRQA S 4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Scheduler.h	   109  }
; ..\component\Os\Implementation\Os_Scheduler.h	   110  
; ..\component\Os\Implementation\Os_Scheduler.h	   111  
; ..\component\Os\Implementation\Os_Scheduler.h	   112  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   113   *  Os_SchedulerPriorityIsHigherOrEqual()
; ..\component\Os\Implementation\Os_Scheduler.h	   114   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   115  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   116  OS_ALWAYS_INLINE,  Os_SchedulerPriorityIsHigherOrEqual,
; ..\component\Os\Implementation\Os_Scheduler.h	   117  (
; ..\component\Os\Implementation\Os_Scheduler.h	   118    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   119    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   120  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   121  {
; ..\component\Os\Implementation\Os_Scheduler.h	   122    return (Os_StdReturnType)((PrioX) <= (PrioY));                                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ge.u	d15,d0,d15

; ..\component\Os\Implementation\Os_Resource.c	   592    else      (inlined)
.L28:

; ..\component\Os\Implementation\Os_Resource.c	   555    else      (inlined)
.L24:
	jne	d15,#0,.L29
.L212:
	mov	d2,#2305
	ret
.L29:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a5]8
.L487:
	jne	d15,#1,.L31
.L259:
	ld.a	a4,[a5]20
.L264:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Lock.h	   345  }
; ..\component\Os\Implementation\Os_Lock.h	   346  
; ..\component\Os\Implementation\Os_Lock.h	   347  
; ..\component\Os\Implementation\Os_Lock.h	   348  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   349   *  Os_LockCheckIsOccupied()
; ..\component\Os\Implementation\Os_Lock.h	   350   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   351  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   352  OS_ALWAYS_INLINE, Os_LockCheckIsOccupied,
; ..\component\Os\Implementation\Os_Lock.h	   353  (
; ..\component\Os\Implementation\Os_Lock.h	   354    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   355  ))
; ..\component\Os\Implementation\Os_Lock.h	   356  {
; ..\component\Os\Implementation\Os_Lock.h	   357    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   358        (Os_StdReturnType)(Lock->Dyn->Next != OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2995 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Lock.h	   359  }
; ..\component\Os\Implementation\Os_Lock.h	   360  
; ..\component\Os\Implementation\Os_Lock.h	   361  
; ..\component\Os\Implementation\Os_Lock.h	   362  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   363   *  Os_LockGetDyn()
; ..\component\Os\Implementation\Os_Lock.h	   364   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   365  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   366  P2VAR(Os_LockType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_LockGetDyn,
; ..\component\Os\Implementation\Os_Lock.h	   367  (
; ..\component\Os\Implementation\Os_Lock.h	   368    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   369  ))
; ..\component\Os\Implementation\Os_Lock.h	   370  {
; ..\component\Os\Implementation\Os_Lock.h	   371    return Lock->Dyn;
	ld.a	a2,[a5]
.L265:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L278:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.w	d0,[a4]
.L283:
	and	d15,#255
.L284:

; ..\component\Os\Implementation\Os_Interrupt.h	   335      if(Os_Hal_IntLevelIsGt(IncreaseLevel, &currentLevel) != 0u)                                                         /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_FC_POINTER2LOCAL */      (inlined)
	jge.u	d15,d0,.L32
.L286:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d1,#65068
.L583:
	mov.u	d2,#32768
.L488:
	and	d1,d2
.L292:
	disable
.L584:
	mfcr	d2,#65068
	insert	d2,d2,#0,#0,#8
	or	d0,d2

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L585:
	isync
.L297:
	disable
.L586:
	mfcr	d0,#65068
.L587:
	insert	d0,d0,#0,#15,#1
.L489:
	or	d0,d1
.L490:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L588:
	isync

; ..\component\Os\Implementation\Os_Interrupt.h	   335      if(Os_Hal_IntLevelIsGt(IncreaseLevel, &currentLevel) != 0u)                                                         /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_FC_POINTER2LOCAL */      (inlined)
.L32:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Interrupt.h	   218                                                   InterruptState->Os_IntLockingState.SuspendOsCounter  |
; ..\component\Os\Implementation\Os_Interrupt.h	   219                                                   InterruptState->Os_IntLockingState.SuspendAllCounter  ) == 0u));
; ..\component\Os\Implementation\Os_Interrupt.h	   220  }
; ..\component\Os\Implementation\Os_Interrupt.h	   221  
; ..\component\Os\Implementation\Os_Interrupt.h	   222  
; ..\component\Os\Implementation\Os_Interrupt.h	   223  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   224   *  Os_InterruptCleanup()
; ..\component\Os\Implementation\Os_Interrupt.h	   225   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   226  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   227   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   228   *
; ..\component\Os\Implementation\Os_Interrupt.h	   229   *
; ..\component\Os\Implementation\Os_Interrupt.h	   230   */
; ..\component\Os\Implementation\Os_Interrupt.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_InterruptCleanup,                      /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */
; ..\component\Os\Implementation\Os_Interrupt.h	   232  (
; ..\component\Os\Implementation\Os_Interrupt.h	   233    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   234  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   235  {
; ..\component\Os\Implementation\Os_Interrupt.h	   236    /* #10 Initialize the given interrupt API state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   237    Os_InterruptInit(InterruptState);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   238  }
; ..\component\Os\Implementation\Os_Interrupt.h	   239  
; ..\component\Os\Implementation\Os_Interrupt.h	   240  
; ..\component\Os\Implementation\Os_Interrupt.h	   241  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   242   *  Os_InterruptCopy()
; ..\component\Os\Implementation\Os_Interrupt.h	   243   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   244  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_InterruptCopy,                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   245  (
; ..\component\Os\Implementation\Os_Interrupt.h	   246    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) Source,
; ..\component\Os\Implementation\Os_Interrupt.h	   247    P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) Destination
; ..\component\Os\Implementation\Os_Interrupt.h	   248  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   249  {
; ..\component\Os\Implementation\Os_Interrupt.h	   250    *Destination = *Source;                                                                                               /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   251  }
; ..\component\Os\Implementation\Os_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Interrupt.h	   253  
; ..\component\Os\Implementation\Os_Interrupt.h	   254  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   255   *  Os_InterruptIsCriticalSectionTracingEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   256   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   257  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   258  OS_ALWAYS_INLINE, Os_InterruptIsCriticalSectionTracingEnabled, (void))
; ..\component\Os\Implementation\Os_Interrupt.h	   259  {
; ..\component\Os\Implementation\Os_Interrupt.h	   260    return (Os_ErrIsServiceProtectionEnabled() | Os_ErrIsExtendedStatusEnabled());
; ..\component\Os\Implementation\Os_Interrupt.h	   261  }
; ..\component\Os\Implementation\Os_Interrupt.h	   262  
; ..\component\Os\Implementation\Os_Interrupt.h	   263  
; ..\component\Os\Implementation\Os_Interrupt.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   265   *  Os_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Interrupt.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMLEVELSUPPORT */
; ..\component\Os\Implementation\Os_Interrupt.h	   268  Os_IntIsGlobal2LevelSwitchSupported, (void))                                                                            /* COV_OS_HALPLATFORMLEVELSUPPORT */
; ..\component\Os\Implementation\Os_Interrupt.h	   269  {
; ..\component\Os\Implementation\Os_Interrupt.h	   270    return Os_Hal_IntIsGlobal2LevelSwitchSupported();
; ..\component\Os\Implementation\Os_Interrupt.h	   271  }
; ..\component\Os\Implementation\Os_Interrupt.h	   272  
; ..\component\Os\Implementation\Os_Interrupt.h	   273  
; ..\component\Os\Implementation\Os_Interrupt.h	   274  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   275   *  Os_InterruptIsCat0Enabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   276   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   277  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMLEVELSUPPORT */
; ..\component\Os\Implementation\Os_Interrupt.h	   278  OS_ALWAYS_INLINE, Os_InterruptIsCat0Enabled, (void))                                                                    /* COV_OS_HALPLATFORMLEVELSUPPORT */
; ..\component\Os\Implementation\Os_Interrupt.h	   279  {
; ..\component\Os\Implementation\Os_Interrupt.h	   280    return (Os_StdReturnType)(OS_CFG_CAT0 == STD_ON);                                                                     /* PRQA S 4304, 2995, 2996 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   281  }
; ..\component\Os\Implementation\Os_Interrupt.h	   282  
; ..\component\Os\Implementation\Os_Interrupt.h	   283  
; ..\component\Os\Implementation\Os_Interrupt.h	   284  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   285   *  Os_InterruptLockOnLevelIsNeeded()
; ..\component\Os\Implementation\Os_Interrupt.h	   286   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   287  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   288  OS_ALWAYS_INLINE, Os_InterruptLockOnLevelIsNeeded, (void))
; ..\component\Os\Implementation\Os_Interrupt.h	   289  {
; ..\component\Os\Implementation\Os_Interrupt.h	   290    Os_StdReturnType result = 0;                                                                                          /* PRQA S 2981 */ /* MD_Os_Rule2.2_2981 */
; ..\component\Os\Implementation\Os_Interrupt.h	   291  
; ..\component\Os\Implementation\Os_Interrupt.h	   292    if(Os_Hal_IntIsLevelSupported() != 0u)                                                                                /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   293    {
; ..\component\Os\Implementation\Os_Interrupt.h	   294      if(Os_TpIsEnabled() != 0u)                                                                                          /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   295      {
; ..\component\Os\Implementation\Os_Interrupt.h	   296        result = !0u;                                                                                                     /* PRQA S 4404, 4558 */  /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Interrupt.h	   297      }
; ..\component\Os\Implementation\Os_Interrupt.h	   298      else
; ..\component\Os\Implementation\Os_Interrupt.h	   299      {
; ..\component\Os\Implementation\Os_Interrupt.h	   300        result = Os_InterruptIsCat0Enabled();
; ..\component\Os\Implementation\Os_Interrupt.h	   301      }
; ..\component\Os\Implementation\Os_Interrupt.h	   302    }
; ..\component\Os\Implementation\Os_Interrupt.h	   303  
; ..\component\Os\Implementation\Os_Interrupt.h	   304    return result;
; ..\component\Os\Implementation\Os_Interrupt.h	   305  }
; ..\component\Os\Implementation\Os_Interrupt.h	   306  
; ..\component\Os\Implementation\Os_Interrupt.h	   307  
; ..\component\Os\Implementation\Os_Interrupt.h	   308  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   309   *  Os_InterruptSaveAndIncrease()
; ..\component\Os\Implementation\Os_Interrupt.h	   310   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   311  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   312   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   313   *
; ..\component\Os\Implementation\Os_Interrupt.h	   314   *
; ..\component\Os\Implementation\Os_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Interrupt.h	   317   *
; ..\component\Os\Implementation\Os_Interrupt.h	   318   *
; ..\component\Os\Implementation\Os_Interrupt.h	   319   */
; ..\component\Os\Implementation\Os_Interrupt.h	   320  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   321  OS_ALWAYS_INLINE, Os_InterruptSaveAndIncrease,
; ..\component\Os\Implementation\Os_Interrupt.h	   322  (
; ..\component\Os\Implementation\Os_Interrupt.h	   323    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) CurrentState,
; ..\component\Os\Implementation\Os_Interrupt.h	   324    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) IncreaseLevel
; ..\component\Os\Implementation\Os_Interrupt.h	   325  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   326  {
; ..\component\Os\Implementation\Os_Interrupt.h	   327    /* #10 If interrupt level switching is supported: */
; ..\component\Os\Implementation\Os_Interrupt.h	   328    if(Os_Hal_IntIsLevelSupported() != 0u)                                                                                /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   329    {
; ..\component\Os\Implementation\Os_Interrupt.h	   330      Os_Hal_IntLevelType currentLevel;
; ..\component\Os\Implementation\Os_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Interrupt.h	   332      Os_Hal_IntGetLevel(&currentLevel);                                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   333  
; ..\component\Os\Implementation\Os_Interrupt.h	   334      /* #20 If the given priority level is higher than the current interrupt priority level: */
; ..\component\Os\Implementation\Os_Interrupt.h	   335      if(Os_Hal_IntLevelIsGt(IncreaseLevel, &currentLevel) != 0u)                                                         /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   336      {
; ..\component\Os\Implementation\Os_Interrupt.h	   337        /* #30 Suspend to given interrupt priority level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   338        Os_Hal_IntSetLevel(IncreaseLevel);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   339      }
; ..\component\Os\Implementation\Os_Interrupt.h	   340  
; ..\component\Os\Implementation\Os_Interrupt.h	   341      /* #40 Save current interrupt priority level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   342      CurrentState->Level = currentLevel;                                                                                 /* SBSW_OS_PWA_PRECONDITION */
	st.w	[a2]12,d15
.L31:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mfcr	d8,#65068
.L589:
	mov.u	d15,#32768
.L492:
	and	d8,d15
.L590:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L303:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
	ld.a	a2,[a15]12
.L311:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
	ld.a	a4,[a5]
.L591:
	ld.a	a6,[a2]
.L592:
	st.a	[a4],a6
.L593:

; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
	st.a	[a2],a5
.L316:

; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
	mov	d0,#0
.L594:
	ld.hu	d15,[a15]48
.L595:

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	fcall	.cocofun_2
.L596:
	jeq	d0,#0,.L35
.L322:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a2,[a15]12
.L597:

; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
	ld.hu	d15,[a2]42
.L331:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Lock.h	   345  }
; ..\component\Os\Implementation\Os_Lock.h	   346  
; ..\component\Os\Implementation\Os_Lock.h	   347  
; ..\component\Os\Implementation\Os_Lock.h	   348  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   349   *  Os_LockCheckIsOccupied()
; ..\component\Os\Implementation\Os_Lock.h	   350   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   351  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   352  OS_ALWAYS_INLINE, Os_LockCheckIsOccupied,
; ..\component\Os\Implementation\Os_Lock.h	   353  (
; ..\component\Os\Implementation\Os_Lock.h	   354    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   355  ))
; ..\component\Os\Implementation\Os_Lock.h	   356  {
; ..\component\Os\Implementation\Os_Lock.h	   357    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   358        (Os_StdReturnType)(Lock->Dyn->Next != OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2995 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Lock.h	   359  }
; ..\component\Os\Implementation\Os_Lock.h	   360  
; ..\component\Os\Implementation\Os_Lock.h	   361  
; ..\component\Os\Implementation\Os_Lock.h	   362  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   363   *  Os_LockGetDyn()
; ..\component\Os\Implementation\Os_Lock.h	   364   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   365  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   366  P2VAR(Os_LockType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_LockGetDyn,
; ..\component\Os\Implementation\Os_Lock.h	   367  (
; ..\component\Os\Implementation\Os_Lock.h	   368    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   369  ))
; ..\component\Os\Implementation\Os_Lock.h	   370  {
; ..\component\Os\Implementation\Os_Lock.h	   371    return Lock->Dyn;
	ld.a	a2,[a5]
.L598:
	st.h	[a2]4,d15
.L599:
	ld.hu	d4,[a5]18
.L491:

; ..\component\Os\Implementation\Os_Resource.c	   673    if(Os_SchedulerPriorityIsHigher(Resource->CeilingPriority, currentPrio) != 0u)      (inlined)
	jge.u	d4,d15,.L36
.L600:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a15,[a15]20
.L601:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a4,[a15]28
.L602:
	call	Os_SchedulerIncreasePrio

; ..\component\Os\Implementation\Os_Resource.c	   673    if(Os_SchedulerPriorityIsHigher(Resource->CeilingPriority, currentPrio) != 0u)      (inlined)
.L36:
.L35:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L603:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L604:
	insert	d15,d15,#0,#15,#1
.L493:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d8
.L494:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L605:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L336:
	mov	d2,#0
	ret
.L168:
	
__Os_Api_GetResource_function_end:
	.size	Os_Api_GetResource,__Os_Api_GetResource_function_end-Os_Api_GetResource
.L89:
	; End of function
	
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_2')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_2
.L66:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	jeq	d15,#1,.L33
.L681:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
	mov	d1,#512
.L682:

; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));      (inlined)
	jne	d15,d1,.L34

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L33:
	mov	d0,#1

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
.L34:
	fret
.L104:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('.cocofun_1')
	.sect	'.text.OS_CODE'
	.align	2
; Function .cocofun_1
.L68:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a2]16
.L673:

; ..\component\Os\Implementation\Os_Interrupt.h	   218                                                   InterruptState->Os_IntLockingState.SuspendOsCounter  |
	ld.hu	d0,[a2]20
.L674:
	and	d15,#1
.L675:

; ..\component\Os\Implementation\Os_Interrupt.h	   219                                                   InterruptState->Os_IntLockingState.SuspendAllCounter  ) == 0u));
	or	d15,d0
	ld.hu	d0,[a2]18
.L676:
	or	d15,d0
	fret
.L99:
	; End of function
	.sdecl	'.text.OS_CODE',code,cluster('Os_Api_ReleaseResource')
	.sect	'.text.OS_CODE'
	.align	2
	
	.global	Os_Api_ReleaseResource

; ..\component\Os\Implementation\Os_Resource.c	   983  
; ..\component\Os\Implementation\Os_Resource.c	   984  
; ..\component\Os\Implementation\Os_Resource.c	   985  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	   986   *  Os_Api_ReleaseResource()
; ..\component\Os\Implementation\Os_Resource.c	   987   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.c	   988  /*!
; ..\component\Os\Implementation\Os_Resource.c	   989   * Internal comment removed.
; ..\component\Os\Implementation\Os_Resource.c	   990   *
; ..\component\Os\Implementation\Os_Resource.c	   991   *
; ..\component\Os\Implementation\Os_Resource.c	   992   *
; ..\component\Os\Implementation\Os_Resource.c	   993   *
; ..\component\Os\Implementation\Os_Resource.c	   994   *
; ..\component\Os\Implementation\Os_Resource.c	   995   *
; ..\component\Os\Implementation\Os_Resource.c	   996   *
; ..\component\Os\Implementation\Os_Resource.c	   997   *
; ..\component\Os\Implementation\Os_Resource.c	   998   *
; ..\component\Os\Implementation\Os_Resource.c	   999   *
; ..\component\Os\Implementation\Os_Resource.c	  1000   *
; ..\component\Os\Implementation\Os_Resource.c	  1001   *
; ..\component\Os\Implementation\Os_Resource.c	  1002   *
; ..\component\Os\Implementation\Os_Resource.c	  1003   *
; ..\component\Os\Implementation\Os_Resource.c	  1004   *
; ..\component\Os\Implementation\Os_Resource.c	  1005   */
; ..\component\Os\Implementation\Os_Resource.c	  1006  FUNC(Os_StatusType, OS_CODE) Os_Api_ReleaseResource
; Function Os_Api_ReleaseResource
.L70:
Os_Api_ReleaseResource:	.type	func
	sub.a	a10,#8
.L344:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L495:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Core.h	   155  
; ..\component\Os\Implementation\Os_Hal_Core.h	   156    /* #40 Set the thread pointer to A8. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core.h	   159    /* #50 Restore all interrupts to the previous state. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   160    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   161  
; ..\component\Os\Implementation\Os_Hal_Core.h	   162    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   163  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   164  
; ..\component\Os\Implementation\Os_Hal_Core.h	   165  
; ..\component\Os\Implementation\Os_Hal_Core.h	   166  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   167   *  Os_Hal_CoreGetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   168   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   169  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   170  P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Core.h	   171  Os_Hal_CoreGetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   172  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   173      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   174  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   175  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   176    uint32 ptr;
; ..\component\Os\Implementation\Os_Hal_Core.h	   177  
; ..\component\Os\Implementation\Os_Hal_Core.h	   178    OS_IGNORE_UNREF_PARAM(Core2Thread);                                                                                   /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Core.h	   179  
; ..\component\Os\Implementation\Os_Hal_Core.h	   180    ptr = Os_Hal_Mfa8();
; ..\component\Os\Implementation\Os_Hal_Core.h	   181    return (P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST))ptr;                                                        /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	mov.a	a12,d15
.L345:

; ..\component\Os\Implementation\Os_Resource.c	  1007  (
; ..\component\Os\Implementation\Os_Resource.c	  1008    ResourceType ResID
; ..\component\Os\Implementation\Os_Resource.c	  1009  )
; ..\component\Os\Implementation\Os_Resource.c	  1010  {
; ..\component\Os\Implementation\Os_Resource.c	  1011    Os_StatusType status;
; ..\component\Os\Implementation\Os_Resource.c	  1012    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Resource.c	  1013  
; ..\component\Os\Implementation\Os_Resource.c	  1014    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Resource.c	  1015  
; ..\component\Os\Implementation\Os_Resource.c	  1016    /* #10 Perform error checks. */
; ..\component\Os\Implementation\Os_Resource.c	  1017    if(Os_ResourceIsEnabled() == 0u)                                                                                      /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Resource.c	  1018    {
; ..\component\Os\Implementation\Os_Resource.c	  1019      status = Os_ErrSetOkInStdStatus(OS_STATUS_ID_1);                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880 */
; ..\component\Os\Implementation\Os_Resource.c	  1020    }
; ..\component\Os\Implementation\Os_Resource.c	  1021    else if(OS_UNLIKELY(Os_ResourceCheckId(ResID) == OS_CHECK_FAILED))
	jeq	d4,#0,.L38
.L610:

; ..\component\Os\Implementation\Os_Resource.c	  1022    {
; ..\component\Os\Implementation\Os_Resource.c	  1023      status = OS_STATUS_ID_1;
; ..\component\Os\Implementation\Os_Resource.c	  1024    }
; ..\component\Os\Implementation\Os_Resource.c	  1025    else if(OS_UNLIKELY(Os_ThreadCheckCallContext(currentThread, OS_APICONTEXT_RELEASERESOURCE) == OS_CHECK_FAILED))      /* SBSW_OS_RES_THREADCHECKCALLCONTEXT_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1026    {
; ..\component\Os\Implementation\Os_Resource.c	  1027      status = OS_STATUS_CALLEVEL;
; ..\component\Os\Implementation\Os_Resource.c	  1028    }
; ..\component\Os\Implementation\Os_Resource.c	  1029    else if(OS_UNLIKELY(Os_ThreadCheckAreInterruptsEnabled(currentThread) == OS_CHECK_FAILED))                            /* SBSW_OS_RES_THREADCHECKAREINTERRUPTSENABLED_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1030    {
; ..\component\Os\Implementation\Os_Resource.c	  1031      status = OS_STATUS_DISABLEDINT;
; ..\component\Os\Implementation\Os_Resource.c	  1032    }
; ..\component\Os\Implementation\Os_Resource.c	  1033    else
; ..\component\Os\Implementation\Os_Resource.c	  1034    {
; ..\component\Os\Implementation\Os_Resource.c	  1035      P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST) me;
; ..\component\Os\Implementation\Os_Resource.c	  1036      P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) lockList;
; ..\component\Os\Implementation\Os_Resource.c	  1037      P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) currentApplication;
; ..\component\Os\Implementation\Os_Resource.c	  1038  
; ..\component\Os\Implementation\Os_Resource.c	  1039      me = Os_ResourceId2Resource(ResID);
; ..\component\Os\Implementation\Os_Resource.c	  1040      lockList = Os_ThreadGetLocks(currentThread);                                                                        /* SBSW_OS_RES_THREADGETLOCKS_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1041      currentApplication = Os_ThreadGetCurrentApplication(currentThread);                                                 /* SBSW_OS_RES_THREADGETCURRENTAPPLICATION_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1042  
; ..\component\Os\Implementation\Os_Resource.c	  1043      if(OS_UNLIKELY(Os_CoreAsrCheckIsCoreLocal(me->Core) == OS_CHECK_FAILED))                                            /* SBSW_OS_RES_COREASRCHECKISCORELOCAL_001 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Resource.c	  1044      {
; ..\component\Os\Implementation\Os_Resource.c	  1045        status = OS_STATUS_CORE;
; ..\component\Os\Implementation\Os_Resource.c	  1046      }
; ..\component\Os\Implementation\Os_Resource.c	  1047      else if(OS_UNLIKELY(Os_AppCheckAccess(currentApplication, Os_ResourceGetAccessingApplications(me))                  /* SBSW_OS_RES_APPCHECKACCESS_001 */ /* SBSW_OS_RES_RESOURCEGETACCESSINGAPPLICATIONS_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1048          == OS_CHECK_FAILED))
; ..\component\Os\Implementation\Os_Resource.c	  1049      {
; ..\component\Os\Implementation\Os_Resource.c	  1050        status = OS_STATUS_ACCESSRIGHTS_1;
; ..\component\Os\Implementation\Os_Resource.c	  1051      }
; ..\component\Os\Implementation\Os_Resource.c	  1052      else if(OS_UNLIKELY(Os_LockCheckIsOccupied(&(me->Lock)) == OS_CHECK_FAILED))                                        /* SBSW_OS_RES_LOCKCHECKISOCCUPIED_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1053      {
; ..\component\Os\Implementation\Os_Resource.c	  1054        status = OS_STATUS_UNLOCKED;
; ..\component\Os\Implementation\Os_Resource.c	  1055      }
; ..\component\Os\Implementation\Os_Resource.c	  1056      else if(OS_UNLIKELY(Os_LockListCheckIsListTop(lockList, &(me->Lock)) == OS_CHECK_FAILED))                           /* SBSW_OS_RES_LOCKLISTCHECKISLISTTOP_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1057      {
; ..\component\Os\Implementation\Os_Resource.c	  1058        status = OS_STATUS_ORDER;
; ..\component\Os\Implementation\Os_Resource.c	  1059      }
; ..\component\Os\Implementation\Os_Resource.c	  1060      else
; ..\component\Os\Implementation\Os_Resource.c	  1061      {
; ..\component\Os\Implementation\Os_Resource.c	  1062        Os_IntStateType intState;
; ..\component\Os\Implementation\Os_Resource.c	  1063        Os_IntStateType previousInterruptState;
; ..\component\Os\Implementation\Os_Resource.c	  1064        Os_StdReturnType isIntResource;
; ..\component\Os\Implementation\Os_Resource.c	  1065        P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Resource.c	  1066        P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) configTpThread;
; ..\component\Os\Implementation\Os_Resource.c	  1067        P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore;
; ..\component\Os\Implementation\Os_Resource.c	  1068  
; ..\component\Os\Implementation\Os_Resource.c	  1069        isIntResource = Os_ResourceIsIntResource(me);                                                                     /* SBSW_OS_RES_RESOURCEISINTRESOURCE_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1070        localCore = Os_ThreadGetCore(currentThread);                                                                      /* SBSW_OS_RES_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1071        configTp = Os_CoreAsrGetTimingProtection(localCore);                                                              /* SBSW_OS_RES_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1072        configTpThread = Os_ThreadGetTpConfig(currentThread);                                                             /* SBSW_OS_RES_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1073  
; ..\component\Os\Implementation\Os_Resource.c	  1074        /* #20 Enter critical section (core local). */
; ..\component\Os\Implementation\Os_Resource.c	  1075        Os_IntSuspend(&intState);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Resource.c	  1076  
; ..\component\Os\Implementation\Os_Resource.c	  1077        /* #30 Fetch the previous interrupt level into a local variable in case of an interrupt resource. */
; ..\component\Os\Implementation\Os_Resource.c	  1078        if(isIntResource != 0u)
; ..\component\Os\Implementation\Os_Resource.c	  1079        {
; ..\component\Os\Implementation\Os_Resource.c	  1080          P2CONST(Os_ResourceInterruptConfigType, AUTOMATIC, OS_CONST) resource;
; ..\component\Os\Implementation\Os_Resource.c	  1081  
; ..\component\Os\Implementation\Os_Resource.c	  1082          resource = Os_Resource2ResourceInterrupt(me);                                                                   /* SBSW_OS_RES_RESOURCE2RESOURCEINTERRUPT_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1083          previousInterruptState = Os_ResourceInterruptGetDyn(resource)->PreviousInterruptState;                          /* SBSW_OS_RES_RESOURCEINTERRUPTGETDYN_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1084        }
; ..\component\Os\Implementation\Os_Resource.c	  1085  
; ..\component\Os\Implementation\Os_Resource.c	  1086        /* #40 Inform the trace module */
; ..\component\Os\Implementation\Os_Resource.c	  1087        Os_TraceResourceReleased(ResID);
; ..\component\Os\Implementation\Os_Resource.c	  1088  
; ..\component\Os\Implementation\Os_Resource.c	  1089        /* #50 Delete resource from thread's list of occupied locks. */
; ..\component\Os\Implementation\Os_Resource.c	  1090        Os_LockListPop(lockList);                                                                                         /* SBSW_OS_RES_LOCKLISTPOP_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1091  
; ..\component\Os\Implementation\Os_Resource.c	  1092        /* #60 Stop blocking time measurement. */
; ..\component\Os\Implementation\Os_Resource.c	  1093        Os_TpStopResource(configTp, configTpThread, ResID);                                                               /* SBSW_OS_RES_TPSTOPRESOURCE_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1094  
; ..\component\Os\Implementation\Os_Resource.c	  1095  
; ..\component\Os\Implementation\Os_Resource.c	  1096        /* #70 If the current thread is a task: */
; ..\component\Os\Implementation\Os_Resource.c	  1097        if(Os_ThreadIsTask(currentThread) != 0u)                                                                          /* SBSW_OS_RES_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1098        {
; ..\component\Os\Implementation\Os_Resource.c	  1099          P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) scheduler = Os_CoreGetScheduler(me->Core);                 /* SBSW_OS_RES_COREGETSCHEDULER_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1100  
; ..\component\Os\Implementation\Os_Resource.c	  1101          /* #80 Restore scheduling priority. */
; ..\component\Os\Implementation\Os_Resource.c	  1102          Os_ResourceRestore(me, Os_TaskThread2Task(currentThread));                                                      /* SBSW_OS_RES_RESOURCERESTORE_002 */ /* SBSW_OS_RES_TASKTHREAD2TASK_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1103  
; ..\component\Os\Implementation\Os_Resource.c	  1104          /*  #85 Perform round robin scheduling (if needed). */
; ..\component\Os\Implementation\Os_Resource.c	  1105          Os_SchedulerRobRound(scheduler);                                                                                /* SBSW_OS_RES_SCHEDULER_ROBROUND_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1106  
; ..\component\Os\Implementation\Os_Resource.c	  1107          /* #90 If the caller is a task and releasing the resource leads to a task switch: */
; ..\component\Os\Implementation\Os_Resource.c	  1108          if((Os_SchedulerTaskSwitchIsNeeded(scheduler) != 0u))                                                           /* SBSW_OS_RES_SCHEDULERTASKSWITCHISNEEDED_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1109          {
; ..\component\Os\Implementation\Os_Resource.c	  1110            /* #100 Perform a task switch. */
; ..\component\Os\Implementation\Os_Resource.c	  1111            Os_TaskSwitch(scheduler, currentThread);                                                                      /* SBSW_OS_RES_TASKSWITCH_001 */
; ..\component\Os\Implementation\Os_Resource.c	  1112          }
; ..\component\Os\Implementation\Os_Resource.c	  1113        }
; ..\component\Os\Implementation\Os_Resource.c	  1114  
; ..\component\Os\Implementation\Os_Resource.c	  1115        /* #110 Leave critical section. */
; ..\component\Os\Implementation\Os_Resource.c	  1116        Os_IntResume(&intState);                                                                                          /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Resource.c	  1117  
; ..\component\Os\Implementation\Os_Resource.c	  1118        /* #120 If the resource is an interrupt resource: */
; ..\component\Os\Implementation\Os_Resource.c	  1119        if(isIntResource != 0u)
; ..\component\Os\Implementation\Os_Resource.c	  1120        {
; ..\component\Os\Implementation\Os_Resource.c	  1121          /* #130 Restore interrupt priority level. */
; ..\component\Os\Implementation\Os_Resource.c	  1122          Os_InterruptRestore(&previousInterruptState);                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Resource.c	  1123        }
; ..\component\Os\Implementation\Os_Resource.c	  1124  
; ..\component\Os\Implementation\Os_Resource.c	  1125        status = OS_STATUS_OK;
; ..\component\Os\Implementation\Os_Resource.c	  1126      }
; ..\component\Os\Implementation\Os_Resource.c	  1127    }
; ..\component\Os\Implementation\Os_Resource.c	  1128  
; ..\component\Os\Implementation\Os_Resource.c	  1129    return status;
; ..\component\Os\Implementation\Os_Resource.c	  1130  }                                                                                                                       /* PRQA S 6030, 6050, 6080 */ /* MD_Os_STCYC, MD_Os_STCAL, MD_Os_STMIF */
	mov	d2,#259
	ret
.L38:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
	ld.a	a4,[a12]12
.L347:
	ld.hu	d15,[a4]20
.L496:

; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
	and	d15,#3
.L611:
	jne	d15,#0,.L40
.L612:
	mov	d2,#2
	ret
.L40:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
	ld.a	a2,[a12]24
.L352:

; ..\component\Os\Implementation\Os_Interrupt.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Interrupt.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Interrupt.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Interrupt.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Interrupt.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Interrupt.h	    15   * \addtogroup Os_Interrupt
; ..\component\Os\Implementation\Os_Interrupt.h	    16   * \{
; ..\component\Os\Implementation\Os_Interrupt.h	    17   * \file
; ..\component\Os\Implementation\Os_Interrupt.h	    18   * \brief       This interface provides the AUTOSAR OS interrupt API and Vector extensions.
; ..\component\Os\Implementation\Os_Interrupt.h	    19   * \details     --no details--
; ..\component\Os\Implementation\Os_Interrupt.h	    20   *
; ..\component\Os\Implementation\Os_Interrupt.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Interrupt.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Interrupt.h	    25   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Interrupt.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    27  
; ..\component\Os\Implementation\Os_Interrupt.h	    28  #ifndef OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    29  # define OS_INTERRUPT_H
; ..\component\Os\Implementation\Os_Interrupt.h	    30                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Interrupt.h	    31  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    32   *  INCLUDES
; ..\component\Os\Implementation\Os_Interrupt.h	    33   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    34  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Interrupt.h	    35  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    36  
; ..\component\Os\Implementation\Os_Interrupt.h	    37  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    38  # include "Os_InterruptInt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Interrupt.h	    40  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    41  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    42  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    43  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Interrupt.h	    49  
; ..\component\Os\Implementation\Os_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Interrupt.h	    52  
; ..\component\Os\Implementation\Os_Interrupt.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Interrupt.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Interrupt.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    64  
; ..\component\Os\Implementation\Os_Interrupt.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    68  
; ..\component\Os\Implementation\Os_Interrupt.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    70   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Interrupt.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    72  
; ..\component\Os\Implementation\Os_Interrupt.h	    73  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Interrupt.h	    74  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Interrupt.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    77   *  GLOBAL FUNCTION
; ..\component\Os\Implementation\Os_Interrupt.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Interrupt.h	    80  
; ..\component\Os\Implementation\Os_Interrupt.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    82   *  Os_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    84  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	    85  Os_IntDisableGlobal, (void))                                                                                            /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	    86  {
; ..\component\Os\Implementation\Os_Interrupt.h	    87    Os_Hal_IntDisableGlobal();
; ..\component\Os\Implementation\Os_Interrupt.h	    88  }
; ..\component\Os\Implementation\Os_Interrupt.h	    89  
; ..\component\Os\Implementation\Os_Interrupt.h	    90  
; ..\component\Os\Implementation\Os_Interrupt.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	    92   *  Os_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Interrupt.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	    94  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	    95   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	    96   *
; ..\component\Os\Implementation\Os_Interrupt.h	    97   *
; ..\component\Os\Implementation\Os_Interrupt.h	    98   *
; ..\component\Os\Implementation\Os_Interrupt.h	    99   */
; ..\component\Os\Implementation\Os_Interrupt.h	   100  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   101  Os_IntEnableGlobal, (void))                                                                                             /* COV_OS_HALPLATFORMGLOBAL2LEVELSUPPORTED */
; ..\component\Os\Implementation\Os_Interrupt.h	   102  {
; ..\component\Os\Implementation\Os_Interrupt.h	   103    Os_Hal_IntGlobalStateType globalState;
; ..\component\Os\Implementation\Os_Interrupt.h	   104  
; ..\component\Os\Implementation\Os_Interrupt.h	   105    /* #10 Get the state to enable all interrupts global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   106    Os_Hal_IntGetGlobalEnable(&globalState);                                                                              /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   107  
; ..\component\Os\Implementation\Os_Interrupt.h	   108    /* #20 Enable interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   109    Os_Hal_IntSetGlobalState(&globalState);                                                                               /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   110  }
; ..\component\Os\Implementation\Os_Interrupt.h	   111  
; ..\component\Os\Implementation\Os_Interrupt.h	   112  
; ..\component\Os\Implementation\Os_Interrupt.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   114   *  Os_IntSuspend()
; ..\component\Os\Implementation\Os_Interrupt.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   116  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   117   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   118   *
; ..\component\Os\Implementation\Os_Interrupt.h	   119   *
; ..\component\Os\Implementation\Os_Interrupt.h	   120   *
; ..\component\Os\Implementation\Os_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Interrupt.h	   124   *
; ..\component\Os\Implementation\Os_Interrupt.h	   125   */
; ..\component\Os\Implementation\Os_Interrupt.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   127  Os_IntSuspend,
; ..\component\Os\Implementation\Os_Interrupt.h	   128  (
; ..\component\Os\Implementation\Os_Interrupt.h	   129    P2VAR(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   130  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   131  {
; ..\component\Os\Implementation\Os_Interrupt.h	   132    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   133    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   134    {
; ..\component\Os\Implementation\Os_Interrupt.h	   135      Os_Hal_IntLevelType level;
; ..\component\Os\Implementation\Os_Interrupt.h	   136  
; ..\component\Os\Implementation\Os_Interrupt.h	   137      /* #20 Get the level to suspend all interrupts including timing protection interrupt. */
; ..\component\Os\Implementation\Os_Interrupt.h	   138      Os_Hal_IntGetTPLockLevel(&level);                                                                                   /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Interrupt.h	   140      /* #30 Get the current level, which should later be restored to resume interrupt handling. */
; ..\component\Os\Implementation\Os_Interrupt.h	   141      Os_Hal_IntGetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   142  
; ..\component\Os\Implementation\Os_Interrupt.h	   143      /* #40 Change to interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   144      Os_Hal_IntSetLevel(&level);                                                                                         /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   145    }
; ..\component\Os\Implementation\Os_Interrupt.h	   146    /* #50 Otherwise fetch current state and disable globally. */
; ..\component\Os\Implementation\Os_Interrupt.h	   147    else
; ..\component\Os\Implementation\Os_Interrupt.h	   148    {
; ..\component\Os\Implementation\Os_Interrupt.h	   149      /* #60 Store the current global state and disable global. */
; ..\component\Os\Implementation\Os_Interrupt.h	   150      State->Global = Os_Hal_IntDisableAndReturnGlobalState();                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   151    }
; ..\component\Os\Implementation\Os_Interrupt.h	   152  }
; ..\component\Os\Implementation\Os_Interrupt.h	   153  
; ..\component\Os\Implementation\Os_Interrupt.h	   154  
; ..\component\Os\Implementation\Os_Interrupt.h	   155  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   156   *  Os_IntResume()
; ..\component\Os\Implementation\Os_Interrupt.h	   157   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   158  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   159   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   160   *
; ..\component\Os\Implementation\Os_Interrupt.h	   161   *
; ..\component\Os\Implementation\Os_Interrupt.h	   162   *
; ..\component\Os\Implementation\Os_Interrupt.h	   163   *
; ..\component\Os\Implementation\Os_Interrupt.h	   164   *
; ..\component\Os\Implementation\Os_Interrupt.h	   165   */
; ..\component\Os\Implementation\Os_Interrupt.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   167  Os_IntResume,
; ..\component\Os\Implementation\Os_Interrupt.h	   168  (
; ..\component\Os\Implementation\Os_Interrupt.h	   169    P2CONST(Os_IntStateType, AUTOMATIC, AUTOMATIC) State
; ..\component\Os\Implementation\Os_Interrupt.h	   170  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   171  {
; ..\component\Os\Implementation\Os_Interrupt.h	   172    /* #10 Check if interrupt locking via level is needed: */
; ..\component\Os\Implementation\Os_Interrupt.h	   173    if(Os_InterruptLockOnLevelIsNeeded() != 0u)                                                                           /* COV_OS_HALPLATFORMLEVELSUPPORT */ /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Interrupt.h	   174    {
; ..\component\Os\Implementation\Os_Interrupt.h	   175      /* #20 Restore the interrupt level. */
; ..\component\Os\Implementation\Os_Interrupt.h	   176      Os_Hal_IntSetLevel(&(State->Level));                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   177    }
; ..\component\Os\Implementation\Os_Interrupt.h	   178    /* #30 Otherwise: */
; ..\component\Os\Implementation\Os_Interrupt.h	   179    else
; ..\component\Os\Implementation\Os_Interrupt.h	   180    {
; ..\component\Os\Implementation\Os_Interrupt.h	   181      /* #40 Restore the global interrupt state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   182      Os_Hal_IntSetGlobalState(&(State->Global));                                                                         /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Interrupt.h	   183    }
; ..\component\Os\Implementation\Os_Interrupt.h	   184  }
; ..\component\Os\Implementation\Os_Interrupt.h	   185  
; ..\component\Os\Implementation\Os_Interrupt.h	   186  
; ..\component\Os\Implementation\Os_Interrupt.h	   187  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   188   *  Os_IntDisable()
; ..\component\Os\Implementation\Os_Interrupt.h	   189   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   190  /*!
; ..\component\Os\Implementation\Os_Interrupt.h	   191   * Internal comment removed.
; ..\component\Os\Implementation\Os_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Interrupt.h	   193   *
; ..\component\Os\Implementation\Os_Interrupt.h	   194   */
; ..\component\Os\Implementation\Os_Interrupt.h	   195  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   196  Os_IntDisable,
; ..\component\Os\Implementation\Os_Interrupt.h	   197  (
; ..\component\Os\Implementation\Os_Interrupt.h	   198    void
; ..\component\Os\Implementation\Os_Interrupt.h	   199  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   200  {
; ..\component\Os\Implementation\Os_Interrupt.h	   201    Os_IntStateType state;
; ..\component\Os\Implementation\Os_Interrupt.h	   202  
; ..\component\Os\Implementation\Os_Interrupt.h	   203    /* #10 Call suspend behavior and forget current state. */
; ..\component\Os\Implementation\Os_Interrupt.h	   204    Os_IntSuspend(&state);                                                                                                /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Interrupt.h	   205  }
; ..\component\Os\Implementation\Os_Interrupt.h	   206  
; ..\component\Os\Implementation\Os_Interrupt.h	   207  
; ..\component\Os\Implementation\Os_Interrupt.h	   208  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Interrupt.h	   209   *  Os_InterruptCheckEnabled()
; ..\component\Os\Implementation\Os_Interrupt.h	   210   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Interrupt.h	   211  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Interrupt.h	   212  OS_ALWAYS_INLINE, Os_InterruptCheckEnabled,
; ..\component\Os\Implementation\Os_Interrupt.h	   213  (
; ..\component\Os\Implementation\Os_Interrupt.h	   214    P2CONST(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Interrupt.h	   215  ))
; ..\component\Os\Implementation\Os_Interrupt.h	   216  {
; ..\component\Os\Implementation\Os_Interrupt.h	   217    return Os_ErrExtendedCheck((Os_StdReturnType)(((Os_StdReturnType)(InterruptState->Os_IntLockingState.InDisableAll) |  /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	fcall	.cocofun_1
.L350:
	jeq	d15,#0,.L42
.L613:
	mov	d2,#12
	ret
.L42:

; ..\component\Os\Implementation\Os_Resource.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Resource.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Resource.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Resource.h	     6   *
; ..\component\Os\Implementation\Os_Resource.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Resource.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Resource.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Resource.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Resource.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Resource.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Resource.h	    14  /**
; ..\component\Os\Implementation\Os_Resource.h	    15   * \addtogroup Os_Resource
; ..\component\Os\Implementation\Os_Resource.h	    16   * \{
; ..\component\Os\Implementation\Os_Resource.h	    17   *
; ..\component\Os\Implementation\Os_Resource.h	    18   * \file
; ..\component\Os\Implementation\Os_Resource.h	    19   * \brief       Resource API.
; ..\component\Os\Implementation\Os_Resource.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Resource.h	    21   *
; ..\component\Os\Implementation\Os_Resource.h	    22   *
; ..\component\Os\Implementation\Os_Resource.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Resource.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Resource.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Resource.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    29  
; ..\component\Os\Implementation\Os_Resource.h	    30  #ifndef  OS_RESOURCE_H
; ..\component\Os\Implementation\Os_Resource.h	    31  # define OS_RESOURCE_H
; ..\component\Os\Implementation\Os_Resource.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Resource.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Resource.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Resource.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Resource.h	    38  
; ..\component\Os\Implementation\Os_Resource.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Resource.h	    40  # include "Os_ResourceInt.h"
; ..\component\Os\Implementation\Os_Resource.h	    41  
; ..\component\Os\Implementation\Os_Resource.h	    42  
; ..\component\Os\Implementation\Os_Resource.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Resource.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Resource.h	    45  # include "OsInt.h"
; ..\component\Os\Implementation\Os_Resource.h	    46  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Resource.h	    47  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Resource.h	    48  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Resource.h	    49  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Resource.h	    50  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Resource.h	    51  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Resource.h	    52  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Resource.h	    53  
; ..\component\Os\Implementation\Os_Resource.h	    54  /* Os hal dependencies */
; ..\component\Os\Implementation\Os_Resource.h	    55  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Resource.h	    56  
; ..\component\Os\Implementation\Os_Resource.h	    57  
; ..\component\Os\Implementation\Os_Resource.h	    58  
; ..\component\Os\Implementation\Os_Resource.h	    59  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    60   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Resource.h	    61   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    62  
; ..\component\Os\Implementation\Os_Resource.h	    63  
; ..\component\Os\Implementation\Os_Resource.h	    64  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    65   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Resource.h	    66   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    67  
; ..\component\Os\Implementation\Os_Resource.h	    68  
; ..\component\Os\Implementation\Os_Resource.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    70   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Resource.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    72  
; ..\component\Os\Implementation\Os_Resource.h	    73  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    74   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Resource.h	    75   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    76  
; ..\component\Os\Implementation\Os_Resource.h	    77  
; ..\component\Os\Implementation\Os_Resource.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    79   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Resource.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    81  
; ..\component\Os\Implementation\Os_Resource.h	    82  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Resource.h	    83  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Resource.h	    84  
; ..\component\Os\Implementation\Os_Resource.h	    85  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    86   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Resource.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    88  
; ..\component\Os\Implementation\Os_Resource.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	    90   *  Os_ResourceCheckId()
; ..\component\Os\Implementation\Os_Resource.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Resource.h	    93  OS_ALWAYS_INLINE, Os_ResourceCheckId,
; ..\component\Os\Implementation\Os_Resource.h	    94  (
; ..\component\Os\Implementation\Os_Resource.h	    95    ResourceType ResourceId
; ..\component\Os\Implementation\Os_Resource.h	    96  ))
; ..\component\Os\Implementation\Os_Resource.h	    97  {
; ..\component\Os\Implementation\Os_Resource.h	    98    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)ResourceId, (uint32)OS_RESOURCEID_COUNT));
; ..\component\Os\Implementation\Os_Resource.h	    99  }
; ..\component\Os\Implementation\Os_Resource.h	   100  
; ..\component\Os\Implementation\Os_Resource.h	   101  
; ..\component\Os\Implementation\Os_Resource.h	   102  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.h	   103   *  Os_ResourceId2Resource()
; ..\component\Os\Implementation\Os_Resource.h	   104   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Resource.h	   105  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Resource.h	   106  P2CONST(Os_ResourceConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ResourceId2Resource,
; ..\component\Os\Implementation\Os_Resource.h	   107  (
; ..\component\Os\Implementation\Os_Resource.h	   108    ResourceType ResourceId
; ..\component\Os\Implementation\Os_Resource.h	   109  ))
; ..\component\Os\Implementation\Os_Resource.h	   110  {
; ..\component\Os\Implementation\Os_Resource.h	   111    Os_Assert(Os_ErrIsValueLo((uint32)ResourceId, (uint32)OS_RESOURCEID_COUNT));
; ..\component\Os\Implementation\Os_Resource.h	   112    return OsCfg_ResourceRefs[ResourceId];
	movh.a	a2,#@his(OsCfg_ResourceRefs)
.L614:
	ld.a	a6,[a2]@los(OsCfg_ResourceRefs)
.L354:

; ..\component\Os\Implementation\Os_Hal_Compiler_TaskingInt.h	   609    __asm( "mov.d  %0, a8" :"=d"(ReturnValue)::);      (inlined)
	mov.d  d15, a8
.L356:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Lock.h	   345  }
; ..\component\Os\Implementation\Os_Lock.h	   346  
; ..\component\Os\Implementation\Os_Lock.h	   347  
; ..\component\Os\Implementation\Os_Lock.h	   348  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   349   *  Os_LockCheckIsOccupied()
; ..\component\Os\Implementation\Os_Lock.h	   350   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   351  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   352  OS_ALWAYS_INLINE, Os_LockCheckIsOccupied,
; ..\component\Os\Implementation\Os_Lock.h	   353  (
; ..\component\Os\Implementation\Os_Lock.h	   354    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   355  ))
; ..\component\Os\Implementation\Os_Lock.h	   356  {
; ..\component\Os\Implementation\Os_Lock.h	   357    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   358        (Os_StdReturnType)(Lock->Dyn->Next != OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2995 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
	ld.a	a2,[a6]
.L615:
	ld.w	d15,[a2]
.L497:
	jne	d15,#-1,.L44
.L616:
	mov	d2,#261
	ret
.L44:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.a	a2,[a4]
.L617:
	jeq.a	a2,a6,.L46
.L618:
	mov	d2,#2309
	ret
.L46:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.bu	d15,[a6]8
.L619:
	eq	d9,d15,#1
.L363:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
	mov.u	d10,#32768
.L620:
	mfcr	d8,#65068
.L500:
	and	d8,d10
.L621:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
	disable
.L367:
	jeq	d9,#0,.L48
.L370:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Lock.h	   345  }
; ..\component\Os\Implementation\Os_Lock.h	   346  
; ..\component\Os\Implementation\Os_Lock.h	   347  
; ..\component\Os\Implementation\Os_Lock.h	   348  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   349   *  Os_LockCheckIsOccupied()
; ..\component\Os\Implementation\Os_Lock.h	   350   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   351  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   352  OS_ALWAYS_INLINE, Os_LockCheckIsOccupied,
; ..\component\Os\Implementation\Os_Lock.h	   353  (
; ..\component\Os\Implementation\Os_Lock.h	   354    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   355  ))
; ..\component\Os\Implementation\Os_Lock.h	   356  {
; ..\component\Os\Implementation\Os_Lock.h	   357    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   358        (Os_StdReturnType)(Lock->Dyn->Next != OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2995 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Lock.h	   359  }
; ..\component\Os\Implementation\Os_Lock.h	   360  
; ..\component\Os\Implementation\Os_Lock.h	   361  
; ..\component\Os\Implementation\Os_Lock.h	   362  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   363   *  Os_LockGetDyn()
; ..\component\Os\Implementation\Os_Lock.h	   364   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   365  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   366  P2VAR(Os_LockType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_LockGetDyn,
; ..\component\Os\Implementation\Os_Lock.h	   367  (
; ..\component\Os\Implementation\Os_Lock.h	   368    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   369  ))
; ..\component\Os\Implementation\Os_Lock.h	   370  {
; ..\component\Os\Implementation\Os_Lock.h	   371    return Lock->Dyn;
	ld.a	a2,[a6]
.L622:
	ld.da	a2/a3,[a2]8
.L623:
	st.da	[a10]0,a2/a3
.L48:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
	ld.a	a2,[a4]
.L499:

; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
	ld.a	a5,[a2]
.L624:
	ld.a	a15,[a5]
.L625:
	st.a	[a4],a15
.L626:

; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
	ld.a	a15,[a2]
.L627:
	mov	d0,#-1
.L628:
	st.w	[a15],d0
.L371:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
	mov	d0,#0
.L629:
	ld.hu	d15,[a12]48
.L630:

; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */      (inlined)
	fcall	.cocofun_2
.L631:
	jeq	d0,#0,.L51
.L374:
	ld.a	a15,[a6]12
.L377:

; ..\component\Os\Implementation\Os_Lock.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Lock.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Lock.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Lock.h	     6   *
; ..\component\Os\Implementation\Os_Lock.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Lock.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Lock.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Lock.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Lock.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Lock.h	    14  /**
; ..\component\Os\Implementation\Os_Lock.h	    15   * \addtogroup Os_Lock
; ..\component\Os\Implementation\Os_Lock.h	    16   *
; ..\component\Os\Implementation\Os_Lock.h	    17   * \{
; ..\component\Os\Implementation\Os_Lock.h	    18   *
; ..\component\Os\Implementation\Os_Lock.h	    19   * \file
; ..\component\Os\Implementation\Os_Lock.h	    20   * \brief       Interface implementation of lock objects.
; ..\component\Os\Implementation\Os_Lock.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Lock.h	    22   *
; ..\component\Os\Implementation\Os_Lock.h	    23   *
; ..\component\Os\Implementation\Os_Lock.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Lock.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Lock.h	    28   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Lock.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    30  
; ..\component\Os\Implementation\Os_Lock.h	    31  #ifndef OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    32  # define OS_LOCK_H
; ..\component\Os\Implementation\Os_Lock.h	    33                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Lock.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Lock.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Lock.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    39  
; ..\component\Os\Implementation\Os_Lock.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Lock.h	    41  # include "Os_Lock_Types.h"
; ..\component\Os\Implementation\Os_Lock.h	    42  # include "Os_LockInt.h"
; ..\component\Os\Implementation\Os_Lock.h	    43  
; ..\component\Os\Implementation\Os_Lock.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    45  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Lock.h	    46  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Lock.h	    47  
; ..\component\Os\Implementation\Os_Lock.h	    48  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Lock.h	    49  #include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Lock.h	    50  
; ..\component\Os\Implementation\Os_Lock.h	    51  
; ..\component\Os\Implementation\Os_Lock.h	    52  
; ..\component\Os\Implementation\Os_Lock.h	    53  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    54   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Lock.h	    55   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    56  
; ..\component\Os\Implementation\Os_Lock.h	    57  
; ..\component\Os\Implementation\Os_Lock.h	    58  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    59   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Lock.h	    60   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    61  
; ..\component\Os\Implementation\Os_Lock.h	    62  
; ..\component\Os\Implementation\Os_Lock.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    64   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Lock.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    66  
; ..\component\Os\Implementation\Os_Lock.h	    67  
; ..\component\Os\Implementation\Os_Lock.h	    68  
; ..\component\Os\Implementation\Os_Lock.h	    69  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    70   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    71   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    72  
; ..\component\Os\Implementation\Os_Lock.h	    73  
; ..\component\Os\Implementation\Os_Lock.h	    74  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    75   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Lock.h	    76   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    77  
; ..\component\Os\Implementation\Os_Lock.h	    78  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Lock.h	    79  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Lock.h	    80  
; ..\component\Os\Implementation\Os_Lock.h	    81  
; ..\component\Os\Implementation\Os_Lock.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    83   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Lock.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    85  
; ..\component\Os\Implementation\Os_Lock.h	    86  
; ..\component\Os\Implementation\Os_Lock.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	    88   *  Os_LockListInit()
; ..\component\Os\Implementation\Os_Lock.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	    91  OS_ALWAYS_INLINE, Os_LockListInit,
; ..\component\Os\Implementation\Os_Lock.h	    92  (
; ..\component\Os\Implementation\Os_Lock.h	    93    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	    94  ))
; ..\component\Os\Implementation\Os_Lock.h	    95  {
; ..\component\Os\Implementation\Os_Lock.h	    96    *LockList = OS_LOCK_LIST_END;                                                                                         /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	    97  }
; ..\component\Os\Implementation\Os_Lock.h	    98  
; ..\component\Os\Implementation\Os_Lock.h	    99  
; ..\component\Os\Implementation\Os_Lock.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   101   *  Os_LockListPush()
; ..\component\Os\Implementation\Os_Lock.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   104  OS_ALWAYS_INLINE, Os_LockListPush,
; ..\component\Os\Implementation\Os_Lock.h	   105  (
; ..\component\Os\Implementation\Os_Lock.h	   106    P2VAR(Os_LockListType, AUTOMATIC, OS_CONST) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   107    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   108  ))
; ..\component\Os\Implementation\Os_Lock.h	   109  {
; ..\component\Os\Implementation\Os_Lock.h	   110    Lock->Dyn->Next = *LockList;                                                                                          /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   111    *LockList = Lock;                                                                                                     /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   112  }
; ..\component\Os\Implementation\Os_Lock.h	   113  
; ..\component\Os\Implementation\Os_Lock.h	   114  
; ..\component\Os\Implementation\Os_Lock.h	   115  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   116   *  Os_LockListPop()
; ..\component\Os\Implementation\Os_Lock.h	   117   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   118  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   119  OS_ALWAYS_INLINE, Os_LockListPop,
; ..\component\Os\Implementation\Os_Lock.h	   120  (
; ..\component\Os\Implementation\Os_Lock.h	   121    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   122  ))
; ..\component\Os\Implementation\Os_Lock.h	   123  {
; ..\component\Os\Implementation\Os_Lock.h	   124    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) lock;
; ..\component\Os\Implementation\Os_Lock.h	   125  
; ..\component\Os\Implementation\Os_Lock.h	   126    lock = *LockList;
; ..\component\Os\Implementation\Os_Lock.h	   127    *LockList = lock->Dyn->Next;                                                                                          /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   128    lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   129  }
; ..\component\Os\Implementation\Os_Lock.h	   130  
; ..\component\Os\Implementation\Os_Lock.h	   131  
; ..\component\Os\Implementation\Os_Lock.h	   132  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   133   *  Os_LockListDelete()
; ..\component\Os\Implementation\Os_Lock.h	   134   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   135  /*!
; ..\component\Os\Implementation\Os_Lock.h	   136   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   137   *
; ..\component\Os\Implementation\Os_Lock.h	   138   *
; ..\component\Os\Implementation\Os_Lock.h	   139   *
; ..\component\Os\Implementation\Os_Lock.h	   140   */
; ..\component\Os\Implementation\Os_Lock.h	   141  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_MSR_Rule8.13 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   142  OS_ALWAYS_INLINE, Os_LockListDelete,
; ..\component\Os\Implementation\Os_Lock.h	   143  (
; ..\component\Os\Implementation\Os_Lock.h	   144    P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   145    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   146  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   147  {
; ..\component\Os\Implementation\Os_Lock.h	   148    Os_LockListType  *it;
; ..\component\Os\Implementation\Os_Lock.h	   149  
; ..\component\Os\Implementation\Os_Lock.h	   150    it = LockList;
; ..\component\Os\Implementation\Os_Lock.h	   151  
; ..\component\Os\Implementation\Os_Lock.h	   152    while(Os_LockListIsEmpty(it) == 0u)                                                                                   /* SBSW_OS_LOCK_LOCKLISTISEMPTY_001 */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Lock.h	   153    {
; ..\component\Os\Implementation\Os_Lock.h	   154      if(Lock == *it)
; ..\component\Os\Implementation\Os_Lock.h	   155      {
; ..\component\Os\Implementation\Os_Lock.h	   156        *it = Lock->Dyn->Next;                                                                                            /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   157        Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                             /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_PWA_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   158        break;
; ..\component\Os\Implementation\Os_Lock.h	   159      }
; ..\component\Os\Implementation\Os_Lock.h	   160      it = Os_LockListNextIterator(it);                                                                                   /* SBSW_OS_LOCK_LOCKLISTNEXTITERATOR_001 */
; ..\component\Os\Implementation\Os_Lock.h	   161    }
; ..\component\Os\Implementation\Os_Lock.h	   162  }
; ..\component\Os\Implementation\Os_Lock.h	   163  
; ..\component\Os\Implementation\Os_Lock.h	   164  
; ..\component\Os\Implementation\Os_Lock.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   166   *  Os_LockListNext()
; ..\component\Os\Implementation\Os_Lock.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   168  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE,                  /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   169  OS_ALWAYS_INLINE, Os_LockListNext,
; ..\component\Os\Implementation\Os_Lock.h	   170  (
; ..\component\Os\Implementation\Os_Lock.h	   171    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   172  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   173  {
; ..\component\Os\Implementation\Os_Lock.h	   174    return (*LockList)->Dyn->Next;
; ..\component\Os\Implementation\Os_Lock.h	   175  }
; ..\component\Os\Implementation\Os_Lock.h	   176  
; ..\component\Os\Implementation\Os_Lock.h	   177  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   178   *  Os_LockListNextIterator()
; ..\component\Os\Implementation\Os_Lock.h	   179   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   180  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   181  OS_ALWAYS_INLINE, Os_LockListNextIterator,
; ..\component\Os\Implementation\Os_Lock.h	   182  (
; ..\component\Os\Implementation\Os_Lock.h	   183    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) Iterator
; ..\component\Os\Implementation\Os_Lock.h	   184  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   185  {
; ..\component\Os\Implementation\Os_Lock.h	   186    return &((*Iterator)->Dyn->Next);
; ..\component\Os\Implementation\Os_Lock.h	   187  }
; ..\component\Os\Implementation\Os_Lock.h	   188  
; ..\component\Os\Implementation\Os_Lock.h	   189  
; ..\component\Os\Implementation\Os_Lock.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   191   *  Os_LockListIsEmpty()
; ..\component\Os\Implementation\Os_Lock.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   194  OS_ALWAYS_INLINE, Os_LockListIsEmpty,
; ..\component\Os\Implementation\Os_Lock.h	   195  (
; ..\component\Os\Implementation\Os_Lock.h	   196    P2CONST(Os_LockListType, AUTOMATIC, OS_CONST) LockList
; ..\component\Os\Implementation\Os_Lock.h	   197  ))
; ..\component\Os\Implementation\Os_Lock.h	   198  {
; ..\component\Os\Implementation\Os_Lock.h	   199    return ((Os_StdReturnType)(*LockList == OS_LOCK_LIST_END));                                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   200  }
; ..\component\Os\Implementation\Os_Lock.h	   201  
; ..\component\Os\Implementation\Os_Lock.h	   202  
; ..\component\Os\Implementation\Os_Lock.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   204   *  Os_LockListIsTopRes()
; ..\component\Os\Implementation\Os_Lock.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   206  /*!
; ..\component\Os\Implementation\Os_Lock.h	   207   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   208   *
; ..\component\Os\Implementation\Os_Lock.h	   209   *
; ..\component\Os\Implementation\Os_Lock.h	   210   *
; ..\component\Os\Implementation\Os_Lock.h	   211   *
; ..\component\Os\Implementation\Os_Lock.h	   212   */
; ..\component\Os\Implementation\Os_Lock.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   214  OS_ALWAYS_INLINE, Os_LockListIsTopRes,
; ..\component\Os\Implementation\Os_Lock.h	   215  (
; ..\component\Os\Implementation\Os_Lock.h	   216    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   217  ))
; ..\component\Os\Implementation\Os_Lock.h	   218  {
; ..\component\Os\Implementation\Os_Lock.h	   219    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   220  
; ..\component\Os\Implementation\Os_Lock.h	   221    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   222  
; ..\component\Os\Implementation\Os_Lock.h	   223    /* #10 If the list is not empty */
; ..\component\Os\Implementation\Os_Lock.h	   224    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   225    {
; ..\component\Os\Implementation\Os_Lock.h	   226      /* #20 and if the top element is a resource: return !0  */
; ..\component\Os\Implementation\Os_Lock.h	   227      result = (Os_StdReturnType)(Os_LockIsResource(*LockList) != 0u);                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_LOCK_LOCKISRESOURCE_001 */
; ..\component\Os\Implementation\Os_Lock.h	   228    }
; ..\component\Os\Implementation\Os_Lock.h	   229  
; ..\component\Os\Implementation\Os_Lock.h	   230    /* #30 otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   231    return result;
; ..\component\Os\Implementation\Os_Lock.h	   232  }
; ..\component\Os\Implementation\Os_Lock.h	   233  
; ..\component\Os\Implementation\Os_Lock.h	   234  
; ..\component\Os\Implementation\Os_Lock.h	   235  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   236   *  Os_LockListCheckIsListTop()
; ..\component\Os\Implementation\Os_Lock.h	   237   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   238  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   239  OS_ALWAYS_INLINE, Os_LockListCheckIsListTop,
; ..\component\Os\Implementation\Os_Lock.h	   240  (
; ..\component\Os\Implementation\Os_Lock.h	   241    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList,
; ..\component\Os\Implementation\Os_Lock.h	   242    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   243  ))
; ..\component\Os\Implementation\Os_Lock.h	   244  {
; ..\component\Os\Implementation\Os_Lock.h	   245    return Os_ErrExtendedCheck((Os_StdReturnType)(*LockList == Lock));                                                    /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   246  }
; ..\component\Os\Implementation\Os_Lock.h	   247  
; ..\component\Os\Implementation\Os_Lock.h	   248  
; ..\component\Os\Implementation\Os_Lock.h	   249  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   250   *  Os_LockListIsTopSpinlock()
; ..\component\Os\Implementation\Os_Lock.h	   251   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   252  /*!
; ..\component\Os\Implementation\Os_Lock.h	   253   * Internal comment removed.
; ..\component\Os\Implementation\Os_Lock.h	   254   *
; ..\component\Os\Implementation\Os_Lock.h	   255   *
; ..\component\Os\Implementation\Os_Lock.h	   256   *
; ..\component\Os\Implementation\Os_Lock.h	   257   *
; ..\component\Os\Implementation\Os_Lock.h	   258   */
; ..\component\Os\Implementation\Os_Lock.h	   259  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   260  OS_ALWAYS_INLINE, Os_LockListIsTopSpinlock,
; ..\component\Os\Implementation\Os_Lock.h	   261  (
; ..\component\Os\Implementation\Os_Lock.h	   262    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   263  ))
; ..\component\Os\Implementation\Os_Lock.h	   264  {
; ..\component\Os\Implementation\Os_Lock.h	   265    Os_StdReturnType result;
; ..\component\Os\Implementation\Os_Lock.h	   266  
; ..\component\Os\Implementation\Os_Lock.h	   267    result = 0;
; ..\component\Os\Implementation\Os_Lock.h	   268  
; ..\component\Os\Implementation\Os_Lock.h	   269    /* #10 If the list is not empty. */
; ..\component\Os\Implementation\Os_Lock.h	   270    if(Os_LockListIsEmpty(LockList) == 0u)                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Lock.h	   271    {
; ..\component\Os\Implementation\Os_Lock.h	   272      /* #20 And if the top element is a spinlock: return !0. */
; ..\component\Os\Implementation\Os_Lock.h	   273      result = (Os_StdReturnType)(((*LockList)->Type == OS_LOCKTYPE_SPINLOCK));                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   274    }
; ..\component\Os\Implementation\Os_Lock.h	   275  
; ..\component\Os\Implementation\Os_Lock.h	   276    /* #30 Otherwise return 0. */
; ..\component\Os\Implementation\Os_Lock.h	   277    return result;
; ..\component\Os\Implementation\Os_Lock.h	   278  }
; ..\component\Os\Implementation\Os_Lock.h	   279  
; ..\component\Os\Implementation\Os_Lock.h	   280  
; ..\component\Os\Implementation\Os_Lock.h	   281  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   282   *  Os_LockListGetTop()
; ..\component\Os\Implementation\Os_Lock.h	   283   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   284  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   285  P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_LockListGetTop,
; ..\component\Os\Implementation\Os_Lock.h	   286  (
; ..\component\Os\Implementation\Os_Lock.h	   287    P2CONST(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT) LockList
; ..\component\Os\Implementation\Os_Lock.h	   288  ))
; ..\component\Os\Implementation\Os_Lock.h	   289  {
; ..\component\Os\Implementation\Os_Lock.h	   290    return (*LockList);
; ..\component\Os\Implementation\Os_Lock.h	   291  }
; ..\component\Os\Implementation\Os_Lock.h	   292  
; ..\component\Os\Implementation\Os_Lock.h	   293  
; ..\component\Os\Implementation\Os_Lock.h	   294  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   295   *  Os_LockInit()
; ..\component\Os\Implementation\Os_Lock.h	   296   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   297  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   298  OS_ALWAYS_INLINE, Os_LockInit,
; ..\component\Os\Implementation\Os_Lock.h	   299  (
; ..\component\Os\Implementation\Os_Lock.h	   300    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   301  ))
; ..\component\Os\Implementation\Os_Lock.h	   302  {
; ..\component\Os\Implementation\Os_Lock.h	   303    Lock->Dyn->Next = OS_LOCK_NOT_LINKED;                                                                                 /* PRQA S 0306 */ /* MD_Os_Rule11.4_0306_ListEnd */ /* SBSW_OS_LOCK_LOCKGETDYN_001 */
; ..\component\Os\Implementation\Os_Lock.h	   304  }
; ..\component\Os\Implementation\Os_Lock.h	   305  
; ..\component\Os\Implementation\Os_Lock.h	   306  
; ..\component\Os\Implementation\Os_Lock.h	   307  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   308   *  Os_LockIsIntResource()
; ..\component\Os\Implementation\Os_Lock.h	   309   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   310  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   311  OS_ALWAYS_INLINE, Os_LockIsIntResource,
; ..\component\Os\Implementation\Os_Lock.h	   312  (
; ..\component\Os\Implementation\Os_Lock.h	   313    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   314  ))
; ..\component\Os\Implementation\Os_Lock.h	   315  {
; ..\component\Os\Implementation\Os_Lock.h	   316    return (Os_StdReturnType)(Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT);                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   317  }
; ..\component\Os\Implementation\Os_Lock.h	   318  
; ..\component\Os\Implementation\Os_Lock.h	   319  
; ..\component\Os\Implementation\Os_Lock.h	   320  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   321   *  Os_LockIsResource()
; ..\component\Os\Implementation\Os_Lock.h	   322   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   323  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   324  OS_ALWAYS_INLINE, Os_LockIsResource,
; ..\component\Os\Implementation\Os_Lock.h	   325  (
; ..\component\Os\Implementation\Os_Lock.h	   326    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   327  ))
; ..\component\Os\Implementation\Os_Lock.h	   328  {
; ..\component\Os\Implementation\Os_Lock.h	   329    return (Os_StdReturnType)(    (Lock->Type == OS_LOCKTYPE_RESOURCE_STANDARD)                                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Lock.h	   330                              ||  (Lock->Type == OS_LOCKTYPE_RESOURCE_INTERRUPT));                                        /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Lock.h	   331  }
; ..\component\Os\Implementation\Os_Lock.h	   332  
; ..\component\Os\Implementation\Os_Lock.h	   333  
; ..\component\Os\Implementation\Os_Lock.h	   334  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   335   *  Os_LockCheckIsAvailable()
; ..\component\Os\Implementation\Os_Lock.h	   336   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   337  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   338  OS_ALWAYS_INLINE, Os_LockCheckIsAvailable,
; ..\component\Os\Implementation\Os_Lock.h	   339  (
; ..\component\Os\Implementation\Os_Lock.h	   340    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   341  ))
; ..\component\Os\Implementation\Os_Lock.h	   342  {
; ..\component\Os\Implementation\Os_Lock.h	   343    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   344        (Os_StdReturnType)(Lock->Dyn->Next == OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2996 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Lock.h	   345  }
; ..\component\Os\Implementation\Os_Lock.h	   346  
; ..\component\Os\Implementation\Os_Lock.h	   347  
; ..\component\Os\Implementation\Os_Lock.h	   348  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   349   *  Os_LockCheckIsOccupied()
; ..\component\Os\Implementation\Os_Lock.h	   350   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   351  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   352  OS_ALWAYS_INLINE, Os_LockCheckIsOccupied,
; ..\component\Os\Implementation\Os_Lock.h	   353  (
; ..\component\Os\Implementation\Os_Lock.h	   354    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   355  ))
; ..\component\Os\Implementation\Os_Lock.h	   356  {
; ..\component\Os\Implementation\Os_Lock.h	   357    return Os_ErrExtendedCheck(
; ..\component\Os\Implementation\Os_Lock.h	   358        (Os_StdReturnType)(Lock->Dyn->Next != OS_LOCK_NOT_LINKED));                                                       /* PRQA S 0306, 4304, 2995 */ /* MD_Os_Rule11.4_0306_ListEnd, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Lock.h	   359  }
; ..\component\Os\Implementation\Os_Lock.h	   360  
; ..\component\Os\Implementation\Os_Lock.h	   361  
; ..\component\Os\Implementation\Os_Lock.h	   362  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Lock.h	   363   *  Os_LockGetDyn()
; ..\component\Os\Implementation\Os_Lock.h	   364   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Lock.h	   365  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Lock.h	   366  P2VAR(Os_LockType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_LockGetDyn,
; ..\component\Os\Implementation\Os_Lock.h	   367  (
; ..\component\Os\Implementation\Os_Lock.h	   368    P2CONST(Os_LockConfigType, AUTOMATIC, OS_CONST) Lock
; ..\component\Os\Implementation\Os_Lock.h	   369  ))
; ..\component\Os\Implementation\Os_Lock.h	   370  {
; ..\component\Os\Implementation\Os_Lock.h	   371    return Lock->Dyn;
	ld.a	a2,[a6]
.L382:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a13,[a15]28
.L383:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
	ld.a	a15,[a12]12
.L632:
	ld.hu	d4,[a2]4
.L498:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
	ld.hu	d0,[a15]42
.L633:

; ..\component\Os\Implementation\Os_Resource.c	   703    if(Os_SchedulerPriorityIsHigher(currentPrio, previousPrio) != 0u)      (inlined)
	jge.u	d0,d4,.L52
.L634:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
	ld.a	a15,[a12]20
.L635:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
	ld.a	a4,[a15]28
.L636:
	call	Os_SchedulerDecreasePrio

; ..\component\Os\Implementation\Os_Resource.c	   703    if(Os_SchedulerPriorityIsHigher(currentPrio, previousPrio) != 0u)      (inlined)
.L52:
	mov.aa	a4,a13
	call	Os_SchedulerRobRound
.L637:

; ..\component\Os\Implementation\Os_Scheduler.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Scheduler.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Scheduler.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Scheduler.h	     6   *
; ..\component\Os\Implementation\Os_Scheduler.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Scheduler.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Scheduler.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Scheduler.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Scheduler.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Scheduler.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Scheduler.h	    14  /**
; ..\component\Os\Implementation\Os_Scheduler.h	    15   * \addtogroup Os_Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	    16   *
; ..\component\Os\Implementation\Os_Scheduler.h	    17   * \{
; ..\component\Os\Implementation\Os_Scheduler.h	    18   * \file
; ..\component\Os\Implementation\Os_Scheduler.h	    19   * \brief       Interface implementation of \ref Os_Scheduler.
; ..\component\Os\Implementation\Os_Scheduler.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Scheduler.h	    21   *
; ..\component\Os\Implementation\Os_Scheduler.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Scheduler.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Scheduler.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Scheduler.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    28  
; ..\component\Os\Implementation\Os_Scheduler.h	    29  
; ..\component\Os\Implementation\Os_Scheduler.h	    30  #ifndef OS_SCHEDULER_H
; ..\component\Os\Implementation\Os_Scheduler.h	    31  # define OS_SCHEDULER_H
; ..\component\Os\Implementation\Os_Scheduler.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Scheduler.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Scheduler.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Scheduler.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    38  
; ..\component\Os\Implementation\Os_Scheduler.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Scheduler.h	    40  # include "Os_Scheduler_Types.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    41  # include "Os_SchedulerInt.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    42  # include "Os_Scheduler_Lcfg.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    43  
; ..\component\Os\Implementation\Os_Scheduler.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Scheduler.h	    45  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    46  # include "Os_BitArray.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    47  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    48  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    49  # include "Os_PriorityQueue.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    50  
; ..\component\Os\Implementation\Os_Scheduler.h	    51  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Scheduler.h	    52  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Scheduler.h	    53  
; ..\component\Os\Implementation\Os_Scheduler.h	    54  
; ..\component\Os\Implementation\Os_Scheduler.h	    55  
; ..\component\Os\Implementation\Os_Scheduler.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    57   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Scheduler.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    59  
; ..\component\Os\Implementation\Os_Scheduler.h	    60  
; ..\component\Os\Implementation\Os_Scheduler.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    62   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Scheduler.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    64  
; ..\component\Os\Implementation\Os_Scheduler.h	    65  
; ..\component\Os\Implementation\Os_Scheduler.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    67   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Scheduler.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    69  
; ..\component\Os\Implementation\Os_Scheduler.h	    70  
; ..\component\Os\Implementation\Os_Scheduler.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    72   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Scheduler.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    74  
; ..\component\Os\Implementation\Os_Scheduler.h	    75  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    76   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Scheduler.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    78  
; ..\component\Os\Implementation\Os_Scheduler.h	    79  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Scheduler.h	    80  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Scheduler.h	    81  
; ..\component\Os\Implementation\Os_Scheduler.h	    82  
; ..\component\Os\Implementation\Os_Scheduler.h	    83  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    84   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Scheduler.h	    85   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    86  
; ..\component\Os\Implementation\Os_Scheduler.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    88   *  Os_SchedulerIsRoundRobinEnabled()
; ..\component\Os\Implementation\Os_Scheduler.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	    90  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Scheduler.h	    91  Os_SchedulerIsRoundRobinEnabled,
; ..\component\Os\Implementation\Os_Scheduler.h	    92  ( void ))
; ..\component\Os\Implementation\Os_Scheduler.h	    93  {
; ..\component\Os\Implementation\Os_Scheduler.h	    94    return (Os_StdReturnType)(OS_CFG_SCHEDULE_ROUND_ROB_ENABLED == STD_ON);                                               /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Scheduler.h	    95  }
; ..\component\Os\Implementation\Os_Scheduler.h	    96  
; ..\component\Os\Implementation\Os_Scheduler.h	    97  
; ..\component\Os\Implementation\Os_Scheduler.h	    98  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	    99   *  Os_SchedulerPriorityIsHigher()
; ..\component\Os\Implementation\Os_Scheduler.h	   100   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   101  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   102  OS_ALWAYS_INLINE, Os_SchedulerPriorityIsHigher,
; ..\component\Os\Implementation\Os_Scheduler.h	   103  (
; ..\component\Os\Implementation\Os_Scheduler.h	   104    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   105    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   106  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   107  {
; ..\component\Os\Implementation\Os_Scheduler.h	   108     return ((PrioX) < (PrioY));                                                                                          /* PRQA S 4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Scheduler.h	   109  }
; ..\component\Os\Implementation\Os_Scheduler.h	   110  
; ..\component\Os\Implementation\Os_Scheduler.h	   111  
; ..\component\Os\Implementation\Os_Scheduler.h	   112  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   113   *  Os_SchedulerPriorityIsHigherOrEqual()
; ..\component\Os\Implementation\Os_Scheduler.h	   114   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   115  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   116  OS_ALWAYS_INLINE,  Os_SchedulerPriorityIsHigherOrEqual,
; ..\component\Os\Implementation\Os_Scheduler.h	   117  (
; ..\component\Os\Implementation\Os_Scheduler.h	   118    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   119    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   120  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   121  {
; ..\component\Os\Implementation\Os_Scheduler.h	   122    return (Os_StdReturnType)((PrioX) <= (PrioY));                                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Scheduler.h	   123  }
; ..\component\Os\Implementation\Os_Scheduler.h	   124  
; ..\component\Os\Implementation\Os_Scheduler.h	   125  
; ..\component\Os\Implementation\Os_Scheduler.h	   126  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   127   *  Os_SchedulerPriorityIsLower()
; ..\component\Os\Implementation\Os_Scheduler.h	   128   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   129  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Scheduler.h	   130  OS_ALWAYS_INLINE, Os_SchedulerPriorityIsLower,
; ..\component\Os\Implementation\Os_Scheduler.h	   131  (
; ..\component\Os\Implementation\Os_Scheduler.h	   132    Os_TaskPrioType PrioX,
; ..\component\Os\Implementation\Os_Scheduler.h	   133    Os_TaskPrioType PrioY
; ..\component\Os\Implementation\Os_Scheduler.h	   134  ))                                                                                                                      /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Scheduler.h	   135  {
; ..\component\Os\Implementation\Os_Scheduler.h	   136    return (!Os_SchedulerPriorityIsHigherOrEqual(PrioX, PrioY));                                                          /* PRQA S 4116, 4404, 4558 */ /* MD_Os_Rule10.1_4116, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Scheduler.h	   137  }
; ..\component\Os\Implementation\Os_Scheduler.h	   138  
; ..\component\Os\Implementation\Os_Scheduler.h	   139  
; ..\component\Os\Implementation\Os_Scheduler.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   141   *  Os_SchedulerGetCurrentTask()
; ..\component\Os\Implementation\Os_Scheduler.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   143  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   144  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_SchedulerGetCurrentTask,
; ..\component\Os\Implementation\Os_Scheduler.h	   145  (
; ..\component\Os\Implementation\Os_Scheduler.h	   146    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	   147  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   148  {
; ..\component\Os\Implementation\Os_Scheduler.h	   149    return Scheduler->Dyn->CurrentTask;
; ..\component\Os\Implementation\Os_Scheduler.h	   150  }
; ..\component\Os\Implementation\Os_Scheduler.h	   151  
; ..\component\Os\Implementation\Os_Scheduler.h	   152  
; ..\component\Os\Implementation\Os_Scheduler.h	   153  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Scheduler.h	   154   *  Os_SchedulerTaskSwitchIsNeeded()
; ..\component\Os\Implementation\Os_Scheduler.h	   155   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Scheduler.h	   156  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Scheduler.h	   157  OS_CODE, OS_ALWAYS_INLINE, Os_SchedulerTaskSwitchIsNeeded,
; ..\component\Os\Implementation\Os_Scheduler.h	   158  (
; ..\component\Os\Implementation\Os_Scheduler.h	   159    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler
; ..\component\Os\Implementation\Os_Scheduler.h	   160  ))
; ..\component\Os\Implementation\Os_Scheduler.h	   161  {
; ..\component\Os\Implementation\Os_Scheduler.h	   162    return (Os_StdReturnType)(Scheduler->Dyn->CurrentTask != Scheduler->Dyn->NextTask);                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.a	a15,[a13]12
.L638:
	ld.a	a2,[a15]12
.L639:
	ld.a	a15,[a15]4
.L640:
	jeq.a	a2,a15,.L53
.L390:
	mov.aa	a4,a13
	call	Os_SchedulerInternalSchedule
.L501:

; ..\component\Os\Implementation\Os_Task.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Task.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Task.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Task.h	     6   *
; ..\component\Os\Implementation\Os_Task.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Task.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Task.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Task.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Task.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Task.h	    14  /**
; ..\component\Os\Implementation\Os_Task.h	    15   * \addtogroup Os_Task
; ..\component\Os\Implementation\Os_Task.h	    16   * \{
; ..\component\Os\Implementation\Os_Task.h	    17   *
; ..\component\Os\Implementation\Os_Task.h	    18   * \file
; ..\component\Os\Implementation\Os_Task.h	    19   * \brief       Task API.
; ..\component\Os\Implementation\Os_Task.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Task.h	    21   *
; ..\component\Os\Implementation\Os_Task.h	    22   *
; ..\component\Os\Implementation\Os_Task.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Task.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Task.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Task.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    29  
; ..\component\Os\Implementation\Os_Task.h	    30  #ifndef OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    31  # define OS_TASK_H
; ..\component\Os\Implementation\Os_Task.h	    32                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Task.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Task.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Task.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Task.h	    38  
; ..\component\Os\Implementation\Os_Task.h	    39  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    40  # include "Os_TaskInt.h"
; ..\component\Os\Implementation\Os_Task.h	    41  
; ..\component\Os\Implementation\Os_Task.h	    42  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Task.h	    43  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Task.h	    44  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Task.h	    45  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Task.h	    46  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Task.h	    47  # include "Os_Event.h"
; ..\component\Os\Implementation\Os_Task.h	    48  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Task.h	    49  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Task.h	    50  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Task.h	    51  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Task.h	    52  
; ..\component\Os\Implementation\Os_Task.h	    53  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Task.h	    54  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Task.h	    55  
; ..\component\Os\Implementation\Os_Task.h	    56  
; ..\component\Os\Implementation\Os_Task.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    58   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Task.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    60  
; ..\component\Os\Implementation\Os_Task.h	    61  
; ..\component\Os\Implementation\Os_Task.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    63   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Task.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    65  # if(OS_CFG_PRETASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    66  #  define OS_TASK_PRETASKHOOK PreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    67  # else
; ..\component\Os\Implementation\Os_Task.h	    68  #  define OS_TASK_PRETASKHOOK Os_TaskPreTaskHook
; ..\component\Os\Implementation\Os_Task.h	    69  # endif
; ..\component\Os\Implementation\Os_Task.h	    70  # if(OS_CFG_POSTTASKHOOK == STD_ON)
; ..\component\Os\Implementation\Os_Task.h	    71  #  define OS_TASK_POSTTASKHOOK PostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    72  # else
; ..\component\Os\Implementation\Os_Task.h	    73  #  define OS_TASK_POSTTASKHOOK Os_TaskPostTaskHook
; ..\component\Os\Implementation\Os_Task.h	    74  # endif
; ..\component\Os\Implementation\Os_Task.h	    75  
; ..\component\Os\Implementation\Os_Task.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    77   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Task.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    79  
; ..\component\Os\Implementation\Os_Task.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    81   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    83  
; ..\component\Os\Implementation\Os_Task.h	    84  
; ..\component\Os\Implementation\Os_Task.h	    85  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    86   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Task.h	    87   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    88  
; ..\component\Os\Implementation\Os_Task.h	    89  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Task.h	    90  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Task.h	    91  
; ..\component\Os\Implementation\Os_Task.h	    92  
; ..\component\Os\Implementation\Os_Task.h	    93  
; ..\component\Os\Implementation\Os_Task.h	    94  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	    95   *  Os_TaskId2Task()
; ..\component\Os\Implementation\Os_Task.h	    96   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	    97  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	    98  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskId2Task,
; ..\component\Os\Implementation\Os_Task.h	    99  (
; ..\component\Os\Implementation\Os_Task.h	   100    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   101  ))
; ..\component\Os\Implementation\Os_Task.h	   102  {
; ..\component\Os\Implementation\Os_Task.h	   103    Os_Assert(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   104    return OsCfg_TaskRefs[TaskId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Task.h	   105  }
; ..\component\Os\Implementation\Os_Task.h	   106  
; ..\component\Os\Implementation\Os_Task.h	   107  
; ..\component\Os\Implementation\Os_Task.h	   108  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   109   *  Os_TaskGetThread()
; ..\component\Os\Implementation\Os_Task.h	   110   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   111  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   112  P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetThread,
; ..\component\Os\Implementation\Os_Task.h	   113  (
; ..\component\Os\Implementation\Os_Task.h	   114    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   115  ))
; ..\component\Os\Implementation\Os_Task.h	   116  {
; ..\component\Os\Implementation\Os_Task.h	   117    return &Task->Thread;
; ..\component\Os\Implementation\Os_Task.h	   118  }
; ..\component\Os\Implementation\Os_Task.h	   119  
; ..\component\Os\Implementation\Os_Task.h	   120  
; ..\component\Os\Implementation\Os_Task.h	   121  
; ..\component\Os\Implementation\Os_Task.h	   122  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   123   *  Os_TaskThread2Task()
; ..\component\Os\Implementation\Os_Task.h	   124   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   126  P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskThread2Task,
; ..\component\Os\Implementation\Os_Task.h	   127  (
; ..\component\Os\Implementation\Os_Task.h	   128    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Task.h	   129  ))
; ..\component\Os\Implementation\Os_Task.h	   130  {
; ..\component\Os\Implementation\Os_Task.h	   131    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(Thread) != 0u));                                                         /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   132    return (P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST))Thread;                                                       /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Task.h	   133  }
; ..\component\Os\Implementation\Os_Task.h	   134  
; ..\component\Os\Implementation\Os_Task.h	   135  
; ..\component\Os\Implementation\Os_Task.h	   136  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   137   *  Os_TaskGetDyn()
; ..\component\Os\Implementation\Os_Task.h	   138   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   139  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   140  P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetDyn,
; ..\component\Os\Implementation\Os_Task.h	   141  (
; ..\component\Os\Implementation\Os_Task.h	   142    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   143  ))
; ..\component\Os\Implementation\Os_Task.h	   144  {
; ..\component\Os\Implementation\Os_Task.h	   145    return (P2VAR(Os_TaskType, AUTOMATIC, OS_VAR_NOINIT))Os_TaskGetThread(Task)->Dyn;                                     /* PRQA S 0310, 3305 */ /* MD_Os_Rule11.3_0310, MD_Os_Rule11.3_3305 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   146  }
; ..\component\Os\Implementation\Os_Task.h	   147  
; ..\component\Os\Implementation\Os_Task.h	   148  
; ..\component\Os\Implementation\Os_Task.h	   149  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   150   *  Os_TaskSetState()
; ..\component\Os\Implementation\Os_Task.h	   151   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   152  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   153  Os_TaskSetState,
; ..\component\Os\Implementation\Os_Task.h	   154  (
; ..\component\Os\Implementation\Os_Task.h	   155    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   156    TaskStateType State
; ..\component\Os\Implementation\Os_Task.h	   157  ))
; ..\component\Os\Implementation\Os_Task.h	   158  {
; ..\component\Os\Implementation\Os_Task.h	   159    Os_TaskGetDyn(Task)->State = State;                                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   160  }
; ..\component\Os\Implementation\Os_Task.h	   161  
; ..\component\Os\Implementation\Os_Task.h	   162  
; ..\component\Os\Implementation\Os_Task.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   164   *  Os_TaskGetPriority()
; ..\component\Os\Implementation\Os_Task.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   167  OS_ALWAYS_INLINE, Os_TaskGetPriority,
; ..\component\Os\Implementation\Os_Task.h	   168  (
; ..\component\Os\Implementation\Os_Task.h	   169    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   170  ))
; ..\component\Os\Implementation\Os_Task.h	   171  {
; ..\component\Os\Implementation\Os_Task.h	   172    return Os_TaskGetDyn(Task)->Priority;                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   173  }
; ..\component\Os\Implementation\Os_Task.h	   174  
; ..\component\Os\Implementation\Os_Task.h	   175  
; ..\component\Os\Implementation\Os_Task.h	   176  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   177   *  Os_TaskSetPriority()
; ..\component\Os\Implementation\Os_Task.h	   178   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   179  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   180  Os_TaskSetPriority,
; ..\component\Os\Implementation\Os_Task.h	   181  (
; ..\component\Os\Implementation\Os_Task.h	   182    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task,
; ..\component\Os\Implementation\Os_Task.h	   183    Os_TaskPrioType Priority
; ..\component\Os\Implementation\Os_Task.h	   184  ))
; ..\component\Os\Implementation\Os_Task.h	   185  {
; ..\component\Os\Implementation\Os_Task.h	   186    Os_TaskGetDyn(Task)->Priority = Priority;                                                                             /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_TASKGETDYN_002 */
; ..\component\Os\Implementation\Os_Task.h	   187  }
; ..\component\Os\Implementation\Os_Task.h	   188  
; ..\component\Os\Implementation\Os_Task.h	   189  
; ..\component\Os\Implementation\Os_Task.h	   190  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   191   *  Os_TaskGetRunningPriority()
; ..\component\Os\Implementation\Os_Task.h	   192   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   193  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   194  OS_ALWAYS_INLINE, Os_TaskGetRunningPriority,
; ..\component\Os\Implementation\Os_Task.h	   195  (
; ..\component\Os\Implementation\Os_Task.h	   196    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   197  ))
; ..\component\Os\Implementation\Os_Task.h	   198  {
; ..\component\Os\Implementation\Os_Task.h	   199    return Task->RunningPriority;
; ..\component\Os\Implementation\Os_Task.h	   200  }
; ..\component\Os\Implementation\Os_Task.h	   201  
; ..\component\Os\Implementation\Os_Task.h	   202  
; ..\component\Os\Implementation\Os_Task.h	   203  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   204   *  Os_TaskGetHomePriority()
; ..\component\Os\Implementation\Os_Task.h	   205   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   206  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_TaskPrioType, OS_CODE,                                                  /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   207  OS_ALWAYS_INLINE, Os_TaskGetHomePriority,
; ..\component\Os\Implementation\Os_Task.h	   208  (
; ..\component\Os\Implementation\Os_Task.h	   209    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   210  ))
; ..\component\Os\Implementation\Os_Task.h	   211  {
; ..\component\Os\Implementation\Os_Task.h	   212    return Task->HomePriority;
; ..\component\Os\Implementation\Os_Task.h	   213  }
; ..\component\Os\Implementation\Os_Task.h	   214  
; ..\component\Os\Implementation\Os_Task.h	   215  
; ..\component\Os\Implementation\Os_Task.h	   216  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   217   *  Os_TaskGetId()
; ..\component\Os\Implementation\Os_Task.h	   218   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   219  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE TaskType, OS_CODE,                                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   220  OS_ALWAYS_INLINE, Os_TaskGetId,
; ..\component\Os\Implementation\Os_Task.h	   221  (
; ..\component\Os\Implementation\Os_Task.h	   222    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   223  ))
; ..\component\Os\Implementation\Os_Task.h	   224  {
; ..\component\Os\Implementation\Os_Task.h	   225    return Task->TaskId;
; ..\component\Os\Implementation\Os_Task.h	   226  }
; ..\component\Os\Implementation\Os_Task.h	   227  
; ..\component\Os\Implementation\Os_Task.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   229   *  Os_TaskGetMaxActivations()
; ..\component\Os\Implementation\Os_Task.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_ActivationCntType, OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetMaxActivations, /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   232  (
; ..\component\Os\Implementation\Os_Task.h	   233    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   234  ))
; ..\component\Os\Implementation\Os_Task.h	   235  {
; ..\component\Os\Implementation\Os_Task.h	   236    return Task->MaxActivations;
; ..\component\Os\Implementation\Os_Task.h	   237  }
; ..\component\Os\Implementation\Os_Task.h	   238  
; ..\component\Os\Implementation\Os_Task.h	   239  
; ..\component\Os\Implementation\Os_Task.h	   240  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   241   *  Os_TaskGetAccessingApplications()
; ..\component\Os\Implementation\Os_Task.h	   242   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   243  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_AppAccessMaskType, OS_CODE,                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   244  OS_ALWAYS_INLINE, Os_TaskGetAccessingApplications,
; ..\component\Os\Implementation\Os_Task.h	   245  (
; ..\component\Os\Implementation\Os_Task.h	   246    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   247  ))
; ..\component\Os\Implementation\Os_Task.h	   248  {
; ..\component\Os\Implementation\Os_Task.h	   249    return Task->AccessingApplications;
; ..\component\Os\Implementation\Os_Task.h	   250  }
; ..\component\Os\Implementation\Os_Task.h	   251  
; ..\component\Os\Implementation\Os_Task.h	   252  
; ..\component\Os\Implementation\Os_Task.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   254   *  Os_TaskGetScheduler()
; ..\component\Os\Implementation\Os_Task.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   256  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   257  P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetScheduler,
; ..\component\Os\Implementation\Os_Task.h	   258  (
; ..\component\Os\Implementation\Os_Task.h	   259    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   260  ))
; ..\component\Os\Implementation\Os_Task.h	   261  {
; ..\component\Os\Implementation\Os_Task.h	   262     return Os_CoreGetScheduler(Os_ThreadGetCore(Os_TaskGetThread(Task)));                                                /* SBSW_OS_TASK_COREGETSCHEDULER_001 */ /* SBSW_OS_TASK_THREADGETCORE_002 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   263  }
; ..\component\Os\Implementation\Os_Task.h	   264  
; ..\component\Os\Implementation\Os_Task.h	   265  
; ..\component\Os\Implementation\Os_Task.h	   266  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   267   *  Os_TaskGetEvent()
; ..\component\Os\Implementation\Os_Task.h	   268   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   269  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   270  P2VAR(Os_EventStateType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetEvent,
; ..\component\Os\Implementation\Os_Task.h	   271  (
; ..\component\Os\Implementation\Os_Task.h	   272    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   273  ))
; ..\component\Os\Implementation\Os_Task.h	   274  {
; ..\component\Os\Implementation\Os_Task.h	   275    return &(Os_TaskGetDyn(Task)->Events);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   276  }
; ..\component\Os\Implementation\Os_Task.h	   277  
; ..\component\Os\Implementation\Os_Task.h	   278  
; ..\component\Os\Implementation\Os_Task.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   280   *  Os_TaskGetCore()
; ..\component\Os\Implementation\Os_Task.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   283  P2CONST(Os_CoreAsrConfigType, TYPEDEF, OS_CONST),  OS_CODE, OS_ALWAYS_INLINE, Os_TaskGetCore,
; ..\component\Os\Implementation\Os_Task.h	   284  (
; ..\component\Os\Implementation\Os_Task.h	   285    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   286  ))
; ..\component\Os\Implementation\Os_Task.h	   287  {
; ..\component\Os\Implementation\Os_Task.h	   288    return Os_ThreadGetCore(Os_TaskGetThread(Task));                                                                      /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_THREADGETCORE_002 */
; ..\component\Os\Implementation\Os_Task.h	   289  }
; ..\component\Os\Implementation\Os_Task.h	   290  
; ..\component\Os\Implementation\Os_Task.h	   291  
; ..\component\Os\Implementation\Os_Task.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   293   *  Os_TaskIsCoreLocal()
; ..\component\Os\Implementation\Os_Task.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32,                                                                    /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   296  OS_CODE, OS_ALWAYS_INLINE, Os_TaskIsCoreLocal,
; ..\component\Os\Implementation\Os_Task.h	   297  (
; ..\component\Os\Implementation\Os_Task.h	   298    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   299  ))
; ..\component\Os\Implementation\Os_Task.h	   300  {
; ..\component\Os\Implementation\Os_Task.h	   301    return Os_CoreAsrIsCoreLocal(Os_TaskGetCore(Task));                                                                   /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_TASK_COREASRISCORELOCAL_002 */
; ..\component\Os\Implementation\Os_Task.h	   302  }
; ..\component\Os\Implementation\Os_Task.h	   303  
; ..\component\Os\Implementation\Os_Task.h	   304  
; ..\component\Os\Implementation\Os_Task.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   306   *  Os_TaskCheckId()
; ..\component\Os\Implementation\Os_Task.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   309  OS_ALWAYS_INLINE, Os_TaskCheckId,
; ..\component\Os\Implementation\Os_Task.h	   310  (
; ..\component\Os\Implementation\Os_Task.h	   311    TaskType TaskId
; ..\component\Os\Implementation\Os_Task.h	   312  ))
; ..\component\Os\Implementation\Os_Task.h	   313  {
; ..\component\Os\Implementation\Os_Task.h	   314    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)TaskId, (uint32)OS_TASKID_COUNT));
; ..\component\Os\Implementation\Os_Task.h	   315  }
; ..\component\Os\Implementation\Os_Task.h	   316  
; ..\component\Os\Implementation\Os_Task.h	   317  
; ..\component\Os\Implementation\Os_Task.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   319   *  Os_TaskCheckIsExtendedTask()
; ..\component\Os\Implementation\Os_Task.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   322  OS_ALWAYS_INLINE, Os_TaskCheckIsExtendedTask,
; ..\component\Os\Implementation\Os_Task.h	   323  (
; ..\component\Os\Implementation\Os_Task.h	   324    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   325  ))
; ..\component\Os\Implementation\Os_Task.h	   326  {
; ..\component\Os\Implementation\Os_Task.h	   327    return Os_ErrExtendedCheck((Os_StdReturnType)(Task->IsExtended == TRUE));                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Task.h	   328  }
; ..\component\Os\Implementation\Os_Task.h	   329  
; ..\component\Os\Implementation\Os_Task.h	   330  
; ..\component\Os\Implementation\Os_Task.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   332   *  Os_TaskCheckIsNotSuspended()
; ..\component\Os\Implementation\Os_Task.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   335  OS_ALWAYS_INLINE, Os_TaskCheckIsNotSuspended,
; ..\component\Os\Implementation\Os_Task.h	   336  (
; ..\component\Os\Implementation\Os_Task.h	   337    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   338  ))
; ..\component\Os\Implementation\Os_Task.h	   339  {
; ..\component\Os\Implementation\Os_Task.h	   340    return Os_ErrExtendedCheck((Os_StdReturnType)(Os_TaskGetDyn(Task)->State != SUSPENDED));                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   341  }
; ..\component\Os\Implementation\Os_Task.h	   342  
; ..\component\Os\Implementation\Os_Task.h	   343  
; ..\component\Os\Implementation\Os_Task.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   345   *  Os_TaskIsWaiting()
; ..\component\Os\Implementation\Os_Task.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE uint32, OS_CODE, OS_ALWAYS_INLINE,                                         /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   348  Os_TaskIsWaiting,
; ..\component\Os\Implementation\Os_Task.h	   349  (
; ..\component\Os\Implementation\Os_Task.h	   350    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   351  ))
; ..\component\Os\Implementation\Os_Task.h	   352  {
; ..\component\Os\Implementation\Os_Task.h	   353    return ((uint32)(Os_TaskGetDyn(Task)->State == WAITING));                                                             /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   354  }
; ..\component\Os\Implementation\Os_Task.h	   355  
; ..\component\Os\Implementation\Os_Task.h	   356  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   357   *  Os_TaskIsSuspended
; ..\component\Os\Implementation\Os_Task.h	   358   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   359  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   360  Os_TaskIsSuspended,
; ..\component\Os\Implementation\Os_Task.h	   361  (
; ..\component\Os\Implementation\Os_Task.h	   362    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) Task
; ..\component\Os\Implementation\Os_Task.h	   363  ))
; ..\component\Os\Implementation\Os_Task.h	   364  {
; ..\component\Os\Implementation\Os_Task.h	   365    return ((Os_StdReturnType)(Os_TaskGetDyn(Task)->State == SUSPENDED));                                                 /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Task.h	   366  }
; ..\component\Os\Implementation\Os_Task.h	   367  
; ..\component\Os\Implementation\Os_Task.h	   368  
; ..\component\Os\Implementation\Os_Task.h	   369  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Task.h	   370   *  Os_TaskSwitch()
; ..\component\Os\Implementation\Os_Task.h	   371   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Task.h	   372  /*!
; ..\component\Os\Implementation\Os_Task.h	   373   * Internal comment removed.
; ..\component\Os\Implementation\Os_Task.h	   374   *
; ..\component\Os\Implementation\Os_Task.h	   375   *
; ..\component\Os\Implementation\Os_Task.h	   376   *
; ..\component\Os\Implementation\Os_Task.h	   377   *
; ..\component\Os\Implementation\Os_Task.h	   378   *
; ..\component\Os\Implementation\Os_Task.h	   379   */
; ..\component\Os\Implementation\Os_Task.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Task.h	   381  Os_TaskSwitch,
; ..\component\Os\Implementation\Os_Task.h	   382  (
; ..\component\Os\Implementation\Os_Task.h	   383    P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST) Scheduler,
; ..\component\Os\Implementation\Os_Task.h	   384    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) CallerThread
; ..\component\Os\Implementation\Os_Task.h	   385  ))
; ..\component\Os\Implementation\Os_Task.h	   386  {
; ..\component\Os\Implementation\Os_Task.h	   387    P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST) nextTask;
; ..\component\Os\Implementation\Os_Task.h	   388    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) nextThread;
; ..\component\Os\Implementation\Os_Task.h	   389  
; ..\component\Os\Implementation\Os_Task.h	   390    /* #10 Call PostTaskHook. */
; ..\component\Os\Implementation\Os_Task.h	   391    Os_TaskCallPostTaskHook();
; ..\component\Os\Implementation\Os_Task.h	   392  
; ..\component\Os\Implementation\Os_Task.h	   393    /* #20 Tell Scheduler to switch and get next thread from there. */
; ..\component\Os\Implementation\Os_Task.h	   394    nextTask = Os_SchedulerInternalSchedule(Scheduler);                                                                   /* SBSW_OS_FC_PRECONDITION */
	mov.aa	a13,a2
.L399:

; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    15   * \ingroup     Os_Hal
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    16   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    18   * \{
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    20   * \file       Os_Hal_Core_162_P.h
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    21   * \brief      Primitives function implementation for TriCore Processor Core TC1.6.2P
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    22   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    23   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    27   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    29                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    30  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    31  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    32  #ifndef OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    33  # define OS_HAL_CORE_162_P_H
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    34  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    35  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    37   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    40  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    41  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    42  # include "Os_Hal_Core_162_PInt.h"
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    43  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    44  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    45  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    47  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    48  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    49   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    50   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    53  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    54   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    55   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    56  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    57  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    58  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    59   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    60   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    61  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    62  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    63   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    64   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    65  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    67  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    68   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    69   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    70  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    71  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    72  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    73  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    74  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    75  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    76   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    77   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    78   
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    79  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    80   *  Os_Hal_CoreStart()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    81   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    82  /*!
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    83   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    84   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    85   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    86   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    88   */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    89  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    90  Os_Hal_CoreStart,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    91  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    92    P2CONST(Os_Hal_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    93  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    95    /* #10 Write the foreign PC with the startup code symbol for core 1. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    96    *((volatile uint32*)Core->ProgramCounterRegister) = (uint32)(Core->StartLabelAddress);                                /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_PC */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    97  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    98    /* #20 Reset the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	    99    *((volatile uint32*)Core->DBGSRRegister) = OS_HAL_DBGSR_START_CORE;                                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_DBGSR */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   100    
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   101    /* #30 Release the core. */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   102    *((volatile uint32*)Core->SYSCON_CORECON_Register) &= ~OS_HAL_SYSCON_BHALT_MASK;                                               /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_CORECONFIG_SYSCON_CORECON */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   105  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   106  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   107   *  Os_Hal_InitializeAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   108   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   109  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   110  Os_Hal_InitializeAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   111  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   112    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   113  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   114  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   115    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   116    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   117    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   118    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   119    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   120    Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   121  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   122  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   123  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   124  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   125   *  Os_Hal_InitializeAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   126   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   127  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   128  Os_Hal_InitializeAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   129  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   130    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   131  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   132  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   133    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   134    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   135    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   136    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   137    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   138    Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   139  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   140  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   141  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   143   *  Os_Hal_InitializeAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   146  Os_Hal_InitializeAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   147  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   148    CONST(uint32, AUTOMATIC) Value[OS_HAL_COREMPU_NUM_OF_PS]
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   149  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   150  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   151    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, Value[0]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   152    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, Value[1]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   153    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, Value[2]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   154    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, Value[3]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   155    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, Value[4]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   156    Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, Value[5]);
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   157  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   158  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   159  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   160  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   161   *  Os_Hal_ReadModifyAccessDPRE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   162   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   163  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   164  Os_Hal_ReadModifyAccessDPRE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   165  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   166    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   167    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   168    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   169  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   170  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   171    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   172    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   173      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   174        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   175        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   176      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   177        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   178        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   179      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   180        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   181        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   182      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   183        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   184        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   185      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   186        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   187        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   188      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   189        Os_Hal_Mtcr(OS_HAL_COREMPU_DPRE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPRE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   190        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   191      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   192        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   193    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   194  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   195  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   196  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   197  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   198   *  Os_Hal_ReadModifyAccessDPWE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   199   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   200  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   201  Os_Hal_ReadModifyAccessDPWE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   202  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   203    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   204    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   205    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   206  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   207  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   208    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   209    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   210      case 0:                                                                                                             /* COV_OS_UNSUPPORTED88830 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   211        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   212        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   213      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   214        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   215        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   216      case 2:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   217        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   218        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   219      case 3:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   220        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   221        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   222      case 4:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   223        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   224        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   225      case 5:                                                                                                             /* COV_OS_HALCOREASSEMBLERINSTRUCTIONDATACASE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   226        Os_Hal_Mtcr(OS_HAL_COREMPU_DPWE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_DPWE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   227        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   228      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */ /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   229        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   230    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   232  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   233  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   235   *  Os_Hal_ReadModifyAccessCPXE()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   237  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   238  Os_Hal_ReadModifyAccessCPXE,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   239  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   240    CONST(uint8, AUTOMATIC) ProtectionSet,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   241    CONST(uint32, AUTOMATIC) Mask,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   242    CONST(uint32, AUTOMATIC) Value
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   243  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   244  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   245    switch(ProtectionSet)
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   246    {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   247      case 0:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   248        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE0, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE0) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   249        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   250      case 1:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   251        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE1, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE1) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   252        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   253      case 2:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   254        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE2, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE2) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   255        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   256      case 3:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   257        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE3, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE3) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   258        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   259      case 4:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   260        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE4, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE4) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   261        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   262      case 5:
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   263        Os_Hal_Mtcr(OS_HAL_COREMPU_CPXE5, (Os_Hal_Mfcr(OS_HAL_COREMPU_CPXE5) & ~(Mask)) | (Value));
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   264        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   265      default:                                                                                                            /* PRQA S 2016 */ /* MD_MSR_EmptyClause */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   266        break;
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   267    }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   268  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   269  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   270  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   271   *  Os_Hal_ContextPreparePRS()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   272   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   273  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALUNSUPPORTEDCODEREGIONS */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   274  Os_Hal_ContextPreparePRS,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   275  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   276    CONST(uint32, AUTOMATIC) PcxiAddr,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   277    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) CurrentConfig
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   278  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   279  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   280    *(uint32*)(PcxiAddr + OS_HAL_CSA_PSW_OFFSET) |= CurrentConfig->ProtectionSet;                                         /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */ /* SBSW_OS_HAL_PWA_PCXI */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   281  }
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   282  
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   284   *  Os_Hal_CoreGetId()
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CorePhysicalIdType, OS_CODE,                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   287  OS_ALWAYS_INLINE, Os_Hal_CoreGetId,
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   288  (
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   289    void
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   290  ))
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   291  {
; ..\component\Os\Implementation\Os_Hal_Core_162_P.h	   292    return (Os_CorePhysicalIdType)Os_Hal_Mfcr(OS_HAL_CORE_ID_REGISTER);
	mfcr	d15,#65052
.L417:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
	movh.a	a2,#@his(OsCfg_CorePhysicalRefs)
.L502:
	lea	a2,[a2]@los(OsCfg_CorePhysicalRefs)
.L641:
	addsc.a	a2,a2,d15,#2
	ld.a	a15,[a2]
.L414:
	ld.a	a15,[a15]24
.L642:

; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
; ..\component\Os\Implementation\Os_Core.h	   536  }
; ..\component\Os\Implementation\Os_Core.h	   537  
; ..\component\Os\Implementation\Os_Core.h	   538  
; ..\component\Os\Implementation\Os_Core.h	   539  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   540   *  Os_CoreGetLastError()
; ..\component\Os\Implementation\Os_Core.h	   541   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   542  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   543  OS_LOCAL_INLINE P2VAR(Os_ErrorType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   544  Os_CoreGetLastError,
; ..\component\Os\Implementation\Os_Core.h	   545  (
; ..\component\Os\Implementation\Os_Core.h	   546    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   547  ))
; ..\component\Os\Implementation\Os_Core.h	   548  {
; ..\component\Os\Implementation\Os_Core.h	   549    return &(Os_CoreAsrGetDyn(Core)->LastError);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   550  }
; ..\component\Os\Implementation\Os_Core.h	   551  
; ..\component\Os\Implementation\Os_Core.h	   552  
; ..\component\Os\Implementation\Os_Core.h	   553  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   554   *  Os_CoreInterruptedThreadsPush()
; ..\component\Os\Implementation\Os_Core.h	   555   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   556  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   557  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPush,
; ..\component\Os\Implementation\Os_Core.h	   558  (
; ..\component\Os\Implementation\Os_Core.h	   559    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   560    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) InterruptedThread
; ..\component\Os\Implementation\Os_Core.h	   561  ))
; ..\component\Os\Implementation\Os_Core.h	   562  {
; ..\component\Os\Implementation\Os_Core.h	   563    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   564  
; ..\component\Os\Implementation\Os_Core.h	   565    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   566  
; ..\component\Os\Implementation\Os_Core.h	   567    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter >= OS_MAX_INTERRUPTEDTHREADS))                                      /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   568    {
; ..\component\Os\Implementation\Os_Core.h	   569      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   570    }
; ..\component\Os\Implementation\Os_Core.h	   571  
; ..\component\Os\Implementation\Os_Core.h	   572    coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter] = InterruptedThread;                                  /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */ /* SBSW_OS_CORE_COREASR_INTERRUPTEDTHREADS_001 */
; ..\component\Os\Implementation\Os_Core.h	   573    coreDyn->InterruptedThreadsCounter++;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   574  }
; ..\component\Os\Implementation\Os_Core.h	   575  
; ..\component\Os\Implementation\Os_Core.h	   576  
; ..\component\Os\Implementation\Os_Core.h	   577  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   578   *  Os_CoreInterruptedThreadsPop()
; ..\component\Os\Implementation\Os_Core.h	   579   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   580  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   581  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   582  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPop,
; ..\component\Os\Implementation\Os_Core.h	   583  (
; ..\component\Os\Implementation\Os_Core.h	   584    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   585  ))
; ..\component\Os\Implementation\Os_Core.h	   586  {
; ..\component\Os\Implementation\Os_Core.h	   587    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   588  
; ..\component\Os\Implementation\Os_Core.h	   589    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   590  
; ..\component\Os\Implementation\Os_Core.h	   591    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter == 0))                                                              /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   592    {
; ..\component\Os\Implementation\Os_Core.h	   593      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   594    }
; ..\component\Os\Implementation\Os_Core.h	   595  
; ..\component\Os\Implementation\Os_Core.h	   596    coreDyn->InterruptedThreadsCounter--;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   597  
; ..\component\Os\Implementation\Os_Core.h	   598    return coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter];
; ..\component\Os\Implementation\Os_Core.h	   599  }
; ..\component\Os\Implementation\Os_Core.h	   600  
; ..\component\Os\Implementation\Os_Core.h	   601  
; ..\component\Os\Implementation\Os_Core.h	   602  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   603   *  Os_CoreThreadGetByContext()
; ..\component\Os\Implementation\Os_Core.h	   604   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   605  /*!
; ..\component\Os\Implementation\Os_Core.h	   606   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   607   *
; ..\component\Os\Implementation\Os_Core.h	   608   *
; ..\component\Os\Implementation\Os_Core.h	   609   *
; ..\component\Os\Implementation\Os_Core.h	   610   */
; ..\component\Os\Implementation\Os_Core.h	   611  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   612  OS_ALWAYS_INLINE, Os_CoreThreadGetByContext,
; ..\component\Os\Implementation\Os_Core.h	   613  (
; ..\component\Os\Implementation\Os_Core.h	   614    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   615    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Core.h	   616  ))
; ..\component\Os\Implementation\Os_Core.h	   617  {
; ..\component\Os\Implementation\Os_Core.h	   618    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Core.h	   619    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) result;
; ..\component\Os\Implementation\Os_Core.h	   620  
; ..\component\Os\Implementation\Os_Core.h	   621    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Core.h	   622  
; ..\component\Os\Implementation\Os_Core.h	   623    /* #10 Check whether the current thread matches the context. */
; ..\component\Os\Implementation\Os_Core.h	   624    if(Os_ThreadIsAnyInitialContext(currentThread, Context) != 0u)                                                        /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_001 */
; ..\component\Os\Implementation\Os_Core.h	   625    {
; ..\component\Os\Implementation\Os_Core.h	   626      result = currentThread;
; ..\component\Os\Implementation\Os_Core.h	   627    }
; ..\component\Os\Implementation\Os_Core.h	   628    /* #20 Otherwise search the list of interrupted threads. */
; ..\component\Os\Implementation\Os_Core.h	   629    else
; ..\component\Os\Implementation\Os_Core.h	   630    {
; ..\component\Os\Implementation\Os_Core.h	   631      P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   632      Os_CoreThreadIdx iterator;
; ..\component\Os\Implementation\Os_Core.h	   633      Os_CoreThreadIdx iteratorEnd;
; ..\component\Os\Implementation\Os_Core.h	   634  
; ..\component\Os\Implementation\Os_Core.h	   635      result = NULL_PTR;
; ..\component\Os\Implementation\Os_Core.h	   636  
; ..\component\Os\Implementation\Os_Core.h	   637      iterator = Os_CoreInterruptedThreadsGetTopIdx(Core);                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   638      iteratorEnd = Os_CoreInterruptedThreadsGetBottomIdx();
; ..\component\Os\Implementation\Os_Core.h	   639  
; ..\component\Os\Implementation\Os_Core.h	   640      while(iterator != iteratorEnd)                                                                                      /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */
; ..\component\Os\Implementation\Os_Core.h	   641      {
; ..\component\Os\Implementation\Os_Core.h	   642        interruptedThread = Os_CoreInterruptedThreadsGet(Core, iterator);                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   643  
; ..\component\Os\Implementation\Os_Core.h	   644        if(Os_ThreadIsAnyInitialContext(interruptedThread, Context) != 0u)                                                /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_002 */
; ..\component\Os\Implementation\Os_Core.h	   645        {
; ..\component\Os\Implementation\Os_Core.h	   646          result = interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   647          break;
; ..\component\Os\Implementation\Os_Core.h	   648        }
; ..\component\Os\Implementation\Os_Core.h	   649  
; ..\component\Os\Implementation\Os_Core.h	   650        iterator = Os_CoreInterruptedThreadsMoveDown(iterator);
; ..\component\Os\Implementation\Os_Core.h	   651      }
; ..\component\Os\Implementation\Os_Core.h	   652    }
; ..\component\Os\Implementation\Os_Core.h	   653  
; ..\component\Os\Implementation\Os_Core.h	   654    return result;
; ..\component\Os\Implementation\Os_Core.h	   655  }
; ..\component\Os\Implementation\Os_Core.h	   656  
; ..\component\Os\Implementation\Os_Core.h	   657  
; ..\component\Os\Implementation\Os_Core.h	   658  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   659   *  Os_CoreInterruptedThreadsGetTopIdx()
; ..\component\Os\Implementation\Os_Core.h	   660   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   661  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   662  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   663  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetTopIdx,
; ..\component\Os\Implementation\Os_Core.h	   664  (
; ..\component\Os\Implementation\Os_Core.h	   665    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   666  ))
; ..\component\Os\Implementation\Os_Core.h	   667  {
; ..\component\Os\Implementation\Os_Core.h	   668    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   669  
; ..\component\Os\Implementation\Os_Core.h	   670    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   671  
; ..\component\Os\Implementation\Os_Core.h	   672    Os_Assert((Os_StdReturnType)(coreDyn->InterruptedThreadsCounter < OS_MAX_INTERRUPTEDTHREADS));                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   673  
; ..\component\Os\Implementation\Os_Core.h	   674    return coreDyn->InterruptedThreadsCounter;
; ..\component\Os\Implementation\Os_Core.h	   675  }
; ..\component\Os\Implementation\Os_Core.h	   676  
; ..\component\Os\Implementation\Os_Core.h	   677  
; ..\component\Os\Implementation\Os_Core.h	   678  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   679   *  Os_CoreInterruptedThreadsGet()
; ..\component\Os\Implementation\Os_Core.h	   680   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   681  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   682  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   683  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGet,
; ..\component\Os\Implementation\Os_Core.h	   684  (
; ..\component\Os\Implementation\Os_Core.h	   685    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   686    Os_CoreThreadIdx Idx
; ..\component\Os\Implementation\Os_Core.h	   687  ))
; ..\component\Os\Implementation\Os_Core.h	   688  {
; ..\component\Os\Implementation\Os_Core.h	   689    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   690  
; ..\component\Os\Implementation\Os_Core.h	   691    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   692  
; ..\component\Os\Implementation\Os_Core.h	   693    if(OS_UNLIKELY((Idx > coreDyn->InterruptedThreadsCounter) || (Idx == 0)))                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   694    {
; ..\component\Os\Implementation\Os_Core.h	   695      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   696    }
; ..\component\Os\Implementation\Os_Core.h	   697  
; ..\component\Os\Implementation\Os_Core.h	   698    return coreDyn->InterruptedThreads[Idx-1];                                                                            /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */
; ..\component\Os\Implementation\Os_Core.h	   699  }
; ..\component\Os\Implementation\Os_Core.h	   700  
; ..\component\Os\Implementation\Os_Core.h	   701  
; ..\component\Os\Implementation\Os_Core.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   703   *  Os_CoreInterruptedThreadsGetBottomIdx()
; ..\component\Os\Implementation\Os_Core.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   705  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   706  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   707  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetBottomIdx, (void))
; ..\component\Os\Implementation\Os_Core.h	   708  {
; ..\component\Os\Implementation\Os_Core.h	   709    return (Os_CoreThreadIdx)0;
; ..\component\Os\Implementation\Os_Core.h	   710  }
; ..\component\Os\Implementation\Os_Core.h	   711  
; ..\component\Os\Implementation\Os_Core.h	   712  
; ..\component\Os\Implementation\Os_Core.h	   713  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   714   *  Os_CoreInterruptedThreadsMoveDown()
; ..\component\Os\Implementation\Os_Core.h	   715   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   716  /*!
; ..\component\Os\Implementation\Os_Core.h	   717   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   718   *
; ..\component\Os\Implementation\Os_Core.h	   719   *
; ..\component\Os\Implementation\Os_Core.h	   720   */
; ..\component\Os\Implementation\Os_Core.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   722  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   723  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsMoveDown,
; ..\component\Os\Implementation\Os_Core.h	   724  (
; ..\component\Os\Implementation\Os_Core.h	   725      Os_CoreThreadIdx Iterator
; ..\component\Os\Implementation\Os_Core.h	   726  ))
; ..\component\Os\Implementation\Os_Core.h	   727  {
; ..\component\Os\Implementation\Os_Core.h	   728    /* #10 Return the decremented iterator. */
; ..\component\Os\Implementation\Os_Core.h	   729    return (Iterator - (Os_CoreThreadIdx)1);
; ..\component\Os\Implementation\Os_Core.h	   730  }
; ..\component\Os\Implementation\Os_Core.h	   731  
; ..\component\Os\Implementation\Os_Core.h	   732  
; ..\component\Os\Implementation\Os_Core.h	   733  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   734   *  Os_CoreSetThread()
; ..\component\Os\Implementation\Os_Core.h	   735   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   736  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   737  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   738  Os_CoreSetThread,
; ..\component\Os\Implementation\Os_Core.h	   739  (
; ..\component\Os\Implementation\Os_Core.h	   740    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Core.h	   741  ))
; ..\component\Os\Implementation\Os_Core.h	   742  {
; ..\component\Os\Implementation\Os_Core.h	   743    Os_Hal_CoreSetThread(Os_SystemGetCore2Thread(Os_SystemGet()), Thread);                                                /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_CORESETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   744  }
; ..\component\Os\Implementation\Os_Core.h	   745  
; ..\component\Os\Implementation\Os_Core.h	   746  
; ..\component\Os\Implementation\Os_Core.h	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   748   *  Os_CoreGetThread()
; ..\component\Os\Implementation\Os_Core.h	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   750  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   751  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   752  OS_ALWAYS_INLINE, Os_CoreGetThread,
; ..\component\Os\Implementation\Os_Core.h	   753  (
; ..\component\Os\Implementation\Os_Core.h	   754    void
; ..\component\Os\Implementation\Os_Core.h	   755  ))
; ..\component\Os\Implementation\Os_Core.h	   756  {
; ..\component\Os\Implementation\Os_Core.h	   757    return Os_Hal_CoreGetThread(Os_SystemGetCore2Thread(Os_SystemGet()));                                                 /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_COREGETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   758  }
; ..\component\Os\Implementation\Os_Core.h	   759  
; ..\component\Os\Implementation\Os_Core.h	   760  
; ..\component\Os\Implementation\Os_Core.h	   761  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   762   *  Os_CoreSetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   763   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   764  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   765  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   766  Os_CoreSetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   767  (
; ..\component\Os\Implementation\Os_Core.h	   768    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack,
; ..\component\Os\Implementation\Os_Core.h	   769    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   770  ))
; ..\component\Os\Implementation\Os_Core.h	   771  {
; ..\component\Os\Implementation\Os_Core.h	   772    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Core.h	   773    {
; ..\component\Os\Implementation\Os_Core.h	   774      Os_CoreAsrGetDyn(Core)->CurrentStack = Stack;                                                                       /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_CORE_COREASRGETDYN_003 */
; ..\component\Os\Implementation\Os_Core.h	   775    }
; ..\component\Os\Implementation\Os_Core.h	   776  }
; ..\component\Os\Implementation\Os_Core.h	   777  
; ..\component\Os\Implementation\Os_Core.h	   778  
; ..\component\Os\Implementation\Os_Core.h	   779  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   780   *  Os_CoreGetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   781   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   782  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   783  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   784  OS_ALWAYS_INLINE, Os_CoreGetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   785  (
; ..\component\Os\Implementation\Os_Core.h	   786    void
; ..\component\Os\Implementation\Os_Core.h	   787  ))
; ..\component\Os\Implementation\Os_Core.h	   788  {
; ..\component\Os\Implementation\Os_Core.h	   789    if(Os_StackIsMonitoringEnabled() == 0u)                                                                               /* COV_OS_INVSTATE */ /* PRQA S 2992, 2996 */ /* MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   790    {
; ..\component\Os\Implementation\Os_Core.h	   791      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   792    }
; ..\component\Os\Implementation\Os_Core.h	   793    return Os_CoreAsrGetDyn(Os_Core2AsrCore(Os_CoreGetCurrentCore()))->CurrentStack;                                      /* SBSW_OS_CORE_CORE2ASRCORE_002 */ /* SBSW_OS_CORE_COREASRGETDYN_002 */
	ld.a	a15,[a15]120
.L411:

; ..\component\Os\Implementation\Os_Stack.h	     1  /**********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Stack.h	     3   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Stack.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Stack.h	     6   *
; ..\component\Os\Implementation\Os_Stack.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Stack.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Stack.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Stack.h	    11   *  -------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Stack.h	    13   *  -----------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Stack.h	    14  /**
; ..\component\Os\Implementation\Os_Stack.h	    15   * \addtogroup Os_Stack
; ..\component\Os\Implementation\Os_Stack.h	    16   * \{
; ..\component\Os\Implementation\Os_Stack.h	    17   *
; ..\component\Os\Implementation\Os_Stack.h	    18   * \file
; ..\component\Os\Implementation\Os_Stack.h	    19   * \brief       External interface to \ref Os_Stack.
; ..\component\Os\Implementation\Os_Stack.h	    20   * \details     --no details--
; ..\component\Os\Implementation\Os_Stack.h	    21   *
; ..\component\Os\Implementation\Os_Stack.h	    22   *
; ..\component\Os\Implementation\Os_Stack.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Stack.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Stack.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Stack.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    29  
; ..\component\Os\Implementation\Os_Stack.h	    30  #ifndef OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    31  # define OS_STACK_H
; ..\component\Os\Implementation\Os_Stack.h	    32                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Stack.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Stack.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Stack.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Stack.h	    38  
; ..\component\Os\Implementation\Os_Stack.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Stack.h	    40  # include "Os_Stack_Cfg.h"
; ..\component\Os\Implementation\Os_Stack.h	    41  # include "Os_StackInt.h"
; ..\component\Os\Implementation\Os_Stack.h	    42  
; ..\component\Os\Implementation\Os_Stack.h	    43  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    44  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Stack.h	    45  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Stack.h	    46  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    47  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Stack.h	    48  
; ..\component\Os\Implementation\Os_Stack.h	    49  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Stack.h	    50  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Stack.h	    51  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Stack.h	    52  
; ..\component\Os\Implementation\Os_Stack.h	    53  
; ..\component\Os\Implementation\Os_Stack.h	    54  
; ..\component\Os\Implementation\Os_Stack.h	    55  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    56   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Stack.h	    57   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    58  
; ..\component\Os\Implementation\Os_Stack.h	    59  
; ..\component\Os\Implementation\Os_Stack.h	    60  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    61   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Stack.h	    62   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    63  
; ..\component\Os\Implementation\Os_Stack.h	    64  
; ..\component\Os\Implementation\Os_Stack.h	    65  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    66   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    67   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    68  
; ..\component\Os\Implementation\Os_Stack.h	    69  
; ..\component\Os\Implementation\Os_Stack.h	    70  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    71   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Stack.h	    72   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    73  
; ..\component\Os\Implementation\Os_Stack.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Stack.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Stack.h	    76  
; ..\component\Os\Implementation\Os_Stack.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    78   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Stack.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    81   *  Os_StackIsModuleEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    83  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    84  OS_ALWAYS_INLINE, Os_StackIsModuleEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    85  {
; ..\component\Os\Implementation\Os_Stack.h	    86    return (Os_StdReturnType)(OS_CFG_STACKMODULE == STD_ON);                                                              /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    87  }
; ..\component\Os\Implementation\Os_Stack.h	    88  
; ..\component\Os\Implementation\Os_Stack.h	    89  
; ..\component\Os\Implementation\Os_Stack.h	    90  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	    91   *  Os_StackIsMeasurementEnabled()
; ..\component\Os\Implementation\Os_Stack.h	    92   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	    93  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	    94  OS_ALWAYS_INLINE, Os_StackIsMeasurementEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	    95  {
; ..\component\Os\Implementation\Os_Stack.h	    96    return (Os_StdReturnType)(OS_CFG_STACKMEASUREMENT == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	    97  }
; ..\component\Os\Implementation\Os_Stack.h	    98  
; ..\component\Os\Implementation\Os_Stack.h	    99  
; ..\component\Os\Implementation\Os_Stack.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   101   *  Os_StackIsMonitoringEnabled()
; ..\component\Os\Implementation\Os_Stack.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   104  OS_ALWAYS_INLINE, Os_StackIsMonitoringEnabled, ( void ))
; ..\component\Os\Implementation\Os_Stack.h	   105  {
; ..\component\Os\Implementation\Os_Stack.h	   106    return (Os_StdReturnType)(OS_CFG_STACKMONITORING  == STD_ON);                                                         /* PRQA S 4304, 2995 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   107  }
; ..\component\Os\Implementation\Os_Stack.h	   108  
; ..\component\Os\Implementation\Os_Stack.h	   109  
; ..\component\Os\Implementation\Os_Stack.h	   110  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   111   *  Os_StackInit()
; ..\component\Os\Implementation\Os_Stack.h	   112   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   113  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   114  Os_StackInit,
; ..\component\Os\Implementation\Os_Stack.h	   115  (
; ..\component\Os\Implementation\Os_Stack.h	   116    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack
; ..\component\Os\Implementation\Os_Stack.h	   117  ))
; ..\component\Os\Implementation\Os_Stack.h	   118  {
; ..\component\Os\Implementation\Os_Stack.h	   119  
; ..\component\Os\Implementation\Os_Stack.h	   120    if(Os_StackIsModuleEnabled() != 0u)                                                                                   /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   121    {
; ..\component\Os\Implementation\Os_Stack.h	   122      FUNC(void, OS_CODE) Os_StackInitInternal                                                                            /* PRQA S 3449, 3451 */ /* MD_Os_Rule8.5_3449, MD_Os_Rule8.5_3451 */
; ..\component\Os\Implementation\Os_Stack.h	   123      (P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack);
; ..\component\Os\Implementation\Os_Stack.h	   124  
; ..\component\Os\Implementation\Os_Stack.h	   125      Os_StackInitInternal(Stack);                                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Stack.h	   126    }
; ..\component\Os\Implementation\Os_Stack.h	   127  }
; ..\component\Os\Implementation\Os_Stack.h	   128  
; ..\component\Os\Implementation\Os_Stack.h	   129  
; ..\component\Os\Implementation\Os_Stack.h	   130  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Stack.h	   131   *  Os_StackOverflowCheck()
; ..\component\Os\Implementation\Os_Stack.h	   132   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Stack.h	   133  /*!
; ..\component\Os\Implementation\Os_Stack.h	   134   * Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   135   *
; ..\component\Os\Implementation\Os_Stack.h	   136   *
; ..\component\Os\Implementation\Os_Stack.h	   137   */
; ..\component\Os\Implementation\Os_Stack.h	   138  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Stack.h	   139  Os_StackOverflowCheck,( void ))
; ..\component\Os\Implementation\Os_Stack.h	   140  {
; ..\component\Os\Implementation\Os_Stack.h	   141    /* #10 Report protection error if the stack's last element is not equal to the fill pattern. */
; ..\component\Os\Implementation\Os_Stack.h	   142    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Stack.h	   143    {
; ..\component\Os\Implementation\Os_Stack.h	   144      P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) stack;
; ..\component\Os\Implementation\Os_Stack.h	   145      P2VAR(Os_Hal_StackType, AUTOMATIC, OS_VAR_NOINIT) stackEnd;
; ..\component\Os\Implementation\Os_Stack.h	   146  
; ..\component\Os\Implementation\Os_Stack.h	   147      stack = Os_CoreGetCurrentStack();
; ..\component\Os\Implementation\Os_Stack.h	   148      stackEnd = Os_Hal_StackEndGet(stack->LowAddress, stack->HighAddress);                                               /* SBSW_OS_ST_HAL_STACKENDGET_003 */
	ld.a	a15,[a15]
.L643:

; ..\component\Os\Implementation\Os_Stack.h	   149  
; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))
	mov.u	d0,#43690
	addih	d0,d0,#43690
	ld.w	d15,[a15]
.L644:

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
	jeq	d15,d0,.L54
.L645:

; ..\component\Os\Implementation\Os_Stack.h	   151      {
; ..\component\Os\Implementation\Os_Stack.h	   152        /*! Internal comment removed.
; ..\component\Os\Implementation\Os_Stack.h	   153   *
; ..\component\Os\Implementation\Os_Stack.h	   154   *
; ..\component\Os\Implementation\Os_Stack.h	   155   *
; ..\component\Os\Implementation\Os_Stack.h	   156   *
; ..\component\Os\Implementation\Os_Stack.h	   157   *
; ..\component\Os\Implementation\Os_Stack.h	   158   *
; ..\component\Os\Implementation\Os_Stack.h	   159   *
; ..\component\Os\Implementation\Os_Stack.h	   160   *
; ..\component\Os\Implementation\Os_Stack.h	   161   *
; ..\component\Os\Implementation\Os_Stack.h	   162   *
; ..\component\Os\Implementation\Os_Stack.h	   163   *
; ..\component\Os\Implementation\Os_Stack.h	   164   *
; ..\component\Os\Implementation\Os_Stack.h	   165   *
; ..\component\Os\Implementation\Os_Stack.h	   166   *
; ..\component\Os\Implementation\Os_Stack.h	   167   *
; ..\component\Os\Implementation\Os_Stack.h	   168   *
; ..\component\Os\Implementation\Os_Stack.h	   169   *
; ..\component\Os\Implementation\Os_Stack.h	   170         */
; ..\component\Os\Implementation\Os_Stack.h	   171        *stackEnd = OS_HAL_STACK_FILL_PATTERN;                                                                            /* SBSW_OS_ST_HAL_STACKENDGET_002 */
	st.w	[a15],d0
.L646:

; ..\component\Os\Implementation\Os_Stack.h	   172  
; ..\component\Os\Implementation\Os_Stack.h	   173        Os_ErrProtectionError(OS_STATUS_STACKFAULT);
	mov	d4,#13
	call	Os_ErrProtectionError

; ..\component\Os\Implementation\Os_Stack.h	   150      if(OS_UNLIKELY(*(stackEnd) != OS_HAL_STACK_FILL_PATTERN))      (inlined)
.L54:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L503:
	and	d15,d10
.L431:

; ..\component\Os\Implementation\Os_Hal_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Core.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Core.h	    15   * \addtogroup  Os_Hal_Core
; ..\component\Os\Implementation\Os_Hal_Core.h	    16   * \{
; ..\component\Os\Implementation\Os_Hal_Core.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    18   * \file    Os_Hal_Core.h
; ..\component\Os\Implementation\Os_Hal_Core.h	    19   * \brief   Core and multi-core related primitives.
; ..\component\Os\Implementation\Os_Hal_Core.h	    20   *
; ..\component\Os\Implementation\Os_Hal_Core.h	    21   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    22  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    23   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Core.h	    24   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Core.h	    25   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Core.h	    26   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    27                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    28  
; ..\component\Os\Implementation\Os_Hal_Core.h	    29  
; ..\component\Os\Implementation\Os_Hal_Core.h	    30  #ifndef OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    31  # define OS_HAL_CORE_H
; ..\component\Os\Implementation\Os_Hal_Core.h	    32  
; ..\component\Os\Implementation\Os_Hal_Core.h	    33  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    34   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Core.h	    35   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    36  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Core.h	    37  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    38  
; ..\component\Os\Implementation\Os_Hal_Core.h	    39  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    40  # include "Os_Hal_CoreInt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    41  # include "Os_Hal_Core_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    42  
; ..\component\Os\Implementation\Os_Hal_Core.h	    43  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Core.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    45  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    46  
; ..\component\Os\Implementation\Os_Hal_Core.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Core.h	    48  # include "Os_Hal_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    49  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    50  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    51  
; ..\component\Os\Implementation\Os_Hal_Core.h	    52  
; ..\component\Os\Implementation\Os_Hal_Core.h	    53  # if defined (OS_HAL_CORE_161_EP)
; ..\component\Os\Implementation\Os_Hal_Core.h	    54  #  include "Os_Hal_Core_161_EP.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    55  # elif defined (OS_HAL_CORE_162_P)                                                                                      /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    56  #  include "Os_Hal_Core_162_P.h"
; ..\component\Os\Implementation\Os_Hal_Core.h	    57  # elif defined (OS_HAL_CORE_18)
; ..\component\Os\Implementation\Os_Hal_Core.h	    58  #  include "Os_Hal_Core_18.h"                                                                                           /* COV_OS_HAL_CORE_BETA */
; ..\component\Os\Implementation\Os_Hal_Core.h	    59  # else
; ..\component\Os\Implementation\Os_Hal_Core.h	    60  #  error "The selected core module is not supported!"
; ..\component\Os\Implementation\Os_Hal_Core.h	    61  # endif
; ..\component\Os\Implementation\Os_Hal_Core.h	    62  
; ..\component\Os\Implementation\Os_Hal_Core.h	    63  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    64   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    65   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    66  
; ..\component\Os\Implementation\Os_Hal_Core.h	    67  
; ..\component\Os\Implementation\Os_Hal_Core.h	    68  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    69   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Core.h	    70   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    71  
; ..\component\Os\Implementation\Os_Hal_Core.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    73   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Core.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    75  
; ..\component\Os\Implementation\Os_Hal_Core.h	    76  
; ..\component\Os\Implementation\Os_Hal_Core.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    78   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    80  
; ..\component\Os\Implementation\Os_Hal_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    82   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    84  
; ..\component\Os\Implementation\Os_Hal_Core.h	    85  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Core.h	    86  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Core.h	    87  
; ..\component\Os\Implementation\Os_Hal_Core.h	    88  
; ..\component\Os\Implementation\Os_Hal_Core.h	    89  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    90   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Core.h	    91   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    92  
; ..\component\Os\Implementation\Os_Hal_Core.h	    93  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	    94   *  Os_Hal_CoreIsThreadPointerUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	    95   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	    97  Os_Hal_CoreIsThreadPointerUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	    98  (
; ..\component\Os\Implementation\Os_Hal_Core.h	    99    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   100  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   101  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   102    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   103  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   104  
; ..\component\Os\Implementation\Os_Hal_Core.h	   105  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   106   *  Os_Hal_CoreIsCoreIdUserReadable()
; ..\component\Os\Implementation\Os_Hal_Core.h	   107   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   109  Os_Hal_CoreIsCoreIdUserReadable,
; ..\component\Os\Implementation\Os_Hal_Core.h	   110  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   111    void
; ..\component\Os\Implementation\Os_Hal_Core.h	   112  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   113  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   114    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   115  }
; ..\component\Os\Implementation\Os_Hal_Core.h	   116  
; ..\component\Os\Implementation\Os_Hal_Core.h	   117  
; ..\component\Os\Implementation\Os_Hal_Core.h	   118  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Core.h	   119   *  Os_Hal_CoreSetThread()
; ..\component\Os\Implementation\Os_Hal_Core.h	   120   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Core.h	   121  /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   122   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   124   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   125   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   126   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   127   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   128   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   129   */
; ..\component\Os\Implementation\Os_Hal_Core.h	   130  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Core.h	   131  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_CoreSetThread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   132  (
; ..\component\Os\Implementation\Os_Hal_Core.h	   133      P2CONST(Os_Hal_Core2ThreadConfigType, AUTOMATIC, OS_CONST) Core2Thread,
; ..\component\Os\Implementation\Os_Hal_Core.h	   134      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Hal_Core.h	   135  ))
; ..\component\Os\Implementation\Os_Hal_Core.h	   136  {
; ..\component\Os\Implementation\Os_Hal_Core.h	   137    /*!
; ..\component\Os\Implementation\Os_Hal_Core.h	   138     * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Core.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Core.h	   142     */
; ..\component\Os\Implementation\Os_Hal_Core.h	   143  
; ..\component\Os\Implementation\Os_Hal_Core.h	   144    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Core.h	   145  
; ..\component\Os\Implementation\Os_Hal_Core.h	   146    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   147    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Core.h	   148  
; ..\component\Os\Implementation\Os_Hal_Core.h	   149    /* #20 Disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   150    Os_Hal_Disable();
	disable
.L647:

; ..\component\Os\Implementation\Os_Hal_Core.h	   151  
; ..\component\Os\Implementation\Os_Hal_Core.h	   152    /* #30 Set the GW bit in the PSW register. */
; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);
	mfcr	d0,#65028
	or	d0,d0,#256

; ..\component\Os\Implementation\Os_Hal_Core.h	   153    Os_Hal_Mtcr(OS_HAL_PSW_OFFSET, Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) | OS_HAL_PSW_GW_MASK);      (inlined)
	mtcr  #0xFE04, d0
.L648:

; ..\component\Os\Implementation\Os_Hal_Core.h	   154    Os_Hal_Isync();
	isync
.L649:

; ..\component\Os\Implementation\Os_Task.h	   395    nextThread = Os_TaskGetThread(nextTask);                                                                              /* SBSW_OS_TASK_TASKGETTHREAD_002 */
	mov.d	d0,a13
.L505:

; ..\component\Os\Implementation\Os_Hal_Core.h	   157    Os_Hal_Mta8((uint32)Thread);                                                                                          /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */      (inlined)
	
	mov.a  a8, d0
	
.L433:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L650:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d0,#65068
.L506:
	insert	d0,d0,#0,#15,#1
.L507:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d0,d15
.L508:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d0
.L651:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L420:

; ..\component\Os\Implementation\Os_Thread.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Thread.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Thread.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Thread.h	     6   *
; ..\component\Os\Implementation\Os_Thread.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Thread.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Thread.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Thread.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Thread.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Thread.h	    14  /**
; ..\component\Os\Implementation\Os_Thread.h	    15   * \addtogroup Os_Thread
; ..\component\Os\Implementation\Os_Thread.h	    16   *
; ..\component\Os\Implementation\Os_Thread.h	    17   * \{
; ..\component\Os\Implementation\Os_Thread.h	    18   *
; ..\component\Os\Implementation\Os_Thread.h	    19   * \file
; ..\component\Os\Implementation\Os_Thread.h	    20   * \brief      Internal functions implementation to work with threads.
; ..\component\Os\Implementation\Os_Thread.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Thread.h	    22   *
; ..\component\Os\Implementation\Os_Thread.h	    23   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    24  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    25   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Thread.h	    26   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Thread.h	    27   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Thread.h	    28   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    29  
; ..\component\Os\Implementation\Os_Thread.h	    30  
; ..\component\Os\Implementation\Os_Thread.h	    31  #ifndef OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    32  # define OS_THREAD_H
; ..\component\Os\Implementation\Os_Thread.h	    33                                                                                                                          /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Thread.h	    34  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    35   *  INCLUDES
; ..\component\Os\Implementation\Os_Thread.h	    36   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    37  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Thread.h	    38  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    39  
; ..\component\Os\Implementation\Os_Thread.h	    40  /* Os module declarations */
; ..\component\Os\Implementation\Os_Thread.h	    41  # include "Os_ThreadInt.h"
; ..\component\Os\Implementation\Os_Thread.h	    42  # include "Os_Thread_Types.h"
; ..\component\Os\Implementation\Os_Thread.h	    43  
; ..\component\Os\Implementation\Os_Thread.h	    44  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    45  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Thread.h	    46  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Thread.h	    47  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Thread.h	    48  # include "Os_Core.h"
; ..\component\Os\Implementation\Os_Thread.h	    49  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    50  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Thread.h	    51  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Thread.h	    52  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Thread.h	    53  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Thread.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Thread.h	    55  # include "Os_XSignal_Cfg.h"
; ..\component\Os\Implementation\Os_Thread.h	    56  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Thread.h	    57  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Thread.h	    58  # include "Os_Lock.h"
; ..\component\Os\Implementation\Os_Thread.h	    59  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Thread.h	    60  # include "Os_AccessCheck.h"
; ..\component\Os\Implementation\Os_Thread.h	    61  
; ..\component\Os\Implementation\Os_Thread.h	    62  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Thread.h	    63  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Thread.h	    64  # include "Os_Hal_Context.h"
; ..\component\Os\Implementation\Os_Thread.h	    65  
; ..\component\Os\Implementation\Os_Thread.h	    66  
; ..\component\Os\Implementation\Os_Thread.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    68   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Thread.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    70  
; ..\component\Os\Implementation\Os_Thread.h	    71  
; ..\component\Os\Implementation\Os_Thread.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    73   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Thread.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    75  
; ..\component\Os\Implementation\Os_Thread.h	    76  
; ..\component\Os\Implementation\Os_Thread.h	    77  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    78   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Thread.h	    79   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    80  
; ..\component\Os\Implementation\Os_Thread.h	    81  
; ..\component\Os\Implementation\Os_Thread.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    83   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    84   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    85  
; ..\component\Os\Implementation\Os_Thread.h	    86  
; ..\component\Os\Implementation\Os_Thread.h	    87  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    88   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Thread.h	    89   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    90  
; ..\component\Os\Implementation\Os_Thread.h	    91  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Thread.h	    92  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Thread.h	    93  
; ..\component\Os\Implementation\Os_Thread.h	    94  
; ..\component\Os\Implementation\Os_Thread.h	    95  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	    96   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Thread.h	    97   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	    98  
; ..\component\Os\Implementation\Os_Thread.h	    99  
; ..\component\Os\Implementation\Os_Thread.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   101   *  Os_ThreadGetLocks()
; ..\component\Os\Implementation\Os_Thread.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   103  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   104  OS_LOCAL_INLINE P2VAR(Os_LockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   105  OS_ALWAYS_INLINE, Os_ThreadGetLocks,
; ..\component\Os\Implementation\Os_Thread.h	   106  (
; ..\component\Os\Implementation\Os_Thread.h	   107    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   108  ))
; ..\component\Os\Implementation\Os_Thread.h	   109  {
; ..\component\Os\Implementation\Os_Thread.h	   110    return &(Thread->Dyn->Locks);
; ..\component\Os\Implementation\Os_Thread.h	   111  }
; ..\component\Os\Implementation\Os_Thread.h	   112  
; ..\component\Os\Implementation\Os_Thread.h	   113  
; ..\component\Os\Implementation\Os_Thread.h	   114  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   115   *  Os_ThreadGetSpinlocks()
; ..\component\Os\Implementation\Os_Thread.h	   116   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   117  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   118  OS_LOCAL_INLINE P2VAR(Os_SpinlockListType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   119  Os_ThreadGetSpinlocks,
; ..\component\Os\Implementation\Os_Thread.h	   120  (
; ..\component\Os\Implementation\Os_Thread.h	   121    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   122  ))
; ..\component\Os\Implementation\Os_Thread.h	   123  {
; ..\component\Os\Implementation\Os_Thread.h	   124    return &(Thread->Dyn->Spinlocks);
; ..\component\Os\Implementation\Os_Thread.h	   125  }
; ..\component\Os\Implementation\Os_Thread.h	   126  
; ..\component\Os\Implementation\Os_Thread.h	   127  
; ..\component\Os\Implementation\Os_Thread.h	   128  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   129   *  Os_ThreadGetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   130   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   131  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   132  OS_LOCAL_INLINE P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   133  OS_ALWAYS_INLINE, Os_ThreadGetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   134  (
; ..\component\Os\Implementation\Os_Thread.h	   135    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   136  ))
; ..\component\Os\Implementation\Os_Thread.h	   137  {
; ..\component\Os\Implementation\Os_Thread.h	   138    return Thread->Dyn->ServiceCalls;
; ..\component\Os\Implementation\Os_Thread.h	   139  }
; ..\component\Os\Implementation\Os_Thread.h	   140  
; ..\component\Os\Implementation\Os_Thread.h	   141  
; ..\component\Os\Implementation\Os_Thread.h	   142  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   143   *  Os_ThreadSetServiceCalls()
; ..\component\Os\Implementation\Os_Thread.h	   144   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   145  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   146  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetServiceCalls,
; ..\component\Os\Implementation\Os_Thread.h	   147  (
; ..\component\Os\Implementation\Os_Thread.h	   148    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   149    P2VAR(Os_ServiceCallType, AUTOMATIC, OS_VAR_NOINIT) ServiceCalls
; ..\component\Os\Implementation\Os_Thread.h	   150  ))
; ..\component\Os\Implementation\Os_Thread.h	   151  {
; ..\component\Os\Implementation\Os_Thread.h	   152    Thread->Dyn->ServiceCalls = ServiceCalls;                                                                             /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   153  }
; ..\component\Os\Implementation\Os_Thread.h	   154  
; ..\component\Os\Implementation\Os_Thread.h	   155  
; ..\component\Os\Implementation\Os_Thread.h	   156  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   157   *  Os_ThreadGetTrace()
; ..\component\Os\Implementation\Os_Thread.h	   158   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   159  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   160  OS_LOCAL_INLINE P2CONST(Os_TraceThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Thread.h	   161  OS_ALWAYS_INLINE, Os_ThreadGetTrace,
; ..\component\Os\Implementation\Os_Thread.h	   162  (
; ..\component\Os\Implementation\Os_Thread.h	   163    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   164  ))
; ..\component\Os\Implementation\Os_Thread.h	   165  {
; ..\component\Os\Implementation\Os_Thread.h	   166    return Thread->Trace;
; ..\component\Os\Implementation\Os_Thread.h	   167  }
; ..\component\Os\Implementation\Os_Thread.h	   168  
; ..\component\Os\Implementation\Os_Thread.h	   169  
; ..\component\Os\Implementation\Os_Thread.h	   170  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   171   *  Os_ThreadGetTpConfig()
; ..\component\Os\Implementation\Os_Thread.h	   172   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   174  OS_LOCAL_INLINE P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetTpConfig,
; ..\component\Os\Implementation\Os_Thread.h	   175  (
; ..\component\Os\Implementation\Os_Thread.h	   176    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   177  ))
; ..\component\Os\Implementation\Os_Thread.h	   178  {
; ..\component\Os\Implementation\Os_Thread.h	   179    return Thread->TimeProtConfig;
; ..\component\Os\Implementation\Os_Thread.h	   180  }
; ..\component\Os\Implementation\Os_Thread.h	   181  
; ..\component\Os\Implementation\Os_Thread.h	   182  
; ..\component\Os\Implementation\Os_Thread.h	   183  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   184   *  Os_ThreadGetStack()
; ..\component\Os\Implementation\Os_Thread.h	   185   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   186  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   187  OS_LOCAL_INLINE P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetStack,
; ..\component\Os\Implementation\Os_Thread.h	   188  (
; ..\component\Os\Implementation\Os_Thread.h	   189    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   190  ))
; ..\component\Os\Implementation\Os_Thread.h	   191  {
; ..\component\Os\Implementation\Os_Thread.h	   192    return (Thread->Stack);
; ..\component\Os\Implementation\Os_Thread.h	   193  }
; ..\component\Os\Implementation\Os_Thread.h	   194  
; ..\component\Os\Implementation\Os_Thread.h	   195  
; ..\component\Os\Implementation\Os_Thread.h	   196  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   197   *  Os_ThreadGetContext()
; ..\component\Os\Implementation\Os_Thread.h	   198   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   199  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   200  OS_LOCAL_INLINE P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   201  Os_ThreadGetContext,
; ..\component\Os\Implementation\Os_Thread.h	   202  (
; ..\component\Os\Implementation\Os_Thread.h	   203    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   204  ))
; ..\component\Os\Implementation\Os_Thread.h	   205  {
; ..\component\Os\Implementation\Os_Thread.h	   206    return Thread->ContextConfig;
; ..\component\Os\Implementation\Os_Thread.h	   207  }
; ..\component\Os\Implementation\Os_Thread.h	   208  
; ..\component\Os\Implementation\Os_Thread.h	   209  
; ..\component\Os\Implementation\Os_Thread.h	   210  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   211   *  Os_ThreadGetIntApiState()
; ..\component\Os\Implementation\Os_Thread.h	   212   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   214  OS_LOCAL_INLINE P2VAR(Os_IntApiStateType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   215  Os_ThreadGetInterruptApiState,
; ..\component\Os\Implementation\Os_Thread.h	   216  (
; ..\component\Os\Implementation\Os_Thread.h	   217    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   218  ))
; ..\component\Os\Implementation\Os_Thread.h	   219  {
; ..\component\Os\Implementation\Os_Thread.h	   220    return Thread->IntApiState;
; ..\component\Os\Implementation\Os_Thread.h	   221  }
; ..\component\Os\Implementation\Os_Thread.h	   222  
; ..\component\Os\Implementation\Os_Thread.h	   223  
; ..\component\Os\Implementation\Os_Thread.h	   224  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   225   *  Os_ThreadGetCore()
; ..\component\Os\Implementation\Os_Thread.h	   226   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   227  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   228  OS_LOCAL_INLINE P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   229  Os_ThreadGetCore,
; ..\component\Os\Implementation\Os_Thread.h	   230  (
; ..\component\Os\Implementation\Os_Thread.h	   231    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   232  ))
; ..\component\Os\Implementation\Os_Thread.h	   233  {
; ..\component\Os\Implementation\Os_Thread.h	   234    return Thread->Core;
; ..\component\Os\Implementation\Os_Thread.h	   235  }
; ..\component\Os\Implementation\Os_Thread.h	   236  
; ..\component\Os\Implementation\Os_Thread.h	   237  
; ..\component\Os\Implementation\Os_Thread.h	   238  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   239   *  Os_ThreadGetCurrentType()
; ..\component\Os\Implementation\Os_Thread.h	   240   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   241  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   242  OS_ALWAYS_INLINE, Os_ThreadGetCurrentType,
; ..\component\Os\Implementation\Os_Thread.h	   243  (
; ..\component\Os\Implementation\Os_Thread.h	   244    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   245  ))
; ..\component\Os\Implementation\Os_Thread.h	   246  {
; ..\component\Os\Implementation\Os_Thread.h	   247    return Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   248  }
; ..\component\Os\Implementation\Os_Thread.h	   249  
; ..\component\Os\Implementation\Os_Thread.h	   250  
; ..\component\Os\Implementation\Os_Thread.h	   251  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   252   *  Os_ThreadGetInitialType()
; ..\component\Os\Implementation\Os_Thread.h	   253   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   254  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   255  OS_ALWAYS_INLINE, Os_ThreadGetInitialType,
; ..\component\Os\Implementation\Os_Thread.h	   256  (
; ..\component\Os\Implementation\Os_Thread.h	   257    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   258  ))
; ..\component\Os\Implementation\Os_Thread.h	   259  {
; ..\component\Os\Implementation\Os_Thread.h	   260    return Thread->InitialCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   261  }
; ..\component\Os\Implementation\Os_Thread.h	   262  
; ..\component\Os\Implementation\Os_Thread.h	   263  
; ..\component\Os\Implementation\Os_Thread.h	   264  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   265   *  Os_ThreadSwitchType()
; ..\component\Os\Implementation\Os_Thread.h	   266   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   267  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CallContextType, OS_CODE,                                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   268  OS_ALWAYS_INLINE, Os_ThreadSwitchType,
; ..\component\Os\Implementation\Os_Thread.h	   269  (
; ..\component\Os\Implementation\Os_Thread.h	   270    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   271    Os_CallContextType NextCallContext
; ..\component\Os\Implementation\Os_Thread.h	   272  ))
; ..\component\Os\Implementation\Os_Thread.h	   273  {
; ..\component\Os\Implementation\Os_Thread.h	   274    Os_CallContextType prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   275  
; ..\component\Os\Implementation\Os_Thread.h	   276    prevCallContext = Thread->Dyn->CallContext;
; ..\component\Os\Implementation\Os_Thread.h	   277    Thread->Dyn->CallContext = NextCallContext;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   278  
; ..\component\Os\Implementation\Os_Thread.h	   279    return prevCallContext;
; ..\component\Os\Implementation\Os_Thread.h	   280  }
; ..\component\Os\Implementation\Os_Thread.h	   281  
; ..\component\Os\Implementation\Os_Thread.h	   282  
; ..\component\Os\Implementation\Os_Thread.h	   283  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   284   *  Os_ThreadIsTask()
; ..\component\Os\Implementation\Os_Thread.h	   285   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   286  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   287  OS_ALWAYS_INLINE, Os_ThreadIsTask,
; ..\component\Os\Implementation\Os_Thread.h	   288  (
; ..\component\Os\Implementation\Os_Thread.h	   289    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   290  ))
; ..\component\Os\Implementation\Os_Thread.h	   291  {
; ..\component\Os\Implementation\Os_Thread.h	   292    return ((Thread->InitialCallContext == OS_CALLCONTEXT_TASK) ||                                                        /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   293            (Thread->InitialCallContext == OS_CALLCONTEXT_PRESTARTTASK));
; ..\component\Os\Implementation\Os_Thread.h	   294  }
; ..\component\Os\Implementation\Os_Thread.h	   295  
; ..\component\Os\Implementation\Os_Thread.h	   296  
; ..\component\Os\Implementation\Os_Thread.h	   297  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   298   *  Os_ThreadIsTpIsr()
; ..\component\Os\Implementation\Os_Thread.h	   299   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   300  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   301  OS_ALWAYS_INLINE, Os_ThreadIsTpIsr,
; ..\component\Os\Implementation\Os_Thread.h	   302  (
; ..\component\Os\Implementation\Os_Thread.h	   303    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   304  ))
; ..\component\Os\Implementation\Os_Thread.h	   305  {
; ..\component\Os\Implementation\Os_Thread.h	   306    return (Thread->InitialCallContext == OS_CALLCONTEXT_TPISR);                                                          /* PRQA S  4404 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   307  }
; ..\component\Os\Implementation\Os_Thread.h	   308  
; ..\component\Os\Implementation\Os_Thread.h	   309  
; ..\component\Os\Implementation\Os_Thread.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   311   *  Os_ThreadIsIsr()
; ..\component\Os\Implementation\Os_Thread.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   313  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   314  OS_ALWAYS_INLINE, Os_ThreadIsIsr,
; ..\component\Os\Implementation\Os_Thread.h	   315  (
; ..\component\Os\Implementation\Os_Thread.h	   316    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   317  ))
; ..\component\Os\Implementation\Os_Thread.h	   318  {
; ..\component\Os\Implementation\Os_Thread.h	   319    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ISR);
; ..\component\Os\Implementation\Os_Thread.h	   320  }
; ..\component\Os\Implementation\Os_Thread.h	   321  
; ..\component\Os\Implementation\Os_Thread.h	   322  
; ..\component\Os\Implementation\Os_Thread.h	   323  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   324   *  Os_ThreadIsAnyInitialContext()
; ..\component\Os\Implementation\Os_Thread.h	   325   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   326  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   327  OS_ALWAYS_INLINE, Os_ThreadIsAnyInitialContext,
; ..\component\Os\Implementation\Os_Thread.h	   328  (
; ..\component\Os\Implementation\Os_Thread.h	   329    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   330    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Thread.h	   331  ))
; ..\component\Os\Implementation\Os_Thread.h	   332  {
; ..\component\Os\Implementation\Os_Thread.h	   333    return ((Os_StdReturnType)Thread->InitialCallContext & (Os_StdReturnType)Context);
; ..\component\Os\Implementation\Os_Thread.h	   334  }
; ..\component\Os\Implementation\Os_Thread.h	   335  
; ..\component\Os\Implementation\Os_Thread.h	   336  
; ..\component\Os\Implementation\Os_Thread.h	   337  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   338   *  Os_ThreadIsShutdownHook()
; ..\component\Os\Implementation\Os_Thread.h	   339   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   341  OS_ALWAYS_INLINE, Os_ThreadIsShutdownHook,
; ..\component\Os\Implementation\Os_Thread.h	   342  (
; ..\component\Os\Implementation\Os_Thread.h	   343    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   344  ))
; ..\component\Os\Implementation\Os_Thread.h	   345  {
; ..\component\Os\Implementation\Os_Thread.h	   346    return (Thread->InitialCallContext == OS_CALLCONTEXT_SHUTDOWNHOOK);                                                   /* PRQA S  4404 */ /*  MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Thread.h	   347  }
; ..\component\Os\Implementation\Os_Thread.h	   348  
; ..\component\Os\Implementation\Os_Thread.h	   349  
; ..\component\Os\Implementation\Os_Thread.h	   350  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   351   *  Os_ThreadIsHook()
; ..\component\Os\Implementation\Os_Thread.h	   352   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   353  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   354  OS_ALWAYS_INLINE, Os_ThreadIsHook,
; ..\component\Os\Implementation\Os_Thread.h	   355  (
; ..\component\Os\Implementation\Os_Thread.h	   356    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   357  ))
; ..\component\Os\Implementation\Os_Thread.h	   358  {
; ..\component\Os\Implementation\Os_Thread.h	   359    return ((Os_StdReturnType)Thread->InitialCallContext & OS_CALLCONTEXT_ANYHOOK);
; ..\component\Os\Implementation\Os_Thread.h	   360  }
; ..\component\Os\Implementation\Os_Thread.h	   361  
; ..\component\Os\Implementation\Os_Thread.h	   362  
; ..\component\Os\Implementation\Os_Thread.h	   363  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   364   *  Os_ThreadCheckCallContext()
; ..\component\Os\Implementation\Os_Thread.h	   365   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   366  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   367  OS_ALWAYS_INLINE, Os_ThreadCheckCallContext,
; ..\component\Os\Implementation\Os_Thread.h	   368  (
; ..\component\Os\Implementation\Os_Thread.h	   369    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   370    Os_CallContextType PermittedCallContext
; ..\component\Os\Implementation\Os_Thread.h	   371  ))
; ..\component\Os\Implementation\Os_Thread.h	   372  {
; ..\component\Os\Implementation\Os_Thread.h	   373    return Os_ErrExtendedCheck((Os_StdReturnType)Os_ThreadGetCurrentType(Thread) & PermittedCallContext);                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   374  }
; ..\component\Os\Implementation\Os_Thread.h	   375  
; ..\component\Os\Implementation\Os_Thread.h	   376  
; ..\component\Os\Implementation\Os_Thread.h	   377  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   378   *  Os_ThreadCheckIsCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   379   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   380  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   381  OS_ALWAYS_INLINE, Os_ThreadCheckIsCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   382  (
; ..\component\Os\Implementation\Os_Thread.h	   383    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   384    P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   385  ))
; ..\component\Os\Implementation\Os_Thread.h	   386  {
; ..\component\Os\Implementation\Os_Thread.h	   387    return Os_ErrServiceProtectionCheck((Os_StdReturnType)(Os_ThreadGetCurrentApplication(Thread) == App));               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   388  }
; ..\component\Os\Implementation\Os_Thread.h	   389  
; ..\component\Os\Implementation\Os_Thread.h	   390  
; ..\component\Os\Implementation\Os_Thread.h	   391  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   392   *  Os_ThreadGetOwnerApplication()
; ..\component\Os\Implementation\Os_Thread.h	   393   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   394  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   395  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	   396  Os_ThreadGetOwnerApplication,
; ..\component\Os\Implementation\Os_Thread.h	   397  (
; ..\component\Os\Implementation\Os_Thread.h	   398    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   399  ))
; ..\component\Os\Implementation\Os_Thread.h	   400  {
; ..\component\Os\Implementation\Os_Thread.h	   401    return Thread->OwnerApplication;
; ..\component\Os\Implementation\Os_Thread.h	   402  }
; ..\component\Os\Implementation\Os_Thread.h	   403  
; ..\component\Os\Implementation\Os_Thread.h	   404  
; ..\component\Os\Implementation\Os_Thread.h	   405  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   406   *  Os_ThreadGetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   407   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   408  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   409  OS_LOCAL_INLINE P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_ThreadGetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   410  (
; ..\component\Os\Implementation\Os_Thread.h	   411    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   412  ))
; ..\component\Os\Implementation\Os_Thread.h	   413  {
; ..\component\Os\Implementation\Os_Thread.h	   414    return Thread->Dyn->Application;
; ..\component\Os\Implementation\Os_Thread.h	   415  }
; ..\component\Os\Implementation\Os_Thread.h	   416  
; ..\component\Os\Implementation\Os_Thread.h	   417  
; ..\component\Os\Implementation\Os_Thread.h	   418  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   419   *  Os_ThreadSetCurrentApplication()
; ..\component\Os\Implementation\Os_Thread.h	   420   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   421  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   422  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetCurrentApplication,
; ..\component\Os\Implementation\Os_Thread.h	   423  (
; ..\component\Os\Implementation\Os_Thread.h	   424    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	   425    P2CONST(Os_AppConfigType, TYPEDEF, OS_CONST) App
; ..\component\Os\Implementation\Os_Thread.h	   426  ))
; ..\component\Os\Implementation\Os_Thread.h	   427  {
; ..\component\Os\Implementation\Os_Thread.h	   428    Thread->Dyn->Application = App;                                                                                       /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   429  }
; ..\component\Os\Implementation\Os_Thread.h	   430  
; ..\component\Os\Implementation\Os_Thread.h	   431  
; ..\component\Os\Implementation\Os_Thread.h	   432  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   433   *  Os_ThreadHasResourcesLocked()
; ..\component\Os\Implementation\Os_Thread.h	   434   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   435  /*!
; ..\component\Os\Implementation\Os_Thread.h	   436   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   437   *
; ..\component\Os\Implementation\Os_Thread.h	   438   *
; ..\component\Os\Implementation\Os_Thread.h	   439   *
; ..\component\Os\Implementation\Os_Thread.h	   440   */
; ..\component\Os\Implementation\Os_Thread.h	   441  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   442  OS_ALWAYS_INLINE, Os_ThreadHasResourcesLocked,
; ..\component\Os\Implementation\Os_Thread.h	   443  (
; ..\component\Os\Implementation\Os_Thread.h	   444    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   445  ))
; ..\component\Os\Implementation\Os_Thread.h	   446  {
; ..\component\Os\Implementation\Os_Thread.h	   447    Os_StdReturnType hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   448    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   449  
; ..\component\Os\Implementation\Os_Thread.h	   450    hasResources = 0;
; ..\component\Os\Implementation\Os_Thread.h	   451    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   452  
; ..\component\Os\Implementation\Os_Thread.h	   453    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   454    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */
; ..\component\Os\Implementation\Os_Thread.h	   455    {
; ..\component\Os\Implementation\Os_Thread.h	   456      /* #20 If one resource is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   457      if(Os_LockListIsTopRes(&it) != 0u)                                                                                  /* SBSW_OS_TRD_LOCKLISTISTOPRES_001 */
; ..\component\Os\Implementation\Os_Thread.h	   458      {
; ..\component\Os\Implementation\Os_Thread.h	   459        hasResources = 1;
; ..\component\Os\Implementation\Os_Thread.h	   460        break;
; ..\component\Os\Implementation\Os_Thread.h	   461      }
; ..\component\Os\Implementation\Os_Thread.h	   462  
; ..\component\Os\Implementation\Os_Thread.h	   463      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   464    }
; ..\component\Os\Implementation\Os_Thread.h	   465  
; ..\component\Os\Implementation\Os_Thread.h	   466    return hasResources;
; ..\component\Os\Implementation\Os_Thread.h	   467  }
; ..\component\Os\Implementation\Os_Thread.h	   468  
; ..\component\Os\Implementation\Os_Thread.h	   469  
; ..\component\Os\Implementation\Os_Thread.h	   470  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   471   *  Os_ThreadHasSpinlockLocked()
; ..\component\Os\Implementation\Os_Thread.h	   472   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   473  /*!
; ..\component\Os\Implementation\Os_Thread.h	   474   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   475   *
; ..\component\Os\Implementation\Os_Thread.h	   476   *
; ..\component\Os\Implementation\Os_Thread.h	   477   *
; ..\component\Os\Implementation\Os_Thread.h	   478   */
; ..\component\Os\Implementation\Os_Thread.h	   479  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   480  OS_ALWAYS_INLINE, Os_ThreadHasSpinlockLocked,
; ..\component\Os\Implementation\Os_Thread.h	   481  (
; ..\component\Os\Implementation\Os_Thread.h	   482    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   483  ))
; ..\component\Os\Implementation\Os_Thread.h	   484  {
; ..\component\Os\Implementation\Os_Thread.h	   485    Os_StdReturnType hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   486    Os_LockListType it;
; ..\component\Os\Implementation\Os_Thread.h	   487  
; ..\component\Os\Implementation\Os_Thread.h	   488    hasSpinlocks = 0;
; ..\component\Os\Implementation\Os_Thread.h	   489    it = Thread->Dyn->Locks;
; ..\component\Os\Implementation\Os_Thread.h	   490  
; ..\component\Os\Implementation\Os_Thread.h	   491  
; ..\component\Os\Implementation\Os_Thread.h	   492    /* #10 Search the complete lock list */
; ..\component\Os\Implementation\Os_Thread.h	   493    while(OS_UNLIKELY(Os_LockListIsEmpty(&it) == 0u))                                                                     /* SBSW_OS_TRD_LOCKLISTISEMPTY_001 */ /* COV_OS_HALPLATFORMTESTEDASMULTICORE */
; ..\component\Os\Implementation\Os_Thread.h	   494    {
; ..\component\Os\Implementation\Os_Thread.h	   495      /* #20 If one spinlock is found, stop searching and return 1 (0 in any other case). */
; ..\component\Os\Implementation\Os_Thread.h	   496      if(Os_LockListIsTopSpinlock(&it) != 0u)                                                                             /* SBSW_OS_TRD_LOCKLISTISTOPSPINLOCK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   497      {
; ..\component\Os\Implementation\Os_Thread.h	   498        hasSpinlocks = 1;
; ..\component\Os\Implementation\Os_Thread.h	   499        break;
; ..\component\Os\Implementation\Os_Thread.h	   500      }
; ..\component\Os\Implementation\Os_Thread.h	   501  
; ..\component\Os\Implementation\Os_Thread.h	   502      it = Os_LockListNext(&it);                                                                                          /* SBSW_OS_TRD_LOCKLISTNEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   503    }
; ..\component\Os\Implementation\Os_Thread.h	   504  
; ..\component\Os\Implementation\Os_Thread.h	   505    return hasSpinlocks;
; ..\component\Os\Implementation\Os_Thread.h	   506  }
; ..\component\Os\Implementation\Os_Thread.h	   507  
; ..\component\Os\Implementation\Os_Thread.h	   508  
; ..\component\Os\Implementation\Os_Thread.h	   509  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   510   *  Os_ThreadCheckResourcesReleased()
; ..\component\Os\Implementation\Os_Thread.h	   511   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   512  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   513  OS_ALWAYS_INLINE, Os_ThreadCheckResourcesReleased,
; ..\component\Os\Implementation\Os_Thread.h	   514  (
; ..\component\Os\Implementation\Os_Thread.h	   515    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   516  ))
; ..\component\Os\Implementation\Os_Thread.h	   517  {
; ..\component\Os\Implementation\Os_Thread.h	   518    return Os_ErrExtendedCheck(Os_ThreadHasResourcesLocked(Thread) == 0u);                                                /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   519  }
; ..\component\Os\Implementation\Os_Thread.h	   520  
; ..\component\Os\Implementation\Os_Thread.h	   521  
; ..\component\Os\Implementation\Os_Thread.h	   522  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   523   *  Os_ThreadCheckSpinlocksReleased()
; ..\component\Os\Implementation\Os_Thread.h	   524   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   525  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   526  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCheckSpinlocksReleased,
; ..\component\Os\Implementation\Os_Thread.h	   527  (
; ..\component\Os\Implementation\Os_Thread.h	   528    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   529  ))
; ..\component\Os\Implementation\Os_Thread.h	   530  {
; ..\component\Os\Implementation\Os_Thread.h	   531    return Os_ErrExtendedCheck(Os_ThreadHasSpinlockLocked(Thread) == 0u);                                                 /* PRQA S 4404 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   532  }
; ..\component\Os\Implementation\Os_Thread.h	   533  
; ..\component\Os\Implementation\Os_Thread.h	   534  
; ..\component\Os\Implementation\Os_Thread.h	   535  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   536   *  Os_ThreadCheckAreInterruptsEnabled()
; ..\component\Os\Implementation\Os_Thread.h	   537   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   538  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   539  OS_ALWAYS_INLINE, Os_ThreadCheckAreInterruptsEnabled,
; ..\component\Os\Implementation\Os_Thread.h	   540  (
; ..\component\Os\Implementation\Os_Thread.h	   541    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   542  ))
; ..\component\Os\Implementation\Os_Thread.h	   543  {
; ..\component\Os\Implementation\Os_Thread.h	   544    return Os_InterruptCheckEnabled(Os_ThreadGetInterruptApiState(Thread));                                               /* SBSW_OS_TRD_INTERRUPTCHECKENABLED_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   545  }
; ..\component\Os\Implementation\Os_Thread.h	   546  
; ..\component\Os\Implementation\Os_Thread.h	   547  
; ..\component\Os\Implementation\Os_Thread.h	   548  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   549   *  Os_ThreadSpinlockForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   550   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   551  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   552  Os_ThreadSpinlockForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   553  (
; ..\component\Os\Implementation\Os_Thread.h	   554    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   555  ))
; ..\component\Os\Implementation\Os_Thread.h	   556  {
; ..\component\Os\Implementation\Os_Thread.h	   557    Os_SpinlockForciblyReleaseThreadLocks(Thread);                                                                        /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   558  }
; ..\component\Os\Implementation\Os_Thread.h	   559  
; ..\component\Os\Implementation\Os_Thread.h	   560  
; ..\component\Os\Implementation\Os_Thread.h	   561  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   562   *  Os_ThreadResourceForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   563   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   564  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   565  Os_ThreadResourceForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   566  (
; ..\component\Os\Implementation\Os_Thread.h	   567    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   568  ))
; ..\component\Os\Implementation\Os_Thread.h	   569  {
; ..\component\Os\Implementation\Os_Thread.h	   570    Os_ResourceForciblyReleaseLocks(Thread);                                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   571  }
; ..\component\Os\Implementation\Os_Thread.h	   572  
; ..\component\Os\Implementation\Os_Thread.h	   573  
; ..\component\Os\Implementation\Os_Thread.h	   574  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   575   *  Os_ThreadLocksForceRelease()
; ..\component\Os\Implementation\Os_Thread.h	   576   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   577  /*!
; ..\component\Os\Implementation\Os_Thread.h	   578   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   579   *
; ..\component\Os\Implementation\Os_Thread.h	   580   *
; ..\component\Os\Implementation\Os_Thread.h	   581   *
; ..\component\Os\Implementation\Os_Thread.h	   582   */
; ..\component\Os\Implementation\Os_Thread.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   584  Os_ThreadLocksForceRelease,
; ..\component\Os\Implementation\Os_Thread.h	   585  (
; ..\component\Os\Implementation\Os_Thread.h	   586    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   587  ))
; ..\component\Os\Implementation\Os_Thread.h	   588  {
; ..\component\Os\Implementation\Os_Thread.h	   589    /* #10 Clean up the interrupt state. */
; ..\component\Os\Implementation\Os_Thread.h	   590    Os_InterruptCleanup(Thread->IntApiState);                                                                             /* SBSW_OS_TRD_INTERRUPTCLEANUP_001 */
; ..\component\Os\Implementation\Os_Thread.h	   591  
; ..\component\Os\Implementation\Os_Thread.h	   592    /* #20 Release all locks. */
; ..\component\Os\Implementation\Os_Thread.h	   593    Os_ThreadResourceForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   594    Os_ThreadSpinlockForceRelease(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   595  }
; ..\component\Os\Implementation\Os_Thread.h	   596  
; ..\component\Os\Implementation\Os_Thread.h	   597  
; ..\component\Os\Implementation\Os_Thread.h	   598  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   599   *  Os_ThreadClassInit()
; ..\component\Os\Implementation\Os_Thread.h	   600   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   601  /*!
; ..\component\Os\Implementation\Os_Thread.h	   602   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   603   *
; ..\component\Os\Implementation\Os_Thread.h	   604   *
; ..\component\Os\Implementation\Os_Thread.h	   605   */
; ..\component\Os\Implementation\Os_Thread.h	   606  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   607  Os_ThreadClassInit,
; ..\component\Os\Implementation\Os_Thread.h	   608  (
; ..\component\Os\Implementation\Os_Thread.h	   609    P2VAR(Os_ThreadClassType, AUTOMATIC, OS_CONST) ThreadClass
; ..\component\Os\Implementation\Os_Thread.h	   610  ))
; ..\component\Os\Implementation\Os_Thread.h	   611  {
; ..\component\Os\Implementation\Os_Thread.h	   612    /* #10 Fetch initial FPU context from HAL if FPU context is enabled. */
; ..\component\Os\Implementation\Os_Thread.h	   613    if(Os_ThreadIsFpuContextEnabled() != 0u)                                                                              /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Thread.h	   614    {
; ..\component\Os\Implementation\Os_Thread.h	   615      Os_Hal_ContextFetchInitialFpuContext(&(ThreadClass->InitialFpuContext));                                            /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   616    }
; ..\component\Os\Implementation\Os_Thread.h	   617  }
; ..\component\Os\Implementation\Os_Thread.h	   618  
; ..\component\Os\Implementation\Os_Thread.h	   619  
; ..\component\Os\Implementation\Os_Thread.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   621   *  Os_ThreadInit()
; ..\component\Os\Implementation\Os_Thread.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   623  /*!
; ..\component\Os\Implementation\Os_Thread.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   625   *
; ..\component\Os\Implementation\Os_Thread.h	   626   *
; ..\component\Os\Implementation\Os_Thread.h	   627   *
; ..\component\Os\Implementation\Os_Thread.h	   628   *
; ..\component\Os\Implementation\Os_Thread.h	   629   *
; ..\component\Os\Implementation\Os_Thread.h	   630   *
; ..\component\Os\Implementation\Os_Thread.h	   631   *
; ..\component\Os\Implementation\Os_Thread.h	   632   *
; ..\component\Os\Implementation\Os_Thread.h	   633   *
; ..\component\Os\Implementation\Os_Thread.h	   634   *
; ..\component\Os\Implementation\Os_Thread.h	   635   *
; ..\component\Os\Implementation\Os_Thread.h	   636   *
; ..\component\Os\Implementation\Os_Thread.h	   637   *
; ..\component\Os\Implementation\Os_Thread.h	   638   */
; ..\component\Os\Implementation\Os_Thread.h	   639  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   640  Os_ThreadInit,
; ..\component\Os\Implementation\Os_Thread.h	   641  (
; ..\component\Os\Implementation\Os_Thread.h	   642    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   643  ))
; ..\component\Os\Implementation\Os_Thread.h	   644  {
; ..\component\Os\Implementation\Os_Thread.h	   645    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   646    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   647  
; ..\component\Os\Implementation\Os_Thread.h	   648    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   649    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   650  
; ..\component\Os\Implementation\Os_Thread.h	   651    /* #30 Initialize service call list. */
; ..\component\Os\Implementation\Os_Thread.h	   652    Os_ServiceCallsInit(&(Thread->Dyn->ServiceCalls));                                                                    /* SBSW_OS_TRD_SERVICECALLSINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   653  
; ..\component\Os\Implementation\Os_Thread.h	   654    /* #40 Initialize the lock list. */
; ..\component\Os\Implementation\Os_Thread.h	   655    Os_LockListInit(&(Thread->Dyn->Locks));                                                                               /* SBSW_OS_TRD_LOCKLISTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   656  
; ..\component\Os\Implementation\Os_Thread.h	   657    /* #50 Initialize spinlock order list. */
; ..\component\Os\Implementation\Os_Thread.h	   658    Os_SpinlockListInit(Os_ThreadGetSpinlocks(Thread));                                                                   /* SBSW_OS_TRD_SPINLOCKLISTINIT_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   659  
; ..\component\Os\Implementation\Os_Thread.h	   660    /* #60 Initialize the timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   661    {
; ..\component\Os\Implementation\Os_Thread.h	   662      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   663      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   664      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) coreTp;
; ..\component\Os\Implementation\Os_Thread.h	   665  
; ..\component\Os\Implementation\Os_Thread.h	   666      core = Os_ThreadGetCore(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   667      coreTp = Os_CoreAsrGetTimingProtection(core);                                                                       /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   668      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   669  
; ..\component\Os\Implementation\Os_Thread.h	   670      Os_TpThreadInit(coreTp, currentTp);                                                                                 /* SBSW_OS_TRD_TPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   671    }
; ..\component\Os\Implementation\Os_Thread.h	   672  
; ..\component\Os\Implementation\Os_Thread.h	   673    /* #70 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   674    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   675  
; ..\component\Os\Implementation\Os_Thread.h	   676  
; ..\component\Os\Implementation\Os_Thread.h	   677    /* #80 If the given thread shall be initialized during startup: */
; ..\component\Os\Implementation\Os_Thread.h	   678    if(Thread->InitDuringStartUp != FALSE)
; ..\component\Os\Implementation\Os_Thread.h	   679    {
; ..\component\Os\Implementation\Os_Thread.h	   680      /* #90 Initialize its hardware context, so that it will start with a fresh stack and at function entry,
; ..\component\Os\Implementation\Os_Thread.h	   681       *     if resumed. */
; ..\component\Os\Implementation\Os_Thread.h	   682      Os_Hal_ContextInit(Thread->ContextConfig, Thread->Context);                                                         /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   683  
; ..\component\Os\Implementation\Os_Thread.h	   684      /* #95 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   685      Os_ThreadInitFpuContext(Thread);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   686    }
; ..\component\Os\Implementation\Os_Thread.h	   687  
; ..\component\Os\Implementation\Os_Thread.h	   688  
; ..\component\Os\Implementation\Os_Thread.h	   689    /* #100 Initialize the tracing data of this thread. */
; ..\component\Os\Implementation\Os_Thread.h	   690    Os_TraceThreadInit(Thread->Trace);                                                                                    /* SBSW_OS_TRD_TRACETHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   691  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   692  
; ..\component\Os\Implementation\Os_Thread.h	   693  
; ..\component\Os\Implementation\Os_Thread.h	   694  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   695   *  Os_ThreadInit2()
; ..\component\Os\Implementation\Os_Thread.h	   696   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   697  /*!
; ..\component\Os\Implementation\Os_Thread.h	   698   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   699   *
; ..\component\Os\Implementation\Os_Thread.h	   700   *
; ..\component\Os\Implementation\Os_Thread.h	   701   *
; ..\component\Os\Implementation\Os_Thread.h	   702   */
; ..\component\Os\Implementation\Os_Thread.h	   703  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   704  Os_ThreadInit2,
; ..\component\Os\Implementation\Os_Thread.h	   705  (
; ..\component\Os\Implementation\Os_Thread.h	   706    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   707  ))
; ..\component\Os\Implementation\Os_Thread.h	   708  {
; ..\component\Os\Implementation\Os_Thread.h	   709    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   710    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   711  
; ..\component\Os\Implementation\Os_Thread.h	   712    /* #20 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   713    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   714  }
; ..\component\Os\Implementation\Os_Thread.h	   715  
; ..\component\Os\Implementation\Os_Thread.h	   716  
; ..\component\Os\Implementation\Os_Thread.h	   717  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   718   *  Os_ThreadResetAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   719   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   720  /*!
; ..\component\Os\Implementation\Os_Thread.h	   721   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   722   *
; ..\component\Os\Implementation\Os_Thread.h	   723   *
; ..\component\Os\Implementation\Os_Thread.h	   724   *
; ..\component\Os\Implementation\Os_Thread.h	   725   *
; ..\component\Os\Implementation\Os_Thread.h	   726   *
; ..\component\Os\Implementation\Os_Thread.h	   727   *
; ..\component\Os\Implementation\Os_Thread.h	   728   *
; ..\component\Os\Implementation\Os_Thread.h	   729   *
; ..\component\Os\Implementation\Os_Thread.h	   730   *
; ..\component\Os\Implementation\Os_Thread.h	   731   *
; ..\component\Os\Implementation\Os_Thread.h	   732   *
; ..\component\Os\Implementation\Os_Thread.h	   733   *
; ..\component\Os\Implementation\Os_Thread.h	   734   */
; ..\component\Os\Implementation\Os_Thread.h	   735  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   736  Os_ThreadResetAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   737  (
; ..\component\Os\Implementation\Os_Thread.h	   738    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   739    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   740  ))
; ..\component\Os\Implementation\Os_Thread.h	   741  {
; ..\component\Os\Implementation\Os_Thread.h	   742    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   743  
; ..\component\Os\Implementation\Os_Thread.h	   744    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   745  
; ..\component\Os\Implementation\Os_Thread.h	   746    /* Check that the function is called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   747    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) != 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   748  
; ..\component\Os\Implementation\Os_Thread.h	   749    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   750    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   751  
; ..\component\Os\Implementation\Os_Thread.h	   752    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   753    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   754  
; ..\component\Os\Implementation\Os_Thread.h	   755    /* #25 Initialize the FPU context of all threads which use FPU at startup. */
; ..\component\Os\Implementation\Os_Thread.h	   756    Os_ThreadInitFpuContext(current);                                                                                     /* SBSW_OS_TRD_THREADINITFPUCONTEXT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   757  
; ..\component\Os\Implementation\Os_Thread.h	   758    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   759    {
; ..\component\Os\Implementation\Os_Thread.h	   760      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   761      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   762      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   763      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   764  
; ..\component\Os\Implementation\Os_Thread.h	   765      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   766      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   767      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   768      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   769      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   770    }
; ..\component\Os\Implementation\Os_Thread.h	   771  
; ..\component\Os\Implementation\Os_Thread.h	   772    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   773    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   774  
; ..\component\Os\Implementation\Os_Thread.h	   775    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   776    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   777  
; ..\component\Os\Implementation\Os_Thread.h	   778    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   779    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   780  
; ..\component\Os\Implementation\Os_Thread.h	   781    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   782    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   783  
; ..\component\Os\Implementation\Os_Thread.h	   784    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   785    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   786  
; ..\component\Os\Implementation\Os_Thread.h	   787    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   788    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   789  
; ..\component\Os\Implementation\Os_Thread.h	   790    /* #80 Resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   791    Os_Hal_ContextResetAndResume(current->ContextConfig, current->Context, Next->Context); /* function never returns! */  /* SBSW_OS_TRD_HAL_CONTEXTRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   792  
; ..\component\Os\Implementation\Os_Thread.h	   793    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   794    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   795  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   796  
; ..\component\Os\Implementation\Os_Thread.h	   797  
; ..\component\Os\Implementation\Os_Thread.h	   798  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   799   *  Os_ThreadStartFirst()
; ..\component\Os\Implementation\Os_Thread.h	   800   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   801  /*!
; ..\component\Os\Implementation\Os_Thread.h	   802   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   803   *
; ..\component\Os\Implementation\Os_Thread.h	   804   *
; ..\component\Os\Implementation\Os_Thread.h	   805   *
; ..\component\Os\Implementation\Os_Thread.h	   806   *
; ..\component\Os\Implementation\Os_Thread.h	   807   *
; ..\component\Os\Implementation\Os_Thread.h	   808   *
; ..\component\Os\Implementation\Os_Thread.h	   809   *
; ..\component\Os\Implementation\Os_Thread.h	   810   *
; ..\component\Os\Implementation\Os_Thread.h	   811   */
; ..\component\Os\Implementation\Os_Thread.h	   812  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   813  Os_ThreadStartFirst,
; ..\component\Os\Implementation\Os_Thread.h	   814  (
; ..\component\Os\Implementation\Os_Thread.h	   815    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   816    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   817  ))
; ..\component\Os\Implementation\Os_Thread.h	   818  {
; ..\component\Os\Implementation\Os_Thread.h	   819    P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   820    P2CONST(Os_TpThreadConfigType, TYPEDEF, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   821    P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   822  
; ..\component\Os\Implementation\Os_Thread.h	   823    configTp = Os_CoreAsrGetTimingProtection(Os_ThreadGetCore(Next));                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   824    nextTp = Os_ThreadGetTpConfig(Next);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   825    currentTp = Os_ThreadGetTpConfig(Os_CoreGetThread());                                                                 /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   826  
; ..\component\Os\Implementation\Os_Thread.h	   827    /* #10 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   828    Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                               /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   829  
; ..\component\Os\Implementation\Os_Thread.h	   830    /* #20 Set memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   831    Os_MpSwitchTo(Next->Dyn->MpAccessRights);                                                                             /* SBSW_OS_TRD_MPSWITCHTO_001 */
; ..\component\Os\Implementation\Os_Thread.h	   832  
; ..\component\Os\Implementation\Os_Thread.h	   833    /* #25 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   834    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   835  
; ..\component\Os\Implementation\Os_Thread.h	   836    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   837    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   838  
; ..\component\Os\Implementation\Os_Thread.h	   839    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   840    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   841  
; ..\component\Os\Implementation\Os_Thread.h	   842    /* #50 Update the Msr of the nest thread. */
; ..\component\Os\Implementation\Os_Thread.h	   843    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   844  
; ..\component\Os\Implementation\Os_Thread.h	   845    /* #60 Resume the hardware context of the first thread. */
; ..\component\Os\Implementation\Os_Thread.h	   846    Os_Hal_ContextFirstResume(Next->Context); /* function never returns! */                                               /* SBSW_OS_TRD_HAL_CONTEXTFIRSTRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   847  
; ..\component\Os\Implementation\Os_Thread.h	   848    /* Never reached. */
; ..\component\Os\Implementation\Os_Thread.h	   849    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   850  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   851  
; ..\component\Os\Implementation\Os_Thread.h	   852  
; ..\component\Os\Implementation\Os_Thread.h	   853  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   854   *  Os_ThreadCleanupAndResume()
; ..\component\Os\Implementation\Os_Thread.h	   855   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   856  /*!
; ..\component\Os\Implementation\Os_Thread.h	   857   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   858   *
; ..\component\Os\Implementation\Os_Thread.h	   859   *
; ..\component\Os\Implementation\Os_Thread.h	   860   *
; ..\component\Os\Implementation\Os_Thread.h	   861   *
; ..\component\Os\Implementation\Os_Thread.h	   862   *
; ..\component\Os\Implementation\Os_Thread.h	   863   *
; ..\component\Os\Implementation\Os_Thread.h	   864   *
; ..\component\Os\Implementation\Os_Thread.h	   865   *
; ..\component\Os\Implementation\Os_Thread.h	   866   *
; ..\component\Os\Implementation\Os_Thread.h	   867   *
; ..\component\Os\Implementation\Os_Thread.h	   868   *
; ..\component\Os\Implementation\Os_Thread.h	   869   */
; ..\component\Os\Implementation\Os_Thread.h	   870  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_NORETURN OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   871  Os_ThreadCleanupAndResume,
; ..\component\Os\Implementation\Os_Thread.h	   872  (
; ..\component\Os\Implementation\Os_Thread.h	   873    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	   874    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	   875  ))
; ..\component\Os\Implementation\Os_Thread.h	   876  {
; ..\component\Os\Implementation\Os_Thread.h	   877    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   878  
; ..\component\Os\Implementation\Os_Thread.h	   879    current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   880  
; ..\component\Os\Implementation\Os_Thread.h	   881    /* Check that the function is not called from a task. */
; ..\component\Os\Implementation\Os_Thread.h	   882    Os_Assert((Os_StdReturnType)(Os_ThreadIsTask(current) == 0u));                                                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_TRD_THREADISTASK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   883  
; ..\component\Os\Implementation\Os_Thread.h	   884    /* #10 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   885    Os_ServiceCallForceRelease(&(current->Dyn->ServiceCalls));                                                            /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   886  
; ..\component\Os\Implementation\Os_Thread.h	   887    /* #20 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	   888    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	   889  
; ..\component\Os\Implementation\Os_Thread.h	   890    /* #30 Tell timing protection module to resume timing protection for Next. */
; ..\component\Os\Implementation\Os_Thread.h	   891    {
; ..\component\Os\Implementation\Os_Thread.h	   892      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	   893      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	   894      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	   895      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   896  
; ..\component\Os\Implementation\Os_Thread.h	   897      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   898      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	   899      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   900      currentTp = Os_ThreadGetTpConfig(current);                                                                          /* SBSW_OS_TRD_THREADGETTPCONFIG_001 */
; ..\component\Os\Implementation\Os_Thread.h	   901      Os_TpResetAndResume(configTp, currentTp, nextTp, Next);                                                             /* SBSW_OS_TRD_TPRESETANDRESUME_001 */
; ..\component\Os\Implementation\Os_Thread.h	   902    }
; ..\component\Os\Implementation\Os_Thread.h	   903  
; ..\component\Os\Implementation\Os_Thread.h	   904    /* #40 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	   905    Os_MpSwitch(current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	   906  
; ..\component\Os\Implementation\Os_Thread.h	   907    /* #45 Set the current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   908    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   909  
; ..\component\Os\Implementation\Os_Thread.h	   910    /* #50 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	   911    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   912  
; ..\component\Os\Implementation\Os_Thread.h	   913    /* #55 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	   914    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   915  
; ..\component\Os\Implementation\Os_Thread.h	   916    /* #60 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	   917    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	   918  
; ..\component\Os\Implementation\Os_Thread.h	   919    /* #70 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   920    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	   921  
; ..\component\Os\Implementation\Os_Thread.h	   922    /* #80 Cleanup the current hardware context and resume the hardware context of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	   923    Os_Hal_ContextReturn(current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTRETURN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   924  
; ..\component\Os\Implementation\Os_Thread.h	   925    /* Never reached */
; ..\component\Os\Implementation\Os_Thread.h	   926    Os_ErrKernelPanic(); /* function never returns! */                                                                    /* PRQA S 2880 */ /* MD_Os_Rule2.1_2880_NonReturning */
; ..\component\Os\Implementation\Os_Thread.h	   927  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	   928  
; ..\component\Os\Implementation\Os_Thread.h	   929  
; ..\component\Os\Implementation\Os_Thread.h	   930  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	   931   *  Os_ThreadKill()
; ..\component\Os\Implementation\Os_Thread.h	   932   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	   933  /*!
; ..\component\Os\Implementation\Os_Thread.h	   934   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	   935   *
; ..\component\Os\Implementation\Os_Thread.h	   936   *
; ..\component\Os\Implementation\Os_Thread.h	   937   *
; ..\component\Os\Implementation\Os_Thread.h	   938   *
; ..\component\Os\Implementation\Os_Thread.h	   939   *
; ..\component\Os\Implementation\Os_Thread.h	   940   *
; ..\component\Os\Implementation\Os_Thread.h	   941   *
; ..\component\Os\Implementation\Os_Thread.h	   942   *
; ..\component\Os\Implementation\Os_Thread.h	   943   *
; ..\component\Os\Implementation\Os_Thread.h	   944   *
; ..\component\Os\Implementation\Os_Thread.h	   945   *
; ..\component\Os\Implementation\Os_Thread.h	   946   *
; ..\component\Os\Implementation\Os_Thread.h	   947   *
; ..\component\Os\Implementation\Os_Thread.h	   948   */
; ..\component\Os\Implementation\Os_Thread.h	   949  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	   950  Os_ThreadKill,
; ..\component\Os\Implementation\Os_Thread.h	   951  (
; ..\component\Os\Implementation\Os_Thread.h	   952    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	   953  ))
; ..\component\Os\Implementation\Os_Thread.h	   954  {
; ..\component\Os\Implementation\Os_Thread.h	   955    /* #10 Initialize current application. */
; ..\component\Os\Implementation\Os_Thread.h	   956    Thread->Dyn->Application = Thread->OwnerApplication;                                                                  /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   957  
; ..\component\Os\Implementation\Os_Thread.h	   958    /* #20 Initialize current context. */
; ..\component\Os\Implementation\Os_Thread.h	   959    Thread->Dyn->CallContext = Thread->InitialCallContext;                                                                /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	   960  
; ..\component\Os\Implementation\Os_Thread.h	   961    /* #30 Release all services called by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   962    Os_ServiceCallForceRelease(&(Thread->Dyn->ServiceCalls));                                                             /* SBSW_OS_TRD_SERVICECALLFORCERELEASE_001 */
; ..\component\Os\Implementation\Os_Thread.h	   963  
; ..\component\Os\Implementation\Os_Thread.h	   964    /* #40 Release all locks and resources, which are hold by the thread. */
; ..\component\Os\Implementation\Os_Thread.h	   965    Os_ThreadLocksForceRelease(Thread);                                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   966  
; ..\component\Os\Implementation\Os_Thread.h	   967    /* #50 Reset timing protection. */
; ..\component\Os\Implementation\Os_Thread.h	   968    {
; ..\component\Os\Implementation\Os_Thread.h	   969      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	   970  
; ..\component\Os\Implementation\Os_Thread.h	   971      currentTp = Os_ThreadGetTpConfig(Thread);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   972  
; ..\component\Os\Implementation\Os_Thread.h	   973      Os_TpThreadKill(currentTp);                                                                                         /* SBSW_OS_TRD_TPTHREADKILL_001 */
; ..\component\Os\Implementation\Os_Thread.h	   974    }
; ..\component\Os\Implementation\Os_Thread.h	   975  
; ..\component\Os\Implementation\Os_Thread.h	   976    /* #60 Initialize the memory protection. */
; ..\component\Os\Implementation\Os_Thread.h	   977    Os_MpThreadInit(Thread->MpAccessRightsInitial, &(Thread->Dyn->MpAccessRights));                                       /* SBSW_OS_TRD_MPTHREADINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	   978  
; ..\component\Os\Implementation\Os_Thread.h	   979  
; ..\component\Os\Implementation\Os_Thread.h	   980    /* #70 If the given thread is not the current thread: */
; ..\component\Os\Implementation\Os_Thread.h	   981    {
; ..\component\Os\Implementation\Os_Thread.h	   982      P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) current;
; ..\component\Os\Implementation\Os_Thread.h	   983  
; ..\component\Os\Implementation\Os_Thread.h	   984      current = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Thread.h	   985  
; ..\component\Os\Implementation\Os_Thread.h	   986      if(OS_LIKELY(Thread != current))
; ..\component\Os\Implementation\Os_Thread.h	   987      {
; ..\component\Os\Implementation\Os_Thread.h	   988        /* #80 If the given thread is a task: */
; ..\component\Os\Implementation\Os_Thread.h	   989        if(Os_ThreadIsTask(Thread) != 0u)                                                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   990        {
; ..\component\Os\Implementation\Os_Thread.h	   991          /* #90 Reset its hardware context. */
; ..\component\Os\Implementation\Os_Thread.h	   992          Os_Hal_ContextReset(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTRESET_001 */
; ..\component\Os\Implementation\Os_Thread.h	   993          Os_ThreadInitFpuContext(Thread);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	   994        }
; ..\component\Os\Implementation\Os_Thread.h	   995        /* #100 Otherwise: */
; ..\component\Os\Implementation\Os_Thread.h	   996        else
; ..\component\Os\Implementation\Os_Thread.h	   997        {
; ..\component\Os\Implementation\Os_Thread.h	   998          Os_Hal_IntStateType currentIntState;
; ..\component\Os\Implementation\Os_Thread.h	   999  
; ..\component\Os\Implementation\Os_Thread.h	  1000          /* #110 Abort the threads context. Execute the return function the next time it will be resumed. */
; ..\component\Os\Implementation\Os_Thread.h	  1001          Os_Hal_ContextAbort(Thread->ContextConfig, Thread->Context);                                                    /* SBSW_OS_TRD_HAL_CONTEXTABORT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1002  
; ..\component\Os\Implementation\Os_Thread.h	  1003          /* #120 Set the interrupt state for the context used after the abort. */
; ..\component\Os\Implementation\Os_Thread.h	  1004          Os_Hal_IntGetInterruptState(&currentIntState);                                                                  /* SBSW_OS_FC_POINTER2LOCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1005          Os_Hal_ContextSetInterruptState(Thread->Context, &currentIntState);                                             /* SBSW_OS_TRD_HAL_CONTEXTSETINTERRUPTSTATE_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1006        }
; ..\component\Os\Implementation\Os_Thread.h	  1007      }
; ..\component\Os\Implementation\Os_Thread.h	  1008    }
; ..\component\Os\Implementation\Os_Thread.h	  1009  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1010  
; ..\component\Os\Implementation\Os_Thread.h	  1011  
; ..\component\Os\Implementation\Os_Thread.h	  1012  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1013   *  Os_ThreadSwitch()
; ..\component\Os\Implementation\Os_Thread.h	  1014   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1015  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1016   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1017   *
; ..\component\Os\Implementation\Os_Thread.h	  1018   *
; ..\component\Os\Implementation\Os_Thread.h	  1019   *
; ..\component\Os\Implementation\Os_Thread.h	  1020   *
; ..\component\Os\Implementation\Os_Thread.h	  1021   *
; ..\component\Os\Implementation\Os_Thread.h	  1022   *
; ..\component\Os\Implementation\Os_Thread.h	  1023   *
; ..\component\Os\Implementation\Os_Thread.h	  1024   *
; ..\component\Os\Implementation\Os_Thread.h	  1025   *
; ..\component\Os\Implementation\Os_Thread.h	  1026   *
; ..\component\Os\Implementation\Os_Thread.h	  1027   *
; ..\component\Os\Implementation\Os_Thread.h	  1028   */
; ..\component\Os\Implementation\Os_Thread.h	  1029  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1030  Os_ThreadSwitch,
; ..\component\Os\Implementation\Os_Thread.h	  1031  (
; ..\component\Os\Implementation\Os_Thread.h	  1032    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1033    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1034    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1035  ))
; ..\component\Os\Implementation\Os_Thread.h	  1036  {
; ..\component\Os\Implementation\Os_Thread.h	  1037    /* #10 Perform stack overflow check. */
; ..\component\Os\Implementation\Os_Thread.h	  1038    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1039  
; ..\component\Os\Implementation\Os_Thread.h	  1040    /* #15 Store FPU context of current thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1041    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1042  
; ..\component\Os\Implementation\Os_Thread.h	  1043    /* #20 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1044    {
; ..\component\Os\Implementation\Os_Thread.h	  1045      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1046      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1047      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1048      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1049  
; ..\component\Os\Implementation\Os_Thread.h	  1050      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1051      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1052      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1053      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1054      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1055    }
; ..\component\Os\Implementation\Os_Thread.h	  1056  
; ..\component\Os\Implementation\Os_Thread.h	  1057    /* #30 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1058    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1059  
; ..\component\Os\Implementation\Os_Thread.h	  1060    /* #35 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1061    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1062  
; ..\component\Os\Implementation\Os_Thread.h	  1063    /* #40 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1064    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1065  
; ..\component\Os\Implementation\Os_Thread.h	  1066    /* #45 Restore FPU context of next thread if needed. */
; ..\component\Os\Implementation\Os_Thread.h	  1067    Os_ThreadRestoreFpuContext(Next);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1068  
; ..\component\Os\Implementation\Os_Thread.h	  1069    /* #50 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1070    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1071  
; ..\component\Os\Implementation\Os_Thread.h	  1072    /* #60 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1073    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1074  
; ..\component\Os\Implementation\Os_Thread.h	  1075    /* #70 Perform a hardware context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1076    Os_Hal_ContextSwitch(Current->Context, Next->Context);                                                                /* SBSW_OS_TRD_HAL_CONTEXTSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1077  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1078  
; ..\component\Os\Implementation\Os_Thread.h	  1079  
; ..\component\Os\Implementation\Os_Thread.h	  1080  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1081   *  Os_ThreadSuspendAndStart()
; ..\component\Os\Implementation\Os_Thread.h	  1082   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1083  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1084   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1085   *
; ..\component\Os\Implementation\Os_Thread.h	  1086   *
; ..\component\Os\Implementation\Os_Thread.h	  1087   *
; ..\component\Os\Implementation\Os_Thread.h	  1088   *
; ..\component\Os\Implementation\Os_Thread.h	  1089   *
; ..\component\Os\Implementation\Os_Thread.h	  1090   *
; ..\component\Os\Implementation\Os_Thread.h	  1091   *
; ..\component\Os\Implementation\Os_Thread.h	  1092   *
; ..\component\Os\Implementation\Os_Thread.h	  1093   *
; ..\component\Os\Implementation\Os_Thread.h	  1094   *
; ..\component\Os\Implementation\Os_Thread.h	  1095   *
; ..\component\Os\Implementation\Os_Thread.h	  1096   *
; ..\component\Os\Implementation\Os_Thread.h	  1097   *
; ..\component\Os\Implementation\Os_Thread.h	  1098   */
; ..\component\Os\Implementation\Os_Thread.h	  1099  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1100  Os_ThreadSuspendAndStart,
; ..\component\Os\Implementation\Os_Thread.h	  1101  (
; ..\component\Os\Implementation\Os_Thread.h	  1102    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Current,
; ..\component\Os\Implementation\Os_Thread.h	  1103    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Next,
; ..\component\Os\Implementation\Os_Thread.h	  1104    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1105  ))
; ..\component\Os\Implementation\Os_Thread.h	  1106  {
; ..\component\Os\Implementation\Os_Thread.h	  1107    Os_StackOverflowCheck();
; ..\component\Os\Implementation\Os_Thread.h	  1108  
; ..\component\Os\Implementation\Os_Thread.h	  1109    /* #10 Tell timing protection module to switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1110    {
; ..\component\Os\Implementation\Os_Thread.h	  1111      P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) core;
; ..\component\Os\Implementation\Os_Thread.h	  1112      P2CONST(Os_TpConfigType, AUTOMATIC, OS_CONST) configTp;
; ..\component\Os\Implementation\Os_Thread.h	  1113      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) currentTp;
; ..\component\Os\Implementation\Os_Thread.h	  1114      P2CONST(Os_TpThreadConfigType, AUTOMATIC, OS_CONST) nextTp;
; ..\component\Os\Implementation\Os_Thread.h	  1115  
; ..\component\Os\Implementation\Os_Thread.h	  1116      core = Os_ThreadGetCore(Next);                                                                                      /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1117      configTp = Os_CoreAsrGetTimingProtection(core);                                                                     /* SBSW_OS_TRD_COREASRGETTIMINGPROTECTION_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1118      currentTp = Os_ThreadGetTpConfig(Current);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1119      nextTp = Os_ThreadGetTpConfig(Next);                                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1120      Os_TpSwitch(configTp, currentTp, nextTp, Next);                                                                     /* SBSW_OS_TRD_TPSWITCH_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1121    }
; ..\component\Os\Implementation\Os_Thread.h	  1122  
; ..\component\Os\Implementation\Os_Thread.h	  1123    /* #15 Store FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1124    Os_ThreadStoreFpuContext(Current);                                                                                    /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1125  
; ..\component\Os\Implementation\Os_Thread.h	  1126    /* #20 Resume memory protection access rights of Next. */
; ..\component\Os\Implementation\Os_Thread.h	  1127    Os_MpSwitch(Current->Dyn->MpAccessRights, Next->Dyn->MpAccessRights);                                                 /* SBSW_OS_TRD_MPSWITCH_002 */
; ..\component\Os\Implementation\Os_Thread.h	  1128  
; ..\component\Os\Implementation\Os_Thread.h	  1129    /* #25 Switch current thread pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1130    Os_CoreSetThread(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1131  
; ..\component\Os\Implementation\Os_Thread.h	  1132    /* #30 Call PreThreadHook. */
; ..\component\Os\Implementation\Os_Thread.h	  1133    Os_ThreadCallPreThreadHook(Next, CallPreThreadHook);                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1134  
; ..\component\Os\Implementation\Os_Thread.h	  1135    /* #40 Set the current stack pointer. */
; ..\component\Os\Implementation\Os_Thread.h	  1136    Os_CoreSetCurrentStack(Next->Stack, Next->Core);                                                                      /* SBSW_OS_TRD_CORESETCURRENTSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1137  
; ..\component\Os\Implementation\Os_Thread.h	  1138    /* #50 Prepare context of next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1139    Os_Hal_ContextInit(Next->ContextConfig, Next->Context);                                                               /* SBSW_OS_TRD_HAL_CONTEXTINIT_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1140  
; ..\component\Os\Implementation\Os_Thread.h	  1141    /* #60 Setup FPU for next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1142    Os_ThreadInitFpu(Next);                                                                                               /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1143  
; ..\component\Os\Implementation\Os_Thread.h	  1144    /* #70 Set parameter for the entry function, currently only used for hooks (hook thread pointer). */
; ..\component\Os\Implementation\Os_Thread.h	  1145    Os_Hal_ContextSetParameter(Next->Context, Next);                                                                      /* PRQA S 0315 */ /* MD_Os_Dir1.1_0315 */ /* SBSW_OS_TRD_HAL_CONTEXTSETPARAMETER_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1146  
; ..\component\Os\Implementation\Os_Thread.h	  1147    /* #80 Update the Msr of the next thread. */
; ..\component\Os\Implementation\Os_Thread.h	  1148    Os_Hal_ContextSetUserMsrBits(Next->Context);                                                                          /* SBSW_OS_TRD_HAL_CONTEXTSETUSERMSRBITS_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1149  
; ..\component\Os\Implementation\Os_Thread.h	  1150    /* #90 Perform context switch. */
; ..\component\Os\Implementation\Os_Thread.h	  1151    Os_Hal_ContextCallOnStack(Current->Context, Next->Context);                                                           /* SBSW_OS_TRD_HAL_CONTEXTCALLONSTACK_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1152  
; ..\component\Os\Implementation\Os_Thread.h	  1153    /* #100 Restore FPU context if needed */
; ..\component\Os\Implementation\Os_Thread.h	  1154    Os_ThreadRestoreFpuContext(Current);                                                                                  /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1155  }                                                                                                                       /* PRQA S 6050 */ /* MD_Os_STCAL */
; ..\component\Os\Implementation\Os_Thread.h	  1156  
; ..\component\Os\Implementation\Os_Thread.h	  1157  
; ..\component\Os\Implementation\Os_Thread.h	  1158  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1159   *  Os_ThreadGetAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1160   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1161  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1162  P2CONST(Os_AccessCheckConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1163  Os_ThreadGetAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1164  (
; ..\component\Os\Implementation\Os_Thread.h	  1165    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1166  ))
; ..\component\Os\Implementation\Os_Thread.h	  1167  {
; ..\component\Os\Implementation\Os_Thread.h	  1168    return Thread->AccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1169  }
; ..\component\Os\Implementation\Os_Thread.h	  1170  
; ..\component\Os\Implementation\Os_Thread.h	  1171  
; ..\component\Os\Implementation\Os_Thread.h	  1172  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1173   *  Os_ThreadGetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1174   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1175  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1176  P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Thread.h	  1177  Os_ThreadGetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1178  (
; ..\component\Os\Implementation\Os_Thread.h	  1179    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Thread.h	  1180  ))
; ..\component\Os\Implementation\Os_Thread.h	  1181  {
; ..\component\Os\Implementation\Os_Thread.h	  1182    return Thread->Dyn->MpAccessRights;
; ..\component\Os\Implementation\Os_Thread.h	  1183  }
; ..\component\Os\Implementation\Os_Thread.h	  1184  
; ..\component\Os\Implementation\Os_Thread.h	  1185  
; ..\component\Os\Implementation\Os_Thread.h	  1186  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1187   *  Os_ThreadSetMpAccessRights()
; ..\component\Os\Implementation\Os_Thread.h	  1188   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1189  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1190  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1191  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetMpAccessRights,
; ..\component\Os\Implementation\Os_Thread.h	  1192  (
; ..\component\Os\Implementation\Os_Thread.h	  1193    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1194    P2CONST(Os_MpAccessRightsType, AUTOMATIC, OS_CONST) AccessRights
; ..\component\Os\Implementation\Os_Thread.h	  1195  ))
; ..\component\Os\Implementation\Os_Thread.h	  1196  {
; ..\component\Os\Implementation\Os_Thread.h	  1197    Thread->Dyn->MpAccessRights = AccessRights;                                                                           /* SBSW_OS_TRD_THREADGETDYN_001 */
; ..\component\Os\Implementation\Os_Thread.h	  1198  }
; ..\component\Os\Implementation\Os_Thread.h	  1199  
; ..\component\Os\Implementation\Os_Thread.h	  1200  
; ..\component\Os\Implementation\Os_Thread.h	  1201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1202   *  Os_ThreadSetInterruptState()
; ..\component\Os\Implementation\Os_Thread.h	  1203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1204  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1205  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1206  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadSetInterruptState,
; ..\component\Os\Implementation\Os_Thread.h	  1207  (
; ..\component\Os\Implementation\Os_Thread.h	  1208    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1209    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_CONST) InterruptState
; ..\component\Os\Implementation\Os_Thread.h	  1210  ))
; ..\component\Os\Implementation\Os_Thread.h	  1211  {
; ..\component\Os\Implementation\Os_Thread.h	  1212    Os_Hal_ContextSetInterruptState(Thread->Context, InterruptState);                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Thread.h	  1213  }
; ..\component\Os\Implementation\Os_Thread.h	  1214  
; ..\component\Os\Implementation\Os_Thread.h	  1215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Thread.h	  1216   *  Os_ThreadCallPreThreadHook()
; ..\component\Os\Implementation\Os_Thread.h	  1217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Thread.h	  1218  /*!
; ..\component\Os\Implementation\Os_Thread.h	  1219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Thread.h	  1220   *
; ..\component\Os\Implementation\Os_Thread.h	  1221   *
; ..\component\Os\Implementation\Os_Thread.h	  1222   */
; ..\component\Os\Implementation\Os_Thread.h	  1223  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Thread.h	  1224  OS_LOCAL_INLINE void,
; ..\component\Os\Implementation\Os_Thread.h	  1225  OS_CODE, OS_ALWAYS_INLINE, Os_ThreadCallPreThreadHook,
; ..\component\Os\Implementation\Os_Thread.h	  1226  (
; ..\component\Os\Implementation\Os_Thread.h	  1227    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread,
; ..\component\Os\Implementation\Os_Thread.h	  1228    boolean CallPreThreadHook
; ..\component\Os\Implementation\Os_Thread.h	  1229  ))
; ..\component\Os\Implementation\Os_Thread.h	  1230  {
; ..\component\Os\Implementation\Os_Thread.h	  1231    /* #10 Call the PreThreadHook if requested and configured. */
; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))
	ld.a	a15,[a13]52
.L652:

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
	jz.a	a15,.L55
.L653:

; ..\component\Os\Implementation\Os_Thread.h	  1233    {
; ..\component\Os\Implementation\Os_Thread.h	  1234      Thread->PreThreadHook();                                                                                            /* SBSW_OS_TRD_PRETHREAD_CALLBACK_001 */
	calli	a15

; ..\component\Os\Implementation\Os_Thread.h	  1232    if((CallPreThreadHook == TRUE) && (Thread->PreThreadHook != NULL_PTR))      (inlined)
.L55:
	ld.a	a15,[a13]20
.L654:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
	ld.a	a15,[a15]24
.L655:
	ld.a	a2,[a13]8
.L656:

; ..\component\Os\Implementation\Os_Core.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Core.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Core.h	     5   *  Copyright (c) 2020 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Core.h	     6   *
; ..\component\Os\Implementation\Os_Core.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Core.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Core.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Core.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Core.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Core.h	    14  /**
; ..\component\Os\Implementation\Os_Core.h	    15   * \ingroup Os_Kernel
; ..\component\Os\Implementation\Os_Core.h	    16   * \addtogroup Os_Core
; ..\component\Os\Implementation\Os_Core.h	    17   * \{
; ..\component\Os\Implementation\Os_Core.h	    18   *
; ..\component\Os\Implementation\Os_Core.h	    19   * \file
; ..\component\Os\Implementation\Os_Core.h	    20   * \brief       OS services for execution control of one or multiple cores.
; ..\component\Os\Implementation\Os_Core.h	    21   * \details     --no details--
; ..\component\Os\Implementation\Os_Core.h	    22   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    23  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    24   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Core.h	    25   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Core.h	    26   *  Refer to Os.h.
; ..\component\Os\Implementation\Os_Core.h	    27   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    28  
; ..\component\Os\Implementation\Os_Core.h	    29  #ifndef OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    30  # define OS_CORE_H
; ..\component\Os\Implementation\Os_Core.h	    31                                                                                                                           /* PRQA S 0388 EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Core.h	    32  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    33   *  INCLUDES
; ..\component\Os\Implementation\Os_Core.h	    34   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    35  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Core.h	    36  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Core.h	    37  
; ..\component\Os\Implementation\Os_Core.h	    38  /* Os module declarations */
; ..\component\Os\Implementation\Os_Core.h	    39  # include "Os_CoreInt.h"
; ..\component\Os\Implementation\Os_Core.h	    40  # include "Os_Core_Cfg.h"
; ..\component\Os\Implementation\Os_Core.h	    41  
; ..\component\Os\Implementation\Os_Core.h	    42  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Core.h	    43  # include "Os_Lcfg.h"
; ..\component\Os\Implementation\Os_Core.h	    44  # include "Os_Deque.h"
; ..\component\Os\Implementation\Os_Core.h	    45  # include "Os_Hook.h"
; ..\component\Os\Implementation\Os_Core.h	    46  # include "Os_Error.h"
; ..\component\Os\Implementation\Os_Core.h	    47  # include "Os_Scheduler.h"
; ..\component\Os\Implementation\Os_Core.h	    48  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Core.h	    49  # include "Os_Stack.h"
; ..\component\Os\Implementation\Os_Core.h	    50  # include "Os_Spinlock.h"
; ..\component\Os\Implementation\Os_Core.h	    51  # include "Os_Barrier.h"
; ..\component\Os\Implementation\Os_Core.h	    52  # include "Os_Resource.h"
; ..\component\Os\Implementation\Os_Core.h	    53  # include "Os_Application.h"
; ..\component\Os\Implementation\Os_Core.h	    54  # include "Os_ServiceFunction.h"
; ..\component\Os\Implementation\Os_Core.h	    55  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Core.h	    56  # include "Os_XSignal.h"
; ..\component\Os\Implementation\Os_Core.h	    57  # include "Os_TimingProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    58  # include "Os_Ioc.h"
; ..\component\Os\Implementation\Os_Core.h	    59  # include "Os_MemoryProtection.h"
; ..\component\Os\Implementation\Os_Core.h	    60  # include "Os_Trace.h"
; ..\component\Os\Implementation\Os_Core.h	    61  # include "Os_Isr.h"
; ..\component\Os\Implementation\Os_Core.h	    62  # include "Os_Task.h"
; ..\component\Os\Implementation\Os_Core.h	    63  # include "Os_Thread.h"
; ..\component\Os\Implementation\Os_Core.h	    64  
; ..\component\Os\Implementation\Os_Core.h	    65  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Core.h	    66  # include "Os_Hal_Os.h"
; ..\component\Os\Implementation\Os_Core.h	    67  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Core.h	    68  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Core.h	    69  
; ..\component\Os\Implementation\Os_Core.h	    70  
; ..\component\Os\Implementation\Os_Core.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    72   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Core.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    74  
; ..\component\Os\Implementation\Os_Core.h	    75  
; ..\component\Os\Implementation\Os_Core.h	    76  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    77   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Core.h	    78   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    79  
; ..\component\Os\Implementation\Os_Core.h	    80  
; ..\component\Os\Implementation\Os_Core.h	    81  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    82   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Core.h	    83   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    84  
; ..\component\Os\Implementation\Os_Core.h	    85  
; ..\component\Os\Implementation\Os_Core.h	    86  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    87   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    88   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    89  
; ..\component\Os\Implementation\Os_Core.h	    90  
; ..\component\Os\Implementation\Os_Core.h	    91  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	    92   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Core.h	    93   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	    94  
; ..\component\Os\Implementation\Os_Core.h	    95  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Core.h	    96  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Core.h	    97  
; ..\component\Os\Implementation\Os_Core.h	    98  
; ..\component\Os\Implementation\Os_Core.h	    99  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   100   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Core.h	   101   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   102  
; ..\component\Os\Implementation\Os_Core.h	   103  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   104   *  Os_CoreIsSingleCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   105   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   106  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleCoreOs,        /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   107  (void))
; ..\component\Os\Implementation\Os_Core.h	   108  {
; ..\component\Os\Implementation\Os_Core.h	   109    return (Os_StdReturnType)(OS_COREID_COUNT == 1u);                                                                     /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   110  }
; ..\component\Os\Implementation\Os_Core.h	   111  
; ..\component\Os\Implementation\Os_Core.h	   112  
; ..\component\Os\Implementation\Os_Core.h	   113  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   114   *  Os_CoreIsSingleAsrCoreOs()
; ..\component\Os\Implementation\Os_Core.h	   115   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   116  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreIsSingleAsrCoreOs,     /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   117  (void))
; ..\component\Os\Implementation\Os_Core.h	   118  {
; ..\component\Os\Implementation\Os_Core.h	   119    return (Os_StdReturnType)(OS_COREASRCOREIDX_COUNT == 1uL);                                                            /* PRQA S 1881, 4304, 2995, 2996 */ /* MD_Os_Rule10.4_1881, MD_Os_C90BooleanCompatibility, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */
; ..\component\Os\Implementation\Os_Core.h	   120  }
; ..\component\Os\Implementation\Os_Core.h	   121  
; ..\component\Os\Implementation\Os_Core.h	   122  
; ..\component\Os\Implementation\Os_Core.h	   123  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   124   *  Os_CoreAsrIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   125   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   126  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   127  OS_ALWAYS_INLINE, Os_CoreAsrIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   128  (
; ..\component\Os\Implementation\Os_Core.h	   129    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   130  ))
; ..\component\Os\Implementation\Os_Core.h	   131  {
; ..\component\Os\Implementation\Os_Core.h	   132    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) localCore = Os_ThreadGetCore(Os_CoreGetThread());                  /* PRQA S 2983 */ /* MD_Os_Rule2.2_2983_Config */ /* SBSW_OS_CORE_THREADGETCORE_001 */
; ..\component\Os\Implementation\Os_Core.h	   133    return (Os_StdReturnType)((Os_CoreIsSingleAsrCoreOs()) || (Core == localCore));                                       /* PRQA S 4115, 4304, 4558 */ /* MD_Os_Rule10.1_4115, MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   134  }
; ..\component\Os\Implementation\Os_Core.h	   135  
; ..\component\Os\Implementation\Os_Core.h	   136  
; ..\component\Os\Implementation\Os_Core.h	   137  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   138   *  Os_CoreAsrCheckIsCoreLocal()
; ..\component\Os\Implementation\Os_Core.h	   139   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   140  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   141  Os_CoreAsrCheckIsCoreLocal,
; ..\component\Os\Implementation\Os_Core.h	   142  (
; ..\component\Os\Implementation\Os_Core.h	   143    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST)  Core
; ..\component\Os\Implementation\Os_Core.h	   144  ))
; ..\component\Os\Implementation\Os_Core.h	   145  {
; ..\component\Os\Implementation\Os_Core.h	   146    return Os_ErrExtendedCheck(Os_CoreAsrIsCoreLocal(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   147  }
; ..\component\Os\Implementation\Os_Core.h	   148  
; ..\component\Os\Implementation\Os_Core.h	   149  
; ..\component\Os\Implementation\Os_Core.h	   150  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   151   *  Os_CoreAsrGetDyn()
; ..\component\Os\Implementation\Os_Core.h	   152   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   153  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   154  P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetDyn,
; ..\component\Os\Implementation\Os_Core.h	   155  (
; ..\component\Os\Implementation\Os_Core.h	   156    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   157  ))
; ..\component\Os\Implementation\Os_Core.h	   158  {
; ..\component\Os\Implementation\Os_Core.h	   159    return Core->Dyn;
; ..\component\Os\Implementation\Os_Core.h	   160  }
; ..\component\Os\Implementation\Os_Core.h	   161  
; ..\component\Os\Implementation\Os_Core.h	   162  
; ..\component\Os\Implementation\Os_Core.h	   163  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   164   *  Os_CoreAsrGetTimingProtection()
; ..\component\Os\Implementation\Os_Core.h	   165   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   166  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   167  P2CONST(Os_TpConfigType, TYPEDEF, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetTimingProtection,
; ..\component\Os\Implementation\Os_Core.h	   168  (
; ..\component\Os\Implementation\Os_Core.h	   169    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   170  ))
; ..\component\Os\Implementation\Os_Core.h	   171  {
; ..\component\Os\Implementation\Os_Core.h	   172    return Core->TimingProtection;
; ..\component\Os\Implementation\Os_Core.h	   173  }
; ..\component\Os\Implementation\Os_Core.h	   174  
; ..\component\Os\Implementation\Os_Core.h	   175  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   176   *  Os_CoreGetTrace()
; ..\component\Os\Implementation\Os_Core.h	   177   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   178  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   179  P2VAR(Os_TraceCoreType, TYPEDEF, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetTrace,
; ..\component\Os\Implementation\Os_Core.h	   180  (
; ..\component\Os\Implementation\Os_Core.h	   181    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   182  ))
; ..\component\Os\Implementation\Os_Core.h	   183  {
; ..\component\Os\Implementation\Os_Core.h	   184    return Core->Trace;
; ..\component\Os\Implementation\Os_Core.h	   185  }
; ..\component\Os\Implementation\Os_Core.h	   186  
; ..\component\Os\Implementation\Os_Core.h	   187  
; ..\component\Os\Implementation\Os_Core.h	   188  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   189   *  Os_CoreAsrGetBarriers()
; ..\component\Os\Implementation\Os_Core.h	   190   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   191  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   192  P2CONST(Os_BarrierBaseConfigRefType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsrGetBarriers,
; ..\component\Os\Implementation\Os_Core.h	   193  (
; ..\component\Os\Implementation\Os_Core.h	   194    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   195  ))                                                                                                                      /* COV_OS_TESTSUITEOSC4998 */
; ..\component\Os\Implementation\Os_Core.h	   196  {
; ..\component\Os\Implementation\Os_Core.h	   197    return Core->BarrierRefs;
; ..\component\Os\Implementation\Os_Core.h	   198  }
; ..\component\Os\Implementation\Os_Core.h	   199  
; ..\component\Os\Implementation\Os_Core.h	   200  
; ..\component\Os\Implementation\Os_Core.h	   201  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   202   *  Os_Core2AsrCore()
; ..\component\Os\Implementation\Os_Core.h	   203   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   204  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   205  P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_Core2AsrCore,
; ..\component\Os\Implementation\Os_Core.h	   206  (
; ..\component\Os\Implementation\Os_Core.h	   207    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   208  ))
; ..\component\Os\Implementation\Os_Core.h	   209  {
; ..\component\Os\Implementation\Os_Core.h	   210    Os_Assert((Os_StdReturnType)(Core->IsAsrCore == TRUE));                                                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   211    return (P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST))Core;                                                      /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   212  }
; ..\component\Os\Implementation\Os_Core.h	   213  
; ..\component\Os\Implementation\Os_Core.h	   214  
; ..\component\Os\Implementation\Os_Core.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   216   *  Os_CoreAsr2Core()
; ..\component\Os\Implementation\Os_Core.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   218  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   219  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreAsr2Core,
; ..\component\Os\Implementation\Os_Core.h	   220  (
; ..\component\Os\Implementation\Os_Core.h	   221    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   222  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   223  {
; ..\component\Os\Implementation\Os_Core.h	   224    return &(Core->Core);
; ..\component\Os\Implementation\Os_Core.h	   225  }
; ..\component\Os\Implementation\Os_Core.h	   226  
; ..\component\Os\Implementation\Os_Core.h	   227  
; ..\component\Os\Implementation\Os_Core.h	   228  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   229   *  Os_CoreId2Core()
; ..\component\Os\Implementation\Os_Core.h	   230   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   231  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   232  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreId2Core,
; ..\component\Os\Implementation\Os_Core.h	   233  (
; ..\component\Os\Implementation\Os_Core.h	   234    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   235  ))
; ..\component\Os\Implementation\Os_Core.h	   236  {
; ..\component\Os\Implementation\Os_Core.h	   237    Os_Assert(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   238    return OsCfg_CoreRefs[CoreId];                                                                                        /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842 */
; ..\component\Os\Implementation\Os_Core.h	   239  }
; ..\component\Os\Implementation\Os_Core.h	   240  
; ..\component\Os\Implementation\Os_Core.h	   241  
; ..\component\Os\Implementation\Os_Core.h	   242  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   243   *  Os_CoreGetCurrentCore()
; ..\component\Os\Implementation\Os_Core.h	   244   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   245  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   246  P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetCurrentCore,
; ..\component\Os\Implementation\Os_Core.h	   247  (
; ..\component\Os\Implementation\Os_Core.h	   248    void
; ..\component\Os\Implementation\Os_Core.h	   249  ))
; ..\component\Os\Implementation\Os_Core.h	   250  {
; ..\component\Os\Implementation\Os_Core.h	   251    return OsCfg_CorePhysicalRefs[Os_Hal_CoreGetId()];
; ..\component\Os\Implementation\Os_Core.h	   252  }
; ..\component\Os\Implementation\Os_Core.h	   253  
; ..\component\Os\Implementation\Os_Core.h	   254  
; ..\component\Os\Implementation\Os_Core.h	   255  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   256   *  Os_CoreGetId()
; ..\component\Os\Implementation\Os_Core.h	   257   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   258  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   259  OS_LOCAL_INLINE CoreIdType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetId,
; ..\component\Os\Implementation\Os_Core.h	   260  (
; ..\component\Os\Implementation\Os_Core.h	   261    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   262  ))
; ..\component\Os\Implementation\Os_Core.h	   263  {
; ..\component\Os\Implementation\Os_Core.h	   264    CoreIdType coreId;
; ..\component\Os\Implementation\Os_Core.h	   265  
; ..\component\Os\Implementation\Os_Core.h	   266    if(Os_CoreIsSingleCoreOs() != 0u)                                                                                     /* PRQA S 2991, 2992, 2995, 2996 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule14.3_2992, MD_Os_Rule2.2_2995, MD_Os_Rule2.2_2996 */ /* COV_OS_TESTSUITERESTRICTIONCORECOUNT */
; ..\component\Os\Implementation\Os_Core.h	   267    {
; ..\component\Os\Implementation\Os_Core.h	   268      coreId = OS_CORE_ID_MASTER;
; ..\component\Os\Implementation\Os_Core.h	   269    }
; ..\component\Os\Implementation\Os_Core.h	   270    else
; ..\component\Os\Implementation\Os_Core.h	   271    {
; ..\component\Os\Implementation\Os_Core.h	   272      coreId = (CoreIdType)Core->Id;
; ..\component\Os\Implementation\Os_Core.h	   273    }
; ..\component\Os\Implementation\Os_Core.h	   274  
; ..\component\Os\Implementation\Os_Core.h	   275    return coreId;
; ..\component\Os\Implementation\Os_Core.h	   276  }
; ..\component\Os\Implementation\Os_Core.h	   277  
; ..\component\Os\Implementation\Os_Core.h	   278  
; ..\component\Os\Implementation\Os_Core.h	   279  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   280   *  Os_CoreIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   281   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   282  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   283  OS_ALWAYS_INLINE, Os_CoreIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   284  (
; ..\component\Os\Implementation\Os_Core.h	   285    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   286  ))
; ..\component\Os\Implementation\Os_Core.h	   287  {
; ..\component\Os\Implementation\Os_Core.h	   288    return (Os_StdReturnType)(Core->IsAsrCore == TRUE);                                                                   /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   289  }
; ..\component\Os\Implementation\Os_Core.h	   290  
; ..\component\Os\Implementation\Os_Core.h	   291  
; ..\component\Os\Implementation\Os_Core.h	   292  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   293   *  Os_CoreIsStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   294   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   295  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   296  OS_ALWAYS_INLINE, Os_CoreIsStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   297  (
; ..\component\Os\Implementation\Os_Core.h	   298    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   299  ))
; ..\component\Os\Implementation\Os_Core.h	   300  {
; ..\component\Os\Implementation\Os_Core.h	   301    return (Os_StdReturnType)(Core->Status->ActivationState == OS_CORESTATE_ACTIVATED_ASR);                               /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   302  }
; ..\component\Os\Implementation\Os_Core.h	   303  
; ..\component\Os\Implementation\Os_Core.h	   304  
; ..\component\Os\Implementation\Os_Core.h	   305  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   306   *  Os_CoreCheckIsAsrCore()
; ..\component\Os\Implementation\Os_Core.h	   307   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   308  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   309  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckIsAsrCore,
; ..\component\Os\Implementation\Os_Core.h	   310  (
; ..\component\Os\Implementation\Os_Core.h	   311    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   312  ))
; ..\component\Os\Implementation\Os_Core.h	   313  {
; ..\component\Os\Implementation\Os_Core.h	   314    return Os_ErrExtendedCheck(Os_CoreIsAsrCore(Core));                                                                   /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   315  }
; ..\component\Os\Implementation\Os_Core.h	   316  
; ..\component\Os\Implementation\Os_Core.h	   317  
; ..\component\Os\Implementation\Os_Core.h	   318  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   319   *  Os_CoreCheckStartedAsAsr()
; ..\component\Os\Implementation\Os_Core.h	   320   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   321  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   322  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckStartedAsAsr,
; ..\component\Os\Implementation\Os_Core.h	   323  (
; ..\component\Os\Implementation\Os_Core.h	   324    P2CONST(Os_CoreConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   325  ))
; ..\component\Os\Implementation\Os_Core.h	   326  {
; ..\component\Os\Implementation\Os_Core.h	   327    return Os_ErrExtendedCheck(Os_CoreIsStartedAsAsr(Core));                                                              /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   328  }
; ..\component\Os\Implementation\Os_Core.h	   329  
; ..\component\Os\Implementation\Os_Core.h	   330  
; ..\component\Os\Implementation\Os_Core.h	   331  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   332   *  Os_CoreOsIsStarted()
; ..\component\Os\Implementation\Os_Core.h	   333   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   334  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   335  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsStarted,
; ..\component\Os\Implementation\Os_Core.h	   336  (
; ..\component\Os\Implementation\Os_Core.h	   337    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   338  ))
; ..\component\Os\Implementation\Os_Core.h	   339  {
; ..\component\Os\Implementation\Os_Core.h	   340    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_STARTED);                           /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   341  }
; ..\component\Os\Implementation\Os_Core.h	   342  
; ..\component\Os\Implementation\Os_Core.h	   343  
; ..\component\Os\Implementation\Os_Core.h	   344  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   345   *  Os_CoreOsIsPrestarted()
; ..\component\Os\Implementation\Os_Core.h	   346   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   347  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   348  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreOsIsPrestarted,
; ..\component\Os\Implementation\Os_Core.h	   349  (
; ..\component\Os\Implementation\Os_Core.h	   350    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   351  ))
; ..\component\Os\Implementation\Os_Core.h	   352  {
; ..\component\Os\Implementation\Os_Core.h	   353    return (Os_StdReturnType)(Os_CoreAsrGetAsrStatus(Core)->OsState == OS_COREOSSTATE_PRESTARTTASK);                      /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */ /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   354  }
; ..\component\Os\Implementation\Os_Core.h	   355  
; ..\component\Os\Implementation\Os_Core.h	   356  
; ..\component\Os\Implementation\Os_Core.h	   357  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   358   *  Os_CoreAsrGetAsrStatus()
; ..\component\Os\Implementation\Os_Core.h	   359   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   360  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,   /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   361  OS_ALWAYS_INLINE, Os_CoreAsrGetAsrStatus,
; ..\component\Os\Implementation\Os_Core.h	   362  (
; ..\component\Os\Implementation\Os_Core.h	   363    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   364  ))
; ..\component\Os\Implementation\Os_Core.h	   365  {
; ..\component\Os\Implementation\Os_Core.h	   366    return ((P2VAR(Os_CoreAsrStatusType volatile, AUTOMATIC, OS_VAR_NOINIT))Core->Core.Status);                           /* PRQA S 0310 */ /* MD_Os_Rule11.3_0310 */
; ..\component\Os\Implementation\Os_Core.h	   367  }
; ..\component\Os\Implementation\Os_Core.h	   368  
; ..\component\Os\Implementation\Os_Core.h	   369  
; ..\component\Os\Implementation\Os_Core.h	   370  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   371   *  Os_CoreCheckId()
; ..\component\Os\Implementation\Os_Core.h	   372   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   373  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   374  OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE, Os_CoreCheckId,
; ..\component\Os\Implementation\Os_Core.h	   375  (
; ..\component\Os\Implementation\Os_Core.h	   376    CoreIdType CoreId
; ..\component\Os\Implementation\Os_Core.h	   377  ))
; ..\component\Os\Implementation\Os_Core.h	   378  {
; ..\component\Os\Implementation\Os_Core.h	   379    return Os_ErrExtendedCheck(Os_ErrIsValueLo((uint32)CoreId, (uint32)OS_COREID_COUNT));
; ..\component\Os\Implementation\Os_Core.h	   380  }
; ..\component\Os\Implementation\Os_Core.h	   381  
; ..\component\Os\Implementation\Os_Core.h	   382  
; ..\component\Os\Implementation\Os_Core.h	   383  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   384   *  Os_CoreGetKernelStack()
; ..\component\Os\Implementation\Os_Core.h	   385   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   386  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   387  P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelStack,
; ..\component\Os\Implementation\Os_Core.h	   388  (
; ..\component\Os\Implementation\Os_Core.h	   389    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   390  ))
; ..\component\Os\Implementation\Os_Core.h	   391  {
; ..\component\Os\Implementation\Os_Core.h	   392    return Core->KernelStack;
; ..\component\Os\Implementation\Os_Core.h	   393  }
; ..\component\Os\Implementation\Os_Core.h	   394  
; ..\component\Os\Implementation\Os_Core.h	   395  
; ..\component\Os\Implementation\Os_Core.h	   396  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   397   *  Os_CoreGetAsrCoreIdx()
; ..\component\Os\Implementation\Os_Core.h	   398   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   399  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_CoreAsrCoreIdx, OS_CODE,                                                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   400  OS_ALWAYS_INLINE, Os_CoreGetAsrCoreIdx,
; ..\component\Os\Implementation\Os_Core.h	   401  (
; ..\component\Os\Implementation\Os_Core.h	   402    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   403  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   404  {
; ..\component\Os\Implementation\Os_Core.h	   405    return Core->CoreIdx;
; ..\component\Os\Implementation\Os_Core.h	   406  }
; ..\component\Os\Implementation\Os_Core.h	   407  
; ..\component\Os\Implementation\Os_Core.h	   408  
; ..\component\Os\Implementation\Os_Core.h	   409  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   410   *  Os_CoreGetXSig()
; ..\component\Os\Implementation\Os_Core.h	   411   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   412  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */ /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   413  P2CONST(Os_XSigConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetXSig,
; ..\component\Os\Implementation\Os_Core.h	   414  (
; ..\component\Os\Implementation\Os_Core.h	   415    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   416  ))                                                                                                                      /* COV_OS_HALPLATFORMMULTICOREUNSUPPORTED */
; ..\component\Os\Implementation\Os_Core.h	   417  {
; ..\component\Os\Implementation\Os_Core.h	   418    return Core->XSignal;
; ..\component\Os\Implementation\Os_Core.h	   419  }
; ..\component\Os\Implementation\Os_Core.h	   420  
; ..\component\Os\Implementation\Os_Core.h	   421  
; ..\component\Os\Implementation\Os_Core.h	   422  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   423   *  Os_CoreGetHookInfo()
; ..\component\Os\Implementation\Os_Core.h	   424   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   425  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_HookInfoType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   426  OS_ALWAYS_INLINE, Os_CoreGetHookInfo,
; ..\component\Os\Implementation\Os_Core.h	   427  (
; ..\component\Os\Implementation\Os_Core.h	   428    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   429  ))
; ..\component\Os\Implementation\Os_Core.h	   430  {
; ..\component\Os\Implementation\Os_Core.h	   431    return &(Os_CoreAsrGetDyn(Core)->HookInfo);                                                                           /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   432  }
; ..\component\Os\Implementation\Os_Core.h	   433  
; ..\component\Os\Implementation\Os_Core.h	   434  
; ..\component\Os\Implementation\Os_Core.h	   435  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   436   *  Os_CoreGetThreadClass()
; ..\component\Os\Implementation\Os_Core.h	   437   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   438  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2VAR(Os_ThreadClassType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE,              /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   439  OS_ALWAYS_INLINE, Os_CoreGetThreadClass,
; ..\component\Os\Implementation\Os_Core.h	   440  (
; ..\component\Os\Implementation\Os_Core.h	   441    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   442  ))
; ..\component\Os\Implementation\Os_Core.h	   443  {
; ..\component\Os\Implementation\Os_Core.h	   444    return Core->ThreadClass;
; ..\component\Os\Implementation\Os_Core.h	   445  }
; ..\component\Os\Implementation\Os_Core.h	   446  
; ..\component\Os\Implementation\Os_Core.h	   447  
; ..\component\Os\Implementation\Os_Core.h	   448  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   449   *  Os_CoreGetStartupHook()
; ..\component\Os\Implementation\Os_Core.h	   450   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   451  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   452  P2CONST(Os_HookCallbackConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetStartupHook,
; ..\component\Os\Implementation\Os_Core.h	   453  (
; ..\component\Os\Implementation\Os_Core.h	   454    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   455  ))
; ..\component\Os\Implementation\Os_Core.h	   456  {
; ..\component\Os\Implementation\Os_Core.h	   457    return Core->StartupHookRef;
; ..\component\Os\Implementation\Os_Core.h	   458  }
; ..\component\Os\Implementation\Os_Core.h	   459  
; ..\component\Os\Implementation\Os_Core.h	   460  
; ..\component\Os\Implementation\Os_Core.h	   461  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   462   *  Os_CoreGetShutdownHook()
; ..\component\Os\Implementation\Os_Core.h	   463   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   464  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   465  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetShutdownHook,
; ..\component\Os\Implementation\Os_Core.h	   466  (
; ..\component\Os\Implementation\Os_Core.h	   467    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   468  ))
; ..\component\Os\Implementation\Os_Core.h	   469  {
; ..\component\Os\Implementation\Os_Core.h	   470    return Core->ShutdownHookRef;
; ..\component\Os\Implementation\Os_Core.h	   471  }
; ..\component\Os\Implementation\Os_Core.h	   472  
; ..\component\Os\Implementation\Os_Core.h	   473  
; ..\component\Os\Implementation\Os_Core.h	   474  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   475   *  Os_CoreGetProtectionHook()
; ..\component\Os\Implementation\Os_Core.h	   476   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   477  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   478  P2CONST(Os_HookProtectionHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetProtectionHook,
; ..\component\Os\Implementation\Os_Core.h	   479  (
; ..\component\Os\Implementation\Os_Core.h	   480    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   481  ))
; ..\component\Os\Implementation\Os_Core.h	   482  {
; ..\component\Os\Implementation\Os_Core.h	   483    return Core->ProtectionHookRef;
; ..\component\Os\Implementation\Os_Core.h	   484  }
; ..\component\Os\Implementation\Os_Core.h	   485  
; ..\component\Os\Implementation\Os_Core.h	   486  
; ..\component\Os\Implementation\Os_Core.h	   487  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   488   *  Os_CoreGetErrorHook()
; ..\component\Os\Implementation\Os_Core.h	   489   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   490  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   491  P2CONST(Os_HookStatusHookConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetErrorHook,
; ..\component\Os\Implementation\Os_Core.h	   492  (
; ..\component\Os\Implementation\Os_Core.h	   493    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   494  ))
; ..\component\Os\Implementation\Os_Core.h	   495  {
; ..\component\Os\Implementation\Os_Core.h	   496    return Core->ErrorHookRef;
; ..\component\Os\Implementation\Os_Core.h	   497  }
; ..\component\Os\Implementation\Os_Core.h	   498  
; ..\component\Os\Implementation\Os_Core.h	   499  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   500   *  Os_CoreGetIdleTask()
; ..\component\Os\Implementation\Os_Core.h	   501   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   502  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   503  OS_LOCAL_INLINE P2CONST(Os_TaskConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetIdleTask,
; ..\component\Os\Implementation\Os_Core.h	   504  (
; ..\component\Os\Implementation\Os_Core.h	   505    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   506  ))
; ..\component\Os\Implementation\Os_Core.h	   507  {
; ..\component\Os\Implementation\Os_Core.h	   508    return Core->IdleTask;
; ..\component\Os\Implementation\Os_Core.h	   509  }
; ..\component\Os\Implementation\Os_Core.h	   510  
; ..\component\Os\Implementation\Os_Core.h	   511  
; ..\component\Os\Implementation\Os_Core.h	   512  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   513   *  Os_CoreGetKernelApp()
; ..\component\Os\Implementation\Os_Core.h	   514   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   515  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE                                                                            /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   516  P2CONST(Os_AppConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE, Os_CoreGetKernelApp,
; ..\component\Os\Implementation\Os_Core.h	   517  (
; ..\component\Os\Implementation\Os_Core.h	   518    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   519  ))
; ..\component\Os\Implementation\Os_Core.h	   520  {
; ..\component\Os\Implementation\Os_Core.h	   521    return Core->KernelApp;
; ..\component\Os\Implementation\Os_Core.h	   522  }
; ..\component\Os\Implementation\Os_Core.h	   523  
; ..\component\Os\Implementation\Os_Core.h	   524  
; ..\component\Os\Implementation\Os_Core.h	   525  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   526   *  Os_CoreGetScheduler()
; ..\component\Os\Implementation\Os_Core.h	   527   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   528  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   529  OS_LOCAL_INLINE P2CONST(Os_SchedulerConfigType, AUTOMATIC, OS_CONST), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   530  Os_CoreGetScheduler,
; ..\component\Os\Implementation\Os_Core.h	   531  (
; ..\component\Os\Implementation\Os_Core.h	   532    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   533  ))
; ..\component\Os\Implementation\Os_Core.h	   534  {
; ..\component\Os\Implementation\Os_Core.h	   535    return Core->Scheduler;
; ..\component\Os\Implementation\Os_Core.h	   536  }
; ..\component\Os\Implementation\Os_Core.h	   537  
; ..\component\Os\Implementation\Os_Core.h	   538  
; ..\component\Os\Implementation\Os_Core.h	   539  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   540   *  Os_CoreGetLastError()
; ..\component\Os\Implementation\Os_Core.h	   541   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   542  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   543  OS_LOCAL_INLINE P2VAR(Os_ErrorType, AUTOMATIC, OS_VAR_NOINIT), OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   544  Os_CoreGetLastError,
; ..\component\Os\Implementation\Os_Core.h	   545  (
; ..\component\Os\Implementation\Os_Core.h	   546    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   547  ))
; ..\component\Os\Implementation\Os_Core.h	   548  {
; ..\component\Os\Implementation\Os_Core.h	   549    return &(Os_CoreAsrGetDyn(Core)->LastError);                                                                          /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   550  }
; ..\component\Os\Implementation\Os_Core.h	   551  
; ..\component\Os\Implementation\Os_Core.h	   552  
; ..\component\Os\Implementation\Os_Core.h	   553  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   554   *  Os_CoreInterruptedThreadsPush()
; ..\component\Os\Implementation\Os_Core.h	   555   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   556  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   557  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPush,
; ..\component\Os\Implementation\Os_Core.h	   558  (
; ..\component\Os\Implementation\Os_Core.h	   559    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   560    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) InterruptedThread
; ..\component\Os\Implementation\Os_Core.h	   561  ))
; ..\component\Os\Implementation\Os_Core.h	   562  {
; ..\component\Os\Implementation\Os_Core.h	   563    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   564  
; ..\component\Os\Implementation\Os_Core.h	   565    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   566  
; ..\component\Os\Implementation\Os_Core.h	   567    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter >= OS_MAX_INTERRUPTEDTHREADS))                                      /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   568    {
; ..\component\Os\Implementation\Os_Core.h	   569      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   570    }
; ..\component\Os\Implementation\Os_Core.h	   571  
; ..\component\Os\Implementation\Os_Core.h	   572    coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter] = InterruptedThread;                                  /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */ /* SBSW_OS_CORE_COREASR_INTERRUPTEDTHREADS_001 */
; ..\component\Os\Implementation\Os_Core.h	   573    coreDyn->InterruptedThreadsCounter++;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   574  }
; ..\component\Os\Implementation\Os_Core.h	   575  
; ..\component\Os\Implementation\Os_Core.h	   576  
; ..\component\Os\Implementation\Os_Core.h	   577  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   578   *  Os_CoreInterruptedThreadsPop()
; ..\component\Os\Implementation\Os_Core.h	   579   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   580  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   581  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   582  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsPop,
; ..\component\Os\Implementation\Os_Core.h	   583  (
; ..\component\Os\Implementation\Os_Core.h	   584    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   585  ))
; ..\component\Os\Implementation\Os_Core.h	   586  {
; ..\component\Os\Implementation\Os_Core.h	   587    P2VAR(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   588  
; ..\component\Os\Implementation\Os_Core.h	   589    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   590  
; ..\component\Os\Implementation\Os_Core.h	   591    if(OS_UNLIKELY(coreDyn->InterruptedThreadsCounter == 0))                                                              /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   592    {
; ..\component\Os\Implementation\Os_Core.h	   593      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   594    }
; ..\component\Os\Implementation\Os_Core.h	   595  
; ..\component\Os\Implementation\Os_Core.h	   596    coreDyn->InterruptedThreadsCounter--;                                                                                 /* SBSW_OS_CORE_COREASR_DYN_001 */
; ..\component\Os\Implementation\Os_Core.h	   597  
; ..\component\Os\Implementation\Os_Core.h	   598    return coreDyn->InterruptedThreads[coreDyn->InterruptedThreadsCounter];
; ..\component\Os\Implementation\Os_Core.h	   599  }
; ..\component\Os\Implementation\Os_Core.h	   600  
; ..\component\Os\Implementation\Os_Core.h	   601  
; ..\component\Os\Implementation\Os_Core.h	   602  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   603   *  Os_CoreThreadGetByContext()
; ..\component\Os\Implementation\Os_Core.h	   604   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   605  /*!
; ..\component\Os\Implementation\Os_Core.h	   606   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   607   *
; ..\component\Os\Implementation\Os_Core.h	   608   *
; ..\component\Os\Implementation\Os_Core.h	   609   *
; ..\component\Os\Implementation\Os_Core.h	   610   */
; ..\component\Os\Implementation\Os_Core.h	   611  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,                /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   612  OS_ALWAYS_INLINE, Os_CoreThreadGetByContext,
; ..\component\Os\Implementation\Os_Core.h	   613  (
; ..\component\Os\Implementation\Os_Core.h	   614    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   615    Os_CallContextType Context
; ..\component\Os\Implementation\Os_Core.h	   616  ))
; ..\component\Os\Implementation\Os_Core.h	   617  {
; ..\component\Os\Implementation\Os_Core.h	   618    P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) currentThread;
; ..\component\Os\Implementation\Os_Core.h	   619    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) result;
; ..\component\Os\Implementation\Os_Core.h	   620  
; ..\component\Os\Implementation\Os_Core.h	   621    currentThread = Os_CoreGetThread();
; ..\component\Os\Implementation\Os_Core.h	   622  
; ..\component\Os\Implementation\Os_Core.h	   623    /* #10 Check whether the current thread matches the context. */
; ..\component\Os\Implementation\Os_Core.h	   624    if(Os_ThreadIsAnyInitialContext(currentThread, Context) != 0u)                                                        /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_001 */
; ..\component\Os\Implementation\Os_Core.h	   625    {
; ..\component\Os\Implementation\Os_Core.h	   626      result = currentThread;
; ..\component\Os\Implementation\Os_Core.h	   627    }
; ..\component\Os\Implementation\Os_Core.h	   628    /* #20 Otherwise search the list of interrupted threads. */
; ..\component\Os\Implementation\Os_Core.h	   629    else
; ..\component\Os\Implementation\Os_Core.h	   630    {
; ..\component\Os\Implementation\Os_Core.h	   631      P2CONST(Os_ThreadConfigType, TYPEDEF, OS_CONST) interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   632      Os_CoreThreadIdx iterator;
; ..\component\Os\Implementation\Os_Core.h	   633      Os_CoreThreadIdx iteratorEnd;
; ..\component\Os\Implementation\Os_Core.h	   634  
; ..\component\Os\Implementation\Os_Core.h	   635      result = NULL_PTR;
; ..\component\Os\Implementation\Os_Core.h	   636  
; ..\component\Os\Implementation\Os_Core.h	   637      iterator = Os_CoreInterruptedThreadsGetTopIdx(Core);                                                                /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   638      iteratorEnd = Os_CoreInterruptedThreadsGetBottomIdx();
; ..\component\Os\Implementation\Os_Core.h	   639  
; ..\component\Os\Implementation\Os_Core.h	   640      while(iterator != iteratorEnd)                                                                                      /* COV_OS_HALPLATFORMTPUNSUPPORTED_XF */
; ..\component\Os\Implementation\Os_Core.h	   641      {
; ..\component\Os\Implementation\Os_Core.h	   642        interruptedThread = Os_CoreInterruptedThreadsGet(Core, iterator);                                                 /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   643  
; ..\component\Os\Implementation\Os_Core.h	   644        if(Os_ThreadIsAnyInitialContext(interruptedThread, Context) != 0u)                                                /* SBSW_OS_CORE_THREADISANYINITIALCONTEXT_002 */
; ..\component\Os\Implementation\Os_Core.h	   645        {
; ..\component\Os\Implementation\Os_Core.h	   646          result = interruptedThread;
; ..\component\Os\Implementation\Os_Core.h	   647          break;
; ..\component\Os\Implementation\Os_Core.h	   648        }
; ..\component\Os\Implementation\Os_Core.h	   649  
; ..\component\Os\Implementation\Os_Core.h	   650        iterator = Os_CoreInterruptedThreadsMoveDown(iterator);
; ..\component\Os\Implementation\Os_Core.h	   651      }
; ..\component\Os\Implementation\Os_Core.h	   652    }
; ..\component\Os\Implementation\Os_Core.h	   653  
; ..\component\Os\Implementation\Os_Core.h	   654    return result;
; ..\component\Os\Implementation\Os_Core.h	   655  }
; ..\component\Os\Implementation\Os_Core.h	   656  
; ..\component\Os\Implementation\Os_Core.h	   657  
; ..\component\Os\Implementation\Os_Core.h	   658  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   659   *  Os_CoreInterruptedThreadsGetTopIdx()
; ..\component\Os\Implementation\Os_Core.h	   660   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   661  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   662  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   663  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetTopIdx,
; ..\component\Os\Implementation\Os_Core.h	   664  (
; ..\component\Os\Implementation\Os_Core.h	   665    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   666  ))
; ..\component\Os\Implementation\Os_Core.h	   667  {
; ..\component\Os\Implementation\Os_Core.h	   668    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   669  
; ..\component\Os\Implementation\Os_Core.h	   670    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   671  
; ..\component\Os\Implementation\Os_Core.h	   672    Os_Assert((Os_StdReturnType)(coreDyn->InterruptedThreadsCounter < OS_MAX_INTERRUPTEDTHREADS));                        /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Core.h	   673  
; ..\component\Os\Implementation\Os_Core.h	   674    return coreDyn->InterruptedThreadsCounter;
; ..\component\Os\Implementation\Os_Core.h	   675  }
; ..\component\Os\Implementation\Os_Core.h	   676  
; ..\component\Os\Implementation\Os_Core.h	   677  
; ..\component\Os\Implementation\Os_Core.h	   678  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   679   *  Os_CoreInterruptedThreadsGet()
; ..\component\Os\Implementation\Os_Core.h	   680   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   681  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   682  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   683  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGet,
; ..\component\Os\Implementation\Os_Core.h	   684  (
; ..\component\Os\Implementation\Os_Core.h	   685    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core,
; ..\component\Os\Implementation\Os_Core.h	   686    Os_CoreThreadIdx Idx
; ..\component\Os\Implementation\Os_Core.h	   687  ))
; ..\component\Os\Implementation\Os_Core.h	   688  {
; ..\component\Os\Implementation\Os_Core.h	   689    P2CONST(Os_CoreAsrType, AUTOMATIC, OS_VAR_NOINIT) coreDyn;
; ..\component\Os\Implementation\Os_Core.h	   690  
; ..\component\Os\Implementation\Os_Core.h	   691    coreDyn = Os_CoreAsrGetDyn(Core);                                                                                     /* SBSW_OS_FC_PRECONDITION */
; ..\component\Os\Implementation\Os_Core.h	   692  
; ..\component\Os\Implementation\Os_Core.h	   693    if(OS_UNLIKELY((Idx > coreDyn->InterruptedThreadsCounter) || (Idx == 0)))                                             /* COV_OS_INVSTATE */
; ..\component\Os\Implementation\Os_Core.h	   694    {
; ..\component\Os\Implementation\Os_Core.h	   695      Os_ErrKernelPanic();
; ..\component\Os\Implementation\Os_Core.h	   696    }
; ..\component\Os\Implementation\Os_Core.h	   697  
; ..\component\Os\Implementation\Os_Core.h	   698    return coreDyn->InterruptedThreads[Idx-1];                                                                            /* PRQA S 2842 */ /* MD_Os_Rule18.1_2842_Check */
; ..\component\Os\Implementation\Os_Core.h	   699  }
; ..\component\Os\Implementation\Os_Core.h	   700  
; ..\component\Os\Implementation\Os_Core.h	   701  
; ..\component\Os\Implementation\Os_Core.h	   702  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   703   *  Os_CoreInterruptedThreadsGetBottomIdx()
; ..\component\Os\Implementation\Os_Core.h	   704   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   705  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   706  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   707  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsGetBottomIdx, (void))
; ..\component\Os\Implementation\Os_Core.h	   708  {
; ..\component\Os\Implementation\Os_Core.h	   709    return (Os_CoreThreadIdx)0;
; ..\component\Os\Implementation\Os_Core.h	   710  }
; ..\component\Os\Implementation\Os_Core.h	   711  
; ..\component\Os\Implementation\Os_Core.h	   712  
; ..\component\Os\Implementation\Os_Core.h	   713  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   714   *  Os_CoreInterruptedThreadsMoveDown()
; ..\component\Os\Implementation\Os_Core.h	   715   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   716  /*!
; ..\component\Os\Implementation\Os_Core.h	   717   * Internal comment removed.
; ..\component\Os\Implementation\Os_Core.h	   718   *
; ..\component\Os\Implementation\Os_Core.h	   719   *
; ..\component\Os\Implementation\Os_Core.h	   720   */
; ..\component\Os\Implementation\Os_Core.h	   721  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   722  OS_LOCAL_INLINE Os_CoreThreadIdx, OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   723  OS_ALWAYS_INLINE, Os_CoreInterruptedThreadsMoveDown,
; ..\component\Os\Implementation\Os_Core.h	   724  (
; ..\component\Os\Implementation\Os_Core.h	   725      Os_CoreThreadIdx Iterator
; ..\component\Os\Implementation\Os_Core.h	   726  ))
; ..\component\Os\Implementation\Os_Core.h	   727  {
; ..\component\Os\Implementation\Os_Core.h	   728    /* #10 Return the decremented iterator. */
; ..\component\Os\Implementation\Os_Core.h	   729    return (Iterator - (Os_CoreThreadIdx)1);
; ..\component\Os\Implementation\Os_Core.h	   730  }
; ..\component\Os\Implementation\Os_Core.h	   731  
; ..\component\Os\Implementation\Os_Core.h	   732  
; ..\component\Os\Implementation\Os_Core.h	   733  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   734   *  Os_CoreSetThread()
; ..\component\Os\Implementation\Os_Core.h	   735   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   736  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   737  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   738  Os_CoreSetThread,
; ..\component\Os\Implementation\Os_Core.h	   739  (
; ..\component\Os\Implementation\Os_Core.h	   740    P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST) Thread
; ..\component\Os\Implementation\Os_Core.h	   741  ))
; ..\component\Os\Implementation\Os_Core.h	   742  {
; ..\component\Os\Implementation\Os_Core.h	   743    Os_Hal_CoreSetThread(Os_SystemGetCore2Thread(Os_SystemGet()), Thread);                                                /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_CORESETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   744  }
; ..\component\Os\Implementation\Os_Core.h	   745  
; ..\component\Os\Implementation\Os_Core.h	   746  
; ..\component\Os\Implementation\Os_Core.h	   747  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   748   *  Os_CoreGetThread()
; ..\component\Os\Implementation\Os_Core.h	   749   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   750  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   751  OS_LOCAL_INLINE P2CONST(Os_ThreadConfigType, AUTOMATIC, OS_CONST), OS_CODE,
; ..\component\Os\Implementation\Os_Core.h	   752  OS_ALWAYS_INLINE, Os_CoreGetThread,
; ..\component\Os\Implementation\Os_Core.h	   753  (
; ..\component\Os\Implementation\Os_Core.h	   754    void
; ..\component\Os\Implementation\Os_Core.h	   755  ))
; ..\component\Os\Implementation\Os_Core.h	   756  {
; ..\component\Os\Implementation\Os_Core.h	   757    return Os_Hal_CoreGetThread(Os_SystemGetCore2Thread(Os_SystemGet()));                                                 /* SBSW_OS_CORE_SYSTEMGETCORE2THREAD_001 */ /* SBSW_OS_CORE_HAL_COREGETTHREAD_001 */
; ..\component\Os\Implementation\Os_Core.h	   758  }
; ..\component\Os\Implementation\Os_Core.h	   759  
; ..\component\Os\Implementation\Os_Core.h	   760  
; ..\component\Os\Implementation\Os_Core.h	   761  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Core.h	   762   *  Os_CoreSetCurrentStack()
; ..\component\Os\Implementation\Os_Core.h	   763   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Core.h	   764  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Core.h	   765  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Core.h	   766  Os_CoreSetCurrentStack,
; ..\component\Os\Implementation\Os_Core.h	   767  (
; ..\component\Os\Implementation\Os_Core.h	   768    P2CONST(Os_StackConfigType, AUTOMATIC, OS_CONST) Stack,
; ..\component\Os\Implementation\Os_Core.h	   769    P2CONST(Os_CoreAsrConfigType, AUTOMATIC, OS_CONST) Core
; ..\component\Os\Implementation\Os_Core.h	   770  ))
; ..\component\Os\Implementation\Os_Core.h	   771  {
; ..\component\Os\Implementation\Os_Core.h	   772    if(Os_StackIsMonitoringEnabled() != 0u)                                                                               /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Core.h	   773    {
; ..\component\Os\Implementation\Os_Core.h	   774      Os_CoreAsrGetDyn(Core)->CurrentStack = Stack;                                                                       /* SBSW_OS_FC_PRECONDITION */ /* SBSW_OS_CORE_COREASRGETDYN_003 */
	st.a	[a15]120,a2
.L443:
	ld.a	a15,[a13]4
.L450:

; ..\component\Os\Implementation\Os_Hal_Context.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Context.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	     5   *  Copyright (c) 2017 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Context.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Context.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Context.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Context.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Context.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Context.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Context.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Context.h	    15   *  \addtogroup Os_Hal_Context
; ..\component\Os\Implementation\Os_Hal_Context.h	    16   *  \trace      CREQ-1201
; ..\component\Os\Implementation\Os_Hal_Context.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    18   *  \{
; ..\component\Os\Implementation\Os_Hal_Context.h	    19   *  \file       Os_Hal_Context.h
; ..\component\Os\Implementation\Os_Hal_Context.h	    20   *  \brief      Context switching primitives.
; ..\component\Os\Implementation\Os_Hal_Context.h	    21   *  \details    Hardware information can be found in:
; ..\component\Os\Implementation\Os_Hal_Context.h	    22   *              "TriCore TC1.6P & TC1.6E - Core Architecture (Volume 1, V1.0 D10 2012-12)".
; ..\component\Os\Implementation\Os_Hal_Context.h	    23   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    24   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    25  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    26   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Context.h	    27   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Context.h	    28   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Context.h	    29   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    30                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    31  
; ..\component\Os\Implementation\Os_Hal_Context.h	    32  #ifndef OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    33  # define OS_HAL_CONTEXT_H
; ..\component\Os\Implementation\Os_Hal_Context.h	    34  
; ..\component\Os\Implementation\Os_Hal_Context.h	    35  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    36   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Context.h	    37   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    38  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Context.h	    39  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    40  
; ..\component\Os\Implementation\Os_Hal_Context.h	    41  /* Os module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    42  # include "Os_Hal_ContextInt.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    43  # include "Os_Hal_Context_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    44  
; ..\component\Os\Implementation\Os_Hal_Context.h	    45  /* Os kernel module dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    46  
; ..\component\Os\Implementation\Os_Hal_Context.h	    47  /* Os HAL dependencies */
; ..\component\Os\Implementation\Os_Hal_Context.h	    48  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Context.h	    50  
; ..\component\Os\Implementation\Os_Hal_Context.h	    51  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    52   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    53   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    54  
; ..\component\Os\Implementation\Os_Hal_Context.h	    55  
; ..\component\Os\Implementation\Os_Hal_Context.h	    56  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    57   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Context.h	    58   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    59  
; ..\component\Os\Implementation\Os_Hal_Context.h	    60  
; ..\component\Os\Implementation\Os_Hal_Context.h	    61  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    62   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Context.h	    63   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    64  
; ..\component\Os\Implementation\Os_Hal_Context.h	    65  
; ..\component\Os\Implementation\Os_Hal_Context.h	    66  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    67   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    68   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    69  
; ..\component\Os\Implementation\Os_Hal_Context.h	    70  
; ..\component\Os\Implementation\Os_Hal_Context.h	    71  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    72   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Context.h	    73   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    74  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Context.h	    75  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Context.h	    76  
; ..\component\Os\Implementation\Os_Hal_Context.h	    77  
; ..\component\Os\Implementation\Os_Hal_Context.h	    78  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    79   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Context.h	    80   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    81  
; ..\component\Os\Implementation\Os_Hal_Context.h	    82  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	    83   *  Os_Hal_ContextInit()
; ..\component\Os\Implementation\Os_Hal_Context.h	    84   *********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	    85  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	    86   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	    87   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    88   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    91   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    92   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    93   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    94   *
; ..\component\Os\Implementation\Os_Hal_Context.h	    95   */
; ..\component\Os\Implementation\Os_Hal_Context.h	    96  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	    97  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	    98  Os_Hal_ContextInit,
; ..\component\Os\Implementation\Os_Hal_Context.h	    99  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   100    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   101    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   102  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   103  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   104    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   105    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   106  
; ..\component\Os\Implementation\Os_Hal_Context.h	   107    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   108    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   109  
; ..\component\Os\Implementation\Os_Hal_Context.h	   110    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   111    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   112  
; ..\component\Os\Implementation\Os_Hal_Context.h	   113    /* #30 Create the reserved CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   114    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   115  
; ..\component\Os\Implementation\Os_Hal_Context.h	   116    /* #40 Create the actual CSA */
; ..\component\Os\Implementation\Os_Hal_Context.h	   117    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   118  
; ..\component\Os\Implementation\Os_Hal_Context.h	   119    /* #50 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   120    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   121  
; ..\component\Os\Implementation\Os_Hal_Context.h	   122    /* #60 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   123    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   124    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   125  
; ..\component\Os\Implementation\Os_Hal_Context.h	   126    /* #70 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   127    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   128  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   129  
; ..\component\Os\Implementation\Os_Hal_Context.h	   130  
; ..\component\Os\Implementation\Os_Hal_Context.h	   131  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   132   *  Os_Hal_ContextReset()
; ..\component\Os\Implementation\Os_Hal_Context.h	   133   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   134  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   135   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   136   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   137   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   138   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   139   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   140   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   141   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   142   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   143   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   144   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   146   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   147  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   148  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,
; ..\component\Os\Implementation\Os_Hal_Context.h	   149  Os_Hal_ContextReset,
; ..\component\Os\Implementation\Os_Hal_Context.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   151    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Config,
; ..\component\Os\Implementation\Os_Hal_Context.h	   152    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   153  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   154  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   155    uint32 SavedPCXIRaw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   156    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Context.h	   157  
; ..\component\Os\Implementation\Os_Hal_Context.h	   158    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   159    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   160  
; ..\component\Os\Implementation\Os_Hal_Context.h	   161    /* #20 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   162    SavedPCXIRaw = Os_Hal_Mfcr(OS_HAL_PCXI_OFFSET);
; ..\component\Os\Implementation\Os_Hal_Context.h	   163  
; ..\component\Os\Implementation\Os_Hal_Context.h	   164    /* #30 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   165    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   166  
; ..\component\Os\Implementation\Os_Hal_Context.h	   167    /* #40 Set PCXI to the given context. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   168    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   169    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   170  
; ..\component\Os\Implementation\Os_Hal_Context.h	   171    /* #50 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   172    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   173  
; ..\component\Os\Implementation\Os_Hal_Context.h	   174    /* #60 Cleanup the CSAs and re-initialize the context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   175    Os_Hal_ContextIntCleanupCSAs(Context, &previousState);                                                                /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   176    Os_Hal_ContextIntInitializeReserved(Config, Context, &previousState);                                                 /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   177    Os_Hal_ContextIntInitialize(Config, Context, &previousState);                                                         /* SBSW_OS_HAL_FC_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   178  
; ..\component\Os\Implementation\Os_Hal_Context.h	   179    /* #70 Disable all interrupts */
; ..\component\Os\Implementation\Os_Hal_Context.h	   180    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Context.h	   181  
; ..\component\Os\Implementation\Os_Hal_Context.h	   182    /* #80 Restore the old PCXI */
; ..\component\Os\Implementation\Os_Hal_Context.h	   183    Os_Hal_Mtcr(OS_HAL_PCXI_OFFSET, SavedPCXIRaw);
; ..\component\Os\Implementation\Os_Hal_Context.h	   184    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Context.h	   185  
; ..\component\Os\Implementation\Os_Hal_Context.h	   186    /* #90 Restore all interrupts to decrease the Cat 0 ISR lock time. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   187    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Context.h	   188  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   189  
; ..\component\Os\Implementation\Os_Hal_Context.h	   190  
; ..\component\Os\Implementation\Os_Hal_Context.h	   191  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   192   *  Os_Hal_ContextSetParameter()
; ..\component\Os\Implementation\Os_Hal_Context.h	   193   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   195  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetParameter,
; ..\component\Os\Implementation\Os_Hal_Context.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   197    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   198    P2CONST(void, AUTOMATIC, OS_VAR_NOINIT) Parameter
; ..\component\Os\Implementation\Os_Hal_Context.h	   199  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   200  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   201    Context->A4 = (uint32)Parameter;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */ /* PRQA S 0306, 0326 */ /* MD_Os_Hal_Rule11.4_0306, MD_Os_Hal_Rule11.6_0326 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   202  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   203  
; ..\component\Os\Implementation\Os_Hal_Context.h	   204  
; ..\component\Os\Implementation\Os_Hal_Context.h	   205  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   206   *  Os_Hal_ContextSetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   207   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   208  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   209   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   210   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   211   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   212   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   213  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   214  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   215  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   216    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   217    P2CONST(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   218  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   219  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   220    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   221  
; ..\component\Os\Implementation\Os_Hal_Context.h	   222    /* #10 Save the current PCXI, since this function is called inside another context */
; ..\component\Os\Implementation\Os_Hal_Context.h	   223    if(Os_MpIsEnabled() != 0u)                                                                                            /* PRQA S 2991, 2995 */ /* MD_Os_Rule14.3_2991, MD_Os_Rule2.2_2995 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   224    {
; ..\component\Os\Implementation\Os_Hal_Context.h	   225      Context->MpuRegionForStackLow = Stack->StackRegionStart;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   226      Context->MpuRegionForStackUpper = Stack->StackRegionEnd;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   227    }
; ..\component\Os\Implementation\Os_Hal_Context.h	   228  
; ..\component\Os\Implementation\Os_Hal_Context.h	   229    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
; ..\component\Os\Implementation\Os_Hal_Context.h	   230    *(uint32*)(PCXIAddr + OS_HAL_CSA_SP_OFFSET) = Stack->StackRegionEnd;                                                  /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */ /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   232  
; ..\component\Os\Implementation\Os_Hal_Context.h	   233  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   234   *  Os_Hal_ContextGetStack()
; ..\component\Os\Implementation\Os_Hal_Context.h	   235   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   236  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   237  Os_Hal_ContextGetStack,
; ..\component\Os\Implementation\Os_Hal_Context.h	   238  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   239    P2CONST(Os_Hal_ContextConfigType, AUTOMATIC, OS_CONST) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   240    P2VAR(Os_Hal_ContextStackConfigType, AUTOMATIC, OS_VAR_NOINIT) Stack
; ..\component\Os\Implementation\Os_Hal_Context.h	   241  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   242  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   243     Stack->StackRegionStart = Context->StackStartAddr;                                                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   244     Stack->StackRegionEnd = Context->StackEndAddr;                                                                       /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   245  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   246  
; ..\component\Os\Implementation\Os_Hal_Context.h	   247  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   248   *  Os_Hal_ContextSetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Context.h	   249   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   250  OS_FUNC_ATTRIBUTE_DEFINITION(                                                                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   251  OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE, Os_Hal_ContextSetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Context.h	   252  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   253    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context,
; ..\component\Os\Implementation\Os_Hal_Context.h	   254    P2CONST(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Context.h	   255  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   256  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   257    Context->PreviousContextInfo &= (~OS_HAL_PCXI_PCPN_MASK) & (~OS_HAL_PCXI_PIE_MASK);                                   /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   258    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_MASK) << OS_HAL_PCXI_IE_TO_PIE;                     /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   259    Context->PreviousContextInfo |= (*InterruptState & OS_HAL_ICR_INT_LEVEL_MASK) << OS_HAL_PCXI_CCPN_TO_PCPN;            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Context.h	   260  }
; ..\component\Os\Implementation\Os_Hal_Context.h	   261  
; ..\component\Os\Implementation\Os_Hal_Context.h	   262  
; ..\component\Os\Implementation\Os_Hal_Context.h	   263  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Context.h	   264   *  Os_Hal_ContextSetUserMsrBits()
; ..\component\Os\Implementation\Os_Hal_Context.h	   265   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Context.h	   266  /*!
; ..\component\Os\Implementation\Os_Hal_Context.h	   267   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Context.h	   268   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   269   *
; ..\component\Os\Implementation\Os_Hal_Context.h	   270   */
; ..\component\Os\Implementation\Os_Hal_Context.h	   271  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219, 3673 */ /* MD_Os_Rule2.1_3219, MD_Os_Hal_Rule8.13_3673 */
; ..\component\Os\Implementation\Os_Hal_Context.h	   272  Os_Hal_ContextSetUserMsrBits,
; ..\component\Os\Implementation\Os_Hal_Context.h	   273  (
; ..\component\Os\Implementation\Os_Hal_Context.h	   274    P2VAR(Os_Hal_ContextType, AUTOMATIC, OS_VAR_NOINIT) Context
; ..\component\Os\Implementation\Os_Hal_Context.h	   275  ))
; ..\component\Os\Implementation\Os_Hal_Context.h	   276  {
; ..\component\Os\Implementation\Os_Hal_Context.h	   277    uint32 PCXIAddr;
; ..\component\Os\Implementation\Os_Hal_Context.h	   278    P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT) ctxPsw;
; ..\component\Os\Implementation\Os_Hal_Context.h	   279  
; ..\component\Os\Implementation\Os_Hal_Context.h	   280    PCXIAddr = Os_Hal_GetCsaAddress(Context->PreviousContextInfo);
	ld.w	d15,[a15]4
.L504:
	movh	d0,#15
	and	d0,d15
	sh	d0,d0,#12
	insert	d15,d15,#0,#16,#16
	sh	d15,#6
.L509:
	or	d0,d15
.L511:

; ..\component\Os\Implementation\Os_Hal_Context.h	   281    ctxPsw = (P2VAR(uint32, AUTOMATIC, OS_VAR_NOINIT))(PCXIAddr + OS_HAL_CSA_PSW_OFFSET);                                 /* PRQA S 0306 */ /* MD_Os_Hal_Rule11.4_0306 */
	add	d0,#4
.L510:
	mov.a	a15,d0
.L513:

; ..\component\Os\Implementation\Os_Hal_Context.h	   282  
; ..\component\Os\Implementation\Os_Hal_Context.h	   283    /* #10 Update PSW according to user settings. */
; ..\component\Os\Implementation\Os_Hal_Context.h	   284    *ctxPsw = ((*ctxPsw & (~OS_HAL_CORE_MSR_USER_BIT_MSK)) |                                                              /* SBSW_OS_HAL_PWA_PCXI_CONTEXTSWITCH */
	ld.w	d15,[a15]
.L657:
	insert	d15,d15,#0,#16,#16
.L658:

; ..\component\Os\Implementation\Os_Hal_Context.h	   285              (Os_Hal_Mfcr(OS_HAL_PSW_OFFSET) & OS_HAL_CORE_MSR_USER_BIT_MSK));
	mfcr	d0,#65028
.L512:
	insert	d0,d0,#0,#0,#16
.L659:
	or	d15,d0
	st.w	[a15],d15
.L451:
	ld.a	a4,[a12]4
.L660:
	ld.a	a5,[a13]4
	call	Os_Hal_ContextSwitch
.L53:
.L51:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
	disable
.L661:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
	mfcr	d15,#65068
.L662:
	insert	d15,d15,#0,#15,#1
.L514:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
	or	d15,d8
.L515:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L663:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
	isync
.L458:
	jeq	d9,#0,.L56
.L462:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     1  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     2   *  COPYRIGHT
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     3   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     4   *  \verbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     5   *  Copyright (c) 2019 by Vector Informatik GmbH.                                              All rights reserved.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     6   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     7   *                This software is copyright protected and proprietary to Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     8   *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	     9   *                All other rights remain with Vector Informatik GmbH.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    10   *  \endverbatim
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    11   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    12   *  FILE DESCRIPTION
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    13   *  ------------------------------------------------------------------------------------------------------------------*/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    14  /**
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    15   *  \addtogroup Os_Hal_Interrupt
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    16   *  \{
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    17   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    18   *  \file     Os_Hal_Interrupt.h
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    19   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    20   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    21  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    22   *  REVISION HISTORY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    23   *  --------------------------------------------------------------------------------------------------------------------
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    24   *  Refer to Os_Hal_Os.h.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    25   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    26                                                                                                                          /* PRQA S 0388  EOF */ /* MD_MSR_Dir1.1 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    27  #ifndef OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    28  # define OS_HAL_INTERRUPT_H
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    29  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    30  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    31   *  INCLUDES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    32   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    33  /* AUTOSAR includes */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    34  # include "Std_Types.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    35  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    36  /* Os module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    37  # include "Os_Hal_InterruptInt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    38  # include "Os_Hal_Interrupt_Lcfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    39  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    40  /* Os kernel module declarations */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    41  # include "Os_Interrupt.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    42  # include "Os_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    43  # include "Os_TimingProtection_Cfg.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    44  # include "Os_Common.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    45  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    46  /* Os Hal dependencies */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    47  # include "Os_Hal_Compiler.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    48  # include "Os_Hal_Derivative.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    49  # include "Os_Hal_Core.h"
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    50  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    51  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    52  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    53   *  GLOBAL CONSTANT MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    54   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    55  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    56  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    57  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    58   *  GLOBAL FUNCTION MACROS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    59   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    60  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    61  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    62  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    63   *  GLOBAL DATA TYPES AND STRUCTURES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    64   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    65  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    66  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    67  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    68   *  GLOBAL DATA PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    69   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    70  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    71  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    72  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    73   *  GLOBAL FUNCTION PROTOTYPES
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    74   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    75  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    76  # define OS_START_SEC_CODE
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    77  # include "Os_MemMap_OsCode.h"                                                                                          /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    78  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    79  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    80  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    81   *  GLOBAL FUNCTIONS
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    82   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    83  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    84  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    85   *  Os_Hal_IntEnableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    86   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    87  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    88   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    89   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    90   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    91   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    92  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    93  Os_Hal_IntEnableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    94  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    95    /* #10 Enable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    96    Os_Hal_Enable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    97  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    98  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	    99  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   100  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   101   *  Os_Hal_IntDisableGlobal()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   102   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   103  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   104   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   105   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   106   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   107   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   108  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   109  Os_Hal_IntDisableGlobal, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   110  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   111    /* #10 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   112    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   113  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   114  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   115  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   116  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   117   *  Os_Hal_IntDisableAndReturnGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   118   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   119  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   120   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   121   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   122   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   123   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   124   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   125  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_Hal_IntGlobalStateType, OS_CODE, OS_ALWAYS_INLINE,                      /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   126  Os_Hal_IntDisableAndReturnGlobalState, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   127  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   128    Os_Hal_IntGlobalStateType retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   129  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   130    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   131    retState = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   132  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   133    /* #20 Disable the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   134    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   135  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   136    return retState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   137  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   138  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   139  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   140  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   141   *  Os_Hal_IntSetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   142   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   143  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   144   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   145   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   146   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   147   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   148  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   149  Os_Hal_IntSetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   150  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   151    P2CONST(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   152  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   153  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   154    Os_Hal_IntGlobalStateType icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   155  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   156    /* #10 Set the global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   157    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   158    icr =  Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & (Os_Hal_IntGlobalStateType)~(OS_HAL_ICR_INT_GLOBAL_ENABLED);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   159  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   161    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   162  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   163  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   164  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   165  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   166   *  Os_Hal_IntGetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   167   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   168  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   169   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   170   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   171   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   172   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   173  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   174  OS_ALWAYS_INLINE, Os_Hal_IntGetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   175  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   176    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   177  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   178  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   179    /* #10 Get the current interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   180    *Level = (Os_Hal_IntLevelType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_LEVEL_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L468:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   181  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   182  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   183  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   184  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   185   *  Os_Hal_IntSetLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   186   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   187  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   188   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   189   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   190   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   191   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   192   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   193   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   194  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   195  Os_Hal_IntSetLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   196  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   197    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   198  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   199  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   200    Os_Hal_IntGlobalStateType previousState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   201  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   202    /* #10 Store the current interrupt global state and disable all interrupts. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   203    Os_Hal_IntGetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   204    Os_Hal_Disable();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   205  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   206    /* #20 Set the interrupt level. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   208    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   209  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   210    /* #30 Restore the previous interrupt global state. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   211    Os_Hal_IntSetGlobalState(&previousState);                                                                             /* SBSW_OS_HAL_FC_LOCAL_VAR */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   212  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   213  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   214  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   215  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   216   *  Os_Hal_IntGetGlobalEnable()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   217   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   218  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   219   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   220   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   221   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   222   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   223  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   224  Os_Hal_IntGetGlobalEnable,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   225  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   226    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   227  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   228  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   229    /* #10 Get global interrupt enable mask. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   230    *State = (Os_Hal_IntGlobalStateType)(OS_HAL_ICR_INT_GLOBAL_ENABLED);                                                  /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   231  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   232  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   233  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   234  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   235   *  Os_Hal_IntGetCat2LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   236   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   237  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   238   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   239   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   240   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   241   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   242  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   243  Os_Hal_IntGetCat2LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   244  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   245    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   246  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   247  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   248    /* #10 Get the interrupt level for CAT2. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   249    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR2_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   250  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   251  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   252  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   253  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   254   *  Os_Hal_IntGetCat1LockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   255   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   256  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   257   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   258   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   259   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   260   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   261  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   262  Os_Hal_IntGetCat1LockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   263  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   264    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   265  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   266  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   267    /* #10 Get the interrupt level for CAT1. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   268    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_ISR1_DISABLE_LEVEL;                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   269  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   270  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   271  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   272  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   273   *  Os_Hal_IntGetTPLockLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   274   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   275  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   276   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   277   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   278   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   279   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   280  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   281  Os_Hal_IntGetTPLockLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   282  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   283    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   284  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   285  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   286    /* #10 Get the interrupt level for TP. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   287    *Level = (Os_Hal_IntLevelType)OS_CFG_HAL_TP_DISABLE_LEVEL;                                                            /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   288  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   289  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   290  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   291  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   292   *  Os_Hal_IntGetTaskLevel()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   293   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   294  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   295   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   296   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   297   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   298   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   299  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   300  Os_Hal_IntGetTaskLevel,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   301  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   302    P2VAR(Os_Hal_IntLevelType, AUTOMATIC, OS_APPL_DATA) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   303  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   304  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   305    /* #10 Get the interrupt level for tasks. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   306    *Level = (Os_Hal_IntLevelType)0;                                                                                      /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   307  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   308  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   309  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   310  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   311   *  Os_Hal_IntGetInterruptState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   312   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   313  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   314   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   315   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   316   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   317   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   318  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   319  OS_ALWAYS_INLINE, Os_Hal_IntGetInterruptState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   320  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   321    P2VAR(Os_Hal_IntStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   322  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   323  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   324    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   325    *InterruptState = (Os_Hal_IntStateType)(                                                                              /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   326                                             Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   327                                             (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   328                                           );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   329  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   330  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   331  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   332  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   333   *  Os_Hal_IntDisableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   334   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   335  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   336   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   337   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   338   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   339   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   340  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   341  Os_Hal_IntDisableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   342  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   343    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   344  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   345  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   346    /* #10 Disable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   347    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) &= ~OS_HAL_INT_SRC_SRE_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   348  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   349  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   350  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   351  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   352   *  Os_Hal_IntDisableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   353   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   354  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   355  Os_Hal_IntDisableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   356  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   357    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   358    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   359  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   360  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   361    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   362    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   363  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   364  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   365  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   366  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   367   *  Os_Hal_IntEnableSource()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   368   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   369  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   370   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   371   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   372   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   373   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   374  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   375  Os_Hal_IntEnableSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   376  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   377    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   378  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   379  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   380    /* #10 Enable the given interrupt source in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   381    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_SRE_MASK;                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   382  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   383  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   384  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   385  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   386   *  Os_Hal_IntEnableSourceMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   387   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   388  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   389  Os_Hal_IntEnableSourceMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   390  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   391    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   392    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   393  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   394  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   395    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   396    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   397  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   398  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   399  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   400  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   401   *  Os_Hal_IntIsClearPendingSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   402   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   403  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   404  Os_Hal_IntIsClearPendingSupported,( void ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   405  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   406    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   407  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   408  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   409  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   410  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   411   *  Os_Hal_IntClearPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   412   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   413  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   414   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   415   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   416   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   417   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   418  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   419  Os_Hal_IntClearPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   420  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   421    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   422  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   423  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   424    /* #10 Clear the interrupt pending flag in its SRC register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   425    *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source))) |= OS_HAL_INT_SRC_CLRR_MASK;                        /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   426  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   427  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   428  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   429  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   430   *  Os_Hal_IntClearPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   431   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   432  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   433  Os_Hal_IntClearPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   434  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   435    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   436    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   437  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   438  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   439    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   440    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   441  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   442  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   443  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   444  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   445   *  Os_Hal_IntIsInterruptSourceEnabled()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   446   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   447  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   448   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   449   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   450   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   451   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   452   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   453  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   454  Os_Hal_IntIsInterruptSourceEnabled,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   455  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   456    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   457  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   458  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   459    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   460  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   461    /* #10 Get the interrupt source enable flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   462    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   463  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   464    /* #20 Return the interrupt source enable status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   465    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRE_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   466  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   467  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   468  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   469  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   470   *  Os_Hal_IntIsInterruptSourceEnabledMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   471   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   472  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   473  Os_Hal_IntIsInterruptSourceEnabledMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   474  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   475    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   476    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   477  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   478  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   479    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   480    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   481    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   482  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   483  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   484  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   485  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   486   *  Os_Hal_IntIsInterruptPending()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   487   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   488  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   489   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   490   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   491   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   492   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   493   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   494  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   495  Os_Hal_IntIsInterruptPending,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   496  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   497    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   498  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   499  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   500    volatile uint32 intSourceValue;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   501  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   502    /* #10 Get the interrupt source pending flag. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   503    intSourceValue = *((volatile uint32*) (OS_HAL_INT_SRC_BASE + (IsrConfig->Source)));                                   /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   504  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   505    /* #20 Return the interrupt source pending status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   506    return (Os_StdReturnType)((intSourceValue & OS_HAL_INT_SRC_SRR_MASK) != 0x0uL);                                       /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   507  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   508  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   509  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   510  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   511   *  Os_Hal_IntIsInterruptPendingMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   512   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   513  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   514  Os_Hal_IntIsInterruptPendingMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   515  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   516    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   517    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   518  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   519  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   520    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   521    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   522    return 0u;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   523  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   524  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   525  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   526  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   527   *  Os_Hal_IntEndOfInterrupt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   528   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   529  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   530  Os_Hal_IntEndOfInterrupt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   531  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   532    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   533  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   534  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   535    /*! \note There is no need to acknowledge that interrupt handling in Aurix. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   536    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   537  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   538  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   539  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   540  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   541   *  Os_Hal_IntEndOfInterruptMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   542   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   543  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   544  Os_Hal_IntEndOfInterruptMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   545  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   546    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   547    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   548  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   549  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   550    OS_IGNORE_UNREF_PARAM(IsrConfig);                                                                                     /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   551    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   552  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   553  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   554  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   555  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   556   *  Os_Hal_IntIsrLevelIsLe(()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   557   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   558  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   559   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   560   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   561   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   562   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   563  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType,                                                          /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   564  OS_CODE, OS_ALWAYS_INLINE, Os_Hal_IntIsrLevelIsLe,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   565  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   566    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) IsrConfig,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   567    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) Level
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   568  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   569  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   570    /* #10 Get the interrupt level is lower or equal status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   571    return (Os_StdReturnType)(IsrConfig->Level <= (*Level));                                                              /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   572  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   573  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   574  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   575  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   576   *  Os_Hal_IntLevelIsGt()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   577   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   578  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   579   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   580   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   581   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   582   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   583  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE,                                                 /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   584  OS_ALWAYS_INLINE, Os_Hal_IntLevelIsGt,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   585  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   586    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelX,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   587    P2CONST(Os_Hal_IntLevelType, AUTOMATIC, OS_CONST) LevelY
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   588  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   589  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   590    /* #10 Get the interrupt level is higher status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   591    return (Os_StdReturnType)((*LevelX) > (*LevelY));                                                                     /* PRQA S 4304 */ /* MD_Os_C90BooleanCompatibility */
	ld.w	d0,[a10]4
.L471:
	and	d15,#255
.L472:

; ..\component\Os\Implementation\Os_Interrupt.h	   376      if(Os_Hal_IntLevelIsGt(&currentLevel, &(PreviousIntState->Level)) != 0u)                                            /* SBSW_OS_FC_POINTER2LOCAL */ /* SBSW_OS_FC_PRECONDITION */      (inlined)
	jge.u	d0,d15,.L57
.L473:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   592  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   593  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   594  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   595  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   596   *  Os_Hal_IntTrapRestore()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   597   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   598  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   599   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   600   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   601   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   602   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   603  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   604  OS_ALWAYS_INLINE, Os_Hal_IntTrapRestore,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   605  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   606    P2CONST(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   607  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   608  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   609    uint32 icr;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   610  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   611    /* #10 Restore the previous interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   612    icr = Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~(OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   613    icr |= *InterruptState;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   614  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   615    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, icr);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   616    Os_Hal_Isync();
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   617  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   618  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   619  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   620  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   621   *  Os_Hal_IntTrapUpdate()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   622   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   623  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   624   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   625   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   626   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   627   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   628  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   629  OS_ALWAYS_INLINE, Os_Hal_IntTrapUpdate,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   630  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   631    P2VAR(Os_Hal_IntTrapStateType, AUTOMATIC, OS_VAR_NOINIT) InterruptState
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   632  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   633  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   634    /* #10 Get the current interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   635    *InterruptState = (Os_Hal_IntTrapStateType)(                                                                          /* SBSW_OS_HAL_PWA_CALLER */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   636                                                 Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) &
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   637                                                 (OS_HAL_ICR_INT_MASK | OS_HAL_ICR_INT_LEVEL_MASK)
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   638                                               );
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   639  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   640  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   641  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   642  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   643   *  Os_Hal_IntInterruptSourceInit()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   644   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   645  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   646   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   647   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   648   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   649   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   650   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   651   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   652   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   653  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   654  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInit,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   655  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   656    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   657  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   658  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   659    uint32 tempSRC;
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   660  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   661    /* #10 Get the current register content. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   662    tempSRC = *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE);                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   663  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   664    /* #20 Clear the bits for priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   665    tempSRC &= (~OS_HAL_INT_SRC_SRPN_MASK & ~OS_HAL_INT_SRC_TOS_MASK);
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   666  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   667    /* #30 Set the required priority and core assignment. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   668    tempSRC |= (InterruptSource->Level | (((uint32)(InterruptSource->CoreAssignment)) << OS_HAL_INT_SRC_TOS_SHIFTVALUE));
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   669  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   670    /* #40 Write back to the register. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   671    *(volatile uint32*)(InterruptSource->Source + OS_HAL_INT_SRC_BASE) = tempSRC;                                         /* PRQA S 0303 */ /* MD_Os_Hal_Rule11.4_0303 */ /* SBSW_OS_HAL_PWA_ISRCONFIG */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   672  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   673  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   674  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   675  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   676   *  Os_Hal_IntInterruptSourceInitMapped()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   677   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   678  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE,                                                             /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */ /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   679  OS_ALWAYS_INLINE, Os_Hal_IntInterruptSourceInitMapped,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   680  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   681    P2CONST(Os_Hal_IntIsrConfigType, AUTOMATIC, OS_APPL_DATA) InterruptSource,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   682    P2CONST(Os_Hal_IntIsrMapConfigType, AUTOMATIC, OS_APPL_DATA) IsrMapConfig
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   683  ))                                                                                                                      /* COV_OS_HALPLATFORMISRMAPPINGAVAILABILITY */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   684  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   685    OS_IGNORE_UNREF_PARAM(InterruptSource);                                                                               /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   686    OS_IGNORE_UNREF_PARAM(IsrMapConfig);                                                                                  /* PRQA S 3112 */ /* MD_MSR_DummyStmt */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   687  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   688  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   689  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   690  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   691   *  Os_Hal_IntIsGlobal2LevelSwitchSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   692   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   693  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   694  Os_Hal_IntIsGlobal2LevelSwitchSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   695  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   696    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   697  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   698  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   699  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   700   *  Os_Hal_IntIsPeripheralInterruptTriggerSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   701   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   702   /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   703   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   704   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   705   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   706   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   707  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   708  Os_Hal_IntIsPeripheralInterruptTriggerSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   709  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   710    /* #10 Return !0 because the peripheral interrupts can be triggered. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   711    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   712  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   713  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   714  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   715  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   716   *  Os_Hal_IntIsLevelSupported()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   717   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   718  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE Os_StdReturnType, OS_CODE, OS_ALWAYS_INLINE,                               /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   719  Os_Hal_IntIsLevelSupported, (void))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   720  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   721    return !0u;                                                                                                           /* PRQA S 4404, 4558 */ /* MD_Os_C90BooleanCompatibility, MD_Os_Rule10.1_4558 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   722  }
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   723  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   724  
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   725  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   726   *  Os_Hal_IntGetGlobalState()
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   727   **********************************************************************************************************************/
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   728  /*!
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   729   * Internal comment removed.
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   730   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   731   *
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   732   */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   733  OS_FUNC_ATTRIBUTE_DEFINITION(OS_LOCAL_INLINE void, OS_CODE, OS_ALWAYS_INLINE,                                           /* PRQA S 3219 */ /* MD_Os_Rule2.1_3219 */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   734  Os_Hal_IntGetGlobalState,
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   735  (
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   736    P2VAR(Os_Hal_IntGlobalStateType, AUTOMATIC, OS_APPL_DATA) State
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   737  ))
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   738  {
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   739    /* #10 Get the current global interrupt status. */
; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   740    *State = (Os_Hal_IntGlobalStateType)(Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & OS_HAL_ICR_INT_MASK);                           /* SBSW_OS_HAL_PWA_CALLER */
	mfcr	d15,#65068
.L516:
	and	d10,d15
.L476:
	disable
.L664:
	mfcr	d15,#65068
	insert	d15,d15,#0,#0,#8
	or	d15,d0

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   207    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (Os_Hal_Mfcr(OS_HAL_ICR_OFFSET) & ~OS_HAL_ICR_INT_LEVEL_MASK) | (*Level));             /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L665:
	isync
.L477:
	disable
.L666:
	mfcr	d15,#65068
.L667:
	insert	d15,d15,#0,#15,#1
.L517:
	or	d15,d10
.L518:

; ..\component\Os\Implementation\Os_Hal_Interrupt.h	   160    Os_Hal_Mtcr(OS_HAL_ICR_OFFSET, (icr | *State));                                                                       /* COMP_WARN_OS_HAL_UNINITIALIZED_VAR */      (inlined)
	mtcr  #0xFE2C, d15
.L668:
	isync

; ..\component\Os\Implementation\Os_Interrupt.h	   376      if(Os_Hal_IntLevelIsGt(&currentLevel, &(PreviousIntState->Level)) != 0u)                                            /* SBSW_OS_FC_POINTER2LOCAL */ /* SBSW_OS_FC_PRECONDITION */      (inlined)
.L57:
.L56:
	mov	d2,#0
	ret
.L341:
	
__Os_Api_ReleaseResource_function_end:
	.size	Os_Api_ReleaseResource,__Os_Api_ReleaseResource_function_end-Os_Api_ReleaseResource
.L94:
	; End of function
	
	.calls	'Os_ResourceForciblyReleaseLocks','Os_SchedulerDecreasePrio'
	.calls	'Os_Api_GetResource','Os_SchedulerIncreasePrio'
	.calls	'Os_Api_ReleaseResource','Os_SchedulerDecreasePrio'
	.calls	'Os_Api_ReleaseResource','Os_SchedulerRobRound'
	.calls	'Os_Api_ReleaseResource','Os_SchedulerInternalSchedule'
	.calls	'Os_Api_ReleaseResource','Os_ErrProtectionError'
	.calls	'Os_Api_ReleaseResource','__INDIRECT__'
	.calls	'Os_Api_ReleaseResource','Os_Hal_ContextSwitch'
	.calls	'Os_Api_GetResource','.cocofun_1'
	.calls	'Os_Api_GetResource','.cocofun_2'
	.calls	'Os_Api_ReleaseResource','.cocofun_1'
	.calls	'Os_Api_ReleaseResource','.cocofun_2'
	.calls	'Os_ResourceInit','',0
	.calls	'Os_ResourceForciblyReleaseLocks','',0
	.calls	'Os_Api_GetResource','',0
	.calls	'.cocofun_2','',0
	.calls	'.cocofun_1','',0
	.extern	OsCfg_ResourceRefs
	.extern	Os_ErrProtectionError
	.extern	OsCfg_CorePhysicalRefs
	.extern	Os_SchedulerRobRound
	.extern	Os_SchedulerIncreasePrio
	.extern	Os_SchedulerDecreasePrio
	.extern	Os_SchedulerInternalSchedule
	.extern	Os_Hal_ContextSwitch
	.extern	__INDIRECT__
	.calls	'Os_Api_ReleaseResource','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L72:
	.word	114269
	.half	3
	.word	.L73
	.byte	4
.L71:
	.byte	1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L74
.L183:
	.byte	2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Os_Hal_Mfa10',0,3,1,190,4,1
	.word	138
	.byte	1,1,4,0,3
	.byte	'Os_Hal_Mfa11',0,3,1,206,4,1
	.word	138
	.byte	1,1,4,0
.L181:
	.byte	3
	.byte	'Os_Hal_Mfa8',0,3,1,222,4,1
	.word	138
	.byte	1,1
.L182:
	.byte	4,0
.L147:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Os_ErrIsValueLo',0,3,2,202,18,1
	.word	239
	.byte	1,1,5
	.byte	'Id',0,2,202,18,1
	.word	138
	.byte	5
	.byte	'Compare',0,2,202,18,1
	.word	138
	.byte	4,0,3
	.byte	'Os_ErrExtendedCheck',0,3,2,216,18,1
	.word	239
	.byte	1,1,5
	.byte	'Value',0,2,216,18,1
	.word	239
	.byte	4,0,6
	.byte	'Os_Assert',0,3,2,140,19,1,1,1,5
	.byte	'Condition',0,2,140,19,1
	.word	239
	.byte	4,0,2
	.byte	'unsigned char',0,1,8
.L167:
	.byte	7,3,172,4,9,2,8
	.byte	'OS_STATUS_OK',0,0,8
	.byte	'OS_STATUS_CALLEVEL',0,2,8
	.byte	'OS_STATUS_LIMIT',0,4,8
	.byte	'OS_STATUS_RESOURCE',0,6,8
	.byte	'OS_STATUS_SERVICEID',0,9,8
	.byte	'OS_STATUS_ILLEGAL_ADDRESS',0,10,8
	.byte	'OS_STATUS_MISSINGEND',0,11,8
	.byte	'OS_STATUS_DISABLEDINT',0,12,8
	.byte	'OS_STATUS_STACKFAULT',0,13,8
	.byte	'OS_STATUS_PROTECTION_MEMORY',0,14,8
	.byte	'OS_STATUS_PROTECTION_TIME',0,15,8
	.byte	'OS_STATUS_PROTECTION_ARRIVAL',0,16,8
	.byte	'OS_STATUS_PROTECTION_LOCKED',0,17,8
	.byte	'OS_STATUS_PROTECTION_EXCEPTION',0,18,8
	.byte	'OS_STATUS_INTERFERENCE_DEADLOCK',0,19,8
	.byte	'OS_STATUS_NESTING_DEADLOCK',0,20,8
	.byte	'OS_STATUS_SPINLOCK',0,21,8
	.byte	'OS_STATUS_CORE',0,22,8
	.byte	'OS_STATUS_OVERFLOW',0,245,1,8
	.byte	'OS_STATUS_KILL_KERNEL_OBJ',0,246,1,8
	.byte	'OS_STATUS_NO_RESTARTTASK',0,247,1,8
	.byte	'OS_STATUS_CALL_NOT_ALLOWED',0,248,1,8
	.byte	'OS_STATUS_FUNCTION_UNAVAILABLE',0,249,1,8
	.byte	'OS_STATUS_PROTECTION_SYSCALL',0,250,1,8
	.byte	'OS_STATUS_PROTECTION_IRQ',0,251,1,8
	.byte	'OS_STATUS_API_ERROR',0,252,1,8
	.byte	'OS_STATUS_ASSERTION',0,253,1,8
	.byte	'OS_STATUS_OVERLOAD',0,254,1,8
	.byte	'OS_STATUS_ACCESSRIGHTS_1',0,129,2,8
	.byte	'OS_STATUS_CALLEVEL_SHARED_STACK',0,130,2,8
	.byte	'OS_STATUS_ID_1',0,131,2,8
	.byte	'OS_STATUS_UNLOCKED',0,133,2,8
	.byte	'OS_STATUS_STATE_1',0,135,2,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_1',0,136,2,8
	.byte	'OS_STATUS_CORE_CROSS_DATA',0,150,2,8
	.byte	'OS_STATUS_PARAM_POINTER_1',0,151,2,8
	.byte	'OS_STATUS_STACKUSAGE_DISABLED_BY_CONFIG',0,241,3,8
	.byte	'OS_STATUS_NO_BARRIER_PARTICIPANT',0,242,3,8
	.byte	'OS_STATUS_UNIMPLEMENTED_CLEARPENDING',0,243,3,8
	.byte	'OS_STATUS_NO_NTFSTACK_POOL_EMPTY',0,244,3,8
	.byte	'OS_STATUS_ACCESSRIGHTS_2',0,129,4,8
	.byte	'OS_STATUS_CALLEVEL_CROSS_CORE_SYNC',0,130,4,8
	.byte	'OS_STATUS_ID_2',0,131,4,8
	.byte	'OS_STATUS_NOFUNC_1',0,133,4,8
	.byte	'OS_STATUS_STATE_2',0,135,4,8
	.byte	'OS_STATUS_VALUE_IS_ZERO_2',0,136,4,8
	.byte	'OS_STATUS_PARAM_POINTER_2',0,151,4,8
	.byte	'OS_STATUS_EVENT_DISABLED_BY_CONFIG',0,241,5,8
	.byte	'OS_STATUS_UNIMPLEMENTED_EXCEPTIONCONTEXT',0,243,5,8
	.byte	'OS_STATUS_NO_NTFSTACK_APPLIMIT_EXCEEDED',0,244,5,8
	.byte	'OS_STATUS_NOTACCESSIBLE_1',0,129,6,8
	.byte	'OS_STATUS_ID_TYPE_1',0,131,6,8
	.byte	'OS_STATUS_NOFUNC_2',0,133,6,8
	.byte	'OS_STATUS_STATE_STOPPED',0,135,6,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_1',0,136,6,8
	.byte	'OS_STATUS_PARAM_POINTER_3',0,151,6,8
	.byte	'OS_STATUS_NOTACCESSIBLE_2',0,129,8,8
	.byte	'OS_STATUS_ID_DIFFERENT_COUNTER',0,131,8,8
	.byte	'OS_STATUS_SPINLOCK_ORDER',0,133,8,8
	.byte	'OS_STATUS_STATE_RUNNING',0,135,8,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_2',0,136,8,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_1',0,129,10,8
	.byte	'OS_STATUS_ID_DIFFERENT_SYNC',0,131,10,8
	.byte	'OS_STATUS_STOPPED_1',0,133,10,8
	.byte	'OS_STATUS_STATE_NEXTED',0,135,10,8
	.byte	'OS_STATUS_VALUE_IS_TOO_HIGH_3',0,136,10,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_2',0,129,12,8
	.byte	'OS_STATUS_HOOK_NOT_AVAILABLE',0,131,12,8
	.byte	'OS_STATUS_NOT_STOPPED_2',0,133,12,8
	.byte	'OS_STATUS_STATE_WAITING',0,135,12,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_1',0,136,12,8
	.byte	'OS_STATUS_NOEXTENDEDTASK_CALLER',0,129,14,8
	.byte	'OS_STATUS_NEXTED_1',0,133,14,8
	.byte	'OS_STATUS_STATE_NO_RESTART',0,135,14,8
	.byte	'OS_STATUS_VALUE_IS_OUT_OF_BOUNDS_2',0,136,14,8
	.byte	'OS_STATUS_LOCKED',0,129,16,8
	.byte	'OS_STATUS_KILLING_IS_DISABLED',0,133,16,8
	.byte	'OS_STATUS_STATE_ALREADY_TERMINATED',0,135,16,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_1',0,136,16,8
	.byte	'OS_STATUS_PRIORITY',0,129,18,8
	.byte	'OS_STATUS_ORDER',0,133,18,8
	.byte	'OS_STATUS_STATE_RESTARTING_NO_MEMBER',0,135,18,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_2',0,136,18,8
	.byte	'OS_STATUS_NOT_THE_OWNER_1',0,129,20,8
	.byte	'OS_STATUS_STATE_ALREADY_RESTARTING',0,135,20,8
	.byte	'OS_STATUS_VALUE_IS_TOO_LOW_3',0,136,20,8
	.byte	'OS_STATUS_VALUE_IS_NOT_BOOLEAN',0,136,22,0,3
	.byte	'Os_ErrOsStatus2UserStatus',0,3,2,185,19,1
	.word	402
	.byte	1,1,5
	.byte	'OsStatus',0,2,185,19,1
	.word	419
	.byte	4,0,3
	.byte	'Os_ErrIsPropagationRequired',0,3,2,203,19,1
	.word	239
	.byte	1,1,5
	.byte	'OsStatus',0,2,203,19,1
	.word	419
	.byte	4,0,9
	.byte	'Os_LockType_Tag',0,5,82,8,4,10
	.byte	'Next',0
	.word	.L141-.L72
	.byte	4,2,35,0,0,11
	.word	3044
	.byte	7,5,73,9,1,8
	.byte	'OS_LOCKTYPE_RESOURCE_STANDARD',0,0,8
	.byte	'OS_LOCKTYPE_RESOURCE_INTERRUPT',0,1,8
	.byte	'OS_LOCKTYPE_SPINLOCK',0,2,0,9
	.byte	'Os_LockConfigType_Tag',0,5,92,8,12,10
	.byte	'Dyn',0
	.word	3080
	.byte	4,2,35,0,10
	.byte	'AccessingApplications',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'Type',0
	.word	3085
	.byte	1,2,35,8,0,12
	.word	3179
.L141:
	.byte	11
	.word	3265
	.byte	13
	.byte	'Os_LockListType',0,6,65,55
	.word	3270
.L117:
	.byte	11
	.word	3275
	.byte	6
	.byte	'Os_LockListInit',0,3,4,90,1,1,1,5
	.byte	'LockList',0,4,90,1
	.word	3299
	.byte	4,0,12
	.word	3179
	.byte	11
	.word	3346
.L315:
	.byte	6
	.byte	'Os_LockListPush',0,3,4,103,1,1,1
.L317:
	.byte	5
	.byte	'LockList',0,4,103,1
	.word	3299
.L319:
	.byte	5
	.byte	'Lock',0,4,103,1
	.word	3270
.L321:
	.byte	4,0
.L136:
	.byte	6
	.byte	'Os_LockListPop',0,3,4,118,1,1,1
.L137:
	.byte	5
	.byte	'LockList',0,4,118,1
	.word	3299
.L139:
	.byte	4,0,12
	.word	3275
	.byte	11
	.word	3452
	.byte	3
	.byte	'Os_LockListNext',0,3,4,168,1,1
	.word	3270
	.byte	1,1,5
	.byte	'LockList',0,4,168,1,1
	.word	3457
	.byte	4,0,3
	.byte	'Os_LockListNextIterator',0,3,4,180,1,1
	.word	3299
	.byte	1,1,5
	.byte	'Iterator',0,4,180,1,1
	.word	3457
	.byte	4,0,3
	.byte	'Os_LockListIsEmpty',0,3,4,193,1,1
	.word	239
	.byte	1,1,5
	.byte	'LockList',0,4,193,1,1
	.word	3457
	.byte	4,0
.L143:
	.byte	3
	.byte	'Os_LockListIsTopRes',0,3,4,213,1,1
	.word	239
	.byte	1,1
.L144:
	.byte	5
	.byte	'LockList',0,4,213,1,1
	.word	3457
.L146:
	.byte	14,4,4,0,0,3
	.byte	'Os_LockListIsTopSpinlock',0,3,4,131,2,1
	.word	239
	.byte	1,1,5
	.byte	'LockList',0,4,131,2,1
	.word	3457
	.byte	14,4,0,0,3
	.byte	'Os_LockListGetTop',0,3,4,156,2,1
	.word	3270
	.byte	1,1,5
	.byte	'LockList',0,4,156,2,1
	.word	3457
	.byte	4,0,3
	.byte	'Os_LockListCheckIsListTop',0,3,4,238,1,1
	.word	239
	.byte	1,1,5
	.byte	'LockList',0,4,238,1,1
	.word	3457
	.byte	5
	.byte	'Lock',0,4,238,1,1
	.word	3270
	.byte	14,4,0,0
.L108:
	.byte	6
	.byte	'Os_LockInit',0,3,4,169,2,1,1,1
.L110:
	.byte	5
	.byte	'Lock',0,4,169,2,1
	.word	3270
.L112:
	.byte	4,0,3
	.byte	'Os_LockIsIntResource',0,3,4,182,2,1
	.word	239
	.byte	1,1,5
	.byte	'Lock',0,4,182,2,1
	.word	3270
	.byte	4,0
.L149:
	.byte	3
	.byte	'Os_LockIsResource',0,3,4,195,2,1
	.word	239
	.byte	1,1
.L151:
	.byte	5
	.byte	'Lock',0,4,195,2,1
	.word	3270
.L153:
	.byte	4,0,3
	.byte	'Os_LockGetAccessingApplications',0,3,4,250,2,1
	.word	138
	.byte	1,1,5
	.byte	'Lock',0,4,250,2,1
	.word	3270
	.byte	4,0,3
	.byte	'Os_LockCheckIsAvailable',0,3,4,209,2,1
	.word	239
	.byte	1,1,5
	.byte	'Lock',0,4,209,2,1
	.word	3270
	.byte	14,4,0,0,3
	.byte	'Os_LockCheckIsOccupied',0,3,4,223,2,1
	.word	239
	.byte	1,1,5
	.byte	'Lock',0,4,223,2,1
	.word	3270
	.byte	14,4,0,0,3
	.byte	'Os_LockGetDyn',0,3,4,237,2,1
	.word	3080
	.byte	1,1,5
	.byte	'Lock',0,4,237,2,1
	.word	3270
	.byte	4,0,12
	.word	138
	.byte	11
	.word	4195
	.byte	6
	.byte	'Os_Hal_InitializeAccessDPRE',0,3,7,109,1,1,1,5
	.byte	'Value',0,7,109,1
	.word	4200
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessDPWE',0,3,7,127,1,1,1,5
	.byte	'Value',0,7,127,1
	.word	4200
	.byte	4,0,6
	.byte	'Os_Hal_InitializeAccessCPXE',0,3,7,145,1,1,1,1,5
	.byte	'Value',0,7,145,1,1
	.word	4200
	.byte	4,0,12
	.word	402
	.byte	12
	.word	138
	.byte	12
	.word	138
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPRE',0,3,7,163,1,1,1,1,5
	.byte	'ProtectionSet',0,7,163,1,1
	.word	4360
	.byte	5
	.byte	'Mask',0,7,163,1,1
	.word	4365
	.byte	5
	.byte	'Value',0,7,163,1,1
	.word	4370
	.byte	4,0,12
	.word	402
	.byte	12
	.word	138
	.byte	12
	.word	138
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessDPWE',0,3,7,200,1,1,1,1,5
	.byte	'ProtectionSet',0,7,200,1,1
	.word	4465
	.byte	5
	.byte	'Mask',0,7,200,1,1
	.word	4470
	.byte	5
	.byte	'Value',0,7,200,1,1
	.word	4475
	.byte	4,0,12
	.word	402
	.byte	12
	.word	138
	.byte	12
	.word	138
	.byte	6
	.byte	'Os_Hal_ReadModifyAccessCPXE',0,3,7,237,1,1,1,1,5
	.byte	'ProtectionSet',0,7,237,1,1
	.word	4570
	.byte	5
	.byte	'Mask',0,7,237,1,1
	.word	4575
	.byte	5
	.byte	'Value',0,7,237,1,1
	.word	4580
	.byte	4,0,12
	.word	138
	.byte	9
	.byte	'Os_Hal_ContextConfigType_Tag',0,8,153,1,8,28,10
	.byte	'StackEndAddr',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'StackStartAddr',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'ProgramStatus',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'ProtectionSet',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'Entry',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'ReturnAddress',0
	.word	138
	.byte	4,2,35,20,10
	.byte	'IntStatus',0
	.word	138
	.byte	4,2,35,24,0,12
	.word	4680
	.byte	11
	.word	4865
	.byte	6
	.byte	'Os_Hal_ContextPreparePRS',0,3,7,145,2,1,1,1,5
	.byte	'PcxiAddr',0,7,145,2,1
	.word	4675
	.byte	5
	.byte	'CurrentConfig',0,7,145,2,1
	.word	4870
	.byte	4,0
.L416:
	.byte	3
	.byte	'Os_Hal_CoreGetId',0,3,7,158,2,1
	.word	138
	.byte	1,1
.L418:
	.byte	4,0,9
	.byte	'Os_Hal_ContextType_Tag',0,8,115,8,28,10
	.byte	'Lr',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'PreviousContextInfo',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'InitPCXI',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'RunningPCXI',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'MpuRegionForStackLow',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'MpuRegionForStackUpper',0
	.word	138
	.byte	4,2,35,20,10
	.byte	'A4',0
	.word	138
	.byte	4,2,35,24,0,11
	.word	4982
	.byte	11
	.word	138
	.byte	9
	.byte	'Os_StackConfigType_Tag',0,12,104,8,8,10
	.byte	'LowAddress',0
	.word	5170
	.byte	4,2,35,0,10
	.byte	'HighAddress',0
	.word	5170
	.byte	4,2,35,4,0,12
	.word	5175
	.byte	11
	.word	5245
	.byte	7,13,135,1,9,1,8
	.byte	'OS_SPINLOCKMETHOD_ALL_INT',0,0,8
	.byte	'OS_SPINLOCKMETHOD_CAT2',0,1,8
	.byte	'OS_SPINLOCKMETHOD_SCHEDULER',0,2,8
	.byte	'OS_SPINLOCKMETHOD_NOTHING',0,3,0
.L160:
	.byte	2
	.byte	'unsigned short int',0,2,7,7,13,149,1,9,1,8
	.byte	'OS_SPINLOCKMODE_USER',0,0,8
	.byte	'OS_SPINLOCKMODE_SUPERVISOR',0,1,0,7,13,160,1,9,1,8
	.byte	'OS_SPINLOCKTRACE_DISABLED',0,0,8
	.byte	'OS_SPINLOCKTRACE_ENABLED',0,1,0,7,13,173,1,9,1,8
	.byte	'OS_SPINLOCKCHECK_DISABLED',0,0,8
	.byte	'OS_SPINLOCKCHECK_ENABLED',0,1,0,7,15,225,1,9,1,8
	.byte	'OS_TRACE_NUMBER_OF_ALL_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_NUMBER_OF_CONFIGURED_SPINLOCKS',0,0,8
	.byte	'OS_TRACE_INVALID_SPINLOCK',0,1,0,9
	.byte	'Os_TraceSpinlockConfigType_Tag',0,14,148,4,8,1,10
	.byte	'SpinlockId',0
	.word	5578
	.byte	1,2,35,0,0,12
	.word	5690
	.byte	11
	.word	5748
	.byte	9
	.byte	'Os_SpinlockConfigType_Tag',0,13,214,1,8,24,10
	.byte	'Lock',0
	.word	3179
	.byte	12,2,35,0,10
	.byte	'Method',0
	.word	5255
	.byte	1,2,35,12,10
	.byte	'CeilingPriority',0
	.word	5373
	.byte	2,2,35,14,10
	.byte	'Mode',0
	.word	5395
	.byte	1,2,35,16,10
	.byte	'Trace',0
	.word	5454
	.byte	1,2,35,17,10
	.byte	'Checks',0
	.word	5516
	.byte	1,2,35,18,10
	.byte	'Order',0
	.word	402
	.byte	1,2,35,19,10
	.byte	'TimingHookTrace',0
	.word	5753
	.byte	4,2,35,20,0,12
	.word	5758
	.byte	11
	.word	5931
	.byte	13
	.byte	'Os_SpinlockListType',0,16,62,59
	.word	5936
	.byte	7,3,128,3,9,1,8
	.byte	'APPLICATION_TERMINATED',0,0,8
	.byte	'APPLICATION_RESTARTING',0,1,8
	.byte	'APPLICATION_ACCESSIBLE',0,2,0,15,17,118,9,1,10
	.byte	'State',0
	.word	5969
	.byte	1,2,35,0,0,11
	.word	6051
	.byte	7,18,223,1,9,1,8
	.byte	'OS_CORESTATE_INACTIVE',0,0,8
	.byte	'OS_CORESTATE_ACTIVATED_ASR',0,1,8
	.byte	'OS_CORESTATE_ACTIVATED_NONASR',0,2,0,16,1
	.word	6077
	.byte	17,0,0,9
	.byte	'Os_CoreStatusType_Tag',0,18,251,1,8,2,10
	.byte	'ActivationState',0
	.word	6077
	.byte	1,2,35,0,10
	.byte	'CoreStartRequests',0
	.word	6169
	.byte	1,2,35,1,0,18
	.word	6178
	.byte	11
	.word	6259
	.byte	9
	.byte	'Os_Hal_CoreConfigType_Tag',0,10,99,8,24,10
	.byte	'CoreId',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ProgramCounterRegister',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'StartLabelAddress',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'DBGSRRegister',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'SYSCON_CORECON_Register',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'BOOTCONRegister',0
	.word	138
	.byte	4,2,35,20,0,12
	.word	6269
	.byte	11
	.word	6457
	.byte	9
	.byte	'Os_Hal_IntIsrConfigType_Tag',0,20,118,8,12,10
	.byte	'Level',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'Source',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'CoreAssignment',0
	.word	402
	.byte	1,2,35,8,0,12
	.word	6467
	.byte	11
	.word	6556
	.byte	9
	.byte	'Os_Hal_IntIsrMapConfigType_Tag',0,20,132,1,8,4,10
	.byte	'dummy',0
	.word	138
	.byte	4,2,35,0,0,12
	.word	6566
	.byte	11
	.word	6619
	.byte	9
	.byte	'Os_IsrHwConfigType_Tag',0,19,154,1,8,12,10
	.byte	'HwConfig',0
	.word	6561
	.byte	4,2,35,0,10
	.byte	'MapConfig',0
	.word	6624
	.byte	4,2,35,4,10
	.byte	'IsMapped',0
	.word	402
	.byte	1,2,35,8,10
	.byte	'IsPostActionRequired',0
	.word	402
	.byte	1,2,35,9,0,12
	.word	6629
	.byte	11
	.word	6744
	.byte	13
	.byte	'Os_InterruptSourceConfigRefType',0,18,172,2,56
	.word	6749
	.byte	12
	.word	6754
	.byte	11
	.word	6795
	.byte	7,21,86,9,1,8
	.byte	'OS_CORE_ID_0',0,0,8
	.byte	'OS_CORE_ID_MASTER',0,0,8
	.byte	'OS_COREID_COUNT',0,1,0,7,14,204,2,9,1,8
	.byte	'OS_TRACE_TASK_ACTIVATION',0,1,8
	.byte	'OS_TRACE_ISR_START',0,2,8
	.byte	'OS_TRACE_TASK_SETEVENT',0,4,8
	.byte	'OS_TRACE_TASK_GOTSEMA',0,8,8
	.byte	'OS_TRACE_THREAD_RESUME',0,16,8
	.byte	'OS_TRACE_THREAD_CLEANUP',0,32,8
	.byte	'OS_TRACE_THREAD_MISC',0,33,0,9
	.byte	'Os_TraceThreadType_Tag',0,14,244,3,8,1,10
	.byte	'NextRunReason',0
	.word	6864
	.byte	1,2,35,0,0,11
	.word	7042
	.byte	7,15,218,1,9,1,8
	.byte	'OS_TRACE_THREADID_COUNT',0,0,8
	.byte	'OS_TRACE_INVALID_THREAD',0,1,0,7,14,228,3,9,1,8
	.byte	'OS_TRACE_THREAD_TYPE_TASK',0,0,8
	.byte	'OS_TRACE_THREAD_TYPE_ISR',0,1,8
	.byte	'OS_TRACE_THREAD_TYPE_MISC',0,2,0,9
	.byte	'Os_TraceThreadConfigType_Tag',0,14,254,3,8,8,10
	.byte	'Dyn',0
	.word	7095
	.byte	4,2,35,0,10
	.byte	'Id',0
	.word	7100
	.byte	1,2,35,4,10
	.byte	'Type',0
	.word	7159
	.byte	1,2,35,5,0,12
	.word	7249
	.byte	11
	.word	7324
	.byte	9
	.byte	'Os_TraceCoreType_Tag',0,14,137,4,8,12,10
	.byte	'CurrentTask',0
	.word	7329
	.byte	4,2,35,0,10
	.byte	'CurrentIsr',0
	.word	7329
	.byte	4,2,35,4,10
	.byte	'OrtiCurrentServiceId',0
	.word	402
	.byte	1,2,35,8,0,11
	.word	7334
	.byte	9
	.byte	'Os_CoreConfigType_Tag',0,18,176,2,8,24,10
	.byte	'Status',0
	.word	6264
	.byte	4,2,35,0,10
	.byte	'HwConfig',0
	.word	6462
	.byte	4,2,35,4,10
	.byte	'InterruptSourceRefs',0
	.word	6800
	.byte	4,2,35,8,10
	.byte	'InterruptSourceCount',0
	.word	5373
	.byte	2,2,35,12,10
	.byte	'Id',0
	.word	6805
	.byte	1,2,35,14,10
	.byte	'Trace',0
	.word	7433
	.byte	4,2,35,16,10
	.byte	'IsAsrCore',0
	.word	402
	.byte	1,2,35,20,10
	.byte	'IsAutostart',0
	.word	402
	.byte	1,2,35,21,10
	.byte	'IsMasterStartAllowed',0
	.word	402
	.byte	1,2,35,22,10
	.byte	'IsHardwareInitCore',0
	.word	402
	.byte	1,2,35,23,0
.L256:
	.byte	15,23,67,9,8,10
	.byte	'Global',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'Level',0
	.word	138
	.byte	4,2,35,4,0,15,22,81,9,6,19
	.byte	'InDisableAll',0,1
	.word	402
	.byte	1,7,2,35,0,10
	.byte	'SuspendAllCounter',0
	.word	5373
	.byte	2,2,35,2,10
	.byte	'SuspendOsCounter',0
	.word	5373
	.byte	2,2,35,4,0,9
	.byte	'Os_IntApiStateType_Tag',0,22,89,8,28,10
	.byte	'SuspendAllPrevState',0
	.word	7685
	.byte	8,2,35,0,10
	.byte	'SuspendOsPrevState',0
	.word	7685
	.byte	8,2,35,8,10
	.byte	'Os_IntLockingState',0
	.word	7722
	.byte	6,2,35,16,10
	.byte	'SuspendAllSnapshot',0
	.word	5373
	.byte	2,2,35,22,10
	.byte	'SuspendOsSnapshot',0
	.word	5373
	.byte	2,2,35,24,0,2
	.byte	'short int',0,2,5,13
	.byte	'Os_CoreInterruptedThreadsType',0,18,164,2,57
	.word	.L114-.L72
	.byte	16,40
	.word	7987
	.byte	17,9,0,7,3,177,3,9,1,8
	.byte	'OSServiceId_GetApplicationID',0,0,8
	.byte	'OSServiceId_GetISRID',0,1,8
	.byte	'OSServiceId_CallTrustedFunction',0,2,8
	.byte	'OSServiceId_CheckISRMemoryAccess',0,3,8
	.byte	'OSServiceId_CheckTaskMemoryAccess',0,4,8
	.byte	'OSServiceId_CheckObjectAccess',0,5,8
	.byte	'OSServiceId_CheckObjectOwnership',0,6,8
	.byte	'OSServiceId_StartScheduleTableRel',0,7,8
	.byte	'OSServiceId_StartScheduleTableAbs',0,8,8
	.byte	'OSServiceId_StopScheduleTable',0,9,8
	.byte	'OSServiceId_NextScheduleTable',0,10,8
	.byte	'OSServiceId_StartScheduleTableSynchron',0,11,8
	.byte	'OSServiceId_SyncScheduleTable',0,12,8
	.byte	'OSServiceId_SetScheduleTableAsync',0,13,8
	.byte	'OSServiceId_GetScheduleTableStatus',0,14,8
	.byte	'OSServiceId_IncrementCounter',0,15,8
	.byte	'OSServiceId_GetCounterValue',0,16,8
	.byte	'OSServiceId_GetElapsedValue',0,17,8
	.byte	'OSServiceId_TerminateApplication',0,18,8
	.byte	'OSServiceId_AllowAccess',0,19,8
	.byte	'OSServiceId_GetApplicationState',0,20,8
	.byte	'OSServiceId_GetNumberOfActivatedCores',0,21,8
	.byte	'OSServiceId_GetCoreID',0,22,8
	.byte	'OSServiceId_StartCore',0,23,8
	.byte	'OSServiceId_StartNonAutosarCore',0,24,8
	.byte	'OSServiceId_GetSpinlock',0,25,8
	.byte	'OSServiceId_ReleaseSpinlock',0,26,8
	.byte	'OSServiceId_TryToGetSpinlock',0,27,8
	.byte	'OSServiceId_ShutdownAllCores',0,28,8
	.byte	'OSServiceId_ControlIdle',0,29,8
	.byte	'OSServiceId_IocSend',0,30,8
	.byte	'OSServiceId_IocWrite',0,31,8
	.byte	'OSServiceId_IocSendGroup',0,32,8
	.byte	'OSServiceId_IocWriteGroup',0,33,8
	.byte	'OSServiceId_IocReceive',0,34,8
	.byte	'OSServiceId_IocRead',0,35,8
	.byte	'OSServiceId_IocReceiveGroup',0,36,8
	.byte	'OSServiceId_IocReadGroup',0,37,8
	.byte	'OSServiceId_IocEmptyQueue',0,38,8
	.byte	'OSServiceId_GetCurrentApplicationID',0,39,8
	.byte	'OSServiceId_GetExceptionContext',0,160,1,8
	.byte	'OSServiceId_SetExceptionContext',0,161,1,8
	.byte	'OSServiceId_CallNonTrustedFunction',0,162,1,8
	.byte	'OSServiceId_AppKill',0,163,1,8
	.byte	'OSServiceId_AlarmActionSetEvent',0,164,1,8
	.byte	'OSServiceId_AlarmActionActivateTask',0,165,1,8
	.byte	'OSServiceId_AlarmActionIncrementCounter',0,166,1,8
	.byte	'OSServiceId_AlarmActionCallback',0,167,1,8
	.byte	'OSServiceId_TimerIsr',0,168,1,8
	.byte	'OSServiceId_IsrWrapper',0,169,1,8
	.byte	'OSServiceId_GetTaskStackUsage',0,170,1,8
	.byte	'OSServiceId_GetISRStackUsage',0,171,1,8
	.byte	'OSServiceId_GetKernelStackUsage',0,172,1,8
	.byte	'OSServiceId_GetStartupHookStackUsage',0,173,1,8
	.byte	'OSServiceId_GetErrorHookStackUsage',0,174,1,8
	.byte	'OSServiceId_GetShutdownHookStackUsage',0,175,1,8
	.byte	'OSServiceId_GetProtectionHookStackUsage',0,176,1,8
	.byte	'OSServiceId_GetSemaphore',0,177,1,8
	.byte	'OSServiceId_ReleaseSemaphore',0,178,1,8
	.byte	'OSServiceId_ScheduleTableActivateTask',0,179,1,8
	.byte	'OSServiceId_ScheduleTableSetEvent',0,180,1,8
	.byte	'OSServiceId_DisableInterruptSource',0,181,1,8
	.byte	'OSServiceId_EnableInterruptSource',0,182,1,8
	.byte	'OSServiceId_ClearPendingInterrupt',0,183,1,8
	.byte	'OSServiceId_GetUnhandledIrq',0,184,1,8
	.byte	'OSServiceId_GetUnhandledExc',0,185,1,8
	.byte	'OSServiceId_HookCallCallback',0,186,1,8
	.byte	'OSServiceId_IsInterruptSourceEnabled',0,187,1,8
	.byte	'OSServiceId_IsInterruptPending',0,188,1,8
	.byte	'OSServiceId_CallFastTrustedFunction',0,189,1,8
	.byte	'OSServiceId_BarrierSynchronize',0,190,1,8
	.byte	'OSServiceId_InitialEnableInterruptSources',0,191,1,8
	.byte	'OSServiceId_GetCoreStartState',0,192,1,8
	.byte	'OSServiceId_StartOS',0,208,1,8
	.byte	'OSServiceId_GetActiveApplicationMode',0,210,1,8
	.byte	'OSServiceId_DisableAllInterrupts',0,211,1,8
	.byte	'OSServiceId_EnableAllInterrupts',0,212,1,8
	.byte	'OSServiceId_SuspendAllInterrupts',0,213,1,8
	.byte	'OSServiceId_ResumeAllInterrupts',0,214,1,8
	.byte	'OSServiceId_SuspendOSInterrupts',0,215,1,8
	.byte	'OSServiceId_ResumeOSInterrupts',0,216,1,8
	.byte	'OSServiceId_ActivateTask',0,217,1,8
	.byte	'OSServiceId_TerminateTask',0,218,1,8
	.byte	'OSServiceId_ChainTask',0,219,1,8
	.byte	'OSServiceId_GetTaskID',0,220,1,8
	.byte	'OSServiceId_GetTaskState',0,221,1,8
	.byte	'OSServiceId_Schedule',0,222,1,8
	.byte	'OSServiceId_SetEvent',0,223,1,8
	.byte	'OSServiceId_ClearEvent',0,224,1,8
	.byte	'OSServiceId_GetEvent',0,225,1,8
	.byte	'OSServiceId_WaitEvent',0,226,1,8
	.byte	'OSServiceId_GetAlarmBase',0,227,1,8
	.byte	'OSServiceId_GetAlarm',0,228,1,8
	.byte	'OSServiceId_SetRelAlarm',0,229,1,8
	.byte	'OSServiceId_SetAbsAlarm',0,230,1,8
	.byte	'OSServiceId_CancelAlarm',0,231,1,8
	.byte	'OSServiceId_GetResource',0,232,1,8
	.byte	'OSServiceId_ReleaseResource',0,233,1,8
	.byte	'OSSERVICEID_COUNT',0,255,1,0,15,3,133,6,9,4,10
	.byte	'Service',0
	.word	8035
	.byte	1,2,35,0,10
	.byte	'Error',0
	.word	402
	.byte	1,2,35,1,10
	.byte	'DetailedError',0
	.word	419
	.byte	2,2,35,2,0,15,3,220,2,9,12,10
	.byte	'maxallowedvalue',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ticksperbase',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'mincycle',0
	.word	138
	.byte	4,2,35,8,0,11
	.word	11242
	.byte	13
	.byte	'AlarmBaseRefType',0,3,231,2,61
	.word	11314
	.byte	7,15,169,1,9,1,8
	.byte	'Rte_Al_TE2_bsw_task_0_10ms',0,0,8
	.byte	'Rte_Al_TE2_bsw_task_0_20ms',0,1,8
	.byte	'Rte_Al_TE_swc_test_swc_test_10ms',0,2,8
	.byte	'Rte_Al_TE_swc_test_swc_test_500ms',0,3,8
	.byte	'OS_ALARMID_COUNT',0,4,0,11
	.word	5969
	.byte	13
	.byte	'ApplicationStateRefType',0,3,163,3,68
	.word	11500
	.byte	7,15,120,9,1,8
	.byte	'OsApplication_OsCore0',0,0,8
	.byte	'SystemApplication_OsCore0',0,1,8
	.byte	'INVALID_OSAPPLICATION',0,2,8
	.byte	'OS_APPID_COUNT',0,2,0,11
	.word	402
	.byte	7,15,179,1,9,1,8
	.byte	'SystemTimer',0,0,8
	.byte	'OS_COUNTERID_COUNT',0,1,0,2
	.byte	'unsigned long long int',0,8,7,11
	.word	11684
	.byte	7,15,160,1,9,1,8
	.byte	'CanIsr_0',0,0,8
	.byte	'CounterIsr_SystemTimer',0,1,8
	.byte	'INVALID_ISR',0,2,8
	.byte	'OS_ISRID_COUNT',0,2,0,7,3,230,1,9,1,8
	.byte	'IDLE_NO_HALT',0,0,8
	.byte	'OS_IDLEMODE_COUNT',0,1,0,20
	.byte	'void',0,12
	.word	11831
	.byte	11
	.word	11837
	.byte	13
	.byte	'MemoryStartAddressType',0,3,203,6,49
	.word	11842
.L169:
	.byte	7,15,192,1,9,1,8
	.byte	'OsResource',0,0,8
	.byte	'OS_RESOURCEID_COUNT',0,1,0,7,3,244,2,9,1,8
	.byte	'RESTART',0,0,8
	.byte	'NO_RESTART',0,1,8
	.byte	'OS_RESTARTTYPE_COUNT',0,2,0,7,3,175,6,9,1,8
	.byte	'SCHEDULETABLE_STOPPED',0,0,8
	.byte	'SCHEDULETABLE_NEXT',0,1,8
	.byte	'SCHEDULETABLE_WAITING',0,2,8
	.byte	'SCHEDULETABLE_RUNNING',0,3,8
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.word	11974
	.byte	13
	.byte	'ScheduleTableStatusRefType',0,3,195,6,34
	.word	12114
	.byte	7,15,186,1,9,1,8
	.byte	'OS_SCHTID_COUNT',0,0,0,7,15,199,1,9,1,8
	.byte	'INVALID_SPINLOCK',0,0,8
	.byte	'OS_SPINLOCKID_COUNT',0,0,0,11
	.word	402
	.byte	15,26,134,1,9,8,10
	.byte	'vendorID',0
	.word	5373
	.byte	2,2,35,0,10
	.byte	'moduleID',0
	.word	5373
	.byte	2,2,35,2,10
	.byte	'sw_major_version',0
	.word	402
	.byte	1,2,35,4,10
	.byte	'sw_minor_version',0
	.word	402
	.byte	1,2,35,5,10
	.byte	'sw_patch_version',0
	.word	402
	.byte	1,2,35,6,0,11
	.word	12233
	.byte	7,15,147,1,9,1,8
	.byte	'Default_Init_Task',0,0,8
	.byte	'Default_Init_Task_Trusted',0,1,8
	.byte	'IdleTask_OsCore0',0,2,8
	.byte	'bsw_task',0,3,8
	.byte	'swc_init',0,4,8
	.byte	'swc_task',0,5,8
	.byte	'INVALID_TASK',0,6,8
	.byte	'OS_TASKID_COUNT',0,6,0,11
	.word	12359
	.byte	13
	.byte	'TaskRefType',0,3,152,2,56
	.word	12499
	.byte	7,3,161,2,9,1,8
	.byte	'RUNNING',0,0,8
	.byte	'READY',0,1,8
	.byte	'WAITING',0,2,8
	.byte	'SUSPENDED',0,3,0,11
	.word	12525
	.byte	13
	.byte	'TaskStateRefType',0,3,178,2,61
	.word	12572
	.byte	11
	.word	138
	.byte	13
	.byte	'TickRefType',0,3,210,2,56
	.word	12603
	.byte	7,15,129,1,9,1,8
	.byte	'OS_TRUSTEDFUNCTIONID_COUNT',0,0,0,11
	.word	11831
	.byte	13
	.byte	'TrustedFunctionParameterRefType',0,3,204,1,44
	.word	12665
	.byte	7,3,138,2,9,1,8
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,8
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.word	12711
	.byte	12
	.word	12711
	.byte	11
	.word	12779
	.byte	7,3,138,3,9,1,8
	.byte	'OBJECT_TASK',0,0,8
	.byte	'OBJECT_ISR',0,1,8
	.byte	'OBJECT_ALARM',0,2,8
	.byte	'OBJECT_RESOURCE',0,3,8
	.byte	'OBJECT_COUNTER',0,4,8
	.byte	'OBJECT_SCHEDULETABLE',0,5,8
	.byte	'OBJECT_SPINLOCK',0,6,0,7,15,135,1,9,1,8
	.byte	'OS_NONTRUSTEDFUNCTIONID_COUNT',0,0,0,13
	.byte	'Os_NonTrustedFunctionParameterRefType',0,3,207,1,44
	.word	12665
	.byte	7,15,141,1,9,1,8
	.byte	'OS_FASTTRUSTEDFUNCTIONID_COUNT',0,0,0,13
	.byte	'Os_FastTrustedFunctionParameterRefType',0,3,210,1,44
	.word	12665
	.byte	11
	.word	138
	.byte	13
	.byte	'Os_ExceptionSourceIdRefType',0,3,250,1,61
	.word	13088
	.byte	11
	.word	138
	.byte	13
	.byte	'Os_InterruptSourceIdRefType',0,3,242,1,61
	.word	13130
	.byte	7,15,206,1,9,1,8
	.byte	'OS_PERIPHERALID_COUNT',0,0,0,11
	.word	11180
	.byte	13
	.byte	'Os_ErrorInformationRefType',0,3,147,6,64
	.word	13203
	.byte	7,15,212,1,9,1,8
	.byte	'OS_BARRIERID_COUNT',0,0,0,16,64
	.word	138
	.byte	17,15,0,9
	.byte	'Os_ExceptionContextType_Tag',0,27,71,8,160,1,10
	.byte	'AddressRegisters',0
	.word	13272
	.byte	64,2,35,0,10
	.byte	'DataRegisters',0
	.word	13272
	.byte	64,2,35,64,10
	.byte	'Ra',0
	.word	138
	.byte	4,3,35,128,1,10
	.byte	'Psw',0
	.word	138
	.byte	4,3,35,132,1,10
	.byte	'ExceptionSource',0
	.word	138
	.byte	4,3,35,136,1,10
	.byte	'Pcpn',0
	.word	138
	.byte	4,3,35,140,1,10
	.byte	'Pie',0
	.word	138
	.byte	4,3,35,144,1,10
	.byte	'MpuRegionForStackLow',0
	.word	138
	.byte	4,3,35,148,1,10
	.byte	'MpuRegionForStackUpper',0
	.word	138
	.byte	4,3,35,152,1,10
	.byte	'RawPCXI',0
	.word	138
	.byte	4,3,35,156,1,0,11
	.word	13281
	.byte	13
	.byte	'Os_ExceptionContextRefType',0,3,254,1,60
	.word	13529
	.byte	7,3,250,6,9,1,8
	.byte	'OS_CORESTARTSTATE_START_UNREQUESTED',0,0,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_ASR',0,1,8
	.byte	'OS_CORESTARTSTATE_START_REQUESTED_NONASR',0,2,8
	.byte	'OS_CORESTARTSTATE_STARTED_ASR',0,3,8
	.byte	'OS_CORESTARTSTATE_STARTED_NONASR',0,4,0,11
	.word	13570
	.byte	21
	.byte	'Os_ParamType_Tag',0,25,88,7,8,10
	.byte	'ParamAlarmBaseRefType',0
	.word	11319
	.byte	4,2,35,0,10
	.byte	'ParamAlarmType',0
	.word	11345
	.byte	1,2,35,0,10
	.byte	'ParamAppModeType',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ParamApplicationStateRefType',0
	.word	11505
	.byte	4,2,35,0,10
	.byte	'ParamApplicationStateType',0
	.word	5969
	.byte	1,2,35,0,10
	.byte	'ParamApplicationType',0
	.word	11538
	.byte	1,2,35,0,10
	.byte	'Paramboolean',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ParambooleanRefType',0
	.word	11637
	.byte	4,2,35,0,10
	.byte	'ParamCoreIdType',0
	.word	6805
	.byte	1,2,35,0,10
	.byte	'ParamCounterType',0
	.word	11642
	.byte	1,2,35,0,10
	.byte	'ParamEventMaskType',0
	.word	11684
	.byte	8,2,35,0,10
	.byte	'ParamEventMaskRefType',0
	.word	11710
	.byte	4,2,35,0,10
	.byte	'ParamISRType',0
	.word	11715
	.byte	1,2,35,0,10
	.byte	'ParamIdleModeType',0
	.word	11789
	.byte	1,2,35,0,10
	.byte	'ParamMemorySizeType',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamMemoryStartAddressType',0
	.word	11847
	.byte	4,2,35,0,10
	.byte	'ParamResourceType',0
	.word	11879
	.byte	1,2,35,0,10
	.byte	'ParamRestartType',0
	.word	11921
	.byte	1,2,35,0,10
	.byte	'ParamScheduleTableStatusRefType',0
	.word	12119
	.byte	4,2,35,0,10
	.byte	'ParamScheduleTableStatusType',0
	.word	11974
	.byte	1,2,35,0,10
	.byte	'ParamScheduleTableType',0
	.word	12155
	.byte	1,2,35,0,10
	.byte	'ParamSpinlockIdType',0
	.word	12180
	.byte	1,2,35,0,10
	.byte	'ParamStatusType',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ParamStatusRefType',0
	.word	12228
	.byte	4,2,35,0,10
	.byte	'ParamStd_VersionInfoRefType',0
	.word	12354
	.byte	4,2,35,0,10
	.byte	'ParamTaskRefType',0
	.word	12504
	.byte	4,2,35,0,10
	.byte	'ParamTaskStateRefType',0
	.word	12577
	.byte	4,2,35,0,10
	.byte	'ParamTaskStateType',0
	.word	12525
	.byte	1,2,35,0,10
	.byte	'ParamTaskType',0
	.word	12359
	.byte	1,2,35,0,10
	.byte	'ParamTickRefType',0
	.word	12608
	.byte	4,2,35,0,10
	.byte	'ParamTickType',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamTrustedFunctionIndexType',0
	.word	12629
	.byte	1,2,35,0,10
	.byte	'ParamTrustedFunctionParameterRefType',0
	.word	12670
	.byte	4,2,35,0,10
	.byte	'ParamTryToGetSpinlockRefType',0
	.word	12774
	.byte	4,2,35,0,10
	.byte	'ParamTryToGetSpinlockConstRefType',0
	.word	12784
	.byte	4,2,35,0,10
	.byte	'Paramuint32',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamVoidRefType',0
	.word	11842
	.byte	4,2,35,0,10
	.byte	'ParamObjectTypeType',0
	.word	12789
	.byte	1,2,35,0,10
	.byte	'ParamOs_NonTrustedFunctionIndexType',0
	.word	12914
	.byte	1,2,35,0,10
	.byte	'ParamOs_NonTrustedFunctionParameterRefType',0
	.word	12953
	.byte	4,2,35,0,10
	.byte	'ParamOs_FastTrustedFunctionIndexType',0
	.word	13000
	.byte	1,2,35,0,10
	.byte	'ParamOs_FastTrustedFunctionParameterRefType',0
	.word	13040
	.byte	4,2,35,0,10
	.byte	'ParamExceptionSourceIdType',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamInterruptSourceIdType',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamExceptionSourceIdRefType',0
	.word	13093
	.byte	4,2,35,0,10
	.byte	'ParamInterruptSourceIdRefType',0
	.word	13135
	.byte	4,2,35,0,10
	.byte	'ParamObjectIdType',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamPeripheralIdType',0
	.word	13172
	.byte	1,2,35,0,10
	.byte	'ParamErrorInformationRefType',0
	.word	13208
	.byte	4,2,35,0,10
	.byte	'ParamHookIdType',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamBarrierIdType',0
	.word	13244
	.byte	1,2,35,0,10
	.byte	'ParamExceptionContextRefType',0
	.word	13534
	.byte	4,2,35,0,10
	.byte	'ParamCoreStartStateRefType',0
	.word	13765
	.byte	4,2,35,0,0,16,24
	.word	13770
	.byte	17,2,0,9
	.byte	'Os_ErrorParamsType_Tag',0,24,171,1,8,24,10
	.byte	'Parameter',0
	.word	15504
	.byte	24,2,35,0,0,13
	.byte	'Os_AddressOfConstType',0,3,241,6,43
	.word	11842
	.byte	9
	.byte	'Os_ErrorType_Tag',0,24,177,1,8,32,10
	.byte	'ErrorDetails',0
	.word	11180
	.byte	4,2,35,0,10
	.byte	'Parameters',0
	.word	15513
	.byte	24,2,35,4,10
	.byte	'ExceptionInstructionAddress',0
	.word	15562
	.byte	4,2,35,28,0,7,28,97,9,1,8
	.byte	'OS_UNHANDLEDEVENTREPORT_NOTAVAILABLE',0,0,8
	.byte	'OS_UNHANDLEDEVENTREPORT_AVAILABLE',0,1,0,15,29,123,9,4,10
	.byte	'InHookFlags',0
	.word	138
	.byte	4,2,35,0,0,13
	.byte	'Os_StackConfigRefType',0,18,156,2,56
	.word	5250
	.byte	9
	.byte	'Os_CoreAsrType_Tag',0,18,213,2,8,124,10
	.byte	'IntApiState',0
	.word	7805
	.byte	28,2,35,0,10
	.byte	'InterruptedThreadsCounter',0
	.word	7974
	.byte	2,2,35,28,10
	.byte	'InterruptedThreads',0
	.word	8026
	.byte	40,2,35,32,10
	.byte	'LastError',0
	.word	15593
	.byte	32,2,35,72,10
	.byte	'LastUnhandledIrq',0
	.word	138
	.byte	4,2,35,104,10
	.byte	'UnhandledIrqReported',0
	.word	15696
	.byte	1,2,35,108,10
	.byte	'LastUnhandledExc',0
	.word	138
	.byte	4,2,35,110,10
	.byte	'UnhandledExcReported',0
	.word	15696
	.byte	1,2,35,114,10
	.byte	'IdleMode',0
	.word	11789
	.byte	1,2,35,115,10
	.byte	'HookInfo',0
	.word	15777
	.byte	4,2,35,116,10
	.byte	'CurrentStack',0
	.word	15804
	.byte	4,2,35,120,0,11
	.word	15835
	.byte	15,31,114,9,4,10
	.byte	'AllocationMask',0
	.word	138
	.byte	4,2,35,0,0,11
	.word	16139
	.byte	11
	.word	138
	.byte	15,31,123,9,12,10
	.byte	'Dyn',0
	.word	16169
	.byte	4,2,35,0,10
	.byte	'Data',0
	.word	16174
	.byte	4,2,35,4,10
	.byte	'Size',0
	.word	5373
	.byte	2,2,35,8,10
	.byte	'BitLength',0
	.word	5373
	.byte	2,2,35,10,0,7,32,105,9,1,8
	.byte	'OS_TASKSCHEDULE_ALLOWED',0,0,8
	.byte	'OS_TASKSCHEDULE_PROHIBITED',0,1,0,9
	.byte	'Os_TaskConfigType_Tag',0,32,143,1,8,80,10
	.byte	'Thread',0
	.word	.L519-.L72
	.byte	60,2,35,0,10
	.byte	'HomePriority',0
	.word	5373
	.byte	2,2,35,60,10
	.byte	'TaskId',0
	.word	12359
	.byte	1,2,35,62,10
	.byte	'RunningPriority',0
	.word	5373
	.byte	2,2,35,64,10
	.byte	'MaxActivations',0
	.word	402
	.byte	1,2,35,66,10
	.byte	'AutostartModes',0
	.word	402
	.byte	1,2,35,67,10
	.byte	'AccessingApplications',0
	.word	138
	.byte	4,2,35,68,10
	.byte	'NumScheduleEventsRoundRobin',0
	.word	138
	.byte	4,2,35,72,10
	.byte	'RoundRobinEnabled',0
	.word	402
	.byte	1,2,35,76,10
	.byte	'IsExtended',0
	.word	402
	.byte	1,2,35,77,10
	.byte	'Reschedule',0
	.word	16245
	.byte	1,2,35,78,0,12
	.word	16306
.L396:
	.byte	11
	.word	16597
	.byte	9
	.byte	'Os_SchedulerType_Tag',0,30,181,1,8,16,10
	.byte	'NextPriority',0
	.word	5373
	.byte	2,2,35,0,10
	.byte	'NextTask',0
	.word	16602
	.byte	4,2,35,4,10
	.byte	'CurrentPriority',0
	.word	5373
	.byte	2,2,35,8,10
	.byte	'CurrentTask',0
	.word	16602
	.byte	4,2,35,12,0,11
	.word	16607
	.byte	15,33,75,9,8,10
	.byte	'ReadIdx',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'WriteIdx',0
	.word	138
	.byte	4,2,35,4,0,11
	.word	16726
	.byte	15,33,85,9,4,10
	.byte	'Value',0
	.word	16602
	.byte	4,2,35,0,0,11
	.word	16772
	.byte	15,33,92,9,12,10
	.byte	'Dyn',0
	.word	16767
	.byte	4,2,35,0,10
	.byte	'Buffer',0
	.word	16793
	.byte	4,2,35,4,10
	.byte	'Size',0
	.word	138
	.byte	4,2,35,8,0,12
	.word	16798
	.byte	11
	.word	16847
	.byte	9
	.byte	'Os_SchedulerConfigType_Tag',0,30,196,1,8,24,10
	.byte	'BitArray',0
	.word	16179
	.byte	12,2,35,0,10
	.byte	'Dyn',0
	.word	16721
	.byte	4,2,35,12,10
	.byte	'TaskQueues',0
	.word	16852
	.byte	4,2,35,16,10
	.byte	'NumberOfPriorities',0
	.word	5373
	.byte	2,2,35,20,0,12
	.word	16857
	.byte	11
	.word	16970
	.byte	7,34,97,9,1,8
	.byte	'Os_HookTaskReturn_ToCallerTask',0,0,8
	.byte	'Os_HookTaskReturn_WithSchedule',0,1,8
	.byte	'Os_HookTaskReturn_BeginScheduling',0,2,0,9
	.byte	'Os_HookConfigType_Tag',0,34,162,1,8,76,10
	.byte	'Thread',0
	.word	.L519-.L72
	.byte	60,2,35,0,10
	.byte	'HookTypeFlag',0
	.word	138
	.byte	4,2,35,60,10
	.byte	'NestingMask',0
	.word	138
	.byte	4,2,35,64,10
	.byte	'Id',0
	.word	138
	.byte	4,2,35,68,10
	.byte	'TaskReturn',0
	.word	16980
	.byte	1,2,35,72,0,22,1,1,11
	.word	17208
	.byte	13
	.byte	'Os_HookVoidHookCbkType',0,34,112,9
	.word	17211
	.byte	9
	.byte	'Os_HookCallbackConfigType_Tag',0,34,195,1,8,80,10
	.byte	'Hook',0
	.word	17088
	.byte	76,2,35,0,10
	.byte	'Callback',0
	.word	17216
	.byte	4,2,35,76,0,12
	.word	17247
	.byte	11
	.word	17316
	.byte	23,1,1,24
	.word	402
	.byte	0,11
	.word	17326
	.byte	13
	.byte	'Os_HookStatusHookCbkType',0,34,109,9
	.word	17335
	.byte	9
	.byte	'Os_HookStatusHookConfigType_Tag',0,34,183,1,8,80,10
	.byte	'Hook',0
	.word	17088
	.byte	76,2,35,0,10
	.byte	'Callback',0
	.word	17340
	.byte	4,2,35,76,0,12
	.word	17373
	.byte	11
	.word	17444
	.byte	7,3,237,5,9,1,8
	.byte	'PRO_IGNORE',0,0,8
	.byte	'PRO_IGNORE_EXCEPTION',0,1,8
	.byte	'PRO_TERMINATETASKISR',0,2,8
	.byte	'PRO_TERMINATEAPPL',0,3,8
	.byte	'PRO_TERMINATEAPPL_RESTART',0,4,8
	.byte	'PRO_SHUTDOWN',0,5,8
	.byte	'OS_PROTECTIONREACTION_COUNT',0,6,0,25
	.word	17454
	.byte	1,1,24
	.word	402
	.byte	0,11
	.word	17613
	.byte	13
	.byte	'Os_HookProtectionHookCbkType',0,34,115,9
	.word	17626
	.byte	9
	.byte	'Os_HookProtectionHookConfigType_Tag',0,34,207,1,8,80,10
	.byte	'Hook',0
	.word	17088
	.byte	76,2,35,0,10
	.byte	'Callback',0
	.word	17631
	.byte	4,2,35,76,0,12
	.word	17668
	.byte	11
	.word	17743
	.byte	13
	.byte	'Os_HookInitHookCbkType',0,34,118,9
	.word	17335
	.byte	9
	.byte	'Os_HookInitHookConfigType_Tag',0,34,218,1,8,80,10
	.byte	'Hook',0
	.word	17088
	.byte	76,2,35,0,10
	.byte	'Callback',0
	.word	17753
	.byte	4,2,35,76,0,12
	.word	17784
	.byte	11
	.word	17853
	.byte	12
	.word	17088
	.byte	11
	.word	17863
	.byte	13
	.byte	'Os_HookConfigRefType',0,29,133,1,55
	.word	17868
	.byte	12
	.word	17873
	.byte	11
	.word	17903
	.byte	13
	.byte	'Os_AppConfigRefType',0,18,128,3,54
	.word	.L520-.L72
	.byte	12
	.word	17913
	.byte	11
	.word	17942
	.byte	9
	.byte	'Os_ResourceConfigType_Tag',0,35,171,1,8,20,10
	.byte	'Lock',0
	.word	3179
	.byte	12,2,35,0,10
	.byte	'Core',0
	.word	.L521-.L72
	.byte	4,2,35,12,10
	.byte	'ResourceId',0
	.word	11879
	.byte	1,2,35,16,10
	.byte	'CeilingPriority',0
	.word	5373
	.byte	2,2,35,18,0,12
	.word	17952
.L106:
	.byte	11
	.word	18058
	.byte	13
	.byte	'Os_ResourceConfigRefType',0,18,252,2,59
	.word	18063
	.byte	12
	.word	18068
	.byte	11
	.word	18102
	.byte	9
	.byte	'Os_Hal_CoreAsrConfigType_Tag',0,10,127,8,4,10
	.byte	'CoreId',0
	.word	138
	.byte	4,2,35,0,0,12
	.word	18112
	.byte	11
	.word	18163
	.byte	15,37,68,9,8,10
	.byte	'StartAddress',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'EndAddress',0
	.word	138
	.byte	4,2,35,4,0,12
	.word	18173
	.byte	11
	.word	18221
	.byte	16,24
	.word	138
	.byte	17,5,0,9
	.byte	'Os_Hal_MpCoreConfigType_Tag',0,37,93,8,88,10
	.byte	'MpuDataRegionStartSlot',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'MpuDataRegionCount',0
	.word	402
	.byte	1,2,35,1,10
	.byte	'MpuDataRegions',0
	.word	18226
	.byte	4,2,35,4,10
	.byte	'MpuDataRegionReadEnable',0
	.word	18231
	.byte	24,2,35,8,10
	.byte	'MpuDataRegionWriteEnable',0
	.word	18231
	.byte	24,2,35,32,10
	.byte	'MpuCodeRegionStartSlot',0
	.word	402
	.byte	1,2,35,56,10
	.byte	'MpuCodeRegionCount',0
	.word	402
	.byte	1,2,35,57,10
	.byte	'MpuCodeRegions',0
	.word	18226
	.byte	4,2,35,60,10
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	18231
	.byte	24,2,35,64,0,12
	.word	18240
	.byte	11
	.word	18547
	.byte	9
	.byte	'Os_MpCoreConfigType_Tag',0,36,124,8,4,10
	.byte	'HwConfig',0
	.word	18552
	.byte	4,2,35,0,0,12
	.word	18557
	.byte	11
	.word	18605
	.byte	9
	.byte	'Os_CounterCharacteristicsConfigType_Tag',0,40,164,1,8,20,10
	.byte	'MaxAllowedValue',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'MaxCountingValue',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'MaxDifferentialValue',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'MinCycle',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'TicksPerBase',0
	.word	138
	.byte	4,2,35,16,0,9
	.byte	'Os_JobType_Tag',0,42,78,8,4,10
	.byte	'ExpirationTimestamp',0
	.word	138
	.byte	4,2,35,0,0,11
	.word	18783
	.byte	12
	.word	.L522-.L72
	.byte	11
	.word	18838
	.byte	12
	.word	.L523-.L72
	.byte	11
	.word	18848
	.byte	23,1,1,24
	.word	18853
	.byte	0,11
	.word	18858
	.byte	13
	.byte	'Os_JobCallbackType',0,42,94,9
	.word	18867
.L523:
	.byte	9
	.byte	'Os_JobConfigType_Tag',0,42,98,8,12,10
	.byte	'Dyn',0
	.word	18833
	.byte	4,2,35,0,10
	.byte	'Counter',0
	.word	18843
	.byte	4,2,35,4,10
	.byte	'Callback',0
	.word	18872
	.byte	4,2,35,8,0,12
	.word	18899
	.byte	11
	.word	18974
	.byte	15,41,77,9,4,10
	.byte	'Data',0
	.word	18979
	.byte	4,2,35,0,0,11
	.word	18984
	.byte	15,41,84,9,2,10
	.byte	'QueueUsage',0
	.word	5373
	.byte	2,2,35,0,0,11
	.word	19009
	.byte	15,41,91,9,12,10
	.byte	'Queue',0
	.word	19004
	.byte	4,2,35,0,10
	.byte	'Dyn',0
	.word	19035
	.byte	4,2,35,4,10
	.byte	'QueueSize',0
	.word	5373
	.byte	2,2,35,8,0,7,43,63,9,1,8
	.byte	'OS_TIMERTYPE_PERIODIC_FREE_RUNNING_TIMER',0,20,8
	.byte	'OS_TIMERTYPE_PERIODIC_TICK',0,39,8
	.byte	'OS_TIMERTYPE_SOFTWARE',0,195,0,8
	.byte	'OS_TIMERTYPE_HIGH_RESOLUTION',0,203,0,0
.L522:
	.byte	9
	.byte	'Os_CounterConfigType_Tag',0,40,209,1,8,48,10
	.byte	'Characteristics',0
	.word	18615
	.byte	20,2,35,0,10
	.byte	'JobQueue',0
	.word	19040
	.byte	12,2,35,20,10
	.byte	'DriverType',0
	.word	19093
	.byte	1,2,35,32,10
	.byte	'Core',0
	.word	.L521-.L72
	.byte	4,2,35,36,10
	.byte	'OwnerApplication',0
	.word	.L520-.L72
	.byte	4,2,35,40,10
	.byte	'AccessingApplications',0
	.word	138
	.byte	4,2,35,44,0,15,39,131,2,9,20,10
	.byte	'Value',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'Compare',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'ValueMask',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'HwLastCounterValue',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'HwTimeAtLogicalZero',0
	.word	138
	.byte	4,2,35,16,0,11
	.word	19394
	.byte	9
	.byte	'Os_Hal_TimerFrtConfigType_Tag',0,44,106,8,40,10
	.byte	'CounterRegisterAddress',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'CompareRegisterAddress',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'CMCONRegisterAddress',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'CMCONMask',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'CMCONValue',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'InterruptSRCRegisterAddress',0
	.word	138
	.byte	4,2,35,20,10
	.byte	'ICRRegisterAddress',0
	.word	138
	.byte	4,2,35,24,10
	.byte	'ICRMask',0
	.word	138
	.byte	4,2,35,28,10
	.byte	'ICRValue',0
	.word	138
	.byte	4,2,35,32,10
	.byte	'ReloadValue',0
	.word	138
	.byte	4,2,35,36,0,12
	.word	19514
	.byte	11
	.word	19804
	.byte	9
	.byte	'Os_TimerHrtConfigType_Tag',0,39,158,2,8,56,10
	.byte	'Counter',0
	.word	19228
	.byte	48,2,35,0,10
	.byte	'Dyn',0
	.word	19509
	.byte	4,2,35,48,10
	.byte	'HwConfig',0
	.word	19809
	.byte	4,2,35,52,0,12
	.word	19814
	.byte	11
	.word	19895
	.byte	9
	.byte	'Os_TpType_Tag',0,38,241,2,8,16,10
	.byte	'Snapshot',0
	.word	11684
	.byte	8,2,35,0,10
	.byte	'LastCounterValue',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'MonitoredThread',0
	.word	.L114-.L72
	.byte	4,2,35,12,0,11
	.word	19905
	.byte	9
	.byte	'Os_TpConfigType_Tag',0,38,128,3,8,8,10
	.byte	'Timer',0
	.word	19900
	.byte	4,2,35,0,10
	.byte	'Dyn',0
	.word	19995
	.byte	4,2,35,4,0,12
	.word	20000
	.byte	11
	.word	20055
	.byte	12
	.word	15804
	.byte	11
	.word	20065
	.byte	7,45,86,9,1,8
	.byte	'OS_COREASRCOREIDX_0',0,0,8
	.byte	'OS_COREASRCOREIDX_COUNT',0,1,0,15,47,191,1,9,4,10
	.byte	'SendIdx',0
	.word	5373
	.byte	2,2,35,0,10
	.byte	'ResultIdx',0
	.word	5373
	.byte	2,2,35,2,0,18
	.word	20129
	.byte	11
	.word	20172
	.byte	15,47,211,1,9,2,10
	.byte	'ReceiveIdx',0
	.word	5373
	.byte	2,2,35,0,0,18
	.word	20182
	.byte	12
	.word	20209
	.byte	11
	.word	20214
	.byte	7,48,77,9,1,8
	.byte	'OS_XSIGFUNCTIONIDX_USEDCOUNT',0,0,8
	.byte	'XSigFunctionIdx_ActivateTask',0,0,8
	.byte	'XSigFunctionIdx_CancelAlarm',0,1,8
	.byte	'XSigFunctionIdx_ControlIdle',0,2,8
	.byte	'XSigFunctionIdx_GetAlarm',0,3,8
	.byte	'XSigFunctionIdx_GetApplicationState',0,4,8
	.byte	'XSigFunctionIdx_GetCounterValue',0,5,8
	.byte	'XSigFunctionIdx_GetErrorHookStackUsage',0,6,8
	.byte	'XSigFunctionIdx_GetEvent',0,7,8
	.byte	'XSigFunctionIdx_GetISRStackUsage',0,8,8
	.byte	'XSigFunctionIdx_GetKernelStackUsage',0,9,8
	.byte	'XSigFunctionIdx_GetProtectionHookStackUsage',0,10,8
	.byte	'XSigFunctionIdx_GetScheduleTableStatus',0,11,8
	.byte	'XSigFunctionIdx_GetShutdownHookStackUsage',0,12,8
	.byte	'XSigFunctionIdx_GetStartupHookStackUsage',0,13,8
	.byte	'XSigFunctionIdx_GetTaskStackUsage',0,14,8
	.byte	'XSigFunctionIdx_GetTaskState',0,15,8
	.byte	'XSigFunctionIdx_HookCallCallback',0,16,8
	.byte	'XSigFunctionIdx_NextScheduleTable',0,17,8
	.byte	'XSigFunctionIdx_SetAbsAlarm',0,18,8
	.byte	'XSigFunctionIdx_SetEvent',0,19,8
	.byte	'XSigFunctionIdx_SetRelAlarm',0,20,8
	.byte	'XSigFunctionIdx_ShutdownAllCores',0,21,8
	.byte	'XSigFunctionIdx_StartScheduleTableAbs',0,22,8
	.byte	'XSigFunctionIdx_StartScheduleTableRel',0,23,8
	.byte	'XSigFunctionIdx_StopScheduleTable',0,24,8
	.byte	'XSigFunctionIdx_TerminateApplication',0,25,8
	.byte	'OS_XSIGFUNCTIONIDX_COUNT',0,26,0,16,32
	.word	13770
	.byte	17,3,0,15,47,119,9,32,10
	.byte	'ParameterData',0
	.word	21208
	.byte	32,2,35,0,0,7,47,94,9,1,8
	.byte	'OS_XSIGSTATE_ASYNC_NACK',0,0,8
	.byte	'OS_XSIGSTATE_SYNC_NACK',0,1,8
	.byte	'OS_XSIGSTATE_SYNC_PENDING',0,2,8
	.byte	'OS_XSIGSTATE_ACK',0,3,0,9
	.byte	'Os_XSigSendDataType_Tag',0,47,151,1,8,48,10
	.byte	'FunctionIdx',0
	.word	20224
	.byte	1,2,35,0,10
	.byte	'ParameterData',0
	.word	21217
	.byte	32,2,35,4,10
	.byte	'Sender',0
	.word	.L114-.L72
	.byte	4,2,35,36,10
	.byte	'SenderApp',0
	.word	.L520-.L72
	.byte	4,2,35,40,10
	.byte	'Acknowledge',0
	.word	21246
	.byte	1,2,35,44,0,18
	.word	21350
	.byte	11
	.word	21481
	.byte	15,47,129,1,9,8,10
	.byte	'ParameterData',0
	.word	13770
	.byte	8,2,35,0,0,15,47,140,1,9,12,10
	.byte	'Status',0
	.word	419
	.byte	2,2,35,0,10
	.byte	'OutputParameter',0
	.word	21491
	.byte	8,2,35,4,0,9
	.byte	'Os_XSigRecvDataType_Tag',0,47,175,1,8,12,10
	.byte	'ReturnData',0
	.word	21521
	.byte	12,2,35,0,0,18
	.word	21569
	.byte	11
	.word	21620
	.byte	15,47,104,9,12,10
	.byte	'SendData',0
	.word	21486
	.byte	4,2,35,0,10
	.byte	'RecvData',0
	.word	21625
	.byte	4,2,35,4,10
	.byte	'Idx',0
	.word	5373
	.byte	2,2,35,8,0,12
	.word	21630
	.byte	11
	.word	21685
	.byte	15,47,221,1,9,16,10
	.byte	'Dyn',0
	.word	20177
	.byte	4,2,35,0,10
	.byte	'Receive',0
	.word	20219
	.byte	4,2,35,4,10
	.byte	'Buffer',0
	.word	21690
	.byte	4,2,35,8,10
	.byte	'BufferSize',0
	.word	5373
	.byte	2,2,35,12,0,9
	.byte	'Os_IsrConfigType_Tag',0,19,189,1,8,68,10
	.byte	'Thread',0
	.word	.L519-.L72
	.byte	60,2,35,0,10
	.byte	'SourceConfig',0
	.word	6749
	.byte	4,2,35,60,10
	.byte	'Id',0
	.word	11715
	.byte	1,2,35,64,10
	.byte	'IsEnabledOnInitialization',0
	.word	402
	.byte	1,2,35,65,0,12
	.word	.L524-.L72
	.byte	11
	.word	21881
	.byte	12
	.word	21217
	.byte	11
	.word	21891
	.byte	11
	.word	21491
	.byte	25
	.word	419
	.byte	1,1,24
	.word	21886
	.byte	24
	.word	21896
	.byte	24
	.word	21901
	.byte	0,11
	.word	21906
	.byte	13
	.byte	'Os_XSigFunctionType',0,46,177,1,9
	.word	21929
	.byte	15,46,186,1,9,4,10
	.byte	'FunctionRef',0
	.word	21934
	.byte	4,2,35,0,0,16,4
	.word	21963
	.byte	17,0,0,9
	.byte	'Os_XSigFunctionTableConfigType_Tag',0,46,194,1,8,4,10
	.byte	'FunctionDescription',0
	.word	21991
	.byte	4,2,35,0,0,12
	.word	22000
	.byte	11
	.word	22071
	.byte	18
	.word	20182
	.byte	11
	.word	22081
	.byte	18
	.word	20129
	.byte	12
	.word	22091
	.byte	11
	.word	22096
	.byte	15,47,238,1,9,16,10
	.byte	'Dyn',0
	.word	22086
	.byte	4,2,35,0,10
	.byte	'Send',0
	.word	22101
	.byte	4,2,35,4,10
	.byte	'Buffer',0
	.word	21690
	.byte	4,2,35,8,10
	.byte	'BufferSize',0
	.word	5373
	.byte	2,2,35,12,0,9
	.byte	'Os_XSigRecvPortConfigType_Tag',0,46,202,1,8,20,10
	.byte	'RecvChannel',0
	.word	22106
	.byte	16,2,35,0,10
	.byte	'SendPort',0
	.word	.L525-.L72
	.byte	4,2,35,16,0,12
	.word	22176
	.byte	11
	.word	22252
	.byte	13
	.byte	'Os_XSigRecvPortConfigRefType',0,49,81,65
	.word	22257
	.byte	12
	.word	22262
	.byte	11
	.word	22299
	.byte	9
	.byte	'Os_Hal_XSigInterruptConfigType_Tag',0,10,149,1,8,4,10
	.byte	'ConfigData',0
	.word	6561
	.byte	4,2,35,0,0,12
	.word	22309
	.byte	11
	.word	22371
	.byte	9
	.byte	'Os_XSigIsrConfigType_Tag',0,46,232,1,8,84,10
	.byte	'IsrCfg',0
	.word	21768
	.byte	68,2,35,0,10
	.byte	'FunctionTable',0
	.word	22076
	.byte	4,2,35,68,10
	.byte	'RecvPortRefs',0
	.word	22304
	.byte	4,2,35,72,10
	.byte	'RecvPortCount',0
	.word	5373
	.byte	2,2,35,76,10
	.byte	'HwConfig',0
	.word	22376
	.byte	4,2,35,80,0,12
	.word	22381
	.byte	11
	.word	22515
	.byte	9
	.byte	'Os_XSigSendPortConfigType_Tag',0,46,213,1,8,28,10
	.byte	'SendChannel',0
	.word	21695
	.byte	16,2,35,0,10
	.byte	'XSigIsr',0
	.word	22520
	.byte	4,2,35,16,10
	.byte	'RecvPort',0
	.word	22257
	.byte	4,2,35,20,10
	.byte	'SendCore',0
	.word	.L521-.L72
	.byte	4,2,35,24,0,12
	.word	22525
.L525:
	.byte	11
	.word	22636
	.byte	16,4
	.word	22641
	.byte	17,0,0,13
	.byte	'Os_XSigIsrConfigRefType',0,49,68,60
	.word	22520
	.byte	12
	.word	22655
	.byte	11
	.word	22687
	.byte	9
	.byte	'Os_XSigConfigType_Tag',0,46,135,2,8,12,10
	.byte	'SendPorts',0
	.word	22646
	.byte	4,2,35,0,10
	.byte	'RecvIsrRefs',0
	.word	22692
	.byte	4,2,35,4,10
	.byte	'RecvIsrCount',0
	.word	5373
	.byte	2,2,35,8,0,12
	.word	22697
	.byte	11
	.word	22788
	.byte	7,51,53,9,1,8
	.byte	'OS_IOCLOCKMODE_NONE',0,0,8
	.byte	'OS_IOCLOCKMODE_INTERRUPTS',0,1,8
	.byte	'OS_IOCLOCKMODE_SPINLOCKS',0,2,8
	.byte	'OS_IOCLOCKMODE_ALL',0,3,0,7,51,67,9,1,8
	.byte	'OS_IOCCHANNELSTATE_DISABLED',0,0,8
	.byte	'OS_IOCCHANNELSTATE_ENABLED',0,1,0,9
	.byte	'Os_IocType_Tag',0,50,146,3,8,1,10
	.byte	'State',0
	.word	22902
	.byte	1,2,35,0,0,18
	.word	22967
	.byte	11
	.word	23004
	.byte	7,50,154,3,9,1,8
	.byte	'Ioc08Receive',0,0,8
	.byte	'Ioc08MultiReceive',0,1,8
	.byte	'Ioc08Send',0,2,8
	.byte	'Ioc16Receive',0,3,8
	.byte	'Ioc16MultiReceive',0,4,8
	.byte	'Ioc16Send',0,5,8
	.byte	'Ioc32Receive',0,6,8
	.byte	'Ioc32MultiReceive',0,7,8
	.byte	'Ioc32Send',0,8,8
	.byte	'IocRefReceive',0,9,8
	.byte	'IocRefMultiReceive',0,10,8
	.byte	'IocRefSend',0,11,8
	.byte	'IocRead',0,12,8
	.byte	'IocWrite',0,13,0,9
	.byte	'Os_IocConfigType_Tag',0,50,174,3,8,20,10
	.byte	'Spinlock',0
	.word	5936
	.byte	4,2,35,0,10
	.byte	'LockMode',0
	.word	22798
	.byte	1,2,35,4,10
	.byte	'Dyn',0
	.word	23009
	.byte	4,2,35,8,10
	.byte	'SubClass',0
	.word	23014
	.byte	1,2,35,12,10
	.byte	'AccessingApplications',0
	.word	138
	.byte	4,2,35,14,0,12
	.word	23233
	.byte	11
	.word	23359
	.byte	13
	.byte	'Os_IocConfigRefType',0,18,160,2,54
	.word	23364
	.byte	12
	.word	23369
	.byte	11
	.word	23398
	.byte	7,52,117,9,1,8
	.byte	'OS_BARRIERATTENDEESTATE_DETACHED',0,0,8
	.byte	'OS_BARRIERATTENDEESTATE_ATTACHED',0,1,0,9
	.byte	'Os_BarrierBaseType_Tag',0,52,131,1,8,2,10
	.byte	'AttendeeState',0
	.word	23408
	.byte	1,2,35,0,10
	.byte	'Counter',0
	.word	402
	.byte	1,2,35,1,0,18
	.word	23484
	.byte	11
	.word	23554
	.byte	13
	.byte	'Os_BarrierAttendeeRefType',0,52,115,69
	.word	.L526-.L72
	.byte	12
	.word	23564
	.byte	11
	.word	23598
	.byte	9
	.byte	'Os_BarrierBaseConfigType_Tag',0,52,142,1,8,16,10
	.byte	'Dyn',0
	.word	23559
	.byte	4,2,35,0,10
	.byte	'AttendeeRefs',0
	.word	23603
	.byte	4,2,35,4,10
	.byte	'AttendeeCount',0
	.word	402
	.byte	1,2,35,8,10
	.byte	'TaskPtr',0
	.word	16602
	.byte	4,2,35,12,0,12
	.word	23608
.L526:
	.byte	11
	.word	23719
	.byte	13
	.byte	'Os_BarrierBaseConfigRefType',0,53,62,62
	.word	23724
	.byte	12
	.word	23729
	.byte	11
	.word	23765
	.byte	9
	.byte	'Os_Hal_ContextFpuContextType_Tag',0,8,200,1,9,4,10
	.byte	'DummyFpuFlagRegister',0
	.word	138
	.byte	4,2,35,0,0,9
	.byte	'Os_ThreadClassType_Tag',0,11,109,8,4,10
	.byte	'InitialFpuContext',0
	.word	23775
	.byte	4,2,35,0,0,11
	.word	23845
	.byte	12
	.word	21768
	.byte	11
	.word	23906
	.byte	13
	.byte	'Os_IsrConfigRefType',0,54,66,54
	.word	23911
	.byte	12
	.word	23916
	.byte	11
	.word	23944
	.byte	9
	.byte	'Os_CoreAsrConfigType_Tag',0,18,133,3,8,148,1,10
	.byte	'Core',0
	.word	7438
	.byte	24,2,35,0,10
	.byte	'Dyn',0
	.word	16134
	.byte	4,2,35,24,10
	.byte	'Scheduler',0
	.word	16975
	.byte	4,2,35,28,10
	.byte	'IdleTask',0
	.word	16602
	.byte	4,2,35,32,10
	.byte	'KernelApp',0
	.word	.L520-.L72
	.byte	4,2,35,36,10
	.byte	'KernelStack',0
	.word	5250
	.byte	4,2,35,40,10
	.byte	'PreStartTask',0
	.word	16602
	.byte	4,2,35,44,10
	.byte	'StartupHookRef',0
	.word	17321
	.byte	4,2,35,48,10
	.byte	'ShutdownHookRef',0
	.word	17449
	.byte	4,2,35,52,10
	.byte	'ErrorHookRef',0
	.word	17449
	.byte	4,2,35,56,10
	.byte	'ProtectionHookRef',0
	.word	17748
	.byte	4,2,35,60,10
	.byte	'InitHookRef',0
	.word	17858
	.byte	4,2,35,64,10
	.byte	'HookRefs',0
	.word	17908
	.byte	4,2,35,68,10
	.byte	'HookCount',0
	.word	5373
	.byte	2,2,35,72,10
	.byte	'AppRefs',0
	.word	17947
	.byte	4,2,35,76,10
	.byte	'AppCount',0
	.word	5373
	.byte	2,2,35,80,10
	.byte	'ResourceRefs',0
	.word	18107
	.byte	4,2,35,84,10
	.byte	'ResourceCount',0
	.word	5373
	.byte	2,2,35,88,10
	.byte	'HwConfig',0
	.word	18168
	.byte	4,2,35,92,10
	.byte	'MemoryProtection',0
	.word	18610
	.byte	4,2,35,96,10
	.byte	'TimingProtection',0
	.word	20060
	.byte	4,2,35,100,10
	.byte	'StackRefs',0
	.word	20070
	.byte	4,2,35,104,10
	.byte	'StackCount',0
	.word	5373
	.byte	2,2,35,108,10
	.byte	'CoreIdx',0
	.word	20075
	.byte	1,2,35,110,10
	.byte	'XSignal',0
	.word	22793
	.byte	4,2,35,112,10
	.byte	'IocRefs',0
	.word	23403
	.byte	4,2,35,116,10
	.byte	'IocCount',0
	.word	5373
	.byte	2,2,35,120,10
	.byte	'Barrier',0
	.word	23724
	.byte	4,2,35,124,10
	.byte	'BarrierRefs',0
	.word	23770
	.byte	4,3,35,128,1,10
	.byte	'BarrierCount',0
	.word	5373
	.byte	2,3,35,132,1,10
	.byte	'ThreadClass',0
	.word	23901
	.byte	4,3,35,136,1,10
	.byte	'IsrRefs',0
	.word	23949
	.byte	4,3,35,140,1,10
	.byte	'IsrCount',0
	.word	5373
	.byte	2,3,35,144,1,0,12
	.word	23954
.L521:
	.byte	11
	.word	24648
	.byte	13
	.byte	'Os_TaskConfigRefType',0,17,100,55
	.word	16602
	.byte	12
	.word	24658
	.byte	11
	.word	24687
	.byte	9
	.byte	'Os_IsrCat1ConfigType_Tag',0,19,207,1,8,4,10
	.byte	'SourceConfig',0
	.word	6749
	.byte	4,2,35,0,0,12
	.word	24697
	.byte	11
	.word	24751
	.byte	13
	.byte	'Os_IsrCat1ConfigRefType',0,54,69,58
	.word	24756
	.byte	12
	.word	24761
	.byte	11
	.word	24793
	.byte	13
	.byte	'Os_CounterConfigRefType',0,17,103,58
	.word	18843
	.byte	12
	.word	24803
	.byte	11
	.word	24835
	.byte	7,55,107,9,1,8
	.byte	'OS_ALARMMODE_ABSOLUTE',0,0,8
	.byte	'OS_ALARMMODE_RELATIVE',0,1,0,15,55,127,9,12,10
	.byte	'AlarmTime',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'Cycle',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'ApplicationModes',0
	.word	402
	.byte	1,2,35,8,10
	.byte	'AlarmMode',0
	.word	24845
	.byte	1,2,35,9,0,9
	.byte	'Os_AlarmConfigType_Tag',0,55,169,1,8,32,10
	.byte	'Job',0
	.word	18899
	.byte	12,2,35,0,10
	.byte	'Autostart',0
	.word	24899
	.byte	12,2,35,12,10
	.byte	'AccessingApplications',0
	.word	138
	.byte	4,2,35,24,10
	.byte	'OwnerApplication',0
	.word	.L520-.L72
	.byte	4,2,35,28,0,12
	.word	24984
	.byte	11
	.word	25103
	.byte	13
	.byte	'Os_AlarmConfigRefType',0,17,106,56
	.word	25108
	.byte	12
	.word	25113
	.byte	11
	.word	25143
	.byte	7,56,135,2,9,1,8
	.byte	'OS_SCHT_AUTOSTART_NON',0,0,8
	.byte	'OS_SCHT_AUTOSTART_RELATIVE',0,1,8
	.byte	'OS_SCHT_AUTOSTART_SYNCHRON',0,2,8
	.byte	'OS_SCHT_AUTOSTART_ABSOLUTE',0,3,0,9
	.byte	'Os_SchTAutostartConfigType_Tag',0,56,145,2,8,6,10
	.byte	'StartTime',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'AutostartModes',0
	.word	25153
	.byte	1,2,35,4,10
	.byte	'ApplicationModes',0
	.word	402
	.byte	1,2,35,5,0,7,56,251,1,9,1,8
	.byte	'OS_SCHT_SYNC_KIND_NON',0,0,8
	.byte	'OS_SCHT_SYNC_KIND_IMPLICIT',0,1,8
	.byte	'OS_SCHT_SYNC_KIND_EXPLICIT',0,2,0,7,56,186,1,9,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE',0,0,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC',0,1,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SYNC_ZERO',0,2,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_CYCLIC',0,3,8
	.byte	'OS_SCHT_EXPO_KIND_EXECUTE_SINGLE_SHOT',0,4,0,9
	.byte	'Os_SchTExPoActionTaskConfigType_Tag',0,56,178,1,8,4,10
	.byte	'Task',0
	.word	16602
	.byte	4,2,35,0,0,12
	.word	25648
	.byte	11
	.word	25705
	.byte	9
	.byte	'Os_SchTExPoActionEventConfigType_Tag',0,56,166,1,8,12,10
	.byte	'Task',0
	.word	16602
	.byte	4,2,35,0,10
	.byte	'EventMask',0
	.word	11684
	.byte	8,2,35,4,0,12
	.word	25715
	.byte	11
	.word	25792
	.byte	9
	.byte	'Os_SchTExPoConfigType_Tag',0,56,202,1,8,28,10
	.byte	'Next',0
	.word	.L527-.L72
	.byte	4,2,35,0,10
	.byte	'Kind',0
	.word	25467
	.byte	1,2,35,4,10
	.byte	'Tasks',0
	.word	25710
	.byte	4,2,35,8,10
	.byte	'TaskCount',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'Events',0
	.word	25797
	.byte	4,2,35,16,10
	.byte	'EventCount',0
	.word	138
	.byte	4,2,35,20,10
	.byte	'RelOffsetToNext',0
	.word	138
	.byte	4,2,35,24,0,12
	.word	25802
.L527:
	.byte	11
	.word	25958
	.byte	9
	.byte	'Os_SchTConfigType_Tag',0,56,156,2,8,36,10
	.byte	'Job',0
	.word	18899
	.byte	12,2,35,0,10
	.byte	'Autostart',0
	.word	25271
	.byte	6,2,35,12,10
	.byte	'SyncKind',0
	.word	25378
	.byte	1,2,35,18,10
	.byte	'AccessingApplications',0
	.word	138
	.byte	4,2,35,20,10
	.byte	'OwnerApplication',0
	.word	.L520-.L72
	.byte	4,2,35,24,10
	.byte	'ExPoHead',0
	.word	25963
	.byte	4,2,35,28,10
	.byte	'InitialNext',0
	.word	.L528-.L72
	.byte	4,2,35,32,0,12
	.word	25968
.L528:
	.byte	11
	.word	26143
	.byte	13
	.byte	'Os_SchTConfigRefType',0,17,109,55
	.word	26148
	.byte	12
	.word	26153
	.byte	11
	.word	26182
	.byte	9
	.byte	'Os_Hal_MpAppConfigType_Tag',0,37,114,8,36,10
	.byte	'ProtectionSet',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'MpuDataRegionStartSlot',0
	.word	402
	.byte	1,2,35,1,10
	.byte	'MpuDataRegionCount',0
	.word	402
	.byte	1,2,35,2,10
	.byte	'MpuDataRegions',0
	.word	18226
	.byte	4,2,35,4,10
	.byte	'MpuDataRegionEnableMask',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'MpuDataRegionReadEnable',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'MpuDataRegionWriteEnable',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'MpuCodeRegionStartSlot',0
	.word	402
	.byte	1,2,35,20,10
	.byte	'MpuCodeRegionCount',0
	.word	402
	.byte	1,2,35,21,10
	.byte	'MpuCodeRegions',0
	.word	18226
	.byte	4,2,35,24,10
	.byte	'MpuCodeRegionEnableMask',0
	.word	138
	.byte	4,2,35,28,10
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	138
	.byte	4,2,35,32,0,12
	.word	26192
	.byte	11
	.word	26587
	.byte	9
	.byte	'Os_Hal_MpThreadConfigType_Tag',0,37,139,1,8,36,10
	.byte	'ProtectionSet',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'MpuDataRegionStartSlot',0
	.word	402
	.byte	1,2,35,1,10
	.byte	'MpuDataRegionCount',0
	.word	402
	.byte	1,2,35,2,10
	.byte	'MpuDataRegions',0
	.word	18226
	.byte	4,2,35,4,10
	.byte	'MpuDataRegionEnableMask',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'MpuDataRegionReadEnable',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'MpuDataRegionWriteEnable',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'MpuCodeRegionStartSlot',0
	.word	402
	.byte	1,2,35,20,10
	.byte	'MpuCodeRegionCount',0
	.word	402
	.byte	1,2,35,21,10
	.byte	'MpuCodeRegions',0
	.word	18226
	.byte	4,2,35,24,10
	.byte	'MpuCodeRegionEnableMask',0
	.word	138
	.byte	4,2,35,28,10
	.byte	'MpuCodeRegionExecutionEnable',0
	.word	138
	.byte	4,2,35,32,0,12
	.word	26597
	.byte	11
	.word	26996
	.byte	9
	.byte	'Os_MpAccessRightsType_Tag',0,36,132,1,8,8,10
	.byte	'AppAccessRights',0
	.word	26592
	.byte	4,2,35,0,10
	.byte	'ThreadAccessRights',0
	.word	27001
	.byte	4,2,35,4,0,12
	.word	27006
	.byte	11
	.word	27092
	.byte	7,57,117,9,1,8
	.byte	'OS_SERVICE_TRUSTEDFUNCTION',0,0,8
	.byte	'OS_SERVICE_NONTRUSTEDFUNCTION',0,1,8
	.byte	'OS_SERVICE_FASTTRUSTEDFUNCTION',0,2,0,9
	.byte	'Os_ServiceConfigType_Tag',0,57,209,1,8,12,10
	.byte	'OwnerApplication',0
	.word	.L520-.L72
	.byte	4,2,35,0,10
	.byte	'MpAccessRights',0
	.word	27097
	.byte	4,2,35,4,10
	.byte	'ServiceType',0
	.word	27102
	.byte	1,2,35,8,0,12
	.word	27202
	.byte	11
	.word	27305
	.byte	13
	.byte	'Os_ServiceConfigRefType',0,17,112,58
	.word	27310
	.byte	12
	.word	27315
	.byte	11
	.word	27347
.L524:
	.byte	9
	.byte	'Os_AppConfigType_Tag',0,17,126,8,96,10
	.byte	'Dyn',0
	.word	6072
	.byte	4,2,35,0,10
	.byte	'Core',0
	.word	24653
	.byte	4,2,35,4,10
	.byte	'AccessRightId',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'TaskRefs',0
	.word	24692
	.byte	4,2,35,12,10
	.byte	'TaskCount',0
	.word	5373
	.byte	2,2,35,16,10
	.byte	'IsrCat2Refs',0
	.word	23949
	.byte	4,2,35,20,10
	.byte	'IsrCat2Count',0
	.word	5373
	.byte	2,2,35,24,10
	.byte	'IsrCat1Refs',0
	.word	24798
	.byte	4,2,35,28,10
	.byte	'IsrCat1Count',0
	.word	5373
	.byte	2,2,35,32,10
	.byte	'CounterRefs',0
	.word	24840
	.byte	4,2,35,36,10
	.byte	'CounterCount',0
	.word	5373
	.byte	2,2,35,40,10
	.byte	'AlarmRefs',0
	.word	25148
	.byte	4,2,35,44,10
	.byte	'AlarmCount',0
	.word	5373
	.byte	2,2,35,48,10
	.byte	'SchTRefs',0
	.word	26187
	.byte	4,2,35,52,10
	.byte	'SchTCount',0
	.word	5373
	.byte	2,2,35,56,10
	.byte	'ServiceFunctions',0
	.word	27352
	.byte	4,2,35,60,10
	.byte	'ServiceFunctionCount',0
	.word	5373
	.byte	2,2,35,64,10
	.byte	'StartupHookRef',0
	.word	17321
	.byte	4,2,35,68,10
	.byte	'ShutdownHookRef',0
	.word	17449
	.byte	4,2,35,72,10
	.byte	'ErrorHookRef',0
	.word	17449
	.byte	4,2,35,76,10
	.byte	'HookRefs',0
	.word	17908
	.byte	4,2,35,80,10
	.byte	'HookCount',0
	.word	5373
	.byte	2,2,35,84,10
	.byte	'RestartTask',0
	.word	16602
	.byte	4,2,35,88,10
	.byte	'IsTrusted',0
	.word	402
	.byte	1,2,35,92,10
	.byte	'IsPrivileged',0
	.word	402
	.byte	1,2,35,93,10
	.byte	'HasTimingProtectionDelay',0
	.word	402
	.byte	1,2,35,94,10
	.byte	'Id',0
	.word	11538
	.byte	1,2,35,95,0,12
	.word	27357
.L520:
	.byte	11
	.word	27948
	.byte	15,57,126,9,8,10
	.byte	'FunctionIndex',0
	.word	12629
	.byte	1,2,35,0,10
	.byte	'FunctionParams',0
	.word	12670
	.byte	4,2,35,4,0,15,57,136,1,9,8,10
	.byte	'FunctionIndex',0
	.word	12914
	.byte	1,2,35,0,10
	.byte	'FunctionParams',0
	.word	12953
	.byte	4,2,35,4,0,15,57,146,1,9,8,10
	.byte	'FunctionIndex',0
	.word	13000
	.byte	1,2,35,0,10
	.byte	'FunctionParams',0
	.word	13040
	.byte	4,2,35,4,0,26,57,157,1,9,8,10
	.byte	'TrustedFunctionParameters',0
	.word	27958
	.byte	8,2,35,0,10
	.byte	'NonTrustedFunctionParameters',0
	.word	28011
	.byte	8,2,35,0,10
	.byte	'FastTrustedFunctionParameters',0
	.word	28065
	.byte	8,2,35,0,0,9
	.byte	'Os_ServiceCallType_Tag',0,57,167,1,8,56,10
	.byte	'PrevApplication',0
	.word	27953
	.byte	4,2,35,0,10
	.byte	'PrevMpAccessRights',0
	.word	27097
	.byte	4,2,35,4,10
	.byte	'PrevServiceCalls',0
	.word	.L529-.L72
	.byte	4,2,35,8,10
	.byte	'CallerContext',0
	.word	4982
	.byte	28,2,35,12,10
	.byte	'ServiceCallContext',0
	.word	5165
	.byte	4,2,35,40,10
	.byte	'Service',0
	.word	27310
	.byte	4,2,35,44,10
	.byte	'Parameters',0
	.word	28119
	.byte	8,2,35,48,0
.L529:
	.byte	11
	.word	28238
	.byte	9
	.byte	'Os_ThreadType_Tag',0,11,117,8,24,10
	.byte	'Locks',0
	.word	3275
	.byte	4,2,35,0,10
	.byte	'Spinlocks',0
	.word	5941
	.byte	4,2,35,4,10
	.byte	'Application',0
	.word	27953
	.byte	4,2,35,8,10
	.byte	'MpAccessRights',0
	.word	27097
	.byte	4,2,35,12,10
	.byte	'ServiceCalls',0
	.word	28435
	.byte	4,2,35,16,10
	.byte	'CallContext',0
	.word	5373
	.byte	2,2,35,20,0,11
	.word	28440
	.byte	11
	.word	7805
	.byte	7,38,146,2,9,1,8
	.byte	'OS_TPTHREADKIND_OWNER',0,0,8
	.byte	'OS_TPTHREADKIND_HEIR',0,1,8
	.byte	'OS_TPTHREADKIND_TPISR',0,2,0,9
	.byte	'Os_TpThreadConfigType_Tag',0,38,202,2,8,1,10
	.byte	'ThreadKind',0
	.word	28596
	.byte	1,2,35,0,0,12
	.word	28674
	.byte	11
	.word	28727
	.byte	7,3,211,6,9,1,8
	.byte	'OS_MEM_ACCESS_TYPE_NON',0,0,8
	.byte	'OS_MEM_ACCESS_TYPE_R',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_READ',0,1,8
	.byte	'OS_MEM_ACCESS_TYPE_W',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_WRITE',0,2,8
	.byte	'OS_MEM_ACCESS_TYPE_RW',0,3,8
	.byte	'OS_MEM_ACCESS_TYPE_EXECUTE',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_X',0,4,8
	.byte	'OS_MEM_ACCESS_TYPE_RX',0,5,8
	.byte	'OS_MEM_ACCESS_TYPE_WX',0,6,8
	.byte	'OS_MEM_ACCESS_TYPE_RWX',0,7,8
	.byte	'OS_MEM_ACCESS_TYPE_S',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_STACK',0,8,8
	.byte	'OS_MEM_ACCESS_TYPE_RS',0,9,8
	.byte	'OS_MEM_ACCESS_TYPE_WS',0,10,8
	.byte	'OS_MEM_ACCESS_TYPE_RWS',0,11,8
	.byte	'OS_MEM_ACCESS_TYPE_XS',0,12,8
	.byte	'OS_MEM_ACCESS_TYPE_RXS',0,13,8
	.byte	'OS_MEM_ACCESS_TYPE_WXS',0,14,8
	.byte	'OS_MEM_ACCESS_TYPE_RWXS',0,15,0,15,58,90,9,12,10
	.byte	'AddressStart',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'AddressEnd',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'AccessRights',0
	.word	28737
	.byte	1,2,35,8,0,12
	.word	29240
	.byte	11
	.word	29310
	.byte	9
	.byte	'Os_AccessCheckConfigType_Tag',0,58,99,8,8,10
	.byte	'Regions',0
	.word	29315
	.byte	4,2,35,0,10
	.byte	'RegionCount',0
	.word	402
	.byte	1,2,35,4,0,12
	.word	29320
	.byte	11
	.word	29393
	.byte	11
	.word	23775
	.byte	13
	.byte	'Os_PreThreadHookCbkType',0,59,196,3,9
	.word	17211
.L519:
	.byte	9
	.byte	'Os_ThreadConfigType_Tag',0,11,141,1,8,60,10
	.byte	'ContextConfig',0
	.word	4870
	.byte	4,2,35,0,10
	.byte	'Context',0
	.word	5165
	.byte	4,2,35,4,10
	.byte	'Stack',0
	.word	5250
	.byte	4,2,35,8,10
	.byte	'Dyn',0
	.word	28586
	.byte	4,2,35,12,10
	.byte	'OwnerApplication',0
	.word	27953
	.byte	4,2,35,16,10
	.byte	'Core',0
	.word	24653
	.byte	4,2,35,20,10
	.byte	'IntApiState',0
	.word	28591
	.byte	4,2,35,24,10
	.byte	'TimeProtConfig',0
	.word	28732
	.byte	4,2,35,28,10
	.byte	'MpAccessRightsInitial',0
	.word	27097
	.byte	4,2,35,32,10
	.byte	'AccessRights',0
	.word	29398
	.byte	4,2,35,36,10
	.byte	'Trace',0
	.word	7329
	.byte	4,2,35,40,10
	.byte	'FpuContext',0
	.word	29403
	.byte	4,2,35,44,10
	.byte	'InitialCallContext',0
	.word	5373
	.byte	2,2,35,48,10
	.byte	'PreThreadHook',0
	.word	29408
	.byte	4,2,35,52,10
	.byte	'InitDuringStartUp',0
	.word	402
	.byte	1,2,35,56,10
	.byte	'UsesFpu',0
	.word	402
	.byte	1,2,35,57,0,12
	.word	29441
.L114:
	.byte	11
	.word	29808
	.byte	9
	.byte	'Os_Hal_Core2ThreadType_Tag',0,10,135,1,8,4,10
	.byte	'Thread',0
	.word	29813
	.byte	4,2,35,0,0,11
	.word	29818
	.byte	16,4
	.word	29868
	.byte	17,0,0,9
	.byte	'Os_Hal_Core2ThreadConfigType_Tag',0,10,143,1,8,4,10
	.byte	'Core2Thread',0
	.word	29873
	.byte	4,2,35,0,0,12
	.word	29882
	.byte	11
	.word	29943
.L424:
	.byte	6
	.byte	'Os_Hal_CoreSetThread',0,3,9,130,1,1,1,1
.L425:
	.byte	5
	.byte	'Core2Thread',0,9,130,1,1
	.word	29948
.L427:
	.byte	5
	.byte	'Thread',0,9,130,1,1
	.word	29813
.L429:
	.byte	14,4,4,0,0,12
	.word	5758
	.byte	11
	.word	30024
	.byte	12
	.word	6629
	.byte	11
	.word	30034
	.byte	12
	.word	29441
	.byte	11
	.word	30044
	.byte	11
	.word	11242
	.byte	11
	.word	5969
	.byte	12
	.word	11831
	.byte	11
	.word	30064
	.byte	11
	.word	11974
	.byte	11
	.word	12359
	.byte	11
	.word	12525
	.byte	11
	.word	138
	.byte	11
	.word	11831
	.byte	11
	.word	11831
	.byte	11
	.word	11831
	.byte	11
	.word	138
	.byte	11
	.word	138
	.byte	11
	.word	11180
	.byte	11
	.word	13281
	.byte	12
	.word	11831
	.byte	11
	.word	30129
	.byte	12
	.word	5175
	.byte	11
	.word	30139
	.byte	11
	.word	17208
	.byte	11
	.word	17326
	.byte	11
	.word	17613
	.byte	11
	.word	17326
	.byte	12
	.word	17088
	.byte	11
	.word	30169
	.byte	12
	.word	27357
	.byte	11
	.word	30179
	.byte	12
	.word	17952
	.byte	11
	.word	30189
	.byte	11
	.word	18858
	.byte	11
	.word	21906
	.byte	12
	.word	22176
	.byte	11
	.word	30209
	.byte	12
	.word	22381
	.byte	11
	.word	30219
	.byte	12
	.word	23233
	.byte	11
	.word	30229
	.byte	12
	.word	23608
	.byte	11
	.word	30239
	.byte	12
	.word	23608
	.byte	11
	.word	30249
	.byte	12
	.word	21768
	.byte	11
	.word	30259
	.byte	12
	.word	16306
	.byte	11
	.word	30269
	.byte	12
	.word	24697
	.byte	11
	.word	30279
	.byte	12
	.word	19228
	.byte	11
	.word	30289
	.byte	12
	.word	24984
	.byte	11
	.word	30299
	.byte	12
	.word	25968
	.byte	11
	.word	30309
	.byte	12
	.word	27202
	.byte	11
	.word	30319
	.byte	11
	.word	17208
.L177:
	.byte	3
	.byte	'Os_Hal_CoreGetThread',0,3,9,169,1,1
	.word	29813
	.byte	1,1
.L178:
	.byte	5
	.byte	'Core2Thread',0,9,169,1,1
	.word	29948
.L180:
	.byte	14,4,0,0,3
	.byte	'Os_Hal_CountLeadingZeros',0,3,9,128,2,1
	.word	402
	.byte	1,1,5
	.byte	'BitField',0,9,128,2,1
	.word	138
	.byte	4,0,3
	.byte	'Os_Hal_StackEndGet',0,3,9,141,2,1
	.word	5170
	.byte	1,1,5
	.byte	'LowAddress',0,9,141,2,1
	.word	5170
	.byte	5
	.byte	'HighAddress',0,9,141,2,1
	.word	5170
	.byte	4,0,18
	.word	138
	.byte	11
	.word	30523
	.byte	6
	.byte	'Os_Hal_SpinInit',0,3,9,216,2,1,1,1,5
	.byte	'Spinlock',0,9,216,2,1
	.word	30528
	.byte	4,0,18
	.word	138
	.byte	12
	.word	30577
	.byte	11
	.word	30582
	.byte	3
	.byte	'Os_Hal_SpinIsLocked',0,3,9,231,2,1
	.word	239
	.byte	1,1,5
	.byte	'Spinlock',0,9,231,2,1
	.word	30587
	.byte	4,0,3
	.byte	'Os_Hal_SpinTryLock',0,3,9,245,2,1
	.word	138
	.byte	1,1,5
	.byte	'Spinlock',0,9,245,2,1
	.word	30528
	.byte	4,0,6
	.byte	'Os_Hal_SpinUnlock',0,3,9,133,3,1,1,1,5
	.byte	'Spinlock',0,9,133,3,1
	.word	30528
	.byte	4,0,6
	.byte	'Os_Hal_CoreNop',0,3,9,209,3,1,1,1,4,0,6
	.byte	'Os_Hal_IntEnableGlobal',0,3,60,92,1,1,1,4,0,6
	.byte	'Os_Hal_IntDisableGlobal',0,3,60,108,1,1,1,4,0
.L307:
	.byte	3
	.byte	'Os_Hal_IntDisableAndReturnGlobalState',0,3,60,125,1
	.word	138
	.byte	1,1
.L308:
	.byte	4,0,12
	.word	138
	.byte	11
	.word	30882
.L296:
	.byte	6
	.byte	'Os_Hal_IntSetGlobalState',0,3,60,148,1,1,1,1
.L298:
	.byte	5
	.byte	'State',0,60,148,1,1
	.word	30887
.L300:
	.byte	4,0,11
	.word	138
.L277:
	.byte	6
	.byte	'Os_Hal_IntGetLevel',0,3,60,173,1,1,1,1
.L279:
	.byte	5
	.byte	'Level',0,60,173,1,1
	.word	30942
.L281:
	.byte	4,0,12
	.word	138
	.byte	11
	.word	30991
.L285:
	.byte	6
	.byte	'Os_Hal_IntSetLevel',0,3,60,194,1,1,1,1
.L287:
	.byte	5
	.byte	'Level',0,60,194,1,1
	.word	30996
.L289:
	.byte	14,4,4,0,0,11
	.word	138
	.byte	6
	.byte	'Os_Hal_IntGetGlobalEnable',0,3,60,223,1,1,1,1,5
	.byte	'State',0,60,223,1,1
	.word	31048
	.byte	4,0,6
	.byte	'Os_Hal_IntGetCat2LockLevel',0,3,60,242,1,1,1,1,5
	.byte	'Level',0,60,242,1,1
	.word	30942
	.byte	4,0,6
	.byte	'Os_Hal_IntGetTaskLevel',0,3,60,171,2,1,1,1,5
	.byte	'Level',0,60,171,2,1
	.word	30942
	.byte	4,0,11
	.word	138
	.byte	6
	.byte	'Os_Hal_IntGetInterruptState',0,3,60,190,2,1,1,1,5
	.byte	'InterruptState',0,60,190,2,1
	.word	31204
	.byte	4,0,6
	.byte	'Os_Hal_IntDisableSource',0,3,60,212,2,1,1,1,5
	.byte	'IsrConfig',0,60,212,2,1
	.word	6561
	.byte	4,0,6
	.byte	'Os_Hal_IntEnableSource',0,3,60,246,2,1,1,1,5
	.byte	'IsrConfig',0,60,246,2,1
	.word	6561
	.byte	4,0,6
	.byte	'Os_Hal_IntClearPending',0,3,60,162,3,1,1,1,5
	.byte	'IsrConfig',0,60,162,3,1
	.word	6561
	.byte	4,0,3
	.byte	'Os_Hal_IntIsrLevelIsLe',0,3,60,179,4,1
	.word	239
	.byte	1,1,5
	.byte	'IsrConfig',0,60,179,4,1
	.word	6561
	.byte	5
	.byte	'Level',0,60,179,4,1
	.word	30996
	.byte	4,0,3
	.byte	'Os_Hal_IntLevelIsGt',0,3,60,199,4,1
	.word	239
	.byte	1,1,5
	.byte	'LevelX',0,60,199,4,1
	.word	30996
	.byte	5
	.byte	'LevelY',0,60,199,4,1
	.word	30996
	.byte	4,0,6
	.byte	'Os_Hal_IntInterruptSourceInit',0,3,60,141,5,1,1,1,5
	.byte	'InterruptSource',0,60,141,5,1
	.word	6561
	.byte	4,0
.L291:
	.byte	6
	.byte	'Os_Hal_IntGetGlobalState',0,3,60,221,5,1,1,1
.L293:
	.byte	5
	.byte	'State',0,60,221,5,1
	.word	31048
.L295:
	.byte	4,0,11
	.word	7685
.L302:
	.byte	6
	.byte	'Os_IntSuspend',0,3,61,126,1,1,1
.L304:
	.byte	5
	.byte	'State',0,61,126,1
	.word	31680
.L306:
	.byte	14,4,4,0,0,12
	.word	7685
	.byte	11
	.word	31725
.L335:
	.byte	6
	.byte	'Os_IntResume',0,3,61,166,1,1,1,1
.L337:
	.byte	5
	.byte	'State',0,61,166,1,1
	.word	31730
.L339:
	.byte	14,4,0,0,12
	.word	7805
	.byte	11
	.word	31775
	.byte	3
	.byte	'Os_InterruptCheckEnabled',0,3,61,211,1,1
	.word	239
	.byte	1,1,5
	.byte	'InterruptState',0,61,211,1,1
	.word	31780
	.byte	14,4,0,0,6
	.byte	'Os_InterruptCleanup',0,3,61,231,1,1,1,1,5
	.byte	'InterruptState',0,61,231,1,1
	.word	28591
	.byte	4,0
.L269:
	.byte	6
	.byte	'Os_InterruptSaveAndIncrease',0,3,61,192,2,1,1,1
.L270:
	.byte	5
	.byte	'CurrentState',0,61,192,2,1
	.word	31680
.L272:
	.byte	5
	.byte	'IncreaseLevel',0,61,192,2,1
	.word	30996
.L274:
	.byte	14
.L275:
	.byte	4,4,4,4,0,0
.L461:
	.byte	6
	.byte	'Os_InterruptRestore',0,3,61,235,2,1,1,1
.L463:
	.byte	5
	.byte	'PreviousIntState',0,61,235,2,1
	.word	31730
.L465:
	.byte	14
.L466:
	.byte	4,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockAllStart',0,3,61,142,3,1,1,1,5
	.byte	'Thread',0,61,142,3,1
	.word	29813
	.byte	14,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockAllStop',0,3,61,167,3,1,1,1,5
	.byte	'Thread',0,61,167,3,1
	.word	29813
	.byte	14,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStart',0,3,61,192,3,1,1,1,5
	.byte	'Thread',0,61,192,3,1
	.word	29813
	.byte	14,4,4,4,0,0,6
	.byte	'Os_InterruptTpLockOsStop',0,3,61,217,3,1,1,1,5
	.byte	'Thread',0,61,217,3,1
	.word	29813
	.byte	14,4,4,4,0,0,3
	.byte	'Os_ResourceCheckId',0,3,62,92,1
	.word	239
	.byte	1,1,5
	.byte	'ResourceId',0,62,92,1
	.word	11879
	.byte	14,4,4,0,0
.L196:
	.byte	3
	.byte	'Os_ResourceId2Resource',0,3,62,105,1
	.word	18063
	.byte	1,1
.L198:
	.byte	5
	.byte	'ResourceId',0,62,105,1
	.word	11879
.L200:
	.byte	14,4,4,0,0,3
	.byte	'Os_ResourceGetAccessingApplications',0,3,62,119,1
	.word	138
	.byte	1,1,5
	.byte	'Resource',0,62,119,1
	.word	18063
	.byte	14,4,0,0
.L407:
	.byte	6
	.byte	'Os_StackOverflowCheck',0,3,63,138,1,1,1,1
.L408:
	.byte	14
.L409:
	.byte	4,4,4,0,0,3
	.byte	'Os_Bit_CountLeadingZeros',0,3,64,123,1
	.word	402
	.byte	1,1,5
	.byte	'BitField',0,64,123,1
	.word	138
	.byte	14,4,4,0,0,12
	.word	16179
	.byte	11
	.word	32551
	.byte	3
	.byte	'Os_BitArrayIdxIsValid',0,3,65,79,1
	.word	5373
	.byte	1,1,5
	.byte	'BitArray',0,65,79,1
	.word	32556
	.byte	5
	.byte	'BitIdx',0,65,79,1
	.word	5373
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetAllocationIdx',0,3,65,108,1
	.word	5373
	.byte	1,1,5
	.byte	'BitArrayIdx',0,65,108,1
	.word	138
	.byte	4,0,3
	.byte	'Os_BitArrayIdxGetFieldIdx',0,3,65,127,1
	.word	5373
	.byte	1,1,5
	.byte	'BitArrayIdx',0,65,127,1
	.word	5373
	.byte	4,0,6
	.byte	'Os_BitArraySetBitInternal',0,3,65,181,1,1,1,1,5
	.byte	'BitArray',0,65,181,1,1
	.word	32556
	.byte	5
	.byte	'BitIdx',0,65,181,1,1
	.word	5373
	.byte	14,4,4,4,4,0,0
.L456:
	.byte	11
	.word	138
	.byte	12
	.word	138
	.byte	6
	.byte	'Os_DequeIdxDecrement',0,3,66,91,1,1,1,5
	.byte	'Index',0,66,91,1
	.word	32826
	.byte	5
	.byte	'Size',0,66,91,1
	.word	32831
	.byte	4,0,12
	.word	138
	.byte	6
	.byte	'Os_DequeIdxIncrement',0,3,66,116,1,1,1,5
	.byte	'Index',0,66,116,1
	.word	32826
	.byte	5
	.byte	'Size',0,66,116,1
	.word	32893
	.byte	4,0,3
	.byte	'Os_SchedulerPriorityIsHigher',0,3,67,101,1
	.word	239
	.byte	1,1,5
	.byte	'PrioX',0,67,101,1
	.word	5373
	.byte	5
	.byte	'PrioY',0,67,101,1
	.word	5373
	.byte	4,0,3
	.byte	'Os_SchedulerPriorityIsHigherOrEqual',0,3,67,115,1
	.word	239
	.byte	1,1,5
	.byte	'PrioX',0,67,115,1
	.word	5373
	.byte	5
	.byte	'PrioY',0,67,115,1
	.word	5373
	.byte	4,0,3
	.byte	'Os_SchedulerGetCurrentTask',0,3,67,143,1,1
	.word	16602
	.byte	1,1,5
	.byte	'Scheduler',0,67,143,1,1
	.word	16975
	.byte	4,0,3
	.byte	'Os_SchedulerTaskSwitchIsNeeded',0,3,67,156,1,1
	.word	239
	.byte	1,1,5
	.byte	'Scheduler',0,67,156,1,1
	.word	16975
	.byte	4,0,11
	.word	5941
	.byte	6
	.byte	'Os_SpinlockListInit',0,3,68,106,1,1,1,5
	.byte	'LockList',0,68,106,1
	.word	33226
	.byte	4,0,18
	.word	138
	.byte	9
	.byte	'Os_SpinlockType_Tag',0,13,189,1,8,20,10
	.byte	'Lock',0
	.word	3044
	.byte	4,2,35,0,10
	.byte	'OwnerThread',0
	.word	29813
	.byte	4,2,35,4,10
	.byte	'PreviousSpinlock',0
	.word	5936
	.byte	4,2,35,8,10
	.byte	'Spinlock',0
	.word	33277
	.byte	4,2,35,12,10
	.byte	'PreviousPriority',0
	.word	5373
	.byte	2,2,35,16,0,11
	.word	33282
	.byte	3
	.byte	'Os_SpinlockGetDyn',0,3,68,150,1,1
	.word	33414
	.byte	1,1,5
	.byte	'Spinlock',0,68,150,1,1
	.word	5936
	.byte	14,4,0,0,3
	.byte	'Os_SpinlockInternalTryGet',0,3,68,132,2,1
	.word	138
	.byte	1,1,5
	.byte	'Spinlock',0,68,132,2,1
	.word	5936
	.byte	14,4,4,4,4,0,0
.L206:
	.byte	3
	.byte	'Os_CoreAsrIsCoreLocal',0,3,69,126,1
	.word	239
	.byte	1,1
.L207:
	.byte	5
	.byte	'Core',0,69,126,1
	.word	24653
.L209:
	.byte	14,4,0,0
.L201:
	.byte	3
	.byte	'Os_CoreAsrCheckIsCoreLocal',0,3,69,140,1,1
	.word	239
	.byte	1,1
.L203:
	.byte	5
	.byte	'Core',0,69,140,1,1
	.word	24653
.L205:
	.byte	14,4,4,0,0,12
	.word	7438
	.byte	11
	.word	33642
.L413:
	.byte	3
	.byte	'Os_CoreGetCurrentCore',0,3,69,245,1,1
	.word	33647
	.byte	1,1
.L415:
	.byte	14,4,0,0,3
	.byte	'Os_Core2AsrCore',0,3,69,204,1,1
	.word	24653
	.byte	1,1,5
	.byte	'Core',0,69,204,1,1
	.word	33647
	.byte	14,4,0,0,3
	.byte	'Os_CoreAsrGetDyn',0,3,69,153,1,1
	.word	16134
	.byte	1,1,5
	.byte	'Core',0,69,153,1,1
	.word	24653
	.byte	4,0,3
	.byte	'Os_CoreAsrGetTimingProtection',0,3,69,166,1,1
	.word	20060
	.byte	1,1,5
	.byte	'Core',0,69,166,1,1
	.word	24653
	.byte	4,0,3
	.byte	'Os_CoreIsAsrCore',0,3,69,154,2,1
	.word	239
	.byte	1,1,5
	.byte	'Core',0,69,154,2,1
	.word	33647
	.byte	4,0,3
	.byte	'Os_CoreIsStartedAsAsr',0,3,69,167,2,1
	.word	239
	.byte	1,1,5
	.byte	'Core',0,69,167,2,1
	.word	33647
	.byte	4,0,7,18,239,1,9,1,8
	.byte	'OS_COREOSSTATE_INITIALZE',0,0,8
	.byte	'OS_COREOSSTATE_PRESTARTTASK',0,1,8
	.byte	'OS_COREOSSTATE_STARTED',0,2,0,9
	.byte	'Os_CoreAsrStatusType_Tag',0,18,135,2,8,8,10
	.byte	'Core',0
	.word	6178
	.byte	2,2,35,0,10
	.byte	'OsState',0
	.word	33934
	.byte	1,2,35,2,10
	.byte	'ApplicationMode',0
	.word	402
	.byte	1,2,35,3,10
	.byte	'CriticalUserSection',0
	.word	138
	.byte	4,2,35,4,0,18
	.word	34023
	.byte	11
	.word	34140
	.byte	3
	.byte	'Os_CoreAsrGetAsrStatus',0,3,69,232,2,1
	.word	34145
	.byte	1,1,5
	.byte	'Core',0,69,232,2,1
	.word	24653
	.byte	4,0,3
	.byte	'Os_CoreGetIdleTask',0,3,69,246,3,1
	.word	16602
	.byte	1,1,5
	.byte	'Core',0,69,246,3,1
	.word	24653
	.byte	4,0,3
	.byte	'Os_CoreGetKernelApp',0,3,69,131,4,1
	.word	27953
	.byte	1,1,5
	.byte	'Core',0,69,131,4,1
	.word	24653
	.byte	4,0
.L376:
	.byte	3
	.byte	'Os_CoreGetScheduler',0,3,69,144,4,1
	.word	16975
	.byte	1,1
.L378:
	.byte	5
	.byte	'Core',0,69,144,4,1
	.word	24653
.L380:
	.byte	4,0,3
	.byte	'Os_CoreInterruptedThreadsGetTopIdx',0,3,69,149,5,1
	.word	7974
	.byte	1,1,5
	.byte	'Core',0,69,149,5,1
	.word	24653
	.byte	14,4,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsGet',0,3,69,169,5,1
	.word	29813
	.byte	1,1,5
	.byte	'Core',0,69,169,5,1
	.word	24653
	.byte	5
	.byte	'Idx',0,69,169,5,1
	.word	7974
	.byte	14,4,0,0,3
	.byte	'Os_CoreInterruptedThreadsMoveDown',0,3,69,209,5,1
	.word	7974
	.byte	1,1,5
	.byte	'Iterator',0,69,209,5,1
	.word	7974
	.byte	4,0
.L419:
	.byte	6
	.byte	'Os_CoreSetThread',0,3,69,224,5,1,1,1
.L421:
	.byte	5
	.byte	'Thread',0,69,224,5,1
	.word	29813
.L423:
	.byte	14,4,4,4,0,0
.L172:
	.byte	3
	.byte	'Os_CoreGetThread',0,3,69,238,5,1
	.word	29813
	.byte	1,1
.L174:
	.byte	14,4,4,4,0,0
.L442:
	.byte	6
	.byte	'Os_CoreSetCurrentStack',0,3,69,252,5,1,1,1
.L444:
	.byte	5
	.byte	'Stack',0,69,252,5,1
	.word	5250
.L446:
	.byte	5
	.byte	'Core',0,69,252,5,1
	.word	24653
.L448:
	.byte	14,4,0,0
.L410:
	.byte	3
	.byte	'Os_CoreGetCurrentStack',0,3,69,142,6,1
	.word	5250
	.byte	1,1
.L412:
	.byte	14,4,4,4,0,0,13
	.byte	'Os_SpinlockConfigRefType',0,18,152,2,59
	.word	5936
	.byte	12
	.word	34735
	.byte	11
	.word	34769
	.byte	12
	.word	138
	.byte	11
	.word	34779
	.byte	9
	.byte	'Os_Hal_MpSystemConfigType_Tag',0,37,83,8,4,10
	.byte	'SysMpuId',0
	.word	138
	.byte	4,2,35,0,0,12
	.word	34789
	.byte	11
	.word	34843
	.byte	9
	.byte	'Os_MpSystemConfigType_Tag',0,36,114,8,4,10
	.byte	'HwConfig',0
	.word	34848
	.byte	4,2,35,0,0,12
	.word	34853
	.byte	11
	.word	34903
	.byte	9
	.byte	'Os_SystemConfigType_Tag',0,18,238,3,8,40,10
	.byte	'VersionInfo',0
	.word	12233
	.byte	8,2,35,0,10
	.byte	'NumberOfAsrCores',0
	.word	20075
	.byte	1,2,35,8,10
	.byte	'SpinlockRefs',0
	.word	34774
	.byte	4,2,35,12,10
	.byte	'SpinlockCount',0
	.word	5373
	.byte	2,2,35,16,10
	.byte	'HwConfig',0
	.word	34784
	.byte	4,2,35,20,10
	.byte	'MemoryProtection',0
	.word	34908
	.byte	4,2,35,24,10
	.byte	'InterruptSourceRefs',0
	.word	6800
	.byte	4,2,35,28,10
	.byte	'InterruptSourceCount',0
	.word	5373
	.byte	2,2,35,32,10
	.byte	'Core2Thread',0
	.word	29948
	.byte	4,2,35,36,0,12
	.word	34913
	.byte	11
	.word	35160
	.byte	3
	.byte	'Os_SystemGet',0,3,69,160,6,1
	.word	35165
	.byte	1,1,4,0,12
	.word	5758
	.byte	11
	.word	35197
	.byte	3
	.byte	'Os_SystemGetCore2Thread',0,3,69,173,6,1
	.word	29948
	.byte	1,1,5
	.byte	'System',0,69,173,6,1
	.word	35165
	.byte	4,0,6
	.byte	'Os_Hal_ProgramDataRegions',0,3,70,174,2,1,1,1,5
	.byte	'StartSlot',0,70,174,2,1
	.word	402
	.byte	5
	.byte	'Count',0,70,174,2,1
	.word	402
	.byte	5
	.byte	'RegionsConfig',0,70,174,2,1
	.word	18226
	.byte	4,0,6
	.byte	'Os_Hal_ProgramCodeRegions',0,3,70,202,2,1,1,1,5
	.byte	'StartSlot',0,70,202,2,1
	.word	402
	.byte	5
	.byte	'Count',0,70,202,2,1
	.word	402
	.byte	5
	.byte	'RegionsConfig',0,70,202,2,1
	.word	18226
	.byte	4,0,6
	.byte	'Os_Hal_ContextInit',0,3,71,96,1,1,1,5
	.byte	'Config',0,71,96,1
	.word	4870
	.byte	5
	.byte	'Context',0,71,96,1
	.word	5165
	.byte	14,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReset',0,3,71,147,1,1,1,1,5
	.byte	'Config',0,71,147,1,1
	.word	4870
	.byte	5
	.byte	'Context',0,71,147,1,1
	.word	5165
	.byte	14,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextSetParameter',0,3,71,194,1,1,1,1,5
	.byte	'Context',0,71,194,1,1
	.word	5165
	.byte	5
	.byte	'Parameter',0,71,194,1,1
	.word	11842
	.byte	4,0,9
	.byte	'Os_Hal_ContextStackConfigType_Tag',0,8,189,1,8,8,10
	.byte	'StackRegionStart',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'StackRegionEnd',0
	.word	138
	.byte	4,2,35,4,0,12
	.word	35654
	.byte	11
	.word	35745
	.byte	6
	.byte	'Os_Hal_ContextSetStack',0,3,71,213,1,1,1,1,5
	.byte	'Context',0,71,213,1,1
	.word	5165
	.byte	5
	.byte	'Stack',0,71,213,1,1
	.word	35750
	.byte	4,0,12
	.word	138
	.byte	11
	.word	35820
	.byte	6
	.byte	'Os_Hal_ContextSetInterruptState',0,3,71,250,1,1,1,1,5
	.byte	'Context',0,71,250,1,1
	.word	5165
	.byte	5
	.byte	'InterruptState',0,71,250,1,1
	.word	35825
	.byte	4,0
.L449:
	.byte	6
	.byte	'Os_Hal_ContextSetUserMsrBits',0,3,71,143,2,1,1,1
.L452:
	.byte	5
	.byte	'Context',0,71,143,2,1
	.word	5165
.L454:
	.byte	4,0,12
	.word	4982
	.byte	11
	.word	35969
	.byte	6
	.byte	'Os_Hal_ContextFirstResume',0,3,71,173,2,1,1,1,5
	.byte	'Next',0,71,173,2,1
	.word	35974
	.byte	14,4,4,4,0,0,6
	.byte	'Os_Hal_ContextResetAndResume',0,3,71,220,2,1,1,1,5
	.byte	'CurrentConfig',0,71,220,2,1
	.word	4870
	.byte	5
	.byte	'Current',0,71,220,2,1
	.word	5165
	.byte	5
	.byte	'Next',0,71,220,2,1
	.word	35974
	.byte	14,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextAbort',0,3,71,145,3,1,1,1,5
	.byte	'Config',0,71,145,3,1
	.word	4870
	.byte	5
	.byte	'Context',0,71,145,3,1
	.word	5165
	.byte	14,4,4,4,4,4,0,0,6
	.byte	'Os_Hal_ContextReturn',0,3,71,204,3,1,1,1,5
	.byte	'Current',0,71,204,3,1
	.word	35974
	.byte	5
	.byte	'Next',0,71,204,3,1
	.word	35974
	.byte	14,4,4,4,0,0,6
	.byte	'Os_Hal_ContextIntCleanupCSAs',0,3,71,133,4,1,1,1,5
	.byte	'Context',0,71,133,4,1
	.word	35974
	.byte	5
	.byte	'PreviousGlobalIntState',0,71,133,4,1
	.word	30887
	.byte	14,4,0,0,6
	.byte	'Os_Hal_ContextIntPrepareCSAContent',0,3,71,178,4,1,1,1,5
	.byte	'CurrentConfig',0,71,178,4,1
	.word	4870
	.byte	5
	.byte	'Context',0,71,178,4,1
	.word	5165
	.byte	14,4,0,0,6
	.byte	'Os_Hal_ContextIntInitialize',0,3,71,235,4,1,1,1,5
	.byte	'CurrentConfig',0,71,235,4,1
	.word	4870
	.byte	5
	.byte	'Context',0,71,235,4,1
	.word	5165
	.byte	5
	.byte	'PreviousGlobalIntState',0,71,235,4,1
	.word	30887
	.byte	14,4,4,0,0,6
	.byte	'Os_Hal_ContextIntInitializeReserved',0,3,71,148,5,1,1,1,5
	.byte	'CurrentConfig',0,71,148,5,1
	.word	4870
	.byte	5
	.byte	'Context',0,71,148,5,1
	.word	5165
	.byte	5
	.byte	'PreviousGlobalIntState',0,71,148,5,1
	.word	30887
	.byte	14,4,4,0,0,6
	.byte	'Os_Hal_ContextIntRestore',0,3,71,243,5,1,1,1,5
	.byte	'Context',0,71,243,5,1
	.word	35974
	.byte	4,0,13
	.byte	'Os_MpAccessRightsRefType',0,36,146,1,59
	.word	27097
	.byte	11
	.word	36732
	.byte	6
	.byte	'Os_MpThreadInit',0,3,72,130,1,1,1,1,5
	.byte	'Config',0,72,130,1,1
	.word	27097
	.byte	5
	.byte	'Settings',0,72,130,1,1
	.word	36766
	.byte	4,0,12
	.word	27006
	.byte	11
	.word	36831
	.byte	6
	.byte	'Os_MpSwitch',0,3,72,193,1,1,1,1,5
	.byte	'Current',0,72,193,1,1
	.word	27097
	.byte	5
	.byte	'Next',0,72,193,1,1
	.word	27097
	.byte	4,0,6
	.byte	'Os_MpSwitchTo',0,3,72,230,1,1,1,1,5
	.byte	'AccessRights',0,72,230,1,1
	.word	27097
	.byte	4,0,6
	.byte	'Os_TraceThreadInit',0,3,73,139,6,1,1,1,5
	.byte	'Thread',0,73,139,6,1
	.word	7329
	.byte	4,0,6
	.byte	'Os_TraceThreadInitAndStart',0,3,73,178,6,1,1,1,5
	.byte	'Task',0,73,178,6,1
	.word	7329
	.byte	14,4,0,0,6
	.byte	'Os_TraceThreadSwitch',0,3,73,229,6,1,1,1,5
	.byte	'CurrentTaskState',0,73,229,6,1
	.word	12525
	.byte	5
	.byte	'Current',0,73,229,6,1
	.word	7329
	.byte	5
	.byte	'Next',0,73,229,6,1
	.word	7329
	.byte	14,4,4,0,0,6
	.byte	'Os_TraceThreadResetAndResume',0,3,73,170,7,1,1,1,5
	.byte	'Current',0,73,170,7,1
	.word	7329
	.byte	5
	.byte	'Next',0,73,170,7,1
	.word	7329
	.byte	14,4,4,0,0,6
	.byte	'Os_TraceThreadCleanupAndResume',0,3,73,228,7,1,1,1,5
	.byte	'Current',0,73,228,7,1
	.word	7329
	.byte	5
	.byte	'Next',0,73,228,7,1
	.word	7329
	.byte	14,4,4,0,0,6
	.byte	'Os_TraceResourceTaken',0,3,73,238,10,1,1,1,5
	.byte	'ResId',0,73,238,10,1
	.word	11879
	.byte	14,4,0,0,6
	.byte	'Os_TraceResourceReleased',0,3,73,144,11,1,1,1,5
	.byte	'ResId',0,73,144,11,1
	.word	11879
	.byte	14,4,0,0,6
	.byte	'Os_TraceSpinlockRequested',0,3,73,183,11,1,1,1,5
	.byte	'Spinlock',0,73,183,11,1
	.word	5753
	.byte	14,4,0,0,6
	.byte	'Os_TraceSpinlockTaken',0,3,73,239,11,1,1,1,5
	.byte	'Spinlock',0,73,239,11,1
	.word	5753
	.byte	14,4,0,0,6
	.byte	'Os_TraceSpinlockReleased',0,3,73,167,12,1,1,1,5
	.byte	'Spinlock',0,73,167,12,1
	.word	5753
	.byte	14,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalDisabled',0,3,73,221,12,1,1,1,14,4,0,0,6
	.byte	'Os_TraceInterruptsLevelDisabled',0,3,73,128,13,1,1,1,14,4,0,0,6
	.byte	'Os_TraceInterruptsGlobalEnabled',0,3,73,163,13,1,1,1,14,4,0,0,6
	.byte	'Os_TraceInterruptsLevelEnabled',0,3,73,198,13,1,1,1,14,4,0,0
.L310:
	.byte	3
	.byte	'Os_ThreadGetLocks',0,3,74,103,1
	.word	3299
	.byte	1,1
.L312:
	.byte	5
	.byte	'Thread',0,74,103,1
	.word	29813
.L314:
	.byte	4,0,3
	.byte	'Os_ThreadGetSpinlocks',0,3,74,117,1
	.word	33226
	.byte	1,1,5
	.byte	'Thread',0,74,117,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadGetTrace',0,3,74,159,1,1
	.word	7329
	.byte	1,1,5
	.byte	'Thread',0,74,159,1,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadGetTpConfig',0,3,74,173,1,1
	.word	28732
	.byte	1,1,5
	.byte	'Thread',0,74,173,1,1
	.word	29813
	.byte	4,0
.L191:
	.byte	3
	.byte	'Os_ThreadGetInterruptApiState',0,3,74,213,1,1
	.word	28591
	.byte	1,1
.L193:
	.byte	5
	.byte	'Thread',0,74,213,1,1
	.word	29813
.L195:
	.byte	4,0,3
	.byte	'Os_ThreadGetCore',0,3,74,227,1,1
	.word	24653
	.byte	1,1,5
	.byte	'Thread',0,74,227,1,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentType',0,3,74,241,1,1
	.word	5373
	.byte	1,1,5
	.byte	'Thread',0,74,241,1,1
	.word	29813
	.byte	4,0
.L129:
	.byte	3
	.byte	'Os_ThreadIsTask',0,3,74,158,2,1
	.word	239
	.byte	1,1
.L131:
	.byte	5
	.byte	'Thread',0,74,158,2,1
	.word	29813
.L133:
	.byte	4,0,3
	.byte	'Os_ThreadIsIsr',0,3,74,185,2,1
	.word	239
	.byte	1,1,5
	.byte	'Thread',0,74,185,2,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadIsAnyInitialContext',0,3,74,198,2,1
	.word	239
	.byte	1,1,5
	.byte	'Thread',0,74,198,2,1
	.word	29813
	.byte	5
	.byte	'Context',0,74,198,2,1
	.word	5373
	.byte	4,0,3
	.byte	'Os_ThreadIsHook',0,3,74,225,2,1
	.word	239
	.byte	1,1,5
	.byte	'Thread',0,74,225,2,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadCheckCallContext',0,3,74,238,2,1
	.word	239
	.byte	1,1,5
	.byte	'Thread',0,74,238,2,1
	.word	29813
	.byte	5
	.byte	'PermittedCallContext',0,74,238,2,1
	.word	5373
	.byte	14,4,4,0,0,3
	.byte	'Os_ThreadGetOwnerApplication',0,3,74,138,3,1
	.word	27953
	.byte	1,1,5
	.byte	'Thread',0,74,138,3,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadGetCurrentApplication',0,3,74,152,3,1
	.word	27953
	.byte	1,1,5
	.byte	'Thread',0,74,152,3,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_ThreadHasResourcesLocked',0,3,74,185,3,1
	.word	239
	.byte	1,1,5
	.byte	'Thread',0,74,185,3,1
	.word	29813
	.byte	14,4,4,4,0,0,3
	.byte	'Os_ThreadHasSpinlockLocked',0,3,74,223,3,1
	.word	239
	.byte	1,1,5
	.byte	'Thread',0,74,223,3,1
	.word	29813
	.byte	14,4,4,4,0,0
.L185:
	.byte	3
	.byte	'Os_ThreadCheckAreInterruptsEnabled',0,3,74,154,4,1
	.word	239
	.byte	1,1
.L187:
	.byte	5
	.byte	'Thread',0,74,154,4,1
	.word	29813
.L189:
	.byte	14,4,4,0,0,6
	.byte	'Os_ThreadSpinlockForceRelease',0,3,74,167,4,1,1,1,5
	.byte	'Thread',0,74,167,4,1
	.word	29813
	.byte	4,0,6
	.byte	'Os_ThreadResourceForceRelease',0,3,74,180,4,1,1,1,5
	.byte	'Thread',0,74,180,4,1
	.word	29813
	.byte	4,0,6
	.byte	'Os_ThreadLocksForceRelease',0,3,74,199,4,1,1,1,5
	.byte	'Thread',0,74,199,4,1
	.word	29813
	.byte	14,4,4,4,0,0,6
	.byte	'Os_ThreadResetAndResume',0,3,74,223,5,1,1,1,5
	.byte	'Next',0,74,223,5,1
	.word	29813
	.byte	5
	.byte	'CallPreThreadHook',0,74,223,5,1
	.word	402
	.byte	14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadStartFirst',0,3,74,172,6,1,1,1,5
	.byte	'Next',0,74,172,6,1
	.word	29813
	.byte	5
	.byte	'CallPreThreadHook',0,74,172,6,1
	.word	402
	.byte	14,4,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_ThreadCleanupAndResume',0,3,74,230,6,1,1,1,5
	.byte	'Next',0,74,230,6,1
	.word	29813
	.byte	5
	.byte	'CallPreThreadHook',0,74,230,6,1
	.word	402
	.byte	14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0
.L398:
	.byte	6
	.byte	'Os_ThreadSwitch',0,3,74,133,8,1,1,1
.L400:
	.byte	5
	.byte	'Current',0,74,133,8,1
	.word	29813
.L402:
	.byte	5
	.byte	'Next',0,74,133,8,1
	.word	29813
.L404:
	.byte	5
	.byte	'CallPreThreadHook',0,74,133,8,1
	.word	402
.L406:
	.byte	14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_ThreadGetAccessRights',0,3,74,137,9,1
	.word	29398
	.byte	1,1,5
	.byte	'Thread',0,74,137,9,1
	.word	29813
	.byte	4,0,6
	.byte	'Os_ThreadSetInterruptState',0,3,74,180,9,1,1,1,5
	.byte	'Thread',0,74,180,9,1
	.word	29813
	.byte	5
	.byte	'InterruptState',0,74,180,9,1
	.word	35825
	.byte	14,4,0,0
.L436:
	.byte	6
	.byte	'Os_ThreadCallPreThreadHook',0,3,74,199,9,1,1,1
.L437:
	.byte	5
	.byte	'Thread',0,74,199,9,1
	.word	29813
.L439:
	.byte	5
	.byte	'CallPreThreadHook',0,74,199,9,1
	.word	402
.L441:
	.byte	4,0,6
	.byte	'Os_ThreadInitFpuContext',0,3,74,237,10,1,1,1,5
	.byte	'Thread',0,74,237,10,1
	.word	29813
	.byte	14,4,0,0,6
	.byte	'Os_ThreadInitFpu',0,3,74,136,11,1,1,1,5
	.byte	'Thread',0,74,136,11,1
	.word	29813
	.byte	14,4,0,0,6
	.byte	'Os_ThreadStoreFpuContext',0,3,74,163,11,1,1,1,5
	.byte	'Thread',0,74,163,11,1
	.word	29813
	.byte	4,0,6
	.byte	'Os_ThreadRestoreFpuContext',0,3,74,185,11,1,1,1,5
	.byte	'Thread',0,74,185,11,1
	.word	29813
	.byte	4,0,3
	.byte	'Os_IsrThread2Isr',0,3,75,90,1
	.word	23911
	.byte	1,1,5
	.byte	'Thread',0,75,90,1
	.word	29813
	.byte	14,4,4,0,0
.L237:
	.byte	15,23,88,9,4,10
	.byte	'State',0
	.word	138
	.byte	4,2,35,0,0,11
	.word	39690
.L239:
	.byte	6
	.byte	'Os_IsrHalIntLevel2CoreIntLevel',0,3,75,131,1,1,1,1
.L241:
	.byte	5
	.byte	'Level',0,75,131,1,1
	.word	39711
.L243:
	.byte	5
	.byte	'HalLevel',0,75,131,1,1
	.word	30996
.L245:
	.byte	4,0,6
	.byte	'Os_IsrDisableSource',0,3,75,231,1,1,1,1,5
	.byte	'Isr',0,75,231,1,1
	.word	6749
	.byte	14,4,0,0,12
	.word	39690
	.byte	11
	.word	39835
	.byte	3
	.byte	'Os_IsrLevelIsLe',0,3,75,145,1,1
	.word	239
	.byte	1,1,5
	.byte	'Isr',0,75,145,1,1
	.word	23911
	.byte	5
	.byte	'Level',0,75,145,1,1
	.word	39840
	.byte	14,4,0,0,3
	.byte	'Os_IsrGetThread',0,3,75,160,1,1
	.word	29813
	.byte	1,1,5
	.byte	'Isr',0,75,160,1,1
	.word	23911
	.byte	4,0,6
	.byte	'Os_IsrInitialEnable',0,3,75,160,2,1,1,1,5
	.byte	'Isr',0,75,160,2,1
	.word	23911
	.byte	5
	.byte	'ClearPending',0,75,160,2,1
	.word	402
	.byte	14,4,4,0,0,6
	.byte	'Os_IsrEnable',0,3,75,192,2,1,1,1,5
	.byte	'Isr',0,75,192,2,1
	.word	23911
	.byte	14,4,0,0,6
	.byte	'Os_IsrClearPending',0,3,75,220,2,1,1,1,5
	.byte	'Isr',0,75,220,2,1
	.word	6749
	.byte	14,4,0,0,18
	.word	5373
	.byte	11
	.word	40098
	.byte	6
	.byte	'Os_XSigChannelIdxIncrement',0,3,76,90,1,1,1,5
	.byte	'Index',0,76,90,1
	.word	40103
	.byte	5
	.byte	'Size',0,76,90,1
	.word	5373
	.byte	14,4,0,0,12
	.word	21695
	.byte	11
	.word	40173
	.byte	3
	.byte	'Os_XSigChannelIsResultAvailable',0,3,76,129,2,1
	.word	239
	.byte	1,1,5
	.byte	'Channel',0,76,129,2,1
	.word	40178
	.byte	4,0,12
	.word	21217
	.byte	11
	.word	40246
	.byte	3
	.byte	'Os_XSigSend',0,3,77,129,1,1
	.word	419
	.byte	1,1,5
	.byte	'RecvCore',0,77,129,1,1
	.word	24653
	.byte	5
	.byte	'SendThread',0,77,129,1,1
	.word	29813
	.byte	5
	.byte	'FunctionIdx',0,77,129,1,1
	.word	20224
	.byte	5
	.byte	'Parameters',0,77,129,1,1
	.word	40251
	.byte	14,4,0,0,3
	.byte	'Os_XSigSend_ActivateTaskAsync',0,3,77,191,1,1
	.word	419
	.byte	1,1,5
	.byte	'RecvCore',0,77,191,1,1
	.word	24653
	.byte	5
	.byte	'SendThread',0,77,191,1,1
	.word	29813
	.byte	5
	.byte	'TaskID',0,77,191,1,1
	.word	12359
	.byte	4,0,3
	.byte	'Os_TaskGetThread',0,3,78,111,1
	.word	29813
	.byte	1,1,5
	.byte	'Task',0,78,111,1
	.word	16602
	.byte	4,0,3
	.byte	'Os_TaskThread2Task',0,3,78,125,1
	.word	16602
	.byte	1,1,5
	.byte	'Thread',0,78,125,1
	.word	29813
	.byte	14,4,4,0,0,18
	.word	11684
	.byte	18
	.word	11684
	.byte	15,79,70,9,16,10
	.byte	'Waiting',0
	.word	40554
	.byte	8,2,35,0,10
	.byte	'Triggered',0
	.word	40559
	.byte	8,2,35,8,0,9
	.byte	'Os_TaskType_Tag',0,32,116,8,52,10
	.byte	'Thread',0
	.word	28440
	.byte	24,2,35,0,10
	.byte	'Events',0
	.word	40564
	.byte	16,2,35,24,10
	.byte	'State',0
	.word	12525
	.byte	1,2,35,40,10
	.byte	'Priority',0
	.word	5373
	.byte	2,2,35,42,10
	.byte	'ActivationsAllowed',0
	.word	402
	.byte	1,2,35,44,10
	.byte	'NumRemainScheduleEventsRoundRobin',0
	.word	138
	.byte	4,2,35,46,0,11
	.word	40606
	.byte	3
	.byte	'Os_TaskGetDyn',0,3,78,139,1,1
	.word	40764
	.byte	1,1,5
	.byte	'Task',0,78,139,1,1
	.word	16602
	.byte	14,4,0,0,6
	.byte	'Os_TaskSetState',0,3,78,152,1,1,1,1,5
	.byte	'Task',0,78,152,1,1
	.word	16602
	.byte	5
	.byte	'State',0,78,152,1,1
	.word	12525
	.byte	14,4,0,0
.L330:
	.byte	3
	.byte	'Os_TaskGetPriority',0,3,78,166,1,1
	.word	5373
	.byte	1,1
.L332:
	.byte	5
	.byte	'Task',0,78,166,1,1
	.word	16602
.L334:
	.byte	14,4,0,0,3
	.byte	'Os_TaskGetHomePriority',0,3,78,206,1,1
	.word	5373
	.byte	1,1,5
	.byte	'Task',0,78,206,1,1
	.word	16602
	.byte	4,0,3
	.byte	'Os_TaskGetId',0,3,78,219,1,1
	.word	12359
	.byte	1,1,5
	.byte	'Task',0,78,219,1,1
	.word	16602
	.byte	4,0,3
	.byte	'Os_TaskGetScheduler',0,3,78,128,2,1
	.word	16975
	.byte	1,1,5
	.byte	'Task',0,78,128,2,1
	.word	16602
	.byte	14,4,4,4,0,0,3
	.byte	'Os_TaskGetCore',0,3,78,154,2,1
	.word	24653
	.byte	1,1,5
	.byte	'Task',0,78,154,2,1
	.word	16602
	.byte	14,4,4,0,0,3
	.byte	'Os_TaskIsCoreLocal',0,3,78,167,2,1
	.word	138
	.byte	1,1,5
	.byte	'Task',0,78,167,2,1
	.word	16602
	.byte	14,4,4,0,0
.L389:
	.byte	6
	.byte	'Os_TaskSwitch',0,3,78,252,2,1,1,1
.L391:
	.byte	5
	.byte	'Scheduler',0,78,252,2,1
	.word	16975
.L393:
	.byte	5
	.byte	'CallerThread',0,78,252,2,1
	.word	29813
.L395:
	.byte	14,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TaskResume',0,3,78,161,3,1,1,1,5
	.byte	'Scheduler',0,78,161,3,1
	.word	16975
	.byte	14,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TaskCallPostTaskHook',0,3,78,232,5,1,1,1,14,4,0,0,3
	.byte	'Os_CounterGetCore',0,3,80,182,1,1
	.word	24653
	.byte	1,1,5
	.byte	'Counter',0,80,182,1,1
	.word	18843
	.byte	4,0,3
	.byte	'Os_CounterIsFutureValue',0,3,80,200,1,1
	.word	239
	.byte	1,1,5
	.byte	'Counter',0,80,200,1,1
	.word	18843
	.byte	5
	.byte	'Value',0,80,200,1,1
	.word	138
	.byte	5
	.byte	'ReferenceValue',0,80,200,1,1
	.word	138
	.byte	14,4,0,0,3
	.byte	'Os_CounterIsFutureValueInternal',0,3,80,225,1,1
	.word	239
	.byte	1,1,5
	.byte	'MaxCountingValue',0,80,225,1,1
	.word	138
	.byte	5
	.byte	'MaxDifferentialValue',0,80,225,1,1
	.word	138
	.byte	5
	.byte	'Value',0,80,225,1,1
	.word	138
	.byte	5
	.byte	'ReferenceValue',0,80,225,1,1
	.word	138
	.byte	14,4,4,0,0,3
	.byte	'Os_CounterCheckValueLeMaxAllowed',0,3,80,145,2,1
	.word	239
	.byte	1,1,5
	.byte	'Counter',0,80,145,2,1
	.word	18843
	.byte	5
	.byte	'Value',0,80,145,2,1
	.word	138
	.byte	14,4,0,0,3
	.byte	'Os_CounterCheckValueLeReducedMaxAllowed',0,3,80,159,2,1
	.word	239
	.byte	1,1,5
	.byte	'Counter',0,80,159,2,1
	.word	18843
	.byte	5
	.byte	'Reduce',0,80,159,2,1
	.word	138
	.byte	5
	.byte	'Value',0,80,159,2,1
	.word	138
	.byte	14,4,4,0,0,3
	.byte	'Os_CounterCheckValueGeMinCycleOrZero',0,3,80,175,2,1
	.word	239
	.byte	1,1,5
	.byte	'Counter',0,80,175,2,1
	.word	18843
	.byte	5
	.byte	'Cycle',0,80,175,2,1
	.word	138
	.byte	14,4,0,0,12
	.word	18615
	.byte	11
	.word	41880
	.byte	3
	.byte	'Os_CounterGetCharacteristics',0,3,80,189,2,1
	.word	41885
	.byte	1,1,5
	.byte	'Counter',0,80,189,2,1
	.word	18843
	.byte	4,0,3
	.byte	'Os_CounterGetMaxAllowedValue',0,3,80,203,2,1
	.word	138
	.byte	1,1,5
	.byte	'Counter',0,80,203,2,1
	.word	18843
	.byte	4,0,3
	.byte	'Os_CounterGetMaxCountingValue',0,3,80,217,2,1
	.word	138
	.byte	1,1,5
	.byte	'Counter',0,80,217,2,1
	.word	18843
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtInit',0,3,81,93,1,1,1,5
	.byte	'TimerConfig',0,81,93,1
	.word	19809
	.byte	4,0,3
	.byte	'Os_Hal_TimerFrtGetCounterValue',0,3,81,125,1
	.word	138
	.byte	1,1,5
	.byte	'TimerConfig',0,81,125,1
	.word	19809
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtSetCompareValue',0,3,81,139,1,1,1,1,5
	.byte	'TimerConfig',0,81,139,1,1
	.word	19809
	.byte	5
	.byte	'ExpirationTime',0,81,139,1,1
	.word	138
	.byte	4,0,6
	.byte	'Os_Hal_TimerFrtTriggerIrq',0,3,81,172,1,1,1,1,5
	.byte	'TimerConfig',0,81,172,1,1
	.word	19809
	.byte	4,0,9
	.byte	'Os_Hal_TimerPitConfigType_Tag',0,83,105,8,32,10
	.byte	'CounterRegisterAddress',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'CounterConfRegisterAddress',0
	.word	138
	.byte	4,2,35,4,10
	.byte	'CounterConfRegisterValue',0
	.word	138
	.byte	4,2,35,8,10
	.byte	'ReloadRegisterAddress',0
	.word	138
	.byte	4,2,35,12,10
	.byte	'ReloadConfRegisterAddress',0
	.word	138
	.byte	4,2,35,16,10
	.byte	'ReloadConfRegisterValue',0
	.word	138
	.byte	4,2,35,20,10
	.byte	'ReloadValue',0
	.word	5373
	.byte	2,2,35,24,10
	.byte	'InterruptSRCRegisterAddress',0
	.word	138
	.byte	4,2,35,26,0,12
	.word	42327
	.byte	11
	.word	42622
	.byte	6
	.byte	'Os_Hal_TimerPitInit',0,3,82,92,1,1,1,5
	.byte	'TimerConfig',0,82,92,1
	.word	42627
	.byte	4,0,15,39,219,1,9,8,10
	.byte	'Value',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'Compare',0
	.word	138
	.byte	4,2,35,4,0,11
	.word	42681
	.byte	9
	.byte	'Os_TimerSwConfigType_Tag',0,39,232,1,8,52,10
	.byte	'Counter',0
	.word	19228
	.byte	48,2,35,0,10
	.byte	'Dyn',0
	.word	42720
	.byte	4,2,35,48,0,12
	.word	42725
	.byte	11
	.word	42787
	.byte	6
	.byte	'Os_TimerSwInit',0,3,84,84,1,1,1,5
	.byte	'Timer',0,84,84,1
	.word	42792
	.byte	14,4,4,0,0,3
	.byte	'Os_TimerSwGetValue',0,3,84,220,1,1
	.word	138
	.byte	1,1,5
	.byte	'Timer',0,84,220,1,1
	.word	42792
	.byte	4,0,6
	.byte	'Os_TimerSwSetCompareValue',0,3,84,233,1,1,1,1,5
	.byte	'Timer',0,84,233,1,1
	.word	42792
	.byte	5
	.byte	'ExpirationTime',0,84,233,1,1
	.word	138
	.byte	4,0,3
	.byte	'Os_TimerSwUserModulo',0,3,84,252,1,1
	.word	138
	.byte	1,1,5
	.byte	'Timer',0,84,252,1,1
	.word	42792
	.byte	5
	.byte	'Value',0,84,252,1,1
	.word	138
	.byte	14,4,0,0,3
	.byte	'Os_TimerHrtGetValue',0,3,84,211,4,1
	.word	138
	.byte	1,1,5
	.byte	'Timer',0,84,211,4,1
	.word	19900
	.byte	14,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCounter',0,3,84,205,2,1
	.word	18843
	.byte	1,1,5
	.byte	'Timer',0,84,205,2,1
	.word	19900
	.byte	4,0,3
	.byte	'Os_TimerHrtComputeHardwareCompareValue',0,3,84,229,2,1
	.word	138
	.byte	1,1,5
	.byte	'Timer',0,84,229,2,1
	.word	19900
	.byte	5
	.byte	'ExpirationTime',0,84,229,2,1
	.word	138
	.byte	14,14,4,0,0,0,6
	.byte	'Os_TimerHrtSetCompareValue',0,3,84,157,3,1,1,1,5
	.byte	'Timer',0,84,157,3,1
	.word	19900
	.byte	5
	.byte	'ExpirationTime',0,84,157,3,1
	.word	138
	.byte	14,4,4,4,4,4,4,0,0,3
	.byte	'Os_TimerHrtGetCompareValue',0,3,84,247,3,1
	.word	138
	.byte	1,1,5
	.byte	'Timer',0,84,247,3,1
	.word	19900
	.byte	4,0,3
	.byte	'Os_TimerSwAbsCounter2AbsTimerValue',0,3,84,137,5,1
	.word	138
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,84,137,5,1
	.word	138
	.byte	5
	.byte	'Now',0,84,137,5,1
	.word	138
	.byte	5
	.byte	'CounterValue',0,84,137,5,1
	.word	138
	.byte	4,0,3
	.byte	'Os_TimerAdd',0,3,84,253,5,1
	.word	138
	.byte	1,1,5
	.byte	'MaxAllowedValue',0,84,253,5,1
	.word	138
	.byte	5
	.byte	'MaxCountingValue',0,84,253,5,1
	.word	138
	.byte	5
	.byte	'Value',0,84,253,5,1
	.word	138
	.byte	5
	.byte	'Add',0,84,253,5,1
	.word	138
	.byte	14,4,4,4,4,0,0,3
	.byte	'Os_TimerSub',0,3,84,173,6,1
	.word	138
	.byte	1,1,5
	.byte	'MaxCountingValue',0,84,173,6,1
	.word	138
	.byte	5
	.byte	'Value',0,84,173,6,1
	.word	138
	.byte	5
	.byte	'Sub',0,84,173,6,1
	.word	138
	.byte	14,4,4,4,0,0,6
	.byte	'Os_TimerFrtSetCompareValue',0,3,84,222,6,1,1,1,5
	.byte	'TimerConfig',0,84,222,6,1
	.word	19809
	.byte	5
	.byte	'CompareValue',0,84,222,6,1
	.word	138
	.byte	14,4,4,4,0,0,3
	.byte	'Os_TimerFrtTickType2TickType',0,3,84,134,7,1
	.word	138
	.byte	1,1,5
	.byte	'Value',0,84,134,7,1
	.word	138
	.byte	4,0,3
	.byte	'Os_TimerTickType2FrtTickType',0,3,84,147,7,1
	.word	138
	.byte	1,1,5
	.byte	'Value',0,84,147,7,1
	.word	138
	.byte	4,0,12
	.word	.L530-.L72
	.byte	11
	.word	43871
	.byte	9
	.byte	'Os_TpBudgetType_Tag',0,38,157,2,8,8,10
	.byte	'Remaining',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'Previous',0
	.word	43876
	.byte	4,2,35,4,0,11
	.word	43881
	.byte	7,86,94,9,1,8
	.byte	'OS_TPMONITORINGTYPE_NONE',0,0,8
	.byte	'OS_TPMONITORINGTYPE_LOCK',0,1,8
	.byte	'OS_TPMONITORINGTYPE_EXECUTION',0,2,8
	.byte	'OS_TPMONITORINGTYPE_ARRIVAL',0,3,8
	.byte	'OS_TPMONITORINGTYPE_COUNT',0,4,0
.L530:
	.byte	9
	.byte	'Os_TpBudgetConfigType_Tag',0,38,168,2,8,12,10
	.byte	'Dyn',0
	.word	43945
	.byte	4,2,35,0,10
	.byte	'BudgetKind',0
	.word	43950
	.byte	1,2,35,4,10
	.byte	'Budget',0
	.word	138
	.byte	4,2,35,6,0,13
	.byte	'Os_TpBudgetConfigRefType',0,86,82,59
	.word	43876
	.byte	12
	.word	44182
	.byte	11
	.word	44215
	.byte	9
	.byte	'Os_TpOwnerThreadType_Tag',0,38,182,2,8,20,10
	.byte	'EarliestArrival',0
	.word	11684
	.byte	8,2,35,0,10
	.byte	'DelayLevel',0
	.word	402
	.byte	1,2,35,8,10
	.byte	'MonitoredBudgets',0
	.word	43876
	.byte	4,2,35,12,10
	.byte	'Violation',0
	.word	43950
	.byte	1,2,35,16,0,11
	.word	44225
	.byte	9
	.byte	'Os_TpOwnerThreadConfigType_Tag',0,38,213,2,8,56,10
	.byte	'Base',0
	.word	28674
	.byte	1,2,35,0,10
	.byte	'TimeFrame',0
	.word	11684
	.byte	8,2,35,4,10
	.byte	'ExecutionBudget',0
	.word	44100
	.byte	12,2,35,12,10
	.byte	'AllInterruptLockBudget',0
	.word	44100
	.byte	12,2,35,24,10
	.byte	'OsInterruptLockBudget',0
	.word	44100
	.byte	12,2,35,36,10
	.byte	'ResourceLockBudgets',0
	.word	44220
	.byte	4,2,35,48,10
	.byte	'Dyn',0
	.word	44347
	.byte	4,2,35,52,0,12
	.word	44352
	.byte	11
	.word	44553
	.byte	3
	.byte	'Os_TpThread2TpOwnerThread',0,3,85,94,1
	.word	44558
	.byte	1,1,5
	.byte	'TpThread',0,85,94,1
	.word	28732
	.byte	14,4,0,0,12
	.word	44100
	.byte	11
	.word	44621
	.byte	3
	.byte	'Os_TpGetCurrentTpOwnerThread',0,3,85,108,1
	.word	44558
	.byte	1,1,5
	.byte	'Config',0,85,108,1
	.word	20060
	.byte	14,4,4,0,0,6
	.byte	'Os_TpThreadInit',0,3,85,127,1,1,1,5
	.byte	'Config',0,85,127,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,127,1
	.word	28732
	.byte	14,4,4,0,0,6
	.byte	'Os_TpThreadKill',0,3,85,157,1,1,1,1,5
	.byte	'Thread',0,85,157,1,1
	.word	28732
	.byte	14,4,4,0,0,6
	.byte	'Os_TpResume',0,3,85,184,1,1,1,1,5
	.byte	'Config',0,85,184,1,1
	.word	20060
	.byte	5
	.byte	'Now',0,85,184,1,1
	.word	138
	.byte	5
	.byte	'RemainingTime',0,85,184,1,1
	.word	138
	.byte	14,4,4,0,0,6
	.byte	'Os_TpSuspend',0,3,85,209,1,1,1,1,5
	.byte	'Config',0,85,209,1,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,209,1,1
	.word	44558
	.byte	5
	.byte	'Now',0,85,209,1,1
	.word	138
	.byte	5
	.byte	'Deadline',0,85,209,1,1
	.word	138
	.byte	14,4,4,4,0,0,3
	.byte	'Os_TpSub',0,3,85,239,1,1
	.word	138
	.byte	1,1,5
	.byte	'Config',0,85,239,1,1
	.word	20060
	.byte	5
	.byte	'Value',0,85,239,1,1
	.word	138
	.byte	5
	.byte	'Sub',0,85,239,1,1
	.word	138
	.byte	14,4,4,4,0,0,3
	.byte	'Os_TpAdd',0,3,85,139,2,1
	.word	138
	.byte	1,1,5
	.byte	'Config',0,85,139,2,1
	.word	20060
	.byte	5
	.byte	'Value',0,85,139,2,1
	.word	138
	.byte	5
	.byte	'Add',0,85,139,2,1
	.word	138
	.byte	14,4,4,4,4,0,0,3
	.byte	'Os_TpGetArrivalTimeStamp',0,3,85,171,2,1
	.word	11684
	.byte	1,1,5
	.byte	'Config',0,85,171,2,1
	.word	20060
	.byte	14,4,0,0,6
	.byte	'Os_TpSwitch',0,3,85,207,2,1,1,1,5
	.byte	'Config',0,85,207,2,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,207,2,1
	.word	28732
	.byte	5
	.byte	'Next',0,85,207,2,1
	.word	28732
	.byte	5
	.byte	'NextThread',0,85,207,2,1
	.word	29813
	.byte	14,4,4,4,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAndResume',0,3,85,157,3,1,1,1,5
	.byte	'Config',0,85,157,3,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,157,3,1
	.word	28732
	.byte	5
	.byte	'Next',0,85,157,3,1
	.word	28732
	.byte	5
	.byte	'NextThread',0,85,157,3,1
	.word	29813
	.byte	14,14,4,0,4,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpResetAfterWait',0,3,85,225,3,1,1,1,5
	.byte	'Config',0,85,225,3,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,225,3,1
	.word	28732
	.byte	14,14,4,0,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpCheckInterArrival',0,3,85,153,4,1
	.word	239
	.byte	1,1,5
	.byte	'Config',0,85,153,4,1
	.word	20060
	.byte	5
	.byte	'TpThread',0,85,153,4,1
	.word	28732
	.byte	14,14,4,0,4,4,4,4,4,0,0,6
	.byte	'Os_TpStartResource',0,3,85,150,5,1,1,1,5
	.byte	'Config',0,85,150,5,1
	.word	20060
	.byte	5
	.byte	'Resource',0,85,150,5,1
	.word	11879
	.byte	14,4,4,4,4,4,0,0,3
	.byte	'Os_TpGetResourceBudget',0,3,85,128,5,1
	.word	43876
	.byte	1,1,5
	.byte	'Current',0,85,128,5,1
	.word	44558
	.byte	5
	.byte	'Resource',0,85,128,5,1
	.word	11879
	.byte	14,4,4,0,0,6
	.byte	'Os_TpStopResource',0,3,85,185,5,1,1,1,5
	.byte	'Config',0,85,185,5,1
	.word	20060
	.byte	5
	.byte	'TpThread',0,85,185,5,1
	.word	28732
	.byte	5
	.byte	'Resource',0,85,185,5,1
	.word	11879
	.byte	14,4,4,4,4,4,0,0,6
	.byte	'Os_TpStartAllInterrupt',0,3,85,176,6,1,1,1,5
	.byte	'Config',0,85,176,6,1
	.word	20060
	.byte	14,4,4,4,4,0,0,6
	.byte	'Os_TpStopAllInterrupt',0,3,85,207,6,1,1,1,5
	.byte	'Config',0,85,207,6,1
	.word	20060
	.byte	14,4,4,4,4,0,0,6
	.byte	'Os_TpStartOsInterrupt',0,3,85,239,6,1,1,1,5
	.byte	'Config',0,85,239,6,1
	.word	20060
	.byte	14,4,4,4,4,0,0,6
	.byte	'Os_TpStopOsInterrupt',0,3,85,142,7,1,1,1,5
	.byte	'Config',0,85,142,7,1
	.word	20060
	.byte	14,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStart',0,3,85,182,7,1,1,1,5
	.byte	'Config',0,85,182,7,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,182,7,1
	.word	44558
	.byte	5
	.byte	'Budget',0,85,182,7,1
	.word	43876
	.byte	14,14,4,0,4,4,4,4,4,4,4,0,0,6
	.byte	'Os_TpBudgetStop',0,3,85,131,8,1,1,1,5
	.byte	'Config',0,85,131,8,1
	.word	20060
	.byte	5
	.byte	'Current',0,85,131,8,1
	.word	44558
	.byte	5
	.byte	'Budget',0,85,131,8,1
	.word	43876
	.byte	14,14,4,0,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_TpIsEnabledByCoreTpConfig',0,3,85,213,8,1
	.word	239
	.byte	1,1,5
	.byte	'Config',0,85,213,8,1
	.word	20060
	.byte	4,0,3
	.byte	'Os_TpIsEnabledByThreadTpConfig',0,3,85,244,8,1
	.word	239
	.byte	1,1,5
	.byte	'Config',0,85,244,8,1
	.word	28732
	.byte	4,0,3
	.byte	'Os_AppCheckAccess',0,3,87,218,1,1
	.word	239
	.byte	1,1,5
	.byte	'App',0,87,218,1,1
	.word	27953
	.byte	5
	.byte	'AccessMask',0,87,218,1,1
	.word	138
	.byte	4,0,3
	.byte	'Os_AppCheckIsAccessible',0,3,87,232,1,1
	.word	239
	.byte	1,1,5
	.byte	'App',0,87,232,1,1
	.word	27953
	.byte	4,0,3
	.byte	'Os_AppGetCore',0,3,87,144,2,1
	.word	24653
	.byte	1,1,5
	.byte	'App',0,87,144,2,1
	.word	27953
	.byte	4,0,3
	.byte	'Os_JobGetCore',0,3,88,190,2,1
	.word	24653
	.byte	1,1,5
	.byte	'Job',0,88,190,2,1
	.word	18979
	.byte	14,4,0,0,13
	.byte	'Os_ServiceCallListType',0,90,66,59
	.word	28435
	.byte	11
	.word	46463
	.byte	6
	.byte	'Os_ServiceCallsInit',0,3,89,134,1,1,1,1,5
	.byte	'ServiceCalls',0,89,134,1,1
	.word	46494
	.byte	4,0,11
	.word	28238
	.byte	11
	.word	402
	.byte	6
	.byte	'Os_FifoIdxIncrement',0,3,91,88,1,1,1,5
	.byte	'Index',0,91,88,1
	.word	46556
	.byte	5
	.byte	'Size',0,91,88,1
	.word	402
	.byte	14,4,0,0,3
	.byte	'Os_FifoIsFull',0,3,91,118,1
	.word	239
	.byte	1,1,5
	.byte	'WriteIdx',0,91,118,1
	.word	402
	.byte	5
	.byte	'ReadIdx',0,91,118,1
	.word	402
	.byte	5
	.byte	'Size',0,91,118,1
	.word	402
	.byte	14,4,0,0,3
	.byte	'Os_FifoIsEmpty',0,3,91,142,1,1
	.word	239
	.byte	1,1,5
	.byte	'WriteIdx',0,91,142,1,1
	.word	402
	.byte	5
	.byte	'ReadIdx',0,91,142,1,1
	.word	402
	.byte	4,0,12
	.word	402
	.byte	11
	.word	46758
	.byte	6
	.byte	'Os_FifoEmptyQueue',0,3,91,158,1,1,1,1,5
	.byte	'WriteIdx',0,91,158,1,1
	.word	46763
	.byte	5
	.byte	'ReadIdx',0,91,158,1,1
	.word	46556
	.byte	4,0,3
	.byte	'Os_FifoIndicesInRange',0,3,91,178,1,1
	.word	239
	.byte	1,1,5
	.byte	'WriteIdx',0,91,178,1,1
	.word	402
	.byte	5
	.byte	'ReadIdx',0,91,178,1,1
	.word	402
	.byte	5
	.byte	'Size',0,91,178,1,1
	.word	402
	.byte	4,0,15,93,80,9,1,10
	.byte	'WriteIdx',0
	.word	402
	.byte	1,2,35,0,0,11
	.word	46916
	.byte	15,93,87,9,1,10
	.byte	'ReadIdx',0
	.word	402
	.byte	1,2,35,0,0,12
	.word	46945
	.byte	11
	.word	46968
	.byte	15,93,73,9,1,10
	.byte	'Value',0
	.word	402
	.byte	1,2,35,0,0,11
	.word	46978
	.byte	9
	.byte	'Os_Fifo08WriteConfigType_Tag',0,93,94,8,16,10
	.byte	'Dyn',0
	.word	46940
	.byte	4,2,35,0,10
	.byte	'Read',0
	.word	46973
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	46999
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,0,12
	.word	47004
	.byte	11
	.word	47094
	.byte	3
	.byte	'Os_Fifo08IsFull',0,3,92,169,1,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,92,169,1,1
	.word	47099
	.byte	14,4,0,0,11
	.word	46945
	.byte	12
	.word	46916
	.byte	11
	.word	47155
	.byte	12
	.word	46978
	.byte	11
	.word	47165
	.byte	9
	.byte	'Os_Fifo08ReadConfigType_Tag',0,93,104,8,16,10
	.byte	'Dyn',0
	.word	47150
	.byte	4,2,35,0,10
	.byte	'Write',0
	.word	47160
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	47170
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,0,12
	.word	47175
	.byte	11
	.word	47265
	.byte	3
	.byte	'Os_Fifo08IsEmpty',0,3,92,132,2,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,92,132,2,1
	.word	47270
	.byte	14,4,0,0,15,95,80,9,1,10
	.byte	'WriteIdx',0
	.word	402
	.byte	1,2,35,0,0,11
	.word	47322
	.byte	15,95,87,9,1,10
	.byte	'ReadIdx',0
	.word	402
	.byte	1,2,35,0,0,12
	.word	47351
	.byte	11
	.word	47374
	.byte	15,95,73,9,2,10
	.byte	'Value',0
	.word	5373
	.byte	2,2,35,0,0,11
	.word	47384
	.byte	9
	.byte	'Os_Fifo16WriteConfigType_Tag',0,95,94,8,16,10
	.byte	'Dyn',0
	.word	47346
	.byte	4,2,35,0,10
	.byte	'Read',0
	.word	47379
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	47405
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,0,12
	.word	47410
	.byte	11
	.word	47500
	.byte	3
	.byte	'Os_Fifo16IsFull',0,3,94,169,1,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,94,169,1,1
	.word	47505
	.byte	14,4,0,0,11
	.word	47351
	.byte	12
	.word	47322
	.byte	11
	.word	47561
	.byte	12
	.word	47384
	.byte	11
	.word	47571
	.byte	9
	.byte	'Os_Fifo16ReadConfigType_Tag',0,95,104,8,16,10
	.byte	'Dyn',0
	.word	47556
	.byte	4,2,35,0,10
	.byte	'Write',0
	.word	47566
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	47576
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,0,12
	.word	47581
	.byte	11
	.word	47671
	.byte	3
	.byte	'Os_Fifo16IsEmpty',0,3,94,133,2,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,94,133,2,1
	.word	47676
	.byte	14,4,0,0,15,97,80,9,1,10
	.byte	'WriteIdx',0
	.word	402
	.byte	1,2,35,0,0,11
	.word	47728
	.byte	15,97,87,9,1,10
	.byte	'ReadIdx',0
	.word	402
	.byte	1,2,35,0,0,12
	.word	47757
	.byte	11
	.word	47780
	.byte	15,97,73,9,4,10
	.byte	'Value',0
	.word	138
	.byte	4,2,35,0,0,11
	.word	47790
	.byte	9
	.byte	'Os_Fifo32WriteConfigType_Tag',0,97,94,8,16,10
	.byte	'Dyn',0
	.word	47752
	.byte	4,2,35,0,10
	.byte	'Read',0
	.word	47785
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	47811
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,0,12
	.word	47816
	.byte	11
	.word	47906
	.byte	3
	.byte	'Os_Fifo32IsFull',0,3,96,169,1,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,96,169,1,1
	.word	47911
	.byte	14,4,0,0,11
	.word	47757
	.byte	12
	.word	47728
	.byte	11
	.word	47967
	.byte	12
	.word	47790
	.byte	11
	.word	47977
	.byte	9
	.byte	'Os_Fifo32ReadConfigType_Tag',0,97,104,8,16,10
	.byte	'Dyn',0
	.word	47962
	.byte	4,2,35,0,10
	.byte	'Write',0
	.word	47972
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	47982
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,0,12
	.word	47987
	.byte	11
	.word	48077
	.byte	3
	.byte	'Os_Fifo32IsEmpty',0,3,96,131,2,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,96,131,2,1
	.word	48082
	.byte	14,4,0,0,15,99,101,9,1,10
	.byte	'WriteIdx',0
	.word	402
	.byte	1,2,35,0,0,11
	.word	48134
	.byte	15,99,108,9,1,10
	.byte	'ReadIdx',0
	.word	402
	.byte	1,2,35,0,0,12
	.word	48163
	.byte	11
	.word	48186
	.byte	23,1,1,24
	.word	12665
	.byte	24
	.word	402
	.byte	24
	.word	11842
	.byte	0,11
	.word	48196
	.byte	13
	.byte	'Os_FifoRefWriteCbk',0,99,92,9
	.word	48215
	.byte	9
	.byte	'Os_FifoRefWriteConfigType_Tag',0,99,115,8,20,10
	.byte	'Dyn',0
	.word	48158
	.byte	4,2,35,0,10
	.byte	'Read',0
	.word	48191
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	12665
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,10
	.byte	'WriteCbk',0
	.word	48220
	.byte	4,2,35,16,0,12
	.word	48247
	.byte	11
	.word	48356
	.byte	3
	.byte	'Os_FifoRefIsFull',0,3,98,167,1,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,98,167,1,1
	.word	48361
	.byte	14,4,0,0,11
	.word	48196
	.byte	11
	.word	48163
	.byte	12
	.word	48134
	.byte	11
	.word	48423
	.byte	23,1,1,24
	.word	11842
	.byte	24
	.word	402
	.byte	24
	.word	12665
	.byte	0,11
	.word	48433
	.byte	13
	.byte	'Os_FifoRefReadCbk',0,99,78,9
	.word	48452
	.byte	9
	.byte	'Os_FifoRefReadConfigType_Tag',0,99,126,8,20,10
	.byte	'Dyn',0
	.word	48418
	.byte	4,2,35,0,10
	.byte	'Write',0
	.word	48428
	.byte	4,2,35,4,10
	.byte	'Data',0
	.word	11842
	.byte	4,2,35,8,10
	.byte	'Size',0
	.word	402
	.byte	1,2,35,12,10
	.byte	'ReadCbk',0
	.word	48457
	.byte	4,2,35,16,0,12
	.word	48483
	.byte	11
	.word	48591
	.byte	3
	.byte	'Os_FifoRefIsEmpty',0,3,98,255,1,1
	.word	239
	.byte	1,1,5
	.byte	'Fifo',0,98,255,1,1
	.word	48596
	.byte	14,4,0,0,11
	.word	48433
	.byte	9
	.byte	'Os_ResourceType_Tag',0,35,159,1,8,8,10
	.byte	'Lock',0
	.word	3044
	.byte	4,2,35,0,10
	.byte	'PreviousPriority',0
	.word	5373
	.byte	2,2,35,4,0,11
	.word	48654
.L162:
	.byte	3
	.byte	'Os_ResourceGetDyn',0,3,100,229,3,1
	.word	48721
	.byte	1,1
.L164:
	.byte	5
	.byte	'Resource',0,100,229,3,1
	.word	18063
.L166:
	.byte	14,4,0,0,15,35,202,1,9,16,10
	.byte	'Resource',0
	.word	48654
	.byte	8,2,35,0,10
	.byte	'PreviousInterruptState',0
	.word	7685
	.byte	8,2,35,8,0,11
	.word	48778
	.byte	9
	.byte	'Os_ResourceInterruptConfigType_Tag',0,35,190,1,8,24,10
	.byte	'Resource',0
	.word	17952
	.byte	20,2,35,0,10
	.byte	'InterruptLevel',0
	.word	30996
	.byte	4,2,35,20,0,12
	.word	48840
	.byte	11
	.word	48924
.L263:
	.byte	3
	.byte	'Os_ResourceInterruptGetDyn',0,3,100,243,3,1
	.word	48835
	.byte	1,1
.L266:
	.byte	5
	.byte	'Resource',0,100,243,3,1
	.word	48929
.L268:
	.byte	14,4,0,0
.L362:
	.byte	3
	.byte	'Os_ResourceIsIntResource',0,3,100,128,4,1
	.word	239
	.byte	1,1
.L364:
	.byte	5
	.byte	'Resource',0,100,128,4,1
	.word	18063
.L366:
	.byte	14,4,0,0
.L211:
	.byte	3
	.byte	'Os_ResourceCheckPrio',0,3,100,141,4,1
	.word	239
	.byte	1,1
.L213:
	.byte	5
	.byte	'Resource',0,100,141,4,1
	.word	18063
.L215:
	.byte	5
	.byte	'CurrentThread',0,100,141,4,1
	.word	29813
.L217:
	.byte	14,4,4,0,0
.L218:
	.byte	3
	.byte	'Os_ResourceIsCeilingPrioGe',0,3,100,155,4,1
	.word	239
	.byte	1,1
.L219:
	.byte	5
	.byte	'Resource',0,100,155,4,1
	.word	18063
.L221:
	.byte	5
	.byte	'CurrentThread',0,100,155,4,1
	.word	29813
.L223:
	.byte	14,4,4,4,4,0,0
.L246:
	.byte	3
	.byte	'Os_ResourceBaseIsCeilingPrioGe',0,3,100,192,4,1
	.word	239
	.byte	1,1
.L247:
	.byte	5
	.byte	'Resource',0,100,192,4,1
	.word	18063
.L249:
	.byte	5
	.byte	'CurrentThread',0,100,192,4,1
	.word	29813
.L251:
	.byte	14
.L255:
	.byte	4,4,4,4,4,0,0
.L225:
	.byte	3
	.byte	'Os_ResourceInterruptIsCeilingPrioGe',0,3,100,233,4,1
	.word	239
	.byte	1,1
.L228:
	.byte	5
	.byte	'Resource',0,100,233,4,1
	.word	48929
.L230:
	.byte	5
	.byte	'CurrentThread',0,100,233,4,1
	.word	29813
.L232:
	.byte	14
.L236:
	.byte	4,4,4,4,4,0,0
.L324:
	.byte	6
	.byte	'Os_ResourceSaveAndIncrease',0,3,100,146,5,1,1,1
.L325:
	.byte	5
	.byte	'Resource',0,100,146,5,1
	.word	18063
.L327:
	.byte	5
	.byte	'Task',0,100,146,5,1
	.word	16602
.L329:
	.byte	14,4,4,4,4,0,0
.L154:
	.byte	6
	.byte	'Os_ResourceRestore',0,3,100,178,5,1,1,1
.L155:
	.byte	5
	.byte	'Resource',0,100,178,5,1
	.word	18063
.L157:
	.byte	5
	.byte	'Task',0,100,178,5,1
	.word	16602
.L159:
	.byte	14,4,4,4,4,0,0
.L258:
	.byte	6
	.byte	'Os_ResourceInterruptSaveAndIncrease',0,3,100,207,5,1,1,1
.L260:
	.byte	5
	.byte	'Resource',0,100,207,5,1
	.word	48929
.L262:
	.byte	14,4,4,0,0,3
	.byte	'Os_ResourceLock2Resource',0,3,100,225,5,1
	.word	18063
	.byte	1,1,5
	.byte	'Lock',0,100,225,5,1
	.word	3270
	.byte	4,0
.L119:
	.byte	6
	.byte	'Os_ResourceForceReleaseLocal',0,3,100,246,5,1,1,1
.L121:
	.byte	5
	.byte	'LockList',0,100,246,5,1
	.word	3299
.L123:
	.byte	5
	.byte	'Thread',0,100,246,5,1
	.word	29813
.L125:
	.byte	14,4,4,4,4,4,4,4,4,4,4,4,4,0,0,3
	.byte	'Os_Resource2ResourceInterrupt',0,3,100,159,6,1
	.word	48929
	.byte	1,1,5
	.byte	'Resource',0,100,159,6,1
	.word	18063
	.byte	14,4,4,0,0,2
	.byte	'int',0,4,5,12
	.word	49820
	.byte	27
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,24
	.word	49827
	.byte	0,18
	.word	239
	.byte	11
	.word	239
	.byte	28
	.byte	'__cmpswapw',0
	.word	49869
	.byte	1,1,1,1,29
	.byte	'p',0
	.word	49874
	.byte	29
	.byte	'value',0
	.word	239
	.byte	29
	.byte	'compare',0
	.word	239
	.byte	0,18
	.word	49820
	.byte	28
	.byte	'__mfcr',0
	.word	49931
	.byte	1,1,1,1,24
	.word	49820
	.byte	0,30
	.byte	'__isync',0,1,1,1,1,30
	.byte	'__disable',0,1,1,1,1,31
	.word	159
	.byte	4,0,31
	.word	186
	.byte	4,0,31
	.word	213
	.byte	4,0,31
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	4,0,31
	.word	314
	.byte	32
	.word	346
	.byte	4,0,31
	.word	363
	.byte	32
	.word	381
	.byte	4,0,31
	.word	2926
	.byte	32
	.word	2964
	.byte	4,0,31
	.word	2984
	.byte	32
	.word	3024
	.byte	4,0,33
	.byte	'Os_ErrProtectionError',0,24,215,19,21,1,1,1,1,5
	.byte	'Fatalerror',0,24,215,19,57
	.word	419
	.byte	0,31
	.word	3304
	.byte	32
	.word	3327
	.byte	4,0,31
	.word	3356
	.byte	32
	.word	3379
	.byte	32
	.word	3396
	.byte	4,0,31
	.word	3411
	.byte	32
	.word	3433
	.byte	4,0,31
	.word	3462
	.byte	32
	.word	3490
	.byte	4,0,31
	.word	3510
	.byte	32
	.word	3546
	.byte	4,0,31
	.word	3566
	.byte	32
	.word	3597
	.byte	4,0,31
	.word	3617
	.byte	32
	.word	3649
	.byte	14,34
	.word	3566
	.byte	32
	.word	3597
	.byte	35
	.word	3615
	.byte	0,4,34
	.word	3940
	.byte	32
	.word	3970
	.byte	35
	.word	3984
	.byte	0,4,0,0,31
	.word	3672
	.byte	32
	.word	3709
	.byte	14,34
	.word	3566
	.byte	32
	.word	3597
	.byte	35
	.word	3615
	.byte	0,4,0,0,31
	.word	3731
	.byte	32
	.word	3761
	.byte	4,0,31
	.word	3781
	.byte	32
	.word	3819
	.byte	32
	.word	3837
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	3855
	.byte	32
	.word	3875
	.byte	4,0,31
	.word	3891
	.byte	32
	.word	3924
	.byte	4,0,31
	.word	3940
	.byte	32
	.word	3970
	.byte	4,0,31
	.word	3986
	.byte	32
	.word	4030
	.byte	4,0,31
	.word	4046
	.byte	32
	.word	4082
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	4100
	.byte	32
	.word	4135
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	4153
	.byte	32
	.word	4179
	.byte	4,0,31
	.word	4205
	.byte	32
	.word	4240
	.byte	4,0,31
	.word	4256
	.byte	32
	.word	4291
	.byte	4,0,31
	.word	4307
	.byte	32
	.word	4343
	.byte	4,0,31
	.word	4375
	.byte	32
	.word	4411
	.byte	32
	.word	4434
	.byte	32
	.word	4448
	.byte	4,0,31
	.word	4480
	.byte	32
	.word	4516
	.byte	32
	.word	4539
	.byte	32
	.word	4553
	.byte	4,0,31
	.word	4585
	.byte	32
	.word	4621
	.byte	32
	.word	4644
	.byte	32
	.word	4658
	.byte	4,0,31
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	4,0,31
	.word	4951
	.byte	4,0,31
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,0,0,31
	.word	30334
	.byte	32
	.word	30367
	.byte	14,34
	.word	213
	.byte	35
	.word	237
	.byte	0,4,0,0,31
	.word	30392
	.byte	32
	.word	30429
	.byte	4,0,31
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	4,0,31
	.word	30533
	.byte	32
	.word	30557
	.byte	4,0,31
	.word	30592
	.byte	32
	.word	30624
	.byte	4,0,31
	.word	30644
	.byte	32
	.word	30675
	.byte	4,0,31
	.word	30695
	.byte	32
	.word	30721
	.byte	4,0,31
	.word	30741
	.byte	4,0,31
	.word	30766
	.byte	4,0,31
	.word	30798
	.byte	4,0,31
	.word	30831
	.byte	4,0,31
	.word	30892
	.byte	32
	.word	30925
	.byte	4,0,31
	.word	30947
	.byte	32
	.word	30974
	.byte	4,0,31
	.word	31001
	.byte	32
	.word	31028
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,0,0,31
	.word	31053
	.byte	32
	.word	31087
	.byte	4,0,31
	.word	31104
	.byte	32
	.word	31139
	.byte	4,0,31
	.word	31156
	.byte	32
	.word	31187
	.byte	4,0,31
	.word	31209
	.byte	32
	.word	31245
	.byte	4,0,31
	.word	31271
	.byte	32
	.word	31303
	.byte	4,0,31
	.word	31324
	.byte	32
	.word	31355
	.byte	4,0,31
	.word	31376
	.byte	32
	.word	31407
	.byte	4,0,31
	.word	31428
	.byte	32
	.word	31463
	.byte	32
	.word	31482
	.byte	4,0,31
	.word	31499
	.byte	32
	.word	31531
	.byte	32
	.word	31547
	.byte	4,0,31
	.word	31565
	.byte	32
	.word	31603
	.byte	4,0,31
	.word	31630
	.byte	32
	.word	31663
	.byte	4,0,31
	.word	31685
	.byte	32
	.word	31706
	.byte	14,4,34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,4,0,0,31
	.word	31735
	.byte	32
	.word	31756
	.byte	14,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,0,0,31
	.word	31785
	.byte	32
	.word	31822
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	31850
	.byte	32
	.word	31878
	.byte	4,0,31
	.word	31904
	.byte	32
	.word	31940
	.byte	32
	.word	31962
	.byte	14,14,34
	.word	31499
	.byte	32
	.word	31531
	.byte	32
	.word	31547
	.byte	35
	.word	31563
	.byte	0,34
	.word	30947
	.byte	32
	.word	30974
	.byte	35
	.word	30989
	.byte	0,34
	.word	31001
	.byte	32
	.word	31028
	.byte	36
	.word	31043
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	31044
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31045
	.byte	0,0,0,4,4,4,0,0,31
	.word	31992
	.byte	32
	.word	32020
	.byte	14,14,34
	.word	31499
	.byte	32
	.word	31531
	.byte	32
	.word	31547
	.byte	35
	.word	31563
	.byte	0,34
	.word	30947
	.byte	32
	.word	30974
	.byte	35
	.word	30989
	.byte	0,34
	.word	31001
	.byte	32
	.word	31028
	.byte	36
	.word	31043
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	31044
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31045
	.byte	0,0,0,4,4,4,0,0,31
	.word	32053
	.byte	32
	.word	32088
	.byte	14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,4,34
	.word	45757
	.byte	32
	.word	45788
	.byte	36
	.word	45804
	.byte	36
	.word	45805
	.byte	34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	45969
	.byte	32
	.word	45994
	.byte	32
	.word	46010
	.byte	32
	.word	46027
	.byte	36
	.word	46043
	.byte	36
	.word	46044
	.byte	36
	.word	46045
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46047
	.byte	35
	.word	46048
	.byte	35
	.word	46049
	.byte	35
	.word	46050
	.byte	35
	.word	46051
	.byte	35
	.word	46052
	.byte	35
	.word	46053
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45806
	.byte	35
	.word	45807
	.byte	35
	.word	45808
	.byte	0,0,4,0,0,31
	.word	32110
	.byte	32
	.word	32144
	.byte	14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,4,34
	.word	45811
	.byte	32
	.word	45841
	.byte	36
	.word	45857
	.byte	36
	.word	45858
	.byte	34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	36
	.word	46129
	.byte	36
	.word	46130
	.byte	36
	.word	46131
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46133
	.byte	35
	.word	46134
	.byte	35
	.word	46135
	.byte	35
	.word	46136
	.byte	35
	.word	46137
	.byte	35
	.word	46138
	.byte	35
	.word	46139
	.byte	35
	.word	46140
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45859
	.byte	35
	.word	45860
	.byte	35
	.word	45861
	.byte	0,0,4,0,0,31
	.word	32166
	.byte	32
	.word	32200
	.byte	14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,4,34
	.word	45864
	.byte	32
	.word	45894
	.byte	36
	.word	45910
	.byte	36
	.word	45911
	.byte	34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	45969
	.byte	32
	.word	45994
	.byte	32
	.word	46010
	.byte	32
	.word	46027
	.byte	36
	.word	46043
	.byte	36
	.word	46044
	.byte	36
	.word	46045
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46047
	.byte	35
	.word	46048
	.byte	35
	.word	46049
	.byte	35
	.word	46050
	.byte	35
	.word	46051
	.byte	35
	.word	46052
	.byte	35
	.word	46053
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45912
	.byte	35
	.word	45913
	.byte	35
	.word	45914
	.byte	0,0,4,0,0,31
	.word	32222
	.byte	32
	.word	32255
	.byte	14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,4,34
	.word	45917
	.byte	32
	.word	45946
	.byte	36
	.word	45962
	.byte	36
	.word	45963
	.byte	34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	36
	.word	46129
	.byte	36
	.word	46130
	.byte	36
	.word	46131
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46133
	.byte	35
	.word	46134
	.byte	35
	.word	46135
	.byte	35
	.word	46136
	.byte	35
	.word	46137
	.byte	35
	.word	46138
	.byte	35
	.word	46139
	.byte	35
	.word	46140
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45964
	.byte	35
	.word	45965
	.byte	35
	.word	45966
	.byte	0,0,4,0,0,31
	.word	32277
	.byte	32
	.word	32307
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,34
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	35
	.word	312
	.byte	0,4,0,0,31
	.word	32331
	.byte	32
	.word	32365
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	35
	.word	312
	.byte	0,4,0,0,31
	.word	32389
	.byte	32
	.word	32436
	.byte	14,34
	.word	3986
	.byte	32
	.word	4030
	.byte	35
	.word	4044
	.byte	0,4,0,0,31
	.word	32457
	.byte	14,14,34
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	35
	.word	30521
	.byte	0,34
	.word	34694
	.byte	36
	.word	34729
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34730
	.byte	34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,35
	.word	34731
	.byte	34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,35
	.word	34732
	.byte	0,0,0,4,4,0,0,31
	.word	32493
	.byte	32
	.word	32529
	.byte	14,4,34
	.word	30392
	.byte	32
	.word	30429
	.byte	35
	.word	30447
	.byte	0,4,0,0,31
	.word	32561
	.byte	32
	.word	32594
	.byte	32
	.word	32611
	.byte	4,0,31
	.word	32628
	.byte	32
	.word	32670
	.byte	4,0,31
	.word	32692
	.byte	32
	.word	32729
	.byte	4,0,31
	.word	32751
	.byte	32
	.word	32785
	.byte	32
	.word	32803
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	32628
	.byte	32
	.word	32670
	.byte	35
	.word	32690
	.byte	0,4,34
	.word	32692
	.byte	32
	.word	32729
	.byte	35
	.word	32749
	.byte	0,4,34
	.word	32561
	.byte	32
	.word	32594
	.byte	32
	.word	32611
	.byte	35
	.word	32626
	.byte	0,4,0,0,31
	.word	32836
	.byte	32
	.word	32864
	.byte	32
	.word	32878
	.byte	4,0,31
	.word	32898
	.byte	32
	.word	32926
	.byte	32
	.word	32940
	.byte	4,0,31
	.word	32955
	.byte	32
	.word	32995
	.byte	32
	.word	33009
	.byte	4,0,31
	.word	33025
	.byte	32
	.word	33072
	.byte	32
	.word	33086
	.byte	4,0,33
	.byte	'Os_SchedulerRobRound',0,30,141,3,21,1,1,1,1,5
	.byte	'Scheduler',0,30,143,3,56
	.word	16975
	.byte	0,33
	.byte	'Os_SchedulerIncreasePrio',0,30,235,3,21,1,1,1,1,5
	.byte	'Scheduler',0,30,237,3,56
	.word	16975
	.byte	5
	.byte	'NewPriority',0,30,238,3,19
	.word	5373
	.byte	0,33
	.byte	'Os_SchedulerDecreasePrio',0,30,131,4,21,1,1,1,1,5
	.byte	'Scheduler',0,30,133,4,56
	.word	16975
	.byte	5
	.byte	'NewPriority',0,30,134,4,19
	.word	5373
	.byte	0,37
	.byte	'Os_SchedulerInternalSchedule',0,30,159,4,64
	.word	16602
	.byte	1,1,1,1,5
	.byte	'Scheduler',0,30,161,4,56
	.word	16975
	.byte	0,31
	.word	33102
	.byte	32
	.word	33141
	.byte	4,0,31
	.word	33162
	.byte	32
	.word	33205
	.byte	4,0,31
	.word	33231
	.byte	32
	.word	33258
	.byte	4,0,31
	.word	33419
	.byte	32
	.word	33449
	.byte	14,34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,4,0,0,31
	.word	33471
	.byte	32
	.word	33509
	.byte	14,4,34
	.word	37434
	.byte	32
	.word	37464
	.byte	36
	.word	37482
	.byte	35
	.word	37483
	.byte	0,0,4,34
	.word	33419
	.byte	32
	.word	33449
	.byte	36
	.word	33467
	.byte	34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,35
	.word	33468
	.byte	0,0,4,34
	.word	30644
	.byte	32
	.word	30675
	.byte	35
	.word	30693
	.byte	0,4,0,0,31
	.word	33534
	.byte	32
	.word	33567
	.byte	14,34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,4,0,0,31
	.word	33584
	.byte	32
	.word	33623
	.byte	14,34
	.word	33534
	.byte	32
	.word	33567
	.byte	36
	.word	33580
	.byte	34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,35
	.word	33581
	.byte	0,0,4,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	33652
	.byte	14,34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,4,0,0,31
	.word	33690
	.byte	32
	.word	33718
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	33736
	.byte	32
	.word	33765
	.byte	4,0,31
	.word	33781
	.byte	32
	.word	33823
	.byte	4,0,31
	.word	33839
	.byte	32
	.word	33868
	.byte	4,0,31
	.word	33884
	.byte	32
	.word	33918
	.byte	4,0,31
	.word	34150
	.byte	32
	.word	34185
	.byte	4,0,31
	.word	34201
	.byte	32
	.word	34232
	.byte	4,0,31
	.word	34248
	.byte	32
	.word	34280
	.byte	4,0,31
	.word	34296
	.byte	32
	.word	34328
	.byte	4,0,31
	.word	34344
	.byte	32
	.word	34391
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,4,0,0,31
	.word	34410
	.byte	32
	.word	34451
	.byte	32
	.word	34465
	.byte	14,34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,4,0,0,31
	.word	34482
	.byte	32
	.word	34528
	.byte	4,0,31
	.word	34548
	.byte	32
	.word	34573
	.byte	14,34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,4,34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,4,34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,4,0,0,31
	.word	34595
	.byte	14,34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,4,34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,4,34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,4,0,0,31
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	14,34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,4,0,0,31
	.word	34694
	.byte	14,34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,4,34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,4,34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,4,0,0,31
	.word	35170
	.byte	4,0,31
	.word	35207
	.byte	32
	.word	35243
	.byte	4,0,31
	.word	35261
	.byte	32
	.word	35295
	.byte	32
	.word	35314
	.byte	32
	.word	35329
	.byte	4,0,31
	.word	35354
	.byte	32
	.word	35388
	.byte	32
	.word	35407
	.byte	32
	.word	35422
	.byte	4,0,31
	.word	35447
	.byte	32
	.word	35473
	.byte	32
	.word	35488
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	36446
	.byte	32
	.word	36482
	.byte	32
	.word	36505
	.byte	32
	.word	36522
	.byte	36
	.word	36554
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36555
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36556
	.byte	0,0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	36
	.word	36675
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36676
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36677
	.byte	0,0,4,0,0,31
	.word	35511
	.byte	32
	.word	35539
	.byte	32
	.word	35555
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	36446
	.byte	32
	.word	36482
	.byte	32
	.word	36505
	.byte	32
	.word	36522
	.byte	36
	.word	36554
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36555
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36556
	.byte	0,0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,4,34
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	36
	.word	36675
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36676
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36677
	.byte	0,0,4,0,0,31
	.word	35581
	.byte	32
	.word	35616
	.byte	32
	.word	35633
	.byte	4,0,31
	.word	35755
	.byte	32
	.word	35786
	.byte	32
	.word	35803
	.byte	4,0,31
	.word	35830
	.byte	32
	.word	35870
	.byte	32
	.word	35887
	.byte	4,0,31
	.word	35913
	.byte	32
	.word	35950
	.byte	4,0,31
	.word	35979
	.byte	32
	.word	36013
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,4,0,0,33
	.byte	'Os_Hal_ContextSwitch',0,8,179,3,1,1,1,1,1,5
	.byte	'Current',0,8,179,3,1
	.word	5165
	.byte	5
	.byte	'Next',0,8,179,3,1
	.word	35974
	.byte	0,31
	.word	36033
	.byte	32
	.word	36070
	.byte	32
	.word	36093
	.byte	32
	.word	36110
	.byte	14,14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,34
	.word	36446
	.byte	32
	.word	36482
	.byte	32
	.word	36505
	.byte	32
	.word	36522
	.byte	36
	.word	36554
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36555
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36556
	.byte	0,0,34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,34
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	36
	.word	36675
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36676
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36677
	.byte	0,0,0,4,4,34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,4,4,4,34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,4,0,0,31
	.word	36134
	.byte	32
	.word	36162
	.byte	32
	.word	36178
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,4,34
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	36
	.word	36675
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36676
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36677
	.byte	0,0,4,0,0,31
	.word	36203
	.byte	32
	.word	36232
	.byte	32
	.word	36249
	.byte	14,34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,4,34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,4,34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,4,0,0,31
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	14,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,0,0,31
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	14,34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,4,0,0,31
	.word	36446
	.byte	32
	.word	36482
	.byte	32
	.word	36505
	.byte	32
	.word	36522
	.byte	14,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,4,0,0,31
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	14,34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,4,34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,4,0,0,31
	.word	36680
	.byte	32
	.word	36713
	.byte	4,0,31
	.word	36771
	.byte	32
	.word	36795
	.byte	32
	.word	36811
	.byte	4,0,31
	.word	36841
	.byte	32
	.word	36861
	.byte	32
	.word	36878
	.byte	4,0,31
	.word	36894
	.byte	32
	.word	36916
	.byte	4,0,31
	.word	36940
	.byte	32
	.word	36967
	.byte	4,0,31
	.word	36985
	.byte	32
	.word	37020
	.byte	14,4,0,0,31
	.word	37038
	.byte	32
	.word	37067
	.byte	32
	.word	37093
	.byte	32
	.word	37110
	.byte	14,4,4,0,0,31
	.word	37129
	.byte	32
	.word	37166
	.byte	32
	.word	37183
	.byte	14,4,4,0,0,31
	.word	37202
	.byte	32
	.word	37241
	.byte	32
	.word	37258
	.byte	14,4,4,0,0,31
	.word	37277
	.byte	32
	.word	37307
	.byte	14,4,0,0,31
	.word	37326
	.byte	32
	.word	37359
	.byte	14,4,0,0,31
	.word	37378
	.byte	32
	.word	37412
	.byte	14,4,0,0,31
	.word	37434
	.byte	32
	.word	37464
	.byte	14,4,0,0,31
	.word	37486
	.byte	32
	.word	37519
	.byte	14,4,0,0,31
	.word	37541
	.byte	14,4,0,0,31
	.word	37586
	.byte	14,4,0,0,31
	.word	37630
	.byte	14,4,0,0,31
	.word	37674
	.byte	14,4,0,0,31
	.word	37717
	.byte	32
	.word	37746
	.byte	4,0,31
	.word	37763
	.byte	32
	.word	37796
	.byte	4,0,31
	.word	37813
	.byte	32
	.word	37843
	.byte	4,0,31
	.word	37861
	.byte	32
	.word	37894
	.byte	4,0,31
	.word	37912
	.byte	32
	.word	37954
	.byte	4,0,31
	.word	37972
	.byte	32
	.word	38001
	.byte	4,0,31
	.word	38019
	.byte	32
	.word	38055
	.byte	4,0,31
	.word	38073
	.byte	32
	.word	38101
	.byte	4,0,31
	.word	38119
	.byte	32
	.word	38146
	.byte	4,0,31
	.word	38164
	.byte	32
	.word	38205
	.byte	32
	.word	38221
	.byte	4,0,31
	.word	38240
	.byte	32
	.word	38268
	.byte	4,0,31
	.word	38286
	.byte	32
	.word	38324
	.byte	32
	.word	38340
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,34
	.word	38019
	.byte	32
	.word	38055
	.byte	35
	.word	38071
	.byte	0,4,0,0,31
	.word	38375
	.byte	32
	.word	38416
	.byte	4,0,31
	.word	38434
	.byte	32
	.word	38477
	.byte	4,0,31
	.word	38495
	.byte	32
	.word	38535
	.byte	14,34
	.word	3462
	.byte	32
	.word	3490
	.byte	35
	.word	3508
	.byte	0,4,34
	.word	3566
	.byte	32
	.word	3597
	.byte	35
	.word	3615
	.byte	0,4,34
	.word	3617
	.byte	32
	.word	3649
	.byte	36
	.word	3667
	.byte	34
	.word	3566
	.byte	32
	.word	3597
	.byte	35
	.word	3615
	.byte	0,35
	.word	3668
	.byte	34
	.word	3940
	.byte	32
	.word	3970
	.byte	35
	.word	3984
	.byte	0,35
	.word	3669
	.byte	0,0,4,0,0,31
	.word	38557
	.byte	32
	.word	38596
	.byte	14,34
	.word	3462
	.byte	32
	.word	3490
	.byte	35
	.word	3508
	.byte	0,4,34
	.word	3566
	.byte	32
	.word	3597
	.byte	35
	.word	3615
	.byte	0,4,34
	.word	3672
	.byte	32
	.word	3709
	.byte	36
	.word	3727
	.byte	34
	.word	3566
	.byte	32
	.word	3597
	.byte	35
	.word	3615
	.byte	0,35
	.word	3728
	.byte	0,0,4,0,0,31
	.word	38618
	.byte	32
	.word	38665
	.byte	14,34
	.word	37912
	.byte	32
	.word	37954
	.byte	35
	.word	37970
	.byte	0,4,34
	.word	31785
	.byte	32
	.word	31822
	.byte	36
	.word	31846
	.byte	34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,35
	.word	31847
	.byte	0,0,4,0,0,31
	.word	38686
	.byte	32
	.word	38724
	.byte	4,0,31
	.word	38742
	.byte	32
	.word	38780
	.byte	4,0,31
	.word	38798
	.byte	32
	.word	38833
	.byte	14,34
	.word	31850
	.byte	32
	.word	31878
	.byte	35
	.word	31902
	.byte	0,4,34
	.word	38742
	.byte	32
	.word	38780
	.byte	35
	.word	38796
	.byte	0,4,34
	.word	38686
	.byte	32
	.word	38724
	.byte	35
	.word	38740
	.byte	0,4,0,0,31
	.word	38855
	.byte	32
	.word	38887
	.byte	32
	.word	38901
	.byte	14,14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	45264
	.byte	32
	.word	45292
	.byte	32
	.word	45308
	.byte	32
	.word	45325
	.byte	32
	.word	45339
	.byte	36
	.word	45359
	.byte	36
	.word	45360
	.byte	36
	.word	45361
	.byte	34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,0,35
	.word	45363
	.byte	35
	.word	45364
	.byte	34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45365
	.byte	35
	.word	45366
	.byte	35
	.word	45367
	.byte	35
	.word	45368
	.byte	35
	.word	45369
	.byte	35
	.word	45370
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	39441
	.byte	32
	.word	39473
	.byte	36
	.word	39489
	.byte	35
	.word	39490
	.byte	0,0,4,34
	.word	36841
	.byte	32
	.word	36861
	.byte	32
	.word	36878
	.byte	35
	.word	36892
	.byte	0,4,34
	.word	39589
	.byte	32
	.word	39624
	.byte	35
	.word	39640
	.byte	0,4,4,4,4,4,34
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	36
	.word	34690
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34691
	.byte	0,0,4,34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,4,34
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	35
	.word	39439
	.byte	0,4,34
	.word	34548
	.byte	32
	.word	34573
	.byte	36
	.word	34589
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34590
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34591
	.byte	34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,35
	.word	34592
	.byte	0,0,4,34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,4,34
	.word	32457
	.byte	36
	.word	32487
	.byte	36
	.word	32488
	.byte	34
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	35
	.word	30521
	.byte	0,34
	.word	34694
	.byte	36
	.word	34729
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34730
	.byte	34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,35
	.word	34731
	.byte	34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,35
	.word	34732
	.byte	0,0,0,35
	.word	32489
	.byte	35
	.word	32490
	.byte	0,0,4,34
	.word	35913
	.byte	32
	.word	35950
	.byte	35
	.word	35967
	.byte	0,4,34
	.word	36033
	.byte	32
	.word	36070
	.byte	32
	.word	36093
	.byte	32
	.word	36110
	.byte	36
	.word	36124
	.byte	36
	.word	36125
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,34
	.word	36446
	.byte	32
	.word	36482
	.byte	32
	.word	36505
	.byte	32
	.word	36522
	.byte	36
	.word	36554
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36555
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36556
	.byte	0,0,34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,34
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	36
	.word	36675
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36676
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36677
	.byte	0,0,0,35
	.word	36126
	.byte	35
	.word	36127
	.byte	34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,35
	.word	36128
	.byte	35
	.word	36129
	.byte	35
	.word	36130
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36131
	.byte	0,0,4,4,0,0,31
	.word	38949
	.byte	32
	.word	38977
	.byte	32
	.word	38991
	.byte	14,34
	.word	36894
	.byte	32
	.word	36916
	.byte	35
	.word	36938
	.byte	0,4,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,4,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,4,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,4,34
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	36
	.word	34690
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34691
	.byte	0,0,4,34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,4,34
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	35
	.word	39439
	.byte	0,4,34
	.word	34548
	.byte	32
	.word	34573
	.byte	36
	.word	34589
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34590
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34591
	.byte	34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,35
	.word	34592
	.byte	0,0,4,34
	.word	35979
	.byte	32
	.word	36013
	.byte	36
	.word	36027
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	36028
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36029
	.byte	34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,35
	.word	36030
	.byte	0,0,4,34
	.word	35913
	.byte	32
	.word	35950
	.byte	35
	.word	35967
	.byte	0,4,34
	.word	45264
	.byte	32
	.word	45292
	.byte	32
	.word	45308
	.byte	32
	.word	45325
	.byte	32
	.word	45339
	.byte	36
	.word	45359
	.byte	36
	.word	45360
	.byte	36
	.word	45361
	.byte	34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,0,35
	.word	45363
	.byte	35
	.word	45364
	.byte	34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45365
	.byte	35
	.word	45366
	.byte	35
	.word	45367
	.byte	35
	.word	45368
	.byte	35
	.word	45369
	.byte	35
	.word	45370
	.byte	0,0,4,0,0,31
	.word	39033
	.byte	32
	.word	39067
	.byte	32
	.word	39081
	.byte	14,14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	45264
	.byte	32
	.word	45292
	.byte	32
	.word	45308
	.byte	32
	.word	45325
	.byte	32
	.word	45339
	.byte	36
	.word	45359
	.byte	36
	.word	45360
	.byte	36
	.word	45361
	.byte	34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,0,35
	.word	45363
	.byte	35
	.word	45364
	.byte	34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45365
	.byte	35
	.word	45366
	.byte	35
	.word	45367
	.byte	35
	.word	45368
	.byte	35
	.word	45369
	.byte	35
	.word	45370
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	36841
	.byte	32
	.word	36861
	.byte	32
	.word	36878
	.byte	35
	.word	36892
	.byte	0,4,34
	.word	39589
	.byte	32
	.word	39624
	.byte	35
	.word	39640
	.byte	0,4,4,4,4,4,34
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	36
	.word	34690
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34691
	.byte	0,0,4,34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,4,34
	.word	36203
	.byte	32
	.word	36232
	.byte	32
	.word	36249
	.byte	36
	.word	36263
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	36264
	.byte	34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,35
	.word	36265
	.byte	34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,35
	.word	36266
	.byte	0,0,4,34
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	35
	.word	39439
	.byte	0,4,34
	.word	34548
	.byte	32
	.word	34573
	.byte	36
	.word	34589
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34590
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34591
	.byte	34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,35
	.word	34592
	.byte	0,0,4,34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,4,34
	.word	32457
	.byte	36
	.word	32487
	.byte	36
	.word	32488
	.byte	34
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	35
	.word	30521
	.byte	0,34
	.word	34694
	.byte	36
	.word	34729
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34730
	.byte	34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,35
	.word	34731
	.byte	34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,35
	.word	34732
	.byte	0,0,0,35
	.word	32489
	.byte	35
	.word	32490
	.byte	0,0,4,34
	.word	35913
	.byte	32
	.word	35950
	.byte	35
	.word	35967
	.byte	0,4,4,0,0,31
	.word	39128
	.byte	32
	.word	39152
	.byte	32
	.word	39169
	.byte	32
	.word	39183
	.byte	14,14,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	45163
	.byte	32
	.word	45183
	.byte	32
	.word	45199
	.byte	32
	.word	45216
	.byte	32
	.word	45230
	.byte	36
	.word	45250
	.byte	36
	.word	45251
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44872
	.byte	32
	.word	44893
	.byte	32
	.word	44909
	.byte	32
	.word	44926
	.byte	32
	.word	44939
	.byte	36
	.word	44957
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	44958
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	44959
	.byte	34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,35
	.word	44960
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,35
	.word	45252
	.byte	35
	.word	45253
	.byte	35
	.word	45254
	.byte	34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45255
	.byte	35
	.word	45256
	.byte	35
	.word	45257
	.byte	35
	.word	45258
	.byte	35
	.word	45259
	.byte	35
	.word	45260
	.byte	35
	.word	45261
	.byte	0,0,0,34
	.word	39538
	.byte	32
	.word	39571
	.byte	35
	.word	39587
	.byte	0,4,34
	.word	36841
	.byte	32
	.word	36861
	.byte	32
	.word	36878
	.byte	35
	.word	36892
	.byte	0,4,34
	.word	39589
	.byte	32
	.word	39624
	.byte	35
	.word	39640
	.byte	0,4,4,4,4,4,34
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	36
	.word	34690
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34691
	.byte	0,0,4,34
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	35
	.word	39439
	.byte	0,4,34
	.word	34548
	.byte	32
	.word	34573
	.byte	36
	.word	34589
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34590
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34591
	.byte	34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,35
	.word	34592
	.byte	0,0,4,34
	.word	32457
	.byte	36
	.word	32487
	.byte	36
	.word	32488
	.byte	34
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	35
	.word	30521
	.byte	0,34
	.word	34694
	.byte	36
	.word	34729
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34730
	.byte	34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,35
	.word	34731
	.byte	34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,35
	.word	34732
	.byte	0,0,0,35
	.word	32489
	.byte	35
	.word	32490
	.byte	0,0,4,34
	.word	35913
	.byte	32
	.word	35950
	.byte	35
	.word	35967
	.byte	0,4,4,0,0,31
	.word	39227
	.byte	32
	.word	39264
	.byte	4,0,31
	.word	39282
	.byte	32
	.word	39317
	.byte	32
	.word	39333
	.byte	14,34
	.word	35830
	.byte	32
	.word	35870
	.byte	32
	.word	35887
	.byte	35
	.word	35911
	.byte	0,4,0,0,31
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	4,0,31
	.word	39441
	.byte	32
	.word	39473
	.byte	14,4,0,0,31
	.word	39493
	.byte	32
	.word	39518
	.byte	14,4,0,0,31
	.word	39538
	.byte	32
	.word	39571
	.byte	4,0,31
	.word	39589
	.byte	32
	.word	39624
	.byte	4,0,31
	.word	39642
	.byte	32
	.word	39670
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,4,0,0,31
	.word	39716
	.byte	32
	.word	39755
	.byte	32
	.word	39770
	.byte	4,0,31
	.word	39790
	.byte	32
	.word	39818
	.byte	14,34
	.word	31271
	.byte	32
	.word	31303
	.byte	35
	.word	31322
	.byte	0,4,0,0,31
	.word	39845
	.byte	32
	.word	39873
	.byte	32
	.word	39886
	.byte	14,34
	.word	31428
	.byte	32
	.word	31463
	.byte	32
	.word	31482
	.byte	35
	.word	31497
	.byte	0,4,0,0,31
	.word	39905
	.byte	32
	.word	39933
	.byte	4,0,31
	.word	39948
	.byte	32
	.word	39976
	.byte	32
	.word	39989
	.byte	14,34
	.word	40054
	.byte	32
	.word	40081
	.byte	36
	.word	40094
	.byte	34
	.word	31376
	.byte	32
	.word	31407
	.byte	35
	.word	31426
	.byte	0,35
	.word	40095
	.byte	0,0,4,34
	.word	40016
	.byte	32
	.word	40037
	.byte	36
	.word	40050
	.byte	34
	.word	31324
	.byte	32
	.word	31355
	.byte	35
	.word	31374
	.byte	0,35
	.word	40051
	.byte	0,0,4,0,0,31
	.word	40016
	.byte	32
	.word	40037
	.byte	14,34
	.word	31324
	.byte	32
	.word	31355
	.byte	35
	.word	31374
	.byte	0,4,0,0,31
	.word	40054
	.byte	32
	.word	40081
	.byte	14,34
	.word	31376
	.byte	32
	.word	31407
	.byte	35
	.word	31426
	.byte	0,4,0,0,31
	.word	40108
	.byte	32
	.word	40142
	.byte	32
	.word	40156
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	40183
	.byte	32
	.word	40227
	.byte	4,0,31
	.word	40256
	.byte	32
	.word	40280
	.byte	32
	.word	40298
	.byte	32
	.word	40318
	.byte	32
	.word	40339
	.byte	14,4,0,0,31
	.word	40363
	.byte	32
	.word	40405
	.byte	32
	.word	40423
	.byte	32
	.word	40443
	.byte	4,0,31
	.word	40461
	.byte	32
	.word	40489
	.byte	4,0,31
	.word	40504
	.byte	32
	.word	40534
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,4,0,0,31
	.word	40769
	.byte	32
	.word	40795
	.byte	14,34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,4,0,0,31
	.word	40813
	.byte	32
	.word	40837
	.byte	32
	.word	40851
	.byte	14,34
	.word	40769
	.byte	32
	.word	40795
	.byte	36
	.word	40809
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	40810
	.byte	0,0,4,0,0,31
	.word	40870
	.byte	32
	.word	40901
	.byte	14,34
	.word	40769
	.byte	32
	.word	40795
	.byte	36
	.word	40809
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	40810
	.byte	0,0,4,0,0,31
	.word	40919
	.byte	32
	.word	40954
	.byte	4,0,31
	.word	40970
	.byte	32
	.word	40995
	.byte	4,0,31
	.word	41011
	.byte	32
	.word	41043
	.byte	14,34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,4,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	34296
	.byte	32
	.word	34328
	.byte	35
	.word	34342
	.byte	0,4,0,0,31
	.word	41063
	.byte	32
	.word	41090
	.byte	14,34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,4,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,0,0,31
	.word	41109
	.byte	32
	.word	41140
	.byte	14,34
	.word	33534
	.byte	32
	.word	33567
	.byte	36
	.word	33580
	.byte	34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,35
	.word	33581
	.byte	0,0,4,34
	.word	41063
	.byte	32
	.word	41090
	.byte	36
	.word	41104
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	41105
	.byte	34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,35
	.word	41106
	.byte	0,0,4,0,0,31
	.word	41159
	.byte	32
	.word	41181
	.byte	32
	.word	41200
	.byte	14,34
	.word	41284
	.byte	36
	.word	41316
	.byte	35
	.word	41317
	.byte	0,0,4,34
	.word	37038
	.byte	32
	.word	37067
	.byte	32
	.word	37093
	.byte	32
	.word	37110
	.byte	36
	.word	37124
	.byte	35
	.word	37125
	.byte	35
	.word	37126
	.byte	0,0,4,34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,4,34
	.word	37813
	.byte	32
	.word	37843
	.byte	35
	.word	37859
	.byte	0,4,34
	.word	37813
	.byte	32
	.word	37843
	.byte	35
	.word	37859
	.byte	0,4,34
	.word	40769
	.byte	32
	.word	40795
	.byte	36
	.word	40809
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	40810
	.byte	0,0,4,34
	.word	40504
	.byte	32
	.word	40534
	.byte	36
	.word	40549
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	40550
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	40551
	.byte	0,0,4,34
	.word	39128
	.byte	32
	.word	39152
	.byte	32
	.word	39169
	.byte	32
	.word	39183
	.byte	36
	.word	39210
	.byte	36
	.word	39211
	.byte	34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	45163
	.byte	32
	.word	45183
	.byte	32
	.word	45199
	.byte	32
	.word	45216
	.byte	32
	.word	45230
	.byte	36
	.word	45250
	.byte	36
	.word	45251
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44872
	.byte	32
	.word	44893
	.byte	32
	.word	44909
	.byte	32
	.word	44926
	.byte	32
	.word	44939
	.byte	36
	.word	44957
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	44958
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	44959
	.byte	34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,35
	.word	44960
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,35
	.word	45252
	.byte	35
	.word	45253
	.byte	35
	.word	45254
	.byte	34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45255
	.byte	35
	.word	45256
	.byte	35
	.word	45257
	.byte	35
	.word	45258
	.byte	35
	.word	45259
	.byte	35
	.word	45260
	.byte	35
	.word	45261
	.byte	0,0,0,34
	.word	39538
	.byte	32
	.word	39571
	.byte	35
	.word	39587
	.byte	0,35
	.word	39212
	.byte	34
	.word	36841
	.byte	32
	.word	36861
	.byte	32
	.word	36878
	.byte	35
	.word	36892
	.byte	0,35
	.word	39213
	.byte	34
	.word	39589
	.byte	32
	.word	39624
	.byte	35
	.word	39640
	.byte	0,35
	.word	39214
	.byte	35
	.word	39215
	.byte	35
	.word	39216
	.byte	35
	.word	39217
	.byte	35
	.word	39218
	.byte	34
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	36
	.word	34690
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34691
	.byte	0,0,35
	.word	39219
	.byte	34
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	35
	.word	39439
	.byte	0,35
	.word	39220
	.byte	34
	.word	34548
	.byte	32
	.word	34573
	.byte	36
	.word	34589
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34590
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34591
	.byte	34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,35
	.word	34592
	.byte	0,0,35
	.word	39221
	.byte	34
	.word	32457
	.byte	36
	.word	32487
	.byte	36
	.word	32488
	.byte	34
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	35
	.word	30521
	.byte	0,34
	.word	34694
	.byte	36
	.word	34729
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34730
	.byte	34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,35
	.word	34731
	.byte	34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,35
	.word	34732
	.byte	0,0,0,35
	.word	32489
	.byte	35
	.word	32490
	.byte	0,0,35
	.word	39222
	.byte	34
	.word	35913
	.byte	32
	.word	35950
	.byte	35
	.word	35967
	.byte	0,35
	.word	39223
	.byte	35
	.word	39224
	.byte	0,0,4,0,0,31
	.word	41233
	.byte	32
	.word	41255
	.byte	14,34
	.word	41284
	.byte	36
	.word	41316
	.byte	35
	.word	41317
	.byte	0,0,4,34
	.word	37129
	.byte	32
	.word	37166
	.byte	32
	.word	37183
	.byte	36
	.word	37197
	.byte	35
	.word	37198
	.byte	35
	.word	37199
	.byte	0,0,4,34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,4,34
	.word	37813
	.byte	32
	.word	37843
	.byte	35
	.word	37859
	.byte	0,4,34
	.word	37813
	.byte	32
	.word	37843
	.byte	35
	.word	37859
	.byte	0,4,34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,4,34
	.word	38855
	.byte	32
	.word	38887
	.byte	32
	.word	38901
	.byte	36
	.word	38928
	.byte	36
	.word	38929
	.byte	34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,34
	.word	45264
	.byte	32
	.word	45292
	.byte	32
	.word	45308
	.byte	32
	.word	45325
	.byte	32
	.word	45339
	.byte	36
	.word	45359
	.byte	36
	.word	45360
	.byte	36
	.word	45361
	.byte	34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,0,35
	.word	45363
	.byte	35
	.word	45364
	.byte	34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45365
	.byte	35
	.word	45366
	.byte	35
	.word	45367
	.byte	35
	.word	45368
	.byte	35
	.word	45369
	.byte	35
	.word	45370
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	38930
	.byte	34
	.word	39441
	.byte	32
	.word	39473
	.byte	36
	.word	39489
	.byte	35
	.word	39490
	.byte	0,0,35
	.word	38931
	.byte	34
	.word	36841
	.byte	32
	.word	36861
	.byte	32
	.word	36878
	.byte	35
	.word	36892
	.byte	0,35
	.word	38932
	.byte	34
	.word	39589
	.byte	32
	.word	39624
	.byte	35
	.word	39640
	.byte	0,35
	.word	38933
	.byte	35
	.word	38934
	.byte	35
	.word	38935
	.byte	35
	.word	38936
	.byte	35
	.word	38937
	.byte	34
	.word	34630
	.byte	32
	.word	34661
	.byte	32
	.word	34676
	.byte	36
	.word	34690
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34691
	.byte	0,0,35
	.word	38938
	.byte	34
	.word	34595
	.byte	36
	.word	34624
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34625
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34626
	.byte	34
	.word	30334
	.byte	32
	.word	30367
	.byte	36
	.word	30388
	.byte	34
	.word	213
	.byte	35
	.word	237
	.byte	0,35
	.word	30389
	.byte	0,0,35
	.word	34627
	.byte	0,0,35
	.word	38939
	.byte	34
	.word	39361
	.byte	32
	.word	39396
	.byte	32
	.word	39412
	.byte	35
	.word	39439
	.byte	0,35
	.word	38940
	.byte	34
	.word	34548
	.byte	32
	.word	34573
	.byte	36
	.word	34589
	.byte	34
	.word	35170
	.byte	35
	.word	35195
	.byte	0,35
	.word	34590
	.byte	34
	.word	35207
	.byte	32
	.word	35243
	.byte	35
	.word	35259
	.byte	0,35
	.word	34591
	.byte	34
	.word	29953
	.byte	32
	.word	29982
	.byte	32
	.word	30003
	.byte	36
	.word	30019
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	30020
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	30021
	.byte	0,0,35
	.word	34592
	.byte	0,0,35
	.word	38941
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	38942
	.byte	34
	.word	32457
	.byte	36
	.word	32487
	.byte	36
	.word	32488
	.byte	34
	.word	30449
	.byte	32
	.word	30480
	.byte	32
	.word	30500
	.byte	35
	.word	30521
	.byte	0,34
	.word	34694
	.byte	36
	.word	34729
	.byte	34
	.word	33736
	.byte	32
	.word	33765
	.byte	35
	.word	33779
	.byte	0,35
	.word	34730
	.byte	34
	.word	33652
	.byte	36
	.word	33686
	.byte	34
	.word	4951
	.byte	35
	.word	4980
	.byte	0,35
	.word	33687
	.byte	0,0,35
	.word	34731
	.byte	34
	.word	33690
	.byte	32
	.word	33718
	.byte	36
	.word	33732
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	33733
	.byte	0,0,35
	.word	34732
	.byte	0,0,0,35
	.word	32489
	.byte	35
	.word	32490
	.byte	0,0,35
	.word	38943
	.byte	34
	.word	35913
	.byte	32
	.word	35950
	.byte	35
	.word	35967
	.byte	0,35
	.word	38944
	.byte	34
	.word	36033
	.byte	32
	.word	36070
	.byte	32
	.word	36093
	.byte	32
	.word	36110
	.byte	36
	.word	36124
	.byte	36
	.word	36125
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,34
	.word	36446
	.byte	32
	.word	36482
	.byte	32
	.word	36505
	.byte	32
	.word	36522
	.byte	36
	.word	36554
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36555
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36556
	.byte	0,0,34
	.word	36269
	.byte	32
	.word	36306
	.byte	32
	.word	36323
	.byte	36
	.word	36355
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36356
	.byte	0,0,34
	.word	36559
	.byte	32
	.word	36603
	.byte	32
	.word	36626
	.byte	32
	.word	36643
	.byte	36
	.word	36675
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36676
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	36677
	.byte	0,0,0,35
	.word	36126
	.byte	35
	.word	36127
	.byte	34
	.word	36680
	.byte	32
	.word	36713
	.byte	35
	.word	36730
	.byte	0,35
	.word	36128
	.byte	35
	.word	36129
	.byte	35
	.word	36130
	.byte	34
	.word	36359
	.byte	32
	.word	36402
	.byte	32
	.word	36425
	.byte	36
	.word	36442
	.byte	34
	.word	4875
	.byte	32
	.word	4908
	.byte	32
	.word	4926
	.byte	35
	.word	4949
	.byte	0,35
	.word	36443
	.byte	0,0,35
	.word	36131
	.byte	0,0,35
	.word	38945
	.byte	35
	.word	38946
	.byte	0,0,4,0,0,31
	.word	41284
	.byte	14,4,0,0,31
	.word	41320
	.byte	32
	.word	41350
	.byte	4,0,31
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	14,34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,4,0,0,31
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	41609
	.byte	32
	.word	41654
	.byte	32
	.word	41671
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	41690
	.byte	32
	.word	41742
	.byte	32
	.word	41759
	.byte	32
	.word	41775
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	41795
	.byte	32
	.word	41844
	.byte	32
	.word	41861
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,0,0,31
	.word	41890
	.byte	32
	.word	41931
	.byte	4,0,31
	.word	41950
	.byte	32
	.word	41991
	.byte	4,0,31
	.word	42010
	.byte	32
	.word	42052
	.byte	4,0,31
	.word	42071
	.byte	32
	.word	42098
	.byte	4,0,31
	.word	42120
	.byte	32
	.word	42162
	.byte	4,0,31
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	4,0,31
	.word	42270
	.byte	32
	.word	42304
	.byte	4,0,31
	.word	42632
	.byte	32
	.word	42659
	.byte	4,0,31
	.word	42797
	.byte	32
	.word	42819
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	42838
	.byte	32
	.word	42869
	.byte	4,0,31
	.word	42886
	.byte	32
	.word	42920
	.byte	32
	.word	42935
	.byte	4,0,31
	.word	42961
	.byte	32
	.word	42994
	.byte	32
	.word	43009
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	43028
	.byte	32
	.word	43060
	.byte	14,34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,4,34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,4,34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,4,34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,4,0,0,31
	.word	43082
	.byte	32
	.word	43116
	.byte	4,0,31
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	14,14,4,0,0,0,31
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	14,4,34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,4,34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,4,34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,4,34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,4,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,4,0,0,31
	.word	43312
	.byte	32
	.word	43351
	.byte	4,0,31
	.word	43368
	.byte	32
	.word	43415
	.byte	32
	.word	43440
	.byte	32
	.word	43453
	.byte	4,0,31
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	14,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	14,4,34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,4,34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,4,0,0,31
	.word	43755
	.byte	32
	.word	43796
	.byte	4,0,31
	.word	43813
	.byte	32
	.word	43854
	.byte	4,0,31
	.word	44563
	.byte	32
	.word	44600
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	44631
	.byte	32
	.word	44671
	.byte	14,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,4,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,4,0,0,31
	.word	44691
	.byte	32
	.word	44714
	.byte	32
	.word	44729
	.byte	14,4,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,0,0,31
	.word	44750
	.byte	32
	.word	44774
	.byte	14,4,34
	.word	46202
	.byte	32
	.word	46245
	.byte	35
	.word	46261
	.byte	0,4,0,0,31
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	14,34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,4,34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,4,0,0,31
	.word	44872
	.byte	32
	.word	44893
	.byte	32
	.word	44909
	.byte	32
	.word	44926
	.byte	32
	.word	44939
	.byte	14,34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,4,34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,4,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,4,0,0,31
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	14,34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,4,34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,4,34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,4,0,0,31
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	14,34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,4,34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,4,34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,4,34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,4,0,0,31
	.word	45106
	.byte	32
	.word	45143
	.byte	14,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,4,0,0,31
	.word	45163
	.byte	32
	.word	45183
	.byte	32
	.word	45199
	.byte	32
	.word	45216
	.byte	32
	.word	45230
	.byte	14,14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44872
	.byte	32
	.word	44893
	.byte	32
	.word	44909
	.byte	32
	.word	44926
	.byte	32
	.word	44939
	.byte	36
	.word	44957
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	44958
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	44959
	.byte	34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,35
	.word	44960
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,4,4,4,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	45264
	.byte	32
	.word	45292
	.byte	32
	.word	45308
	.byte	32
	.word	45325
	.byte	32
	.word	45339
	.byte	14,14,14,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,0,4,4,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,4,4,0,0,31
	.word	45373
	.byte	32
	.word	45401
	.byte	32
	.word	45417
	.byte	14,14,14,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,0,4,4,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,4,0,0,31
	.word	45447
	.byte	32
	.word	45482
	.byte	32
	.word	45498
	.byte	14,14,14,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	45106
	.byte	32
	.word	45143
	.byte	36
	.word	45159
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	45160
	.byte	0,0,0,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,4,0,0,31
	.word	45527
	.byte	32
	.word	45554
	.byte	32
	.word	45570
	.byte	14,14,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	45596
	.byte	32
	.word	45631
	.byte	32
	.word	45648
	.byte	36
	.word	45666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	45667
	.byte	34
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	35
	.word	312
	.byte	0,35
	.word	45668
	.byte	0,0,34
	.word	45969
	.byte	32
	.word	45994
	.byte	32
	.word	46010
	.byte	32
	.word	46027
	.byte	36
	.word	46043
	.byte	36
	.word	46044
	.byte	36
	.word	46045
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46047
	.byte	35
	.word	46048
	.byte	35
	.word	46049
	.byte	35
	.word	46050
	.byte	35
	.word	46051
	.byte	35
	.word	46052
	.byte	35
	.word	46053
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,0,0,31
	.word	45596
	.byte	32
	.word	45631
	.byte	32
	.word	45648
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	35
	.word	312
	.byte	0,4,0,0,31
	.word	45671
	.byte	32
	.word	45697
	.byte	32
	.word	45713
	.byte	32
	.word	45731
	.byte	14,14,34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	45596
	.byte	32
	.word	45631
	.byte	32
	.word	45648
	.byte	36
	.word	45666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	45667
	.byte	34
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	35
	.word	312
	.byte	0,35
	.word	45668
	.byte	0,0,34
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	36
	.word	46129
	.byte	36
	.word	46130
	.byte	36
	.word	46131
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46133
	.byte	35
	.word	46134
	.byte	35
	.word	46135
	.byte	35
	.word	46136
	.byte	35
	.word	46137
	.byte	35
	.word	46138
	.byte	35
	.word	46139
	.byte	35
	.word	46140
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,0,0,31
	.word	45757
	.byte	32
	.word	45788
	.byte	14,14,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	45969
	.byte	32
	.word	45994
	.byte	32
	.word	46010
	.byte	32
	.word	46027
	.byte	36
	.word	46043
	.byte	36
	.word	46044
	.byte	36
	.word	46045
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46047
	.byte	35
	.word	46048
	.byte	35
	.word	46049
	.byte	35
	.word	46050
	.byte	35
	.word	46051
	.byte	35
	.word	46052
	.byte	35
	.word	46053
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,0,0,31
	.word	45811
	.byte	32
	.word	45841
	.byte	14,14,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	36
	.word	46129
	.byte	36
	.word	46130
	.byte	36
	.word	46131
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46133
	.byte	35
	.word	46134
	.byte	35
	.word	46135
	.byte	35
	.word	46136
	.byte	35
	.word	46137
	.byte	35
	.word	46138
	.byte	35
	.word	46139
	.byte	35
	.word	46140
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,0,0,31
	.word	45864
	.byte	32
	.word	45894
	.byte	14,14,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	45969
	.byte	32
	.word	45994
	.byte	32
	.word	46010
	.byte	32
	.word	46027
	.byte	36
	.word	46043
	.byte	36
	.word	46044
	.byte	36
	.word	46045
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46047
	.byte	35
	.word	46048
	.byte	35
	.word	46049
	.byte	35
	.word	46050
	.byte	35
	.word	46051
	.byte	35
	.word	46052
	.byte	35
	.word	46053
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,0,0,31
	.word	45917
	.byte	32
	.word	45946
	.byte	14,14,34
	.word	44631
	.byte	32
	.word	44671
	.byte	36
	.word	44686
	.byte	34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,35
	.word	44687
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,35
	.word	44688
	.byte	0,0,34
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	36
	.word	46129
	.byte	36
	.word	46130
	.byte	36
	.word	46131
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46133
	.byte	35
	.word	46134
	.byte	35
	.word	46135
	.byte	35
	.word	46136
	.byte	35
	.word	46137
	.byte	35
	.word	46138
	.byte	35
	.word	46139
	.byte	35
	.word	46140
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,0,0,31
	.word	45969
	.byte	32
	.word	45994
	.byte	32
	.word	46010
	.byte	32
	.word	46027
	.byte	14,14,14,34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,4,4,4,0,0,31
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	14,14,14,34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,4,4,4,4,4,4,4,4,0,0,31
	.word	46143
	.byte	32
	.word	46184
	.byte	4,0,31
	.word	46202
	.byte	32
	.word	46245
	.byte	4,0,31
	.word	46263
	.byte	32
	.word	46293
	.byte	32
	.word	46306
	.byte	4,0,31
	.word	46328
	.byte	32
	.word	46364
	.byte	4,0,31
	.word	46379
	.byte	32
	.word	46405
	.byte	4,0,31
	.word	46420
	.byte	32
	.word	46446
	.byte	14,34
	.word	41320
	.byte	32
	.word	41350
	.byte	35
	.word	41367
	.byte	0,4,0,0,31
	.word	46499
	.byte	32
	.word	46527
	.byte	4,0,31
	.word	46561
	.byte	32
	.word	46588
	.byte	32
	.word	46602
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,0,0,31
	.word	46619
	.byte	32
	.word	46644
	.byte	32
	.word	46661
	.byte	32
	.word	46677
	.byte	14,34
	.word	46561
	.byte	32
	.word	46588
	.byte	32
	.word	46602
	.byte	36
	.word	46615
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	46616
	.byte	0,0,4,0,0,31
	.word	46694
	.byte	32
	.word	46721
	.byte	32
	.word	46739
	.byte	4,0,31
	.word	46768
	.byte	32
	.word	46794
	.byte	32
	.word	46812
	.byte	4,0,31
	.word	46831
	.byte	32
	.word	46865
	.byte	32
	.word	46883
	.byte	32
	.word	46900
	.byte	4,0,31
	.word	47104
	.byte	32
	.word	47132
	.byte	14,34
	.word	46619
	.byte	32
	.word	46644
	.byte	32
	.word	46661
	.byte	32
	.word	46677
	.byte	36
	.word	46690
	.byte	34
	.word	46561
	.byte	32
	.word	46588
	.byte	32
	.word	46602
	.byte	36
	.word	46615
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	46616
	.byte	0,0,35
	.word	46691
	.byte	0,0,4,0,0,31
	.word	47275
	.byte	32
	.word	47304
	.byte	14,34
	.word	46694
	.byte	32
	.word	46721
	.byte	32
	.word	46739
	.byte	35
	.word	46756
	.byte	0,4,0,0,31
	.word	47510
	.byte	32
	.word	47538
	.byte	14,34
	.word	46619
	.byte	32
	.word	46644
	.byte	32
	.word	46661
	.byte	32
	.word	46677
	.byte	36
	.word	46690
	.byte	34
	.word	46561
	.byte	32
	.word	46588
	.byte	32
	.word	46602
	.byte	36
	.word	46615
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	46616
	.byte	0,0,35
	.word	46691
	.byte	0,0,4,0,0,31
	.word	47681
	.byte	32
	.word	47710
	.byte	14,34
	.word	46694
	.byte	32
	.word	46721
	.byte	32
	.word	46739
	.byte	35
	.word	46756
	.byte	0,4,0,0,31
	.word	47916
	.byte	32
	.word	47944
	.byte	14,34
	.word	46619
	.byte	32
	.word	46644
	.byte	32
	.word	46661
	.byte	32
	.word	46677
	.byte	36
	.word	46690
	.byte	34
	.word	46561
	.byte	32
	.word	46588
	.byte	32
	.word	46602
	.byte	36
	.word	46615
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	46616
	.byte	0,0,35
	.word	46691
	.byte	0,0,4,0,0,31
	.word	48087
	.byte	32
	.word	48116
	.byte	14,34
	.word	46694
	.byte	32
	.word	46721
	.byte	32
	.word	46739
	.byte	35
	.word	46756
	.byte	0,4,0,0,31
	.word	48366
	.byte	32
	.word	48395
	.byte	14,34
	.word	46619
	.byte	32
	.word	46644
	.byte	32
	.word	46661
	.byte	32
	.word	46677
	.byte	36
	.word	46690
	.byte	34
	.word	46561
	.byte	32
	.word	46588
	.byte	32
	.word	46602
	.byte	36
	.word	46615
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	46616
	.byte	0,0,35
	.word	46691
	.byte	0,0,4,0,0,31
	.word	48601
	.byte	32
	.word	48631
	.byte	14,34
	.word	46694
	.byte	32
	.word	46721
	.byte	32
	.word	46739
	.byte	35
	.word	46756
	.byte	0,4,0,0,31
	.word	48726
	.byte	32
	.word	48756
	.byte	14,34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,4,0,0,31
	.word	48934
	.byte	32
	.word	48973
	.byte	14,34
	.word	48726
	.byte	32
	.word	48756
	.byte	36
	.word	48774
	.byte	34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,35
	.word	48775
	.byte	0,0,4,0,0,31
	.word	48995
	.byte	32
	.word	49032
	.byte	14,34
	.word	3891
	.byte	32
	.word	3924
	.byte	35
	.word	3938
	.byte	0,4,0,0,31
	.word	49054
	.byte	32
	.word	49087
	.byte	32
	.word	49105
	.byte	14,34
	.word	314
	.byte	32
	.word	346
	.byte	35
	.word	361
	.byte	0,4,34
	.word	49133
	.byte	32
	.word	49172
	.byte	32
	.word	49190
	.byte	36
	.word	49213
	.byte	34
	.word	48995
	.byte	32
	.word	49032
	.byte	36
	.word	49050
	.byte	34
	.word	3891
	.byte	32
	.word	3924
	.byte	35
	.word	3938
	.byte	0,35
	.word	49051
	.byte	0,0,35
	.word	49214
	.byte	34
	.word	49755
	.byte	32
	.word	49797
	.byte	36
	.word	49815
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	49816
	.byte	34
	.word	3891
	.byte	32
	.word	3924
	.byte	35
	.word	3938
	.byte	0,35
	.word	49817
	.byte	0,0,35
	.word	49215
	.byte	34
	.word	49312
	.byte	32
	.word	49360
	.byte	32
	.word	49378
	.byte	36
	.word	49401
	.byte	36
	.word	49402
	.byte	34
	.word	39716
	.byte	32
	.word	39755
	.byte	32
	.word	39770
	.byte	35
	.word	39788
	.byte	0,34
	.word	39845
	.byte	32
	.word	39873
	.byte	32
	.word	39886
	.byte	36
	.word	39901
	.byte	34
	.word	31428
	.byte	32
	.word	31463
	.byte	32
	.word	31482
	.byte	35
	.word	31497
	.byte	0,35
	.word	39902
	.byte	0,0,34
	.word	39642
	.byte	32
	.word	39670
	.byte	36
	.word	39685
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	39686
	.byte	34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,35
	.word	39687
	.byte	0,0,0,35
	.word	49403
	.byte	34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,35
	.word	49404
	.byte	35
	.word	49405
	.byte	35
	.word	49406
	.byte	0,0,35
	.word	49216
	.byte	34
	.word	49220
	.byte	32
	.word	49263
	.byte	32
	.word	49281
	.byte	36
	.word	49304
	.byte	36
	.word	49305
	.byte	34
	.word	40919
	.byte	32
	.word	40954
	.byte	35
	.word	40968
	.byte	0,34
	.word	33025
	.byte	32
	.word	33072
	.byte	32
	.word	33086
	.byte	35
	.word	33100
	.byte	0,34
	.word	40504
	.byte	32
	.word	40534
	.byte	36
	.word	40549
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	40550
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	40551
	.byte	0,0,0,35
	.word	49306
	.byte	35
	.word	49307
	.byte	35
	.word	49308
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	49309
	.byte	0,0,35
	.word	49217
	.byte	0,0,4,0,0,31
	.word	49133
	.byte	32
	.word	49172
	.byte	32
	.word	49190
	.byte	14,34
	.word	48995
	.byte	32
	.word	49032
	.byte	36
	.word	49050
	.byte	34
	.word	3891
	.byte	32
	.word	3924
	.byte	35
	.word	3938
	.byte	0,35
	.word	49051
	.byte	0,0,4,34
	.word	49755
	.byte	32
	.word	49797
	.byte	36
	.word	49815
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	49816
	.byte	34
	.word	3891
	.byte	32
	.word	3924
	.byte	35
	.word	3938
	.byte	0,35
	.word	49817
	.byte	0,0,4,34
	.word	49312
	.byte	32
	.word	49360
	.byte	32
	.word	49378
	.byte	36
	.word	49401
	.byte	36
	.word	49402
	.byte	34
	.word	39716
	.byte	32
	.word	39755
	.byte	32
	.word	39770
	.byte	35
	.word	39788
	.byte	0,34
	.word	39845
	.byte	32
	.word	39873
	.byte	32
	.word	39886
	.byte	36
	.word	39901
	.byte	34
	.word	31428
	.byte	32
	.word	31463
	.byte	32
	.word	31482
	.byte	35
	.word	31497
	.byte	0,35
	.word	39902
	.byte	0,0,34
	.word	39642
	.byte	32
	.word	39670
	.byte	36
	.word	39685
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	39686
	.byte	34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,35
	.word	39687
	.byte	0,0,0,35
	.word	49403
	.byte	34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,35
	.word	49404
	.byte	35
	.word	49405
	.byte	35
	.word	49406
	.byte	0,0,4,34
	.word	49220
	.byte	32
	.word	49263
	.byte	32
	.word	49281
	.byte	36
	.word	49304
	.byte	36
	.word	49305
	.byte	34
	.word	40919
	.byte	32
	.word	40954
	.byte	35
	.word	40968
	.byte	0,34
	.word	33025
	.byte	32
	.word	33072
	.byte	32
	.word	33086
	.byte	35
	.word	33100
	.byte	0,34
	.word	40504
	.byte	32
	.word	40534
	.byte	36
	.word	40549
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	40550
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	40551
	.byte	0,0,0,35
	.word	49306
	.byte	35
	.word	49307
	.byte	35
	.word	49308
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	49309
	.byte	0,0,4,0,0,31
	.word	49220
	.byte	32
	.word	49263
	.byte	32
	.word	49281
	.byte	14,14,34
	.word	40919
	.byte	32
	.word	40954
	.byte	35
	.word	40968
	.byte	0,34
	.word	33025
	.byte	32
	.word	33072
	.byte	32
	.word	33086
	.byte	35
	.word	33100
	.byte	0,34
	.word	40504
	.byte	32
	.word	40534
	.byte	36
	.word	40549
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	40550
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	40551
	.byte	0,0,0,4,4,4,34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,4,0,0,31
	.word	49312
	.byte	32
	.word	49360
	.byte	32
	.word	49378
	.byte	14,14,34
	.word	39716
	.byte	32
	.word	39755
	.byte	32
	.word	39770
	.byte	35
	.word	39788
	.byte	0,34
	.word	39845
	.byte	32
	.word	39873
	.byte	32
	.word	39886
	.byte	36
	.word	39901
	.byte	34
	.word	31428
	.byte	32
	.word	31463
	.byte	32
	.word	31482
	.byte	35
	.word	31497
	.byte	0,35
	.word	39902
	.byte	0,0,34
	.word	39642
	.byte	32
	.word	39670
	.byte	36
	.word	39685
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	39686
	.byte	34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,35
	.word	39687
	.byte	0,0,0,4,34
	.word	38119
	.byte	32
	.word	38146
	.byte	35
	.word	38162
	.byte	0,4,4,4,0,0,31
	.word	49409
	.byte	32
	.word	49444
	.byte	32
	.word	49462
	.byte	14,34
	.word	48726
	.byte	32
	.word	48756
	.byte	36
	.word	48774
	.byte	34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,35
	.word	48775
	.byte	0,0,4,34
	.word	32955
	.byte	32
	.word	32995
	.byte	32
	.word	33009
	.byte	35
	.word	33023
	.byte	0,4,34
	.word	40870
	.byte	32
	.word	40901
	.byte	36
	.word	40915
	.byte	34
	.word	40769
	.byte	32
	.word	40795
	.byte	36
	.word	40809
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	40810
	.byte	0,0,35
	.word	40916
	.byte	0,0,4,34
	.word	41011
	.byte	32
	.word	41043
	.byte	36
	.word	41057
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	41058
	.byte	34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,35
	.word	41059
	.byte	34
	.word	34296
	.byte	32
	.word	34328
	.byte	35
	.word	34342
	.byte	0,35
	.word	41060
	.byte	0,0,4,0,0,31
	.word	49483
	.byte	32
	.word	49510
	.byte	32
	.word	49528
	.byte	14,34
	.word	48726
	.byte	32
	.word	48756
	.byte	36
	.word	48774
	.byte	34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,35
	.word	48775
	.byte	0,0,4,34
	.word	32955
	.byte	32
	.word	32995
	.byte	32
	.word	33009
	.byte	35
	.word	33023
	.byte	0,4,34
	.word	40870
	.byte	32
	.word	40901
	.byte	36
	.word	40915
	.byte	34
	.word	40769
	.byte	32
	.word	40795
	.byte	36
	.word	40809
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	40810
	.byte	0,0,35
	.word	40916
	.byte	0,0,4,34
	.word	41011
	.byte	32
	.word	41043
	.byte	36
	.word	41057
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	41058
	.byte	34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,35
	.word	41059
	.byte	34
	.word	34296
	.byte	32
	.word	34328
	.byte	35
	.word	34342
	.byte	0,35
	.word	41060
	.byte	0,0,4,0,0,31
	.word	49549
	.byte	32
	.word	49593
	.byte	14,34
	.word	48934
	.byte	32
	.word	48973
	.byte	36
	.word	48991
	.byte	34
	.word	48726
	.byte	32
	.word	48756
	.byte	36
	.word	48774
	.byte	34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,35
	.word	48775
	.byte	0,0,35
	.word	48992
	.byte	0,0,4,34
	.word	31904
	.byte	32
	.word	31940
	.byte	32
	.word	31962
	.byte	36
	.word	31985
	.byte	36
	.word	31986
	.byte	34
	.word	31499
	.byte	32
	.word	31531
	.byte	32
	.word	31547
	.byte	35
	.word	31563
	.byte	0,34
	.word	30947
	.byte	32
	.word	30974
	.byte	35
	.word	30989
	.byte	0,34
	.word	31001
	.byte	32
	.word	31028
	.byte	36
	.word	31043
	.byte	34
	.word	31630
	.byte	32
	.word	31663
	.byte	35
	.word	31678
	.byte	0,35
	.word	31044
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31045
	.byte	0,0,0,35
	.word	31987
	.byte	35
	.word	31988
	.byte	35
	.word	31989
	.byte	0,0,4,0,0,31
	.word	49616
	.byte	32
	.word	49653
	.byte	4,0,31
	.word	49669
	.byte	32
	.word	49706
	.byte	32
	.word	49724
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	49616
	.byte	32
	.word	49653
	.byte	35
	.word	49667
	.byte	0,4,34
	.word	3731
	.byte	32
	.word	3761
	.byte	35
	.word	3779
	.byte	0,4,34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,4,34
	.word	33781
	.byte	32
	.word	33823
	.byte	35
	.word	33837
	.byte	0,4,34
	.word	37861
	.byte	32
	.word	37894
	.byte	35
	.word	37910
	.byte	0,4,34
	.word	40504
	.byte	32
	.word	40534
	.byte	36
	.word	40549
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	40550
	.byte	34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,35
	.word	40551
	.byte	0,0,4,34
	.word	3411
	.byte	32
	.word	3433
	.byte	35
	.word	3450
	.byte	0,4,34
	.word	3940
	.byte	32
	.word	3970
	.byte	35
	.word	3984
	.byte	0,4,34
	.word	38073
	.byte	32
	.word	38101
	.byte	35
	.word	38117
	.byte	0,4,34
	.word	45671
	.byte	32
	.word	45697
	.byte	32
	.word	45713
	.byte	32
	.word	45731
	.byte	36
	.word	45749
	.byte	36
	.word	45750
	.byte	34
	.word	44563
	.byte	32
	.word	44600
	.byte	36
	.word	44617
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	44618
	.byte	0,0,34
	.word	45596
	.byte	32
	.word	45631
	.byte	32
	.word	45648
	.byte	36
	.word	45666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	45667
	.byte	34
	.word	255
	.byte	32
	.word	283
	.byte	32
	.word	295
	.byte	35
	.word	312
	.byte	0,35
	.word	45668
	.byte	0,0,34
	.word	46056
	.byte	32
	.word	46080
	.byte	32
	.word	46096
	.byte	32
	.word	46113
	.byte	36
	.word	46129
	.byte	36
	.word	46130
	.byte	36
	.word	46131
	.byte	34
	.word	43312
	.byte	32
	.word	43351
	.byte	35
	.word	43366
	.byte	0,34
	.word	44795
	.byte	32
	.word	44815
	.byte	32
	.word	44831
	.byte	32
	.word	44844
	.byte	36
	.word	44867
	.byte	34
	.word	45034
	.byte	32
	.word	45055
	.byte	32
	.word	45071
	.byte	32
	.word	45086
	.byte	36
	.word	45099
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45100
	.byte	34
	.word	41950
	.byte	32
	.word	41991
	.byte	35
	.word	42008
	.byte	0,35
	.word	45101
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45102
	.byte	34
	.word	43477
	.byte	32
	.word	43501
	.byte	32
	.word	43526
	.byte	32
	.word	43552
	.byte	32
	.word	43567
	.byte	36
	.word	43580
	.byte	35
	.word	43581
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43582
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43583
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43584
	.byte	0,0,35
	.word	45103
	.byte	0,0,35
	.word	44868
	.byte	34
	.word	43229
	.byte	32
	.word	43264
	.byte	32
	.word	43279
	.byte	36
	.word	43303
	.byte	35
	.word	43304
	.byte	34
	.word	43133
	.byte	32
	.word	43184
	.byte	32
	.word	43199
	.byte	36
	.word	43223
	.byte	36
	.word	43224
	.byte	35
	.word	43225
	.byte	0,0,0,35
	.word	43305
	.byte	34
	.word	42270
	.byte	32
	.word	42304
	.byte	35
	.word	42325
	.byte	0,35
	.word	43306
	.byte	34
	.word	43671
	.byte	32
	.word	43706
	.byte	32
	.word	43727
	.byte	36
	.word	43749
	.byte	35
	.word	43750
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43751
	.byte	34
	.word	42184
	.byte	32
	.word	42223
	.byte	32
	.word	42244
	.byte	35
	.word	42268
	.byte	0,35
	.word	43752
	.byte	0,0,35
	.word	43307
	.byte	34
	.word	41369
	.byte	32
	.word	41405
	.byte	32
	.word	41422
	.byte	32
	.word	41437
	.byte	36
	.word	41461
	.byte	34
	.word	41465
	.byte	32
	.word	41509
	.byte	32
	.word	41535
	.byte	32
	.word	41565
	.byte	32
	.word	41580
	.byte	36
	.word	41604
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41605
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	41606
	.byte	0,0,35
	.word	41462
	.byte	0,0,35
	.word	43308
	.byte	34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,35
	.word	43309
	.byte	0,0,35
	.word	44869
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	44963
	.byte	32
	.word	44984
	.byte	32
	.word	45000
	.byte	32
	.word	45015
	.byte	36
	.word	45028
	.byte	34
	.word	43082
	.byte	32
	.word	43116
	.byte	35
	.word	43131
	.byte	0,35
	.word	45029
	.byte	34
	.word	42010
	.byte	32
	.word	42052
	.byte	35
	.word	42069
	.byte	0,35
	.word	45030
	.byte	34
	.word	43587
	.byte	32
	.word	43611
	.byte	32
	.word	43637
	.byte	32
	.word	43652
	.byte	36
	.word	43665
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43666
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43667
	.byte	34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,35
	.word	43668
	.byte	0,0,35
	.word	45031
	.byte	0,0,34
	.word	43028
	.byte	32
	.word	43060
	.byte	36
	.word	43075
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43076
	.byte	34
	.word	43813
	.byte	32
	.word	43854
	.byte	35
	.word	43869
	.byte	0,35
	.word	43077
	.byte	34
	.word	43755
	.byte	32
	.word	43796
	.byte	35
	.word	43811
	.byte	0,35
	.word	43078
	.byte	34
	.word	42120
	.byte	32
	.word	42162
	.byte	35
	.word	42182
	.byte	0,35
	.word	43079
	.byte	0,0,0,34
	.word	31685
	.byte	32
	.word	31706
	.byte	36
	.word	31720
	.byte	35
	.word	31721
	.byte	34
	.word	30831
	.byte	35
	.word	30880
	.byte	0,35
	.word	31722
	.byte	0,0,34
	.word	31735
	.byte	32
	.word	31756
	.byte	36
	.word	31771
	.byte	34
	.word	30892
	.byte	32
	.word	30925
	.byte	35
	.word	30940
	.byte	0,35
	.word	31772
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	46133
	.byte	35
	.word	46134
	.byte	35
	.word	46135
	.byte	35
	.word	46136
	.byte	35
	.word	46137
	.byte	35
	.word	46138
	.byte	35
	.word	46139
	.byte	35
	.word	46140
	.byte	0,0,0,34
	.word	46143
	.byte	32
	.word	46184
	.byte	35
	.word	46200
	.byte	0,35
	.word	45751
	.byte	35
	.word	45752
	.byte	35
	.word	45753
	.byte	35
	.word	45754
	.byte	0,0,4,34
	.word	49483
	.byte	32
	.word	49510
	.byte	32
	.word	49528
	.byte	36
	.word	49542
	.byte	34
	.word	48726
	.byte	32
	.word	48756
	.byte	36
	.word	48774
	.byte	34
	.word	4153
	.byte	32
	.word	4179
	.byte	35
	.word	4193
	.byte	0,35
	.word	48775
	.byte	0,0,35
	.word	49543
	.byte	34
	.word	32955
	.byte	32
	.word	32995
	.byte	32
	.word	33009
	.byte	35
	.word	33023
	.byte	0,35
	.word	49544
	.byte	34
	.word	40870
	.byte	32
	.word	40901
	.byte	36
	.word	40915
	.byte	34
	.word	40769
	.byte	32
	.word	40795
	.byte	36
	.word	40809
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	40810
	.byte	0,0,35
	.word	40916
	.byte	0,0,35
	.word	49545
	.byte	34
	.word	41011
	.byte	32
	.word	41043
	.byte	36
	.word	41057
	.byte	34
	.word	40461
	.byte	32
	.word	40489
	.byte	35
	.word	40502
	.byte	0,35
	.word	41058
	.byte	34
	.word	37972
	.byte	32
	.word	38001
	.byte	35
	.word	38017
	.byte	0,35
	.word	41059
	.byte	34
	.word	34296
	.byte	32
	.word	34328
	.byte	35
	.word	34342
	.byte	0,35
	.word	41060
	.byte	0,0,35
	.word	49546
	.byte	0,0,4,0,0,31
	.word	49755
	.byte	32
	.word	49797
	.byte	14,34
	.word	363
	.byte	32
	.word	381
	.byte	35
	.word	400
	.byte	0,4,34
	.word	3891
	.byte	32
	.word	3924
	.byte	35
	.word	3938
	.byte	0,4,0,0,38
	.byte	'__INDIRECT__',0,100,1,1,1,1,1,39,1,11
	.word	94104
	.byte	13
	.byte	'__codeptr',0,100,1,1
	.word	94106
	.byte	13
	.byte	'boolean',0,101,101,31
	.word	402
	.byte	13
	.byte	'uint8',0,101,104,31
	.word	402
	.byte	13
	.byte	'sint16',0,101,105,31
	.word	7974
	.byte	13
	.byte	'uint16',0,101,106,31
	.word	5373
	.byte	2
	.byte	'long int',0,4,5,13
	.byte	'sint32',0,101,107,31
	.word	94189
	.byte	13
	.byte	'uint32',0,101,108,31
	.word	138
	.byte	13
	.byte	'uint8_least',0,101,111,31
	.word	402
	.byte	13
	.byte	'uint16_least',0,101,113,31
	.word	5373
	.byte	13
	.byte	'uint64',0,101,121,30
	.word	11684
	.byte	13
	.byte	'StatusType',0,26,127,23
	.word	402
	.byte	13
	.byte	'Std_ReturnType',0,26,132,1,15
	.word	402
	.byte	13
	.byte	'Std_VersionInfoType',0,26,141,1,3
	.word	12233
	.byte	13
	.byte	'Os_LockType',0,6,58,32
	.word	3044
	.byte	13
	.byte	'Os_LockConfigType',0,6,61,38
	.word	3179
	.byte	13
	.byte	'Os_ResourceType',0,102,60,36
	.word	48654
	.byte	13
	.byte	'Os_ResourceConfigType',0,102,64,42
	.word	17952
	.byte	13
	.byte	'Os_ResourceInterruptConfigType',0,102,68,51
	.word	48840
	.byte	13
	.byte	'Os_AppAccessMaskType',0,15,117,17
	.word	138
	.byte	13
	.byte	'ApplicationType',0,15,126,3
	.word	11538
	.byte	13
	.byte	'TrustedFunctionIndexType',0,15,132,1,3
	.word	12629
	.byte	13
	.byte	'Os_NonTrustedFunctionIndexType',0,15,138,1,3
	.word	12914
	.byte	13
	.byte	'Os_FastTrustedFunctionIndexType',0,15,144,1,3
	.word	13000
	.byte	13
	.byte	'TaskType',0,15,157,1,3
	.word	12359
	.byte	13
	.byte	'ISRType',0,15,166,1,3
	.word	11715
	.byte	13
	.byte	'AlarmType',0,15,176,1,3
	.word	11345
	.byte	13
	.byte	'CounterType',0,15,183,1,3
	.word	11642
	.byte	13
	.byte	'ScheduleTableType',0,15,189,1,3
	.word	12155
	.byte	13
	.byte	'ResourceType',0,15,196,1,3
	.word	11879
	.byte	13
	.byte	'SpinlockIdType',0,15,203,1,3
	.word	12180
	.byte	13
	.byte	'Os_PeripheralIdType',0,15,209,1,3
	.word	13172
	.byte	13
	.byte	'Os_BarrierIdType',0,15,215,1,3
	.word	13244
	.byte	13
	.byte	'Os_TraceThreadIdType',0,15,222,1,3
	.word	7100
	.byte	13
	.byte	'Os_TraceSpinlockIdType',0,15,230,1,3
	.word	5578
	.byte	13
	.byte	'Os_Hal_AddressType',0,103,61,16
	.word	138
	.byte	13
	.byte	'Os_ExceptionContextType',0,103,66,44
	.word	13281
	.byte	13
	.byte	'AppModeType',0,3,216,1,16
	.word	402
	.byte	13
	.byte	'IdleModeType',0,3,234,1,3
	.word	11789
	.byte	13
	.byte	'Os_InterruptSourceIdType',0,3,238,1,16
	.word	138
	.byte	13
	.byte	'Os_ExceptionSourceIdType',0,3,246,1,16
	.word	138
	.byte	13
	.byte	'TryToGetSpinlockType',0,3,142,2,2
	.word	12711
	.byte	13
	.byte	'TaskStateType',0,3,175,2,3
	.word	12525
	.byte	13
	.byte	'EventMaskType',0,3,182,2,16
	.word	11684
	.byte	13
	.byte	'EventMaskRefType',0,3,185,2,56
	.word	11710
	.byte	13
	.byte	'Os_TickType',0,3,200,2,19
	.word	138
	.byte	13
	.byte	'TickType',0,3,206,2,21
	.word	138
	.byte	13
	.byte	'AlarmBaseType',0,3,228,2,2
	.word	11242
	.byte	7,3,235,2,9,1,8
	.byte	'NO_ACCESS',0,0,8
	.byte	'ACCESS',0,1,0,13
	.byte	'ObjectAccessType',0,3,239,2,3
	.word	95265
	.byte	13
	.byte	'RestartType',0,3,249,2,3
	.word	11921
	.byte	13
	.byte	'ApplicationStateType',0,3,133,3,3
	.word	5969
	.byte	13
	.byte	'ObjectTypeType',0,3,147,3,3
	.word	12789
	.byte	13
	.byte	'Os_ObjectIdType',0,3,151,3,16
	.word	138
	.byte	13
	.byte	'OSServiceIdType',0,3,156,4,3
	.word	8035
	.byte	13
	.byte	'Os_StatusType',0,3,232,5,3
	.word	419
	.byte	13
	.byte	'ProtectionReturnType',0,3,247,5,3
	.word	17454
	.byte	13
	.byte	'Os_ErrorInformationType',0,3,143,6,3
	.word	11180
	.byte	13
	.byte	'ScheduleTableStatusType',0,3,192,6,3
	.word	11974
	.byte	13
	.byte	'Os_AccessCheckAddress',0,3,199,6,29
	.word	138
	.byte	13
	.byte	'MemorySizeType',0,3,207,6,31
	.word	138
	.byte	13
	.byte	'Os_MemAccessType',0,3,233,6,3
	.word	28737
	.byte	13
	.byte	'AccessType',0,3,235,6,26
	.word	28737
	.byte	13
	.byte	'Os_CoreStartStateType',0,3,134,7,2
	.word	13570
	.byte	13
	.byte	'CoreIdType',0,21,91,3
	.word	6805
	.byte	16,8
	.word	18063
	.byte	17,1,0,12
	.word	95714
	.byte	40
	.byte	'OsCfg_ResourceRefs',0,104,97,64
	.word	95723
	.byte	1,1,13
	.byte	'Os_AppMaskType',0,105,85,16
	.word	138
	.byte	13
	.byte	'Os_AppConfigType',0,105,88,37
	.word	27357
	.byte	13
	.byte	'Os_ErrorType',0,106,56,33
	.word	15593
	.byte	13
	.byte	'Os_ErrorParamsType',0,106,58,39
	.word	15513
	.byte	13
	.byte	'Os_StdReturnType',0,107,74,22
	.word	239
	.byte	13
	.byte	'Os_WordType',0,107,77,22
	.word	239
	.byte	13
	.byte	'Os_ObjIdxType',0,107,80,16
	.word	5373
	.byte	13
	.byte	'Os_ObjIdx_IteratorType',0,107,81,22
	.word	5373
	.byte	13
	.byte	'Os_ParamType',0,107,84,32
	.word	13770
	.byte	13
	.byte	'Os_HookConfigType',0,29,106,38
	.word	17088
	.byte	13
	.byte	'Os_HookStatusHookConfigType',0,29,109,48
	.word	17373
	.byte	13
	.byte	'Os_HookCallbackConfigType',0,29,112,46
	.word	17247
	.byte	13
	.byte	'Os_HookProtectionHookConfigType',0,29,115,52
	.word	17668
	.byte	13
	.byte	'Os_HookInitHookConfigType',0,29,118,46
	.word	17784
	.byte	13
	.byte	'Os_HookFlagType',0,29,120,16
	.word	138
	.byte	13
	.byte	'Os_HookInfoType',0,29,127,3
	.word	15777
	.byte	13
	.byte	'Os_HookIdType',0,29,130,1,16
	.word	138
	.byte	13
	.byte	'Os_LockTypeType',0,5,78,3
	.word	3085
	.byte	13
	.byte	'Os_CoreStatusType',0,28,61,38
	.word	6178
	.byte	13
	.byte	'Os_CoreAsrStatusType',0,28,64,41
	.word	34023
	.byte	13
	.byte	'Os_CoreConfigType',0,28,67,38
	.word	7438
	.byte	13
	.byte	'Os_CoreAsrType',0,28,70,35
	.word	15835
	.byte	13
	.byte	'Os_CoreAsrConfigType',0,28,73,41
	.word	23954
	.byte	13
	.byte	'Os_SystemConfigType',0,28,76,40
	.word	34913
	.byte	13
	.byte	'Os_CorePhysicalIdType',0,28,82,16
	.word	138
	.byte	13
	.byte	'Os_CoreBootBarrierContentType',0,28,89,16
	.word	138
	.byte	13
	.byte	'Os_UnhandledEventReportType',0,28,104,3
	.word	15696
	.byte	13
	.byte	'Os_Hal_ContextType',0,108,66,39
	.word	4982
	.byte	13
	.byte	'Os_Hal_ContextConfigType',0,108,70,45
	.word	4680
	.byte	13
	.byte	'Os_Hal_ContextStackConfigType',0,108,74,50
	.word	35654
	.byte	13
	.byte	'Os_Hal_ContextFpuContextType',0,108,78,49
	.word	23775
	.byte	13
	.byte	'Os_ThreadClassType',0,59,183,3,39
	.word	23845
	.byte	13
	.byte	'Os_ThreadType',0,59,186,3,34
	.word	28440
	.byte	13
	.byte	'Os_ThreadConfigType',0,59,189,3,40
	.word	29441
	.byte	13
	.byte	'Os_CallContextType',0,59,193,3,23
	.word	5373
	.byte	13
	.byte	'Os_ThreadContextRefType',0,59,199,3,61
	.word	5165
	.byte	13
	.byte	'Os_TaskPrioType',0,109,76,16
	.word	5373
	.byte	13
	.byte	'Os_SchedulerType',0,109,83,37
	.word	16607
	.byte	13
	.byte	'Os_SchedulerConfigType',0,109,86,43
	.word	16857
	.byte	13
	.byte	'Os_Hal_IntGlobalStateType',0,110,66,16
	.word	138
	.byte	13
	.byte	'Os_Hal_IntLevelType',0,110,73,16
	.word	138
	.byte	13
	.byte	'Os_Hal_IntTrapStateType',0,110,82,16
	.word	138
	.byte	13
	.byte	'Os_Hal_IntStateType',0,110,89,16
	.word	138
	.byte	13
	.byte	'Os_Hal_IntSourceType',0,110,95,16
	.word	138
	.byte	13
	.byte	'Os_Hal_IntIsrConfigType',0,110,99,44
	.word	6467
	.byte	13
	.byte	'Os_Hal_IntIsrMapConfigType',0,110,103,47
	.word	6566
	.byte	13
	.byte	'Os_IntApiStateType',0,23,64,39
	.word	7805
	.byte	13
	.byte	'Os_IntStateType',0,23,74,3
	.word	7685
	.byte	13
	.byte	'Os_IntLevelType',0,23,92,3
	.word	39690
	.byte	13
	.byte	'Os_TpType',0,86,69,30
	.word	19905
	.byte	13
	.byte	'Os_TpConfigType',0,86,72,36
	.word	20000
	.byte	13
	.byte	'Os_TpThreadConfigType',0,86,75,42
	.word	28674
	.byte	13
	.byte	'Os_TpBudgetType',0,86,78,36
	.word	43881
	.byte	13
	.byte	'Os_TpBudgetConfigType',0,86,81,42
	.word	44100
	.byte	13
	.byte	'Os_TpOwnerThreadConfigType',0,86,85,47
	.word	44352
	.byte	13
	.byte	'Os_TpOwnerThreadType',0,86,88,41
	.word	44225
	.byte	13
	.byte	'Os_InterArrivalTimeType',0,86,91,16
	.word	11684
	.byte	13
	.byte	'Os_TpMonitoringType',0,86,101,3
	.word	43950
	.byte	13
	.byte	'Os_Hal_BitFieldType',0,111,99,16
	.word	138
	.byte	13
	.byte	'Os_Hal_StackType',0,111,104,16
	.word	138
	.byte	13
	.byte	'Os_Hal_SpinlockType',0,111,108,16
	.word	138
	.byte	13
	.byte	'Os_Hal_SpinlockResultType',0,111,111,29
	.word	138
	.byte	13
	.byte	'Os_Hal_CoreConfigType',0,111,115,42
	.word	6269
	.byte	13
	.byte	'Os_Hal_Core2ThreadType',0,111,118,43
	.word	29818
	.byte	13
	.byte	'Os_Hal_Core2ThreadConfigType',0,111,121,49
	.word	29882
	.byte	13
	.byte	'Os_Hal_CoreAsrConfigType',0,111,125,45
	.word	18112
	.byte	13
	.byte	'Os_Hal_SystemConfigType',0,111,127,16
	.word	138
	.byte	13
	.byte	'Os_Hal_XSigInterruptConfigType',0,111,131,1,51
	.word	22309
	.byte	13
	.byte	'Os_IntApiCntType',0,22,78,16
	.word	5373
	.byte	13
	.byte	'Os_IntLockingStateType',0,22,86,3
	.word	7722
	.byte	13
	.byte	'Os_ResourceInterruptType',0,35,209,1,3
	.word	48778
	.byte	13
	.byte	'Os_Hal_TimerFrtTickType',0,112,66,16
	.word	138
	.byte	13
	.byte	'Os_StackConfigType',0,113,140,1,39
	.word	5175
	.byte	13
	.byte	'Os_TaskType',0,114,58,32
	.word	40606
	.byte	13
	.byte	'Os_TaskConfigType',0,114,61,38
	.word	16306
	.byte	13
	.byte	'Os_IsrHwConfigType',0,54,54,39
	.word	6629
	.byte	9
	.byte	'Os_IsrType_Tag',0,19,172,1,8,28,10
	.byte	'Thread',0
	.word	28440
	.byte	24,2,35,0,10
	.byte	'IsKilled',0
	.word	402
	.byte	1,2,35,24,0,13
	.byte	'Os_IsrType',0,54,57,31
	.word	97942
	.byte	13
	.byte	'Os_IsrConfigType',0,54,60,37
	.word	21768
	.byte	13
	.byte	'Os_IsrCat1ConfigType',0,54,63,41
	.word	24697
	.byte	13
	.byte	'Os_CoreAsrCoreIdx',0,45,90,3
	.word	20075
	.byte	16,8
	.word	33647
	.byte	17,1,0,12
	.word	98097
	.byte	40
	.byte	'OsCfg_CorePhysicalRefs',0,45,108,60
	.word	98106
	.byte	1,1,13
	.byte	'Os_ServiceCallType',0,90,63,39
	.word	28238
	.byte	13
	.byte	'Os_ServiceConfigType',0,90,71,41
	.word	27202
	.byte	16,2
	.word	402
	.byte	17,1,0,9
	.byte	'Os_ServiceStackPoolType_Tag',0,57,162,2,8,2,10
	.byte	'AccessCounter',0
	.word	98200
	.byte	2,2,35,0,0,11
	.word	98209
	.byte	9
	.byte	'Os_ServiceStackConfigType_Tag',0,57,148,2,9,12,10
	.byte	'Stack',0
	.word	5250
	.byte	4,2,35,0,10
	.byte	'HwConfig',0
	.word	35750
	.byte	4,2,35,4,10
	.byte	'PoolIndex',0
	.word	402
	.byte	1,2,35,8,0,12
	.word	98272
	.byte	11
	.word	98361
	.byte	9
	.byte	'Os_ServiceStackPoolConfigType_Tag',0,57,170,2,8,24,10
	.byte	'Dyn',0
	.word	98267
	.byte	4,2,35,0,10
	.byte	'AvailabilityMap',0
	.word	16179
	.byte	12,2,35,4,10
	.byte	'Stacks',0
	.word	98366
	.byte	4,2,35,16,10
	.byte	'StackCount',0
	.word	402
	.byte	1,2,35,20,10
	.byte	'AccessCounter',0
	.word	98200
	.byte	2,2,35,21,0,13
	.byte	'Os_ServiceStackPoolConfigType',0,90,88,50
	.word	98371
	.byte	13
	.byte	'Os_ServiceStackPoolType',0,90,91,44
	.word	98209
	.byte	13
	.byte	'Os_ServiceStackConfigType',0,90,94,48
	.word	98272
	.byte	13
	.byte	'Os_XSigBufferIdxType',0,49,60,23
	.word	5373
	.byte	13
	.byte	'Os_XSigConfigType',0,49,64,38
	.word	22697
	.byte	13
	.byte	'Os_XSigIsrConfigType',0,49,67,41
	.word	22381
	.byte	13
	.byte	'Os_XSigSendDataType',0,49,71,40
	.word	21350
	.byte	13
	.byte	'Os_XSigRecvDataType',0,49,74,40
	.word	21569
	.byte	13
	.byte	'Os_XSigSendPortConfigType',0,49,77,46
	.word	22525
	.byte	13
	.byte	'Os_XSigRecvPortConfigType',0,49,80,46
	.word	22176
	.byte	13
	.byte	'Os_XSigFunctionTableConfigType',0,49,84,51
	.word	22000
	.byte	13
	.byte	'Os_IocLockModeType',0,51,63,2
	.word	22798
	.byte	13
	.byte	'Os_IocChannelStateType',0,51,73,2
	.word	22902
	.byte	13
	.byte	'Os_IocCallbackConfigRefType',0,50,132,3,65
	.word	17321
	.byte	12
	.word	98918
	.byte	11
	.word	98955
	.byte	9
	.byte	'Os_IocCallbacksConfigType_Tag',0,50,135,3,8,8,10
	.byte	'CallbackRefs',0
	.word	98960
	.byte	4,2,35,0,10
	.byte	'CallbackCount',0
	.word	138
	.byte	4,2,35,4,0,13
	.byte	'Os_IocCallbacksConfigType',0,51,77,46
	.word	98965
	.byte	12
	.word	17247
	.byte	11
	.word	99081
	.byte	13
	.byte	'Os_IocLostCounterType',0,51,81,15
	.word	402
	.byte	13
	.byte	'Os_IocConfigType',0,51,83,37
	.word	23233
	.byte	13
	.byte	'Os_IocType',0,51,84,31
	.word	22967
	.byte	12
	.word	.L531-.L72
	.byte	11
	.word	99165
	.byte	9
	.byte	'Os_IocSendConfigType_Tag',0,50,237,3,8,32,10
	.byte	'Base',0
	.word	23233
	.byte	20,2,35,0,10
	.byte	'Callbacks',0
	.word	98965
	.byte	8,2,35,20,10
	.byte	'Receive',0
	.word	99170
	.byte	4,2,35,28,0,12
	.word	99175
	.byte	11
	.word	99257
.L531:
	.byte	9
	.byte	'Os_IocReceiveConfigType_Tag',0,50,211,3,8,24,10
	.byte	'Base',0
	.word	23233
	.byte	20,2,35,0,10
	.byte	'Send',0
	.word	99262
	.byte	4,2,35,20,0,13
	.byte	'Os_IocReceiveConfigType',0,51,86,44
	.word	99267
	.byte	13
	.byte	'Os_IocSendConfigType',0,51,87,41
	.word	99175
	.byte	9
	.byte	'Os_IocSendType_Tag',0,50,224,3,8,2,10
	.byte	'Base',0
	.word	22967
	.byte	1,2,35,0,10
	.byte	'LostCounter',0
	.word	402
	.byte	1,2,35,1,0,13
	.byte	'Os_IocSendType',0,51,88,35
	.word	99391
	.byte	9
	.byte	'Os_IocReceiveType_Tag',0,50,197,3,8,2,10
	.byte	'Base',0
	.word	22967
	.byte	1,2,35,0,10
	.byte	'LostCounterSnapshot',0
	.word	402
	.byte	1,2,35,1,0,13
	.byte	'Os_IocReceiveType',0,51,89,38
	.word	99475
	.byte	9
	.byte	'Os_IocMultiReceiveConfigType_Tag',0,50,140,4,8,24,10
	.byte	'Base',0
	.word	23233
	.byte	20,2,35,0,10
	.byte	'ReceiveChannelCount',0
	.word	5373
	.byte	2,2,35,20,0,13
	.byte	'Os_IocMultiReceiveConfigType',0,51,92,49
	.word	99573
	.byte	9
	.byte	'Os_Ioc08ReceiveConfigType_Tag',0,50,169,4,8,40,10
	.byte	'Ioc',0
	.word	99267
	.byte	24,2,35,0,10
	.byte	'FifoRead',0
	.word	47175
	.byte	16,2,35,24,0,13
	.byte	'Os_Ioc08ReceiveConfigType',0,51,94,46
	.word	99693
	.byte	9
	.byte	'Os_Ioc08SendConfigType_Tag',0,50,209,4,8,48,10
	.byte	'Ioc',0
	.word	99175
	.byte	32,2,35,0,10
	.byte	'FifoWrite',0
	.word	47004
	.byte	16,2,35,32,0,13
	.byte	'Os_Ioc08SendConfigType',0,51,95,43
	.word	99795
	.byte	12
	.word	99693
	.byte	11
	.word	99892
	.byte	9
	.byte	'Os_Ioc08MultiReceiveConfigType_Tag',0,50,183,4,8,28,10
	.byte	'Ioc',0
	.word	99573
	.byte	24,2,35,0,10
	.byte	'Receivers',0
	.word	99897
	.byte	4,2,35,24,0,13
	.byte	'Os_Ioc08MultiReceiveConfigType',0,51,96,51
	.word	99902
	.byte	9
	.byte	'Os_Ioc16ReceiveConfigType_Tag',0,50,239,4,8,40,10
	.byte	'Ioc',0
	.word	99267
	.byte	24,2,35,0,10
	.byte	'FifoRead',0
	.word	47581
	.byte	16,2,35,24,0,13
	.byte	'Os_Ioc16ReceiveConfigType',0,51,100,46
	.word	100015
	.byte	9
	.byte	'Os_Ioc16SendConfigType_Tag',0,50,151,5,8,48,10
	.byte	'Ioc',0
	.word	99175
	.byte	32,2,35,0,10
	.byte	'FifoWrite',0
	.word	47410
	.byte	16,2,35,32,0,13
	.byte	'Os_Ioc16SendConfigType',0,51,101,43
	.word	100117
	.byte	12
	.word	100015
	.byte	11
	.word	100214
	.byte	9
	.byte	'Os_Ioc16MultiReceiveConfigType_Tag',0,50,253,4,8,28,10
	.byte	'Ioc',0
	.word	99573
	.byte	24,2,35,0,10
	.byte	'Receivers',0
	.word	100219
	.byte	4,2,35,24,0,13
	.byte	'Os_Ioc16MultiReceiveConfigType',0,51,102,51
	.word	100224
	.byte	9
	.byte	'Os_Ioc32ReceiveConfigType_Tag',0,50,181,5,8,40,10
	.byte	'Ioc',0
	.word	99267
	.byte	24,2,35,0,10
	.byte	'FifoRead',0
	.word	47987
	.byte	16,2,35,24,0,13
	.byte	'Os_Ioc32ReceiveConfigType',0,51,106,46
	.word	100337
	.byte	9
	.byte	'Os_Ioc32SendConfigType_Tag',0,50,221,5,8,48,10
	.byte	'Ioc',0
	.word	99175
	.byte	32,2,35,0,10
	.byte	'FifoWrite',0
	.word	47816
	.byte	16,2,35,32,0,13
	.byte	'Os_Ioc32SendConfigType',0,51,107,43
	.word	100439
	.byte	12
	.word	100337
	.byte	11
	.word	100536
	.byte	9
	.byte	'Os_Ioc32MultiReceiveConfigType_Tag',0,50,195,5,8,28,10
	.byte	'Ioc',0
	.word	99573
	.byte	24,2,35,0,10
	.byte	'Receivers',0
	.word	100541
	.byte	4,2,35,24,0,13
	.byte	'Os_Ioc32MultiReceiveConfigType',0,51,108,51
	.word	100546
	.byte	9
	.byte	'Os_IocRefReceiveConfigType_Tag',0,50,251,5,8,44,10
	.byte	'Ioc',0
	.word	99267
	.byte	24,2,35,0,10
	.byte	'FifoRead',0
	.word	48483
	.byte	20,2,35,24,0,13
	.byte	'Os_IocRefReceiveConfigType',0,51,112,47
	.word	100659
	.byte	9
	.byte	'Os_IocRefSendConfigType_Tag',0,50,163,6,8,52,10
	.byte	'Ioc',0
	.word	99175
	.byte	32,2,35,0,10
	.byte	'FifoWrite',0
	.word	48247
	.byte	20,2,35,32,0,13
	.byte	'Os_IocRefSendConfigType',0,51,113,44
	.word	100763
	.byte	12
	.word	100659
	.byte	11
	.word	100862
	.byte	9
	.byte	'Os_IocRefMultiReceiveConfigType_Tag',0,50,137,6,8,28,10
	.byte	'Ioc',0
	.word	99573
	.byte	24,2,35,0,10
	.byte	'Receivers',0
	.word	100867
	.byte	4,2,35,24,0,13
	.byte	'Os_IocRefMultiReceiveConfigType',0,51,114,52
	.word	100872
	.byte	23,1,1,24
	.word	11842
	.byte	24
	.word	12665
	.byte	0,11
	.word	100987
	.byte	13
	.byte	'Os_IocCopyCbk',0,50,183,6,9
	.word	101001
	.byte	9
	.byte	'Os_IocReadConfigType_Tag',0,50,213,6,8,28,10
	.byte	'Ioc',0
	.word	23233
	.byte	20,2,35,0,10
	.byte	'Data',0
	.word	11842
	.byte	4,2,35,20,10
	.byte	'CopyCbk',0
	.word	101006
	.byte	4,2,35,24,0,13
	.byte	'Os_IocReadConfigType',0,51,119,41
	.word	101029
	.byte	11
	.word	100987
	.byte	23,1,1,24
	.word	12665
	.byte	0,11
	.word	101139
	.byte	13
	.byte	'Os_IocInitCbk',0,50,195,6,9
	.word	101148
	.byte	9
	.byte	'Os_IocWriteConfigType_Tag',0,50,239,6,8,40,10
	.byte	'Ioc',0
	.word	23233
	.byte	20,2,35,0,10
	.byte	'Data',0
	.word	12665
	.byte	4,2,35,20,10
	.byte	'Callbacks',0
	.word	98965
	.byte	8,2,35,24,10
	.byte	'CopyCbk',0
	.word	101006
	.byte	4,2,35,32,10
	.byte	'InitCbk',0
	.word	101153
	.byte	4,2,35,36,0,13
	.byte	'Os_IocWriteConfigType',0,51,120,42
	.word	101176
	.byte	11
	.word	101139
	.byte	13
	.byte	'Os_BitIndexType',0,115,80,15
	.word	402
	.byte	13
	.byte	'Os_BitFieldType',0,115,84,29
	.word	138
	.byte	13
	.byte	'Os_BitArrayIndexType',0,31,110,16
	.word	5373
	.byte	13
	.byte	'Os_BitArrayType',0,31,119,2
	.word	16139
	.byte	13
	.byte	'Os_BitArrayConfigType',0,31,133,1,2
	.word	16179
	.byte	13
	.byte	'Os_DequeType',0,33,82,2
	.word	16726
	.byte	13
	.byte	'Os_DequeNodeType',0,33,88,2
	.word	16772
	.byte	13
	.byte	'Os_DequeConfigType',0,33,104,2
	.word	16798
	.byte	13
	.byte	'Os_SpinlockType',0,16,54,36
	.word	33282
	.byte	13
	.byte	'Os_SpinlockConfigType',0,16,58,42
	.word	5758
	.byte	13
	.byte	'Os_TraceThreadConfigType',0,116,60,45
	.word	7249
	.byte	13
	.byte	'Os_TraceThreadType',0,116,63,39
	.word	7042
	.byte	13
	.byte	'Os_TraceCoreType',0,116,66,37
	.word	7334
	.byte	13
	.byte	'Os_TraceSpinlockConfigType',0,116,69,47
	.word	5690
	.byte	13
	.byte	'Os_SpinlockMethodType',0,13,145,1,2
	.word	5255
	.byte	13
	.byte	'Os_SpinlockModeType',0,13,156,1,2
	.word	5395
	.byte	13
	.byte	'Os_SpinlockTraceType',0,13,169,1,2
	.word	5454
	.byte	13
	.byte	'Os_SpinlockCheckType',0,13,180,1,2
	.word	5516
	.byte	13
	.byte	'Os_SpinlockOrderType',0,13,184,1,15
	.word	402
	.byte	13
	.byte	'Os_BarrierBaseType',0,53,58,39
	.word	23484
	.byte	13
	.byte	'Os_BarrierBaseConfigType',0,53,60,45
	.word	23608
	.byte	13
	.byte	'Os_BarrierAttendeeIdxType',0,52,110,15
	.word	402
	.byte	13
	.byte	'Os_BarrierCounterType',0,52,113,15
	.word	402
	.byte	13
	.byte	'Os_BarrierAttendeeStateType',0,52,124,2
	.word	23408
	.byte	13
	.byte	'Os_MpSystemConfigType',0,117,54,42
	.word	34853
	.byte	13
	.byte	'Os_MpCoreConfigType',0,117,57,40
	.word	18557
	.byte	13
	.byte	'Os_MpAccessRightsType',0,117,60,42
	.word	27006
	.byte	13
	.byte	'Os_CoreStateType',0,18,231,1,2
	.word	6077
	.byte	13
	.byte	'Os_CoreOsStateType',0,18,247,1,2
	.word	33934
	.byte	13
	.byte	'Os_CoreThreadIdx',0,18,168,2,16
	.word	7974
	.byte	13
	.byte	'Os_Hal_MpSystemConfigType',0,118,59,46
	.word	34789
	.byte	13
	.byte	'Os_Hal_MpCoreConfigType',0,118,63,44
	.word	18240
	.byte	13
	.byte	'Os_Hal_MpAppConfigType',0,118,67,43
	.word	26192
	.byte	13
	.byte	'Os_Hal_MpThreadConfigType',0,118,71,46
	.word	26597
	.byte	13
	.byte	'Os_Hal_MpuRegionRangeConfigType',0,37,75,3
	.word	18173
	.byte	13
	.byte	'Os_AccessCheckIdx',0,119,62,15
	.word	402
	.byte	13
	.byte	'Os_AccessCheckConfigType',0,119,66,45
	.word	29320
	.byte	13
	.byte	'Os_TraceThreadRunReason',0,14,220,2,2
	.word	6864
	.byte	7,14,245,2,9,1,8
	.byte	'OsOrtiApiIdGetApplicationID',0,2,8
	.byte	'OsOrtiApiIdGetISRID',0,4,8
	.byte	'OsOrtiApiIdCallTrustedFunction',0,6,8
	.byte	'OsOrtiApiIdCheckISRMemoryAccess',0,8,8
	.byte	'OsOrtiApiIdCheckTaskMemoryAccess',0,10,8
	.byte	'OsOrtiApiIdCheckObjectAccess',0,12,8
	.byte	'OsOrtiApiIdCheckObjectOwnership',0,14,8
	.byte	'OsOrtiApiIdStartScheduleTableRel',0,16,8
	.byte	'OsOrtiApiIdStartScheduleTableAbs',0,18,8
	.byte	'OsOrtiApiIdStopScheduleTable',0,20,8
	.byte	'OsOrtiApiIdNextScheduleTable',0,22,8
	.byte	'OsOrtiApiIdStartScheduleTableSynchron',0,24,8
	.byte	'OsOrtiApiIdSyncScheduleTable',0,26,8
	.byte	'OsOrtiApiIdSetScheduleTableAsync',0,28,8
	.byte	'OsOrtiApiIdGetScheduleTableStatus',0,30,8
	.byte	'OsOrtiApiIdIncrementCounter',0,32,8
	.byte	'OsOrtiApiIdGetCounterValue',0,34,8
	.byte	'OsOrtiApiIdGetElapsedValue',0,36,8
	.byte	'OsOrtiApiIdTerminateApplication',0,38,8
	.byte	'OsOrtiApiIdAllowAccess',0,40,8
	.byte	'OsOrtiApiIdGetApplicationState',0,42,8
	.byte	'OsOrtiApiIdGetNumberOfActivatedCores',0,44,8
	.byte	'OsOrtiApiIdGetCoreID',0,46,8
	.byte	'OsOrtiApiIdStartCore',0,48,8
	.byte	'OsOrtiApiIdStartNonAutosarCore',0,50,8
	.byte	'OsOrtiApiIdGetSpinlock',0,52,8
	.byte	'OsOrtiApiIdReleaseSpinlock',0,54,8
	.byte	'OsOrtiApiIdTryToGetSpinlock',0,56,8
	.byte	'OsOrtiApiIdShutdownAllCores',0,58,8
	.byte	'OsOrtiApiIdControlIdle',0,60,8
	.byte	'OsOrtiApiIdIocSend',0,62,8
	.byte	'OsOrtiApiIdIocWrite',0,192,0,8
	.byte	'OsOrtiApiIdIocSendGroup',0,194,0,8
	.byte	'OsOrtiApiIdIocWriteGroup',0,196,0,8
	.byte	'OsOrtiApiIdIocReceive',0,198,0,8
	.byte	'OsOrtiApiIdIocRead',0,200,0,8
	.byte	'OsOrtiApiIdIocReceiveGroup',0,202,0,8
	.byte	'OsOrtiApiIdIocReadGroup',0,204,0,8
	.byte	'OsOrtiApiIdIocEmptyQueue',0,206,0,8
	.byte	'OsOrtiApiIdGetCurrentApplicationID',0,208,0,8
	.byte	'OsOrtiApiIdCallNonTrustedFunction',0,210,0,8
	.byte	'OsOrtiApiIdGetTaskStackUsage',0,212,0,8
	.byte	'OsOrtiApiIdGetISRStackUsage',0,214,0,8
	.byte	'OsOrtiApiIdGetKernelStackUsage',0,216,0,8
	.byte	'OsOrtiApiIdGetStartupHookStackUsage',0,218,0,8
	.byte	'OsOrtiApiIdGetErrorHookStackUsage',0,220,0,8
	.byte	'OsOrtiApiIdGetShutdownHookStackUsage',0,222,0,8
	.byte	'OsOrtiApiIdGetProtectionHookStackUsage',0,224,0,8
	.byte	'OsOrtiApiIdGetSemaphore',0,226,0,8
	.byte	'OsOrtiApiIdReleaseSemaphore',0,228,0,8
	.byte	'OsOrtiApiIdStartOS',0,230,0,8
	.byte	'OsOrtiApiIdGetActiveApplicationMode',0,232,0,8
	.byte	'OsOrtiApiIdDisableAllInterrupts',0,234,0,8
	.byte	'OsOrtiApiIdEnableAllInterrupts',0,236,0,8
	.byte	'OsOrtiApiIdSuspendAllInterrupts',0,238,0,8
	.byte	'OsOrtiApiIdResumeAllInterrupts',0,240,0,8
	.byte	'OsOrtiApiIdSuspendOSInterrupts',0,242,0,8
	.byte	'OsOrtiApiIdResumeOSInterrupts',0,244,0,8
	.byte	'OsOrtiApiIdActivateTask',0,246,0,8
	.byte	'OsOrtiApiIdTerminateTask',0,248,0,8
	.byte	'OsOrtiApiIdChainTask',0,250,0,8
	.byte	'OsOrtiApiIdGetTaskID',0,252,0,8
	.byte	'OsOrtiApiIdGetTaskState',0,254,0,8
	.byte	'OsOrtiApiIdSchedule',0,128,1,8
	.byte	'OsOrtiApiIdSetEvent',0,130,1,8
	.byte	'OsOrtiApiIdClearEvent',0,132,1,8
	.byte	'OsOrtiApiIdGetEvent',0,134,1,8
	.byte	'OsOrtiApiIdWaitEvent',0,136,1,8
	.byte	'OsOrtiApiIdGetAlarmBase',0,138,1,8
	.byte	'OsOrtiApiIdGetAlarm',0,140,1,8
	.byte	'OsOrtiApiIdSetRelAlarm',0,142,1,8
	.byte	'OsOrtiApiIdSetAbsAlarm',0,144,1,8
	.byte	'OsOrtiApiIdCancelAlarm',0,146,1,8
	.byte	'OsOrtiApiIdGetResource',0,148,1,8
	.byte	'OsOrtiApiIdReleaseResource',0,150,1,8
	.byte	'OsOrtiApiIdGetVersionInfo',0,152,1,8
	.byte	'OsOrtiApiIdEnterPreStartTask',0,158,1,8
	.byte	'OsOrtiApiIdShutdownOS',0,160,1,8
	.byte	'OsOrtiApiIdGetUnhandledIrq',0,162,1,8
	.byte	'OsOrtiApiIdGetUnhandledExc',0,164,1,8
	.byte	'OsOrtiApiIdDisableOSInterrupts',0,166,1,8
	.byte	'OsOrtiApiIdEnableOSInterrupts',0,168,1,8
	.byte	'OsOrtiApiIdReadPeripheral8',0,170,1,8
	.byte	'OsOrtiApiIdReadPeripheral16',0,172,1,8
	.byte	'OsOrtiApiIdReadPeripheral32',0,174,1,8
	.byte	'OsOrtiApiIdWritePeripheral8',0,176,1,8
	.byte	'OsOrtiApiIdWritePeripheral16',0,178,1,8
	.byte	'OsOrtiApiIdWritePeripheral32',0,180,1,8
	.byte	'OsOrtiApiIdModifyPeripheral8',0,182,1,8
	.byte	'OsOrtiApiIdModifyPeripheral16',0,184,1,8
	.byte	'OsOrtiApiIdModifyPeripheral32',0,186,1,8
	.byte	'OsOrtiApiIdGetDetailedError',0,188,1,8
	.byte	'OsOrtiApiIdOSErrorGetServiceId',0,190,1,8
	.byte	'OsOrtiApiIdDisableInterruptSource',0,192,1,8
	.byte	'OsOrtiApiIdEnableInterruptSource',0,194,1,8
	.byte	'OsOrtiApiIdClearPendingInterrupt',0,196,1,8
	.byte	'OsOrtiApiIdIsInterruptSourceEnabled',0,198,1,8
	.byte	'OsOrtiApiIdIsInterruptPending',0,200,1,8
	.byte	'OsOrtiApiIdCallFastTrustedFunction',0,202,1,8
	.byte	'OsOrtiApiIdBarrierSynchronize',0,204,1,8
	.byte	'OsOrtiApiIdGetExceptionContext',0,206,1,8
	.byte	'OsOrtiApiIdSetExceptionContext',0,208,1,8
	.byte	'OsOrtiApiIdInitialEnableInterruptSources',0,210,1,8
	.byte	'OsOrtiApiIdGetCoreStartState',0,212,1,8
	.byte	'OsOrtiApiIdGetExceptionAddress',0,214,1,0,13
	.byte	'OsOrtiApiIdType',0,14,225,3,3
	.word	102444
	.byte	13
	.byte	'Os_TraceThreadTypeType',0,14,236,3,2
	.word	7159
	.byte	13
	.byte	'Os_HookTaskReturnType',0,34,105,2
	.word	16980
	.byte	26,34,121,9,1,10
	.byte	'Status',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'Mode',0
	.word	402
	.byte	1,2,35,0,0,13
	.byte	'Os_HookParameterType',0,34,125,2
	.word	105778
	.byte	26,34,128,1,9,1,10
	.byte	'ProtectionReaction',0
	.word	17454
	.byte	1,2,35,0,0,13
	.byte	'Os_HookReturnType',0,34,131,1,2
	.word	105843
	.byte	13
	.byte	'Os_EventStateType',0,79,77,3
	.word	40564
	.byte	13
	.byte	'Os_XSigFunctionIdx',0,48,109,3
	.word	20224
	.byte	13
	.byte	'Os_TimerTypeType',0,43,72,3
	.word	19093
	.byte	13
	.byte	'Os_CounterCharacteristicsConfigType',0,43,75,56
	.word	18615
	.byte	13
	.byte	'Os_CounterConfigType',0,43,78,41
	.word	19228
	.byte	13
	.byte	'Os_AlarmConfigType',0,120,54,39
	.word	24984
	.byte	13
	.byte	'Os_SchTConfigType',0,121,55,38
	.word	25968
	.byte	13
	.byte	'Os_SchTExPoConfigType',0,121,61,42
	.word	25802
	.byte	13
	.byte	'Os_SchTAutostartConfigType',0,121,67,47
	.word	25271
	.byte	7,56,139,1,9,1,8
	.byte	'OS_SCHTSTATUS_STOPPED',0,0,8
	.byte	'OS_SCHTSTATUS_NEXT',0,1,8
	.byte	'OS_SCHTSTATUS_WAITING',0,2,8
	.byte	'OS_SCHTSTATUS_RUNNING',0,3,0,9
	.byte	'Os_SchTType_Tag',0,56,210,2,8,20,10
	.byte	'Job',0
	.word	18783
	.byte	4,2,35,0,10
	.byte	'ExPo',0
	.word	25963
	.byte	4,2,35,4,10
	.byte	'State',0
	.word	106174
	.byte	1,2,35,8,10
	.byte	'Next',0
	.word	26148
	.byte	4,2,35,12,10
	.byte	'Previous',0
	.word	26148
	.byte	4,2,35,16,0,13
	.byte	'Os_SchTType',0,121,70,32
	.word	106274
	.byte	13
	.byte	'Os_SchTExPoActionEventConfigType',0,121,76,53
	.word	25715
	.byte	13
	.byte	'Os_SchTExPoActionTaskConfigType',0,121,79,52
	.word	25648
	.byte	13
	.byte	'Os_Hal_TimerFrtConfigType',0,122,61,46
	.word	19514
	.byte	13
	.byte	'Os_Hal_TimerPitConfigType',0,122,65,46
	.word	42327
	.byte	13
	.byte	'Os_TimerSwConfigType',0,123,59,41
	.word	42725
	.byte	9
	.byte	'Os_TimerPitConfigType_Tag',0,39,246,1,8,56,10
	.byte	'SwCounter',0
	.word	42725
	.byte	52,2,35,0,10
	.byte	'HwConfig',0
	.word	42627
	.byte	4,2,35,52,0,13
	.byte	'Os_TimerPitConfigType',0,123,62,42
	.word	106569
	.byte	13
	.byte	'Os_TimerHrtConfigType',0,123,65,42
	.word	19814
	.byte	9
	.byte	'Os_TimerPfrtConfigType_Tag',0,39,187,2,8,68,10
	.byte	'SwCounter',0
	.word	42725
	.byte	52,2,35,0,10
	.byte	'Period',0
	.word	138
	.byte	4,2,35,52,10
	.byte	'MaxDifferentialValue',0
	.word	138
	.byte	4,2,35,56,10
	.byte	'MaxCountingValue',0
	.word	138
	.byte	4,2,35,60,10
	.byte	'HwConfig',0
	.word	19809
	.byte	4,2,35,64,0,13
	.byte	'Os_TimerPfrtConfigType',0,123,68,43
	.word	106699
	.byte	13
	.byte	'Os_XSigState_Type',0,47,100,2
	.word	21246
	.byte	13
	.byte	'Os_XSigComDataConfigType',0,47,114,2
	.word	21630
	.byte	13
	.byte	'Os_XSigParamsType',0,47,123,2
	.word	21217
	.byte	13
	.byte	'Os_XSigOutputParamsType',0,47,133,1,2
	.word	21491
	.byte	13
	.byte	'Os_XSigResultType',0,47,147,1,2
	.word	21521
	.byte	13
	.byte	'Os_XSigChannelSendType',0,47,207,1,2
	.word	20129
	.byte	13
	.byte	'Os_XSigChannelRecvType',0,47,217,1,2
	.word	20182
	.byte	13
	.byte	'Os_XSigChannelSendConfigType',0,47,234,1,2
	.word	21695
	.byte	13
	.byte	'Os_XSigChannelRecvConfigType',0,47,251,1,2
	.word	22106
	.byte	13
	.byte	'Os_XSigFunctionDescritorConfigType',0,46,190,1,2
	.word	21963
	.byte	13
	.byte	'Os_ActivationCntType',0,32,102,15
	.word	402
	.byte	13
	.byte	'Os_TaskScheduleType',0,32,111,2
	.word	16245
	.byte	13
	.byte	'Os_JobConfigType',0,124,53,37
	.word	18899
	.byte	13
	.byte	'Os_JobType',0,124,56,31
	.word	18783
	.byte	13
	.byte	'Os_PriorityQueueNodeIdxType',0,41,72,16
	.word	5373
	.byte	13
	.byte	'Os_PriorityQueueNodeType',0,41,80,3
	.word	18984
	.byte	13
	.byte	'Os_PriorityQueueType',0,41,87,3
	.word	19009
	.byte	13
	.byte	'Os_PriorityQueueConfigType',0,41,96,3
	.word	19040
	.byte	13
	.byte	'Os_TimerSwType',0,39,226,1,3
	.word	42681
	.byte	13
	.byte	'Os_TimerHrtType',0,39,151,2,3
	.word	19394
	.byte	13
	.byte	'Os_TpMonitoringKindType',0,38,151,2,2
	.word	28596
	.byte	13
	.byte	'Os_TpDelayLevelType',0,38,154,2,15
	.word	402
	.byte	13
	.byte	'Os_AppType',0,17,122,3
	.word	6051
	.byte	13
	.byte	'Os_AccessCheckRegionConfigType',0,58,95,3
	.word	29240
	.byte	13
	.byte	'Os_AlarmModeType',0,55,113,2
	.word	24845
	.byte	7,55,117,9,1,8
	.byte	'OS_ALARMSTATE_CANCELED',0,0,8
	.byte	'OS_ALARMSTATE_SET',0,1,0,13
	.byte	'Os_AlarmStateType',0,55,123,2
	.word	107630
	.byte	13
	.byte	'Os_AlarmAutostartConfigType',0,55,143,1,2
	.word	24899
	.byte	13
	.byte	'Os_AlarmCallbackType',0,55,241,1,9
	.word	17211
	.byte	13
	.byte	'Os_SchTEventIdxType',0,56,130,1,16
	.word	138
	.byte	13
	.byte	'Os_SchTTaskIdxType',0,56,133,1,16
	.word	138
	.byte	13
	.byte	'Os_SchTStatusType',0,56,149,1,3
	.word	106174
	.byte	7,56,153,1,9,1,8
	.byte	'OS_SCHTSYNCSTATUS_NOT_PROVIDED',0,0,8
	.byte	'OS_SCHTSYNCSTATUS_SYNC',0,1,8
	.byte	'OS_SCHTSYNCSTATUS_ASYNC',0,2,0,13
	.byte	'Os_SchTSyncStatusType',0,56,161,1,3
	.word	107858
	.byte	13
	.byte	'Os_SchTExPoKindType',0,56,198,1,2
	.word	25467
	.byte	13
	.byte	'Os_SchTSyncKindType',0,56,131,2,2
	.word	25378
	.byte	13
	.byte	'Os_SchTAutostartModeType',0,56,141,2,2
	.word	25153
	.byte	13
	.byte	'Os_ServiceTypeType',0,57,122,3
	.word	27102
	.byte	13
	.byte	'Os_ServiceTrustedFunctionParamsType',0,57,133,1,3
	.word	27958
	.byte	13
	.byte	'Os_ServiceNonTrustedFunctionParamsType',0,57,143,1,3
	.word	28011
	.byte	13
	.byte	'Os_ServiceFastTrustedFunctionParamsType',0,57,153,1,3
	.word	28065
	.byte	13
	.byte	'Os_ServiceParamsType',0,57,162,1,3
	.word	28119
	.byte	23,1,1,24
	.word	12629
	.byte	24
	.word	12665
	.byte	0,11
	.word	108271
	.byte	13
	.byte	'Os_ServiceTfCbkType',0,57,223,1,9
	.word	108285
	.byte	23,1,1,24
	.word	12914
	.byte	24
	.word	12665
	.byte	0,11
	.word	108319
	.byte	13
	.byte	'Os_ServiceNtfCbkType',0,57,248,1,9
	.word	108333
	.byte	23,1,1,24
	.word	13000
	.byte	24
	.word	12665
	.byte	0,11
	.word	108368
	.byte	13
	.byte	'Os_ServiceFtfCbkType',0,57,191,2,9
	.word	108382
	.byte	13
	.byte	'Os_FifoIdxType',0,125,73,15
	.word	402
	.byte	7,125,76,9,1,8
	.byte	'OS_FIFOWRITERESULT_OK',0,0,8
	.byte	'OS_FIFOWRITERESULT_BUFFEROVERFLOW',0,1,0,13
	.byte	'Os_FifoWriteResultType',0,125,80,2
	.word	108440
	.byte	13
	.byte	'Os_Fifo08WriteConfigType',0,93,66,45
	.word	47004
	.byte	13
	.byte	'Os_Fifo08ReadConfigType',0,93,69,44
	.word	47175
	.byte	13
	.byte	'Os_Fifo08NodeType',0,93,76,2
	.word	46978
	.byte	13
	.byte	'Os_Fifo08WriteType',0,93,83,2
	.word	46916
	.byte	13
	.byte	'Os_Fifo08ReadType',0,93,90,2
	.word	46945
	.byte	13
	.byte	'Os_Fifo16WriteConfigType',0,95,66,45
	.word	47410
	.byte	13
	.byte	'Os_Fifo16ReadConfigType',0,95,69,44
	.word	47581
	.byte	13
	.byte	'Os_Fifo16NodeType',0,95,76,2
	.word	47384
	.byte	13
	.byte	'Os_Fifo16WriteType',0,95,83,2
	.word	47322
	.byte	13
	.byte	'Os_Fifo16ReadType',0,95,90,2
	.word	47351
	.byte	13
	.byte	'Os_Fifo32WriteConfigType',0,97,66,45
	.word	47816
	.byte	13
	.byte	'Os_Fifo32ReadConfigType',0,97,69,44
	.word	47987
	.byte	13
	.byte	'Os_Fifo32NodeType',0,97,76,2
	.word	47790
	.byte	13
	.byte	'Os_Fifo32WriteType',0,97,83,2
	.word	47728
	.byte	13
	.byte	'Os_Fifo32ReadType',0,97,90,2
	.word	47757
	.byte	13
	.byte	'Os_FifoRefWriteConfigType',0,99,66,46
	.word	48247
	.byte	13
	.byte	'Os_FifoRefReadConfigType',0,99,69,45
	.word	48483
	.byte	13
	.byte	'Os_FifoRefWriteType',0,99,104,2
	.word	48134
	.byte	13
	.byte	'Os_FifoRefReadType',0,99,111,2
	.word	48163
	.byte	13
	.byte	'Os_IocSubClassType',0,50,170,3,2
	.word	23014
	.byte	7,126,96,9,1,8
	.byte	'OS_TRAPID_GETCOREID',0,0,8
	.byte	'OS_TRAPID_GETACTIVEAPPLICATIONMODE',0,1,8
	.byte	'OS_TRAPID_SHUTDOWNOS',0,2,8
	.byte	'OS_TRAPID_SHUTDOWNALLCORES',0,3,8
	.byte	'OS_TRAPID_DISABLELEVEL',0,4,8
	.byte	'OS_TRAPID_ENABLELEVEL',0,5,8
	.byte	'OS_TRAPID_DISABLEGLOBAL',0,6,8
	.byte	'OS_TRAPID_ENABLEGLOBAL',0,7,8
	.byte	'OS_TRAPID_DISABLEALLINTERRUPTS',0,8,8
	.byte	'OS_TRAPID_ENABLEALLINTERRUPTS',0,9,8
	.byte	'OS_TRAPID_SUSPENDALLINTERRUPTS',0,10,8
	.byte	'OS_TRAPID_RESUMEALLINTERRUPTS',0,11,8
	.byte	'OS_TRAPID_SUSPENDOSINTERRUPTS',0,12,8
	.byte	'OS_TRAPID_RESUMEOSINTERRUPTS',0,13,8
	.byte	'OS_TRAPID_DISABLEINTERRUPTSOURCE',0,14,8
	.byte	'OS_TRAPID_ENABLEINTERRUPTSOURCE',0,15,8
	.byte	'OS_TRAPID_CLEARPENDINGINTERRUPT',0,16,8
	.byte	'OS_TRAPID_ISINTERRUPTSOURCEENABLED',0,17,8
	.byte	'OS_TRAPID_ISINTERRUPTPENDING',0,18,8
	.byte	'OS_TRAPID_ALLOWACCESS',0,19,8
	.byte	'OS_TRAPID_GETAPPLICATIONID',0,20,8
	.byte	'OS_TRAPID_GETCURRENTAPPLICATIONID',0,21,8
	.byte	'OS_TRAPID_GETAPPLICATIONSTATE',0,22,8
	.byte	'OS_TRAPID_CHECKOBJECTACCESS',0,23,8
	.byte	'OS_TRAPID_CHECKOBJECTOWNERSHIP',0,24,8
	.byte	'OS_TRAPID_TERMINATEAPPLICATION',0,25,8
	.byte	'OS_TRAPID_ACTIVATETASK',0,26,8
	.byte	'OS_TRAPID_TERMINATETASK',0,27,8
	.byte	'OS_TRAPID_CHAINTASK',0,28,8
	.byte	'OS_TRAPID_GETTASKSTATE',0,29,8
	.byte	'OS_TRAPID_GETTASKID',0,30,8
	.byte	'OS_TRAPID_GETISRID',0,31,8
	.byte	'OS_TRAPID_SCHEDULE',0,32,8
	.byte	'OS_TRAPID_INCREMENTCOUNTER',0,33,8
	.byte	'OS_TRAPID_GETCOUNTERVALUE',0,34,8
	.byte	'OS_TRAPID_GETELAPSEDVALUE',0,35,8
	.byte	'OS_TRAPID_GETALARM',0,36,8
	.byte	'OS_TRAPID_GETALARMBASE',0,37,8
	.byte	'OS_TRAPID_SETRELALARM',0,38,8
	.byte	'OS_TRAPID_SETABSALARM',0,39,8
	.byte	'OS_TRAPID_CANCELALARM',0,40,8
	.byte	'OS_TRAPID_GETRESOURCE',0,41,8
	.byte	'OS_TRAPID_RELEASERESOURCE',0,42,8
	.byte	'OS_TRAPID_SETEVENT',0,43,8
	.byte	'OS_TRAPID_CLEAREVENT',0,44,8
	.byte	'OS_TRAPID_WAITEVENT',0,45,8
	.byte	'OS_TRAPID_GETEVENT',0,46,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEREL',0,47,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLEABS',0,48,8
	.byte	'OS_TRAPID_STOPSCHEDULETABLE',0,49,8
	.byte	'OS_TRAPID_NEXTSCHEDULETABLE',0,50,8
	.byte	'OS_TRAPID_STARTSCHEDULETABLESYNCHRON',0,51,8
	.byte	'OS_TRAPID_SETSCHEDULETABLEASYNC',0,52,8
	.byte	'OS_TRAPID_SYNCSCHEDULETABLE',0,53,8
	.byte	'OS_TRAPID_GETSCHEDULETABLESTATUS',0,54,8
	.byte	'OS_TRAPID_SPINLOCKGET',0,55,8
	.byte	'OS_TRAPID_SPINLOCKRELEASE',0,56,8
	.byte	'OS_TRAPID_SPINLOCKTRYGET',0,57,8
	.byte	'OS_TRAPID_IOC08RECEIVE',0,58,8
	.byte	'OS_TRAPID_IOC08EMPTYQUEUE',0,59,8
	.byte	'OS_TRAPID_IOC08SEND',0,60,8
	.byte	'OS_TRAPID_IOC16RECEIVE',0,61,8
	.byte	'OS_TRAPID_IOC16EMPTYQUEUE',0,62,8
	.byte	'OS_TRAPID_IOC16SEND',0,63,8
	.byte	'OS_TRAPID_IOC32RECEIVE',0,192,0,8
	.byte	'OS_TRAPID_IOC32EMPTYQUEUE',0,193,0,8
	.byte	'OS_TRAPID_IOC32SEND',0,194,0,8
	.byte	'OS_TRAPID_IOCREFRECEIVE',0,195,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYQUEUE',0,196,0,8
	.byte	'OS_TRAPID_IOCREFSEND',0,197,0,8
	.byte	'OS_TRAPID_IOCREAD',0,198,0,8
	.byte	'OS_TRAPID_IOCWRITE',0,199,0,8
	.byte	'OS_TRAPID_IOC08MULTIRECEIVE',0,200,0,8
	.byte	'OS_TRAPID_IOC08EMPTYMULTIQUEUE',0,201,0,8
	.byte	'OS_TRAPID_IOC16MULTIRECEIVE',0,202,0,8
	.byte	'OS_TRAPID_IOC16EMPTYMULTIQUEUE',0,203,0,8
	.byte	'OS_TRAPID_IOC32MULTIRECEIVE',0,204,0,8
	.byte	'OS_TRAPID_IOC32EMPTYMULTIQUEUE',0,205,0,8
	.byte	'OS_TRAPID_IOCREFMULTIRECEIVE',0,206,0,8
	.byte	'OS_TRAPID_IOCREFEMPTYMULTIQUEUE',0,207,0,8
	.byte	'OS_TRAPID_READPERIPHERAL8',0,208,0,8
	.byte	'OS_TRAPID_READPERIPHERAL16',0,209,0,8
	.byte	'OS_TRAPID_READPERIPHERAL32',0,210,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL8',0,211,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL16',0,212,0,8
	.byte	'OS_TRAPID_WRITEPERIPHERAL32',0,213,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL8',0,214,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL16',0,215,0,8
	.byte	'OS_TRAPID_MODIFYPERIPHERAL32',0,216,0,8
	.byte	'OS_TRAPID_CALLTRUSTEDFUNCTION',0,217,0,8
	.byte	'OS_TRAPID_CALLNONTRUSTEDFUNCTION',0,218,0,8
	.byte	'OS_TRAPID_CALLFASTTRUSTEDFUNCTION',0,219,0,8
	.byte	'OS_TRAPID_ERRAPPLICATIONERROR',0,220,0,8
	.byte	'OS_TRAPID_TASKMISSINGTERMINATETASK',0,221,0,8
	.byte	'OS_TRAPID_ISREPILOGUE',0,222,0,8
	.byte	'OS_TRAPID_SERVICERETURN',0,223,0,8
	.byte	'OS_TRAPID_HOOKRETURN',0,224,0,8
	.byte	'OS_TRAPID_CONTROLIDLE',0,225,0,8
	.byte	'OS_TRAPID_GETTASKSTACKUSAGE',0,226,0,8
	.byte	'OS_TRAPID_GETISRSTACKUSAGE',0,227,0,8
	.byte	'OS_TRAPID_GETKERNELSTACKUSAGE',0,228,0,8
	.byte	'OS_TRAPID_GETSTARTUPHOOKSTACKUSAGE',0,229,0,8
	.byte	'OS_TRAPID_GETERRORHOOKSTACKUSAGE',0,230,0,8
	.byte	'OS_TRAPID_GETSHUTDOWNHOOKSTACKUSAGE',0,231,0,8
	.byte	'OS_TRAPID_GETPROTECTIONHOOKSTACKUSAGE',0,232,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDIRQ',0,233,0,8
	.byte	'OS_TRAPID_GETUNHANDLEDEXC',0,234,0,8
	.byte	'OS_TRAPID_GETDETAILEDERROR',0,235,0,8
	.byte	'OS_TRAPID_GETSERVICEID',0,236,0,8
	.byte	'OS_TRAPID_COREGETTHREAD',0,237,0,8
	.byte	'OS_TRAPID_GETNUMBEROFACTIVATEDCORES',0,238,0,8
	.byte	'OS_TRAPID_CHECKTASKMEMORYACCESS',0,239,0,8
	.byte	'OS_TRAPID_CHECKISRMEMORYACCESS',0,240,0,8
	.byte	'OS_TRAPID_BARRIERSYNCHRONIZE',0,241,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONCONTEXT',0,242,0,8
	.byte	'OS_TRAPID_SETEXCEPTIONCONTEXT',0,243,0,8
	.byte	'OS_TRAPID_GETCORESTARTSTATE',0,244,0,8
	.byte	'OS_TRAPID_GETEXCEPTIONADDRESS',0,245,0,8
	.byte	'OS_TRAPID_COUNT',0,246,0,0,13
	.byte	'Os_TrapIdType',0,126,217,1,3
	.word	109119
	.byte	12
	.word	99795
	.byte	11
	.word	112635
	.byte	11
	.word	402
	.byte	12
	.word	402
	.byte	11
	.word	112650
	.byte	12
	.word	100117
	.byte	11
	.word	112660
	.byte	11
	.word	5373
	.byte	12
	.word	5373
	.byte	11
	.word	112675
	.byte	12
	.word	100439
	.byte	11
	.word	112685
	.byte	12
	.word	100763
	.byte	11
	.word	112695
	.byte	12
	.word	101029
	.byte	11
	.word	112705
	.byte	12
	.word	101176
	.byte	11
	.word	112715
	.byte	12
	.word	99902
	.byte	11
	.word	112725
	.byte	12
	.word	100224
	.byte	11
	.word	112735
	.byte	12
	.word	100546
	.byte	11
	.word	112745
	.byte	12
	.word	100872
	.byte	11
	.word	112755
	.byte	11
	.word	15513
	.byte	26,126,232,1,9,8,10
	.byte	'ParamApiType',0
	.word	13770
	.byte	8,2,35,0,10
	.byte	'ParamSpinlockConfigRefType',0
	.word	5936
	.byte	4,2,35,0,10
	.byte	'ParamIoc08SendConfigRefType',0
	.word	112640
	.byte	4,2,35,0,10
	.byte	'ParamIoc08ReceiveConfigRefType',0
	.word	99897
	.byte	4,2,35,0,10
	.byte	'ParamUint8RefType',0
	.word	112645
	.byte	4,2,35,0,10
	.byte	'ParamConstUint8RefType',0
	.word	112655
	.byte	4,2,35,0,10
	.byte	'ParamUint8Type',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ParamIoc16SendConfigRefType',0
	.word	112665
	.byte	4,2,35,0,10
	.byte	'ParamIoc16ReceiveConfigRefType',0
	.word	100219
	.byte	4,2,35,0,10
	.byte	'ParamUint16RefType',0
	.word	112670
	.byte	4,2,35,0,10
	.byte	'ParamConstUint16RefType',0
	.word	112680
	.byte	4,2,35,0,10
	.byte	'ParamUint16Type',0
	.word	5373
	.byte	2,2,35,0,10
	.byte	'ParamIoc32SendConfigRefType',0
	.word	112690
	.byte	4,2,35,0,10
	.byte	'ParamIoc32ReceiveConfigRefType',0
	.word	100541
	.byte	4,2,35,0,10
	.byte	'ParamUint32RefType',0
	.word	32826
	.byte	4,2,35,0,10
	.byte	'ParamConstUint32RefType',0
	.word	4200
	.byte	4,2,35,0,10
	.byte	'ParamUint32Type',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ParamIocRefSendConfigRefType',0
	.word	112700
	.byte	4,2,35,0,10
	.byte	'ParamIocRefReceiveConfigRefType',0
	.word	100867
	.byte	4,2,35,0,10
	.byte	'ParamVoidRefType',0
	.word	12665
	.byte	4,2,35,0,10
	.byte	'ParamVoidConfigRefType',0
	.word	11842
	.byte	4,2,35,0,10
	.byte	'ParamIocReadConfigRefType',0
	.word	112710
	.byte	4,2,35,0,10
	.byte	'ParamIocWriteConfigRefType',0
	.word	112720
	.byte	4,2,35,0,10
	.byte	'ParamIoc08MultiReceiveConfigRefType',0
	.word	112730
	.byte	4,2,35,0,10
	.byte	'ParamIoc16MultiReceiveConfigRefType',0
	.word	112740
	.byte	4,2,35,0,10
	.byte	'ParamIoc32MultiReceiveConfigRefType',0
	.word	112750
	.byte	4,2,35,0,10
	.byte	'ParamIocRefMultiReceiveConfigRefType',0
	.word	112760
	.byte	4,2,35,0,10
	.byte	'ParamOSServiceIdType',0
	.word	8035
	.byte	1,2,35,0,10
	.byte	'ParamOs_StatusType',0
	.word	419
	.byte	2,2,35,0,10
	.byte	'ParamOs_ErrorParamsRefType',0
	.word	112765
	.byte	4,2,35,0,0,13
	.byte	'Os_TrapParameterType',0,126,136,2,3
	.word	112770
	.byte	26,126,140,2,9,4,10
	.byte	'ReturnOs_StatusType',0
	.word	419
	.byte	2,2,35,0,10
	.byte	'ReturnStd_ReturnType',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ReturnUint8Type',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ReturnUint16Type',0
	.word	5373
	.byte	2,2,35,0,10
	.byte	'ReturnUint32Type',0
	.word	138
	.byte	4,2,35,0,10
	.byte	'ReturnCoreIdType',0
	.word	6805
	.byte	1,2,35,0,10
	.byte	'ReturnAppModeType',0
	.word	402
	.byte	1,2,35,0,10
	.byte	'ReturnISRType',0
	.word	11715
	.byte	1,2,35,0,10
	.byte	'ReturnApplicationType',0
	.word	11538
	.byte	1,2,35,0,10
	.byte	'ReturnObjectAccessType',0
	.word	95265
	.byte	1,2,35,0,10
	.byte	'ReturnAccessType',0
	.word	28737
	.byte	1,2,35,0,10
	.byte	'ReturnOSServiceIdType',0
	.word	8035
	.byte	1,2,35,0,10
	.byte	'ReturnOs_AddressOfConstType',0
	.word	15562
	.byte	4,2,35,0,10
	.byte	'ReturnThreadConfigRefType',0
	.word	29813
	.byte	4,2,35,0,0,13
	.byte	'Os_TrapReturnType',0,126,156,2,3
	.word	113834
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,11,0,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,46,1,3,8,32,13,58,15,59
	.byte	15,57,15,54,15,39,12,0,0,7,4,1,58,15,59,15,57,15,11,15,0,0,8,40,0,3,8,28,13,0,0,9,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,10,13,0,3,8,73,19,11,15,56,9,0,0,11,15,0,73,19,0,0,12,38,0,73,19,0,0,13,22,0,3,8,58,15
	.byte	59,15,57,15,73,19,0,0,14,11,1,0,0,15,19,1,58,15,59,15,57,15,11,15,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47
	.byte	15,0,0,18,53,0,73,19,0,0,19,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,20,59,0,3,8,0,0,21,23,1,3,8,58,15
	.byte	59,15,57,15,11,15,0,0,22,21,0,54,15,39,12,0,0,23,21,1,54,15,39,12,0,0,24,5,0,73,19,0,0,25,21,1,73,19,54
	.byte	15,39,12,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,46,1,3,8,54,15,39,12,63,12,60,12,0,0,28,46,1,3,8,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,29,5,0,3,8,73,19,0,0,30,46,0,3,8,54,15,39,12,63,12,60,12,0,0,31,46,1,49
	.byte	19,0,0,32,5,0,49,19,0,0,33,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,34,29,1,49,19,0,0,35
	.byte	11,0,49,19,0,0,36,11,1,49,19,0,0,37,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,38,46
	.byte	0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,39,21,0,54,15,0,0,40,52,0,3,8,58,15,59,15,57,15,73,19,63
	.byte	12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L74:
	.word	.L533-.L532
.L532:
	.half	3
	.word	.L535-.L534
.L534:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\Os\\Implementation',0
	.byte	'D:\\Zonal\\demo011\\tasking\\appl\\GenData',0
	.byte	'D:\\Zonal\\demo011\\tasking\\component\\_Common\\Implementation',0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error.h',0,0,0,0
	.byte	'Os_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_LockInt.h',0,0,0,0
	.byte	'Os_Lock_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_ContextInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ThreadInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_StackInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SpinlockInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TraceInt.h',0,0,0,0
	.byte	'Os_Types_Lcfg.h',0,2,0,0
	.byte	'Os_Spinlock_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ApplicationInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CoreInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IsrInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_InterruptInt.h',0,0,0,0
	.byte	'Os_Hal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_InterruptInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ErrorInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CommonInt.h',0,0,0,0
	.byte	'Std_Types.h',0,3,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_OsInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hook_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_SchedulerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArrayInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TaskInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_DequeInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_HookInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ResourceInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtectionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimerInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_CounterInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_PriorityQueue_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_JobInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STMInt.h',0,0,0,0
	.byte	'Os_Hal_Kernel_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannelInt.h',0,0,0,0
	.byte	'Os_XSignal_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_IocInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Ioc_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BarrierInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Barrier_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AlarmInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTableInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunctionInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheckInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Bit.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitArray.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Deque.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Spinlock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignalChannel.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_XSignal.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_EventInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Counter.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_STM.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPT.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Timer_GPTInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Timer.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TimingProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ServiceFunction_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo08Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo16Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Fifo32Int.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRef.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoRefInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'Os_Resource_Types.h',0,1,0,0
	.byte	'Os_Hal_Os_Types.h',0,1,0,0
	.byte	'Os_Resource_Lcfg.h',0,2,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Application_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Error_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Common_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Derivative_TC39x_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_BitInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Trace_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_MemoryProtection_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_AccessCheck_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Alarm_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_ScheduleTable_Types.h',0,0,0,0
	.byte	'Os_Hal_Timer_Types.h',0,1,0,0
	.byte	'Os_Timer_Types.h',0,1,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Job_Types.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_FifoInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_TrapInt.h',0,0,0,0,0
.L535:
.L533:
	.sdecl	'.debug_info',debug,cluster('Os_ResourceInit')
	.sect	'.debug_info'
.L75:
	.word	249
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L71
	.byte	3
	.byte	'Os_ResourceInit',0,1,179,6,21,1,1,1
	.word	.L60,.L105,.L59
	.byte	4
	.byte	'Resource',0,1,181,6,55
	.word	.L106,.L107
	.byte	5
	.word	.L60,.L105
	.byte	6
	.word	.L108,.L60,.L109
	.byte	7
	.word	.L110,.L111
	.byte	8
	.word	.L112,.L60,.L109
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_ResourceInit')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_ResourceInit')
	.sect	'.debug_line'
.L77:
	.word	.L537-.L536
.L536:
	.half	3
	.word	.L539-.L538
.L538:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0,0
.L539:
	.byte	4,2,5,7,7,0,5,2
	.word	.L60
	.byte	3,174,2,1,5,21,9
	.half	.L540-.L60
	.byte	1,5,19,9
	.half	.L541-.L540
	.byte	1,4,1,5,1,9
	.half	.L109-.L541
	.byte	3,138,4,1,7,9
	.half	.L79-.L109
	.byte	0,1,1
.L537:
	.sdecl	'.debug_ranges',debug,cluster('Os_ResourceInit')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L60,0,.L79-.L60,0,0
	.sdecl	'.debug_info',debug,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.debug_info'
.L80:
	.word	656
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L71
	.byte	3
	.byte	'Os_ResourceForciblyReleaseLocks',0,1,199,6,21,1,1,1
	.word	.L62,.L113,.L61
	.byte	4
	.byte	'Thread',0,1,201,6,55
	.word	.L114,.L115
	.byte	5
	.word	.L62,.L113
	.byte	5
	.word	.L62,.L116
	.byte	6
	.byte	'it',0,1,207,6,54
	.word	.L117,.L118
	.byte	7
	.word	.L119,.L62,.L120
	.byte	8
	.word	.L121,.L122
	.byte	8
	.word	.L123,.L124
	.byte	9
	.word	.L125,.L126
	.byte	7
	.word	.L129,.L62,.L130
	.byte	8
	.word	.L131,.L132
	.byte	10
	.word	.L133,.L134
	.byte	0,7
	.word	.L136,.L130,.L120
	.byte	8
	.word	.L137,.L138
	.byte	9
	.word	.L139,.L140
	.byte	6
	.byte	'lock',0,2,124,51
	.word	.L141,.L142
	.byte	0,0,7
	.word	.L129,.L127,.L135
	.byte	8
	.word	.L131,.L132
	.byte	0,7
	.word	.L154,.L135,.L10
	.byte	8
	.word	.L155,.L156
	.byte	8
	.word	.L157,.L158
	.byte	11
	.word	.L159,.L135,.L10
	.byte	6
	.byte	'previousPrio',0,1,185,5,19
	.word	.L160,.L161
	.byte	7
	.word	.L162,.L135,.L163
	.byte	8
	.word	.L164,.L165
	.byte	12
	.word	.L166,.L135,.L163
	.byte	0,0,0,7
	.word	.L136,.L10,.L128
	.byte	8
	.word	.L137,.L138
	.byte	0,0,0,7
	.word	.L143,.L3,.L127
	.byte	8
	.word	.L144,.L145
	.byte	11
	.word	.L146,.L3,.L127
	.byte	6
	.byte	'result',0,2,219,1,20
	.word	.L147,.L148
	.byte	7
	.word	.L149,.L150,.L6
	.byte	8
	.word	.L151,.L152
	.byte	12
	.word	.L153,.L150,.L6
	.byte	0,0,0,7
	.word	.L119,.L127,.L128
	.byte	8
	.word	.L121,.L122
	.byte	8
	.word	.L123,.L124
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0
	.byte	10,11,0,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,12,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.debug_line'
.L82:
	.word	.L543-.L542
.L542:
	.half	3
	.word	.L545-.L544
.L544:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0,0
.L545:
	.byte	4,3,5,42,7,0,5,2
	.word	.L62
	.byte	3,164,2,1,4,1,5,21,3,162,4,1,4,2,9
	.half	.L130-.L62
	.byte	3,185,122,1,4,3,5,18,3,110,1,4,1,5,39,9
	.half	.L120-.L130
	.byte	3,231,5,1,4,2,5,30,9
	.half	.L3-.L120
	.byte	3,242,122,1,5,10,9
	.half	.L546-.L3
	.byte	3,22,1,5,3,9
	.half	.L479-.L546
	.byte	3,3,1,5,38,7,9
	.half	.L150-.L479
	.byte	3,233,0,1,5,33,9
	.half	.L547-.L150
	.byte	1,5,45,7,9
	.half	.L548-.L547
	.byte	3,1,1,5,29,7,9
	.half	.L5-.L548
	.byte	1,5,62,9
	.half	.L6-.L5
	.byte	3,153,127,1,4,1,5,7,9
	.half	.L4-.L6
	.byte	3,245,4,1,4,3,5,18,7,9
	.half	.L127-.L4
	.byte	3,204,123,1,5,63,9
	.half	.L549-.L127
	.byte	1,5,11,9
	.half	.L480-.L549
	.byte	1,5,39,7,9
	.half	.L550-.L480
	.byte	3,1,1,5,63,7,9
	.half	.L8-.L550
	.byte	3,127,1,4,1,5,3,9
	.half	.L9-.L8
	.byte	3,232,3,1,4,2,5,14,7,9
	.half	.L135-.L9
	.byte	3,231,124,1,4,1,5,45,9
	.half	.L163-.L135
	.byte	3,201,2,1,4,4,5,78,9
	.half	.L481-.L163
	.byte	3,213,123,1,5,29,9
	.half	.L551-.L481
	.byte	3,27,1,4,1,5,3,9
	.half	.L552-.L551
	.byte	3,147,4,1,4,3,5,16,7,9
	.half	.L553-.L552
	.byte	3,171,124,1,4,5,5,14,9
	.half	.L554-.L553
	.byte	3,173,2,1,4,1,5,57,9
	.half	.L555-.L554
	.byte	3,171,1,1,4,2,5,10,9
	.half	.L10-.L555
	.byte	3,188,123,1,5,19,9
	.half	.L482-.L10
	.byte	3,1,1,5,24,9
	.half	.L556-.L482
	.byte	1,5,13,9
	.half	.L557-.L556
	.byte	1,5,7,9
	.half	.L558-.L557
	.byte	3,1,1,5,19,9
	.half	.L483-.L558
	.byte	1,4,1,5,49,9
	.half	.L128-.L483
	.byte	3,218,5,1,4,2,5,23,9
	.half	.L7-.L128
	.byte	3,224,122,1,5,30,9
	.half	.L2-.L7
	.byte	3,13,1,4,1,5,39,9
	.half	.L559-.L2
	.byte	3,142,5,1,5,1,7,9
	.half	.L116-.L559
	.byte	3,13,1,7,9
	.half	.L84-.L116
	.byte	0,1,1
.L543:
	.sdecl	'.debug_ranges',debug,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L62,0,.L84-.L62,0,0
.L126:
	.word	-1,.L62,0,.L120-.L62,.L127-.L62,.L128-.L62,0,0
.L134:
	.word	-1,.L62,0,.L130-.L62,.L127-.L62,.L135-.L62,0,0
.L140:
	.word	-1,.L62,.L130-.L62,.L120-.L62,.L10-.L62,.L128-.L62,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_GetResource')
	.sect	'.debug_info'
.L85:
	.word	1846
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L71
	.byte	3
	.byte	'Os_Api_GetResource',0,1,246,6,30
	.word	.L167
	.byte	1,1,1
	.word	.L64,.L168,.L63
	.byte	4
	.byte	'ResID',0,1,248,6,16
	.word	.L169,.L170
	.byte	5
	.word	.L64,.L168
	.byte	6
	.byte	'status',0,1,251,6,17
	.word	.L167,.L171
	.byte	7
	.word	.L172,.L64,.L173
	.byte	8
	.word	.L174,.L175
	.byte	7
	.word	.L177,.L64,.L173
	.byte	9
	.word	.L178,.L179
	.byte	10
	.word	.L180,.L64,.L173
	.byte	7
	.word	.L181,.L64,.L173
	.byte	10
	.word	.L182,.L64,.L173
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L183,.L184
	.byte	0,0,0,0,0,0,11
	.word	.L172,.L13,.L176
	.byte	7
	.word	.L185,.L15,.L186
	.byte	9
	.word	.L187,.L188
	.byte	8
	.word	.L189,.L190
	.byte	7
	.word	.L191,.L15,.L192
	.byte	9
	.word	.L193,.L194
	.byte	12
	.word	.L195,.L15,.L192
	.byte	0,0,0,5
	.word	.L17,.L168
	.byte	7
	.word	.L196,.L17,.L197
	.byte	9
	.word	.L198,.L199
	.byte	12
	.word	.L200,.L17,.L197
	.byte	0,7
	.word	.L201,.L197,.L202
	.byte	9
	.word	.L203,.L204
	.byte	10
	.word	.L205,.L197,.L202
	.byte	7
	.word	.L206,.L197,.L202
	.byte	9
	.word	.L207,.L208
	.byte	10
	.word	.L209,.L197,.L202
	.byte	7
	.word	.L172,.L197,.L202
	.byte	10
	.word	.L174,.L197,.L202
	.byte	7
	.word	.L177,.L197,.L202
	.byte	9
	.word	.L178,.L179
	.byte	10
	.word	.L180,.L197,.L202
	.byte	7
	.word	.L181,.L197,.L202
	.byte	10
	.word	.L182,.L197,.L202
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L183,.L210
	.byte	0,0,0,0,0,0,0,0,0,0,7
	.word	.L211,.L19,.L212
	.byte	9
	.word	.L213,.L214
	.byte	9
	.word	.L215,.L216
	.byte	10
	.word	.L217,.L19,.L212
	.byte	7
	.word	.L218,.L19,.L212
	.byte	9
	.word	.L219,.L220
	.byte	9
	.word	.L221,.L222
	.byte	10
	.word	.L223,.L19,.L212
	.byte	6
	.byte	'result',0,1,162,4,20
	.word	.L147,.L224
	.byte	7
	.word	.L225,.L226,.L227
	.byte	9
	.word	.L228,.L229
	.byte	9
	.word	.L230,.L231
	.byte	8
	.word	.L232,.L233
	.byte	6
	.byte	'result',0,1,240,4,20
	.word	.L147,.L235
	.byte	10
	.word	.L236,.L22,.L21
	.byte	6
	.byte	'intLevel',0,1,251,4,21
	.word	.L237,.L238
	.byte	7
	.word	.L239,.L22,.L240
	.byte	9
	.word	.L241,.L242
	.byte	9
	.word	.L243,.L244
	.byte	12
	.word	.L245,.L22,.L240
	.byte	0,0,0,0,7
	.word	.L225,.L234,.L21
	.byte	9
	.word	.L228,.L229
	.byte	9
	.word	.L230,.L231
	.byte	0,7
	.word	.L246,.L21,.L212
	.byte	9
	.word	.L247,.L248
	.byte	9
	.word	.L249,.L250
	.byte	10
	.word	.L251,.L21,.L212
	.byte	6
	.byte	'result',0,1,199,4,20
	.word	.L147,.L252
	.byte	7
	.word	.L129,.L21,.L253
	.byte	9
	.word	.L131,.L254
	.byte	12
	.word	.L133,.L21,.L253
	.byte	0,12
	.word	.L255,.L27,.L24
	.byte	0,0,0,0,0,0,5
	.word	.L29,.L168
	.byte	6
	.byte	'intState',0,1,173,7,23
	.word	.L256,.L257
	.byte	7
	.word	.L258,.L259,.L31
	.byte	9
	.word	.L260,.L261
	.byte	10
	.word	.L262,.L259,.L31
	.byte	7
	.word	.L263,.L264,.L265
	.byte	9
	.word	.L266,.L267
	.byte	12
	.word	.L268,.L264,.L265
	.byte	0,7
	.word	.L269,.L265,.L31
	.byte	9
	.word	.L270,.L271
	.byte	9
	.word	.L272,.L273
	.byte	10
	.word	.L274,.L265,.L31
	.byte	10
	.word	.L275,.L265,.L31
	.byte	6
	.byte	'currentLevel',0,3,202,2,25
	.word	.L183,.L276
	.byte	7
	.word	.L277,.L265,.L278
	.byte	9
	.word	.L279,.L280
	.byte	13
	.word	.L281,.L282
	.byte	0,7
	.word	.L277,.L283,.L284
	.byte	9
	.word	.L279,.L280
	.byte	0,7
	.word	.L285,.L286,.L32
	.byte	9
	.word	.L287,.L288
	.byte	10
	.word	.L289,.L286,.L32
	.byte	6
	.byte	'previousState',0,4,200,1,29
	.word	.L183,.L290
	.byte	7
	.word	.L291,.L286,.L292
	.byte	9
	.word	.L293,.L294
	.byte	12
	.word	.L295,.L286,.L292
	.byte	0,7
	.word	.L296,.L297,.L32
	.byte	9
	.word	.L298,.L299
	.byte	10
	.word	.L300,.L297,.L32
	.byte	6
	.byte	'icr',0,4,154,1,29
	.word	.L183,.L301
	.byte	0,0,0,0,0,0,0,0,0,7
	.word	.L302,.L31,.L303
	.byte	9
	.word	.L304,.L305
	.byte	10
	.word	.L306,.L31,.L303
	.byte	7
	.word	.L307,.L31,.L303
	.byte	10
	.word	.L308,.L31,.L303
	.byte	6
	.byte	'retState',0,4,128,1,29
	.word	.L183,.L309
	.byte	0,0,0,0,7
	.word	.L310,.L303,.L311
	.byte	9
	.word	.L312,.L313
	.byte	12
	.word	.L314,.L303,.L311
	.byte	0,7
	.word	.L315,.L311,.L316
	.byte	9
	.word	.L317,.L318
	.byte	9
	.word	.L319,.L320
	.byte	12
	.word	.L321,.L311,.L316
	.byte	0,7
	.word	.L129,.L316,.L322
	.byte	9
	.word	.L131,.L254
	.byte	13
	.word	.L133,.L323
	.byte	0,7
	.word	.L324,.L322,.L35
	.byte	9
	.word	.L325,.L326
	.byte	9
	.word	.L327,.L328
	.byte	10
	.word	.L329,.L322,.L35
	.byte	7
	.word	.L330,.L322,.L331
	.byte	9
	.word	.L332,.L333
	.byte	12
	.word	.L334,.L322,.L331
	.byte	0,0,0,7
	.word	.L335,.L35,.L336
	.byte	9
	.word	.L337,.L338
	.byte	10
	.word	.L339,.L35,.L336
	.byte	7
	.word	.L296,.L35,.L336
	.byte	9
	.word	.L298,.L299
	.byte	10
	.word	.L300,.L35,.L336
	.byte	6
	.byte	'icr',0,4,154,1,29
	.word	.L183,.L340
	.byte	0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_GetResource')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,5,0,49,16
	.byte	2,6,0,0,10,11,1,49,16,17,1,18,1,0,0,11,29,0,49,16,17,1,18,1,0,0,12,11,0,49,16,17,1,18,1,0,0,13,11,0,49
	.byte	16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_GetResource')
	.sect	'.debug_line'
.L87:
	.word	.L561-.L560
.L560:
	.half	3
	.word	.L563-.L562
.L562:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Isr.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0,0
.L563:
	.byte	4,2,5,3,7,0,5,2
	.word	.L64
	.byte	3,224,4,1,4,5,9
	.half	.L484-.L64
	.byte	3,212,124,1,4,1,5,8,9
	.half	.L173-.L484
	.byte	3,208,5,1,5,12,7,9
	.half	.L564-.L173
	.byte	3,2,1,5,1,3,207,0,1,4,6,5,16,7,9
	.half	.L13-.L564
	.byte	3,161,122,1,5,21,9
	.half	.L176-.L13
	.byte	1,5,80,9
	.half	.L485-.L176
	.byte	3,254,0,1,4,1,5,8,9
	.half	.L565-.L485
	.byte	3,148,4,1,5,12,7,9
	.half	.L566-.L565
	.byte	3,2,1,5,1,3,203,0,1,4,6,5,16,7,9
	.half	.L15-.L566
	.byte	3,134,122,1,4,3,5,103,9
	.half	.L192-.L15
	.byte	3,125,1,4,1,5,8,9
	.half	.L186-.L192
	.byte	3,180,5,1,5,12,7,9
	.half	.L567-.L186
	.byte	3,2,1,5,1,3,199,0,1,4,7,5,10,7,9
	.half	.L17-.L567
	.byte	3,154,121,1,5,28,9
	.half	.L568-.L17
	.byte	1,4,2,5,3,9
	.half	.L197-.L568
	.byte	3,241,3,1,4,8,5,30,9
	.half	.L202-.L197
	.byte	3,247,125,1,5,35,9
	.half	.L569-.L202
	.byte	1,4,1,5,10,9
	.half	.L486-.L569
	.byte	3,203,4,1,5,14,7,9
	.half	.L570-.L486
	.byte	3,2,1,5,1,3,49,1,4,8,5,33,7,9
	.half	.L19-.L570
	.byte	3,230,122,1,4,6,5,35,9
	.half	.L226-.L19
	.byte	3,3,1,4,1,5,3,9
	.half	.L227-.L226
	.byte	3,232,1,1,4,6,5,58,7,9
	.half	.L234-.L227
	.byte	3,152,126,1,5,56,9
	.half	.L571-.L234
	.byte	1,4,1,5,3,9
	.half	.L572-.L571
	.byte	3,180,2,1,5,12,7,9
	.half	.L573-.L572
	.byte	3,3,1,5,17,1,5,55,9
	.half	.L22-.L573
	.byte	3,7,1,4,9,5,18,9
	.half	.L574-.L22
	.byte	3,141,124,1,5,36,9
	.half	.L240-.L574
	.byte	3,15,1,5,50,9
	.half	.L575-.L240
	.byte	1,4,4,5,38,9
	.half	.L576-.L575
	.byte	3,162,3,1,5,46,9
	.half	.L577-.L576
	.byte	1,4,1,5,79,3,110,1,4,6,5,63,9
	.half	.L21-.L577
	.byte	3,251,125,1,5,11,9
	.half	.L578-.L21
	.byte	1,5,42,7,9
	.half	.L579-.L578
	.byte	3,1,1,5,39,9
	.half	.L580-.L579
	.byte	1,5,63,7,9
	.half	.L25-.L580
	.byte	3,127,1,4,1,5,3,9
	.half	.L26-.L25
	.byte	3,166,2,1,5,12,7,9
	.half	.L253-.L26
	.byte	3,3,1,5,15,1,5,58,9
	.half	.L27-.L253
	.byte	3,9,1,4,10,5,14,9
	.half	.L581-.L27
	.byte	3,254,124,1,4,11,5,37,9
	.half	.L582-.L581
	.byte	3,166,127,1,4,1,5,10,9
	.half	.L24-.L582
	.byte	3,173,6,1,5,14,7,9
	.half	.L212-.L24
	.byte	3,2,1,5,1,3,45,1,4,8,5,33,7,9
	.half	.L29-.L212
	.byte	3,230,122,1,4,1,5,7,9
	.half	.L487-.L29
	.byte	3,249,4,1,5,79,7,9
	.half	.L259-.L487
	.byte	3,164,126,1,4,8,5,14,9
	.half	.L264-.L259
	.byte	3,154,125,1,4,4,5,34,9
	.half	.L265-.L264
	.byte	3,193,126,1,5,30,9
	.half	.L278-.L265
	.byte	3,155,3,1,5,65,9
	.half	.L283-.L278
	.byte	3,229,124,1,4,3,5,5,9
	.half	.L284-.L283
	.byte	3,155,1,1,4,4,5,40,7,9
	.half	.L286-.L284
	.byte	3,149,3,1,5,73,9
	.half	.L583-.L286
	.byte	1,5,71,9
	.half	.L488-.L583
	.byte	1,5,3,9
	.half	.L292-.L488
	.byte	3,232,123,1,9
	.half	.L584-.L292
	.byte	3,3,1,9
	.half	.L585-.L584
	.byte	3,1,1,9
	.half	.L297-.L585
	.byte	3,77,1,5,10,9
	.half	.L586-.L297
	.byte	3,1,1,5,41,9
	.half	.L587-.L586
	.byte	1,5,3,9
	.half	.L489-.L587
	.byte	3,2,1,9
	.half	.L588-.L489
	.byte	3,1,1,4,3,5,25,9
	.half	.L32-.L588
	.byte	3,181,1,1,4,4,5,42,9
	.half	.L31-.L32
	.byte	3,173,126,1,5,75,9
	.half	.L589-.L31
	.byte	1,5,73,9
	.half	.L492-.L589
	.byte	1,5,3,9
	.half	.L590-.L492
	.byte	3,3,1,4,6,5,18,9
	.half	.L303-.L590
	.byte	3,104,1,4,8,5,7,9
	.half	.L311-.L303
	.byte	1,5,21,9
	.half	.L591-.L311
	.byte	1,5,19,9
	.half	.L592-.L591
	.byte	1,5,13,9
	.half	.L593-.L592
	.byte	3,1,1,4,6,5,63,9
	.half	.L316-.L593
	.byte	3,181,1,1,5,18,9
	.half	.L594-.L316
	.byte	1,5,11,9
	.half	.L595-.L594
	.byte	1,4,1,5,7,9
	.half	.L596-.L595
	.byte	3,164,5,1,4,10,5,78,7,9
	.half	.L322-.L596
	.byte	3,201,121,1,5,29,9
	.half	.L597-.L322
	.byte	3,27,1,4,8,5,14,9
	.half	.L331-.L597
	.byte	3,199,1,1,4,1,5,49,9
	.half	.L598-.L331
	.byte	3,171,2,1,5,43,9
	.half	.L599-.L598
	.byte	3,3,1,5,3,9
	.half	.L491-.L599
	.byte	1,4,6,5,16,7,9
	.half	.L600-.L491
	.byte	3,201,124,1,4,12,5,14,9
	.half	.L601-.L600
	.byte	3,173,2,1,4,1,5,65,9
	.half	.L602-.L601
	.byte	3,141,1,1,4,4,5,3,9
	.half	.L35-.L602
	.byte	3,249,123,1,5,10,9
	.half	.L603-.L35
	.byte	3,1,1,5,41,9
	.half	.L604-.L603
	.byte	1,5,3,9
	.half	.L493-.L604
	.byte	3,2,1,9
	.half	.L605-.L493
	.byte	3,1,1,4,1,5,14,9
	.half	.L336-.L605
	.byte	3,176,6,1,5,1,3,5,1,7,9
	.half	.L89-.L336
	.byte	0,1,1
.L561:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_GetResource')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L64,0,.L89-.L64,0,0
.L175:
	.word	-1,.L64,0,.L173-.L64,.L13-.L64,.L176-.L64,0,0
.L190:
	.word	-1,.L64,.L15-.L64,.L186-.L64,-1,.L68,0,.L99-.L68,0,0
.L233:
	.word	-1,.L64,.L226-.L64,.L227-.L64,.L234-.L64,.L21-.L64,0,0
.L282:
	.word	-1,.L64,.L265-.L64,.L278-.L64,.L283-.L64,.L284-.L64,0,0
.L323:
	.word	-1,.L64,.L316-.L64,.L322-.L64,-1,.L66,0,.L104-.L66,0,0
	.sdecl	'.debug_info',debug,cluster('Os_Api_ReleaseResource')
	.sect	'.debug_info'
.L90:
	.word	2164
	.half	3
	.word	.L91
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L93,.L92
	.byte	2
	.word	.L71
	.byte	3
	.byte	'Os_Api_ReleaseResource',0,1,238,7,30
	.word	.L167
	.byte	1,1,1
	.word	.L70,.L341,.L69
	.byte	4
	.byte	'ResID',0,1,240,7,16
	.word	.L169,.L342
	.byte	5
	.word	.L70,.L341
	.byte	6
	.byte	'status',0,1,243,7,17
	.word	.L167,.L343
	.byte	7
	.word	.L172,.L344,.L345
	.byte	8
	.word	.L174,.L346
	.byte	7
	.word	.L177,.L344,.L345
	.byte	9
	.word	.L178,.L348
	.byte	10
	.word	.L180,.L344,.L345
	.byte	7
	.word	.L181,.L344,.L345
	.byte	10
	.word	.L182,.L344,.L345
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L183,.L349
	.byte	0,0,0,0,0,0,11
	.word	.L172,.L38,.L347
	.byte	7
	.word	.L185,.L40,.L350
	.byte	9
	.word	.L187,.L351
	.byte	10
	.word	.L189,.L40,.L350
	.byte	7
	.word	.L191,.L40,.L352
	.byte	9
	.word	.L193,.L353
	.byte	12
	.word	.L195,.L40,.L352
	.byte	0,0,0,5
	.word	.L42,.L341
	.byte	7
	.word	.L196,.L42,.L354
	.byte	9
	.word	.L198,.L355
	.byte	12
	.word	.L200,.L42,.L354
	.byte	0,7
	.word	.L201,.L354,.L356
	.byte	9
	.word	.L203,.L357
	.byte	10
	.word	.L205,.L354,.L356
	.byte	7
	.word	.L206,.L354,.L356
	.byte	9
	.word	.L207,.L358
	.byte	10
	.word	.L209,.L354,.L356
	.byte	7
	.word	.L172,.L354,.L356
	.byte	10
	.word	.L174,.L354,.L356
	.byte	7
	.word	.L177,.L354,.L356
	.byte	9
	.word	.L178,.L348
	.byte	10
	.word	.L180,.L354,.L356
	.byte	7
	.word	.L181,.L354,.L356
	.byte	10
	.word	.L182,.L354,.L356
	.byte	6
	.byte	'ReturnValue',0,2,224,4,10
	.word	.L183,.L359
	.byte	0,0,0,0,0,0,0,0,0,0,5
	.word	.L46,.L341
	.byte	6
	.byte	'intState',0,1,166,8,23
	.word	.L256,.L360
	.byte	6
	.byte	'previousInterruptState',0,1,167,8,23
	.word	.L256,.L361
	.byte	7
	.word	.L362,.L46,.L363
	.byte	9
	.word	.L364,.L365
	.byte	12
	.word	.L366,.L46,.L363
	.byte	0,7
	.word	.L302,.L363,.L367
	.byte	9
	.word	.L304,.L368
	.byte	10
	.word	.L306,.L363,.L367
	.byte	7
	.word	.L307,.L363,.L367
	.byte	10
	.word	.L308,.L363,.L367
	.byte	6
	.byte	'retState',0,3,128,1,29
	.word	.L183,.L369
	.byte	0,0,0,0,13
	.word	.L370,.L48
	.byte	7
	.word	.L136,.L48,.L371
	.byte	9
	.word	.L137,.L372
	.byte	10
	.word	.L139,.L48,.L371
	.byte	6
	.byte	'lock',0,4,124,51
	.word	.L141,.L373
	.byte	0,0,7
	.word	.L129,.L371,.L374
	.byte	9
	.word	.L131,.L375
	.byte	12
	.word	.L133,.L371,.L374
	.byte	0,5
	.word	.L374,.L51
	.byte	7
	.word	.L376,.L374,.L377
	.byte	9
	.word	.L378,.L379
	.byte	14
	.word	.L380,.L381
	.byte	0,7
	.word	.L154,.L377,.L382
	.byte	9
	.word	.L155,.L384
	.byte	9
	.word	.L157,.L385
	.byte	8
	.word	.L159,.L386
	.byte	6
	.byte	'previousPrio',0,1,185,5,19
	.word	.L160,.L387
	.byte	7
	.word	.L162,.L377,.L382
	.byte	9
	.word	.L164,.L388
	.byte	12
	.word	.L166,.L377,.L382
	.byte	0,0,0,7
	.word	.L376,.L382,.L383
	.byte	9
	.word	.L378,.L379
	.byte	0,7
	.word	.L154,.L383,.L52
	.byte	9
	.word	.L155,.L384
	.byte	9
	.word	.L157,.L385
	.byte	0,7
	.word	.L389,.L390,.L51
	.byte	9
	.word	.L391,.L392
	.byte	9
	.word	.L393,.L394
	.byte	10
	.word	.L395,.L390,.L51
	.byte	6
	.byte	'nextTask',0,5,131,3,51
	.word	.L396,.L397
	.byte	7
	.word	.L398,.L399,.L51
	.byte	9
	.word	.L400,.L401
	.byte	9
	.word	.L402,.L403
	.byte	9
	.word	.L404,.L405
	.byte	10
	.word	.L406,.L399,.L51
	.byte	7
	.word	.L407,.L399,.L54
	.byte	10
	.word	.L408,.L399,.L54
	.byte	10
	.word	.L409,.L399,.L54
	.byte	7
	.word	.L410,.L399,.L411
	.byte	10
	.word	.L412,.L399,.L411
	.byte	7
	.word	.L413,.L399,.L414
	.byte	10
	.word	.L415,.L399,.L414
	.byte	7
	.word	.L416,.L399,.L417
	.byte	12
	.word	.L418,.L399,.L417
	.byte	0,0,0,0,0,0,0,0,7
	.word	.L419,.L54,.L420
	.byte	9
	.word	.L421,.L422
	.byte	10
	.word	.L423,.L54,.L420
	.byte	7
	.word	.L424,.L54,.L420
	.byte	9
	.word	.L425,.L426
	.byte	9
	.word	.L427,.L428
	.byte	10
	.word	.L429,.L54,.L420
	.byte	6
	.byte	'previousState',0,6,144,1,29
	.word	.L183,.L430
	.byte	7
	.word	.L291,.L54,.L431
	.byte	9
	.word	.L293,.L432
	.byte	12
	.word	.L295,.L54,.L431
	.byte	0,7
	.word	.L296,.L433,.L420
	.byte	9
	.word	.L298,.L434
	.byte	10
	.word	.L300,.L433,.L420
	.byte	6
	.byte	'icr',0,3,154,1,29
	.word	.L183,.L435
	.byte	0,0,0,0,0,0,7
	.word	.L436,.L420,.L55
	.byte	9
	.word	.L437,.L438
	.byte	9
	.word	.L439,.L440
	.byte	12
	.word	.L441,.L420,.L55
	.byte	0,7
	.word	.L442,.L55,.L443
	.byte	9
	.word	.L444,.L445
	.byte	9
	.word	.L446,.L447
	.byte	12
	.word	.L448,.L55,.L443
	.byte	0,7
	.word	.L449,.L450,.L451
	.byte	9
	.word	.L452,.L453
	.byte	10
	.word	.L454,.L450,.L451
	.byte	6
	.byte	'PCXIAddr',0,7,149,2,10
	.word	.L183,.L455
	.byte	6
	.byte	'ctxPsw',0,7,150,2,43
	.word	.L456,.L457
	.byte	0,0,0,0,0,0,0,7
	.word	.L335,.L51,.L458
	.byte	9
	.word	.L337,.L459
	.byte	10
	.word	.L339,.L51,.L458
	.byte	7
	.word	.L296,.L51,.L458
	.byte	9
	.word	.L298,.L434
	.byte	10
	.word	.L300,.L51,.L458
	.byte	6
	.byte	'icr',0,3,154,1,29
	.word	.L183,.L460
	.byte	0,0,0,0,7
	.word	.L461,.L462,.L56
	.byte	9
	.word	.L463,.L464
	.byte	10
	.word	.L465,.L462,.L56
	.byte	10
	.word	.L466,.L462,.L56
	.byte	6
	.byte	'currentLevel',0,8,243,2,25
	.word	.L183,.L467
	.byte	7
	.word	.L277,.L462,.L468
	.byte	9
	.word	.L279,.L469
	.byte	14
	.word	.L281,.L470
	.byte	0,7
	.word	.L277,.L471,.L472
	.byte	9
	.word	.L279,.L469
	.byte	0,7
	.word	.L285,.L473,.L56
	.byte	9
	.word	.L287,.L474
	.byte	10
	.word	.L289,.L473,.L56
	.byte	6
	.byte	'previousState',0,3,200,1,29
	.word	.L183,.L475
	.byte	7
	.word	.L291,.L473,.L476
	.byte	9
	.word	.L293,.L432
	.byte	12
	.word	.L295,.L473,.L476
	.byte	0,7
	.word	.L296,.L477,.L56
	.byte	9
	.word	.L298,.L434
	.byte	10
	.word	.L300,.L477,.L56
	.byte	6
	.byte	'icr',0,3,154,1,29
	.word	.L183,.L478
	.byte	0,0,0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Os_Api_ReleaseResource')
	.sect	'.debug_abbrev'
.L91:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,5,0,49,16
	.byte	2,6,0,0,10,11,1,49,16,17,1,18,1,0,0,11,29,0,49,16,17,1,18,1,0,0,12,11,0,49,16,17,1,18,1,0,0,13,11,0,17
	.byte	1,18,1,0,0,14,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Os_Api_ReleaseResource')
	.sect	'.debug_line'
.L92:
	.word	.L607-.L606
.L606:
	.half	3
	.word	.L609-.L608
.L608:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Compiler_TaskingInt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Lock.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Task.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Context.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Core.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Scheduler.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Hal_Core_162_P.h',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Stack.h',0,0,0,0,0
.L609:
	.byte	5,30,7,0,5,2
	.word	.L70
	.byte	3,237,7,1,4,2,5,3,9
	.half	.L344-.L70
	.byte	3,243,124,1,4,6,9
	.half	.L495-.L344
	.byte	3,212,124,1,4,1,5,8,9
	.half	.L345-.L495
	.byte	3,200,6,1,5,12,7,9
	.half	.L610-.L345
	.byte	3,2,1,5,1,3,235,0,1,4,9,5,16,7,9
	.half	.L38-.L610
	.byte	3,141,121,1,5,21,9
	.half	.L347-.L38
	.byte	1,5,80,9
	.half	.L496-.L347
	.byte	3,254,0,1,4,1,5,8,9
	.half	.L611-.L496
	.byte	3,140,5,1,5,12,7,9
	.half	.L612-.L611
	.byte	3,2,1,5,1,3,231,0,1,4,9,5,16,7,9
	.half	.L40-.L612
	.byte	3,242,120,1,4,8,5,103,9
	.half	.L352-.L40
	.byte	3,125,1,4,1,5,8,9
	.half	.L350-.L352
	.byte	3,172,6,1,5,12,7,9
	.half	.L613-.L350
	.byte	3,2,1,5,1,3,227,0,1,4,10,5,10,7,9
	.half	.L42-.L613
	.byte	3,134,120,1,5,28,9
	.half	.L614-.L42
	.byte	1,4,2,5,3,9
	.half	.L354-.L614
	.byte	3,241,3,1,4,4,5,30,9
	.half	.L356-.L354
	.byte	3,133,126,1,5,35,9
	.half	.L615-.L356
	.byte	1,4,1,5,10,9
	.half	.L497-.L615
	.byte	3,182,5,1,5,14,7,9
	.half	.L616-.L497
	.byte	3,2,1,5,1,3,204,0,1,4,4,5,49,7,9
	.half	.L44-.L616
	.byte	3,139,121,1,4,1,5,10,9
	.half	.L617-.L44
	.byte	3,171,6,1,5,14,7,9
	.half	.L618-.L617
	.byte	3,2,1,5,1,3,200,0,1,4,4,5,33,7,9
	.half	.L46-.L618
	.byte	3,210,121,1,5,40,9
	.half	.L619-.L46
	.byte	1,4,3,5,75,9
	.half	.L363-.L619
	.byte	3,199,126,1,5,42,9
	.half	.L620-.L363
	.byte	1,5,73,9
	.half	.L500-.L620
	.byte	1,5,3,9
	.half	.L621-.L500
	.byte	3,3,1,4,1,5,7,9
	.half	.L367-.L621
	.byte	3,176,7,1,4,4,5,14,7,9
	.half	.L370-.L367
	.byte	3,189,122,1,4,1,5,70,9
	.half	.L622-.L370
	.byte	3,200,5,1,5,32,9
	.half	.L623-.L622
	.byte	1,4,4,5,10,9
	.half	.L48-.L623
	.byte	3,195,120,1,5,19,9
	.half	.L499-.L48
	.byte	3,1,1,5,24,9
	.half	.L624-.L499
	.byte	1,5,13,9
	.half	.L625-.L624
	.byte	1,5,7,9
	.half	.L626-.L625
	.byte	3,1,1,5,21,9
	.half	.L627-.L626
	.byte	1,5,19,9
	.half	.L628-.L627
	.byte	1,4,9,5,63,9
	.half	.L371-.L628
	.byte	3,164,1,1,5,18,9
	.half	.L629-.L371
	.byte	1,5,11,9
	.half	.L630-.L629
	.byte	1,4,1,5,7,9
	.half	.L631-.L630
	.byte	3,165,6,1,5,96,7,9
	.half	.L374-.L631
	.byte	3,2,1,4,4,5,14,9
	.half	.L377-.L374
	.byte	3,168,122,1,4,11,9
	.half	.L382-.L377
	.byte	3,164,1,1,4,5,5,78,9
	.half	.L383-.L382
	.byte	3,250,124,1,4,1,5,45,9
	.half	.L632-.L383
	.byte	3,171,4,1,4,5,5,29,9
	.half	.L498-.L632
	.byte	3,240,123,1,4,1,5,3,9
	.half	.L633-.L498
	.byte	3,147,4,1,4,9,5,16,7,9
	.half	.L634-.L633
	.byte	3,171,124,1,4,11,5,14,9
	.half	.L635-.L634
	.byte	3,173,2,1,4,1,5,57,9
	.half	.L636-.L635
	.byte	3,171,1,1,5,93,9
	.half	.L52-.L636
	.byte	3,137,3,1,4,12,5,69,9
	.half	.L637-.L52
	.byte	3,215,120,1,5,43,9
	.half	.L638-.L637
	.byte	1,5,74,9
	.half	.L639-.L638
	.byte	1,4,1,5,9,9
	.half	.L640-.L639
	.byte	3,178,7,1,5,93,7,9
	.half	.L390-.L640
	.byte	3,119,1,4,5,5,12,9
	.half	.L501-.L390
	.byte	3,191,122,1,4,13,5,33,9
	.half	.L399-.L501
	.byte	3,154,127,1,4,11,5,10,9
	.half	.L417-.L399
	.byte	3,87,1,5,32,9
	.half	.L641-.L417
	.byte	1,5,14,9
	.half	.L414-.L641
	.byte	3,164,127,1,5,68,9
	.half	.L642-.L414
	.byte	3,250,4,1,4,14,5,40,9
	.half	.L411-.L642
	.byte	3,251,122,1,5,8,9
	.half	.L643-.L411
	.byte	3,2,1,5,5,9
	.half	.L644-.L643
	.byte	1,5,17,7,9
	.half	.L645-.L644
	.byte	3,21,1,5,29,9
	.half	.L646-.L645
	.byte	3,2,1,4,3,5,40,9
	.half	.L54-.L646
	.byte	3,183,4,1,5,71,9
	.half	.L503-.L54
	.byte	1,4,6,5,3,9
	.half	.L431-.L503
	.byte	3,178,123,1,9
	.half	.L647-.L431
	.byte	3,3,1,9
	.half	.L648-.L647
	.byte	3,1,1,4,5,5,32,9
	.half	.L649-.L648
	.byte	3,241,1,1,4,6,5,3,9
	.half	.L505-.L649
	.byte	3,146,126,1,4,3,9
	.half	.L433-.L505
	.byte	1,5,10,9
	.half	.L650-.L433
	.byte	3,1,1,5,41,9
	.half	.L506-.L650
	.byte	1,5,3,9
	.half	.L507-.L506
	.byte	3,2,1,9
	.half	.L651-.L507
	.byte	3,1,1,4,9,5,44,9
	.half	.L420-.L651
	.byte	3,175,8,1,5,60,9
	.half	.L652-.L420
	.byte	1,5,26,7,9
	.half	.L653-.L652
	.byte	3,2,1,5,43,9
	.half	.L55-.L653
	.byte	3,220,126,1,4,11,5,14,9
	.half	.L654-.L55
	.byte	3,241,120,1,4,9,5,30,9
	.half	.L655-.L654
	.byte	3,143,7,1,4,11,5,42,9
	.half	.L656-.L655
	.byte	3,216,125,1,4,9,5,36,9
	.half	.L443-.L656
	.byte	3,171,2,1,4,7,5,14,9
	.half	.L450-.L443
	.byte	3,231,121,1,5,63,9
	.half	.L511-.L450
	.byte	3,1,1,5,10,9
	.half	.L510-.L511
	.byte	1,5,15,9
	.half	.L513-.L510
	.byte	3,3,1,5,23,9
	.half	.L657-.L513
	.byte	1,5,14,9
	.half	.L658-.L657
	.byte	3,1,1,5,45,9
	.half	.L512-.L658
	.byte	1,5,58,9
	.half	.L659-.L512
	.byte	3,127,1,5,11,1,4,9,5,31,9
	.half	.L451-.L659
	.byte	3,152,6,1,5,46,9
	.half	.L660-.L451
	.byte	1,4,3,5,3,9
	.half	.L51-.L660
	.byte	3,233,120,1,5,10,9
	.half	.L661-.L51
	.byte	3,1,1,5,41,9
	.half	.L662-.L661
	.byte	1,5,3,9
	.half	.L514-.L662
	.byte	3,2,1,9
	.half	.L663-.L514
	.byte	3,1,1,4,1,5,7,9
	.half	.L458-.L663
	.byte	3,190,7,1,4,3,5,34,7,9
	.half	.L462-.L458
	.byte	3,213,120,1,5,42,9
	.half	.L468-.L462
	.byte	3,155,3,1,5,65,9
	.half	.L471-.L468
	.byte	3,229,124,1,4,8,5,5,9
	.half	.L472-.L471
	.byte	3,196,1,1,4,3,5,40,7,9
	.half	.L473-.L472
	.byte	3,236,2,1,5,71,9
	.half	.L516-.L473
	.byte	1,5,3,9
	.half	.L476-.L516
	.byte	3,232,123,1,9
	.half	.L664-.L476
	.byte	3,3,1,9
	.half	.L665-.L664
	.byte	3,1,1,9
	.half	.L477-.L665
	.byte	3,77,1,5,10,9
	.half	.L666-.L477
	.byte	3,1,1,5,41,9
	.half	.L667-.L666
	.byte	1,5,3,9
	.half	.L517-.L667
	.byte	3,2,1,9
	.half	.L668-.L517
	.byte	3,1,1,4,1,5,14,9
	.half	.L56-.L668
	.byte	3,196,7,1,5,1,3,5,1,7,9
	.half	.L94-.L56
	.byte	0,1,1
.L607:
	.sdecl	'.debug_ranges',debug,cluster('Os_Api_ReleaseResource')
	.sect	'.debug_ranges'
.L93:
	.word	-1,.L70,0,.L94-.L70,0,0
.L346:
	.word	-1,.L70,.L344-.L70,.L345-.L70,.L38-.L70,.L347-.L70,0,0
.L381:
	.word	-1,.L70,.L374-.L70,.L377-.L70,.L382-.L70,.L383-.L70,0,0
.L386:
	.word	-1,.L70,.L377-.L70,.L382-.L70,.L383-.L70,.L52-.L70,0,0
.L470:
	.word	-1,.L70,.L462-.L70,.L468-.L70,.L471-.L70,.L472-.L70,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L95:
	.word	173
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L98,.L97
	.byte	2
	.word	.L71
	.byte	3
	.byte	'.cocofun_1',0,1,246,6,30,1
	.word	.L68,.L99,.L67
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L97:
	.word	.L670-.L669
.L669:
	.half	3
	.word	.L672-.L671
.L671:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Interrupt.h',0,0,0,0,0
.L672:
	.byte	4,2,5,103,7,0,5,2
	.word	.L68
	.byte	3,216,1,1,5,84,9
	.half	.L673-.L68
	.byte	3,1,1,5,103,9
	.half	.L674-.L673
	.byte	3,127,1,5,118,9
	.half	.L675-.L674
	.byte	1,5,84,3,2,1,5,103,9
	.half	.L676-.L675
	.byte	3,127,1,9
	.half	.L99-.L676
	.byte	0,1,1,4,2,5,103,0,5,2
	.word	.L68
	.byte	3,216,1,1,5,84,9
	.half	.L673-.L68
	.byte	3,1,1,5,103,9
	.half	.L674-.L673
	.byte	3,127,1,5,118,9
	.half	.L675-.L674
	.byte	1,5,84,3,2,1,5,103,9
	.half	.L676-.L675
	.byte	3,127,1,9
	.half	.L99-.L676
	.byte	0,1,1
.L670:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L98:
	.word	-1,.L68,0,.L99-.L68,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L100:
	.word	173
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\Zonal\\demo011\\tasking\\Debug\\',0,12,1
	.word	.L103,.L102
	.byte	2
	.word	.L71
	.byte	3
	.byte	'.cocofun_2',0,1,246,6,30,1
	.word	.L66,.L104,.L65
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L102:
	.word	.L678-.L677
.L677:
	.half	3
	.word	.L680-.L679
.L679:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\component\\Os\\Implementation\\Os_Resource.c',0,0,0,0
	.byte	'..\\component\\Os\\Implementation\\Os_Thread.h',0,0,0,0,0
.L680:
	.byte	4,2,5,11,7,0,5,2
	.word	.L66
	.byte	3,163,2,1,5,42,7,9
	.half	.L681-.L66
	.byte	3,1,1,5,39,9
	.half	.L682-.L681
	.byte	1,5,63,7,9
	.half	.L33-.L682
	.byte	3,127,1,9
	.half	.L104-.L33
	.byte	0,1,1,4,2,5,11,0,5,2
	.word	.L66
	.byte	3,163,2,1,5,42,7,9
	.half	.L681-.L66
	.byte	3,1,1,5,39,9
	.half	.L682-.L681
	.byte	1,5,63,7,9
	.half	.L33-.L682
	.byte	3,127,1,9
	.half	.L104-.L33
	.byte	0,1,1
.L678:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L103:
	.word	-1,.L66,0,.L104-.L66,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L67:
	.word	-1,.L68,0,.L99-.L68
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L65:
	.word	-1,.L66,0,.L104-.L66
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_GetResource')
	.sect	'.debug_loc'
.L208:
	.word	0,0
.L204:
	.word	0,0
.L179:
	.word	0,0
.L271:
	.word	0,0
.L216:
	.word	0,0
.L222:
	.word	0,0
.L250:
	.word	0,0
.L231:
	.word	0,0
.L244:
	.word	0,0
.L273:
	.word	0,0
.L242:
	.word	0,0
.L280:
	.word	0,0
.L288:
	.word	0,0
.L320:
	.word	0,0
.L318:
	.word	0,0
.L63:
	.word	-1,.L64,0,.L168-.L64
	.half	2
	.byte	138,0
	.word	0,0
.L170:
	.word	-1,.L64,.L68-.L64,.L99-.L64
	.half	1
	.byte	84
	.word	.L66-.L64,.L104-.L64
	.half	1
	.byte	84
	.word	0,.L491-.L64
	.half	1
	.byte	84
	.word	0,0
.L267:
	.word	0,0
.L214:
	.word	0,0
.L220:
	.word	0,0
.L248:
	.word	0,0
.L229:
	.word	0,0
.L326:
	.word	0,0
.L261:
	.word	0,0
.L199:
	.word	0,0
.L184:
	.word	-1,.L64,.L484-.L64,.L485-.L64
	.half	1
	.byte	95
	.word	0,0
.L210:
	.word	-1,.L64,.L202-.L64,.L486-.L64
	.half	1
	.byte	95
	.word	0,0
.L305:
	.word	0,0
.L299:
	.word	0,0
.L338:
	.word	0,0
.L294:
	.word	0,0
.L333:
	.word	0,0
.L328:
	.word	0,0
.L313:
	.word	0,0
.L194:
	.word	0,0
.L254:
	.word	0,0
.L188:
	.word	0,0
.L276:
	.word	-1,.L64,.L283-.L64,.L31-.L64
	.half	1
	.byte	95
	.word	0,0
.L301:
	.word	-1,.L64,.L489-.L64,.L490-.L64
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L340:
	.word	-1,.L64,.L493-.L64,.L494-.L64
	.half	1
	.byte	95
	.word	0,0
.L238:
	.word	-1,.L64,.L240-.L64,.L21-.L64
	.half	1
	.byte	95
	.word	0,0
.L257:
	.word	0,0
.L290:
	.word	-1,.L64,.L488-.L64,.L32-.L64
	.half	1
	.byte	81
	.word	0,0
.L224:
	.word	0,0
.L252:
	.word	-1,.L64,.L24-.L64,.L487-.L64
	.half	1
	.byte	95
	.word	0,0
.L235:
	.word	0,0
.L309:
	.word	-1,.L64,.L66-.L64,.L104-.L64
	.half	1
	.byte	88
	.word	.L492-.L64,.L168-.L64
	.half	1
	.byte	88
	.word	0,0
.L171:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_Api_ReleaseResource')
	.sect	'.debug_loc'
.L405:
	.word	0,0
.L440:
	.word	0,0
.L394:
	.word	0,0
.L453:
	.word	0,0
.L358:
	.word	0,0
.L357:
	.word	0,0
.L379:
	.word	0,0
.L447:
	.word	0,0
.L426:
	.word	0,0
.L348:
	.word	0,0
.L401:
	.word	0,0
.L469:
	.word	0,0
.L474:
	.word	0,0
.L372:
	.word	0,0
.L403:
	.word	0,0
.L69:
	.word	-1,.L70,0,.L344-.L70
	.half	2
	.byte	138,0
	.word	.L344-.L70,.L38-.L70
	.half	2
	.byte	138,8
	.word	.L38-.L70,.L38-.L70
	.half	2
	.byte	138,0
	.word	.L38-.L70,.L40-.L70
	.half	2
	.byte	138,8
	.word	.L40-.L70,.L40-.L70
	.half	2
	.byte	138,0
	.word	.L40-.L70,.L42-.L70
	.half	2
	.byte	138,8
	.word	.L42-.L70,.L42-.L70
	.half	2
	.byte	138,0
	.word	.L42-.L70,.L44-.L70
	.half	2
	.byte	138,8
	.word	.L44-.L70,.L44-.L70
	.half	2
	.byte	138,0
	.word	.L44-.L70,.L46-.L70
	.half	2
	.byte	138,8
	.word	.L46-.L70,.L46-.L70
	.half	2
	.byte	138,0
	.word	.L46-.L70,.L341-.L70
	.half	2
	.byte	138,8
	.word	.L341-.L70,.L341-.L70
	.half	2
	.byte	138,0
	.word	0,0
.L455:
	.word	-1,.L70,.L509-.L70,.L510-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L464:
	.word	0,0
.L342:
	.word	-1,.L70,.L68-.L70,.L99-.L70
	.half	1
	.byte	84
	.word	.L66-.L70,.L104-.L70
	.half	1
	.byte	84
	.word	0,.L498-.L70
	.half	1
	.byte	84
	.word	0,0
.L388:
	.word	0,0
.L365:
	.word	0,0
.L384:
	.word	0,0
.L355:
	.word	0,0
.L349:
	.word	-1,.L70,.L495-.L70,.L496-.L70
	.half	1
	.byte	95
	.word	0,0
.L359:
	.word	-1,.L70,.L356-.L70,.L497-.L70
	.half	1
	.byte	95
	.word	0,0
.L392:
	.word	0,0
.L445:
	.word	0,0
.L368:
	.word	0,0
.L434:
	.word	0,0
.L459:
	.word	0,0
.L432:
	.word	0,0
.L385:
	.word	0,0
.L428:
	.word	0,0
.L353:
	.word	0,0
.L375:
	.word	0,0
.L351:
	.word	0,0
.L422:
	.word	0,0
.L438:
	.word	0,0
.L457:
	.word	-1,.L70,.L511-.L70,.L512-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	.L513-.L70,.L51-.L70
	.half	1
	.byte	111
	.word	0,0
.L467:
	.word	-1,.L70,.L471-.L70,.L516-.L70
	.half	1
	.byte	95
	.word	0,0
.L435:
	.word	-1,.L70,.L507-.L70,.L508-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L460:
	.word	-1,.L70,.L514-.L70,.L515-.L70
	.half	1
	.byte	95
	.word	0,0
.L478:
	.word	-1,.L70,.L517-.L70,.L518-.L70
	.half	1
	.byte	95
	.word	0,0
.L360:
	.word	0,0
.L373:
	.word	-1,.L70,.L66-.L70,.L104-.L70
	.half	1
	.byte	98
	.word	.L499-.L70,.L382-.L70
	.half	1
	.byte	98
	.word	0,0
.L397:
	.word	-1,.L70,.L501-.L70,.L502-.L70
	.half	1
	.byte	98
	.word	.L399-.L70,.L51-.L70
	.half	1
	.byte	109
	.word	.L505-.L70,.L506-.L70
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L361:
	.word	-1,.L70,.L68-.L70,.L99-.L70
	.half	2
	.byte	145,120
	.word	.L66-.L70,.L104-.L70
	.half	2
	.byte	145,120
	.word	0,.L341-.L70
	.half	2
	.byte	145,120
	.word	0,0
.L387:
	.word	-1,.L70,.L498-.L70,.L52-.L70
	.half	1
	.byte	84
	.word	0,0
.L430:
	.word	-1,.L70,.L503-.L70,.L504-.L70
	.half	1
	.byte	95
	.word	0,0
.L475:
	.word	-1,.L70,.L516-.L70,.L56-.L70
	.half	1
	.byte	90
	.word	0,0
.L369:
	.word	-1,.L70,.L66-.L70,.L104-.L70
	.half	1
	.byte	88
	.word	.L500-.L70,.L341-.L70
	.half	1
	.byte	88
	.word	0,0
.L343:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.debug_loc'
.L152:
	.word	0,0
.L138:
	.word	0,0
.L145:
	.word	0,0
.L122:
	.word	0,0
.L61:
	.word	-1,.L62,0,.L113-.L62
	.half	2
	.byte	138,0
	.word	0,0
.L165:
	.word	0,0
.L156:
	.word	0,0
.L158:
	.word	0,0
.L132:
	.word	0,0
.L124:
	.word	0,0
.L115:
	.word	-1,.L62,0,.L3-.L62
	.half	1
	.byte	100
	.word	.L130-.L62,.L113-.L62
	.half	1
	.byte	111
	.word	0,0
.L118:
	.word	-1,.L62,.L120-.L62,.L113-.L62
	.half	1
	.byte	108
	.word	0,0
.L142:
	.word	-1,.L62,.L482-.L62,.L483-.L62
	.half	1
	.byte	98
	.word	0,0
.L161:
	.word	-1,.L62,.L481-.L62,.L10-.L62
	.half	1
	.byte	84
	.word	0,0
.L148:
	.word	-1,.L62,.L479-.L62,.L480-.L62
	.half	5
	.byte	144,32,157,32,0
	.word	.L7-.L62,.L2-.L62
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Os_ResourceInit')
	.sect	'.debug_loc'
.L111:
	.word	0,0
.L59:
	.word	-1,.L60,0,.L105-.L60
	.half	2
	.byte	138,0
	.word	0,0
.L107:
	.word	-1,.L60,0,.L105-.L60
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L683:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Os_ResourceInit')
	.sect	'.debug_frame'
	.word	24
	.word	.L683,.L60,.L105-.L60
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Os_ResourceForciblyReleaseLocks')
	.sect	'.debug_frame'
	.word	12
	.word	.L683,.L62,.L113-.L62
	.sdecl	'.debug_frame',debug,cluster('Os_Api_GetResource')
	.sect	'.debug_frame'
	.word	12
	.word	.L683,.L64,.L168-.L64
	.sdecl	'.debug_frame',debug,cluster('Os_Api_ReleaseResource')
	.sect	'.debug_frame'
	.word	120
	.word	.L683,.L70,.L341-.L70
	.byte	4
	.word	(.L344-.L70)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L38-.L344)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L40-.L38)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L42-.L40)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L44-.L42)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L46-.L44)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L341-.L46)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L684:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L684,.L66,.L104-.L66
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L684,.L68,.L99-.L68
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\component\Os\Implementation\Os_Resource.c	  1131  
; ..\component\Os\Implementation\Os_Resource.c	  1132  
; ..\component\Os\Implementation\Os_Resource.c	  1133  #define OS_STOP_SEC_CODE
; ..\component\Os\Implementation\Os_Resource.c	  1134  #include "Os_MemMap_OsCode.h"                                                                                           /* PRQA S 5087 */ /* MD_MSR_MemMap */
; ..\component\Os\Implementation\Os_Resource.c	  1135  
; ..\component\Os\Implementation\Os_Resource.c	  1136  
; ..\component\Os\Implementation\Os_Resource.c	  1137  /* module specific MISRA deviations:
; ..\component\Os\Implementation\Os_Resource.c	  1138   */
; ..\component\Os\Implementation\Os_Resource.c	  1139  
; ..\component\Os\Implementation\Os_Resource.c	  1140  /* SBSW_JUSTIFICATION_BEGIN
; ..\component\Os\Implementation\Os_Resource.c	  1141  
; ..\component\Os\Implementation\Os_Resource.c	  1142  \ID SBSW_OS_RES_TASKTHREAD2TASK_001
; ..\component\Os\Implementation\Os_Resource.c	  1143   \DESCRIPTION     Os_TaskThread2Task is called is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1144   \COUNTERMEASURE  \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1145  
; ..\component\Os\Implementation\Os_Resource.c	  1146  \ID SBSW_OS_RES_RESOURCEINTERRUPTISCEILINGPRIOGE_001
; ..\component\Os\Implementation\Os_Resource.c	  1147   \DESCRIPTION     Os_ResourceInterruptIsCeilingPrioGe is called with the return value of Os_Resource2ResourceInterrupt
; ..\component\Os\Implementation\Os_Resource.c	  1148                    and CurrentThread. CurrentThread is passed as argument. Precondition ensures that the CurrentThread
; ..\component\Os\Implementation\Os_Resource.c	  1149                    pointer is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Resource.c	  1150                    Os_ThreadGetOwnerApplication.
; ..\component\Os\Implementation\Os_Resource.c	  1151   \COUNTERMEASURE  \R [CM_RESOURCE2RESOURCEINTERRUPT_R]
; ..\component\Os\Implementation\Os_Resource.c	  1152  
; ..\component\Os\Implementation\Os_Resource.c	  1153  \ID SBSW_OS_RES_TASKGETHOMEPRIORITY_001
; ..\component\Os\Implementation\Os_Resource.c	  1154   \DESCRIPTION     Os_TaskGetHomePriority is called is called with the return value of Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Resource.c	  1155   \COUNTERMEASURE  \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Resource.c	  1156  
; ..\component\Os\Implementation\Os_Resource.c	  1157  \ID SBSW_OS_RES_ISRLEVELISLE_001
; ..\component\Os\Implementation\Os_Resource.c	  1158   \DESCRIPTION     Os_IsrLevelIsLe is called with the return value of Os_IsrThread2Isr and a pointer to a
; ..\component\Os\Implementation\Os_Resource.c	  1159                    local variable.
; ..\component\Os\Implementation\Os_Resource.c	  1160   \COUNTERMEASURE  \M [CM_OS_ISRTHREAD2ISR_01_02_M]
; ..\component\Os\Implementation\Os_Resource.c	  1161                    \M [CM_OS_ISRTHREAD2ISR_02_02_M]
; ..\component\Os\Implementation\Os_Resource.c	  1162  
; ..\component\Os\Implementation\Os_Resource.c	  1163  \ID SBSW_OS_RES_RESOURCEGETDYN_001
; ..\component\Os\Implementation\Os_Resource.c	  1164   \DESCRIPTION     Write access to a Dyn element returned by Os_ResourceGetDyn.
; ..\component\Os\Implementation\Os_Resource.c	  1165   \COUNTERMEASURE  \M [CM_OS_RESOURCEGETDYN_M]
; ..\component\Os\Implementation\Os_Resource.c	  1166  
; ..\component\Os\Implementation\Os_Resource.c	  1167  \ID SBSW_OS_RES_RESOURCEINTERRUPTGETDYN_001
; ..\component\Os\Implementation\Os_Resource.c	  1168   \DESCRIPTION     Write access to a Dyn element returned by Os_ResourceInterruptGetDyn.
; ..\component\Os\Implementation\Os_Resource.c	  1169   \COUNTERMEASURE  \M [CM_OS_RESOURCEINTERRUPTGETDYN_M]
; ..\component\Os\Implementation\Os_Resource.c	  1170  
; ..\component\Os\Implementation\Os_Resource.c	  1171  \ID SBSW_OS_RES_RESOURCEINTERRUPTGETDYN_002
; ..\component\Os\Implementation\Os_Resource.c	  1172   \DESCRIPTION     Os_ResourceInterruptGetDyn is called with the return value of Os_Resource2ResourceInterrupt.
; ..\component\Os\Implementation\Os_Resource.c	  1173   \COUNTERMEASURE  \R [CM_RESOURCE2RESOURCEINTERRUPT_R]
; ..\component\Os\Implementation\Os_Resource.c	  1174  
; ..\component\Os\Implementation\Os_Resource.c	  1175  \ID SBSW_OS_RES_TASKGETSCHEDULER_001
; ..\component\Os\Implementation\Os_Resource.c	  1176   \DESCRIPTION     Os_TaskGetScheduler is called with the return value of Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Resource.c	  1177   \COUNTERMEASURE  \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Resource.c	  1178  
; ..\component\Os\Implementation\Os_Resource.c	  1179  \ID SBSW_OS_RES_SCHEDULERINCREASEPRIO_001
; ..\component\Os\Implementation\Os_Resource.c	  1180   \DESCRIPTION    Os_SchedulerIncreasePrio is called with the return value of Os_TaskGetScheduler.
; ..\component\Os\Implementation\Os_Resource.c	  1181   \COUNTERMEASURE \M [CM_OS_TASKGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Resource.c	  1182  
; ..\component\Os\Implementation\Os_Resource.c	  1183  \ID SBSW_OS_RES_SCHEDULERDECREASEPRIO_001
; ..\component\Os\Implementation\Os_Resource.c	  1184   \DESCRIPTION    Os_SchedulerDecreasePrio is called with the return value of Os_TaskGetScheduler.
; ..\component\Os\Implementation\Os_Resource.c	  1185   \COUNTERMEASURE \M [CM_OS_TASKGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Resource.c	  1186  
; ..\component\Os\Implementation\Os_Resource.c	  1187  \ID SBSW_OS_RES_THREADGETCORE_001
; ..\component\Os\Implementation\Os_Resource.c	  1188   \DESCRIPTION    Os_ThreadGetCore is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1189   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1190  
; ..\component\Os\Implementation\Os_Resource.c	  1191  \ID SBSW_OS_RES_THREADGETLOCKS_001
; ..\component\Os\Implementation\Os_Resource.c	  1192   \DESCRIPTION    Os_ThreadGetLocks is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1193   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1194  
; ..\component\Os\Implementation\Os_Resource.c	  1195  \ID SBSW_OS_RES_RESOURCERESTORE_001
; ..\component\Os\Implementation\Os_Resource.c	  1196   \DESCRIPTION    Os_ResourceRestore is called with the return value of Os_ResourceLock2Resource and Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Resource.c	  1197                   The correctness of the return value of Os_ResourceLock2Resource is ensured by precondition.
; ..\component\Os\Implementation\Os_Resource.c	  1198   \COUNTERMEASURE \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Resource.c	  1199  
; ..\component\Os\Implementation\Os_Resource.c	  1200  \ID SBSW_OS_RES_RESOURCERESTORE_002
; ..\component\Os\Implementation\Os_Resource.c	  1201   \DESCRIPTION    Os_ResourceRestore is called with the return value of Os_ResourceId2Resource and Os_TaskThread2Task
; ..\component\Os\Implementation\Os_Resource.c	  1202   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1203                   \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Resource.c	  1204  
; ..\component\Os\Implementation\Os_Resource.c	  1205  \ID SBSW_OS_RES_LOCKLISTPOP_001
; ..\component\Os\Implementation\Os_Resource.c	  1206   \DESCRIPTION    Os_LockListPop is called with the return value of Os_ThreadGetLocks.
; ..\component\Os\Implementation\Os_Resource.c	  1207   \COUNTERMEASURE \N [CM_OS_THREADGETLOCKS_N]
; ..\component\Os\Implementation\Os_Resource.c	  1208  
; ..\component\Os\Implementation\Os_Resource.c	  1209  \ID SBSW_OS_RES_LOCKLISTPUSH_001
; ..\component\Os\Implementation\Os_Resource.c	  1210   \DESCRIPTION    Os_LockListPush is called with the return value of Os_ThreadGetLocks and a value derived from the
; ..\component\Os\Implementation\Os_Resource.c	  1211                   return value of Os_ResourceId2Resource. Precondition ensures that the return value of
; ..\component\Os\Implementation\Os_Resource.c	  1212                   Os_ThreadGetLocks is valid. The compliance of the precondition is check during review.
; ..\component\Os\Implementation\Os_Resource.c	  1213   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1214  
; ..\component\Os\Implementation\Os_Resource.c	  1215  \ID SBSW_OS_RES_COREASRGETTIMINGPROTECTION_001
; ..\component\Os\Implementation\Os_Resource.c	  1216   \DESCRIPTION    Os_CoreAsrGetTimingProtection is called with the return value of Os_ThreadGetCore.
; ..\component\Os\Implementation\Os_Resource.c	  1217   \COUNTERMEASURE \M [CM_OS_THREADGETCORE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1218  
; ..\component\Os\Implementation\Os_Resource.c	  1219  \ID SBSW_OS_RES_TPSTOPRESOURCE_001
; ..\component\Os\Implementation\Os_Resource.c	  1220   \DESCRIPTION    Os_TpStopResource is called with the return value of Os_CoreAsrGetTimingProtection and
; ..\component\Os\Implementation\Os_Resource.c	  1221                   Os_ThreadGetTpConfig.
; ..\component\Os\Implementation\Os_Resource.c	  1222   \COUNTERMEASURE \M [CM_OS_THREADGETTPCONFIG1_M]
; ..\component\Os\Implementation\Os_Resource.c	  1223                   \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Resource.c	  1224  
; ..\component\Os\Implementation\Os_Resource.c	  1225  \ID SBSW_OS_RES_THREADGETTPCONFIG_001
; ..\component\Os\Implementation\Os_Resource.c	  1226   \DESCRIPTION    Os_ThreadGetTpConfig is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1227   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1228  
; ..\component\Os\Implementation\Os_Resource.c	  1229  \ID SBSW_OS_RES_LOCKLISTISEMPTY_001
; ..\component\Os\Implementation\Os_Resource.c	  1230   \DESCRIPTION    Os_LockListIsEmpty is called with an iterator pointer which was initialized with a value passed
; ..\component\Os\Implementation\Os_Resource.c	  1231                   as argument to the caller function. The iterator is changed in a loop.
; ..\component\Os\Implementation\Os_Resource.c	  1232   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Resource.c	  1233  
; ..\component\Os\Implementation\Os_Resource.c	  1234  \ID SBSW_OS_RES_RESOURCEFORCERELEASELOCAL_001
; ..\component\Os\Implementation\Os_Resource.c	  1235   \DESCRIPTION    Os_ResourceForceReleaseLocal is called with an iterator.
; ..\component\Os\Implementation\Os_Resource.c	  1236   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Resource.c	  1237  
; ..\component\Os\Implementation\Os_Resource.c	  1238  \ID SBSW_OS_RES_RESOURCELOCK2RESOURCE_001
; ..\component\Os\Implementation\Os_Resource.c	  1239   \DESCRIPTION    Os_ResourceLock2Resource is called with the return value of Os_LockListGetTop.
; ..\component\Os\Implementation\Os_Resource.c	  1240   \COUNTERMEASURE \R [CM_LOCKLISTGETTOP_R]
; ..\component\Os\Implementation\Os_Resource.c	  1241  
; ..\component\Os\Implementation\Os_Resource.c	  1242  \ID SBSW_OS_RES_LOCKLISTISTOPRES_001
; ..\component\Os\Implementation\Os_Resource.c	  1243   \DESCRIPTION    Os_LockListIsTopRes is called with an iterator.
; ..\component\Os\Implementation\Os_Resource.c	  1244   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Resource.c	  1245  
; ..\component\Os\Implementation\Os_Resource.c	  1246  \ID SBSW_OS_RES_LOCKISRESOURCE_001
; ..\component\Os\Implementation\Os_Resource.c	  1247   \DESCRIPTION    Os_LockIsResource is called with the return value of Os_LockListGetTop.
; ..\component\Os\Implementation\Os_Resource.c	  1248   \COUNTERMEASURE \R [CM_LOCKLISTGETTOP_R]
; ..\component\Os\Implementation\Os_Resource.c	  1249  
; ..\component\Os\Implementation\Os_Resource.c	  1250  \ID SBSW_OS_RES_LOCKLISTNEXTITERATOR_001
; ..\component\Os\Implementation\Os_Resource.c	  1251   \DESCRIPTION    Os_LockListNextIterator is called with an iterator.
; ..\component\Os\Implementation\Os_Resource.c	  1252   \COUNTERMEASURE \R Loop condition ensures that the passed pointer is valid.
; ..\component\Os\Implementation\Os_Resource.c	  1253  
; ..\component\Os\Implementation\Os_Resource.c	  1254  \ID SBSW_OS_RES_THREADCHECKCALLCONTEXT_001
; ..\component\Os\Implementation\Os_Resource.c	  1255   \DESCRIPTION    Os_ThreadCheckCallContext is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1256   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1257  
; ..\component\Os\Implementation\Os_Resource.c	  1258  \ID SBSW_OS_RES_THREADISTASK_001
; ..\component\Os\Implementation\Os_Resource.c	  1259   \DESCRIPTION    Os_ThreadIsTask is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1260   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1261  
; ..\component\Os\Implementation\Os_Resource.c	  1262  \ID SBSW_OS_RES_THREADCHECKAREINTERRUPTSENABLED_001
; ..\component\Os\Implementation\Os_Resource.c	  1263   \DESCRIPTION    Os_ThreadCheckAreInterruptsEnabled is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1264   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1265  
; ..\component\Os\Implementation\Os_Resource.c	  1266  \ID SBSW_OS_RES_THREADGETCURRENTAPPLICATION_001
; ..\component\Os\Implementation\Os_Resource.c	  1267   \DESCRIPTION    Os_ThreadGetCurrentApplication is called with the return value of Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1268   \COUNTERMEASURE \N [CM_OS_COREGETTHREAD_N]
; ..\component\Os\Implementation\Os_Resource.c	  1269  
; ..\component\Os\Implementation\Os_Resource.c	  1270  \ID SBSW_OS_RES_COREASRCHECKISCORELOCAL_001
; ..\component\Os\Implementation\Os_Resource.c	  1271   \DESCRIPTION    Os_CoreAsrCheckIsCoreLocal is called with a Core value derived from the return value of
; ..\component\Os\Implementation\Os_Resource.c	  1272                   Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1273   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1274                   \M [CM_OS_RESOURCE_CORE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1275  
; ..\component\Os\Implementation\Os_Resource.c	  1276  \ID SBSW_OS_RES_APPCHECKACCESS_001
; ..\component\Os\Implementation\Os_Resource.c	  1277   \DESCRIPTION    Os_AppCheckAccess is called with the return value of Os_ThreadGetCurrentApplication.
; ..\component\Os\Implementation\Os_Resource.c	  1278   \COUNTERMEASURE \N [CM_OS_THREADGETCURRENTAPPLICATION_N]
; ..\component\Os\Implementation\Os_Resource.c	  1279  
; ..\component\Os\Implementation\Os_Resource.c	  1280  \ID SBSW_OS_RES_RESOURCEGETACCESSINGAPPLICATIONS_001
; ..\component\Os\Implementation\Os_Resource.c	  1281   \DESCRIPTION    Os_ResourceGetAccessingApplications is called with the return value of Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1282   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1283  
; ..\component\Os\Implementation\Os_Resource.c	  1284  \ID SBSW_OS_RES_LOCKCHECKISAVAILABLE_001
; ..\component\Os\Implementation\Os_Resource.c	  1285   \DESCRIPTION    Os_LockCheckIsAvailable is called with a value derived from the return value of Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1286   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1287  
; ..\component\Os\Implementation\Os_Resource.c	  1288  \ID SBSW_OS_RES_RESOURCECHECKPRIO_001
; ..\component\Os\Implementation\Os_Resource.c	  1289   \DESCRIPTION    Os_ResourceCheckPrio is called with the return values of Os_ResourceId2Resource and Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1290                   Precondition ensures that the pointer return by Os_CoreGetThread is valid. The compliance of the
; ..\component\Os\Implementation\Os_Resource.c	  1291                   precondition is check during review.
; ..\component\Os\Implementation\Os_Resource.c	  1292   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1293  
; ..\component\Os\Implementation\Os_Resource.c	  1294  \ID SBSW_OS_RES_TPSTARTRESOURCE_001
; ..\component\Os\Implementation\Os_Resource.c	  1295   \DESCRIPTION    Os_TpStartResource is called with the return value of Os_CoreAsrGetTimingProtection.
; ..\component\Os\Implementation\Os_Resource.c	  1296   \COUNTERMEASURE \M [CM_OS_COREASRGETTIMINGPROTECTION1_M]
; ..\component\Os\Implementation\Os_Resource.c	  1297  
; ..\component\Os\Implementation\Os_Resource.c	  1298  \ID SBSW_OS_RES_RESOURCEISINTRESOURCE_001
; ..\component\Os\Implementation\Os_Resource.c	  1299   \DESCRIPTION    Os_ResourceIsIntResource is called with the return value of Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1300   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1301  
; ..\component\Os\Implementation\Os_Resource.c	  1302  \ID SBSW_OS_RES_RESOURCE2RESOURCEINTERRUPT_001
; ..\component\Os\Implementation\Os_Resource.c	  1303   \DESCRIPTION    Os_Resource2ResourceInterrupt is called with the return value of Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1304   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1305  
; ..\component\Os\Implementation\Os_Resource.c	  1306  \ID SBSW_OS_RES_RESOURCEINTERRUPTSAVEANDINCREASE_001
; ..\component\Os\Implementation\Os_Resource.c	  1307   \DESCRIPTION    Os_ResourceInterruptSaveAndIncrease is called with the return value of Os_Resource2ResourceInterrupt.
; ..\component\Os\Implementation\Os_Resource.c	  1308   \COUNTERMEASURE \R [CM_RESOURCE2RESOURCEINTERRUPT_R]
; ..\component\Os\Implementation\Os_Resource.c	  1309  
; ..\component\Os\Implementation\Os_Resource.c	  1310  \ID SBSW_OS_RES_RESOURCESAVEANDINCREASE_001
; ..\component\Os\Implementation\Os_Resource.c	  1311   \DESCRIPTION    Os_ResourceSaveAndIncrease is called with the return value of Os_ResourceId2Resource and
; ..\component\Os\Implementation\Os_Resource.c	  1312                   Os_TaskThread2Task.
; ..\component\Os\Implementation\Os_Resource.c	  1313   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1314                   \R [CM_OS_TASKTHREAD2TASK_R]
; ..\component\Os\Implementation\Os_Resource.c	  1315  
; ..\component\Os\Implementation\Os_Resource.c	  1316  \ID SBSW_OS_RES_LOCKCHECKISOCCUPIED_001
; ..\component\Os\Implementation\Os_Resource.c	  1317   \DESCRIPTION    Os_LockCheckIsOccupied is called with a value derived from the return value of Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1318   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1319  
; ..\component\Os\Implementation\Os_Resource.c	  1320  \ID SBSW_OS_RES_LOCKLISTCHECKISLISTTOP_001
; ..\component\Os\Implementation\Os_Resource.c	  1321   \DESCRIPTION    Os_LockListCheckIsListTop is called with the return value of Os_ThreadGetLocks and a value derived
; ..\component\Os\Implementation\Os_Resource.c	  1322                   from the return value of Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1323                   Precondition ensures that the pointer returned by Os_ThreadGetLocks is valid. The compliance of the
; ..\component\Os\Implementation\Os_Resource.c	  1324                   precondition is check during review.
; ..\component\Os\Implementation\Os_Resource.c	  1325   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1326  
; ..\component\Os\Implementation\Os_Resource.c	  1327  \ID SBSW_OS_RES_COREGETSCHEDULER_001
; ..\component\Os\Implementation\Os_Resource.c	  1328   \DESCRIPTION    Os_CoreGetScheduler is called with a Core object derived from the return value of
; ..\component\Os\Implementation\Os_Resource.c	  1329                   Os_ResourceId2Resource.
; ..\component\Os\Implementation\Os_Resource.c	  1330   \COUNTERMEASURE \M [CM_OS_RESOURCEID2RESOURCE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1331                   \M [CM_OS_RESOURCE_CORE_M]
; ..\component\Os\Implementation\Os_Resource.c	  1332  
; ..\component\Os\Implementation\Os_Resource.c	  1333  \ID SBSW_OS_RES_SCHEDULERTASKSWITCHISNEEDED_001
; ..\component\Os\Implementation\Os_Resource.c	  1334   \DESCRIPTION    Os_SchedulerTaskSwitchIsNeeded is called with the return value of Os_CoreGetScheduler.
; ..\component\Os\Implementation\Os_Resource.c	  1335   \COUNTERMEASURE \M [CM_OS_COREGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Resource.c	  1336  
; ..\component\Os\Implementation\Os_Resource.c	  1337  \ID SBSW_OS_RES_SCHEDULER_ROBROUND_001
; ..\component\Os\Implementation\Os_Resource.c	  1338   \DESCRIPTION    Os_SchedulerRobRound is called with the return value of Os_CoreGetScheduler.
; ..\component\Os\Implementation\Os_Resource.c	  1339   \COUNTERMEASURE \M [CM_OS_COREGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Resource.c	  1340  
; ..\component\Os\Implementation\Os_Resource.c	  1341  \ID SBSW_OS_RES_TASKSWITCH_001
; ..\component\Os\Implementation\Os_Resource.c	  1342   \DESCRIPTION    Os_TaskSwitch is called with the return values of Os_CoreGetScheduler and Os_CoreGetThread.
; ..\component\Os\Implementation\Os_Resource.c	  1343                   Precondition ensures that the pointer return by Os_CoreGetThread is valid. The compliance of the
; ..\component\Os\Implementation\Os_Resource.c	  1344                   precondition is check during review.
; ..\component\Os\Implementation\Os_Resource.c	  1345   \COUNTERMEASURE \M [CM_OS_COREGETSCHEDULER_M]
; ..\component\Os\Implementation\Os_Resource.c	  1346  
; ..\component\Os\Implementation\Os_Resource.c	  1347  \ID SBSW_OS_RES_ISRHALINTLEVEL2COREINTLEVEL_001
; ..\component\Os\Implementation\Os_Resource.c	  1348   \DESCRIPTION    Os_IsrHalIntLevel2CoreIntLevel is called with a pointer to a local variable and the interrupt level
; ..\component\Os\Implementation\Os_Resource.c	  1349                   of a resource. Precondition ensures that the argument passed to the caller is valid. The compliance
; ..\component\Os\Implementation\Os_Resource.c	  1350                   of the precondition is check during review.
; ..\component\Os\Implementation\Os_Resource.c	  1351   \COUNTERMEASURE \M [CM_OS_RESOURCEINTERRUPT_INTERRUPTLEVEL_M]
; ..\component\Os\Implementation\Os_Resource.c	  1352  
; ..\component\Os\Implementation\Os_Resource.c	  1353  SBSW_JUSTIFICATION_END */
; ..\component\Os\Implementation\Os_Resource.c	  1354  
; ..\component\Os\Implementation\Os_Resource.c	  1355  /*
; ..\component\Os\Implementation\Os_Resource.c	  1356  \CM CM_OS_RESOURCEID2RESOURCE_M
; ..\component\Os\Implementation\Os_Resource.c	  1357        Verify that:
; ..\component\Os\Implementation\Os_Resource.c	  1358          1. each resource pointer in OsCfg_ResourceRefs is no NULL_PTR,
; ..\component\Os\Implementation\Os_Resource.c	  1359          2. the size of OsCfg_ResourceRefs is equal to OS_RESOURCEID_COUNT + 1 and
; ..\component\Os\Implementation\Os_Resource.c	  1360          3. each element in ResourceType has a lower value than OS_RESOURCEID_COUNT.
; ..\component\Os\Implementation\Os_Resource.c	  1361  
; ..\component\Os\Implementation\Os_Resource.c	  1362  \CM CM_OS_RESOURCEGETDYN_M
; ..\component\Os\Implementation\Os_Resource.c	  1363        Verify that the Dyn pointer of each Os_ResourceConfigType object is a non NULL_PTR.
; ..\component\Os\Implementation\Os_Resource.c	  1364  
; ..\component\Os\Implementation\Os_Resource.c	  1365  \CM CM_OS_RESOURCEINTERRUPTGETDYN_M
; ..\component\Os\Implementation\Os_Resource.c	  1366        Verify that the Lock Dyn pointer of each Os_ResourceInterruptConfigType object is initialized with a
; ..\component\Os\Implementation\Os_Resource.c	  1367        dynamic resource derived from an Os_ResourceInterruptType object.
; ..\component\Os\Implementation\Os_Resource.c	  1368  
; ..\component\Os\Implementation\Os_Resource.c	  1369  \CM CM_OS_RESOURCEINTERRUPT_INTERRUPTLEVEL_M
; ..\component\Os\Implementation\Os_Resource.c	  1370        Verify that the InterruptLevel pointer of each Os_ResourceInterruptConfigType object is initialized with a
; ..\component\Os\Implementation\Os_Resource.c	  1371        valid Os_Hal_IntLevelType object.
; ..\component\Os\Implementation\Os_Resource.c	  1372  
; ..\component\Os\Implementation\Os_Resource.c	  1373  \CM CM_RESOURCE2RESOURCEINTERRUPT_R
; ..\component\Os\Implementation\Os_Resource.c	  1374        The caller ensures by runtime check, that the object passed to Os_Resource2ResourceInterrupt is a interrupt
; ..\component\Os\Implementation\Os_Resource.c	  1375        resource. Therefore the return pointer of Os_Resource2ResourceInterrupt is valid.
; ..\component\Os\Implementation\Os_Resource.c	  1376  
; ..\component\Os\Implementation\Os_Resource.c	  1377  \CM CM_OS_RESOURCE_CORE_M
; ..\component\Os\Implementation\Os_Resource.c	  1378        Verify that the Core pointer of each Os_ResourceConfigType object is initialized with a non NULL_PTR.
; ..\component\Os\Implementation\Os_Resource.c	  1379  
; ..\component\Os\Implementation\Os_Resource.c	  1380  
; ..\component\Os\Implementation\Os_Resource.c	  1381  */
; ..\component\Os\Implementation\Os_Resource.c	  1382  
; ..\component\Os\Implementation\Os_Resource.c	  1383  
; ..\component\Os\Implementation\Os_Resource.c	  1384  /*!
; ..\component\Os\Implementation\Os_Resource.c	  1385   * \}
; ..\component\Os\Implementation\Os_Resource.c	  1386   */
; ..\component\Os\Implementation\Os_Resource.c	  1387  
; ..\component\Os\Implementation\Os_Resource.c	  1388  /***********************************************************************************************************************
; ..\component\Os\Implementation\Os_Resource.c	  1389   *  END OF FILE: Os_Resource.c
; ..\component\Os\Implementation\Os_Resource.c	  1390   **********************************************************************************************************************/

	; Module end
